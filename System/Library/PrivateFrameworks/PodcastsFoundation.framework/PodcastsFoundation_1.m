unint64_t sub_1ACAB5078()
{
  unint64_t result;

  result = qword_1E99F1828;
  if (!qword_1E99F1828)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1828);
  }
  return result;
}

unint64_t sub_1ACAB50CC()
{
  unint64_t result = qword_1E99F1840;
  if (!qword_1E99F1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1840);
  }
  return result;
}

unint64_t sub_1ACAB5120()
{
  unint64_t result = qword_1E99F1858;
  if (!qword_1E99F1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1858);
  }
  return result;
}

uint64_t sub_1ACAB5174(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACAB51E0()
{
  unint64_t result = qword_1E99F1868;
  if (!qword_1E99F1868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1868);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestResponse.CodingKeys()
{
  return &type metadata for ContentKeyRequestResponse.CodingKeys;
}

uint64_t destroy for ContentKeyRequestNonceResponse()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentKeyRequestNonceResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContentKeyRequestNonceResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentKeyRequestNonceResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestNonceResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestNonceResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestNonceResponse()
{
  return &type metadata for ContentKeyRequestNonceResponse;
}

uint64_t destroy for ContentKeyRequestLicenseResponse()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentKeyRequestLicenseResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContentKeyRequestLicenseResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContentKeyRequestLicenseResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestLicenseResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKeyRequestLicenseResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestLicenseResponse()
{
  return &type metadata for ContentKeyRequestLicenseResponse;
}

unint64_t sub_1ACAB5614()
{
  unint64_t result = qword_1E99F1870;
  if (!qword_1E99F1870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1870);
  }
  return result;
}

unint64_t sub_1ACAB566C()
{
  unint64_t result = qword_1E99F1878;
  if (!qword_1E99F1878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1878);
  }
  return result;
}

unint64_t sub_1ACAB56C4()
{
  unint64_t result = qword_1E99F1880;
  if (!qword_1E99F1880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1880);
  }
  return result;
}

uint64_t sub_1ACAB5718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACAB5848(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1898);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1ACAB5D50();
  sub_1ACE77C48();
  if (!v1)
  {
    char v12 = 0;
    uint64_t v7 = sub_1ACE77688();
    char v11 = 1;
    sub_1ACE77688();
    char v10 = 2;
    sub_1ACE775F8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

uint64_t sub_1ACAB5A20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1888);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAB5CFC();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_1ACE77688();
  char v30 = 1;
  uint64_t v10 = sub_1ACE77688();
  char v29 = 2;
  uint64_t v11 = sub_1ACE77618();
  int v24 = v12;
  uint64_t v25 = v11;
  char v28 = 3;
  uint64_t v13 = sub_1ACE775F8();
  uint64_t v15 = v14;
  uint64_t v22 = v13;
  char v27 = 4;
  swift_bridgeObjectRetain();
  uint64_t v23 = v15;
  uint64_t v16 = sub_1ACE77618();
  HIDWORD(v20) = v17;
  uint64_t v21 = v16;
  char v26 = 5;
  LOBYTE(v15) = sub_1ACE77608();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  uint64_t v18 = v23;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v25;
  *(unsigned char *)(a2 + 24) = v24 & 1;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v21;
  *(unsigned char *)(a2 + 56) = BYTE4(v20) & 1;
  *(unsigned char *)(a2 + 57) = v15;
  return result;
}

unint64_t sub_1ACAB5CFC()
{
  unint64_t result = qword_1E99F1890;
  if (!qword_1E99F1890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1890);
  }
  return result;
}

unint64_t sub_1ACAB5D50()
{
  unint64_t result = qword_1E99F18A0;
  if (!qword_1E99F18A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18A0);
  }
  return result;
}

unsigned char *_s18PodcastsFoundation25ContentKeyRequestResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAB5E70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestNonceResponse.CodingKeys()
{
  return &type metadata for ContentKeyRequestNonceResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ContentKeyRequestLicenseResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentKeyRequestLicenseResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAB6004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKeyRequestLicenseResponse.CodingKeys()
{
  return &type metadata for ContentKeyRequestLicenseResponse.CodingKeys;
}

unint64_t sub_1ACAB6040()
{
  unint64_t result = qword_1E99F18B8;
  if (!qword_1E99F18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18B8);
  }
  return result;
}

unint64_t sub_1ACAB6098()
{
  unint64_t result = qword_1E99F18C0;
  if (!qword_1E99F18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18C0);
  }
  return result;
}

unint64_t sub_1ACAB60F0()
{
  unint64_t result = qword_1E99F18C8;
  if (!qword_1E99F18C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18C8);
  }
  return result;
}

unint64_t sub_1ACAB6148()
{
  unint64_t result = qword_1E99F18D0;
  if (!qword_1E99F18D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18D0);
  }
  return result;
}

unint64_t sub_1ACAB61A0()
{
  unint64_t result = qword_1E99F18D8;
  if (!qword_1E99F18D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18D8);
  }
  return result;
}

unint64_t sub_1ACAB61F8()
{
  unint64_t result = qword_1E99F18E0;
  if (!qword_1E99F18E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F18E0);
  }
  return result;
}

uint64_t Loadable.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 2, a1);
}

uint64_t Loadable.item.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
}

BOOL Loadable.isLoaded.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 48))(v4, 2) == 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

BOOL Loadable.notLoaded.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  int v5 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 48))(v4, 2);
  if (v5 != 1) {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  return v5 == 1;
}

BOOL Loadable.failed.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  int v5 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 48))(v4, 2);
  if (v5 != 2) {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  return v5 == 2;
}

uint64_t Loadable.coalescing(update:keepLoadedDataOnFailure:droppingNewNotLoadeds:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6 = v5;
  int v25 = a2;
  int v26 = a3;
  char v28 = a5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  int v12 = (char *)&v24 - v11;
  uint64_t v13 = (char *)&v24 + *(int *)(v10 + 56) - v11;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v27 = v6;
  v15((char *)&v24 - v11, v6, a4);
  v15(v13, a1, a4);
  uint64_t v16 = *(void *)(a4 + 16);
  int v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  int v18 = v17(v13, 2, v16);
  if (!v18)
  {
    v15(v28, a1, a4);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v14 + 8);
    v21(v13, a4);
    return ((uint64_t (*)(char *, uint64_t))v21)(v12, a4);
  }
  v19 = v28;
  if (v18 == 1)
  {
    char v20 = v26;
  }
  else
  {
    if (v17(v12, 2, v16)) {
      return ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v19, a1, a4);
    }
    char v20 = v25;
  }
  if (v20) {
    uint64_t v23 = v27;
  }
  else {
    uint64_t v23 = a1;
  }
  v15(v19, v23, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v12, a4);
}

uint64_t Loadable.coalesce(update:keepLoadedDataOnFailure:droppingNewNotLoadeds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Loadable.coalescing(update:keepLoadedDataOnFailure:droppingNewNotLoadeds:)(v7, v10, v11, v12, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, v9, a4);
}

uint64_t Loadable.map<A>(_:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  int v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, v15);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 2, v7);
  if (!v16)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    a1(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v16, 2, a3);
}

uint64_t static Loadable<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  char v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Loadable();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v32 = (char *)&v27 - v11;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v30 = v10;
  uint64_t v31 = v14;
  int v17 = (char *)&v27 + *(int *)(v14 + 48) - v15;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18((char *)&v27 - v15, a1, v9);
  v18(v17, a2, v9);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v20 = v19(v16, 2, a3);
  if (v20)
  {
    if (v20 == 1)
    {
      if (v19(v17, 2, a3) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    if (v19(v17, 2, a3) == 2)
    {
LABEL_8:
      char v21 = 1;
LABEL_11:
      uint64_t v13 = v30;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v27 = v7;
    v18(v32, (uint64_t)v16, v9);
    if (!v19(v17, 2, a3))
    {
      uint64_t v22 = v27;
      uint64_t v23 = v28;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v28, v17, a3);
      uint64_t v24 = v32;
      char v21 = sub_1ACE76168();
      int v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v25(v23, a3);
      v25(v24, a3);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, a3);
  }
LABEL_9:
  char v21 = 0;
  uint64_t v9 = v31;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v9);
  return v21 & 1;
}

uint64_t type metadata accessor for Loadable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACAB6FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Loadable<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_1ACAB6FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1ACAB6FDC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACAB7058(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            uint64_t v18 = 4;
          }
          else
          {
            BOOL v20 = v19 != 0;
            BOOL v13 = v19 >= 0xFF;
            uint64_t v18 = 2;
            if (!v13) {
              uint64_t v18 = v20;
            }
          }
        }
        else
        {
          uint64_t v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
    }
  }
  else
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1ACAB7250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 2, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1ACAB7314(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_1ACAB7464(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

void *sub_1ACAB7634(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_1ACAB7784(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_1ACAB7954(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v7);
      if (!v14) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_30:
      if (v6)
      {
        unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v19 >= 3) {
          return v19 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_30;
  }
LABEL_20:
  int v16 = (v14 - 1) << v13;
  if (v7 > 3) {
    int v16 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v17 = v7;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_1ACAB7B48(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v9 < 4)
    {
      int v17 = (v16 >> (8 * v9)) + 1;
      if (v9)
      {
        int v19 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v9] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1ACAB7DCCLL);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        BOOL v20 = *(void (**)(void))(v6 + 56);
        v20();
      }
      return;
  }
}

uint64_t sub_1ACAB7DF4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 2);
}

uint64_t sub_1ACAB7E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 2);
}

uint64_t *sub_1ACAB83D0()
{
  swift_bridgeObjectRelease();
  sub_1ACA76F34(v0[4]);
  sub_1ACA76F34(v0[6]);
  sub_1ACA76F34(v0[8]);
  sub_1ACA76F34(v0[10]);
  sub_1ACA76F34(v0[12]);
  sub_1ACA76F34(v0[14]);
  sub_1ACA76F34(v0[16]);
  sub_1ACA76F34(v0[18]);
  sub_1ACA76F34(v0[20]);
  sub_1ACA76F34(v0[22]);
  sub_1ACA76F34(v0[24]);
  sub_1ACA76F34(v0[26]);
  return v0;
}

uint64_t sub_1ACAB8450()
{
  sub_1ACAB83D0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayKeySessionMock()
{
  return self;
}

uint64_t sub_1ACAB84A8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t SyncKeysRepository.isSubscriptionSyncDirty(for:)(uint64_t a1)
{
  if ((isRunningUnitTests() & 1) == 0
    && objc_msgSend(self, sel_isRunningOnHomepod)
    && (uint64_t v10 = &type metadata for Podcasts,
        unint64_t v11 = sub_1ACA56248(),
        LOBYTE(v9[0]) = 26,
        char v3 = sub_1ACE75298(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v9),
        (v3 & 1) != 0))
  {
    char v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_beginAccess();
    sub_1ACA3E158(v5, (uint64_t)v9);
    uint64_t v6 = v10;
    unint64_t v7 = v11;
    __swift_project_boxed_opaque_existential_1(v9, (uint64_t)v10);
    char v4 = (*(uint64_t (**)(uint64_t, ValueMetadata *, unint64_t))(v7 + 80))(a1, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  return v4 & 1;
}

uint64_t SyncKeysRepository.markSubscriptionSyncDirty(_:for:)(char a1, uint64_t a2)
{
  if ((isRunningUnitTests() & 1) != 0
    || !objc_msgSend(self, sel_isRunningOnHomepod)
    || (unint64_t v11 = &type metadata for Podcasts,
        unint64_t v12 = sub_1ACA56248(),
        LOBYTE(v10[0]) = 26,
        char v5 = sub_1ACE75298(),
        uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10),
        (v5 & 1) == 0))
  {
    uint64_t v7 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
    swift_beginAccess();
    sub_1ACA3E158(v7, (uint64_t)v10);
    unsigned int v8 = v11;
    unint64_t v9 = v12;
    __swift_project_boxed_opaque_existential_1(v10, (uint64_t)v11);
    (*(void (**)(void, uint64_t, ValueMetadata *, unint64_t))(v9 + 88))(a1 & 1, a2, v8, v9);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  return result;
}

uint64_t sub_1ACAB86E4()
{
  uint64_t v0 = type metadata accessor for SyncKeysUserDefaultsStore();
  swift_allocObject();
  v6[3] = v0;
  v6[4] = &off_1F038C288;
  v6[0] = sub_1ACB759EC();
  uint64_t v1 = (objc_class *)type metadata accessor for SyncKeysRepository();
  id v2 = objc_allocWithZone(v1);
  sub_1ACA3E158((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  v5.receiver = v2;
  v5.super_class = v1;
  swift_retain();
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  uint64_t result = swift_release();
  qword_1EB7693B0 = (uint64_t)v3;
  return result;
}

id static SyncKeysRepository.shared.getter()
{
  if (qword_1EB7693C0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB7693B0;
  return v0;
}

id SyncKeysRepository.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SyncKeysRepository.init()()
{
}

id SyncKeysRepository.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SyncKeysRepository.isNonFollowedShowsSyncDirty.getter()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isNonFollowedShowsSyncDirty.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1ACAB8BA4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1ACAB8C3C(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isNonFollowedShowsSyncDirty.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  swift_endAccess();
  *((unsigned char *)v3 + 40) = v5 & 1;
  return sub_1ACAB8D90;
}

void sub_1ACAB8D90(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 40);
  uint64_t v3 = *(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.isInterestSyncDirty.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isInterestSyncDirty.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1ACAB90A0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  uint64_t result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1ACAB9138(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isInterestSyncDirty.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  swift_endAccess();
  *((unsigned char *)v3 + 40) = v5 & 1;
  return sub_1ACAB928C;
}

void sub_1ACAB928C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 40);
  uint64_t v3 = *(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.isPlaylistSyncDirty.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isPlaylistSyncDirty.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1ACAB959C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  uint64_t result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1ACAB9634(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isPlaylistSyncDirty.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
  swift_endAccess();
  *((unsigned char *)v3 + 40) = v5 & 1;
  return sub_1ACAB9788;
}

void sub_1ACAB9788(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 40);
  uint64_t v3 = *(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t static SyncKeysRepository.shouldSyncInReadOnlyMode.getter()
{
  if ((isRunningUnitTests() & 1) != 0 || !objc_msgSend(self, sel_isRunningOnHomepod))
  {
    char v0 = 0;
  }
  else
  {
    uint64_t v3 = &type metadata for Podcasts;
    unint64_t v4 = sub_1ACA56248();
    v2[0] = 26;
    char v0 = sub_1ACE75298();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  }
  return v0 & 1;
}

uint64_t SyncKeysRepository.subscriptionsSyncVersion(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 96))(a1, v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  return v6;
}

uint64_t SyncKeysRepository.updateSubscriptionsSyncVersion(for:newValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v7, (uint64_t)v11);
  uint64_t v8 = v12;
  uint64_t v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 104))(a1, a2, a3, v8, v9);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
}

uint64_t SyncKeysRepository.resetSubscriptionsSyncVersion(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v7);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t SyncKeysRepository.isBookmarksSyncDirty(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v7);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  LOBYTE(a1) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 120))(a1, v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  return a1 & 1;
}

uint64_t SyncKeysRepository.markBookmarksSyncDirty(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v5, (uint64_t)v9);
  uint64_t v6 = v10;
  uint64_t v7 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 128))(a1, a2, v6, v7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
}

Swift::Void __swiftcall SyncKeysRepository.markInterestSyncDirty(_:)(Swift::Bool a1)
{
  BOOL v2 = a1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v6);
  uint64_t v4 = v7;
  uint64_t v5 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v5 + 280))(v2, v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t SyncKeysRepository.nonFollowedShowsSyncVersion.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t SyncKeysRepository.nonFollowedShowsSyncVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 192))(a1, a2, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1ACABA4EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 184))(v4, v5);
  uint64_t v8 = v7;
  uint64_t result = swift_endAccess();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_1ACABA584(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 192);
  swift_bridgeObjectRetain();
  v7(v2, v3, v5, v6);
  return swift_endAccess();
}

void (*SyncKeysRepository.nonFollowedShowsSyncVersion.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 184))(v6, v7);
  uint64_t v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  v3[4] = v10;
  return sub_1ACABA6F8;
}

void sub_1ACABA6F8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  uint64_t v6 = *(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 192);
  if (a2)
  {
    swift_bridgeObjectRetain();
    v9(v4, v5, v7, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9(v4, v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t SyncKeysRepository.interestSyncVersion.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 232))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t SyncKeysRepository.interestSyncVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 240))(a1, a2, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1ACABAAE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 232))(v4, v5);
  uint64_t v8 = v7;
  uint64_t result = swift_endAccess();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_1ACABAB78(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 240);
  swift_bridgeObjectRetain();
  v7(v2, v3, v5, v6);
  return swift_endAccess();
}

void (*SyncKeysRepository.interestSyncVersion.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 232))(v6, v7);
  uint64_t v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  v3[4] = v10;
  return sub_1ACABACEC;
}

void sub_1ACABACEC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  uint64_t v6 = *(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 240);
  if (a2)
  {
    swift_bridgeObjectRetain();
    v9(v4, v5, v7, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9(v4, v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t SyncKeysRepository.podcastsDomainVersion.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 208))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t SyncKeysRepository.podcastsDomainVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 216))(a1, a2, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1ACABB0D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  uint64_t v8 = v7;
  uint64_t result = swift_endAccess();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_1ACABB16C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 216);
  swift_bridgeObjectRetain();
  v7(v2, v3, v5, v6);
  return swift_endAccess();
}

void (*SyncKeysRepository.podcastsDomainVersion.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 208))(v6, v7);
  uint64_t v10 = v9;
  swift_endAccess();
  v3[3] = v8;
  v3[4] = v10;
  return sub_1ACABB2E0;
}

void sub_1ACABB2E0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  uint64_t v6 = *(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 216);
  if (a2)
  {
    swift_bridgeObjectRetain();
    v9(v4, v5, v7, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9(v4, v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t SyncKeysRepository.isLibrarySyncEnabled.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
  swift_endAccess();
  return v1 & 1;
}

uint64_t SyncKeysRepository.isLibrarySyncEnabled.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144))(a1, v4, v5);
  return swift_endAccess();
}

uint64_t sub_1ACABB650@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v3, v4);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 136))(v4, v5);
  uint64_t result = swift_endAccess();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1ACABB6E8(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144))(v2, v4, v5);
  return swift_endAccess();
}

void (*SyncKeysRepository.isLibrarySyncEnabled.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 136))(v6, v7);
  swift_endAccess();
  *((unsigned char *)v3 + 40) = v5 & 1;
  return sub_1ACABB83C;
}

void sub_1ACABB83C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 40);
  uint64_t v3 = *(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144))(v2, v4, v5);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t sub_1ACABB974@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 160))(v4, v5);
  LOBYTE(v4) = v7;
  uint64_t result = swift_endAccess();
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1ACABBA14(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 168))(v2, v3, v5, v6);
  return swift_endAccess();
}

uint64_t SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.setter(uint64_t a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 168))(a1, v4, v6, v7);
  return swift_endAccess();
}

void (*SyncKeysRepository.nonFollowedShowsLastSyncTimestamp.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 160))(v6, v7);
  LOBYTE(v6) = v9;
  swift_endAccess();
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v6 & 1;
  return sub_1ACABBC20;
}

void sub_1ACABBC20(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 168))(v2, v3, v5, v6);
  swift_endAccess();
  free(v1);
}

uint64_t SyncKeysRepository.interestLastSyncTimestamp.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 256))(v2, v3);
  swift_endAccess();
  return v4;
}

uint64_t sub_1ACABBD60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 256))(v4, v5);
  LOBYTE(v4) = v7;
  uint64_t result = swift_endAccess();
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1ACABBE00(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 264))(v2, v3, v5, v6);
  return swift_endAccess();
}

uint64_t SyncKeysRepository.interestLastSyncTimestamp.setter(uint64_t a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 264))(a1, v4, v6, v7);
  return swift_endAccess();
}

void (*SyncKeysRepository.interestLastSyncTimestamp.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 256))(v6, v7);
  LOBYTE(v6) = v9;
  swift_endAccess();
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v6 & 1;
  return sub_1ACABC00C;
}

void sub_1ACABC00C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 264))(v2, v3, v5, v6);
  swift_endAccess();
  free(v1);
}

double SyncKeysRepository.subscriptionsLastSyncTimestamp(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v10);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  double v6 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 336))(a1, v4, v5));
  if (v7) {
    double v8 = 0.0;
  }
  else {
    double v8 = v6;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v8;
}

uint64_t SyncKeysRepository.updateSubscriptionsLastSyncTimestamp(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v7);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 344))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t SyncKeysRepository.resetSubscriptionsLastSyncTimestamp(for:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
  swift_beginAccess();
  sub_1ACA3E158(v3, (uint64_t)v7);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 352))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t type metadata accessor for SyncKeysRepository()
{
  return self;
}

uint64_t method lookup function for SyncKeysRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SyncKeysRepository);
}

void NSUserDefaults.fairPlayVersion.getter(BOOL *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_stringForKey_, v3);

  if (v4)
  {
    sub_1ACE761B8();

    uint64_t v5 = sub_1ACE775B8();
    swift_bridgeObjectRelease();
    BOOL v6 = 0;
    if (v5) {
      BOOL v6 = v5 == 1;
    }
  }
  else
  {
    BOOL v6 = 0;
  }
  *a1 = v6;
}

void NSUserDefaults.fairPlayVersion.setter()
{
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v2 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);
}

void (*NSUserDefaults.fairPlayVersion.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  NSUserDefaults.fairPlayVersion.getter((BOOL *)(a1 + 8));
  return sub_1ACABC7C8;
}

void sub_1ACABC7C8(void **a1)
{
  uint64_t v1 = *a1;
  id v3 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValue_forKey_, v3, v2);
}

uint64_t NSUserDefaults.isFairPlayV2Enabled.getter()
{
  char v0 = sub_1ACABCA90();
  if (v0 != 2) {
    return v0 & 1;
  }
  uint64_t v1 = qword_1E99F1900;
  id v2 = off_1E99F1908;
  swift_bridgeObjectRetain();
  LOBYTE(v1) = sub_1ACABCBA4(v1, (uint64_t)v2, 1);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1ACABC8EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACABCA90();
  if (result == 2)
  {
    uint64_t v3 = qword_1E99F1900;
    id v4 = off_1E99F1908;
    swift_bridgeObjectRetain();
    char v5 = sub_1ACABCBA4(v3, (uint64_t)v4, 1);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = result & 1;
  }
  *a1 = v5 & 1;
  return result;
}

void sub_1ACABC968(uint64_t a1, void **a2)
{
  id v2 = *a2;
  uint64_t v3 = (void *)sub_1ACE766C8();
  swift_bridgeObjectRetain();
  id v4 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void NSUserDefaults.isFairPlayV2Enabled.setter()
{
  uint64_t v1 = (void *)sub_1ACE766C8();
  swift_bridgeObjectRetain();
  id v2 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);
}

uint64_t sub_1ACABCA90()
{
  if (!objc_msgSend(self, sel_isRunningOnInternalOS)) {
    return 2;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1ACA9D6FC((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_1ACA65828((uint64_t)v6);
    return 2;
  }
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 2;
  }
}

uint64_t sub_1ACABCBA4(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = (void *)sub_1ACE76178();
  id v6 = objc_msgSend(v3, sel_objectForKey_, v5);

  if (v6)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1ACA9D6FC((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    if (swift_dynamicCast()) {
      a3 = v8;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)v10);
  }
  return a3 & 1;
}

void (*NSUserDefaults.isFairPlayV2Enabled.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  char v3 = sub_1ACABCA90();
  if (v3 == 2)
  {
    uint64_t v4 = qword_1E99F1900;
    char v5 = off_1E99F1908;
    swift_bridgeObjectRetain();
    char v6 = sub_1ACABCBA4(v4, (uint64_t)v5, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = v3 & 1;
  }
  *(unsigned char *)(a1 + 8) = v6 & 1;
  return sub_1ACABCD18;
}

void sub_1ACABCD18(void **a1)
{
  uint64_t v1 = *a1;
  id v3 = (id)sub_1ACE766C8();
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValue_forKey_, v3, v2);
}

id sub_1ACABCDB0(void *a1)
{
  id v1 = a1;
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_integerForKey_, v2);

  return v3;
}

id NSUserDefaults.fairPlayMigrationRetryCount.getter()
{
  swift_bridgeObjectRetain();
  id v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  return v2;
}

void sub_1ACABCE9C(void *a1)
{
  id v1 = a1;
  id v2 = (void *)sub_1ACE76A58();
  swift_bridgeObjectRetain();
  id v3 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);
}

void NSUserDefaults.fairPlayMigrationRetryCount.setter()
{
  id v1 = (void *)sub_1ACE76A58();
  swift_bridgeObjectRetain();
  id v2 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);
}

void sub_1ACABCFD0(unsigned char *a1@<X8>)
{
  NSUserDefaults.fairPlayVersion.getter(&v2);
  *a1 = v2;
}

void sub_1ACABD00C()
{
}

char *keypath_get_selector_fairPlayMigrationRetryCount()
{
  return sel_fairPlayMigrationRetryCount;
}

id sub_1ACABD058@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fairPlayMigrationRetryCount);
  *a2 = result;
  return result;
}

id sub_1ACABD08C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFairPlayMigrationRetryCount_, *a1);
}

unint64_t EpisodeUnavailableReason.init(rawValue:)(unint64_t a1)
{
  return sub_1ACABD0F4(a1);
}

unint64_t sub_1ACABD0C0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1ACABD0F4(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1ACABD0F4(unint64_t result)
{
  if (result > 0xE) {
    return 0;
  }
  return result;
}

unint64_t sub_1ACABD108()
{
  unint64_t result = qword_1E99F1930;
  if (!qword_1E99F1930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1930);
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUnavailableReason()
{
  return &type metadata for EpisodeUnavailableReason;
}

uint64_t EpisodeStateController.stateTransitionRules.getter()
{
  return swift_bridgeObjectRetain();
}

void *EpisodeStateController.__allocating_init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  char v4 = sub_1ACABE2E0(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

void *EpisodeStateController.init(dataSources:transitionRules:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = sub_1ACABE2E0(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1ACABD204(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACABE178(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACABD264()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for AnyEpisodeStateDataSource();
  uint64_t v3 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AD118820](v3, v2))
  {
    uint64_t v4 = 4;
    do
    {
      uint64_t v5 = v4 - 4;
      char v6 = sub_1ACE76618();
      sub_1ACE765B8();
      if (v6)
      {
        swift_retain();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_1ACE772C8();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1))
        {
LABEL_9:
          __break(1u);
          break;
        }
      }
      sub_1ACB5C124();
      swift_release();
      ++v4;
    }
    while (v7 != MEMORY[0x1AD118820](v1, v2));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACABD3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  char v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  char v8 = &v13[-v7];
  uint64_t v9 = v1 + qword_1EB767C08;
  swift_beginAccess();
  sub_1ACA2EDE8(v9, (uint64_t)v8);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1ACA2EE50((uint64_t)v8);
  sub_1ACABD588();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1ACABEA08((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1ACABD588()
{
  if (qword_1EB768FB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_1EB768FA8;
  swift_retain();
  return sub_1ACE753B8();
}

uint64_t sub_1ACABD62C()
{
  type metadata accessor for EpisodeStateMachine();
  sub_1ACE76D08();
  return v1;
}

uint64_t sub_1ACABD6E4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  v75 = a5;
  uint64_t v7 = a1;
  int v8 = a4 & 1;
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(*(void *)a1 + 80);
  uint64_t v78 = sub_1ACE76FD8();
  uint64_t v66 = *(void *)(v78 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v78);
  v65 = (char *)&v56 - v12;
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v67 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v69 = (char *)&v56 - v15;
  uint64_t v16 = sub_1ACE753F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v72 = v16;
  uint64_t v73 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v71 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v7 + 24;
  swift_beginAccess();
  uint64_t v19 = *((void *)v7 + 3);
  v82[0] = a2;
  v82[1] = a3;
  int v79 = v8;
  char v83 = v8;
  swift_bridgeObjectRetain();
  sub_1ACA72530(a2, a3, v8);
  BOOL v20 = *(char **)(v9 + 88);
  uint64_t v21 = *(void *)(v9 + 96);
  uint64_t v70 = v10;
  uint64_t v22 = type metadata accessor for EpisodeStateMachine();
  unint64_t v23 = sub_1ACABEA70();
  MEMORY[0x1AD118260](v80, v82, v19, &type metadata for EpisodeStateIdentifier, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1ACA91B68(a2, a3, v79);
  uint64_t v25 = v80[0];
  if (!v80[0])
  {
    uint64_t v63 = v21;
    v64 = v20;
    unint64_t v61 = v23;
    uint64_t v62 = v22;
    uint64_t v76 = a2;
    uint64_t v77 = a3;
    sub_1ACE76E18();
    if (qword_1EB768FB0 != -1) {
      goto LABEL_17;
    }
    while (1)
    {
      swift_beginAccess();
      uint64_t v26 = *(void *)&v7[qword_1EB767C00];
      uint64_t v27 = *(void *)&v7[qword_1EB767C00 + 8];
      int v28 = v7[qword_1EB767C00 + 16];
      id v29 = (id)qword_1EB768FA8;
      uint64_t v30 = v71;
      sub_1ACABD3B8(v71);
      uint64_t v60 = v26;
      uint64_t v59 = v27;
      int v58 = v28;
      sub_1ACE753A8();

      uint64_t v31 = v73 + 8;
      v57 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v57(v30, v72);
      uint64_t v32 = v70;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v32, AssociatedConformanceWitness);
      v64 = v7;
      uint64_t v34 = *((void *)v7 + 2);
      uint64_t v35 = v32;
      uint64_t v36 = type metadata accessor for AnyEpisodeStateDataSource();
      uint64_t v37 = swift_bridgeObjectRetain();
      if (!MEMORY[0x1AD118820](v37, v36)) {
        break;
      }
      uint64_t v73 = v31;
      v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
      v39 = (void (**)(char *, uint64_t))(v66 + 8);
      uint64_t v40 = 4;
      uint64_t v7 = v65;
      while (1)
      {
        char v41 = sub_1ACE76618();
        sub_1ACE765B8();
        if (v41) {
          swift_retain();
        }
        else {
          sub_1ACE772C8();
        }
        uint64_t v42 = v40 - 3;
        if (__OFADD__(v40 - 4, 1)) {
          break;
        }
        sub_1ACDD0A50(v76, v77, v79);
        swift_release();
        if ((*v38)(v7, 1, v35) != 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v43 = v74;
          v44 = v69;
          (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v35);
          (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v44, v7, v35);
          goto LABEL_14;
        }
        (*v39)(v7, v78);
        ++v40;
        if (v42 == MEMORY[0x1AD118820](v34, v36)) {
          goto LABEL_10;
        }
      }
      __break(1u);
LABEL_17:
      swift_once();
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v43 = v74;
    v44 = v69;
LABEL_14:
    char v45 = v79;
    BOOL v46 = v79 != 0;
    v47 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    uint64_t v48 = (uint64_t)v67;
    v47(v67, v44, v35);
    uint64_t v49 = *((void *)v64 + 4);
    uint64_t v51 = v76;
    uint64_t v50 = v77;
    sub_1ACA72530(v76, v77, v45);
    swift_bridgeObjectRetain();
    uint64_t v25 = EpisodeStateMachine.__allocating_init(identifier:initialState:rules:)(v51, v50, v45, v48, v49);
    uint64_t v84 = v25;
    v80[3] = v51;
    v80[4] = v50;
    BOOL v81 = v46;
    swift_beginAccess();
    sub_1ACA72530(v51, v50, v45);
    sub_1ACE76088();
    swift_retain();
    sub_1ACE760B8();
    swift_endAccess();
    sub_1ACE76E08();
    id v52 = (id)qword_1EB768FA8;
    uint64_t v53 = v74;
    id v54 = v52;
    uint64_t v55 = v71;
    sub_1ACABD3B8(v71);
    sub_1ACE753A8();

    v57(v55, v72);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v44, v70);
  }
  uint64_t *v75 = v25;
  return result;
}

uint64_t sub_1ACABDE84(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(*v3 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v19 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v26 = v3[2];
  uint64_t v20 = v7;
  uint64_t v21 = *(void *)(v11 + 88);
  uint64_t v22 = *(void *)(v11 + 96);
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  char v25 = v6;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for AnyEpisodeStateDataSource();
  sub_1ACE76688();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v12 = sub_1ACE763D8();
  swift_bridgeObjectRelease();
  sub_1ACABD62C();
  if (!MEMORY[0x1AD118820](v12, v7))
  {
LABEL_12:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = 0;
  while (1)
  {
    char v14 = sub_1ACE76618();
    sub_1ACE765B8();
    if (v14)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v13, v7);
      uint64_t v15 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_11;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1ACE772C8();
    if (v19 != 8) {
      break;
    }
    uint64_t v26 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v10, &v26, v7);
    swift_unknownObjectRelease();
    uint64_t v15 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_5:
    char v16 = sub_1ACDFB858((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if ((v16 & 1) == 0)
    {
      ++v13;
      if (v15 != MEMORY[0x1AD118820](v12, v7)) {
        continue;
      }
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACABE178(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = (char *)(swift_bridgeObjectRetain() + 48);
    do
    {
      uint64_t v3 = *((void *)v2 - 2);
      uint64_t v4 = *((void *)v2 - 1);
      char v5 = *v2;
      v2 += 24;
      sub_1ACA72530(v3, v4, v5);
      sub_1ACABDE84(v3, v4, v5);
      sub_1ACA91B68(v3, v4, v5);
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t EpisodeStateController.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1ACA2EE50(v0 + qword_1EB767C08);
  return v0;
}

uint64_t EpisodeStateController.__deallocating_deinit()
{
  EpisodeStateController.deinit();
  return swift_deallocClassInstance();
}

uint64_t EpisodeStateController.stateMachine(for:)()
{
  return sub_1ACABD62C();
}

{
  return sub_1ACABD62C();
}

void *sub_1ACABE2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  char v5 = (void *)*v2;
  uint64_t v6 = sub_1ACE76CE8();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v6);
  int v28 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v27);
  uint64_t v8 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = v5[10];
  uint64_t v10 = v5[11];
  uint64_t v32 = v5[12];
  type metadata accessor for EpisodeStateMachine();
  sub_1ACABEA70();
  v3[3] = sub_1ACE75F98();
  v26[1] = sub_1ACA51E1C();
  uint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE77D48();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE75E08();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1ACABEAC4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACABEB1C();
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, *MEMORY[0x1E4FBCC58], v30);
  v3[5] = sub_1ACE76D28();
  uint64_t v11 = (char *)v3 + qword_1EB767C08;
  uint64_t v12 = sub_1ACE753F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (char *)v3 + qword_1EB767C00;
  *(void *)uint64_t v13 = "EpisodeStateController.stateMachine(for:).fault";
  *((void *)v13 + 1) = 47;
  v13[16] = 2;
  v3[2] = a1;
  char v14 = v3;
  v3[4] = v31;
  uint64_t v15 = v10;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = v9;
  uint64_t v17 = type metadata accessor for AnyEpisodeStateDataSource();
  uint64_t v18 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AD118820](v18, v17))
  {
    uint64_t v19 = 4;
    do
    {
      uint64_t v20 = v19 - 4;
      char v21 = sub_1ACE76618();
      sub_1ACE765B8();
      if (v21)
      {
        swift_retain();
        uint64_t v22 = v19 - 3;
        if (__OFADD__(v20, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_1ACE772C8();
        uint64_t v22 = v19 - 3;
        if (__OFADD__(v20, 1))
        {
LABEL_9:
          __break(1u);
          return v14;
        }
      }
      uint64_t v23 = swift_allocObject();
      swift_weakInit();
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = v16;
      v24[3] = v15;
      v24[4] = v32;
      v24[5] = v23;
      swift_retain();
      sub_1ACDD091C((uint64_t)sub_1ACABEBE8, (uint64_t)v24);
      swift_release();
      swift_release();
      ++v19;
    }
    while (v22 != MEMORY[0x1AD118820](a1, v17));
  }
  return v14;
}

uint64_t sub_1ACABE7C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACABD6E4(*(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_1ACABE7E4()
{
  return sub_1ACDD0A50(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

void sub_1ACABE81C()
{
  sub_1ACABE9B0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for EpisodeStateController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for EpisodeStateController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EpisodeStateController);
}

uint64_t dispatch thunk of EpisodeStateController.__allocating_init(dataSources:transitionRules:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of EpisodeStateController.startObservingChanges()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of EpisodeStateController.stateMachine(for:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 216))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EpisodeStateController.refreshState(for:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 224))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of EpisodeStateController.refreshStates(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

void sub_1ACABE9B0()
{
  if (!qword_1EB768BD0)
  {
    sub_1ACE753F8();
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB768BD0);
    }
  }
}

uint64_t sub_1ACABEA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACABEA70()
{
  unint64_t result = qword_1EB767C90;
  if (!qword_1EB767C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767C90);
  }
  return result;
}

unint64_t sub_1ACABEAC4()
{
  unint64_t result = qword_1EB773180;
  if (!qword_1EB773180)
  {
    sub_1ACE76C78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB773180);
  }
  return result;
}

unint64_t sub_1ACABEB1C()
{
  unint64_t result = qword_1EB773170;
  if (!qword_1EB773170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB773160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB773170);
  }
  return result;
}

uint64_t sub_1ACABEB78()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACABEBB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACABEBE8(uint64_t a1)
{
  return sub_1ACABD204(a1);
}

double sub_1ACABEBF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ACABEE1C(a2, (uint64_t)v33);
  uint64_t v31 = a1;
  uint64_t v12 = v32;
  sub_1ACABEE1C((uint64_t)v33, (uint64_t)v32);
  if (a3)
  {
    char v13 = 1;
  }
  else
  {
    uint64_t v14 = *(void *)(a1 + 16);
    if (v14)
    {
      uint64_t v27 = v32;
      uint64_t v15 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v16 = *(void *)(v9 + 72);
      swift_bridgeObjectRetain();
      uint64_t v17 = v14 - 1;
      do
      {
        uint64_t v18 = v17;
        sub_1ACABFE70(v15, (uint64_t)v11);
        char v13 = v11[*(int *)(v8 + 100)];
        sub_1ACABFED4((uint64_t)v11);
        if (v13) {
          break;
        }
        uint64_t v17 = v18 - 1;
        v15 += v16;
      }
      while (v18);
      swift_bridgeObjectRelease();
      uint64_t v12 = v27;
    }
    else
    {
      char v13 = 0;
    }
  }
  uint64_t v19 = v31;
  sub_1ACABEE1C((uint64_t)v12, (uint64_t)v28);
  *(void *)&v29[0] = v19;
  sub_1ACABEE1C((uint64_t)v28, (uint64_t)v29 + 8);
  BYTE9(v30[1]) = v13;
  long long v20 = v29[11];
  a4[10] = v29[10];
  a4[11] = v20;
  a4[12] = v30[0];
  long long v21 = v29[7];
  a4[6] = v29[6];
  a4[7] = v21;
  long long v22 = v29[9];
  a4[8] = v29[8];
  a4[9] = v22;
  long long v23 = v29[3];
  a4[2] = v29[2];
  a4[3] = v23;
  long long v24 = v29[5];
  a4[4] = v29[4];
  a4[5] = v24;
  long long v25 = v29[1];
  *a4 = v29[0];
  a4[1] = v25;
  double result = *(double *)((char *)v30 + 10);
  *(_OWORD *)((char *)a4 + 202) = *(_OWORD *)((char *)v30 + 10);
  return result;
}

uint64_t PodcastsMediaLibrary.Response.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.Response.nextRequest.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1ACABEE1C(v1 + 8, (uint64_t)v4);
  sub_1ACABEE1C((uint64_t)v4, a1);
  return sub_1ACA63870((uint64_t)v4);
}

uint64_t sub_1ACABEE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PodcastsMediaLibrary.Response.subscriptionRequired.getter()
{
  return *(unsigned __int8 *)(v0 + 217);
}

void _s8ResponseVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2 != (void *)1)
  {
    sub_1ACA63688(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));

    swift_bridgeObjectRelease();
    if (*(unsigned char *)(a1 + 152) != 2) {
      sub_1ACA63738(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
    }
    int v3 = *(unsigned __int8 *)(a1 + 216);
    if (v3 != 255)
    {
      uint64_t v4 = *(void *)(a1 + 184);
      uint64_t v5 = *(void *)(a1 + 192);
      uint64_t v6 = *(void *)(a1 + 200);
      uint64_t v7 = *(void *)(a1 + 208);
      sub_1ACA63688(v4, v5, v6, v7, v3);
    }
  }
}

uint64_t _s8ResponseVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void **)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5 == (void *)1)
  {
    long long v6 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v6;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    long long v7 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v7;
    long long v8 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v8;
    long long v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    long long v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    long long v11 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v11;
  }
  else
  {
    uint64_t v12 = *(void *)(a2 + 8);
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    unsigned __int8 v16 = *(unsigned char *)(a2 + 40);
    sub_1ACA639E4(v12, v13, v14, v15, v16);
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(unsigned char *)(a1 + 40) = v16;
    uint64_t v17 = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v17;
    *(void *)(a1 + 64) = v18;
    int v19 = *(unsigned __int16 *)(a2 + 152) | (*(unsigned __int8 *)(a2 + 154) << 16);
    LODWORD(v14) = *(_WORD *)(a2 + 152);
    id v20 = v5;
    swift_bridgeObjectRetain();
    if (v14 == 2)
    {
      long long v21 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v21;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      long long v22 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v22;
    }
    else
    {
      uint64_t v23 = *(void *)(a2 + 72);
      uint64_t v37 = *(void *)(a2 + 80);
      uint64_t v24 = *(void *)(a2 + 88);
      uint64_t v25 = *(void *)(a2 + 96);
      uint64_t v26 = *(void *)(a2 + 104);
      uint64_t v27 = *(void *)(a2 + 112);
      uint64_t v28 = *(void *)(a2 + 120);
      uint64_t v29 = *(void *)(a2 + 128);
      char v38 = *(unsigned char *)(a2 + 136);
      sub_1ACA63A78(v23, v37, v24, v25, v26, v27, v28, v29, v38);
      *(void *)(a1 + 72) = v23;
      *(void *)(a1 + 80) = v37;
      *(void *)(a1 + 88) = v24;
      *(void *)(a1 + 96) = v25;
      *(void *)(a1 + 104) = v26;
      *(void *)(a1 + 112) = v27;
      *(void *)(a1 + 120) = v28;
      *(void *)(a1 + 128) = v29;
      *(unsigned char *)(a1 + 136) = v38;
      *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(_WORD *)(a1 + 152) = v19;
      *(unsigned char *)(a1 + 154) = BYTE2(v19);
    }
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
    int v30 = *(unsigned __int8 *)(a2 + 216);
    if (v30 == 255)
    {
      long long v35 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v35;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    }
    else
    {
      uint64_t v31 = *(void *)(a2 + 184);
      uint64_t v32 = *(void *)(a2 + 192);
      uint64_t v33 = *(void *)(a2 + 200);
      uint64_t v34 = *(void *)(a2 + 208);
      sub_1ACA639E4(v31, v32, v33, v34, *(unsigned char *)(a2 + 216));
      *(void *)(a1 + 184) = v31;
      *(void *)(a1 + 192) = v32;
      *(void *)(a1 + 200) = v33;
      *(void *)(a1 + 208) = v34;
      *(unsigned char *)(a1 + 216) = v30;
    }
  }
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  return a1;
}

uint64_t _s8ResponseVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 24);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 24) = v7;
      long long v8 = *(_OWORD *)(a2 + 40);
      long long v9 = *(_OWORD *)(a2 + 56);
      long long v10 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v10;
      *(_OWORD *)(a1 + 40) = v8;
      *(_OWORD *)(a1 + 56) = v9;
      long long v11 = *(_OWORD *)(a2 + 104);
      long long v12 = *(_OWORD *)(a2 + 120);
      long long v13 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v13;
      *(_OWORD *)(a1 + 104) = v11;
      *(_OWORD *)(a1 + 120) = v12;
      long long v14 = *(_OWORD *)(a2 + 168);
      long long v15 = *(_OWORD *)(a2 + 184);
      long long v16 = *(_OWORD *)(a2 + 200);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(_OWORD *)(a1 + 184) = v15;
      *(_OWORD *)(a1 + 200) = v16;
      *(_OWORD *)(a1 + 168) = v14;
      goto LABEL_26;
    }
    uint64_t v27 = *(void *)(a2 + 8);
    uint64_t v28 = *(void *)(a2 + 16);
    uint64_t v29 = *(void *)(a2 + 24);
    uint64_t v30 = *(void *)(a2 + 32);
    unsigned __int8 v31 = *(unsigned char *)(a2 + 40);
    sub_1ACA639E4(v27, v28, v29, v30, v31);
    *(void *)(a1 + 8) = v27;
    *(void *)(a1 + 16) = v28;
    *(void *)(a1 + 24) = v29;
    *(void *)(a1 + 32) = v30;
    *(unsigned char *)(a1 + 40) = v31;
    uint64_t v32 = *(void **)(a2 + 48);
    *(void *)(a1 + 48) = v32;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    LODWORD(v28) = *(unsigned __int8 *)(a2 + 152);
    id v33 = v32;
    swift_bridgeObjectRetain();
    if (v28 == 2)
    {
      long long v34 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v34;
      long long v35 = *(_OWORD *)(a2 + 104);
      long long v36 = *(_OWORD *)(a2 + 120);
      long long v37 = *(_OWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      *(_OWORD *)(a1 + 120) = v36;
      *(_OWORD *)(a1 + 136) = v37;
      *(_OWORD *)(a1 + 104) = v35;
    }
    else
    {
      uint64_t v58 = *(void *)(a2 + 72);
      uint64_t v59 = *(void *)(a2 + 80);
      uint64_t v60 = *(void *)(a2 + 88);
      uint64_t v61 = *(void *)(a2 + 96);
      uint64_t v62 = *(void *)(a2 + 104);
      uint64_t v63 = *(void *)(a2 + 112);
      uint64_t v64 = *(void *)(a2 + 120);
      uint64_t v65 = *(void *)(a2 + 128);
      char v118 = *(unsigned char *)(a2 + 136);
      sub_1ACA63A78(v58, v59, v60, v61, v62, v63, v64, v65, v118);
      *(void *)(a1 + 72) = v58;
      *(void *)(a1 + 80) = v59;
      *(void *)(a1 + 88) = v60;
      *(void *)(a1 + 96) = v61;
      *(void *)(a1 + 104) = v62;
      *(void *)(a1 + 112) = v63;
      *(void *)(a1 + 120) = v64;
      *(void *)(a1 + 128) = v65;
      *(unsigned char *)(a1 + 136) = v118;
      *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
      *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
    }
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
    int v66 = *(unsigned __int8 *)(a2 + 216);
    if (v66 == 255)
    {
      long long v67 = *(_OWORD *)(a2 + 184);
      long long v68 = *(_OWORD *)(a2 + 200);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(_OWORD *)(a1 + 184) = v67;
      *(_OWORD *)(a1 + 200) = v68;
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v109 = *(void *)(a2 + 184);
    uint64_t v110 = *(void *)(a2 + 192);
    uint64_t v111 = *(void *)(a2 + 200);
    uint64_t v112 = *(void *)(a2 + 208);
    sub_1ACA639E4(v109, v110, v111, v112, v66);
    *(void *)(a1 + 184) = v109;
    *(void *)(a1 + 192) = v110;
    *(void *)(a1 + 200) = v111;
    *(void *)(a1 + 208) = v112;
    *(unsigned char *)(a1 + 216) = v66;
    goto LABEL_26;
  }
  if (v6 == 1)
  {
    sub_1ACABF76C(a1 + 8);
    long long v17 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 24) = v17;
    long long v18 = *(_OWORD *)(a2 + 88);
    long long v20 = *(_OWORD *)(a2 + 40);
    long long v19 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v18;
    *(_OWORD *)(a1 + 40) = v20;
    *(_OWORD *)(a1 + 56) = v19;
    long long v21 = *(_OWORD *)(a2 + 152);
    long long v23 = *(_OWORD *)(a2 + 104);
    long long v22 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v21;
    *(_OWORD *)(a1 + 104) = v23;
    *(_OWORD *)(a1 + 120) = v22;
    long long v25 = *(_OWORD *)(a2 + 184);
    long long v24 = *(_OWORD *)(a2 + 200);
    long long v26 = *(_OWORD *)(a2 + 168);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v25;
    *(_OWORD *)(a1 + 200) = v24;
    *(_OWORD *)(a1 + 168) = v26;
    goto LABEL_26;
  }
  uint64_t v38 = *(void *)(a2 + 8);
  uint64_t v39 = *(void *)(a2 + 16);
  uint64_t v40 = *(void *)(a2 + 24);
  uint64_t v41 = *(void *)(a2 + 32);
  unsigned __int8 v42 = *(unsigned char *)(a2 + 40);
  sub_1ACA639E4(v38, v39, v40, v41, v42);
  uint64_t v43 = *(void *)(a1 + 8);
  uint64_t v44 = *(void *)(a1 + 16);
  uint64_t v45 = *(void *)(a1 + 24);
  uint64_t v46 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v38;
  *(void *)(a1 + 16) = v39;
  *(void *)(a1 + 24) = v40;
  *(void *)(a1 + 32) = v41;
  unsigned __int8 v47 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v42;
  sub_1ACA63688(v43, v44, v45, v46, v47);
  uint64_t v48 = *(void **)(a1 + 48);
  uint64_t v49 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v49;
  id v50 = v49;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = (_OWORD *)(a1 + 72);
  id v52 = (_OWORD *)(a2 + 72);
  int v53 = *(unsigned __int8 *)(a2 + 152);
  if (*(unsigned char *)(a1 + 152) == 2)
  {
    if (v53 == 2)
    {
      long long v54 = *(_OWORD *)(a2 + 88);
      *uint64_t v51 = *v52;
      *(_OWORD *)(a1 + 88) = v54;
      long long v55 = *(_OWORD *)(a2 + 104);
      long long v56 = *(_OWORD *)(a2 + 120);
      long long v57 = *(_OWORD *)(a2 + 136);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      *(_OWORD *)(a1 + 120) = v56;
      *(_OWORD *)(a1 + 136) = v57;
      *(_OWORD *)(a1 + 104) = v55;
      goto LABEL_19;
    }
    uint64_t v73 = *(void *)(a2 + 72);
    uint64_t v74 = *(void *)(a2 + 80);
    uint64_t v75 = *(void *)(a2 + 88);
    uint64_t v76 = *(void *)(a2 + 96);
    uint64_t v77 = *(void *)(a2 + 104);
    uint64_t v78 = *(void *)(a2 + 112);
    uint64_t v79 = *(void *)(a2 + 120);
    uint64_t v80 = *(void *)(a2 + 128);
    char v119 = *(unsigned char *)(a2 + 136);
    sub_1ACA63A78(v73, v74, v75, v76, v77, v78, v79, v80, v119);
    *(void *)(a1 + 72) = v73;
    *(void *)(a1 + 80) = v74;
    *(void *)(a1 + 88) = v75;
    *(void *)(a1 + 96) = v76;
    *(void *)(a1 + 104) = v77;
    *(void *)(a1 + 112) = v78;
    *(void *)(a1 + 120) = v79;
    *(void *)(a1 + 128) = v80;
    *(unsigned char *)(a1 + 136) = v119;
  }
  else
  {
    if (v53 == 2)
    {
      sub_1ACABF6C4(a1 + 72);
      long long v69 = *(_OWORD *)(a2 + 88);
      *uint64_t v51 = *v52;
      *(_OWORD *)(a1 + 88) = v69;
      long long v71 = *(_OWORD *)(a2 + 120);
      long long v70 = *(_OWORD *)(a2 + 136);
      long long v72 = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
      *(_OWORD *)(a1 + 120) = v71;
      *(_OWORD *)(a1 + 136) = v70;
      *(_OWORD *)(a1 + 104) = v72;
      goto LABEL_19;
    }
    uint64_t v81 = *(void *)(a2 + 72);
    uint64_t v82 = *(void *)(a2 + 80);
    uint64_t v83 = *(void *)(a2 + 88);
    uint64_t v84 = *(void *)(a2 + 96);
    uint64_t v85 = *(void *)(a2 + 104);
    uint64_t v86 = *(void *)(a2 + 112);
    uint64_t v87 = *(void *)(a2 + 120);
    uint64_t v88 = *(void *)(a2 + 128);
    char v120 = *(unsigned char *)(a2 + 136);
    sub_1ACA63A78(v81, v82, v83, v84, v85, v86, v87, v88, v120);
    uint64_t v89 = *(void *)(a1 + 72);
    uint64_t v90 = *(void *)(a1 + 80);
    uint64_t v91 = *(void *)(a1 + 88);
    uint64_t v92 = *(void *)(a1 + 96);
    uint64_t v93 = *(void *)(a1 + 104);
    uint64_t v94 = *(void *)(a1 + 112);
    uint64_t v95 = *(void *)(a1 + 120);
    uint64_t v96 = *(void *)(a1 + 128);
    char v97 = *(unsigned char *)(a1 + 136);
    *(void *)(a1 + 72) = v81;
    *(void *)(a1 + 80) = v82;
    *(void *)(a1 + 88) = v83;
    *(void *)(a1 + 96) = v84;
    *(void *)(a1 + 104) = v85;
    *(void *)(a1 + 112) = v86;
    *(void *)(a1 + 120) = v87;
    *(void *)(a1 + 128) = v88;
    *(unsigned char *)(a1 + 136) = v120;
    sub_1ACA63738(v89, v90, v91, v92, v93, v94, v95, v96, v97);
  }
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
LABEL_19:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  v98 = (long long *)(a1 + 184);
  v99 = (long long *)(a2 + 184);
  int v66 = *(unsigned __int8 *)(a2 + 216);
  if (*(unsigned __int8 *)(a1 + 216) == 255)
  {
    if (v66 == 255)
    {
      long long v115 = *v99;
      long long v116 = *(_OWORD *)(a2 + 200);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      long long *v98 = v115;
      *(_OWORD *)(a1 + 200) = v116;
      goto LABEL_26;
    }
    goto LABEL_23;
  }
  if (v66 == 255)
  {
    sub_1ACABF718(a1 + 184);
    char v113 = *(unsigned char *)(a2 + 216);
    long long v114 = *(_OWORD *)(a2 + 200);
    long long *v98 = *v99;
    *(_OWORD *)(a1 + 200) = v114;
    *(unsigned char *)(a1 + 216) = v113;
  }
  else
  {
    uint64_t v100 = *(void *)(a2 + 184);
    uint64_t v101 = *(void *)(a2 + 192);
    uint64_t v102 = *(void *)(a2 + 200);
    uint64_t v103 = *(void *)(a2 + 208);
    sub_1ACA639E4(v100, v101, v102, v103, *(unsigned char *)(a2 + 216));
    uint64_t v104 = *(void *)(a1 + 184);
    uint64_t v105 = *(void *)(a1 + 192);
    uint64_t v106 = *(void *)(a1 + 200);
    uint64_t v107 = *(void *)(a1 + 208);
    *(void *)(a1 + 184) = v100;
    *(void *)(a1 + 192) = v101;
    *(void *)(a1 + 200) = v102;
    *(void *)(a1 + 208) = v103;
    unsigned __int8 v108 = *(unsigned char *)(a1 + 216);
    *(unsigned char *)(a1 + 216) = v66;
    sub_1ACA63688(v104, v105, v106, v107, v108);
  }
LABEL_26:
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  return a1;
}

uint64_t sub_1ACABF6C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACABF718(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACABF76C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy218_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t _s8ResponseVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 48);
  if (v4 != 1)
  {
    char v12 = *(unsigned char *)(a2 + 40);
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 32);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    unsigned __int8 v17 = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v12;
    sub_1ACA63688(v13, v14, v15, v16, v17);
    long long v18 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v4;

    uint64_t v19 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v19;
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(a1 + 152) != 2)
    {
      int v20 = *(unsigned __int16 *)(a2 + 152);
      int v21 = v20 | (*(unsigned __int8 *)(a2 + 154) << 16);
      if (v20 != 2)
      {
        char v24 = *(unsigned char *)(a2 + 136);
        uint64_t v25 = *(void *)(a1 + 72);
        uint64_t v26 = *(void *)(a1 + 80);
        uint64_t v27 = *(void *)(a1 + 88);
        uint64_t v28 = *(void *)(a1 + 96);
        uint64_t v29 = *(void *)(a1 + 104);
        uint64_t v30 = *(void *)(a1 + 112);
        uint64_t v31 = *(void *)(a1 + 120);
        uint64_t v32 = *(void *)(a1 + 128);
        char v33 = *(unsigned char *)(a1 + 136);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(unsigned char *)(a1 + 136) = v24;
        sub_1ACA63738(v25, v26, v27, v28, v29, v30, v31, v32, v33);
        *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(unsigned char *)(a1 + 152) = v21 & 1;
        *(unsigned char *)(a1 + 153) = BYTE1(v21) & 1;
        *(unsigned char *)(a1 + 154) = BYTE2(v21) & 1;
LABEL_11:
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
        *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
        int v34 = *(unsigned __int8 *)(a1 + 216);
        if (v34 != 255)
        {
          int v35 = *(unsigned __int8 *)(a2 + 216);
          if (v35 != 255)
          {
            uint64_t v36 = *(void *)(a1 + 184);
            uint64_t v37 = *(void *)(a1 + 192);
            uint64_t v38 = *(void *)(a1 + 200);
            uint64_t v39 = *(void *)(a1 + 208);
            *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
            *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
            *(unsigned char *)(a1 + 216) = v35;
            sub_1ACA63688(v36, v37, v38, v39, v34);
            goto LABEL_5;
          }
          sub_1ACABF718(a1 + 184);
        }
        long long v40 = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = v40;
        *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
        goto LABEL_5;
      }
      sub_1ACABF6C4(a1 + 72);
    }
    long long v22 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v22;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
    long long v23 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v23;
    goto LABEL_11;
  }
  sub_1ACABF76C(a1 + 8);
LABEL_4:
  long long v5 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v5;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  long long v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v6;
  long long v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v8;
  long long v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v9;
  long long v10 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v10;
LABEL_5:
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  return a1;
}

uint64_t _s8ResponseVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 218)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8ResponseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 216) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 218) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 218) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.Response()
{
  return &type metadata for PodcastsMediaLibrary.Response;
}

uint64_t sub_1ACABFB14(long long *a1)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8;
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = a1[11];
  long long v51 = a1[10];
  long long v52 = v7;
  long long v53 = a1[12];
  char v54 = *((unsigned char *)a1 + 208);
  long long v8 = a1[7];
  long long v47 = a1[6];
  long long v48 = v8;
  long long v9 = a1[9];
  long long v49 = a1[8];
  long long v50 = v9;
  long long v10 = a1[3];
  long long v43 = a1[2];
  long long v44 = v10;
  long long v11 = a1[5];
  long long v45 = a1[4];
  long long v46 = v11;
  long long v12 = a1[1];
  long long v41 = *a1;
  long long v42 = v12;
  uint64_t v13 = *(void *)(*(void *)v1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v15 = *(void *)(v4 + 72);
    v26[1] = *(void *)v1;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1ACABFE70(v14, (uint64_t)v6);
      if (v6[56] == 1)
      {
        sub_1ACABFED4((uint64_t)v6);
      }
      else
      {
        *(void *)&long long v27 = *((void *)v6 + 6);
        sub_1ACA55E4C();
        uint64_t v17 = sub_1ACE770B8();
        uint64_t v19 = v18;
        sub_1ACABFED4((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1ACA41EA0(0, v16[2] + 1, 1, v16);
        }
        unint64_t v21 = v16[2];
        unint64_t v20 = v16[3];
        if (v21 >= v20 >> 1) {
          uint64_t v16 = sub_1ACA41EA0((void *)(v20 > 1), v21 + 1, 1, v16);
        }
        v16[2] = v21 + 1;
        long long v22 = &v16[2 * v21];
        v22[4] = v17;
        v22[5] = v19;
      }
      v14 += v15;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  long long v37 = v51;
  long long v38 = v52;
  long long v39 = v53;
  char v40 = v54;
  long long v33 = v47;
  long long v34 = v48;
  long long v35 = v49;
  long long v36 = v50;
  long long v29 = v43;
  long long v30 = v44;
  long long v31 = v45;
  long long v32 = v46;
  long long v27 = v41;
  long long v28 = v42;
  long long v23 = sub_1ACDD2440();
  uint64_t v24 = sub_1ACABFD8C(v23, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1ACABFD8C(void *a1, void *a2)
{
  uint64_t v2 = a2[2];
  if (!v2) {
    return 0;
  }
  uint64_t v4 = a1[2];
  if (!v4) {
    return v4;
  }
  uint64_t result = a2[4];
  uint64_t v7 = a2[5];
  if (result != a1[4] || v7 != a1[5])
  {
    uint64_t result = sub_1ACE77848();
    if ((result & 1) == 0) {
      return 0;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 1;
  while (v2 != v10)
  {
    if (v4 == v10) {
      return v4;
    }
    uint64_t result = a2[v9 + 6];
    if (result != a1[v9 + 6] || a2[v9 + 7] != a1[v9 + 7])
    {
      uint64_t result = sub_1ACE77848();
      if ((result & 1) == 0) {
        return v10;
      }
    }
    ++v10;
    v9 += 2;
    if (v2 == v10) {
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACABFE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACABFED4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Publisher.mapToLoadable()(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for Loadable();
  uint64_t v4 = sub_1ACE75678();
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v6 = (char *)v16 - v5;
  uint64_t v7 = sub_1ACE759B8();
  uint64_t WitnessTable = swift_getWitnessTable();
  v16[1] = WitnessTable;
  v16[0] = swift_getWitnessTable();
  uint64_t v19 = v4;
  uint64_t v20 = v7;
  uint64_t v21 = WitnessTable;
  uint64_t v22 = v16[0];
  uint64_t v9 = sub_1ACE75698();
  uint64_t v17 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)v16 - v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  sub_1ACE75B58();
  swift_release();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  sub_1ACE75B98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  swift_getWitnessTable();
  uint64_t v14 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v9);
  return v14;
}

uint64_t sub_1ACAC020C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 2, AssociatedTypeWitness);
}

uint64_t sub_1ACAC02E4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = type metadata accessor for Loadable();
  MEMORY[0x1F4188790](v1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))((char *)&v4 - v2, 2, 2, AssociatedTypeWitness);
  return sub_1ACE759C8();
}

uint64_t sub_1ACAC03CC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACAC03DC()
{
  return sub_1ACAC02E4();
}

uint64_t sub_1ACAC03E4()
{
  return swift_deallocObject();
}

uint64_t sub_1ACAC03F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACAC020C(a1, a2);
}

void *sub_1ACAC03FC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1ACE77508())
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD119490](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      long long v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_assetURL);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = sub_1ACE761B8();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1ACA41EA0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1ACA41EA0((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1ACAC0594(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v27 = (char *)v23 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  v23[2] = v1;
  unint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v26 = v10;
  unint64_t v14 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  v23[1] = a1;
  uint64_t v15 = a1 + 40;
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v24 = v13;
  uint64_t v25 = v9;
  do
  {
    swift_bridgeObjectRetain();
    sub_1ACE74EF8();
    swift_bridgeObjectRelease();
    if ((*v13)(v5, 1, v6) == 1)
    {
      sub_1ACA50E78((uint64_t)v5, &qword_1EB7731B0);
    }
    else
    {
      uint64_t v17 = *v14;
      uint64_t v18 = v27;
      (*v14)(v27, v5, v6);
      v17(v9, v18, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_1ACA42368(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v16 = sub_1ACA42368(v19 > 1, v20 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v20 + 1;
      unint64_t v21 = v16
          + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
          + *(void *)(v26 + 72) * v20;
      uint64_t v9 = v25;
      v17((char *)v21, v25, v6);
      unint64_t v13 = v24;
    }
    v15 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1ACAC0854(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1ACC82FB8(0, v1, 0);
  uint64_t v2 = v19;
  uint64_t result = sub_1ACE29AB8(a1);
  uint64_t v5 = result;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_14;
    }
    char v18 = v9;
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    unint64_t v14 = *(void *)(v19 + 16);
    unint64_t v13 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      sub_1ACC82FB8(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v19 + 16) = v14 + 1;
    uint64_t v15 = v19 + 24 * v14;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
    *(unsigned char *)(v15 + 48) = 2;
    uint64_t result = sub_1ACDC3B6C(v5, v7, v18 & 1, a1);
    uint64_t v5 = result;
    uint64_t v7 = v16;
    char v9 = v17 & 1;
    if (!--v1)
    {
      sub_1ACA6D674(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

id MediaCacheDeleteRemovalProcessorDelegate.managedObjectContext.getter()
{
  return *v0;
}

id MediaCacheDeleteRemovalProcessorDelegate.workQueue.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t MediaCacheDeleteRemovalProcessorDelegate.didMatch(episodes:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704B8);
  uint64_t v32 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703A0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703B0);
  uint64_t v31 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)v1;
  uint64_t v11 = *(void **)(v1 + 8);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = v12;
  v14[3] = sub_1ACAC1088;
  v14[4] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DF98);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v15 = v12;
  uint64_t v16 = sub_1ACE75A18();
  id v33 = v11;
  uint64_t v34 = v16;
  uint64_t v17 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DF90, (uint64_t *)&unk_1EB76DF98);
  sub_1ACA93A6C();
  id v18 = v11;
  uint64_t v19 = v26;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E050);
  sub_1ACA51EA4(&qword_1EB7704B0, &qword_1EB7704B8);
  uint64_t v20 = v29;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  uint64_t v21 = v27;
  sub_1ACE75658();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v21);
  sub_1ACA51EA4(&qword_1EB7703A8, &qword_1EB7703B0);
  uint64_t v22 = v28;
  uint64_t v23 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v22);
  return v23;
}

void sub_1ACAC0EA8(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = sub_1ACAC0854(a1);
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  id v8 = Array<A>.episodeCoreDataPredicate()(v4);
  objc_msgSend(v7, sel_setPredicate_, v8);

  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1ACE77508())
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    uint64_t v11 = (void *)sub_1ACE76558();
    objc_msgSend(v7, sel_setSortDescriptors_, v11);
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v9 = sub_1ACE76EE8();
  swift_bridgeObjectRelease();

  if (!v2)
  {
    uint64_t v10 = sub_1ACAC03FC(v9);
    swift_bridgeObjectRelease();
    *a2 = v10;
  }
}

uint64_t sub_1ACAC1050()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACAC1088(void *a1@<X8>)
{
  sub_1ACAC0EA8(*(void *)(v1 + 16), a1);
}

unint64_t sub_1ACAC10A4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1ACAC0594(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACAC10E4(uint64_t *a1)
{
  v68[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)v50 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 16);
  v50[2] = *a1;
  if (v13)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v14 = v3 + 16;
    id v15 = v16;
    uint64_t v17 = v12 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v57 = *(void *)(v14 + 56);
    uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    long long v56 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v54 = 3221768772;
    uint64_t v53 = *MEMORY[0x1E4F289D0];
    uint64_t v61 = (void (**)(char *, uint64_t))(v14 - 8);
    swift_bridgeObjectRetain();
    uint64_t v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 40);
    v50[1] = (v14 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    *(void *)&long long v18 = 136315394;
    long long v51 = v18;
    v50[3] = MEMORY[0x1E4FBC840] + 8;
    long long v52 = xmmword_1ACE843F0;
    uint64_t v59 = v14;
    int v66 = v6;
    long long v55 = v11;
    uint64_t v64 = v8;
    uint64_t v58 = v16;
    while (1)
    {
      v15(v11, v17, v2);
      uint64_t v60 = *v63;
      v60(v11, 0, 1, v2);
      if ((*v62)(v11, 1, v2) == 1) {
        return swift_bridgeObjectRelease();
      }
      (*v56)(v8, v11, v2);
      uint64_t v20 = (void *)sub_1ACE74E18();
      uint64_t v21 = self;
      v68[0] = 0;
      id v22 = objc_msgSend(v21, sel_fileHandleForReadingFromURL_error_, v20, v68);

      if (!v22) {
        break;
      }
      id v23 = v68[0];
      int v24 = objc_msgSend(v22, sel_fileDescriptor);
      v68[0] = 0;
      int v25 = ffsctl(v24, v54, v68, 0);
      if (v25)
      {
        Swift::Int32 v26 = v25;
        uint64_t v65 = v13;
        sub_1ACA50D4C(0, &qword_1EB771CC0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v52;
        *(void *)(inited + 32) = sub_1ACE761B8();
        *(void *)(inited + 40) = v28;
        *(void *)(inited + 72) = v2;
        id v8 = v64;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
        v15((char *)boxed_opaque_existential_1, (uint64_t)v8, v2);
        uint64_t v30 = inited;
        uint64_t v6 = v66;
        v69.value._rawValue = (void *)sub_1ACA3625C(v30);
        NSError.init(fsctlCode:userInfo:)(v31, v26, v69);
        id v33 = v32;
        swift_willThrow();
        objc_msgSend(v22, sel_closeFile);

LABEL_11:
        if (qword_1EB768C48 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_1ACE754C8();
        __swift_project_value_buffer(v35, (uint64_t)qword_1EB768C28);
        v15(v6, (uint64_t)v8, v2);
        id v36 = v33;
        id v37 = v33;
        long long v38 = sub_1ACE75498();
        os_log_type_t v39 = sub_1ACE76BE8();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = swift_slowAlloc();
          long long v41 = (void *)swift_slowAlloc();
          v68[0] = v41;
          *(_DWORD *)uint64_t v40 = v51;
          uint64_t v42 = sub_1ACE74EC8();
          *(void *)(v40 + 4) = sub_1ACA3189C(v42, v43, (uint64_t *)v68);
          swift_bridgeObjectRelease();
          uint64_t v19 = *v61;
          (*v61)(v66, v2);
          *(_WORD *)(v40 + 12) = 2080;
          long long v67 = v33;
          id v44 = v33;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
          uint64_t v45 = sub_1ACE76228();
          *(void *)(v40 + 14) = sub_1ACA3189C(v45, v46, (uint64_t *)v68);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1AC9D5000, v38, v39, "Failed to remove episode asset purgeability (%s): %s", (uint8_t *)v40, 0x16u);
          swift_arrayDestroy();
          long long v47 = v41;
          uint64_t v6 = v66;
          MEMORY[0x1AD11B340](v47, -1, -1);
          MEMORY[0x1AD11B340](v40, -1, -1);
        }
        else
        {

          uint64_t v19 = *v61;
          (*v61)(v6, v2);
        }
        uint64_t v11 = v55;
        id v8 = v64;
        uint64_t v13 = v65;
        v19(v64, v2);
        goto LABEL_5;
      }
      objc_msgSend(v22, sel_closeFile);

      (*v61)(v8, v2);
LABEL_5:
      v17 += v57;
      --v13;
      id v15 = v58;
      if (!v13)
      {
        v60(v11, 1, 1, v2);
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v65 = v13;
    id v34 = v68[0];
    id v33 = (void *)sub_1ACE74D78();

    swift_willThrow();
    goto LABEL_11;
  }
  long long v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_bridgeObjectRetain();
  v48(v11, 1, 1, v2);
  return swift_bridgeObjectRelease();
}

void removePurgeability(for:)()
{
  uint64_t v0 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v0);
  sub_1ACCA1214();
}

void sub_1ACAC1AA8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1ACAC1AD0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACAC1B10(uint64_t a1, uint64_t a2)
{
  sub_1ACAC1BCC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (uint64_t)&unk_1F03861A8, (uint64_t)sub_1ACAC1E34, (uint64_t)&block_descriptor_24);
}

void sub_1ACAC1B54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_1ACAC1B7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_1ACAC1BA4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_1ACAC1BCC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a4;
  v15[5] = a5;
  v15[6] = a3;
  v18[4] = a7;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  v18[2] = sub_1ACA6DA9C;
  v18[3] = a8;
  uint64_t v16 = _Block_copy(v18);
  swift_retain();
  swift_retain();
  id v17 = a3;
  swift_release();
  objc_msgSend(v17, sel_performBlock_, v16);
  _Block_release(v16);
}

void sub_1ACAC1CCC(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  uint64_t v6 = v7;
  char v8 = 0;
  a1(&v7);
  sub_1ACAC1E88(v6, 0);
}

void sub_1ACAC1D54(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(v10, a5);
  uint64_t v6 = (void *)v10[0];
  uint64_t v7 = v10[1];
  uint64_t v8 = v10[2];
  uint64_t v9 = v11;
  char v12 = 0;
  a1(v10);
  sub_1ACAC1E50(v6, v7, v8, v9, 0);
}

ValueMetadata *type metadata accessor for MediaCacheDeleteRemovalProcessorDelegate()
{
  return &type metadata for MediaCacheDeleteRemovalProcessorDelegate;
}

void sub_1ACAC1E40()
{
  sub_1ACAC1D54(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *__return_ptr, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_1ACAC1E50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1ACAC1E64()
{
  sub_1ACAC1CCC(*(void (**)(void **))(v0 + 16), *(void *)(v0 + 24), *(void (**)(void **__return_ptr, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_1ACAC1E88(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACAC1E94(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1ACE77B58();
  }
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACE77B78();
}

uint64_t sub_1ACAC1FB8()
{
  return sub_1ACAC1E94(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1ACAC1FD4()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1ACE77B38();
  }
  else
  {
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAC20EC()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1ACE77B18();
  sub_1ACE77B38();
  if (v1 != 1) {
    sub_1ACE77B58();
  }
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACE77B78();
}

uint64_t sub_1ACAC220C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 9);
  int v6 = *(unsigned __int8 *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  if (v4)
  {
    if (!v6) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v9 = v6;
    }
    else {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  return sub_1ACCF4500(v5, v7);
}

uint64_t LibraryInterestStateDataSource.delegate.getter()
{
  int v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACA8E6B0(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACAC22B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(*(void *)a2 + 24) + 16);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v2);
  sub_1ACAC41F0(v3);
  os_unfair_lock_unlock(v2);
  return swift_unknownObjectRelease();
}

uint64_t LibraryInterestStateDataSource.delegate.setter()
{
  int v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC38E8(v2);
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACAC23C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[7] = a3;
  uint64_t result = swift_unknownObjectWeakAssign();
  if (a2)
  {
    if (a1[5])
    {
      uint64_t v15 = a1[2];
      aBlock[4] = sub_1ACAC4188;
      aBlock[5] = a1;
      uint64_t v20 = v15;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1ACA6DA9C;
      aBlock[3] = &block_descriptor_12;
      uint64_t v19 = v10;
      long long v18 = _Block_copy(aBlock);
      swift_retain();
      sub_1ACE75E08();
      aBlock[7] = MEMORY[0x1E4FBC860];
      sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
      sub_1ACE770E8();
      uint64_t v16 = v18;
      MEMORY[0x1AD118ED0](0, v13, v9, v18);
      _Block_release(v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
      return swift_release();
    }
  }
  return result;
}

void (*LibraryInterestStateDataSource.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  char v4 = *(os_unfair_lock_s **)(v1 + 24);
  v3[2] = v1;
  v3[3] = v4;
  unsigned __int8 v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_1ACA8E6B0(&v7);
  v3[4] = 0;
  os_unfair_lock_unlock(v5);
  *(_OWORD *)uint64_t v3 = v7;
  return sub_1ACAC2750;
}

void sub_1ACAC2750(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 24) + 16);
  if (a2)
  {
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v3);
    sub_1ACAC41F0(v4);
    os_unfair_lock_unlock(v3);
    swift_unknownObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v3);
    sub_1ACAC41F0(v5);
    os_unfair_lock_unlock(v3);
  }
  swift_unknownObjectRelease();
  free(v2);
}

void *LibraryInterestStateDataSource.__allocating_init(contextProvider:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1ACAC3904(a1);
  swift_unknownObjectRelease();
  return v2;
}

void *LibraryInterestStateDataSource.init(contextProvider:)(void *a1)
{
  uint64_t v1 = sub_1ACAC3904(a1);
  swift_unknownObjectRelease();
  return v1;
}

id sub_1ACAC28C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_adamID);
  id result = objc_msgSend(a1, sel_interestValue);
  if (v6 == 1.0) {
    __int16 v7 = 2;
  }
  else {
    __int16 v7 = 3;
  }
  if (v6 == 0.0) {
    __int16 v8 = 1;
  }
  else {
    __int16 v8 = v7;
  }
  if (v6 == -1.0) {
    __int16 v8 = 0;
  }
  *(void *)a2 = v4;
  *(_WORD *)(a2 + 8) = v8 << 8;
  return result;
}

uint64_t sub_1ACAC294C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 9);
  int v6 = *(unsigned __int8 *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  if ((v4 & 1) == 0)
  {
    if (*(void *)a1 == *(void *)a2) {
      char v9 = v6;
    }
    else {
      char v9 = 1;
    }
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    char v8 = sub_1ACCF4500(v5, v7) ^ 1;
    return v8 & 1;
  }
  if (v6) {
    goto LABEL_8;
  }
LABEL_3:
  char v8 = 1;
  return v8 & 1;
}

uint64_t sub_1ACAC29A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACDF73DC(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1ACAC29F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75EC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *(void **)(v2 + 16);
  *char v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v11 = MEMORY[0x1F4188790](result);
    *(&v15 - 2) = v2;
    *(&v15 - 1) = a1;
    MEMORY[0x1F4188790](v11);
    *(&v15 - 2) = (uint64_t)sub_1ACAC4154;
    *(&v15 - 1) = v12;
    uint64_t v14 = v13 + 4;
    os_unfair_lock_lock(v13 + 4);
    sub_1ACAC4170(&v16);
    os_unfair_lock_unlock(v14);
    sub_1ACAC3104(v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACAC2BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v65 = MEMORY[0x1E4FBC870];
  uint64_t v5 = *(void *)(a1 + 64);
  if (*(void *)(a2 + 16) <= *(void *)(v5 + 16) >> 3)
  {
    v64[0] = *(void *)(a1 + 64);
    swift_bridgeObjectRetain();
    sub_1ACC40F20(a2);
    uint64_t v6 = v5;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACB875EC(a2, v5);
  }
  int64_t v7 = 0;
  uint64_t v8 = v6 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v6 + 56);
  uint64_t v58 = a1;
  uint64_t v12 = (uint64_t *)(a1 + 72);
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v7 << 6);
LABEL_25:
    uint64_t v19 = *(void *)(v6 + 48) + 16 * v15;
    if ((*(unsigned char *)(v19 + 8) & 1) == 0)
    {
      uint64_t v20 = *(void *)v19;
      sub_1ACD30438(v64, *(void *)v19);
      swift_beginAccess();
      uint64_t v21 = sub_1ACA65CC4(v20);
      if (v22)
      {
        unint64_t v23 = v21;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = *v12;
        uint64_t v63 = *v12;
        *uint64_t v12 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ACD06308();
          uint64_t v25 = v63;
        }
        sub_1ACB1B6A8(v23, v25);
        *uint64_t v12 = v25;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
  }
  int64_t v16 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v16 >= v13) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  ++v7;
  if (v17) {
    goto LABEL_24;
  }
  int64_t v7 = v16 + 1;
  if (v16 + 1 >= v13) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v7);
  if (v17) {
    goto LABEL_24;
  }
  int64_t v7 = v16 + 2;
  if (v16 + 2 >= v13) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v7);
  if (v17)
  {
LABEL_24:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_25;
  }
  int64_t v18 = v16 + 3;
  if (v18 < v13)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v7 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (v7 >= v13) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v7);
        ++v18;
        if (v17) {
          goto LABEL_24;
        }
      }
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    int64_t v7 = v18;
    goto LABEL_24;
  }
LABEL_29:
  swift_release();
  uint64_t v62 = v12;
  if (*(void *)(*(void *)(v58 + 64) + 16) <= *(void *)(a2 + 16) >> 3)
  {
    v64[0] = a2;
    swift_bridgeObjectRetain();
    uint64_t v28 = swift_bridgeObjectRetain();
    sub_1ACC40F20(v28);
    swift_bridgeObjectRelease();
    uint64_t v27 = v64[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_1ACB875EC(v26, a2);
    swift_bridgeObjectRelease();
  }
  int64_t v29 = 0;
  uint64_t v60 = v27 + 56;
  uint64_t v30 = 1 << *(unsigned char *)(v27 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & *(void *)(v27 + 56);
  int64_t v61 = (unint64_t)(v30 + 63) >> 6;
  while (2)
  {
    if (v32)
    {
      unint64_t v33 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      unint64_t v34 = v33 | (v29 << 6);
      goto LABEL_53;
    }
    int64_t v35 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      goto LABEL_68;
    }
    if (v35 >= v61)
    {
LABEL_65:
      swift_release();
      *(void *)(v58 + 64) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v55 = sub_1ACD0AA58(v65);
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v55;
      return result;
    }
    unint64_t v36 = *(void *)(v60 + 8 * v35);
    ++v29;
    if (v36) {
      goto LABEL_52;
    }
    int64_t v29 = v35 + 1;
    if (v35 + 1 >= v61) {
      goto LABEL_65;
    }
    unint64_t v36 = *(void *)(v60 + 8 * v29);
    if (v36) {
      goto LABEL_52;
    }
    int64_t v29 = v35 + 2;
    if (v35 + 2 >= v61) {
      goto LABEL_65;
    }
    unint64_t v36 = *(void *)(v60 + 8 * v29);
    if (v36)
    {
LABEL_52:
      unint64_t v32 = (v36 - 1) & v36;
      unint64_t v34 = __clz(__rbit64(v36)) + (v29 << 6);
LABEL_53:
      uint64_t v38 = *(void *)(v27 + 48) + 16 * v34;
      if (*(unsigned char *)(v38 + 8)) {
        continue;
      }
      uint64_t v39 = *(void *)v38;
      char v40 = *(unsigned char *)(v38 + 9);
      sub_1ACD30438(v64, *(void *)v38);
      swift_beginAccess();
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = (void *)*v62;
      *uint64_t v62 = 0x8000000000000000;
      unint64_t v44 = sub_1ACA65CC4(v39);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46))
      {
        __break(1u);
        goto LABEL_67;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_1ACCFCF44(v47, v41);
        uint64_t v49 = sub_1ACA65CC4(v39);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_72;
        }
        unint64_t v44 = v49;
        long long v51 = v42;
        if ((v48 & 1) == 0) {
          goto LABEL_61;
        }
LABEL_35:
        *(unsigned char *)(v51[7] + v44) = v40;
LABEL_36:
        *uint64_t v62 = (uint64_t)v51;
        swift_bridgeObjectRelease();
        swift_endAccess();
        continue;
      }
      if (v41)
      {
        long long v51 = v42;
        if (v43) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_1ACD06308();
        long long v51 = v42;
        if (v48) {
          goto LABEL_35;
        }
      }
LABEL_61:
      v51[(v44 >> 6) + 8] |= 1 << v44;
      *(void *)(v51[6] + 8 * v44) = v39;
      *(unsigned char *)(v51[7] + v44) = v40;
      uint64_t v52 = v51[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_69;
      }
      v51[2] = v54;
      goto LABEL_36;
    }
    break;
  }
  int64_t v37 = v35 + 3;
  if (v37 >= v61) {
    goto LABEL_65;
  }
  unint64_t v36 = *(void *)(v60 + 8 * v37);
  if (v36)
  {
    int64_t v29 = v37;
    goto LABEL_52;
  }
  while (1)
  {
    int64_t v29 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v29 >= v61) {
      goto LABEL_65;
    }
    unint64_t v36 = *(void *)(v60 + 8 * v29);
    ++v37;
    if (v36) {
      goto LABEL_52;
    }
  }
LABEL_71:
  __break(1u);
LABEL_72:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

void sub_1ACAC3104(uint64_t a1)
{
  uint64_t v3 = sub_1ACE75EC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v7 = *(void **)(v1 + 16);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1ACE75EF8();
  uint64_t v9 = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (*(void *)(a1 + 16))
    {
      MEMORY[0x1F4188790](v9);
      *(void *)&v14[-16] = sub_1ACA8C818;
      *(void *)&v14[-8] = v1;
      unint64_t v11 = v10 + 4;
      os_unfair_lock_lock(v10 + 4);
      sub_1ACA8E6B0(&v15);
      os_unfair_lock_unlock(v11);
      if ((void)v15)
      {
        uint64_t v12 = *((void *)&v15 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, ObjectType, v12);
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1ACAC32BC(uint64_t a1)
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(a1 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC4170(&v3);
  os_unfair_lock_unlock(v1);
  sub_1ACAC3104(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAC3340@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACD0AB60(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

Swift::Void __swiftcall LibraryInterestStateDataSource.startObservingChanges()()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC41F0(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1ACAC3414(uint64_t result)
{
  if (!*(void *)(result + 40))
  {
    uint64_t v1 = result;
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB770B78);
    sub_1ACA51EA4(&qword_1EB7716C8, (uint64_t *)&unk_1EB770B78);
    uint64_t v2 = sub_1ACE75D58();
    swift_release();
    swift_release();
    *(void *)(v1 + 40) = v2;
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACAC3508(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACAC29F0(v1);
    return swift_release();
  }
  return result;
}

uint64_t LibraryInterestStateDataSource.state(for:)()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC3EF8(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACAC35DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 72);
  if (*(void *)(v6 + 16) && (uint64_t v7 = sub_1ACA65CC4(a2), (v8 & 1) != 0)) {
    char v9 = *(unsigned char *)(*(void *)(v6 + 56) + v7);
  }
  else {
    char v9 = 4;
  }
  *a3 = v9;
  return swift_endAccess();
}

uint64_t LibraryInterestStateDataSource.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1ACA8EF4C(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LibraryInterestStateDataSource.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1ACA8EF4C(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1ACAC371C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC41F0(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1ACAC3780()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC41F0(v2);
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

void (*sub_1ACAC37FC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = LibraryInterestStateDataSource.delegate.modify(v2);
  return sub_1ACA8E534;
}

uint64_t sub_1ACAC3854()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC3EF8(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACAC38C8()
{
  return sub_1ACAC23C0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACAC38E8(uint64_t a1)
{
  return sub_1ACA8E688(a1, *(uint64_t (**)(void))(v1 + 16));
}

void *sub_1ACAC3904(void *a1)
{
  uint64_t v2 = v1;
  id v28 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A6A8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v3);
  int64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v27 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E08();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v6);
  uint64_t v12 = (void *)sub_1ACE76D28();
  v1[2] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v1[3] = v13;
  v1[5] = 0;
  v1[7] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = MEMORY[0x1E4FBC868];
  v1[8] = MEMORY[0x1E4FBC870];
  v1[9] = v14;
  id v15 = objc_msgSend(self, sel_truePredicate);
  id v16 = objc_msgSend(v28, sel_importContext);
  id v17 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v18 = v12;
  uint64_t v19 = (void *)sub_1ACE76178();
  id v20 = objc_msgSend(v17, sel_initWithEntityName_, v19);

  objc_msgSend(v20, sel_setPredicate_, v15);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v21 = (void *)sub_1ACE76558();
  objc_msgSend(v20, sel_setSortDescriptors_, v21);

  objc_msgSend(v20, sel_setFetchBatchSize_, 0x7FFFFFFFFFFFFFFFLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A508);
  swift_allocObject();
  *((void *)&v26 + 1) = sub_1ACA8E710;
  *(void *)&long long v26 = 0;
  uint64_t v32 = sub_1ACA97690(0xD00000000000001ELL, 0x80000001ACE89080, (uint64_t)v20, (uint64_t)v16, (uint64_t)v18, (uint64_t)sub_1ACAC28C8, 0, (uint64_t)sub_1ACAC294C, v26, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A408);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A808);
  sub_1ACA51EA4(&qword_1EB76A400, &qword_1EB76A408);
  char v22 = v29;
  sub_1ACE75B58();
  swift_release();
  sub_1ACA51EA4(&qword_1EB76A6A0, &qword_1EB76A6A8);
  uint64_t v23 = v30;
  uint64_t v24 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
  v2[4] = v24;
  return v2;
}

uint64_t sub_1ACAC3EC0()
{
  return sub_1ACAC3414(v0);
}

uint64_t sub_1ACAC3EDC@<X0>(char *a1@<X8>)
{
  return sub_1ACAC35DC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_1ACAC3EF8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1ACAC40D0(a1);
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.startObservingChanges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of InterestStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for LibraryInterestStateDataSource()
{
  return self;
}

uint64_t method lookup function for LibraryInterestStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LibraryInterestStateDataSource);
}

uint64_t dispatch thunk of LibraryInterestStateDataSource.__allocating_init(contextProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryInterestStateDataSource.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryInterestStateDataSource.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryInterestStateDataSource.State()
{
  return &type metadata for LibraryInterestStateDataSource.State;
}

unint64_t sub_1ACAC407C()
{
  unint64_t result = qword_1EB76A4D0;
  if (!qword_1EB76A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A4D0);
  }
  return result;
}

void *sub_1ACAC40D0@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1ACAC4114()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACAC414C(uint64_t *a1)
{
  return sub_1ACAC3508(a1);
}

uint64_t sub_1ACAC4154@<X0>(void *a1@<X8>)
{
  return sub_1ACAC2BA0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_1ACAC4170@<X0>(void *a1@<X8>)
{
  return sub_1ACAC41AC(a1);
}

uint64_t sub_1ACAC4188()
{
  return sub_1ACAC32BC(v0);
}

uint64_t sub_1ACAC4190@<X0>(void *a1@<X8>)
{
  return sub_1ACAC3340(a1);
}

void *sub_1ACAC41AC@<X0>(void *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1ACAC41F0(uint64_t a1)
{
  return sub_1ACAC38E8(a1);
}

uint64_t sub_1ACAC4208@<X0>(char *a1@<X8>)
{
  return sub_1ACAC3EDC(a1);
}

uint64_t sub_1ACAC4220()
{
  return sub_1ACAC38C8();
}

uint64_t sub_1ACAC4238()
{
  sub_1ACA76F34(v0[2]);
  sub_1ACA76F34(v0[4]);
  sub_1ACA76F34(v0[6]);
  sub_1ACA76F34(v0[8]);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FairPlayEpisodeDataFetchingMock()
{
  return self;
}

uint64_t sub_1ACAC42AC()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1ACAC42E0()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 32);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1ACAC4314()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 64);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1ACAC4348()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 48);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t FeedUpdateRequestCollection.updatingKeys.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1ACAC4388()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v13 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7709C8);
  aBlock[0] = nullsub_1(v7);
  sub_1ACE76048();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v8 = sub_1ACE76A48();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v0;
  aBlock[4] = sub_1ACAC5F34;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_7;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v6, v3, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v12);
  return swift_release();
}

uint64_t sub_1ACAC46F8()
{
  sub_1ACE758F8();
  char v0 = sub_1ACE769D8();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    return sub_1ACE758E8();
  }
  return result;
}

uint64_t FeedUpdateRequestCollection.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FeedUpdateRequestCollection.init()();
  return v0;
}

void *FeedUpdateRequestCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v14 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v14);
  uint64_t v3 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1ACE76CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = sub_1ACE765F8();
  if (MEMORY[0x1AD118830](v9, v8))
  {
    uint64_t v10 = sub_1ACAC58CC(v9, v8, *(void *)(v2 + 88));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC870];
  }
  sub_1ACE76A38();
  sub_1ACE75918();
  uint64_t v15 = v10;
  uint64_t v11 = sub_1ACE75928();
  v1[3] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  v1[4] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7709C8);
  v1[5] = sub_1ACE75F98();
  sub_1ACA51E1C();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC68], v4);
  sub_1ACE75E08();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  v1[6] = sub_1ACE76D28();
  ReadOnlyCurrentValueSubject.init(_:)(v11, &v15);
  v1[2] = v15;
  swift_retain();
  return v1;
}

uint64_t sub_1ACAC4B50()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC40D0(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACAC4BC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v20 = a3;
  uint64_t v6 = *(void *)(*a1 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v24 = (char *)&v19 - v8;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v22 = *(void *)(updated - 8);
  MEMORY[0x1F4188790](updated - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7709C8);
  uint64_t v23 = a2;
  uint64_t v21 = v13;
  MEMORY[0x1AD118260](v26, a2, v12, v6);
  swift_bridgeObjectRelease();
  if (v26[0]) {
    unint64_t v14 = v26[0];
  }
  else {
    unint64_t v14 = MEMORY[0x1E4FBC860];
  }
  sub_1ACAC5F3C(v20, (uint64_t)v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_1ACA4239C(0, *(void *)(v14 + 16) + 1, 1, v14);
  }
  unint64_t v16 = *(void *)(v14 + 16);
  unint64_t v15 = *(void *)(v14 + 24);
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1ACA4239C(v15 > 1, v16 + 1, 1, v14);
  }
  *(void *)(v14 + 16) = v16 + 1;
  sub_1ACAC5FFC((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v24, v23, v6);
  v26[7] = v14;
  swift_beginAccess();
  sub_1ACE76088();
  swift_bridgeObjectRetain();
  sub_1ACE760B8();
  swift_endAccess();
  sub_1ACAC4388();
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v25 = v17 == 1;
  return result;
}

uint64_t sub_1ACAC4EB8()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC4170(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1ACAC4F2C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t v7 = a1[5];
  uint64_t v8 = *(void *)(v6 + 80);
  swift_bridgeObjectRetain();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7709C8);
  MEMORY[0x1AD118260](&v12, a2, v7, v8, v9, *(void *)(v6 + 88));
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = v12;
  if (!v12) {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  *a3 = v11;
  return result;
}

void sub_1ACAC5004()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1ACAC38E8(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1ACAC5078@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t v7 = a1[5];
  uint64_t v8 = *(void *)(v6 + 80);
  swift_bridgeObjectRetain();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7709C8);
  MEMORY[0x1AD118260](&v18, a2, v7, v8, v9, *(void *)(v6 + 88));
  swift_bridgeObjectRelease();
  uint64_t v10 = v18;
  if (v18)
  {
    uint64_t v11 = *(void *)(v18 + 16);
    if (v11)
    {
      uint64_t v12 = v11 - 1;
      uint64_t updated = type metadata accessor for FeedUpdateRequest();
      uint64_t v14 = *(void *)(updated - 8);
      sub_1ACAC5F3C(v10+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v12, a3);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, updated);
    }
    else
    {
      uint64_t v17 = type metadata accessor for FeedUpdateRequest();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = type metadata accessor for FeedUpdateRequest();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
}

uint64_t sub_1ACAC526C(uint64_t a1, void *a2, int a3)
{
  int v22 = a3;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(os_unfair_lock_s **)(v3 + 32);
  uint64_t v27 = v3;
  uint64_t v28 = a1;
  uint64_t v24 = sub_1ACAC5CE0;
  uint64_t v25 = &v26;
  uint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1ACAC4170(aBlock);
  os_unfair_lock_unlock(v14);
  uint64_t v15 = aBlock[0];
  sub_1ACA51E1C();
  unint64_t v16 = (void *)sub_1ACE76CF8();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  *(void *)(v17 + 24) = a2;
  char v18 = v22 & 1;
  *(unsigned char *)(v17 + 32) = v22 & 1;
  aBlock[4] = sub_1ACAC5D4C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_13;
  uint64_t v19 = _Block_copy(aBlock);
  sub_1ACAC5D58(a2, v18);
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v19);
  _Block_release(v19);

  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v23);
}

uint64_t sub_1ACAC5598@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7709C8);
  sub_1ACE76088();
  sub_1ACE76018();
  swift_endAccess();
  uint64_t result = sub_1ACAC4388();
  uint64_t v3 = v4;
  if (!v4) {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1ACAC5680(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t result = MEMORY[0x1F4188790](updated);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)&v10[*(int *)(result + 68)];
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1ACAC5F3C(v13, (uint64_t)v10);
      uint64_t v15 = (void (*)(uint64_t, void))*v12;
      sub_1ACA6DEC8(*v12);
      sub_1ACAC5FA0((uint64_t)v10);
      if (v15)
      {
        v15(a2, a3 & 1);
        sub_1ACA76F34((uint64_t)v15);
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedUpdateRequestCollection.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t FeedUpdateRequestCollection.__deallocating_deinit()
{
  FeedUpdateRequestCollection.deinit();
  return swift_deallocClassInstance();
}

void *sub_1ACAC5844@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_1ACAC5888@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1ACAC58CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  long long v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x1AD1187F0](v13))
  {
    sub_1ACE77248();
    uint64_t v16 = sub_1ACE77238();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v44 = MEMORY[0x1AD118830](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  char v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  char v43 = v15;
  while (1)
  {
    char v18 = sub_1ACE76618();
    sub_1ACE765B8();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1ACE772C8();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_1ACE760E8();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_1ACE76168();
        unint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    unint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1ACAC5C88@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACAC4BC8(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1ACAC5CA8@<X0>(void *a1@<X8>)
{
  return sub_1ACAC4F2C(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1ACAC5CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACAC5078(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1ACAC5CE0@<X0>(void *a1@<X8>)
{
  return sub_1ACAC5598(a1);
}

uint64_t sub_1ACAC5CFC()
{
  swift_bridgeObjectRelease();
  sub_1ACAC5D40(*(id *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocObject();
}

void sub_1ACAC5D40(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_1ACAC5D4C()
{
  return sub_1ACAC5680(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

id sub_1ACAC5D58(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_1ACAC5D64(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACAC5DB4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedUpdateRequestCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FeedUpdateRequestCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedUpdateRequestCollection);
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.insert(request:forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.requests(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.latestRequest(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of FeedUpdateRequestCollection.deleteAndCompleteRequests(for:result:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 192))(a1, a2, a3 & 1);
}

uint64_t sub_1ACAC5EF4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAC5F34()
{
  return sub_1ACAC46F8();
}

uint64_t sub_1ACAC5F3C(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_1ACAC5FA0(uint64_t a1)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_1ACAC5FFC(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t IMURLRequestEncoder.prepareRequestOnQueueAsync(_:account:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  _OWORD v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACAC6088, 0, 0);
}

uint64_t sub_1ACAC6088()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  *uint64_t v4 = v0;
  v4[1] = sub_1ACAC6190;
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v6, 0, 0, 0xD00000000000002CLL, 0x80000001ACEC77E0, sub_1ACAC6760, v3, v5);
}

uint64_t sub_1ACAC6190()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACAC62CC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACAC62CC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACAC6330(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  unint64_t v35 = a5;
  unint64_t v33 = a3;
  uint64_t v41 = a2;
  uint64_t v37 = sub_1ACE75DC8();
  uint64_t v40 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  unint64_t v36 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v34 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940);
  uint64_t v32 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE74898();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a4, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + v19 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v33;
  *(void *)(v21 + 16) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21 + v18, v17, v14);
  uint64_t v23 = v35;
  *(void *)(v21 + v19) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v20, v13, v32);
  aBlock[4] = sub_1ACAC6B70;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_14;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = v23;
  id v26 = v22;
  uint64_t v27 = v34;
  sub_1ACE75E08();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  uint64_t v29 = v36;
  uint64_t v28 = v37;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v27, v29, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  return swift_release();
}

uint64_t sub_1ACAC6760(uint64_t a1)
{
  return sub_1ACAC6330(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_1ACAC676C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  id v19 = a1;
  uint64_t v20 = a3;
  uint64_t v5 = sub_1ACE74898();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE74818();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + *(unsigned __int8 *)(v6 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1ACAC6F00;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACCE320C;
  aBlock[3] = &block_descriptor_8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  uint64_t v16 = (void *)v18;
  objc_msgSend(v19, sel_prepareRequest_account_completion_, v18, v20, v15);
  _Block_release(v15);
}

uint64_t sub_1ACAC6A00()
{
  uint64_t v1 = sub_1ACE74898();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1ACAC6B70()
{
  uint64_t v1 = *(void *)(sub_1ACE74898() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940) - 8);
  uint64_t v5 = *(void **)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_1ACAC676C(v5, v0 + v2, v6, v7);
}

uint64_t sub_1ACAC6C54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v13[1] = a2;
    id v9 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940);
    return sub_1ACE766E8();
  }
  else
  {
    uint64_t v11 = sub_1ACE74898();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, a4, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940);
    return sub_1ACE766F8();
  }
}

uint64_t sub_1ACAC6DAC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_1ACE74898();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1ACAC6F00(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F1940) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1ACE74898() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_1ACAC6C54(a1, a2, v2 + v6, v9);
}

uint64_t sub_1ACAC6FE8(void *a1, uint64_t *a2, int a3)
{
  HIDWORD(v23) = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = (char *)sub_1ACE75EC8();
  uint64_t v12 = *((void *)v11 - 1);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)&v3[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue];
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, char *, __n128))(v12 + 104))(v15, *MEMORY[0x1E4FBCBF0], v11, v13);
  id v17 = v16;
  LOBYTE(v16) = sub_1ACE75EF8();
  (*(void (**)(void *, char *))(v12 + 8))(v15, v11);
  if (v16)
  {
    uint64_t v11 = &v3[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures];
    swift_beginAccess();
    uint64_t v15 = *(void **)v11;
    unint64_t v3 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v11 = v15;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v15 = sub_1ACA423D0(0, v15[2] + 1, 1, v15);
  *(void *)uint64_t v11 = v15;
LABEL_3:
  unint64_t v20 = v15[2];
  unint64_t v19 = v15[3];
  if (v20 >= v19 >> 1)
  {
    uint64_t v15 = sub_1ACA423D0((void *)(v19 > 1), v20 + 1, 1, v15);
    *(void *)uint64_t v11 = v15;
  }
  v15[2] = v20 + 1;
  uint64_t v21 = &v15[8 * v20];
  unsigned char v21[4] = v3;
  v21[5] = v5;
  v21[6] = v6;
  v21[7] = v7;
  v21[8] = v8;
  v21[9] = v9;
  v21[10] = v10;
  *((unsigned char *)v21 + 88) = BYTE4(v23);
  return swift_endAccess();
}

uint64_t sub_1ACAC71F0()
{
  swift_release();
  swift_release();
  sub_1ACA50E78(v0 + 48, &qword_1EB76DE38);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShazamMatcher()
{
  return self;
}

uint64_t sub_1ACAC7274()
{
  swift_beginAccess();
  if (*(void *)(v0 + 72))
  {
    sub_1ACA3E158(v0 + 48, (uint64_t)&v2);
    __swift_project_boxed_opaque_existential_1(&v2, *((uint64_t *)&v3 + 1));
    sub_1ACE75798();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v2);
  }
  uint64_t v4 = 0;
  long long v2 = 0u;
  long long v3 = 0u;
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)&v2, v0 + 48);
  return swift_endAccess();
}

uint64_t sub_1ACAC7328(void *a1)
{
  uint64_t v3 = *v1;
  sub_1ACA3E158((uint64_t)a1, (uint64_t)v5);
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)v5, v3 + 48);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE757D8();
  return sub_1ACE75808();
}

uint64_t sub_1ACAC73B4(id *a1)
{
  id v1 = *a1;
  sub_1ACE758E8();

  return sub_1ACE757D8();
}

uint64_t sub_1ACAC7420()
{
  uint64_t v1 = *v0;
  sub_1ACE758D8();
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)v3, v1 + 48);
  return swift_endAccess();
}

uint64_t sub_1ACAC7494()
{
  return sub_1ACAC7274();
}

uint64_t sub_1ACAC74B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v24 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A38);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A40);
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  __n128 v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (void *)v3[4];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A50);
  sub_1ACA51EA4(&qword_1E99F1A58, &qword_1E99F1A48);
  sub_1ACE75AE8();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1ACA51EA4(&qword_1E99F1A60, &qword_1E99F1A38);
  swift_retain();
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  uint64_t v27 = (void *)v3[3];
  uint64_t v14 = v27;
  type metadata accessor for ShazamMatcher.ThrottledSubscriber();
  sub_1ACAC9618(&qword_1E99F1A68, 255, (void (*)(uint64_t))type metadata accessor for ShazamMatcher.ThrottledSubscriber);
  uint64_t v15 = v20;
  sub_1ACE755D8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v15);
  uint64_t v27 = (void *)v3[5];
  *(void *)(swift_allocObject() + 16) = v14;
  id v16 = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A70);
  sub_1ACA51EA4((unint64_t *)&unk_1E99F1A78, &qword_1E99F1A70);
  id v17 = v21;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v18 = v22;
  sub_1ACE755D8();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v17, v18);
}

id sub_1ACAC794C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *((void *)a1 + 6);
  char v3 = *((unsigned char *)a1 + 56);
  long long v4 = *a1;
  long long v5 = a1[1];
  *(_OWORD *)a2 = *a1;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = a1[2];
  *(void *)(a2 + 48) = v2;
  *(unsigned char *)(a2 + 56) = v3;
  return (id)v4;
}

uint64_t sub_1ACAC7974()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + 48;
    swift_beginAccess();
    if (*(void *)(v1 + 72))
    {
      sub_1ACA3E158(v2, (uint64_t)&v3);
      __swift_project_boxed_opaque_existential_1(&v3, *((uint64_t *)&v4 + 1));
      sub_1ACE75798();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
    }
    uint64_t v5 = 0;
    long long v3 = 0u;
    long long v4 = 0u;
    swift_beginAccess();
    sub_1ACAC8CB4((uint64_t)&v3, v2);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACAC7A58(uint64_t a1)
{
  *(unsigned char *)(a1
           + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled) = 1;
  uint64_t v1 = a1
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  if (*(void *)(v1 + 24))
  {
    sub_1ACA3E158(v1, (uint64_t)&v3);
    __swift_project_boxed_opaque_existential_1(&v3, *((uint64_t *)&v4 + 1));
    sub_1ACE75798();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
  }
  uint64_t v5 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)&v3, v1);
  return swift_endAccess();
}

uint64_t sub_1ACAC7B24()
{
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled) = 1;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  if (*(void *)(v1 + 24))
  {
    sub_1ACA3E158(v1, (uint64_t)&v3);
    __swift_project_boxed_opaque_existential_1(&v3, *((uint64_t *)&v4 + 1));
    sub_1ACE75798();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
  }
  uint64_t v5 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)&v3, v1);
  return swift_endAccess();
}

uint64_t sub_1ACAC7BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACAC74B8(a1, a2, a3);
}

id sub_1ACAC7C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures] = MEMORY[0x1E4FBC860];
  uint64_t v12 = &v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput];
  *uint64_t v12 = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  *(_OWORD *)((char *)v12 + 41) = 0u;
  __n128 v13 = &v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription];
  *(_OWORD *)__n128 v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  *(void *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion] = 1;
  v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled] = 0;
  *(void *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_session] = a1;
  uint64_t v14 = &v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_logger];
  uint64_t v15 = sub_1ACE754C8();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
  *(void *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue] = a3;
  *(void *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_inputSubject] = a4;
  *(void *)&v5[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_outputSubject] = a5;
  v19.receiver = v5;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a2, v15);
  return v17;
}

id _s18PodcastsFoundation25FairPlayValidationManagerC8ResponseCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACAC7F00()
{
  return type metadata accessor for ShazamMatcher.ThrottledSubscriber();
}

uint64_t type metadata accessor for ShazamMatcher.ThrottledSubscriber()
{
  uint64_t result = qword_1E99F19A8;
  if (!qword_1E99F19A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACAC7F54()
{
  uint64_t result = sub_1ACE754C8();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1ACAC8038()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75EC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1
                + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(*v8 + 16))
  {
    char v10 = *(unsigned char *)(v9 + 88);
    uint64_t v12 = *(void *)(v9 + 72);
    uint64_t v11 = *(void *)(v9 + 80);
    uint64_t v14 = *(void *)(v9 + 56);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v15 = *(void *)(v9 + 40);
    uint64_t v16 = *(void *)(v9 + 48);
    id v17 = *(id *)(v9 + 32);
    sub_1ACAC9860(0, 1);
    swift_endAccess();
    *(void *)&long long v38 = v17;
    *((void *)&v38 + 1) = v15;
    *(void *)&long long v39 = v16;
    *((void *)&v39 + 1) = v14;
    *(void *)&long long v40 = v13;
    *((void *)&v40 + 1) = v12;
    if (v17) {
      goto LABEL_4;
    }
  }
  else
  {
    swift_endAccess();
    sub_1ACE758F8();
    uint64_t v15 = *((void *)&v38 + 1);
    id v17 = (id)v38;
    uint64_t v14 = *((void *)&v39 + 1);
    uint64_t v13 = v40;
    uint64_t v11 = v41;
    char v10 = v42;
    if ((void)v38)
    {
LABEL_4:
      uint64_t v18 = *((void *)&v40 + 1);
      uint64_t v19 = v39;
      uint64_t v43 = v15;
      uint64_t v44 = v39;
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      uint64_t v47 = *((void *)&v40 + 1);
      uint64_t v48 = v11;
      uint64_t v20 = v1
          + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput;
      if (*(void *)(v1
                     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput)
        && (long long v21 = *(_OWORD *)(v1
                            + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput
                            + 24),
            long long v38 = *(_OWORD *)(v1
                            + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput
                            + 8),
            long long v39 = v21,
            long long v40 = *(_OWORD *)(v1
                            + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput
                            + 40),
            (sub_1ACE76B48() & 1) != 0))
      {
        sub_1ACAC8504();
      }
      else if ((*(unsigned char *)(v1 {
                          + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_isCancelled) & 1) == 0)
      }
      {
        uint64_t v22 = v11;
        uint64_t v23 = *(void **)v20;
        *(void *)uint64_t v20 = v17;
        *(void *)(v20 + 8) = v15;
        *(void *)(v20 + 16) = v19;
        *(void *)(v20 + 24) = v14;
        *(void *)(v20 + 32) = v13;
        *(void *)(v20 + 40) = v18;
        uint64_t v36 = v22;
        *(void *)(v20 + 48) = v22;
        *(unsigned char *)(v20 + 56) = v10;
        id v24 = v17;

        id v17 = v24;
        uint64_t v25 = sub_1ACE75498();
        os_log_type_t v26 = sub_1ACE76C08();
        int v27 = v26;
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v28 = swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 134218240;
          int v35 = v27;
          sub_1ACE76F48();
          uint64_t v37 = v29;
          sub_1ACE76FF8();

          *(_WORD *)(v28 + 12) = 2048;
          sub_1ACE76F48();
          uint64_t v37 = v30;
          sub_1ACE76FF8();

          _os_log_impl(&dword_1AC9D5000, v25, (os_log_type_t)v35, "Performing match with signature for time range: (start: %f, duration: %f)", (uint8_t *)v28, 0x16u);
          MEMORY[0x1AD11B340](v28, -1, -1);
        }
        else
        {
        }
        objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_session), sel_matchSignature_, v17);
      }

      return;
    }
  }
  uint64_t v31 = sub_1ACE75498();
  os_log_type_t v32 = sub_1ACE76BE8();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v33 = 0;
    _os_log_impl(&dword_1AC9D5000, v31, v32, "Unexpectedly encountered no signature for matching", v33, 2u);
    MEMORY[0x1AD11B340](v33, -1, -1);
  }

  sub_1ACAC8504();
}

uint64_t sub_1ACAC8468(uint64_t a1)
{
  if (a1)
  {
    *(void *)&v5[0] = a1;
    sub_1ACE75888();
  }
  else
  {
    uint64_t v2 = *(void **)(v1
                  + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion);
    *(void *)(v1
              + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion) = 0;
    sub_1ACAC8D64(v2);
  }
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v3 = v1
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)v5, v3);
  return swift_endAccess();
}

void sub_1ACAC8504()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v23 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE75E48();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue];
  *char v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  v11;
  char v12 = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v12)
  {
    uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_completion];
    if (v13 == (void *)1
      || (uint64_t v14 = &v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures],
          swift_beginAccess(),
          *(void *)(*(void *)v14 + 16)))
    {
      uint64_t v15 = (uint64_t)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription];
      swift_beginAccess();
      sub_1ACAC99DC(v15, (uint64_t)&v29);
      if (v30)
      {
        sub_1ACA3AABC(&v29, (uint64_t)aBlock);
        __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v26);
        sub_1ACE75808();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
      else
      {
        sub_1ACA50E78((uint64_t)&v29, &qword_1EB76DE38);
        uint64_t v16 = &v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_bufferedSignatures];
        swift_beginAccess();
        if (*(void *)(*(void *)v16 + 16))
        {
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v0;
          int v27 = sub_1ACAC9A7C;
          uint64_t v28 = v17;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1ACA6DA9C;
          os_log_type_t v26 = &block_descriptor_16;
          uint64_t v18 = _Block_copy(aBlock);
          uint64_t v19 = v0;
          sub_1ACE75E08();
          uint64_t v24 = MEMORY[0x1E4FBC860];
          sub_1ACAC9618((unint64_t *)&qword_1EB7734E0, 255, MEMORY[0x1E4FBCB00]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
          sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
          sub_1ACE770E8();
          MEMORY[0x1AD118ED0](0, v6, v3, v18);
          _Block_release(v18);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
          (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
          swift_release();
        }
      }
    }
    else
    {
      aBlock[0] = v13;
      id v20 = v13;
      sub_1ACE75888();
      sub_1ACAC8D64(v13);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1ACAC89BC(void *a1)
{
  uint64_t v3 = *v1;
  sub_1ACA3E158((uint64_t)a1, (uint64_t)v6);
  uint64_t v4 = v3
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_subscription;
  swift_beginAccess();
  sub_1ACAC8CB4((uint64_t)v6, v4);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1ACE75808();
}

uint64_t sub_1ACAC8A50()
{
  return sub_1ACAC9350();
}

uint64_t sub_1ACAC8A74(uint64_t *a1)
{
  return sub_1ACAC8468(*a1);
}

uint64_t sub_1ACAC8A9C()
{
  return sub_1ACAC7B24();
}

void sub_1ACAC8B38(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1ACAC8504();
  }
}

uint64_t sub_1ACAC8C14()
{
  return sub_1ACAC9618(&qword_1E99F1A18, 255, (void (*)(uint64_t))type metadata accessor for ShazamMatcher.ThrottledSubscriber);
}

uint64_t sub_1ACAC8C60()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_1ACAC8C6C(uint64_t a1, uint64_t a2)
{
  return sub_1ACAC9618((unint64_t *)&unk_1E99F1A20, a2, (void (*)(uint64_t))type metadata accessor for ShazamMatcher);
}

uint64_t sub_1ACAC8CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAC8D1C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACAC8D54()
{
  return sub_1ACAC7974();
}

uint64_t sub_1ACAC8D5C()
{
  return sub_1ACAC7A58(*(void *)(v0 + 16));
}

void sub_1ACAC8D64(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_1ACAC8D74(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t sub_1ACAC8DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACAC8E34(a1, a2, a3, (uint64_t (*)(void))sub_1ACA42C00, type metadata accessor for StoreFeedUpdater.Update, type metadata accessor for StoreFeedUpdater.Update, &qword_1EB76E3D0);
}

uint64_t sub_1ACAC8DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACAC8E34(a1, a2, a3, (uint64_t (*)(void))sub_1ACA4239C, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest, &qword_1E99F1A88);
}

uint64_t sub_1ACAC8E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t *a7)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = *v7;
  uint64_t v10 = *(void *)(*v7 + 16);
  if (v10 < a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v13 = 1 - v12;
  if (__OFSUB__(1, v12))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__(v10, v13))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v9;
  if (!isUniquelyReferenced_nonNull_native || v10 + v13 > *(void *)(v9 + 24) >> 1)
  {
    uint64_t v9 = a4();
    *uint64_t v7 = v9;
  }
  uint64_t v17 = *(void *)(a5(0) - 8);
  unint64_t v18 = v9 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  uint64_t v19 = *(void *)(v17 + 72);
  uint64_t v20 = v18 + v19 * a1;
  swift_arrayDestroy();
  if (!v13) {
    goto LABEL_22;
  }
  uint64_t v21 = *(void *)(v9 + 16);
  uint64_t v22 = v21 - a2;
  if (__OFSUB__(v21, a2)) {
    goto LABEL_30;
  }
  if (v22 < 0)
  {
LABEL_32:
    uint64_t result = sub_1ACE77568();
    __break(1u);
    return result;
  }
  unint64_t v23 = v20 + v19;
  unint64_t v24 = v18 + v19 * a2;
  if (v20 + v19 < v24 || v23 >= v24 + v22 * v19)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v23 != v24)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v26 = *(void *)(v9 + 16);
  BOOL v27 = __OFADD__(v26, v13);
  uint64_t v28 = v26 + v13;
  if (v27)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(void *)(v9 + 16) = v28;
LABEL_22:
  if (v19 >= 1) {
    sub_1ACACA4B4(a3, v20, a6);
  }
  return sub_1ACA50E78(a3, a7);
}

char *sub_1ACAC9058(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1ACA44254(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

char *sub_1ACAC91DC(uint64_t a1, int64_t a2, char a3, double a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t result = (char *)sub_1ACA444A4(result, v15, 1, v6);
    uint64_t v6 = result;
  }
  uint64_t v16 = (uint64_t)&v6[16 * a1 + 32];
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_26;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 16);
    uint64_t v20 = &v6[16 * a2 + 32];
    if ((char *)(v16 + 16) != v20 || result >= &v20[16 * v19]) {
      uint64_t result = (char *)memmove(result, v20, 16 * v19);
    }
    uint64_t v21 = *((void *)v6 + 2);
    BOOL v18 = __OFADD__(v21, v10);
    uint64_t v22 = v21 + v10;
    if (!v18)
    {
      *((void *)v6 + 2) = v22;
LABEL_20:
      *(unsigned char *)uint64_t v16 = a3;
      *(double *)(v16 + 8) = a4;
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACAC9350()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)&v0[OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_workQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_1ACACA840;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_15;
  uint64_t v10 = _Block_copy(aBlock);
  int64_t v11 = v0;
  sub_1ACE75E08();
  v13[1] = MEMORY[0x1E4FBC860];
  sub_1ACAC9618((unint64_t *)&qword_1EB7734E0, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return sub_1ACE757C8();
}

uint64_t sub_1ACAC9618(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACAC9660(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v19, 0, 57);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A48);
  swift_allocObject();
  uint64_t v12 = sub_1ACE75938();
  *(void *)(v3 + 32) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A70);
  swift_allocObject();
  uint64_t v13 = sub_1ACE758B8();
  *(void *)(v4 + 40) = v13;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(void *)(v4 + 80) = 0;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F3BEA0]), sel_initWithCatalog_, a1);
  *(void *)(v4 + 16) = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  objc_allocWithZone((Class)type metadata accessor for ShazamMatcher.ThrottledSubscriber());
  id v15 = v14;
  id v16 = a3;
  swift_retain();
  swift_retain();
  id v17 = sub_1ACAC7C14((uint64_t)v15, (uint64_t)v11, (uint64_t)v16, v12, v13);
  *(void *)(v4 + 24) = v17;
  objc_msgSend(v15, sel_setDelegate_, v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return v4;
}

uint64_t sub_1ACAC9860(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1ACA423D0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = a1 << 6;
  uint64_t v13 = (char *)&v4[8 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A50);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v15 = v4[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    BOOL v18 = (char *)&v4[8 * a2 + 4];
    size_t v19 = v17 << 6;
    if (v12 != a2 << 6 || v13 >= &v18[v19]) {
      uint64_t result = (uint64_t)memmove(v13, v18, v19);
    }
    uint64_t v20 = v4[2];
    BOOL v16 = __OFADD__(v20, v8);
    uint64_t v21 = v20 - v7;
    if (!v16)
    {
      v4[2] = v21;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACAC99DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAC9A44()
{
  return swift_deallocObject();
}

void sub_1ACAC9A7C()
{
}

uint64_t sub_1ACAC9AA0(void *a1)
{
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1
     + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput;
  uint64_t v10 = *(void **)(v1
                 + OBJC_IVAR____TtCC18PodcastsFoundation13ShazamMatcherP33_02683B609352F691B94A08829495C57A19ThrottledSubscriber_currentInput);
  if (v10)
  {
    char v11 = *(unsigned char *)(v9 + 56);
    uint64_t v13 = *(void *)(v9 + 40);
    uint64_t v12 = *(void *)(v9 + 48);
    uint64_t v15 = *(void *)(v9 + 8);
    id v14 = *(uint64_t (**)(uint64_t))(v9 + 16);
    aBlock = a1;
    uint64_t v25 = v15;
    uint64_t v26 = v14;
    long long v27 = *(_OWORD *)(v9 + 24);
    uint64_t v28 = v13;
    uint64_t v29 = v12;
    char v30 = v11;
    id v16 = v10;
    id v17 = a1;
    sub_1ACE75898();
  }
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *((void *)&v27 + 1) = sub_1ACACA554;
  uint64_t v28 = v18;
  aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1ACA6DA9C;
  *(void *)&long long v27 = &block_descriptor_26_0;
  size_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1ACAC9618((unint64_t *)&qword_1EB7734E0, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v5, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACAC9DF8(void *a1)
{
  void aBlock[6] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v22 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BE8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v19 = v2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412290;
    if (a1)
    {
      id v14 = a1;
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v15;
      sub_1ACE76FF8();
    }
    else
    {
      aBlock[0] = 0;
      sub_1ACE76FF8();
      uint64_t v15 = 0;
    }
    *uint64_t v13 = v15;

    _os_log_impl(&dword_1AC9D5000, v10, v11, "Did not find match for this interval. Error: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);

    uint64_t v2 = v19;
  }
  else
  {
  }
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1ACACA554;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_22_0;
  id v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1ACAC9618((unint64_t *)&qword_1EB7734E0, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v7, v4, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACACA264(uint64_t a1, uint64_t a2)
{
  return sub_1ACACA2BC(a1, a2, (uint64_t (*)(void))sub_1ACA42C00, type metadata accessor for StoreFeedUpdater.Update);
}

uint64_t sub_1ACACA290(uint64_t a1, uint64_t a2)
{
  return sub_1ACACA2BC(a1, a2, (uint64_t (*)(void))sub_1ACA4239C, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
}

uint64_t sub_1ACACA2BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACACA4B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACACA51C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACACA554()
{
  sub_1ACAC8B38(v0);
}

uint64_t sub_1ACACA570(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1ACA44254(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

char *sub_1ACACA6DC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_1ACA444A4(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[16 * a1 + 32];
    uint64_t v15 = &v4[16 * a2 + 32];
    if (a1 != a2 || result >= &v15[16 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 16 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_1ACE77568();
  __break(1u);
  return result;
}

unint64_t sub_1ACACA850(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
    uint64_t v2 = (void *)sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (uint64_t *)&unk_1E99F1AA8;
  uint64_t v11 = MEMORY[0x1E4FBC840] + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1ACA50A70();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v10);
    swift_dynamicCast();
    sub_1ACA3AA44(v6, v7);
    sub_1ACA3AA44(v7, v40);
    sub_1ACA3AA44(v40, &v38);
    unint64_t result = sub_1ACA657FC(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      BOOL v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1ACA3AA44(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v27 = (uint64_t *)(v2[6] + 16 * result);
    *long long v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1ACA3AA44(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1ACACABBC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
    uint64_t v2 = (void *)sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1ACA50A70();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1ACA3AA44(v6, v7);
    sub_1ACA3AA44(v7, v40);
    sub_1ACA3AA44(v40, &v38);
    unint64_t result = sub_1ACA657FC(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      BOOL v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1ACA3AA44(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v27 = (uint64_t *)(v2[6] + 16 * result);
    *long long v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1ACA3AA44(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1ACACAF28(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
    uint64_t v2 = sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1ACA3AA44(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1ACA3AA44(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1ACA3AA44(v36, v37);
    sub_1ACA3AA44(v37, &v33);
    uint64_t result = sub_1ACE771D8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1ACA3AA44(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1ACA50A70();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1ACACB2F0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C40);
    uint64_t v2 = sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v14 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v15 = v14 | (v8 << 6);
      goto LABEL_37;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_39;
    }
    if (v16 >= v25) {
      break;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    int64_t v18 = v8 + 1;
    if (!v17)
    {
      int64_t v18 = v8 + 2;
      if (v8 + 2 >= v25) {
        break;
      }
      unint64_t v17 = *(void *)(v3 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v8 + 3;
        if (v8 + 3 >= v25) {
          break;
        }
        unint64_t v17 = *(void *)(v3 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v8 + 4;
          if (v8 + 4 >= v25) {
            break;
          }
          unint64_t v17 = *(void *)(v3 + 8 * v18);
          if (!v17)
          {
            int64_t v19 = v8 + 5;
            if (v8 + 5 >= v25) {
              break;
            }
            unint64_t v17 = *(void *)(v3 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                int64_t v18 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v18 >= v25) {
                  goto LABEL_38;
                }
                unint64_t v17 = *(void *)(v3 + 8 * v18);
                ++v19;
                if (v17) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v18 = v8 + 5;
          }
        }
      }
    }
LABEL_36:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v8 = v18;
LABEL_37:
    char v26 = *(unsigned char *)(*(void *)(a1 + 48) + v15);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
    swift_dynamicCast();
    sub_1ACE77B18();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1ACE77B78();
    uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v11 = v9 & ~v10;
    unint64_t v12 = v11 >> 6;
    if (((-1 << v11) & ~*(void *)(v7 + 8 * (v11 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v7 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    char v20 = 0;
    unint64_t v21 = (unint64_t)(63 - v10) >> 6;
    do
    {
      if (++v12 == v21 && (v20 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1ACACB81CLL);
      }
      BOOL v22 = v12 == v21;
      if (v12 == v21) {
        unint64_t v12 = 0;
      }
      v20 |= v22;
      uint64_t v23 = *(void *)(v7 + 8 * v12);
    }
    while (v23 == -1);
    unint64_t v13 = __clz(__rbit64(~v23)) + (v12 << 6);
LABEL_10:
    *(void *)(v7 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v2 + 48) + v13) = v26;
    *(_OWORD *)(*(void *)(v2 + 56) + 16 * v13) = v27;
    ++*(void *)(v2 + 16);
  }
LABEL_38:
  swift_release();
  sub_1ACA50A70();
  return v2;
}

uint64_t sub_1ACACB860(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
    uint64_t v2 = sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    int64_t v19 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    *(void *)&v37[0] = *v17;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    v19;
    swift_dynamicCast();
    sub_1ACACD5EC();
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1ACA3AA44(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1ACA3AA44(v36, v37);
    sub_1ACA3AA44(v37, &v33);
    uint64_t result = sub_1ACE771D8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1ACA3AA44(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1ACA50A70();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1ACACBC14(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3E8);
    uint64_t v2 = (void *)sub_1ACE77558();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1ACA50A70();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    int64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_1ACA657FC(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v19;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    char v23 = (uint64_t *)(v2[6] + 16 * v20);
    *char v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v19;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1ACACBEB8(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, double a6)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  if (a1 < 0)
  {
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else
  {
    *(void *)(inited + 32) = a1;
    sub_1ACACC0EC(inited, a2 & 1, a3, a4, a5, a6);
    return swift_setDeallocating();
  }
  return result;
}

uint64_t sub_1ACACC0EC(unint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v95 = a4;
  uint64_t v101 = a5;
  int v91 = a2;
  unint64_t v92 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v93 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MediaRequest.Params();
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v97 = v12;
  uint64_t v98 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v100 = (uint64_t)&v89 - v13;
  uint64_t v14 = sub_1ACE750A8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C88);
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1ACE75148();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v25 = self;
  if ((objc_msgSend(v25, sel_isRunningOnHomepod) & 1) != 0
    || (uint64_t result = (uint64_t)objc_msgSend(v25, sel_supportsLocalLibrary), (result & 1) == 0))
  {
    uint64_t v90 = a3;
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    sub_1ACE75128();
    uint64_t v28 = (void *)sub_1ACE75138();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    objc_msgSend(v27, sel_setLocale_, v28);

    long long v29 = (void *)sub_1ACE76178();
    id v99 = v27;
    objc_msgSend(v27, sel_setDateFormat_, v29);

    sub_1ACE75218();
    uint64_t v30 = sub_1ACE75248();
    uint64_t v31 = *(void *)(v30 - 8);
    long long v32 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v20, 1, v30) != 1)
    {
      long long v32 = (void *)sub_1ACE75228();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v30);
    }
    id v33 = v99;
    objc_msgSend(v99, sel_setTimeZone_, v32);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1ACE84470;
    *(void *)(inited + 32) = 0xD000000000000013;
    *(void *)(inited + 40) = 0x80000001ACEC3ED0;
    sub_1ACE75098();
    uint64_t v35 = (void *)sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    id v36 = objc_msgSend(v33, sel_stringFromDate_, v35);

    uint64_t v37 = sub_1ACE761B8();
    uint64_t v39 = v38;

    uint64_t v40 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v37;
    *(void *)(inited + 56) = v39;
    *(void *)(inited + 72) = v40;
    *(void *)(inited + 80) = 0x6574656C706D6F63;
    uint64_t v41 = MEMORY[0x1E4FBB390];
    *(void *)(inited + 88) = 0xE900000000000064;
    *(unsigned char *)(inited + 96) = v91 & 1;
    *(void *)(inited + 120) = v41;
    *(void *)(inited + 128) = 0xD000000000000016;
    *(void *)(inited + 136) = 0x80000001ACEC3EB0;
    *(void *)(inited + 168) = MEMORY[0x1E4FBB3D0];
    *(double *)(inited + 144) = a6 * 1000.0;
    unint64_t v42 = sub_1ACA3625C(inited);
    uint64_t v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = xmmword_1ACE84820;
    *(void *)(v43 + 32) = 1701869940;
    *(void *)(v43 + 40) = 0xE400000000000000;
    *(void *)(v43 + 48) = 0xD000000000000012;
    *(void *)(v43 + 56) = 0x80000001ACEC79D0;
    *(void *)(v43 + 72) = v40;
    *(void *)(v43 + 80) = 0x7475626972747461;
    *(void *)(v43 + 88) = 0xEA00000000007365;
    *(void *)(v43 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
    *(void *)(v43 + 96) = v42;
    unint64_t v44 = sub_1ACA3625C(v43);
    uint64_t v45 = sub_1ACACAF28(v44);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v107 = v45;
    memset(&v107[8], 0, 33);
    v106[0] = 0;
    char v105 = 1;
    char v104 = 4;
    unint64_t v46 = v92;
    int64_t v47 = *(void *)(v92 + 16);
    if (v47)
    {
      uint64_t v103 = MEMORY[0x1E4FBC860];
      sub_1ACC82D44(0, v47, 0);
      uint64_t v48 = v103;
      uint64_t v49 = (uint64_t *)(v46 + 32);
      sub_1ACA55E4C();
      do
      {
        uint64_t v50 = *v49++;
        uint64_t v102 = v50;
        uint64_t v51 = sub_1ACE770B8();
        uint64_t v53 = v52;
        uint64_t v103 = v48;
        unint64_t v55 = *(void *)(v48 + 16);
        unint64_t v54 = *(void *)(v48 + 24);
        if (v55 >= v54 >> 1)
        {
          sub_1ACC82D44(v54 > 1, v55 + 1, 1);
          uint64_t v48 = v103;
        }
        *(void *)(v48 + 16) = v55 + 1;
        uint64_t v56 = v48 + 16 * v55;
        *(void *)(v56 + 32) = v51;
        *(void *)(v56 + 40) = v53;
        --v47;
      }
      while (v47);
      uint64_t v57 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v48 = MEMORY[0x1E4FBC860];
      uint64_t v57 = MEMORY[0x1E4FBC860];
    }
    LOBYTE(v103) = 1;
    LOBYTE(v102) = 1;
    uint64_t v58 = sub_1ACE74F28();
    uint64_t v59 = v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v93, 1, 1, v58);
    unint64_t v92 = sub_1ACA35F90(v57);
    unint64_t v60 = sub_1ACA35F90(v57);
    unint64_t v61 = sub_1ACA35FB0(v57);
    unint64_t v62 = sub_1ACA360BC(v57);
    unint64_t v63 = sub_1ACA360BC(v57);
    unint64_t v64 = sub_1ACA360DC(v57);
    uint64_t v88 = (uint64_t)v59;
    *((void *)&v87 + 1) = sub_1ACA360FC(v57);
    *(void *)&long long v87 = v64;
    *((void *)&v86 + 1) = v57;
    *((void *)&v85 + 1) = v57;
    *(void *)&long long v86 = v57;
    *((void *)&v84 + 1) = v62;
    *(void *)&long long v85 = v63;
    *(void *)&long long v84 = v57;
    uint64_t v65 = v100;
    MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)v107, v106, &v105, &v104, v92, v60, v61, v57, v100, v84, v85, v86, v48, (char *)&v103, 0, 1, v87, 0, 1,
      (char *)&v102,
      0,
      v88,
      0,
      0,
      0,
      0,
      0,
      v57,
      0,
      0,
      2);
    uint64_t v93 = *(char **)(v94 + OBJC_IVAR___MTPlaybackPositionController_requestController);
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = v101;
    *(void *)(v66 + 16) = v95;
    *(void *)(v66 + 24) = v67;
    uint64_t v68 = v66;
    uint64_t v94 = v66;
    uint64_t v69 = swift_allocObject();
    uint64_t v95 = v69;
    swift_unknownObjectWeakInit();
    long long v70 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
    *((void *)v70 + 2) = v69;
    *((void *)v70 + 3) = sub_1ACACD120;
    *((void *)v70 + 4) = v68;
    sub_1ACE77B88();
    uint64_t v71 = v98;
    sub_1ACA394B0(v65, v98);
    unint64_t v72 = (*(unsigned __int8 *)(v96 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    unint64_t v73 = (v97 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v75 = (v74 + 79) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v76 = swift_allocObject();
    sub_1ACA56190(v71, v76 + v72);
    *(void *)(v76 + v73) = v57;
    unint64_t v77 = v76 + v74;
    *(void *)(v77 + 64) = v109;
    long long v78 = v108;
    *(_OWORD *)(v77 + 32) = *(_OWORD *)&v107[32];
    *(_OWORD *)(v77 + 48) = v78;
    long long v79 = *(_OWORD *)&v107[16];
    *(_OWORD *)unint64_t v77 = *(_OWORD *)v107;
    *(_OWORD *)(v77 + 16) = v79;
    uint64_t v80 = v93;
    *(void *)(v76 + v75) = v93;
    uint64_t v81 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v76 + ((v75 + 15) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v81 = sub_1ACA394A4;
    v81[1] = v70;
    uint64_t v82 = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v83 = v100;
    sub_1ACB0443C(v100, v90, (uint64_t)sub_1ACA3ABF0, v76);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return sub_1ACA39598(v83);
  }
  return result;
}

uint64_t sub_1ACACCAC4(uint64_t a1, char a2, uint64_t a3, double a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(double *)(v5 + 24) = a4;
  *(unsigned char *)(v5 + 72) = a2;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1ACACCAF0, 0, 0);
}

uint64_t sub_1ACACCAF0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  *(unsigned char *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  *(void *)(v6 + 48) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  *uint64_t v7 = v0;
  uint64_t v8 = MEMORY[0x1E4FBC848];
  v7[1] = sub_1ACACCC04;
  return MEMORY[0x1F4188160](v7, 0, 0, 0xD00000000000003BLL, 0x80000001ACEC79F0, sub_1ACACD3F8, v6, v8 + 8);
}

uint64_t sub_1ACACCC04()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1ACACCD38;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1ACACCD20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACACCD20()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ACACCD38()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACACCD9C(uint64_t a1, double a2, uint64_t a3, unint64_t a4, int a5, void *a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_1ACACC0EC(a4, a5, a6, (uint64_t)sub_1ACACD6F8, v15, a2);
  return swift_release();
}

uint64_t sub_1ACACCF0C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
    sub_1ACE766E8();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  return sub_1ACE766F8();
}

id PlaybackPositionController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PlaybackPositionController.init()()
{
  uint64_t v1 = OBJC_IVAR___MTPlaybackPositionController_requestController;
  id v2 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PlaybackPositionController();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PlaybackPositionController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaybackPositionController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACACD0E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACACD120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 16))(a5);
}

uint64_t sub_1ACACD14C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACACD184()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACACD1C4()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACACD3F8(uint64_t a1)
{
  return sub_1ACACCD9C(a1, *(double *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void **)(v1 + 48));
}

uint64_t type metadata accessor for PlaybackPositionController()
{
  return self;
}

uint64_t method lookup function for PlaybackPositionController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaybackPositionController);
}

uint64_t dispatch thunk of PlaybackPositionController.updatePlaybackPosition(episodeStoreId:completed:position:account:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PlaybackPositionController.updatePlaybackPosition(adamIDs:completed:position:account:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PlaybackPositionController.updatePlaybackPosition(adamIDs:completed:position:account:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x80);
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1ACA50B84;
  v12.n128_f64[0] = a4;
  return v14(a1, a2, a3, v12);
}

unint64_t sub_1ACACD5EC()
{
  unint64_t result = qword_1EB768F50;
  if (!qword_1EB768F50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB768F50);
  }
  return result;
}

uint64_t sub_1ACACD62C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACACD664()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACACD6F8(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  return sub_1ACACCF0C(a1);
}

uint64_t dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of URLBasedFeedUpdater.updateFeed(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ArtworkModel.template.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkModel.libraryEntity.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1ACACD80C(v1, *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return v1;
}

uint64_t sub_1ACACD80C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1ACA75154(a1, a2, a3);
  }
  return a1;
}

double ArtworkModel.width.getter()
{
  return *(double *)(v0 + 40);
}

double ArtworkModel.height.getter()
{
  return *(double *)(v0 + 48);
}

void *ArtworkModel.backgroundColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  sub_1ACAAE1F8(v1, *(unsigned char *)(v0 + 64));
  return v1;
}

uint64_t ArtworkModel.textColors.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACACD874(v1 + 72, a1);
}

uint64_t sub_1ACACD874(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ArtworkModel.style.getter()
{
  return *(unsigned __int8 *)(v0 + 129);
}

void ArtworkModel.crop.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 130);
}

uint64_t ArtworkModel.accessibilityTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkModel.format.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t ArtworkModel.isCustomSymbol.getter()
{
  return *(unsigned __int8 *)(v0 + 153);
}

uint64_t ArtworkModel.isMulticolorSymbol.getter()
{
  return *(unsigned __int8 *)(v0 + 154);
}

uint64_t ArtworkModel.imageStoreIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, char a12, char *a13, uint64_t a14, uint64_t a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20)
{
  sub_1ACACDB28(a8, (uint64_t)&v43);
  char v24 = v44;
  uint64_t v34 = v43;
  uint64_t v26 = v45;
  char v25 = v46;
  uint64_t v28 = v47;
  char v27 = v48;
  uint64_t v29 = v49;
  char v30 = v50;
  char v35 = *a13;
  char v31 = a13[1];
  uint64_t result = sub_1ACACDB28(a8, (uint64_t)v51);
  if (v51[8] == 254)
  {
    uint64_t v33 = 0;
    uint64_t v26 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    char v24 = -1;
    char v25 = -1;
    char v27 = -1;
    char v30 = -1;
  }
  else
  {
    uint64_t v33 = v34;
  }
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(double *)(a9 + 40) = a10;
  *(double *)(a9 + 48) = a11;
  *(void *)(a9 + 56) = a6;
  *(unsigned char *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = v33;
  *(unsigned char *)(a9 + 80) = v24;
  *(void *)(a9 + 88) = v26;
  *(unsigned char *)(a9 + 96) = v25;
  *(void *)(a9 + 104) = v28;
  *(unsigned char *)(a9 + 112) = v27;
  *(void *)(a9 + 120) = v29;
  *(unsigned char *)(a9 + 128) = v30;
  *(unsigned char *)(a9 + 129) = a12;
  *(unsigned char *)(a9 + 130) = v35;
  *(unsigned char *)(a9 + 131) = v31;
  *(void *)(a9 + 136) = a14;
  *(void *)(a9 + 144) = a15;
  *(unsigned char *)(a9 + 152) = a16;
  *(unsigned char *)(a9 + 153) = a17 & 1;
  *(unsigned char *)(a9 + 154) = a18 & 1;
  *(void *)(a9 + 160) = a19;
  *(void *)(a9 + 168) = a20;
  return result;
}

uint64_t sub_1ACACDB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double ArtworkModel.size.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t ArtworkModel.isMonogram.getter()
{
  return sub_1ACE76348();
}

uint64_t ArtworkModel.isSystemGlyph.getter()
{
  return sub_1ACE76348();
}

uint64_t ArtworkModel.systemGlyphName.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[9];
  v14[8] = v0[8];
  v14[9] = v4;
  v14[10] = v0[10];
  long long v5 = v0[5];
  v14[4] = v0[4];
  v14[5] = v5;
  long long v6 = v0[7];
  v14[6] = v0[6];
  v14[7] = v6;
  long long v7 = v0[1];
  v14[0] = *v0;
  v14[1] = v7;
  long long v8 = v0[3];
  v14[2] = v0[2];
  v14[3] = v8;
  sub_1ACACDD64((uint64_t)v14);
  char v9 = sub_1ACE76348();
  sub_1ACACDE5C((uint64_t)v14);
  if (v9)
  {
    sub_1ACE74EF8();
    uint64_t v10 = sub_1ACE74F28();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) != 1)
    {
      uint64_t v12 = sub_1ACE74EA8();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
      return v12;
    }
    sub_1ACA7FA64((uint64_t)v3);
  }
  return 0;
}

uint64_t sub_1ACACDD64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  long long v4 = *(void **)(a1 + 56);
  long long v5 = *(void **)(a1 + 72);
  uint64_t v12 = *(void **)(a1 + 88);
  unint64_t v14 = *(void **)(a1 + 104);
  uint64_t v15 = *(void **)(a1 + 120);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 80);
  char v9 = *(unsigned char *)(a1 + 96);
  char v10 = *(unsigned char *)(a1 + 112);
  char v13 = *(unsigned char *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_1ACACD80C(v2, v3, v6);
  sub_1ACAAE1F8(v4, v7);
  sub_1ACAAE1F8(v5, v8);
  sub_1ACAAE1F8(v12, v9);
  sub_1ACAAE1F8(v14, v10);
  sub_1ACAAE1F8(v15, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1ACACDE5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  long long v4 = *(void **)(a1 + 56);
  long long v5 = *(void **)(a1 + 72);
  uint64_t v12 = *(void **)(a1 + 88);
  unint64_t v14 = *(void **)(a1 + 104);
  uint64_t v15 = *(void **)(a1 + 120);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 80);
  char v9 = *(unsigned char *)(a1 + 96);
  char v10 = *(unsigned char *)(a1 + 112);
  char v13 = *(unsigned char *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_1ACACDF54(v2, v3, v6);
  sub_1ACAAF8FC(v4, v7);
  sub_1ACAAF8FC(v5, v8);
  sub_1ACAAF8FC(v12, v9);
  sub_1ACAAF8FC(v14, v10);
  sub_1ACAAF8FC(v15, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACACDF54(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1ACA74630(a1, a2, a3);
  }
  return a1;
}

double ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char a3@<W4>, char a4@<W5>, uint64_t a5@<X8>)
{
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  if (qword_1EB773090 != -1) {
    swift_once();
  }
  char v10 = byte_1EB773080;
  *(void *)a5 = 0x2F2F3A6870796C67;
  *(void *)(a5 + 8) = 0xE800000000000000;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  *(unsigned char *)(a5 + 32) = -1;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0;
  *(void *)(a5 + 40) = 0;
  *(unsigned char *)(a5 + 64) = -1;
  *(void *)(a5 + 72) = 0;
  *(unsigned char *)(a5 + 80) = -1;
  *(void *)(a5 + 88) = 0;
  *(unsigned char *)(a5 + 96) = -1;
  *(void *)(a5 + 104) = 0;
  *(unsigned char *)(a5 + 112) = -1;
  *(void *)(a5 + 120) = 0;
  *(void *)&double result = 16778239;
  *(_DWORD *)(a5 + 128) = 16778239;
  *(void *)(a5 + 136) = a1;
  *(void *)(a5 + 144) = a2;
  *(unsigned char *)(a5 + 152) = v10;
  *(unsigned char *)(a5 + 153) = a3 & 1;
  *(unsigned char *)(a5 + 154) = a4 & 1;
  *(void *)(a5 + 160) = 0;
  *(void *)(a5 + 168) = 0;
  return result;
}

uint64_t ArtworkModel.with(size:format:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  unsigned int v7 = (a3 & 1) == 0;
  uint64_t v8 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v10 = *(void *)(v5 + 24);
  uint64_t v11 = *(void **)(v5 + 56);
  uint64_t v12 = *(void **)(v5 + 72);
  char v13 = *(void **)(v5 + 88);
  char v31 = v13;
  unint64_t v14 = *(void **)(v5 + 104);
  uint64_t v15 = *(void **)(v5 + 120);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  uint64_t v16 = *(void *)(v5 + 136);
  uint64_t v17 = *(void *)(v5 + 144);
  char v18 = *(unsigned char *)(v5 + 153);
  char v19 = *(unsigned char *)(v5 + 154);
  v20.i64[0] = a1;
  v20.i64[1] = a2;
  if (a4 == 4) {
    char v21 = *(unsigned char *)(v5 + 152);
  }
  else {
    char v21 = a4;
  }
  unsigned __int8 v22 = *(unsigned char *)(v5 + 32);
  char v23 = *(unsigned char *)(v5 + 64);
  char v24 = *(unsigned char *)(v5 + 80);
  char v25 = *(unsigned char *)(v5 + 96);
  char v26 = *(unsigned char *)(v5 + 112);
  *(void *)a5 = *(void *)v5;
  *(void *)(a5 + 8) = v8;
  *(void *)(a5 + 16) = v9;
  *(void *)(a5 + 24) = v10;
  *(unsigned char *)(a5 + 32) = v22;
  int32x2_t v27 = vdup_n_s32(v7);
  v28.i64[0] = v27.u32[0];
  v28.i64[1] = v27.u32[1];
  int8x16_t v29 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v28, 0x3FuLL)), v20, *(int8x16_t *)(v5 + 40));
  *(int8x16_t *)(a5 + 40) = v29;
  *(void *)(a5 + 56) = v11;
  *(unsigned char *)(a5 + 64) = v23;
  *(void *)(a5 + 72) = v12;
  *(unsigned char *)(a5 + 80) = v24;
  *(void *)(a5 + 88) = v13;
  *(unsigned char *)(a5 + 96) = v25;
  *(void *)(a5 + 104) = v14;
  *(unsigned char *)(a5 + 112) = v26;
  *(void *)(a5 + 120) = v15;
  v29.i32[0] = *(_DWORD *)(v5 + 128);
  char v32 = vmovl_u8(*(uint8x8_t *)v29.i8).u8[0];
  *(_DWORD *)(a5 + 128) = v29.i32[0];
  *(void *)(a5 + 136) = v16;
  *(void *)(a5 + 144) = v17;
  *(unsigned char *)(a5 + 152) = v21;
  *(unsigned char *)(a5 + 153) = v18;
  *(unsigned char *)(a5 + 154) = v19;
  *(void *)(a5 + 160) = 0;
  *(void *)(a5 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1ACACD80C(v9, v10, v22);
  sub_1ACAAE1F8(v11, v23);
  sub_1ACAAE1F8(v12, v24);
  sub_1ACAAE1F8(v31, v25);
  sub_1ACAAE1F8(v33, v26);
  sub_1ACAAE1F8(v34, v32);
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkModel.with(crop:)@<X0>(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v3 = *a1;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  unsigned int v7 = *(void **)(v2 + 56);
  uint64_t v8 = *(void **)(v2 + 72);
  uint64_t v9 = *(void **)(v2 + 88);
  char v26 = *(void **)(v2 + 120);
  char v10 = *(unsigned char *)(v2 + 129);
  uint64_t v11 = *(void *)(v2 + 136);
  char v23 = *(void **)(v2 + 104);
  uint64_t v24 = *(void *)(v2 + 144);
  char v12 = *(unsigned char *)(v2 + 152);
  char v13 = *(unsigned char *)(v2 + 153);
  char v14 = *(unsigned char *)(v2 + 154);
  unsigned __int8 v15 = *(unsigned char *)(v2 + 32);
  char v16 = *(unsigned char *)(v2 + 64);
  char v17 = *(unsigned char *)(v2 + 80);
  char v18 = *(unsigned char *)(v2 + 96);
  char v19 = *(unsigned char *)(v2 + 112);
  char v20 = *(unsigned char *)(v2 + 128);
  char v25 = v20;
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v15;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v2 + 40);
  *(void *)(a2 + 56) = v7;
  *(unsigned char *)(a2 + 64) = v16;
  *(void *)(a2 + 72) = v8;
  *(unsigned char *)(a2 + 80) = v17;
  *(void *)(a2 + 88) = v9;
  char v21 = v9;
  *(unsigned char *)(a2 + 96) = v18;
  *(void *)(a2 + 104) = v23;
  *(unsigned char *)(a2 + 112) = v19;
  *(void *)(a2 + 120) = v26;
  *(unsigned char *)(a2 + 128) = v20;
  *(unsigned char *)(a2 + 129) = v10;
  *(_WORD *)(a2 + 130) = v3;
  *(void *)(a2 + 136) = v11;
  *(void *)(a2 + 144) = v24;
  *(unsigned char *)(a2 + 152) = v12;
  *(unsigned char *)(a2 + 153) = v13;
  *(unsigned char *)(a2 + 154) = v14;
  *(void *)(a2 + 160) = 0;
  *(void *)(a2 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1ACACD80C(v5, v6, v15);
  sub_1ACAAE1F8(v7, v16);
  sub_1ACAAE1F8(v8, v17);
  sub_1ACAAE1F8(v21, v18);
  sub_1ACAAE1F8(v23, v19);
  sub_1ACAAE1F8(v26, v25);
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkModel.with(format:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void **)(v2 + 56);
  unsigned int v7 = *(void **)(v2 + 72);
  char v19 = *(void **)(v2 + 88);
  char v21 = *(void **)(v2 + 104);
  unsigned __int8 v22 = *(void **)(v2 + 120);
  uint64_t v8 = *(void *)(v2 + 136);
  uint64_t v9 = *(void *)(v2 + 144);
  char v10 = *(unsigned char *)(v2 + 153);
  char v11 = *(unsigned char *)(v2 + 154);
  unsigned __int8 v12 = *(unsigned char *)(v2 + 32);
  char v13 = *(unsigned char *)(v2 + 64);
  char v14 = *(unsigned char *)(v2 + 80);
  char v15 = *(unsigned char *)(v2 + 96);
  char v16 = *(unsigned char *)(v2 + 112);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = v12;
  long long v17 = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(a2 + 40) = v17;
  *(void *)(a2 + 56) = v6;
  *(unsigned char *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v7;
  *(unsigned char *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v19;
  *(unsigned char *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = v21;
  *(unsigned char *)(a2 + 112) = v16;
  *(void *)(a2 + 120) = v22;
  LODWORD(v17) = *(_DWORD *)(v2 + 128);
  char v20 = vmovl_u8(*(uint8x8_t *)&v17).u8[0];
  *(_DWORD *)(a2 + 128) = v17;
  *(void *)(a2 + 136) = v8;
  *(void *)(a2 + 144) = v9;
  *(unsigned char *)(a2 + 152) = a1;
  *(unsigned char *)(a2 + 153) = v10;
  *(unsigned char *)(a2 + 154) = v11;
  *(void *)(a2 + 160) = 0;
  *(void *)(a2 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1ACACD80C(v4, v5, v12);
  sub_1ACAAE1F8(v6, v13);
  sub_1ACAAE1F8(v7, v14);
  sub_1ACAAE1F8(v19, v15);
  sub_1ACAAE1F8(v21, v16);
  sub_1ACAAE1F8(v22, v20);
  return swift_bridgeObjectRetain();
}

id ArtworkModel.with(backgroundColor:)@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void **)(v3 + 72);
  uint64_t v9 = *(void **)(v3 + 88);
  char v10 = *(void **)(v3 + 104);
  char v23 = *(void **)(v3 + 120);
  uint64_t v11 = *(void *)(v3 + 136);
  uint64_t v12 = *(void *)(v3 + 144);
  char v13 = *(unsigned char *)(v3 + 152);
  char v14 = *(unsigned char *)(v3 + 153);
  char v15 = *(unsigned char *)(v3 + 154);
  unsigned __int8 v16 = *(unsigned char *)(v3 + 32);
  char v17 = *(unsigned char *)(v3 + 80);
  char v18 = *(unsigned char *)(v3 + 96);
  char v19 = *(unsigned char *)(v3 + 112);
  *(void *)a3 = *(void *)v3;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 32) = v16;
  long long v20 = *(_OWORD *)(v3 + 40);
  *(_OWORD *)(a3 + 40) = v20;
  *(void *)(a3 + 56) = a1;
  *(unsigned char *)(a3 + 64) = a2;
  *(void *)(a3 + 72) = v8;
  *(unsigned char *)(a3 + 80) = v17;
  *(void *)(a3 + 88) = v9;
  *(unsigned char *)(a3 + 96) = v18;
  *(void *)(a3 + 104) = v10;
  *(unsigned char *)(a3 + 112) = v19;
  *(void *)(a3 + 120) = v23;
  LODWORD(v20) = *(_DWORD *)(v3 + 128);
  char v22 = vmovl_u8(*(uint8x8_t *)&v20).u8[0];
  *(_DWORD *)(a3 + 128) = v20;
  *(void *)(a3 + 136) = v11;
  *(void *)(a3 + 144) = v12;
  *(unsigned char *)(a3 + 152) = v13;
  *(unsigned char *)(a3 + 153) = v14;
  *(unsigned char *)(a3 + 154) = v15;
  *(void *)(a3 + 160) = 0;
  *(void *)(a3 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1ACACD80C(v6, v7, v16);
  sub_1ACAAE1F8(v8, v17);
  sub_1ACAAE1F8(v9, v18);
  sub_1ACAAE1F8(v10, v19);
  sub_1ACAAE1F8(v23, v22);
  swift_bridgeObjectRetain();
  return sub_1ACA7516C(a1, a2);
}

uint64_t ArtworkModel.with(libraryEntity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(v4 + 8);
  uint64_t v9 = *(void **)(v4 + 56);
  char v10 = *(void **)(v4 + 72);
  char v22 = *(void **)(v4 + 88);
  uint64_t v24 = *(void **)(v4 + 104);
  char v25 = *(void **)(v4 + 120);
  uint64_t v11 = *(void *)(v4 + 136);
  uint64_t v12 = *(void *)(v4 + 144);
  char v13 = *(unsigned char *)(v4 + 152);
  char v14 = *(unsigned char *)(v4 + 153);
  char v15 = *(unsigned char *)(v4 + 154);
  *(void *)a4 = *(void *)v4;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  *(unsigned char *)(a4 + 32) = a3;
  char v16 = *(unsigned char *)(v4 + 64);
  char v17 = *(unsigned char *)(v4 + 80);
  char v18 = *(unsigned char *)(v4 + 96);
  char v19 = *(unsigned char *)(v4 + 112);
  long long v20 = *(_OWORD *)(v4 + 40);
  *(_OWORD *)(a4 + 40) = v20;
  *(void *)(a4 + 56) = v9;
  *(unsigned char *)(a4 + 64) = v16;
  *(void *)(a4 + 72) = v10;
  *(unsigned char *)(a4 + 80) = v17;
  *(void *)(a4 + 88) = v22;
  *(unsigned char *)(a4 + 96) = v18;
  *(void *)(a4 + 104) = v24;
  *(unsigned char *)(a4 + 112) = v19;
  *(void *)(a4 + 120) = v25;
  LODWORD(v20) = *(_DWORD *)(v4 + 128);
  char v23 = vmovl_u8(*(uint8x8_t *)&v20).u8[0];
  *(_DWORD *)(a4 + 128) = v20;
  *(void *)(a4 + 136) = v11;
  *(void *)(a4 + 144) = v12;
  *(unsigned char *)(a4 + 152) = v13;
  *(unsigned char *)(a4 + 153) = v14;
  *(unsigned char *)(a4 + 154) = v15;
  *(void *)(a4 + 160) = 0;
  *(void *)(a4 + 168) = 0;
  swift_bridgeObjectRetain();
  sub_1ACACD80C(a1, a2, a3);
  sub_1ACAAE1F8(v9, v16);
  sub_1ACAAE1F8(v10, v17);
  sub_1ACAAE1F8(v22, v18);
  sub_1ACAAE1F8(v24, v19);
  sub_1ACAAE1F8(v25, v23);
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkModel.hash(into:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  sub_1ACE77B58();
  sub_1ACE77B58();
  ArtworkCrop.cropCodeString.getter();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  if (v3 == 255) {
    return sub_1ACE77B38();
  }
  sub_1ACE77B38();
  if (v3)
  {
    sub_1ACE77B28();
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      unsigned __int8 v7 = 1;
    }
    else
    {
      sub_1ACE77B58();
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      unsigned __int8 v7 = 2;
    }
  }
  else
  {
    sub_1ACE77B28();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    uint64_t v5 = v2;
    uint64_t v6 = v1;
    unsigned __int8 v7 = 0;
  }
  return sub_1ACACDF54(v5, v6, v7);
}

uint64_t ArtworkModel.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACACE954(char a1)
{
  unint64_t result = 0x6574616C706D6574;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874646977;
      break;
    case 2:
      unint64_t result = 0x746867696568;
      break;
    case 3:
      unint64_t result = 0x457972617262696CLL;
      break;
    case 4:
      unint64_t result = 0x756F72676B636162;
      break;
    case 5:
      unint64_t result = 0x6F6C6F4374786574;
      break;
    case 6:
      unint64_t result = 0x656C797473;
      break;
    case 7:
      unint64_t result = 1886351971;
      break;
    case 8:
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x74616D726F66;
      break;
    case 10:
      unint64_t result = 0x6D6F747375437369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACACEAD0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACACEB14()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACACEB50()
{
  return sub_1ACACE954(*v0);
}

uint64_t sub_1ACACEB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAD1390(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACACEB80(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1ACACEB8C(uint64_t a1)
{
  unint64_t v2 = sub_1ACAD0008();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACACEBC8(uint64_t a1)
{
  unint64_t v2 = sub_1ACAD0008();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArtworkModel.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771958);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAD0008();
  sub_1ACE77C48();
  if (!v2)
  {
    LOBYTE(v50) = 0;
    uint64_t v9 = sub_1ACE77658();
    uint64_t v11 = v10;
    uint64_t v46 = a2;
    LOBYTE(v50) = 1;
    sub_1ACAD005C();
    sub_1ACE77698();
    uint64_t v12 = v64;
    LOBYTE(v50) = 2;
    sub_1ACE77698();
    uint64_t v13 = v63;
    LOBYTE(v50) = 3;
    sub_1ACAD00B0();
    sub_1ACE77638();
    uint64_t v15 = v61;
    uint64_t v44 = v60;
    int v45 = v62;
    LOBYTE(v50) = 4;
    sub_1ACAAF8A8();
    sub_1ACE77638();
    uint64_t v42 = v15;
    uint64_t v16 = v58;
    int v43 = v59;
    LOBYTE(v48) = 5;
    sub_1ACAD0104();
    sub_1ACE77638();
    uint64_t v34 = v16;
    uint64_t v35 = v50;
    uint64_t v41 = v51;
    uint64_t v37 = v52;
    uint64_t v36 = v53;
    uint64_t v39 = v54;
    uint64_t v38 = v55;
    uint64_t v40 = v56;
    LODWORD(v16) = v57;
    LOBYTE(v48) = 6;
    sub_1ACAD0158();
    sub_1ACE77638();
    int v33 = v16;
    char v17 = v49;
    char v47 = 7;
    sub_1ACAD0234();
    sub_1ACE77638();
    int v18 = v48 & 0xFF00;
    int v19 = v48;
    if (v18 == 3328) {
      int v19 = 0;
    }
    int v31 = v19;
    if (v18 == 3328) {
      int v20 = 1;
    }
    else {
      int v20 = HIBYTE(v48);
    }
    int v30 = v20;
    LOBYTE(v48) = 8;
    uint64_t v29 = sub_1ACE775F8();
    uint64_t v32 = v21;
    char v47 = 9;
    sub_1ACAD0288();
    sub_1ACE77638();
    int v22 = v48;
    if (v48 == 4) {
      int v22 = 2;
    }
    int v28 = v22;
    LOBYTE(v48) = 10;
    int v27 = sub_1ACE77608();
    LOBYTE(v48) = 11;
    char v23 = sub_1ACE77608();
    v27 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v41 == 254)
    {
      uint64_t v35 = 0;
      uint64_t v37 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 255;
      uint64_t v36 = 255;
      uint64_t v38 = 255;
      int v33 = 255;
    }
    uint64_t v24 = v46;
    *uint64_t v46 = v9;
    v24[1] = v11;
    uint64_t v25 = v42;
    v24[2] = v44;
    v24[3] = v25;
    *((unsigned char *)v24 + 32) = v45;
    v24[5] = v12;
    v24[6] = v13;
    v24[7] = v34;
    *((unsigned char *)v24 + 64) = v43;
    v24[9] = v35;
    *((unsigned char *)v24 + 80) = v41;
    v24[11] = v37;
    *((unsigned char *)v24 + 96) = v36;
    v24[13] = v39;
    *((unsigned char *)v24 + 112) = v38;
    v24[15] = v40;
    *((unsigned char *)v24 + 128) = v33;
    *((unsigned char *)v24 + 129) = v17;
    *((unsigned char *)v24 + 130) = v31;
    *((unsigned char *)v24 + 131) = v30;
    uint64_t v26 = v32;
    v24[17] = v29;
    v24[18] = v26;
    *((unsigned char *)v24 + 152) = v28;
    *((unsigned char *)v24 + 153) = v27;
    *((unsigned char *)v24 + 154) = v23 & 1;
    v24[20] = 0;
    v24[21] = 0;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ArtworkModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v35 = *(void *)(v1 + 24);
  uint64_t v36 = v7;
  int v46 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v34 = *(void *)(v1 + 56);
  int v33 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v25 = *(void *)(v1 + 72);
  uint64_t v26 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v10 = *(unsigned __int8 *)(v1 + 96);
  uint64_t v27 = *(void *)(v1 + 88);
  uint64_t v28 = v10;
  uint64_t v11 = *(unsigned __int8 *)(v1 + 112);
  uint64_t v31 = *(void *)(v1 + 104);
  uint64_t v32 = v11;
  uint64_t v30 = *(void *)(v1 + 120);
  int v29 = *(unsigned __int8 *)(v1 + 128);
  int v24 = *(unsigned __int8 *)(v1 + 129);
  int v22 = *(unsigned __int8 *)(v1 + 130);
  int v23 = *(unsigned __int8 *)(v1 + 131);
  uint64_t v20 = *(void *)(v1 + 136);
  uint64_t v21 = *(void *)(v1 + 144);
  int v19 = *(unsigned __int8 *)(v1 + 152);
  v18[2] = *(unsigned __int8 *)(v1 + 153);
  v18[1] = *(unsigned __int8 *)(v1 + 154);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAD0008();
  sub_1ACE77C78();
  LOBYTE(v38) = 0;
  uint64_t v12 = v37;
  sub_1ACE77748();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  char v13 = v46;
  uint64_t v14 = v35;
  uint64_t v15 = v36;
  uint64_t v16 = v34;
  uint64_t v38 = v9;
  char v47 = 1;
  sub_1ACAD02DC();
  sub_1ACE77788();
  uint64_t v38 = v8;
  char v47 = 2;
  sub_1ACE77788();
  uint64_t v38 = v15;
  uint64_t v39 = v14;
  LOBYTE(v40) = v13;
  char v47 = 3;
  sub_1ACAD0330();
  sub_1ACE77728();
  uint64_t v38 = v16;
  LOBYTE(v39) = v33;
  char v47 = 4;
  sub_1ACAAE9B0();
  sub_1ACE77728();
  uint64_t v38 = v25;
  uint64_t v39 = v26;
  uint64_t v40 = v27;
  uint64_t v41 = v28;
  uint64_t v42 = v31;
  uint64_t v43 = v32;
  uint64_t v44 = v30;
  char v45 = v29;
  char v47 = 5;
  sub_1ACAD0384();
  sub_1ACE77728();
  LOBYTE(v38) = v24;
  char v47 = 6;
  sub_1ACAD03D8();
  sub_1ACE77728();
  LOBYTE(v38) = v22;
  BYTE1(v38) = v23;
  char v47 = 7;
  sub_1ACAD042C();
  sub_1ACE77788();
  LOBYTE(v38) = 8;
  sub_1ACE776E8();
  LOBYTE(v38) = v19;
  char v47 = 9;
  sub_1ACAD0480();
  sub_1ACE77788();
  LOBYTE(v38) = 10;
  sub_1ACE77758();
  LOBYTE(v38) = 11;
  sub_1ACE77758();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v3);
}

uint64_t sub_1ACACF978@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArtworkModel.init(from:)(a1, a2);
}

uint64_t sub_1ACACF990(void *a1)
{
  return ArtworkModel.encode(to:)(a1);
}

BOOL static ArtworkModel.ModelError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ArtworkModel.ModelError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ArtworkModel.ModelError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t static ArtworkModel.compositeImageEndpoint.getter()
{
  return 0xD000000000000014;
}

uint64_t static ArtworkModel.compositeImageRequestsKey.getter()
{
  return 0x526B726F77747261;
}

unint64_t static ArtworkModel.placeholderTemplate.getter()
{
  return 0xD000000000000016;
}

double static ArtworkModel.placeholder.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_1EB773090 != -1) {
    swift_once();
  }
  char v2 = byte_1EB773080;
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x80000001ACEC7A90;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = -1;
  *(void *)(a1 + 40) = 0x40A7700000000000;
  *(void *)(a1 + 48) = 0x40A7700000000000;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = -1;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = -1;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = -1;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = -1;
  *(void *)(a1 + 120) = 0;
  *(void *)&double result = 16778239;
  *(_DWORD *)(a1 + 128) = 16778239;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 152) = v2;
  *(_WORD *)(a1 + 153) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  return result;
}

uint64_t ArtworkModel.baseRequest.getter@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[7];
  long long v4 = v1[9];
  long long v30 = v1[8];
  long long v31 = v4;
  long long v5 = v1[9];
  long long v32 = v1[10];
  long long v6 = v1[3];
  long long v7 = v1[5];
  long long v26 = v1[4];
  long long v27 = v7;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v28 = v1[6];
  long long v29 = v9;
  long long v10 = v1[1];
  v23[0] = *v1;
  v23[1] = v10;
  long long v11 = v1[3];
  long long v13 = *v1;
  long long v12 = v1[1];
  long long v24 = v1[2];
  long long v25 = v11;
  v22[7] = v3;
  v22[8] = v30;
  long long v14 = v1[10];
  v22[9] = v5;
  v22[10] = v14;
  v22[3] = v6;
  v22[4] = v26;
  v22[5] = v8;
  v22[6] = v28;
  v22[0] = v13;
  v22[1] = v12;
  v22[2] = v24;
  char v21 = 16;
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_1ACACDD64((uint64_t)v23);
  qos_class_t v15 = qos_class_self();
  char v16 = 3;
  switch(v15)
  {
    case QOS_CLASS_BACKGROUND:
      char v16 = 0;
      break;
    case QOS_CLASS_USER_INITIATED:
      char v16 = 2;
      break;
    case QOS_CLASS_USER_INTERACTIVE:
      break;
    default:
      char v16 = 1;
      break;
  }
  char v18 = v16;
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v22, 0, &v21, 0, MEMORY[0x1E4FBC860], &v18, (uint64_t)v19, a1, 600.0, 600.0, 3.0);
}

BOOL _s18PodcastsFoundation12ArtworkModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  double v6 = *(double *)(a1 + 40);
  double v5 = *(double *)(a1 + 48);
  int v7 = *(unsigned __int8 *)(a1 + 129);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  double v12 = *(double *)(a2 + 40);
  double v11 = *(double *)(a2 + 48);
  int v13 = *(unsigned __int8 *)(a2 + 129);
  int v31 = *(unsigned __int8 *)(a2 + 131);
  int v32 = *(unsigned __int8 *)(a1 + 131);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v14 = sub_1ACE77848();
    BOOL result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (v4 == 255)
  {
    BOOL result = 0;
    if (v10 != 255) {
      return result;
    }
  }
  else
  {
    if (v10 == 255) {
      return 0;
    }
    if (v4)
    {
      if (v4 != 1)
      {
        if (v10 != 2) {
          return 0;
        }
        BOOL result = 0;
        if (v2 != v8) {
          return result;
        }
        goto LABEL_6;
      }
      if (v10 != 1) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v2 == v8 && v3 == v9)
    {
      BOOL result = 0;
      if (v6 != v12) {
        return result;
      }
      goto LABEL_7;
    }
    char v30 = sub_1ACE77848();
    BOOL result = 0;
    if ((v30 & 1) == 0) {
      return result;
    }
  }
LABEL_6:
  if (v6 != v12) {
    return result;
  }
LABEL_7:
  if (v5 != v11) {
    return result;
  }
  if (v7 != 3)
  {
    if (v13 != 3)
    {
      unint64_t v16 = 0xE500000000000000;
      uint64_t v17 = 0x646E756F72;
      if (v7 != 1)
      {
        uint64_t v17 = 1819044208;
        unint64_t v16 = 0xE400000000000000;
      }
      if (v7) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 0x526465646E756F72;
      }
      if (v7) {
        unint64_t v19 = v16;
      }
      else {
        unint64_t v19 = 0xEB00000000746365;
      }
      unint64_t v20 = 0xE500000000000000;
      uint64_t v21 = 0x646E756F72;
      if (v13 != 1)
      {
        uint64_t v21 = 1819044208;
        unint64_t v20 = 0xE400000000000000;
      }
      if (v13) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 0x526465646E756F72;
      }
      if (v13) {
        unint64_t v23 = v20;
      }
      else {
        unint64_t v23 = 0xEB00000000746365;
      }
      if (v18 == v22 && v19 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v24 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_47;
    }
    return 0;
  }
  if (v13 != 3) {
    return 0;
  }
LABEL_47:
  uint64_t v25 = CropCode.rawValue.getter();
  uint64_t v27 = v26;
  if (v25 == CropCode.rawValue.getter() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
    return v32 == v31;
  }
  char v29 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v29) {
    return v32 == v31;
  }
  return result;
}

unint64_t sub_1ACAD0008()
{
  unint64_t result = qword_1EB770EF8;
  if (!qword_1EB770EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EF8);
  }
  return result;
}

unint64_t sub_1ACAD005C()
{
  unint64_t result = qword_1EB770EA0;
  if (!qword_1EB770EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EA0);
  }
  return result;
}

unint64_t sub_1ACAD00B0()
{
  unint64_t result = qword_1EB770F78;
  if (!qword_1EB770F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F78);
  }
  return result;
}

unint64_t sub_1ACAD0104()
{
  unint64_t result = qword_1EB771230;
  if (!qword_1EB771230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771230);
  }
  return result;
}

unint64_t sub_1ACAD0158()
{
  unint64_t result = qword_1EB770F08;
  if (!qword_1EB770F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F08);
  }
  return result;
}

void sub_1ACAD01AC(void *a1, unsigned __int8 a2, void *a3, char a4, void *a5, char a6, void *a7, char a8)
{
  if (a2 != 254)
  {
    sub_1ACAAF8FC(a1, a2);
    sub_1ACAAF8FC(a3, a4);
    sub_1ACAAF8FC(a5, a6);
    sub_1ACAAF8FC(a7, a8);
  }
}

unint64_t sub_1ACAD0234()
{
  unint64_t result = qword_1EB770EC8;
  if (!qword_1EB770EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EC8);
  }
  return result;
}

unint64_t sub_1ACAD0288()
{
  unint64_t result = qword_1EB770F70;
  if (!qword_1EB770F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F70);
  }
  return result;
}

unint64_t sub_1ACAD02DC()
{
  unint64_t result = qword_1E99F1AC0;
  if (!qword_1E99F1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AC0);
  }
  return result;
}

unint64_t sub_1ACAD0330()
{
  unint64_t result = qword_1E99F1AC8;
  if (!qword_1E99F1AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AC8);
  }
  return result;
}

unint64_t sub_1ACAD0384()
{
  unint64_t result = qword_1E99F1AD0;
  if (!qword_1E99F1AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AD0);
  }
  return result;
}

unint64_t sub_1ACAD03D8()
{
  unint64_t result = qword_1E99F1AD8;
  if (!qword_1E99F1AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AD8);
  }
  return result;
}

unint64_t sub_1ACAD042C()
{
  unint64_t result = qword_1E99F1AE0;
  if (!qword_1E99F1AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AE0);
  }
  return result;
}

unint64_t sub_1ACAD0480()
{
  unint64_t result = qword_1E99F1AE8;
  if (!qword_1E99F1AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AE8);
  }
  return result;
}

unint64_t sub_1ACAD04D8()
{
  unint64_t result = qword_1E99F1AF0;
  if (!qword_1E99F1AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AF0);
  }
  return result;
}

unint64_t sub_1ACAD0530()
{
  unint64_t result = qword_1E99F1AF8;
  if (!qword_1E99F1AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1AF8);
  }
  return result;
}

uint64_t destroy for ArtworkModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255) {
    sub_1ACA74630(*(void *)(a1 + 16), *(void *)(a1 + 24), v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(a1 + 56), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(a1 + 72), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(a1 + 88), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 112);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(a1 + 104), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 128);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(a1 + 120), v7);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArtworkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    sub_1ACA75154(v6, v7, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = (id *)(a2 + 56);
  int v9 = *(unsigned __int8 *)(a2 + 64);
  if (v9 == 255)
  {
    *(void *)(a1 + 56) = *v8;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    id v10 = *v8;
    sub_1ACA7516C(*v8, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 56) = v10;
    *(unsigned char *)(a1 + 64) = v9;
  }
  double v11 = (id *)(a2 + 72);
  int v12 = *(unsigned __int8 *)(a2 + 80);
  if (v12 == 255)
  {
    *(void *)(a1 + 72) = *v11;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    id v13 = *v11;
    sub_1ACA7516C(*v11, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = v12;
  }
  char v14 = (id *)(a2 + 88);
  int v15 = *(unsigned __int8 *)(a2 + 96);
  if (v15 == 255)
  {
    *(void *)(a1 + 88) = *v14;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    id v16 = *v14;
    sub_1ACA7516C(*v14, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 88) = v16;
    *(unsigned char *)(a1 + 96) = v15;
  }
  uint64_t v17 = (id *)(a2 + 104);
  int v18 = *(unsigned __int8 *)(a2 + 112);
  if (v18 == 255)
  {
    *(void *)(a1 + 104) = *v17;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    id v19 = *v17;
    sub_1ACA7516C(*v17, *(unsigned char *)(a2 + 112));
    *(void *)(a1 + 104) = v19;
    *(unsigned char *)(a1 + 112) = v18;
  }
  unint64_t v20 = (id *)(a2 + 120);
  int v21 = *(unsigned __int8 *)(a2 + 128);
  if (v21 == 255)
  {
    *(void *)(a1 + 120) = *v20;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  }
  else
  {
    id v22 = *v20;
    sub_1ACA7516C(*v20, *(unsigned char *)(a2 + 128));
    *(void *)(a1 + 120) = v22;
    *(unsigned char *)(a1 + 128) = v21;
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v23 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v23;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArtworkModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  int v5 = (long long *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      long long v15 = *v5;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *uint64_t v4 = v15;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      sub_1ACA75154(v12, v13, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1ACA75B3C(a1 + 16);
    char v14 = *(unsigned char *)(a2 + 32);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 32) = v14;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    sub_1ACA75154(v7, v8, *(unsigned char *)(a2 + 32));
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v6;
    sub_1ACA74630(v9, v10, v11);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v16 = (id *)(a1 + 56);
  uint64_t v17 = (id *)(a2 + 56);
  int v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      id v24 = *v17;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *id v16 = v24;
    }
    else
    {
      id v22 = *v17;
      sub_1ACA7516C(*v17, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v22;
      *(unsigned char *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_1ACA75B90(a1 + 56);
    char v23 = *(unsigned char *)(a2 + 64);
    *id v16 = *v17;
    *(unsigned char *)(a1 + 64) = v23;
  }
  else
  {
    id v19 = *v17;
    sub_1ACA7516C(*v17, *(unsigned char *)(a2 + 64));
    unint64_t v20 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v19;
    char v21 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v18;
    sub_1ACA74648(v20, v21);
  }
  uint64_t v25 = (id *)(a1 + 72);
  uint64_t v26 = (id *)(a2 + 72);
  int v27 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v27 == 255)
    {
      id v33 = *v26;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v25 = v33;
    }
    else
    {
      id v31 = *v26;
      sub_1ACA7516C(*v26, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v31;
      *(unsigned char *)(a1 + 80) = v27;
    }
  }
  else if (v27 == 255)
  {
    sub_1ACA75B90(a1 + 72);
    char v32 = *(unsigned char *)(a2 + 80);
    *uint64_t v25 = *v26;
    *(unsigned char *)(a1 + 80) = v32;
  }
  else
  {
    id v28 = *v26;
    sub_1ACA7516C(*v26, *(unsigned char *)(a2 + 80));
    char v29 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v28;
    char v30 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v27;
    sub_1ACA74648(v29, v30);
  }
  uint64_t v34 = (id *)(a1 + 88);
  uint64_t v35 = (id *)(a2 + 88);
  int v36 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v36 == 255)
    {
      id v42 = *v35;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *uint64_t v34 = v42;
    }
    else
    {
      id v40 = *v35;
      sub_1ACA7516C(*v35, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v40;
      *(unsigned char *)(a1 + 96) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_1ACA75B90(a1 + 88);
    char v41 = *(unsigned char *)(a2 + 96);
    *uint64_t v34 = *v35;
    *(unsigned char *)(a1 + 96) = v41;
  }
  else
  {
    id v37 = *v35;
    sub_1ACA7516C(*v35, *(unsigned char *)(a2 + 96));
    uint64_t v38 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v37;
    char v39 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v36;
    sub_1ACA74648(v38, v39);
  }
  uint64_t v43 = (id *)(a1 + 104);
  uint64_t v44 = (id *)(a2 + 104);
  int v45 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v45 == 255)
    {
      id v51 = *v44;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *uint64_t v43 = v51;
    }
    else
    {
      id v49 = *v44;
      sub_1ACA7516C(*v44, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v49;
      *(unsigned char *)(a1 + 112) = v45;
    }
  }
  else if (v45 == 255)
  {
    sub_1ACA75B90(a1 + 104);
    char v50 = *(unsigned char *)(a2 + 112);
    *uint64_t v43 = *v44;
    *(unsigned char *)(a1 + 112) = v50;
  }
  else
  {
    id v46 = *v44;
    sub_1ACA7516C(*v44, *(unsigned char *)(a2 + 112));
    char v47 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v46;
    char v48 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v45;
    sub_1ACA74648(v47, v48);
  }
  uint64_t v52 = (id *)(a1 + 120);
  uint64_t v53 = (id *)(a2 + 120);
  int v54 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v54 == 255)
    {
      id v60 = *v53;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *uint64_t v52 = v60;
    }
    else
    {
      id v58 = *v53;
      sub_1ACA7516C(*v53, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v58;
      *(unsigned char *)(a1 + 128) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_1ACA75B90(a1 + 120);
    char v59 = *(unsigned char *)(a2 + 128);
    *uint64_t v52 = *v53;
    *(unsigned char *)(a1 + 128) = v59;
  }
  else
  {
    id v55 = *v53;
    sub_1ACA7516C(*v53, *(unsigned char *)(a2 + 128));
    uint64_t v56 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v55;
    char v57 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v54;
    sub_1ACA74648(v56, v57);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArtworkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = (_OWORD *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    int v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 != 255)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(unsigned char *)(a1 + 32) = v7;
      sub_1ACA74630(v8, v9, v6);
      goto LABEL_6;
    }
    sub_1ACA75B3C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v10 = (void *)(a2 + 56);
  int v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    int v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      uint64_t v13 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v10;
      *(unsigned char *)(a1 + 64) = v12;
      sub_1ACA74648(v13, v11);
      goto LABEL_11;
    }
    sub_1ACA75B90(a1 + 56);
  }
  *(void *)(a1 + 56) = *v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_11:
  char v14 = (void *)(a2 + 72);
  int v15 = *(unsigned __int8 *)(a1 + 80);
  if (v15 != 255)
  {
    int v16 = *(unsigned __int8 *)(a2 + 80);
    if (v16 != 255)
    {
      uint64_t v17 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v14;
      *(unsigned char *)(a1 + 80) = v16;
      sub_1ACA74648(v17, v15);
      goto LABEL_16;
    }
    sub_1ACA75B90(a1 + 72);
  }
  *(void *)(a1 + 72) = *v14;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_16:
  int v18 = (void *)(a2 + 88);
  int v19 = *(unsigned __int8 *)(a1 + 96);
  if (v19 != 255)
  {
    int v20 = *(unsigned __int8 *)(a2 + 96);
    if (v20 != 255)
    {
      char v21 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v18;
      *(unsigned char *)(a1 + 96) = v20;
      sub_1ACA74648(v21, v19);
      goto LABEL_21;
    }
    sub_1ACA75B90(a1 + 88);
  }
  *(void *)(a1 + 88) = *v18;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_21:
  id v22 = (void *)(a2 + 104);
  int v23 = *(unsigned __int8 *)(a1 + 112);
  if (v23 != 255)
  {
    int v24 = *(unsigned __int8 *)(a2 + 112);
    if (v24 != 255)
    {
      uint64_t v25 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v22;
      *(unsigned char *)(a1 + 112) = v24;
      sub_1ACA74648(v25, v23);
      goto LABEL_26;
    }
    sub_1ACA75B90(a1 + 104);
  }
  *(void *)(a1 + 104) = *v22;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_26:
  uint64_t v26 = (void *)(a2 + 120);
  int v27 = *(unsigned __int8 *)(a1 + 128);
  if (v27 == 255)
  {
LABEL_30:
    *(void *)(a1 + 120) = *v26;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    goto LABEL_31;
  }
  int v28 = *(unsigned __int8 *)(a2 + 128);
  if (v28 == 255)
  {
    sub_1ACA75B90(a1 + 120);
    goto LABEL_30;
  }
  char v29 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *v26;
  *(unsigned char *)(a1 + 128) = v28;
  sub_1ACA74648(v29, v27);
LABEL_31:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v30 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  uint64_t v31 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkModel()
{
  return &type metadata for ArtworkModel;
}

unsigned char *storeEnumTagSinglePayload for ArtworkModel.ModelError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAD10BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkModel.ModelError()
{
  return &type metadata for ArtworkModel.ModelError;
}

uint64_t getEnumTagSinglePayload for ArtworkModel.CK(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArtworkModel.CK(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAD1250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkModel.CK()
{
  return &type metadata for ArtworkModel.CK;
}

unint64_t sub_1ACAD128C()
{
  unint64_t result = qword_1E99F1B00;
  if (!qword_1E99F1B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1B00);
  }
  return result;
}

unint64_t sub_1ACAD12E4()
{
  unint64_t result = qword_1EB770B10;
  if (!qword_1EB770B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B10);
  }
  return result;
}

unint64_t sub_1ACAD133C()
{
  unint64_t result = qword_1EB770EF0;
  if (!qword_1EB770EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EF0);
  }
  return result;
}

uint64_t sub_1ACAD1390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x457972617262696CLL && a2 == 0xED0000797469746ELL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEA00000000007372 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1886351971 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACEC7AB0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74616D726F66 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D6F747375437369 && a2 == 0xEE006C6F626D7953 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACEC7AD0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1ACAD18A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v35 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1ACC82FE8(0, v2, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
  uint64_t v4 = 0;
  int64_t v28 = v2;
  uint64_t v29 = v1 + 32;
  while (2)
  {
    uint64_t v5 = *(void *)(v29 + 8 * v4);
    uint64_t v30 = v4 + 1;
    uint64_t v6 = sub_1ACE77538();
    BOOL v7 = (void *)v6;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = v5 + 64;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v13 = 0;
    if (v10)
    {
LABEL_7:
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_24;
    }
    while (1)
    {
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_35;
      }
      if (v16 >= v32) {
        goto LABEL_27;
      }
      unint64_t v17 = *(void *)(v31 + 8 * v16);
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v32) {
          goto LABEL_27;
        }
        unint64_t v17 = *(void *)(v31 + 8 * v13);
        if (!v17)
        {
          int64_t v13 = v16 + 2;
          if (v16 + 2 >= v32) {
            goto LABEL_27;
          }
          unint64_t v17 = *(void *)(v31 + 8 * v13);
          if (!v17)
          {
            int64_t v13 = v16 + 3;
            if (v16 + 3 >= v32) {
              goto LABEL_27;
            }
            unint64_t v17 = *(void *)(v31 + 8 * v13);
            if (!v17) {
              break;
            }
          }
        }
      }
LABEL_23:
      unint64_t v10 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_24:
      int v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1ACA6A14C(*(void *)(v5 + 56) + 40 * v15, (uint64_t)v34);
      swift_bridgeObjectRetain();
      AnyCodable.value.getter((uint64_t)v33);
      sub_1ACA6A1A8((uint64_t)v34);
      *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      id v22 = (void *)(v7[6] + 16 * v15);
      *id v22 = v21;
      v22[1] = v20;
      uint64_t result = (uint64_t)sub_1ACA3AA44(v33, (_OWORD *)(v7[7] + 32 * v15));
      uint64_t v23 = v7[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24)
      {
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7[2] = v25;
      if (v10) {
        goto LABEL_7;
      }
    }
    int64_t v18 = v16 + 4;
    if (v18 >= v32)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v3 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC82FE8(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v35;
      }
      unint64_t v27 = *(void *)(v3 + 16);
      unint64_t v26 = *(void *)(v3 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1ACC82FE8(v26 > 1, v27 + 1, 1);
        uint64_t v3 = v35;
      }
      *(void *)(v3 + 16) = v27 + 1;
      *(void *)(v3 + 8 * v27 + 32) = v7;
      uint64_t v4 = v30;
      if (v30 == v28)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
      continue;
    }
    break;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_27;
    }
    unint64_t v17 = *(void *)(v31 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1ACAD1BBC()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0x746E656D676573;
  }
}

uint64_t sub_1ACAD1BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAD2EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAD1C24(uint64_t a1)
{
  unint64_t v2 = sub_1ACAD1E38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAD1C60(uint64_t a1)
{
  unint64_t v2 = sub_1ACAD1E38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MusicSubscriptionInfo.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CD8);
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAD1E38();
  sub_1ACE77C78();
  char v13 = 0;
  sub_1ACE77748();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CA0);
    sub_1ACAD1E8C();
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_1ACAD1E38()
{
  unint64_t result = qword_1EB771C48;
  if (!qword_1EB771C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C48);
  }
  return result;
}

unint64_t sub_1ACAD1E8C()
{
  unint64_t result = qword_1EB771CA8;
  if (!qword_1EB771CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771CA0);
    sub_1ACA69264(&qword_1EB771C90, (void (*)(void))sub_1ACA65540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771CA8);
  }
  return result;
}

uint64_t MusicSubscriptionInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAD1E38();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_1ACE77658();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CA0);
  char v15 = 1;
  sub_1ACAD215C();
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1ACAD215C()
{
  unint64_t result = qword_1EB771CB0;
  if (!qword_1EB771CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771CA0);
    sub_1ACA69264(&qword_1EB771C98, (void (*)(void))sub_1ACA692E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771CB0);
  }
  return result;
}

uint64_t sub_1ACAD2208@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicSubscriptionInfo.init(from:)(a1, a2);
}

uint64_t sub_1ACAD2220(void *a1)
{
  return MusicSubscriptionInfo.encode(to:)(a1);
}

void (*static MusicSubscriptionInfoLoader.loadIfNeeded()())(char *, uint64_t)
{
  uint64_t v0 = sub_1ACE75DC8();
  uint64_t v59 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE75E48();
  uint64_t v4 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE74F28();
  char v57 = *(uint8_t **)(v7 - 8);
  uint64_t v58 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v56 - v11;
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v56 - v13;
  id v15 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v16 = objc_msgSend(v15, sel_ams_activeiTunesAccount);

  if (v16)
  {
    if (qword_1E99F4FE0)
    {
      unint64_t v17 = (void (*)(char *, uint64_t))qword_1E99F4FE0;
      swift_bridgeObjectRetain();
      return v17;
    }
    uint64_t v59 = 0;
    sub_1ACE74CB8();
    swift_allocObject();
    uint64_t v60 = sub_1ACE74CA8();
    id v22 = objc_msgSend(self, sel_defaultManager);
    uint64_t v23 = self;
    id v24 = objc_msgSend(v23, sel_documentsDirectory);
    sub_1ACE74E98();

    sub_1ACE74E38();
    uint64_t v25 = v58;
    unint64_t v17 = (void (*)(char *, uint64_t))*((void *)v57 + 1);
    v17(v12, v58);
    sub_1ACE74EC8();
    v17(v14, v25);
    unint64_t v26 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    LODWORD(v24) = objc_msgSend(v22, sel_fileExistsAtPath_, v26);

    if (!v24)
    {
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1ACE754C8();
      __swift_project_value_buffer(v32, (uint64_t)qword_1EB76D548);
      id v33 = sub_1ACE75498();
      os_log_type_t v34 = sub_1ACE76BE8();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1AC9D5000, v33, v34, "File does not exist. Cannot get Music Subscription Info.", v35, 2u);
        MEMORY[0x1AD11B340](v35, -1, -1);
      }

      sub_1ACAD2E10();
      swift_allocError();
      *int v36 = 1;
      goto LABEL_22;
    }
    id v27 = objc_msgSend(v23, sel_documentsDirectory);
    sub_1ACE74E98();

    int64_t v28 = v56;
    sub_1ACE74E38();
    v17(v14, v25);
    uint64_t v29 = v61;
    uint64_t v30 = sub_1ACE74F38();
    if (v29)
    {
      v17(v28, v25);
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1ACE754C8();
      __swift_project_value_buffer(v39, (uint64_t)qword_1EB76D548);
      id v40 = v29;
      char v41 = sub_1ACE75498();
      os_log_type_t v42 = sub_1ACE76BE8();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 138412290;
        unint64_t v17 = (void (*)(char *, uint64_t))(v43 + 12);
        uint64_t v45 = sub_1ACE74D68();
        aBlock[0] = v45;
        sub_1ACE76FF8();
        void *v44 = v45;

        _os_log_impl(&dword_1AC9D5000, v41, v42, "Unable to get Music Subscription Info with error: %@.", v43, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v44, -1, -1);
        MEMORY[0x1AD11B340](v43, -1, -1);
      }
      else
      {
      }
LABEL_22:
      swift_willThrow();
      swift_release();
      return v17;
    }
    uint64_t v37 = v30;
    unint64_t v38 = v31;
    v17(v28, v25);
    sub_1ACAD2E8C();
    sub_1ACE74C98();
    unint64_t v17 = (void (*)(char *, uint64_t))sub_1ACAD18A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1ACE754C8();
    __swift_project_value_buffer(v47, (uint64_t)qword_1EB76D548);
    swift_bridgeObjectRetain_n();
    char v48 = sub_1ACE75498();
    os_log_type_t v49 = sub_1ACE76C08();
    if (os_log_type_enabled(v48, v49))
    {
      char v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v61 = 0;
      aBlock[0] = v58;
      *(_DWORD *)char v50 = 136315138;
      char v57 = v50 + 4;
      swift_bridgeObjectRetain();
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770968);
      uint64_t v52 = MEMORY[0x1AD118740](v17, v51);
      unint64_t v54 = v53;
      swift_bridgeObjectRelease();
      uint64_t v63 = sub_1ACA3189C(v52, v54, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v48, v49, "Retrieved Music Subscription Info from file: %s", v50, 0xCu);
      uint64_t v55 = v58;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v55, -1, -1);
      MEMORY[0x1AD11B340](v50, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    sub_1ACA50850(v37, v38);

    swift_release();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v19 = v59;
    uint64_t v18 = v60;
    uint64_t v61 = v4;
    if (qword_1EB76E160 != -1) {
      swift_once();
    }
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    aBlock[4] = (uint64_t)j___s18PodcastsFoundation27MusicSubscriptionInfoLoaderC06deletecdE8IfNeededyyFZ_0;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1ACA6DA9C;
    void aBlock[3] = (uint64_t)&block_descriptor_16;
    unint64_t v17 = (void (*)(char *, uint64_t))_Block_copy(aBlock);
    sub_1ACE75E08();
    uint64_t v63 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v6, v2, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v2, v0);
    v61[1](v6, v3);
    swift_release();
    sub_1ACAD2E10();
    swift_allocError();
    *uint64_t v21 = 2;
    swift_willThrow();
  }
  return v17;
}

id MusicSubscriptionInfoLoader.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id MusicSubscriptionInfoLoader.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicSubscriptionInfoLoader();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MusicSubscriptionInfoLoader.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicSubscriptionInfoLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACAD2DFC()
{
  return swift_deallocObject();
}

unint64_t sub_1ACAD2E10()
{
  unint64_t result = qword_1E99F1B08;
  if (!qword_1E99F1B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1B08);
  }
  return result;
}

uint64_t sub_1ACAD2E64(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1ACAD2E8C()
{
  unint64_t result = qword_1EB771C70;
  if (!qword_1EB771C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C70);
  }
  return result;
}

uint64_t sub_1ACAD2EE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656D676573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ACEC7B40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACAD2FD0(uint64_t a1)
{
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  char v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v52 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v52 - v10;
  uint64_t v12 = *(void *)a1;
  sub_1ACE74CF8();
  swift_allocObject();
  uint64_t v13 = (void *)sub_1ACE74CE8();
  uint64_t v58 = v12;
  long long v59 = *(_OWORD *)(a1 + 8);
  sub_1ACAD40B0();
  uint64_t v14 = sub_1ACE74CD8();
  if (v1)
  {

    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1ACE754C8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D548);
    unint64_t v17 = sub_1ACE75498();
    os_log_type_t v18 = sub_1ACE76BE8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1AC9D5000, v17, v18, "Unable to encode Music Subscription Info. Cannot write file.", v19, 2u);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }

    sub_1ACAD2E10();
    swift_allocError();
    *uint64_t v20 = 0;
    swift_willThrow();
  }
  else
  {
    unint64_t v56 = v15;
    uint64_t v57 = v14;
    uint64_t v55 = 0;
    v52[1] = v13;
    v52[0] = self;
    id v21 = objc_msgSend(v52[0], sel_defaultManager);
    id v53 = self;
    id v22 = objc_msgSend(v53, sel_documentsDirectory);
    sub_1ACE74E98();

    unint64_t v54 = 0x80000001ACEC7AF0;
    sub_1ACE74E38();
    uint64_t v23 = v60 + 8;
    id v24 = *(void (**)(char *, uint64_t))(v60 + 8);
    v24(v9, v3);
    sub_1ACE74EC8();
    uint64_t v60 = v23;
    v24(v11, v3);
    uint64_t v25 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    unsigned int v26 = objc_msgSend(v21, sel_fileExistsAtPath_, v25);

    if (v26)
    {
      id v27 = objc_msgSend(v53, sel_documentsDirectory);
      sub_1ACE74E98();

      sub_1ACE74E38();
      v24(v11, v3);
      unint64_t v28 = v56;
      uint64_t v29 = v57;
      uint64_t v30 = v55;
      sub_1ACE74F98();
      if (v30)
      {
        v24(v6, v3);
        if (qword_1EB76D568 != -1) {
          swift_once();
        }
        uint64_t v31 = sub_1ACE754C8();
        __swift_project_value_buffer(v31, (uint64_t)qword_1EB76D548);
        id v32 = v30;
        id v33 = sub_1ACE75498();
        os_log_type_t v34 = sub_1ACE76BE8();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          int v36 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v35 = 138412290;
          uint64_t v37 = sub_1ACE74D68();
          uint64_t v58 = v37;
          sub_1ACE76FF8();
          *int v36 = v37;

          _os_log_impl(&dword_1AC9D5000, v33, v34, "Cannot update the existing file with error: %@", v35, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v36, -1, -1);
          MEMORY[0x1AD11B340](v35, -1, -1);
        }
        else
        {
        }
        uint64_t v51 = v57;

        swift_willThrow();
        sub_1ACA50850(v51, v56);
      }
      else
      {
        v24(v6, v3);
        sub_1ACA50850(v29, v28);
      }
    }
    else
    {
      id v38 = objc_msgSend(v52[0], sel_defaultManager);
      id v39 = objc_msgSend(v53, sel_documentsDirectory);
      sub_1ACE74E98();

      sub_1ACE74E38();
      v24(v9, v3);
      sub_1ACE74EC8();
      v24(v11, v3);
      id v40 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      unint64_t v41 = v56;
      os_log_type_t v42 = (void *)sub_1ACE74F68();
      objc_msgSend(v38, sel_createFileAtPath_contents_attributes_, v40, v42, 0);

      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1ACE754C8();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EB76D548);
      uint64_t v44 = sub_1ACE75498();
      os_log_type_t v45 = sub_1ACE76C08();
      if (os_log_type_enabled(v44, v45))
      {
        unint64_t v46 = v41;
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_1AC9D5000, v44, v45, "Created new file to store Music Subscription Info sync.", v47, 2u);
        MEMORY[0x1AD11B340](v47, -1, -1);
        uint64_t v48 = v57;
        unint64_t v49 = v46;
      }
      else
      {
        uint64_t v48 = v57;
        unint64_t v49 = v41;
      }
      sub_1ACA50850(v48, v49);
    }
  }
  return swift_release();
}

void _s18PodcastsFoundation27MusicSubscriptionInfoLoaderC06deletecdE8IfNeededyyFZ_0()
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1ACE74F28();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)v31 - v5;
  v31[0] = self;
  id v7 = objc_msgSend(v31[0], sel_defaultManager);
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_documentsDirectory);
  sub_1ACE74E98();

  sub_1ACE74E38();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  sub_1ACE74EC8();
  v10(v6, v0);
  uint64_t v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned int v12 = objc_msgSend(v7, sel_fileExistsAtPath_, v11);

  if (v12)
  {
    id v13 = objc_msgSend(v31[0], sel_defaultManager);
    id v14 = objc_msgSend(v8, sel_documentsDirectory);
    sub_1ACE74E98();

    sub_1ACE74E38();
    v10(v4, v0);
    sub_1ACE74EC8();
    v10(v6, v0);
    unint64_t v15 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    v32[0] = 0;
    unsigned __int8 v16 = objc_msgSend(v13, sel_removeItemAtPath_error_, v15, v32);

    id v17 = v32[0];
    if ((v16 & 1) == 0)
    {
      os_log_type_t v18 = v17;
      uint64_t v19 = (void *)sub_1ACE74D78();

      swift_willThrow();
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1ACE754C8();
      __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D548);
      id v21 = v19;
      id v22 = sub_1ACE75498();
      os_log_type_t v23 = sub_1ACE76BE8();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = (void *)swift_slowAlloc();
        *(_DWORD *)id v24 = 138412290;
        unsigned int v26 = (void *)sub_1ACE74D68();
        v32[0] = v26;
        sub_1ACE76FF8();
        *uint64_t v25 = v26;

        _os_log_impl(&dword_1AC9D5000, v22, v23, "Unable to delete Music Subscription Info with error: %@.", v24, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v25, -1, -1);
        MEMORY[0x1AD11B340](v24, -1, -1);
      }
      else
      {
      }
    }
  }
  else
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1ACE754C8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EB76D548);
    unint64_t v28 = sub_1ACE75498();
    os_log_type_t v29 = sub_1ACE76C08();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_1AC9D5000, v28, v29, "No subscription info on disk. Not deleting data.", v30, 2u);
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
  }
}

uint64_t type metadata accessor for MusicSubscriptionInfoLoader()
{
  return self;
}

void *assignWithCopy for MusicSubscriptionInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicSubscriptionInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicSubscriptionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfo()
{
  return &type metadata for MusicSubscriptionInfo;
}

unsigned char *storeEnumTagSinglePayload for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAD3E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError()
{
  return &type metadata for MusicSubscriptionInfoLoader.MusicSubscriptionInfoLoaderError;
}

unsigned char *storeEnumTagSinglePayload for MusicSubscriptionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAD3F18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfo.CodingKeys()
{
  return &type metadata for MusicSubscriptionInfo.CodingKeys;
}

unint64_t sub_1ACAD3F54()
{
  unint64_t result = qword_1E99F1B10;
  if (!qword_1E99F1B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1B10);
  }
  return result;
}

unint64_t sub_1ACAD3FAC()
{
  unint64_t result = qword_1E99F1B18;
  if (!qword_1E99F1B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1B18);
  }
  return result;
}

unint64_t sub_1ACAD4004()
{
  unint64_t result = qword_1EB771C58;
  if (!qword_1EB771C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C58);
  }
  return result;
}

unint64_t sub_1ACAD405C()
{
  unint64_t result = qword_1EB771C50;
  if (!qword_1EB771C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C50);
  }
  return result;
}

unint64_t sub_1ACAD40B0()
{
  unint64_t result = qword_1EB771C60;
  if (!qword_1EB771C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C60);
  }
  return result;
}

uint64_t Synchronized.init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACAD4688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t Synchronized.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1ACAD468C(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

void (*Synchronized.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x68uLL);
  *a1 = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  v5[8] = v2;
  v5[9] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[10] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[11] = malloc(v8);
  id v9 = malloc(v8);
  v5[12] = v9;
  OSAllocatedUnfairLock.current.getter(*v2, (uint64_t)v9);
  return sub_1ACAD42B4;
}

void sub_1ACAD42B4(uint64_t a1, char a2)
{
  unint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 88);
  int v3 = *(void **)(*(void *)a1 + 96);
  uint64_t v5 = *(void *)(*(void *)a1 + 72);
  uint64_t v6 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    uint64_t v7 = (uint64_t *)v2[8];
    (*(void (**)(void, void, void))(v2[10] + 16))(v2[11], v2[12], v2[9]);
    uint64_t v8 = *v7;
    v2[2] = v5;
    v2[3] = v4;
    sub_1ACC723D4((void (*)(uint64_t))sub_1ACAD47F0, (uint64_t)v2, v8);
    id v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v4, v5);
    v9(v3, v5);
  }
  else
  {
    uint64_t v10 = *(void *)v2[8];
    v2[6] = v5;
    v2[7] = v3;
    sub_1ACC723D4((void (*)(uint64_t))sub_1ACAD47F0, (uint64_t)(v2 + 4), v10);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  free(v3);
  free(v4);
  free(v2);
}

void Synchronized.modify(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = a1;
  v4[4] = a2;
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACAD46E8, (uint64_t)v4, a3);
}

uint64_t sub_1ACAD445C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

uint64_t Synchronized<A>.compareExchange(expected:desired:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[2] = a4;
  void v6[3] = a5;
  v6[4] = a1;
  void v6[5] = a2;
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACAD4718, (uint64_t)v6, a3);
  return v7;
}

uint64_t sub_1ACAD4510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t result = sub_1ACE76168();
  if (result)
  {
    uint64_t v9 = *(void *)(a3 - 8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a3);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, a2, a3);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
  }
  *a4 = v10;
  return result;
}

BOOL Synchronized<A>.enableIfDisabled()(os_unfair_lock_s *a1)
{
  v4[2] = 0;
  v4[1] = 1;
  uint64_t v1 = a1 + 4;
  unint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_1ACAD4738(v1, v4);
  os_unfair_lock_unlock(v2);
  return v4[0];
}

unsigned char *sub_1ACAD4660@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X2>, BOOL *a4@<X8>)
{
  char v4 = *a2 ^ *result;
  if ((v4 & 1) == 0) {
    *uint64_t result = *a3;
  }
  *a4 = (v4 & 1) == 0;
  return result;
}

void sub_1ACAD468C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  v4[2] = *(void *)(a2 + 16);
  BOOL v4[3] = a1;
  sub_1ACC723D4((void (*)(uint64_t))sub_1ACAD47F0, (uint64_t)v4, v3);
}

uint64_t sub_1ACAD46E8()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1ACAD4718@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1ACAD4510(a1, *(void *)(v2 + 40), *(void *)(v2 + 16), a2);
}

unsigned char *sub_1ACAD4738@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  char v3 = **(unsigned char **)(v2 + 16) ^ *result;
  if ((v3 & 1) == 0) {
    *uint64_t result = **(unsigned char **)(v2 + 24);
  }
  *a2 = (v3 & 1) == 0;
  return result;
}

uint64_t sub_1ACAD4768(void *a1, uint64_t a2, uint64_t a3)
{
  return Synchronized.wrappedValue.getter(*a1, *(void *)(a3 + a2 - 8));
}

void sub_1ACAD4778(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Synchronized();
  sub_1ACAD468C(a1, v2);
}

uint64_t sub_1ACAD47B8()
{
  return 8;
}

void *sub_1ACAD47C4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1ACAD47D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for Synchronized()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACAD47F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

id RecommendationModuleContentRequest.__allocating_init(moduleID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id RecommendationModuleContentRequest.init(moduleID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  *(void *)uint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for RecommendationModuleContentRequest();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for RecommendationModuleContentRequest()
{
  return self;
}

uint64_t sub_1ACAD49C0(void (*a1)(uint64_t, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = a2;
  unint64_t v46 = a1;
  uint64_t v4 = sub_1ACE754C8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74DB8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RecommendationModulesCache();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_msgSend(self, sel_sharedCacheDirectory);
  sub_1ACE74E98();

  strcpy(v48, "ListenNowCache");
  v48[15] = -18;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F276A8], v6);
  sub_1ACA4F4AC();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = &v17[*(int *)(v15 + 28)];
  *(void *)uint64_t v19 = 0x4D73656C75646F4DLL;
  *((void *)v19 + 1) = 0xEF61746164617465;
  uint64_t v20 = &v17[*(int *)(v15 + 32)];
  strcpy(v20, "ModuleContent-");
  v20[15] = -18;
  id v21 = (uint64_t *)&v3[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  uint64_t v22 = *(void *)&v3[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  swift_bridgeObjectRetain();
  os_log_type_t v23 = (char *)RecommendationModulesCache.moduleContent(moduleID:)(v22);
  swift_bridgeObjectRelease();
  sub_1ACAD55F0((uint64_t)v17);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (!v23) {
    goto LABEL_15;
  }
  uint64_t v25 = *(void *)&v23[OBJC_IVAR___MTRecommendationModule_attributes];
  if (!v25) {
    goto LABEL_20;
  }
  unsigned int v26 = (uint64_t *)(v25 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (!*v26 || !*(void *)(v27 + 16)) {
    goto LABEL_20;
  }
  int v28 = *(unsigned __int8 *)(v27 + 32);
  if (v28)
  {
    if (v28 == 1)
    {
      os_log_type_t v29 = &OBJC_IVAR___MTRecommendationModule_shows;
      goto LABEL_9;
    }
    while (1)
    {
LABEL_20:
      sub_1ACE77498();
      __break(1u);
    }
  }
  os_log_type_t v29 = &OBJC_IVAR___MTRecommendationModule_episodes;
LABEL_9:
  uint64_t v30 = (unint64_t *)&v23[*v29];
  swift_beginAccess();
  if (*v30) {
    unint64_t v31 = *v30;
  }
  else {
    unint64_t v31 = v24;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7722D0);
    uint64_t v24 = sub_1ACE774B8();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACE779C8();

    uint64_t v24 = v31;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  id v32 = v47;
  sub_1ACE754A8();
  id v33 = v3;
  os_log_type_t v34 = sub_1ACE75498();
  os_log_type_t v35 = sub_1ACE76C08();
  if (os_log_type_enabled(v34, v35))
  {
    int v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v50 = v37;
    *(_DWORD *)int v36 = 136315138;
    uint64_t v38 = *v21;
    unint64_t v39 = v21[1];
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1ACA3189C(v38, v39, &v50);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v34, v35, "Displaying items from Listen Now module with ID %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v37, -1, -1);
    MEMORY[0x1AD11B340](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
  }
  type metadata accessor for RecommendationModuleContentResponse();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v24;
  swift_bridgeObjectRelease();
  v46(v40, 0);
  return swift_release();
}

uint64_t RecommendationModuleContentResponse.__allocating_init(serverObjects:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  swift_bridgeObjectRelease();
  return v2;
}

id RecommendationModuleContentRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RecommendationModuleContentRequest.init()()
{
}

uint64_t sub_1ACAD51B0()
{
  return swift_bridgeObjectRelease();
}

id RecommendationModuleContentRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecommendationModuleContentRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RecommendationModuleContentResponse.init(serverObjects:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1ACAD52B8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    MEMORY[0x1AD119490](a2, v4);
    swift_bridgeObjectRelease();
    return;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_9:
    __break(1u);
    return;
  }
  swift_unknownObjectRetain();
}

uint64_t RecommendationModuleContentResponse.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RecommendationModuleContentResponse.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACAD55F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecommendationModulesCache();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RecommendationModuleContentResponse()
{
  return self;
}

uint64_t method lookup function for RecommendationModuleContentRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModuleContentRequest);
}

uint64_t dispatch thunk of RecommendationModuleContentRequest.__allocating_init(moduleID:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RecommendationModuleContentRequest.perform(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t method lookup function for RecommendationModuleContentResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationModuleContentResponse);
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.__allocating_init(serverObjects:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.items(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.item(in:at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.numberOfItems(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.numberOfSections()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of RecommendationModuleContentResponse.section(at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1ACAD57B0(char *a1, const void *a2)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RecommendationModulesCache();
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(self, sel_sharedCacheDirectory);
  sub_1ACE74E98();

  strcpy(v45, "ListenNowCache");
  v45[15] = -18;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F276A8], v5);
  sub_1ACA4F4AC();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v18 = &v16[*(int *)(v14 + 28)];
  *(void *)id v18 = 0x4D73656C75646F4DLL;
  *((void *)v18 + 1) = 0xEF61746164617465;
  uint64_t v19 = &v16[*(int *)(v14 + 32)];
  strcpy(v19, "ModuleContent-");
  v19[15] = -18;
  uint64_t v20 = (uint64_t *)&a1[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  uint64_t v21 = *(void *)&a1[OBJC_IVAR___MTRecommendationModuleContentRequest_moduleID];
  swift_bridgeObjectRetain();
  uint64_t v22 = (char *)RecommendationModulesCache.moduleContent(moduleID:)(v21);
  swift_bridgeObjectRelease();
  sub_1ACAD55F0((uint64_t)v16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (!v22) {
    goto LABEL_15;
  }
  uint64_t v24 = *(void *)&v22[OBJC_IVAR___MTRecommendationModule_attributes];
  if (!v24) {
    goto LABEL_20;
  }
  uint64_t v25 = (uint64_t *)(v24 + OBJC_IVAR___MTRecommendationModuleAttributes_resourceTypes);
  swift_beginAccess();
  uint64_t v26 = *v25;
  if (!*v25 || !*(void *)(v26 + 16)) {
    goto LABEL_20;
  }
  int v27 = *(unsigned __int8 *)(v26 + 32);
  if (v27)
  {
    if (v27 == 1)
    {
      int v28 = &OBJC_IVAR___MTRecommendationModule_shows;
      goto LABEL_9;
    }
    while (1)
    {
LABEL_20:
      _Block_release(v43);
      sub_1ACE77498();
      __break(1u);
    }
  }
  int v28 = &OBJC_IVAR___MTRecommendationModule_episodes;
LABEL_9:
  os_log_type_t v29 = (unint64_t *)&v22[*v28];
  swift_beginAccess();
  if (*v29) {
    unint64_t v30 = *v29;
  }
  else {
    unint64_t v30 = v23;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7722D0);
    uint64_t v23 = sub_1ACE774B8();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACE779C8();

    uint64_t v23 = v30;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  unint64_t v31 = v44;
  sub_1ACE754A8();
  id v32 = a1;
  id v33 = sub_1ACE75498();
  os_log_type_t v34 = sub_1ACE76C08();
  if (os_log_type_enabled(v33, v34))
  {
    os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v47 = v36;
    *(_DWORD *)os_log_type_t v35 = 136315138;
    uint64_t v37 = *v20;
    unint64_t v38 = v20[1];
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1ACA3189C(v37, v38, &v47);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v33, v34, "Displaying items from Listen Now module with ID %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v36, -1, -1);
    MEMORY[0x1AD11B340](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v42);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v42);
  }
  type metadata accessor for RecommendationModuleContentResponse();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v23;
  swift_bridgeObjectRelease();
  (*((void (**)(const void *, uint64_t, void))v43 + 2))(v43, v39, 0);
  return swift_release();
}

uint64_t AssetProcessingStep<>.resizeOnDisk(for:using:)@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  return AssetProcessingStep<>.resizeOnDisk(to:scale:using:)(a2, a3, a4, a5, a1[22], a1[23], a1[24]);
}

uint64_t AssetProcessingStep<>.resizeOnDisk(to:scale:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v14 = *(void *)(a2 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  id v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3E158(v15, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v7, a2);
  return sub_1ACAD5F94(v20, (uint64_t)v17, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1ACAD5F94@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  uint64_t v16 = (int *)type metadata accessor for DiskResizeArtworkProcessingStep();
  uint64_t v17 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(&a5[v16[9]], a2, a3);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 40))(&v34, a3, a4);
  v52[8] = v42;
  v52[9] = v43;
  v52[10] = v44;
  v52[4] = v38;
  v52[5] = v39;
  v52[6] = v40;
  v52[7] = v41;
  v52[0] = v34;
  v52[1] = v35;
  id v52[2] = v36;
  v52[3] = v37;
  v33[8] = v42;
  v33[9] = v43;
  v33[10] = v44;
  v33[4] = v38;
  v33[5] = v39;
  v33[6] = v40;
  v33[7] = v41;
  v33[0] = v34;
  v33[1] = v35;
  _OWORD v33[2] = v36;
  v33[3] = v37;
  LOBYTE(a4) = v45;
  char v32 = v46;
  char v18 = v47;
  uint64_t v19 = v49;
  char v31 = v48;
  sub_1ACA3AAD4((uint64_t)&v50, (uint64_t)v30, &qword_1EB772EA0);
  sub_1ACACDD64((uint64_t)v52);
  swift_bridgeObjectRetain();
  ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v33, a4, &v32, v18, v19, &v31, (uint64_t)v30, (uint64_t)v51, a6, a7, a8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, a3);
  sub_1ACA69E88((uint64_t)&v34);
  long long v20 = v51[13];
  *((_OWORD *)a5 + 12) = v51[12];
  *((_OWORD *)a5 + 13) = v20;
  long long v21 = v51[15];
  *((_OWORD *)a5 + 14) = v51[14];
  *((_OWORD *)a5 + 15) = v21;
  long long v22 = v51[9];
  *((_OWORD *)a5 + 8) = v51[8];
  *((_OWORD *)a5 + 9) = v22;
  long long v23 = v51[11];
  *((_OWORD *)a5 + 10) = v51[10];
  *((_OWORD *)a5 + 11) = v23;
  long long v24 = v51[5];
  *((_OWORD *)a5 + 4) = v51[4];
  *((_OWORD *)a5 + 5) = v24;
  long long v25 = v51[7];
  *((_OWORD *)a5 + 6) = v51[6];
  *((_OWORD *)a5 + 7) = v25;
  long long v26 = v51[1];
  *(_OWORD *)a5 = v51[0];
  *((_OWORD *)a5 + 1) = v26;
  long long v27 = v51[3];
  *((_OWORD *)a5 + 2) = v51[2];
  *((_OWORD *)a5 + 3) = v27;
  int v28 = (double *)&a5[v16[10]];
  *int v28 = a6;
  v28[1] = a7;
  *(double *)&a5[v16[11]] = a8;
  return sub_1ACA3AABC(a1, (uint64_t)&a5[v16[12]]);
}

uint64_t DiskResizeArtworkProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA69E2C(v1, a1);
}

uint64_t DiskResizeArtworkProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t);
  CGFloat v22;
  CGFloat v23;
  void (*v24)(char *, CGSize *, uint64_t);
  uint64_t v25;
  double v26;
  double v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGSize *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t result;
  uint64_t v55;
  void (*v56)(char *, CGSize *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  CGSize *v67;
  char *v68;
  uint64_t v69;
  uint64_t AssociatedConformanceWitness;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  long long v75[2];
  long long v76[11];
  double v77;
  double v78;
  double v79;
  CGSize v80;

  uint64_t v3 = v2;
  unint64_t v72 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = type metadata accessor for ArtworkContent();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_1ACE756F8();
  uint64_t v65 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v62 = (char *)&v55 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = v8;
  long long v59 = WitnessTable;
  uint64_t v11 = type metadata accessor for EmitLifecycle();
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v61 = (uint64_t)&v55 - v13;
  uint64_t v71 = AssociatedTypeWitness;
  uint64_t v69 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v74 = (char *)&v55 - v15;
  uint64_t v16 = *(void *)(a1 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v57 = v18;
  uint64_t v58 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v20 = (char *)&v55 - v19;
  long long v21 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 40);
  uint64_t v68 = (char *)v3 + *(int *)(a1 + 36);
  unint64_t v73 = v6;
  v21(v76, v6, v5);
  long long v22 = v77;
  long long v23 = v78;
  sub_1ACA69E88((uint64_t)v76);
  v80.width = v22;
  v80.height = v23;
  LODWORD(v8) = CGSizeEqualToSize(v80, v3[11]);
  long long v24 = *(void (**)(char *, CGSize *, uint64_t))(v16 + 16);
  uint64_t v67 = v3;
  unint64_t v56 = v24;
  v24(v20, v3, a1);
  if (!v8)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, a1);
    os_log_type_t v29 = v5;
    unint64_t v30 = v73;
    goto LABEL_5;
  }
  long long v25 = v73;
  v21(v76, v73, v5);
  long long v26 = v79;
  sub_1ACA69E88((uint64_t)v76);
  long long v27 = *((double *)v20 + 24);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, a1);
  int v28 = v72;
  os_log_type_t v29 = v5;
  unint64_t v30 = v25;
  if (v26 != v27)
  {
LABEL_5:
    uint64_t v55 = v29;
    (*(void (**)(uint64_t))(v29 + 48))(v30);
    long long v35 = v67;
    sub_1ACA3E158((uint64_t)v67 + *(int *)(a1 + 48), (uint64_t)v76);
    long long v36 = (uint64_t *)((char *)v35 + *(int *)(a1 + 40));
    long long v37 = *v36;
    long long v38 = v36[1];
    long long v39 = *(void *)((char *)&v35->width + *(int *)(a1 + 44));
    long long v40 = v58;
    v56(v58, v35, a1);
    sub_1ACA3AABC(v76, (uint64_t)v75);
    long long v41 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    long long v42 = (v57 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    long long v43 = (v42 + 47) & 0xFFFFFFFFFFFFFFF8;
    long long v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
    char v45 = swift_allocObject();
    char v46 = v55;
    *(void *)(v45 + 16) = v73;
    *(void *)(v45 + 24) = v46;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v45 + v41, v40, a1);
    sub_1ACA3AABC(v75, v45 + v42);
    char v47 = (void *)(v45 + v43);
    char v48 = v71;
    int v28 = v72;
    *char v47 = v37;
    v47[1] = v38;
    *(void *)(v45 + v44) = v39;
    uint64_t v49 = v62;
    uint64_t v50 = v74;
    sub_1ACE75C28();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v48);
    uint64_t v51 = swift_getWitnessTable();
    AssetProcessingStep.metadataTrace.getter(a1, v51, (uint64_t)v76);
    uint64_t v52 = v66;
    id v53 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
    char v31 = v61;
    Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v76, (uint64_t)"DiskResizeOperation", 19, 2, 0, 0, 0, v53 & 1, v61, v52);
    sub_1ACA50E78((uint64_t)v76, &qword_1EB772EA0);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v52);
    char v32 = v64;
    swift_getWitnessTable();
    id v33 = sub_1ACE75AD8();
    long long v34 = v63;
    goto LABEL_6;
  }
  char v31 = (uint64_t)v74;
  (*(void (**)(uint64_t))(v5 + 48))(v30);
  char v32 = v71;
  id v33 = sub_1ACE75AD8();
  long long v34 = v69;
LABEL_6:
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v31, v32);
  *int v28 = v33;
  return result;
}

uint64_t sub_1ACAD6874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, void (*a4)(void, void, void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  void (*v62)(_OWORD *__return_ptr, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned char *v73;
  unsigned char *v75;
  unsigned char *v76;
  NSObject *v77;
  unsigned char *v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned char *v84;
  unsigned char *v85;
  uint64_t v86;
  uint8_t *v87;
  os_signpost_id_t v88;
  unsigned char v89[12];
  int v90;
  unsigned char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned char *v96;
  unsigned char *v97;
  unsigned char *v98;
  unsigned char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  void (*v108)(void, void, void);
  unsigned char *v109;
  unsigned char *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(void, void, void);
  uint64_t v114;
  uint64_t v115[3];
  uint64_t v116;
  uint64_t v117;
  _OWORD v118[2];
  uint64_t v119;

  char v104 = a3;
  char v105 = a5;
  char v113 = a4;
  uint64_t v102 = a1;
  uint64_t v95 = a6;
  uint64_t v13 = sub_1ACE75448();
  unint64_t v92 = *(void *)(v13 - 8);
  uint64_t v93 = v13;
  MEMORY[0x1F4188790](v13);
  int v91 = &v89[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v98 = &v89[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v89[-v18];
  uint64_t v20 = sub_1ACE74F28();
  uint64_t v100 = *(void *)(v20 - 8);
  uint64_t v101 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v97 = &v89[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v21);
  uint64_t v110 = &v89[-v23];
  uint64_t v112 = sub_1ACE753F8();
  uint64_t v24 = *(void *)(v112 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v112);
  uint64_t v96 = &v89[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v109 = &v89[-v28];
  MEMORY[0x1F4188790](v27);
  unint64_t v30 = &v89[-v29];
  uint64_t v31 = sub_1ACE75118();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  long long v34 = &v89[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v114 = a2;
  sub_1ACA3AAD4(a2 + 216, (uint64_t)v115, &qword_1EB772EA0);
  uint64_t v35 = v116;
  if (v116)
  {
    uint64_t v36 = v117;
    __swift_project_boxed_opaque_existential_1(v115, v116);
    uint64_t v106 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    unint64_t v38 = v37;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v115);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v115, &qword_1EB772EA0);
    sub_1ACE75108();
    uint64_t v106 = sub_1ACE750C8();
    unint64_t v38 = v39;
    (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v34, v31);
  }
  if (qword_1EB76D3D0 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1ACE75438();
  uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB76D3B8);
  sub_1ACE75428();
  sub_1ACE753C8();
  swift_bridgeObjectRetain();
  uint64_t v94 = v41;
  long long v42 = sub_1ACE75428();
  int v43 = sub_1ACE76E18();
  char v44 = sub_1ACE76FA8();
  id v99 = v19;
  if (v44)
  {
    uint64_t v111 = v24;
    char v45 = *(void (**)(void, void, void))(v24 + 16);
    uint64_t v107 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    long long v108 = v45;
    uint64_t v90 = v43;
    char v46 = v109;
    v45(v109, v30, v112);
    char v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v115[0] = v48;
    *(_DWORD *)char v47 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v118[0] = sub_1ACA3189C(v106, v38, v115);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v49 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v42, (os_signpost_type_t)v90, v49, "ResizeImage", "[identifier=%{name=identifier}s] Resize", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v48, -1, -1);
    MEMORY[0x1AD11B340](v47, -1, -1);

    uint64_t v50 = v46;
    uint64_t v24 = v111;
    uint64_t v51 = v112;
    (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v50, v112);
    unint64_t v53 = v107;
    uint64_t v52 = v108;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v52 = *(void (**)(void, void, void))(v24 + 16);
    unint64_t v53 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v51 = v112;
    uint64_t v50 = v109;
  }
  uint64_t v107 = v53;
  long long v108 = v52;
  v52(v50, v30, v51);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v106 = sub_1ACE75468();
  unint64_t v54 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
  uint64_t v111 = v24 + 8;
  v54(v30, v51);
  uint64_t v55 = v113;
  uint64_t v56 = v105;
  uint64_t v57 = type metadata accessor for DiskResizeArtworkProcessingStep();
  uint64_t WitnessTable = swift_getWitnessTable();
  AssetProcessingStep.metadataTrace.getter(v57, WitnessTable, (uint64_t)v115);
  uint64_t v59 = v116;
  if (v116)
  {
    uint64_t v60 = v117;
    __swift_project_boxed_opaque_existential_1(v115, v116);
    __swift_project_boxed_opaque_existential_1(v104, *((void *)v104 + 3));
    swift_getDynamicType();
    uint64_t v61 = sub_1ACE77D48();
    unsigned __int8 v62 = *(void (**)(_OWORD *__return_ptr, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 24);
    uint64_t v63 = v60;
    uint64_t v55 = v113;
    v62(v118, "ResizeImage", 11, 2, v61, v64, v59, v63);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v115);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v115, &qword_1EB772EA0);
    memset(v118, 0, sizeof(v118));
    char v119 = 0;
  }
  uint64_t v65 = (uint64_t)v110;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(v56 + 40))(v115, v55, v56);
  uint64_t v66 = v103;
  sub_1ACAD76C8(v102, v65);
  if (v66)
  {
    swift_release();
    sub_1ACA69E88((uint64_t)v115);
    return sub_1ACA50E78((uint64_t)v118, qword_1EB76AD60);
  }
  sub_1ACA69E88((uint64_t)v115);
  uint64_t v67 = *((void *)v104 + 3);
  uint64_t v68 = *((void *)v104 + 4);
  __swift_project_boxed_opaque_existential_1(v104, v67);
  uint64_t v69 = (uint64_t)v99;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double, double, double))(v68 + 8))(v65, v67, v68, a7, a8, a9);
  long long v70 = v98;
  sub_1ACA3AAD4(v69, (uint64_t)v98, &qword_1EB7731B0);
  uint64_t v71 = v100;
  unint64_t v72 = v101;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v100 + 48))(v70, 1, v101) == 1)
  {
    sub_1ACA50E78((uint64_t)v70, &qword_1EB7731B0);
    type metadata accessor for DiskResizeArtworkProcessingStep.ResizeError();
    swift_getWitnessTable();
    swift_allocError();
    *unint64_t v73 = 0;
    swift_willThrow();
    swift_release();
    sub_1ACA50E78(v69, &qword_1EB7731B0);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v65, v72);
    return sub_1ACA50E78((uint64_t)v118, qword_1EB76AD60);
  }
  unint64_t v75 = v97;
  char v113 = *(void (**)(void, void, void))(v71 + 32);
  long long v114 = v71 + 32;
  v113(v97, v70, v72);
  sub_1ACA3AAD4((uint64_t)v118, (uint64_t)v115, qword_1EB76AD60);
  if (v116)
  {
    __swift_project_boxed_opaque_existential_1(v115, v116);
    TraceInterval.end()();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v115);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v115, qword_1EB76AD60);
  }
  uint64_t v76 = v96;
  unint64_t v77 = sub_1ACE75428();
  sub_1ACE75458();
  LODWORD(v105) = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    long long v78 = v91;
    sub_1ACE75488();
    swift_release();
    uint64_t v80 = v92;
    long long v79 = v93;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v92 + 88))(v78, v93) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v81 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v78, v79);
      uint64_t v81 = "";
    }
    char v104 = (char *)v81;
    long long v84 = v109;
    long long v85 = v96;
    long long v86 = v112;
    v108(v109, v96, v112);
    long long v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v87 = 0;
    uint64_t v88 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v77, (os_signpost_type_t)v105, v88, "ResizeImage", v104, v87, 2u);
    MEMORY[0x1AD11B340](v87, -1, -1);

    v54(v85, v86);
    sub_1ACA50E78((uint64_t)v99, &qword_1EB7731B0);
    uint64_t v82 = v101;
    (*(void (**)(unsigned char *, uint64_t))(v100 + 8))(v110, v101);
    sub_1ACA50E78((uint64_t)v118, qword_1EB76AD60);
    swift_release();
    v54(v84, v86);
    uint64_t v83 = v95;
    unint64_t v75 = v97;
  }
  else
  {

    v54(v76, v112);
    sub_1ACA50E78((uint64_t)v99, &qword_1EB7731B0);
    uint64_t v82 = v101;
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v65, v101);
    sub_1ACA50E78((uint64_t)v118, qword_1EB76AD60);
    swift_release();
    uint64_t v83 = v95;
  }
  v113(v83, v75, v82);
  type metadata accessor for ArtworkContent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACAD7404()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for DiskResizeArtworkProcessingStep();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  int v6 = *(unsigned __int8 *)(v0 + v3 + 32);
  if (v6 != 255) {
    sub_1ACA74630(*(void *)(v5 + 16), *(void *)(v5 + 24), v6);
  }
  int v7 = *(unsigned __int8 *)(v5 + 64);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(v5 + 56), v7);
  }
  int v8 = *(unsigned __int8 *)(v5 + 80);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v5 + 72), v8);
  }
  int v9 = *(unsigned __int8 *)(v5 + 96);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v5 + 88), v9);
  }
  int v10 = *(unsigned __int8 *)(v5 + 112);
  if (v10 != 255) {
    sub_1ACA74648(*(id *)(v5 + 104), v10);
  }
  int v11 = *(unsigned __int8 *)(v5 + 128);
  if (v11 != 255) {
    sub_1ACA74648(*(id *)(v5 + 120), v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(v5 + 216);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + *(int *)(v2 + 36), v1);
  __swift_destroy_boxed_opaque_existential_0(v5 + *(int *)(v2 + 48));
  __swift_destroy_boxed_opaque_existential_0(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t type metadata accessor for DiskResizeArtworkProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACAD75E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void (**)(void, void, void))(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for DiskResizeArtworkProcessingStep() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ACAD6874(a1, v2 + v8, (char *)(v2 + v9), v5, v6, a2, *(double *)(v2 + ((v9 + 47) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v2 + ((v9 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v2 + ((((v9 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1ACAD76C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v8);
  int v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACA569F0(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = (char *)v10;
  }
  else
  {
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_1ACAD7888((uint64_t)v7);
    sub_1ACE74F98();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return sub_1ACA50850(v11, v12);
    }
    sub_1ACA50850(v11, v12);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v7, v4);
}

uint64_t sub_1ACAD7888@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v16 - v10;
  id v12 = objc_msgSend(self, sel_defaultManager);
  id v13 = objc_msgSend(v12, sel_temporaryDirectory);

  sub_1ACE74E98();
  sub_1ACE75108();
  sub_1ACE750C8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1ACE74E38();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  void v16[2] = 0x697365722E706D74;
  v16[3] = 0xEB000000002E657ALL;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

BOOL static DiskResizeArtworkProcessingStep.ResizeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiskResizeArtworkProcessingStep.ResizeError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t DiskResizeArtworkProcessingStep.ResizeError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAD7C08()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAD7C44()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACAD7C60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ACAD7CAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACAD7D68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((*(void *)(v5 + 64) + 263) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v43 = *(void *)(v5 + 64);
    uint64_t v44 = *(void *)(a3 + 16);
    uint64_t v10 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v10;
    int v11 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v11 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v12 = a2[2];
      uint64_t v13 = a2[3];
      sub_1ACA75154(v12, v13, v11);
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v11;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v14 = (id *)(a2 + 7);
    int v15 = *((unsigned __int8 *)a2 + 64);
    if (v15 == 255)
    {
      *(void *)(a1 + 56) = *v14;
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v16 = *v14;
      sub_1ACA7516C(*v14, *((unsigned char *)a2 + 64));
      *(void *)(a1 + 56) = v16;
      *(unsigned char *)(a1 + 64) = v15;
    }
    uint64_t v17 = (id *)(a2 + 9);
    int v18 = *((unsigned __int8 *)a2 + 80);
    if (v18 == 255)
    {
      *(void *)(a1 + 72) = *v17;
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v19 = *v17;
      sub_1ACA7516C(*v17, *((unsigned char *)a2 + 80));
      *(void *)(a1 + 72) = v19;
      *(unsigned char *)(a1 + 80) = v18;
    }
    uint64_t v20 = (id *)(a2 + 11);
    int v21 = *((unsigned __int8 *)a2 + 96);
    if (v21 == 255)
    {
      *(void *)(a1 + 88) = *v20;
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v22 = *v20;
      sub_1ACA7516C(*v20, *((unsigned char *)a2 + 96));
      *(void *)(a1 + 88) = v22;
      *(unsigned char *)(a1 + 96) = v21;
    }
    uint64_t v23 = (id *)(a2 + 13);
    int v24 = *((unsigned __int8 *)a2 + 112);
    if (v24 == 255)
    {
      *(void *)(a1 + 104) = *v23;
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v25 = *v23;
      sub_1ACA7516C(*v23, *((unsigned char *)a2 + 112));
      *(void *)(a1 + 104) = v25;
      *(unsigned char *)(a1 + 112) = v24;
    }
    uint64_t v26 = (id *)(a2 + 15);
    int v27 = *((unsigned __int8 *)a2 + 128);
    if (v27 == 255)
    {
      *(void *)(a1 + 120) = *v26;
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v28 = *v26;
      sub_1ACA7516C(*v26, *((unsigned char *)a2 + 128));
      *(void *)(a1 + 120) = v28;
      *(unsigned char *)(a1 + 128) = v27;
    }
    uint64_t v29 = ~v6;
    *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
    *(_WORD *)(a1 + 130) = *((_WORD *)a2 + 65);
    uint64_t v30 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v30;
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(_WORD *)(a1 + 153) = *(_WORD *)((char *)a2 + 153);
    uint64_t v31 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v31;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(void *)(a1 + 192) = a2[24];
    *(_WORD *)(a1 + 200) = *((_WORD *)a2 + 100);
    *(unsigned char *)(a1 + 202) = *((unsigned char *)a2 + 202);
    *(unsigned char *)(a1 + 203) = *((unsigned char *)a2 + 203);
    *(void *)(a1 + 208) = a2[26];
    uint64_t v32 = a2[30];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      uint64_t v33 = a2[31];
      *(void *)(a1 + 240) = v32;
      *(void *)(a1 + 248) = v33;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 216, (uint64_t)(a2 + 27), v32);
    }
    else
    {
      long long v34 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 232) = v34;
      *(void *)(a1 + 248) = a2[31];
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))((a1 + v6 + 256) & v29, ((unint64_t)a2 + v6 + 256) & v29, v44);
    uint64_t v35 = (_OWORD *)((v43 + 7 + ((a1 + v6 + 256) & v29)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = (_OWORD *)((v43 + 7 + (((unint64_t)a2 + v6 + 256) & v29)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v35 = *v36;
    unint64_t v37 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v38 = (void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v37 = *v38;
    unint64_t v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = *(void *)(v40 + 24);
    *(void *)(v39 + 24) = v41;
    *(void *)(v39 + 32) = *(void *)(v40 + 32);
    (**(void (***)(void))(v41 - 8))();
  }
  return a1;
}

uint64_t sub_1ACAD8188(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255) {
    sub_1ACA74630(*(void *)(a1 + 16), *(void *)(a1 + 24), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(a1 + 56), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(a1 + 72), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(a1 + 88), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(a1 + 104), v8);
  }
  int v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(a1 + 120), v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  }
  uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (a1 + *(unsigned __int8 *)(v10 + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  unint64_t v13 = (((((*(void *)(v11 + 56) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  return __swift_destroy_boxed_opaque_existential_0(v13);
}

uint64_t sub_1ACAD82C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  int v7 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    sub_1ACA75154(v8, v9, v7);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v7;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v10 = (id *)(a2 + 56);
  int v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    *(void *)(a1 + 56) = *v10;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    id v12 = *v10;
    sub_1ACA7516C(*v10, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 56) = v12;
    *(unsigned char *)(a1 + 64) = v11;
  }
  unint64_t v13 = (id *)(a2 + 72);
  int v14 = *(unsigned __int8 *)(a2 + 80);
  if (v14 == 255)
  {
    *(void *)(a1 + 72) = *v13;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    id v15 = *v13;
    sub_1ACA7516C(*v13, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 72) = v15;
    *(unsigned char *)(a1 + 80) = v14;
  }
  id v16 = (id *)(a2 + 88);
  int v17 = *(unsigned __int8 *)(a2 + 96);
  if (v17 == 255)
  {
    *(void *)(a1 + 88) = *v16;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    id v18 = *v16;
    sub_1ACA7516C(*v16, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 88) = v18;
    *(unsigned char *)(a1 + 96) = v17;
  }
  id v19 = (id *)(a2 + 104);
  int v20 = *(unsigned __int8 *)(a2 + 112);
  if (v20 == 255)
  {
    *(void *)(a1 + 104) = *v19;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    id v21 = *v19;
    sub_1ACA7516C(*v19, *(unsigned char *)(a2 + 112));
    *(void *)(a1 + 104) = v21;
    *(unsigned char *)(a1 + 112) = v20;
  }
  id v22 = (id *)(a2 + 120);
  int v23 = *(unsigned __int8 *)(a2 + 128);
  if (v23 == 255)
  {
    *(void *)(a1 + 120) = *v22;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  }
  else
  {
    id v24 = *v22;
    sub_1ACA7516C(*v22, *(unsigned char *)(a2 + 128));
    *(void *)(a1 + 120) = v24;
    *(unsigned char *)(a1 + 128) = v23;
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v25 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v25;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  uint64_t v26 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v26;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v27 = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v27;
    *(void *)(a1 + 248) = v28;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 216, a2 + 216, v27);
  }
  else
  {
    long long v29 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v29;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  uint64_t v30 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v31 = v30 + 16;
  uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = ((v32 | 0x100) + a1) & ~v32;
  uint64_t v34 = ((v32 | 0x100) + a2) & ~v32;
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v33, v34);
  uint64_t v35 = *(void *)(v31 + 48) + 7;
  uint64_t v36 = (_OWORD *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v37 = (_OWORD *)((v35 + v34) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v36 = *v37;
  unint64_t v38 = (void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (void *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v38 = *v39;
  unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = *(void *)(v41 + 24);
  *(void *)(v40 + 24) = v42;
  *(void *)(v40 + 32) = *(void *)(v41 + 32);
  (**(void (***)(void))(v42 - 8))();
  return a1;
}

uint64_t sub_1ACAD8644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (long long *)(a1 + 16);
  int v7 = (long long *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v8 == 255)
    {
      long long v17 = *v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *uint64_t v6 = v17;
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 16);
      uint64_t v15 = *(void *)(a2 + 24);
      sub_1ACA75154(v14, v15, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v14;
      *(void *)(a1 + 24) = v15;
      *(unsigned char *)(a1 + 32) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_1ACA75B3C(a1 + 16);
    char v16 = *(unsigned char *)(a2 + 32);
    *uint64_t v6 = *v7;
    *(unsigned char *)(a1 + 32) = v16;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    sub_1ACA75154(v9, v10, *(unsigned char *)(a2 + 32));
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v12 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    unsigned __int8 v13 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v8;
    sub_1ACA74630(v11, v12, v13);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v18 = (id *)(a1 + 56);
  id v19 = (id *)(a2 + 56);
  int v20 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v20 == 255)
    {
      id v26 = *v19;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *id v18 = v26;
    }
    else
    {
      id v24 = *v19;
      sub_1ACA7516C(*v19, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v24;
      *(unsigned char *)(a1 + 64) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_1ACA75B90(a1 + 56);
    char v25 = *(unsigned char *)(a2 + 64);
    *id v18 = *v19;
    *(unsigned char *)(a1 + 64) = v25;
  }
  else
  {
    id v21 = *v19;
    sub_1ACA7516C(*v19, *(unsigned char *)(a2 + 64));
    id v22 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v21;
    char v23 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v20;
    sub_1ACA74648(v22, v23);
  }
  uint64_t v27 = (id *)(a1 + 72);
  uint64_t v28 = (id *)(a2 + 72);
  int v29 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v29 == 255)
    {
      id v35 = *v28;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v27 = v35;
    }
    else
    {
      id v33 = *v28;
      sub_1ACA7516C(*v28, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v33;
      *(unsigned char *)(a1 + 80) = v29;
    }
  }
  else if (v29 == 255)
  {
    sub_1ACA75B90(a1 + 72);
    char v34 = *(unsigned char *)(a2 + 80);
    *uint64_t v27 = *v28;
    *(unsigned char *)(a1 + 80) = v34;
  }
  else
  {
    id v30 = *v28;
    sub_1ACA7516C(*v28, *(unsigned char *)(a2 + 80));
    uint64_t v31 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v30;
    char v32 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v29;
    sub_1ACA74648(v31, v32);
  }
  uint64_t v36 = (id *)(a1 + 88);
  unint64_t v37 = (id *)(a2 + 88);
  int v38 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v38 == 255)
    {
      id v44 = *v37;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *uint64_t v36 = v44;
    }
    else
    {
      id v42 = *v37;
      sub_1ACA7516C(*v37, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v42;
      *(unsigned char *)(a1 + 96) = v38;
    }
  }
  else if (v38 == 255)
  {
    sub_1ACA75B90(a1 + 88);
    char v43 = *(unsigned char *)(a2 + 96);
    *uint64_t v36 = *v37;
    *(unsigned char *)(a1 + 96) = v43;
  }
  else
  {
    id v39 = *v37;
    sub_1ACA7516C(*v37, *(unsigned char *)(a2 + 96));
    unint64_t v40 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v39;
    char v41 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v38;
    sub_1ACA74648(v40, v41);
  }
  char v45 = (id *)(a1 + 104);
  char v46 = (id *)(a2 + 104);
  int v47 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v47 == 255)
    {
      id v53 = *v46;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *char v45 = v53;
    }
    else
    {
      id v51 = *v46;
      sub_1ACA7516C(*v46, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v51;
      *(unsigned char *)(a1 + 112) = v47;
    }
  }
  else if (v47 == 255)
  {
    sub_1ACA75B90(a1 + 104);
    char v52 = *(unsigned char *)(a2 + 112);
    *char v45 = *v46;
    *(unsigned char *)(a1 + 112) = v52;
  }
  else
  {
    id v48 = *v46;
    sub_1ACA7516C(*v46, *(unsigned char *)(a2 + 112));
    os_signpost_id_t v49 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v48;
    char v50 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v47;
    sub_1ACA74648(v49, v50);
  }
  unint64_t v54 = (id *)(a1 + 120);
  uint64_t v55 = (id *)(a2 + 120);
  int v56 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v56 == 255)
    {
      id v62 = *v55;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *unint64_t v54 = v62;
    }
    else
    {
      id v60 = *v55;
      sub_1ACA7516C(*v55, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v60;
      *(unsigned char *)(a1 + 128) = v56;
    }
  }
  else if (v56 == 255)
  {
    sub_1ACA75B90(a1 + 120);
    char v61 = *(unsigned char *)(a2 + 128);
    *unint64_t v54 = *v55;
    *(unsigned char *)(a1 + 128) = v61;
  }
  else
  {
    id v57 = *v55;
    sub_1ACA7516C(*v55, *(unsigned char *)(a2 + 128));
    uint64_t v58 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v57;
    char v59 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v56;
    sub_1ACA74648(v58, v59);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void *)(a2 + 240);
  if (!*(void *)(a1 + 240))
  {
    if (v63)
    {
      *(void *)(a1 + 240) = v63;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))(a1 + 216, a2 + 216);
      goto LABEL_50;
    }
LABEL_49:
    long long v64 = *(_OWORD *)(a2 + 216);
    long long v65 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v64;
    *(_OWORD *)(a1 + 232) = v65;
    goto LABEL_50;
  }
  if (!v63)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
    goto LABEL_49;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
LABEL_50:
  uint64_t v66 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v67 = v66 + 24;
  uint64_t v68 = *(unsigned __int8 *)(v66 + 80);
  uint64_t v69 = ((v68 | 0x100) + a1) & ~v68;
  uint64_t v70 = ((v68 | 0x100) + a2) & ~v68;
  (*(void (**)(uint64_t, uint64_t))(v66 + 24))(v69, v70);
  uint64_t v71 = *(void *)(v67 + 40) + 7;
  unint64_t v72 = (void *)((v71 + v69) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = (void *)((v71 + v70) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v72 = *v73;
  v72[1] = v73[1];
  unint64_t v74 = (void *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v75 = (void *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v74 = *v75;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

_OWORD *sub_1ACAD8C24(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[13];
  a1[12] = a2[12];
  a1[13] = v4;
  long long v5 = a2[15];
  a1[14] = a2[14];
  a1[15] = v5;
  long long v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  long long v7 = a2[11];
  a1[10] = a2[10];
  a1[11] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  long long v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  long long v10 = a2[1];
  *a1 = *a2;
  a1[1] = v10;
  long long v11 = a2[3];
  a1[2] = a2[2];
  a1[3] = v11;
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)a1 + (v14 | 0x100)) & ~v14;
  uint64_t v16 = ((unint64_t)a2 + (v14 | 0x100)) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 32) + 7;
  id v18 = (_OWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  id v19 = (_OWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *id v18 = *v19;
  int v20 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v21 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *id v21 = *v20;
  unint64_t v22 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v25 = *(_OWORD *)v23;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(_OWORD *)unint64_t v22 = v25;
  *(_OWORD *)(v22 + 16) = v24;
  return a1;
}

uint64_t sub_1ACAD8D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 != 255)
  {
    int v9 = *(unsigned __int8 *)(a2 + 32);
    if (v9 != 255)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v7;
      *(unsigned char *)(a1 + 32) = v9;
      sub_1ACA74630(v10, v11, v8);
      goto LABEL_6;
    }
    sub_1ACA75B3C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v12 = (void *)(a2 + 56);
  int v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 != 255)
  {
    int v14 = *(unsigned __int8 *)(a2 + 64);
    if (v14 != 255)
    {
      uint64_t v15 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v12;
      *(unsigned char *)(a1 + 64) = v14;
      sub_1ACA74648(v15, v13);
      goto LABEL_11;
    }
    sub_1ACA75B90(a1 + 56);
  }
  *(void *)(a1 + 56) = *v12;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_11:
  uint64_t v16 = (void *)(a2 + 72);
  int v17 = *(unsigned __int8 *)(a1 + 80);
  if (v17 != 255)
  {
    int v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 != 255)
    {
      id v19 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v16;
      *(unsigned char *)(a1 + 80) = v18;
      sub_1ACA74648(v19, v17);
      goto LABEL_16;
    }
    sub_1ACA75B90(a1 + 72);
  }
  *(void *)(a1 + 72) = *v16;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_16:
  int v20 = (void *)(a2 + 88);
  int v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    int v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      unint64_t v23 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v20;
      *(unsigned char *)(a1 + 96) = v22;
      sub_1ACA74648(v23, v21);
      goto LABEL_21;
    }
    sub_1ACA75B90(a1 + 88);
  }
  *(void *)(a1 + 88) = *v20;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_21:
  long long v24 = (void *)(a2 + 104);
  int v25 = *(unsigned __int8 *)(a1 + 112);
  if (v25 != 255)
  {
    int v26 = *(unsigned __int8 *)(a2 + 112);
    if (v26 != 255)
    {
      uint64_t v27 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v24;
      *(unsigned char *)(a1 + 112) = v26;
      sub_1ACA74648(v27, v25);
      goto LABEL_26;
    }
    sub_1ACA75B90(a1 + 104);
  }
  *(void *)(a1 + 104) = *v24;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_26:
  uint64_t v28 = (void *)(a2 + 120);
  int v29 = *(unsigned __int8 *)(a1 + 128);
  if (v29 != 255)
  {
    int v30 = *(unsigned __int8 *)(a2 + 128);
    if (v30 != 255)
    {
      uint64_t v31 = *(void **)(a1 + 120);
      *(void *)(a1 + 120) = *v28;
      *(unsigned char *)(a1 + 128) = v30;
      sub_1ACA74648(v31, v29);
      goto LABEL_31;
    }
    sub_1ACA75B90(a1 + 120);
  }
  *(void *)(a1 + 120) = *v28;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
LABEL_31:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v32 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  uint64_t v33 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v33;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  }
  long long v34 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v34;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v36 = v35 + 40;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = ((v37 | 0x100) + a1) & ~v37;
  uint64_t v39 = ((v37 | 0x100) + a2) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v38, v39);
  uint64_t v40 = *(void *)(v36 + 24) + 7;
  char v41 = (void *)((v40 + v38) & 0xFFFFFFFFFFFFFFF8);
  id v42 = (void *)((v40 + v39) & 0xFFFFFFFFFFFFFFF8);
  *char v41 = *v42;
  v41[1] = v42[1];
  char v43 = (void *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v44 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  *char v43 = *v44;
  unint64_t v45 = ((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v45);
  long long v47 = *(_OWORD *)v46;
  long long v48 = *(_OWORD *)(v46 + 16);
  *(void *)(v45 + 32) = *(void *)(v46 + 32);
  *(_OWORD *)unint64_t v45 = v47;
  *(_OWORD *)(v45 + 16) = v48;
  return a1;
}

uint64_t sub_1ACAD90B4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v6 < a2)
  {
    unint64_t v7 = ((((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 263) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 40;
    unsigned int v8 = a2 - v6;
    uint64_t v9 = v7 & 0xFFFFFFF8;
    if ((v7 & 0xFFFFFFF8) != 0) {
      unsigned int v10 = 2;
    }
    else {
      unsigned int v10 = v8 + 1;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)(a1 + v7);
        if (!v13) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)(a1 + v7);
        if (v13) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACAD9210);
      case 4:
        int v13 = *(_DWORD *)(a1 + v7);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = v13 - 1;
        if (v9)
        {
          int v15 = 0;
          LODWORD(v9) = *(_DWORD *)a1;
        }
        return v6 + (v9 | v15) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((a1 + *(unsigned __int8 *)(v4 + 80) + 256) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  }
  unint64_t v16 = *(void *)(a1 + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

double sub_1ACAD9224(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 263) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 40;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 256] & ~v9;
              int v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *((void *)a1 + 31) = 0;
              double result = 0.0;
              *(_OWORD *)(a1 + 232) = 0u;
              *(_OWORD *)(a1 + 216) = 0u;
              *(_OWORD *)(a1 + 200) = 0u;
              *(_OWORD *)(a1 + 184) = 0u;
              *(_OWORD *)(a1 + 168) = 0u;
              *(_OWORD *)(a1 + 152) = 0u;
              *(_OWORD *)(a1 + 136) = 0u;
              *(_OWORD *)(a1 + 120) = 0u;
              *(_OWORD *)(a1 + 104) = 0u;
              *(_OWORD *)(a1 + 88) = 0u;
              *(_OWORD *)(a1 + 72) = 0u;
              *(_OWORD *)(a1 + 56) = 0u;
              *(_OWORD *)(a1 + 40) = 0u;
              *(_OWORD *)(a1 + 24) = 0u;
              *(_OWORD *)(a1 + 8) = 0u;
              *(void *)a1 = a2 ^ 0x80000000;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 263) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 263) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 263) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1ACAD9460);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1ACAD9488(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAD9554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for DiskResizeArtworkProcessingStep.ResizeError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContentKind.rawValue.getter(char a1)
{
  uint64_t result = 0x79726F6765746163;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C656E6E616863;
      break;
    case 2:
      uint64_t result = 0x65646F73697065;
      break;
    case 3:
      uint64_t result = 2003789939;
      break;
    case 4:
      uint64_t result = 0x6E6F6974617473;
      break;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAD9660(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x79726F6765746163;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x79726F6765746163;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x6C656E6E616863;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x65646F73697065;
      break;
    case 3:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 2003789939;
      break;
    case 4:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x6F6974617473;
      goto LABEL_7;
    case 5:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x776F6E6B6E75;
LABEL_7:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x6E000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      if (v5 == 0x6C656E6E616863) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x65646F73697065) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 2003789939) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v2 = 0x6E6F6974617473;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v4 == v7) {
        char v8 = 1;
      }
      else {
LABEL_20:
      }
        char v8 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1ACAD985C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAD9964()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAD9A54()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAD9B58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation11ContentKindO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACAD9B88(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x79726F6765746163;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6C656E6E616863;
      goto LABEL_3;
    case 2:
      *a1 = 0x65646F73697065;
      a1[1] = 0xE700000000000000;
      return;
    case 3:
      *a1 = 2003789939;
      a1[1] = 0xE400000000000000;
      return;
    case 4:
      uint64_t v4 = 0x6F6974617473;
      goto LABEL_8;
    case 5:
      uint64_t v4 = 0x776F6E6B6E75;
LABEL_8:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x6E000000000000;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1ACAD9C54()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACAD9CB4()
{
  return sub_1ACE764C8();
}

void *static ContentKind.allCases.getter()
{
  return &unk_1F03802B8;
}

void sub_1ACAD9D10(void *a1@<X8>)
{
  *a1 = &unk_1F03802B8;
}

uint64_t ContentKind.debugDescription.getter()
{
  strcpy((char *)v1, "ContentKind.");
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1ACAD9E38()
{
  return ContentKind.debugDescription.getter();
}

uint64_t _s18PodcastsFoundation11ContentKindO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACAD9E90()
{
  unint64_t result = qword_1E99F1C28;
  if (!qword_1E99F1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1C28);
  }
  return result;
}

unint64_t sub_1ACAD9EE8()
{
  unint64_t result = qword_1E99F1C30;
  if (!qword_1E99F1C30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F1C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1C30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACADA010);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKind()
{
  return &type metadata for ContentKind;
}

unint64_t sub_1ACADA048()
{
  unint64_t result = qword_1EB770ED0;
  if (!qword_1EB770ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770ED0);
  }
  return result;
}

uint64_t sub_1ACADA09C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    unint64_t v7 = sub_1ACA91C80;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1ACA6DEC8(v4);
}

uint64_t sub_1ACADA130(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1ACA91C78;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_1ACA6DEC8(v3);
  return sub_1ACA76F34(v8);
}

uint64_t OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0 = sub_1ACA91A90();
  sub_1ACA6DEC8(v0);
  return v0;
}

uint64_t OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1ACA76F34(v5);
}

uint64_t (*OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.modify())()
{
  return j__swift_endAccess;
}

BOOL OnDemandLibraryEpisodeStateDataSource.isObservingChanges.getter()
{
  return *(void *)(v0 + 56) != 0;
}

uint64_t sub_1ACADA2D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + qword_1EB76FEB0;
  swift_beginAccess();
  sub_1ACA2EDE8(v9, (uint64_t)v8);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1ACA2EE50((uint64_t)v8);
  sub_1ACABD588();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1ACABEA08((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t OnDemandLibraryEpisodeStateDataSource.__allocating_init(episodeStateRepository:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  OnDemandLibraryEpisodeStateDataSource.init(episodeStateRepository:)(a1);
  return v2;
}

void *OnDemandLibraryEpisodeStateDataSource.init(episodeStateRepository:)(uint64_t a1)
{
  void (*v11)(char *__return_ptr, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *__return_ptr, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;

  uint64_t v2 = v1;
  int v29 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE76CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  long long v34 = v4;
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v33 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v31);
  uint64_t v32 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v8 - 8);
  int v30 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v1[2] = 0;
  v1[3] = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0xE000000000000000;
  sub_1ACE77268();
  uint64_t v28 = 0x80000001ACEC7D60;
  sub_1ACE762C8();
  uint64_t v10 = *(void *)(v3 + 80);
  uint64_t v11 = *(void (**)(char *__return_ptr, uint64_t, uint64_t))(*(void *)(v3 + 88) + 56);
  long long v24 = *(void *)(v3 + 88);
  uint64_t v27 = v11;
  ((void (*)(char *__return_ptr, uint64_t))v11)(&v36, v10);
  int v21 = sub_1ACA51E1C();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE75E08();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  unsigned int v12 = sub_1ACABEAC4();
  int v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  int v14 = sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  int v25 = v13;
  int v26 = v12;
  unint64_t v23 = v14;
  sub_1ACE770E8();
  int v15 = *MEMORY[0x1E4FBCC58];
  int v16 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 104);
  v35 += 104;
  int v22 = v16;
  v16(v33, v15, v34);
  v1[4] = sub_1ACE76D28();
  uint64_t v37 = 0;
  uint64_t v38 = 0xE000000000000000;
  sub_1ACE77268();
  sub_1ACE762C8();
  v27(&v36, v10, v24);
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE75E08();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACE770E8();
  v22(v33, v15, v34);
  v1[5] = sub_1ACE76D28();
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  sub_1ACABEA70();
  v1[6] = sub_1ACE76028();
  v1[7] = 0;
  int v17 = (char *)v1 + qword_1EB76FEB0;
  int v18 = sub_1ACE753F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  unint64_t v19 = (char *)v2 + qword_1EB76FEA8;
  *(void *)unint64_t v19 = "OnDemandLibraryEpisodeStateDataSource.startObserving";
  *((void *)v19 + 1) = 52;
  v19[16] = 2;
  v2[8] = v29;
  return v2;
}

uint64_t OnDemandLibraryEpisodeStateDataSource.deinit()
{
  sub_1ACA76F34(*(void *)(v0 + 16));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1ACA2EE50(v0 + qword_1EB76FEB0);
  return v0;
}

uint64_t OnDemandLibraryEpisodeStateDataSource.__deallocating_deinit()
{
  OnDemandLibraryEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

void sub_1ACADAB38()
{
}

Swift::Void __swiftcall OnDemandLibraryEpisodeStateDataSource.startObservingChanges()()
{
  void (*v13)(uint64_t *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  long long v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v1 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770358);
  unint64_t v46 = *(void *)(v2 - 8);
  long long v47 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v45 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE753F8();
  uint64_t v5 = *(void *)(v4 - 8);
  os_signpost_id_t v49 = v4;
  char v50 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v38) = sub_1ACE76E18();
  if (qword_1EB768FB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = *(void *)((char *)v0 + qword_1EB76FEA8);
  uint64_t v39 = *(void *)((char *)v0 + qword_1EB76FEA8 + 8);
  uint64_t v40 = v8;
  uint64_t v36 = v0;
  char v41 = *((unsigned __int8 *)v0 + qword_1EB76FEA8 + 16);
  id v9 = (id)qword_1EB768FA8;
  long long v48 = v7;
  sub_1ACADA2D8((uint64_t)v7);
  id v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v10 = swift_allocObject();
  char v43 = xmmword_1ACE843F0;
  *(_OWORD *)(v10 + 16) = xmmword_1ACE843F0;
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v35 = *(void *)(v1 + 88);
  uint64_t v12 = v35 + 56;
  int v13 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v35 + 56);
  v13(&v51, v11);
  uint64_t v37 = v12;
  int v14 = sub_1ACE76228();
  int v16 = v15;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  id v42 = sub_1ACADC3A8();
  *(void *)(v10 + 64) = v42;
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v16;
  int v17 = (uint64_t)v48;
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  int v18 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v50 += 8;
  uint64_t v38 = v18;
  v18(v17, v49);
  int v20 = v35;
  unint64_t v19 = v36;
  ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v13)(&v51, v11, v35);
  id v51 = EpisodeStateRepository.publisherForChanges(in:)((unsigned __int8 *)&v51);
  int v21 = swift_allocObject();
  int v22 = v19;
  swift_weakInit();
  unint64_t v23 = (void *)swift_allocObject();
  _OWORD v23[2] = v11;
  void v23[3] = v20;
  v23[4] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768D88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E58);
  sub_1ACA51EA4(&qword_1EB768D80, &qword_1EB768D88);
  long long v24 = v45;
  sub_1ACE75B58();
  swift_release();
  swift_release();
  int v25 = swift_allocObject();
  swift_weakInit();
  int v26 = (void *)swift_allocObject();
  void v26[2] = v11;
  v26[3] = v20;
  v26[4] = v25;
  sub_1ACA51EA4(&qword_1EB770350, &qword_1EB770358);
  uint64_t v27 = v47;
  uint64_t v28 = sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v27);
  v22[7] = v28;
  swift_release();
  sub_1ACE76E08();
  int v29 = (id)qword_1EB768FA8;
  int v30 = (uint64_t)v48;
  sub_1ACADA2D8((uint64_t)v48);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v43;
  ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v13)(&v51, v11, v20);
  uint64_t v32 = sub_1ACE76228();
  uint64_t v33 = v42;
  *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v31 + 64) = v33;
  *(void *)(v31 + 32) = v32;
  *(void *)(v31 + 40) = v34;
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  v38(v30, v49);
}

uint64_t sub_1ACADB114(uint64_t a1, uint64_t a2)
{
  return OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.setter(a1, a2);
}

void (*sub_1ACADB138(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OnDemandLibraryEpisodeStateDataSource.refreshControllerStates.modify();
  return sub_1ACA8E534;
}

void sub_1ACADB194(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
}

void OnDemandLibraryEpisodeStateDataSource.state(for:)(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v8 = a3 & 1;
  uint64_t v9 = *(void *)(*(void *)v4 + 80);
  sub_1ACE76FD8();
  sub_1ACE76D08();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(a4, 1, v9) == 1) {
    EpisodeStateRepository.enqueueEpisodeStateFetch(for:)(a1, a2, v8);
  }
}

uint64_t sub_1ACADB2B4@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v6 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    long long v7 = v6;
    uint64_t v8 = v3;
    uint64_t v5 = sub_1ACADB348((uint64_t *)&v7);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1ACADB348(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  long long v6 = v1[5];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = *(void *)(v2 + 80);
  void v8[3] = *(void *)(v2 + 88);
  v8[4] = v7;
  v8[5] = v4;
  v8[6] = v3;
  v8[7] = v5;
  v8[8] = &v14;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1ACADC66C;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1ACADC690;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  void aBlock[3] = &block_descriptor_17;
  uint64_t v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_1ACADB530(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
    if (v4)
    {
      swift_retain();
      v4(v1);
      sub_1ACA76F34((uint64_t)v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACADB5D0(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = *a1;
  swift_beginAccess();
  uint64_t v9 = a1[6];
  v13[0] = a2;
  v13[1] = a3;
  a4 &= 1u;
  char v14 = a4;
  sub_1ACA72530(a2, a3, a4);
  uint64_t v10 = *(void *)(v8 + 80);
  unint64_t v11 = sub_1ACABEA70();
  MEMORY[0x1AD118260](v13, v9, &type metadata for EpisodeStateIdentifier, v10, v11);
  sub_1ACA91B68(a2, a3, a4);
  return swift_endAccess();
}

uint64_t sub_1ACADB6AC(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v110 = a7;
  long long v116 = a5;
  uint64_t v134 = a4;
  uint64_t v10 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v109 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  int v16 = (char *)&v100 - v15;
  int64_t v133 = *(void *)(v12 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  int v22 = (char *)&v100 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  v129 = (char *)&v100 - v24;
  MEMORY[0x1F4188790](v23);
  long long v115 = (char *)&v100 - v25;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v101 = result;
  if (result)
  {
    uint64_t v132 = v13;
    long long v114 = v19;
    v130 = v16;
    uint64_t v125 = a6;
    uint64_t v27 = *(void *)(v134 + 16);
    uint64_t v121 = v12;
    v123 = v22;
    if (v27)
    {
      unint64_t v127 = a2;
      v128 = a3;
      uint64_t v131 = v10;
      uint64_t v28 = (void (**)(char *, uint64_t))(v133 + 8);
      int v29 = (char *)(swift_bridgeObjectRetain() + 48);
      do
      {
        uint64_t v31 = *((void *)v29 - 1);
        char v32 = *v29;
        uint64_t v152 = *((void *)v29 - 2);
        uint64_t v30 = v152;
        uint64_t v153 = v31;
        char v154 = v32;
        swift_beginAccess();
        sub_1ACA72530(v30, v31, v32);
        sub_1ACABEA70();
        sub_1ACE76088();
        uint64_t v33 = v115;
        sub_1ACE76018();
        swift_endAccess();
        (*v28)(v33, v121);
        long long v34 = v116;
        uint64_t v35 = (void *)*v116;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *long long v34 = (uint64_t)v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v35 = sub_1ACA4161C(0, v35[2] + 1, 1, v35);
          *long long v116 = (uint64_t)v35;
        }
        unint64_t v38 = v35[2];
        unint64_t v37 = v35[3];
        if (v38 >= v37 >> 1)
        {
          uint64_t v35 = sub_1ACA4161C((void *)(v37 > 1), v38 + 1, 1, v35);
          *long long v116 = (uint64_t)v35;
        }
        v29 += 24;
        v35[2] = v38 + 1;
        uint64_t v39 = &v35[3 * v38];
        v39[4] = v30;
        v39[5] = v31;
        *((unsigned char *)v39 + 48) = v32;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      uint64_t v12 = v121;
      uint64_t v10 = v131;
      a2 = v127;
    }
    unint64_t v135 = a2;
    swift_bridgeObjectRetain();
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t result = sub_1ACA6F3FC(v40);
    unint64_t v41 = v135;
    uint64_t v106 = *(void *)(v135 + 16);
    if (v106)
    {
      unint64_t v42 = 0;
      char v104 = *(void (**)(unint64_t *, uint64_t, uint64_t))(v110 + 40);
      uint64_t v105 = v110 + 40;
      v128 = (uint64_t *)(v101 + 48);
      unint64_t v103 = v135 + 32;
      char v43 = (void (**)(char *, char *, uint64_t))(v133 + 16);
      long long v108 = (void (**)(char *, char *, uint64_t))(v10 + 32);
      uint64_t v112 = (void (**)(char *, uint64_t))(v10 + 8);
      v124 = (uint64_t (**)(char *, uint64_t))(v133 + 8);
      char v113 = (void (**)(char *, uint64_t))(v132 + 8);
      uint64_t v44 = v125;
      char v119 = (void (**)(char *, char *, uint64_t))(v133 + 16);
      unint64_t v102 = v135;
      char v120 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      while (1)
      {
        if (v42 >= *(void *)(v41 + 16))
        {
LABEL_52:
          __break(1u);
          return result;
        }
        unint64_t v45 = (unint64_t *)(v103 + 96 * v42);
        unint64_t v46 = *v45;
        char v47 = *((unsigned char *)v45 + 90);
        unint64_t v107 = v42 + 1;
        __int16 v48 = *((_WORD *)v45 + 44);
        uint64_t v50 = v45[9];
        uint64_t v49 = v45[10];
        uint64_t v51 = v45[7];
        unint64_t v52 = v45[8];
        uint64_t v53 = v45[6];
        char v54 = *((unsigned char *)v45 + 40);
        unint64_t v55 = v45[4];
        char v56 = *((unsigned char *)v45 + 13);
        char v57 = *((unsigned char *)v45 + 12);
        char v58 = *((unsigned char *)v45 + 11);
        char v59 = *((unsigned char *)v45 + 10);
        char v60 = *((unsigned char *)v45 + 9);
        char v61 = *((unsigned char *)v45 + 8);
        uint64_t v134 = v49;
        unint64_t v135 = v46;
        char v136 = v61;
        char v137 = v60;
        char v138 = v59;
        char v139 = v58;
        char v140 = v57;
        char v141 = v56;
        long long v142 = *((_OWORD *)v45 + 1);
        unint64_t v143 = v55;
        char v144 = v54;
        uint64_t v145 = v53;
        uint64_t v146 = v51;
        unint64_t v147 = v52;
        uint64_t v148 = v50;
        uint64_t v149 = v49;
        char v151 = v47;
        __int16 v150 = v48;
        swift_bridgeObjectRetain();
        sub_1ACA3A9E8(v53, v51, v52, v50, v49);
        v104(&v135, v44, v110);
        uint64_t v62 = *(void *)(v46 + 56);
        unint64_t v117 = v46 + 56;
        unint64_t v122 = v46;
        uint64_t v63 = 1 << *(unsigned char *)(v46 + 32);
        unsigned __int8 v64 = v52;
        long long v65 = v123;
        uint64_t result = sub_1ACADC698(v53, v51, v64, v50, v134);
        int64_t v66 = 0;
        if (v63 < 64) {
          uint64_t v67 = ~(-1 << v63);
        }
        else {
          uint64_t v67 = -1;
        }
        unint64_t v68 = v67 & v62;
        int64_t v118 = (unint64_t)(v63 + 63) >> 6;
        while (v68)
        {
          uint64_t v132 = (v68 - 1) & v68;
          int64_t v133 = v66;
          unint64_t v70 = __clz(__rbit64(v68)) | (v66 << 6);
LABEL_35:
          uint64_t v75 = *(void *)(v122 + 48) + 24 * v70;
          uint64_t v76 = *(void *)v75;
          uint64_t v77 = *(void *)(v75 + 8);
          int v78 = *(unsigned __int8 *)(v75 + 16);
          long long v79 = v128;
          swift_beginAccess();
          uint64_t v80 = *v79;
          uint64_t v152 = v76;
          uint64_t v153 = v77;
          char v154 = v78;
          sub_1ACA72530(v76, v77, v78);
          sub_1ACA72530(v76, v77, v78);
          unint64_t v127 = sub_1ACABEA70();
          MEMORY[0x1AD118260](&v152, v80, &type metadata for EpisodeStateIdentifier, v44);
          uint64_t v131 = v77;
          LODWORD(v134) = v78;
          sub_1ACA91B68(v76, v77, v78);
          swift_endAccess();
          uint64_t v81 = v44;
          uint64_t v82 = v130;
          uint64_t v83 = &v130[*(int *)(TupleTypeMetadata2 + 48)];
          long long v84 = *v43;
          (*v43)(v130, v65, v12);
          v84(v83, v129, v12);
          long long v85 = *v120;
          if ((*v120)(v82, 1, v81) == 1)
          {
            uint64_t v86 = v12;
            long long v87 = *v124;
            (*v124)(v65, v86);
            if (v85(v83, 1, v81) != 1) {
              goto LABEL_40;
            }
            uint64_t v69 = v121;
            v87(v130, v121);
            uint64_t v12 = v69;
            uint64_t result = sub_1ACA91B68(v76, v131, v134);
            uint64_t v44 = v125;
            char v43 = v119;
            unint64_t v68 = v132;
            int64_t v66 = v133;
          }
          else
          {
            uint64_t v88 = v114;
            v84(v114, v82, v12);
            if (v85(v83, 1, v81) == 1)
            {
              (*v124)(v123, v12);
              (*v112)(v88, v81);
LABEL_40:
              (*v113)(v130, TupleTypeMetadata2);
              uint64_t v44 = v125;
              uint64_t v12 = v121;
              char v43 = v119;
              unint64_t v68 = v132;
              uint64_t v89 = v131;
              goto LABEL_43;
            }
            uint64_t v90 = v109;
            (*v108)(v109, v83, v81);
            int v111 = sub_1ACE76168();
            int v91 = *v112;
            unint64_t v92 = v90;
            uint64_t v12 = v121;
            (*v112)(v92, v81);
            uint64_t v93 = *v124;
            long long v65 = v123;
            (*v124)(v123, v12);
            v91(v88, v125);
            v93(v82, v12);
            uint64_t v44 = v125;
            char v43 = v119;
            unint64_t v68 = v132;
            uint64_t v89 = v131;
            if (v111)
            {
              uint64_t result = sub_1ACA91B68(v76, v131, v134);
              int64_t v66 = v133;
            }
            else
            {
LABEL_43:
              v84(v115, v129, v12);
              uint64_t v152 = v76;
              uint64_t v153 = v89;
              char v94 = v134;
              char v154 = v134;
              swift_beginAccess();
              sub_1ACA72530(v76, v89, v94);
              sub_1ACE76088();
              sub_1ACE760B8();
              swift_endAccess();
              uint64_t v95 = v116;
              uint64_t v96 = (void *)*v116;
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v95 = (uint64_t)v96;
              if ((result & 1) == 0)
              {
                uint64_t result = (uint64_t)sub_1ACA4161C(0, v96[2] + 1, 1, v96);
                uint64_t v96 = (void *)result;
                *long long v116 = result;
              }
              int64_t v66 = v133;
              unint64_t v98 = v96[2];
              unint64_t v97 = v96[3];
              if (v98 >= v97 >> 1)
              {
                uint64_t result = (uint64_t)sub_1ACA4161C((void *)(v97 > 1), v98 + 1, 1, v96);
                uint64_t v96 = (void *)result;
                *long long v116 = result;
              }
              v96[2] = v98 + 1;
              id v99 = &v96[3 * v98];
              v99[4] = v76;
              v99[5] = v89;
              *((unsigned char *)v99 + 48) = v134;
              long long v65 = v123;
            }
          }
        }
        int64_t v71 = v66 + 1;
        if (__OFADD__(v66, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        if (v71 >= v118) {
          goto LABEL_12;
        }
        unint64_t v72 = *(void *)(v117 + 8 * v71);
        int64_t v73 = v66 + 1;
        if (v72) {
          goto LABEL_34;
        }
        int64_t v73 = v66 + 2;
        if (v66 + 2 >= v118) {
          goto LABEL_12;
        }
        unint64_t v72 = *(void *)(v117 + 8 * v73);
        if (v72) {
          goto LABEL_34;
        }
        int64_t v73 = v66 + 3;
        if (v66 + 3 >= v118) {
          goto LABEL_12;
        }
        unint64_t v72 = *(void *)(v117 + 8 * v73);
        if (v72) {
          goto LABEL_34;
        }
        uint64_t v74 = v66 + 4;
        if (v66 + 4 < v118) {
          break;
        }
LABEL_12:
        swift_release();
        uint64_t result = (*v124)(v129, v12);
        unint64_t v42 = v107;
        unint64_t v41 = v102;
        if (v107 == v106) {
          goto LABEL_48;
        }
      }
      unint64_t v72 = *(void *)(v117 + 8 * v74);
      if (!v72)
      {
        while (1)
        {
          int64_t v73 = v74 + 1;
          if (__OFADD__(v74, 1)) {
            goto LABEL_51;
          }
          if (v73 >= v118) {
            goto LABEL_12;
          }
          unint64_t v72 = *(void *)(v117 + 8 * v73);
          ++v74;
          if (v72) {
            goto LABEL_34;
          }
        }
      }
      int64_t v73 = v66 + 4;
LABEL_34:
      uint64_t v132 = (v72 - 1) & v72;
      int64_t v133 = v73;
      unint64_t v70 = __clz(__rbit64(v72)) + (v73 << 6);
      goto LABEL_35;
    }
LABEL_48:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1ACADC3A8()
{
  unint64_t result = qword_1EB772620;
  if (!qword_1EB772620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB772620);
  }
  return result;
}

uint64_t sub_1ACADC3FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACADC434()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACADC46C@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACADB2B4(a1, a2);
}

uint64_t sub_1ACADC478(uint64_t *a1)
{
  return sub_1ACADB530(a1);
}

uint64_t sub_1ACADC484()
{
  return sub_1ACADB5D0(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1ACADC4B0()
{
  return 16;
}

__n128 sub_1ACADC4BC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1ACADC4C8()
{
  sub_1ACABE9B0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for OnDemandLibraryEpisodeStateDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for OnDemandLibraryEpisodeStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OnDemandLibraryEpisodeStateDataSource);
}

uint64_t dispatch thunk of OnDemandLibraryEpisodeStateDataSource.__allocating_init(episodeStateRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1ACADC5E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACADC61C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACADC66C()
{
  return sub_1ACADB6AC(*(void *)(v0 + 32), *(void *)(v0 + 40), *(uint64_t **)(v0 + 48), *(void *)(v0 + 56), *(uint64_t **)(v0 + 64), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1ACADC680()
{
  return swift_deallocObject();
}

uint64_t sub_1ACADC690()
{
  return sub_1ACB5B248(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1ACADC698(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1ACADC6D8(result, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACADC6D8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

id MediaItemMetadataLoader.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id MediaItemMetadataLoader.init()()
{
  uint64_t v11 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v10 = OBJC_IVAR___MTMediaItemMetadataLoader_metadataLoadingQueue;
  v9[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  id v6 = v0;
  sub_1ACE75E08();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v11);
  *(void *)(v9[2] + v10) = sub_1ACE76D28();

  uint64_t v7 = (objc_class *)type metadata accessor for MediaItemMetadataLoader();
  v12.receiver = v6;
  v12.super_class = v7;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for MediaItemMetadataLoader()
{
  return self;
}

void sub_1ACADCA00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)sub_1ACE76558();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  void v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  v12[4] = sub_1ACADCDEC;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1ACA6DA9C;
  v12[3] = &block_descriptor_18;
  uint64_t v9 = _Block_copy(v12);
  id v10 = v3;
  id v11 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_pf_loadValuesAsynchronouslyForKeys_completionHandler_, v7, v9);
  _Block_release(v9);
}

uint64_t sub_1ACADCB1C(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(void *)&a1[OBJC_IVAR___MTMediaItemMetadataLoader_metadataLoadingQueue];
  int v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  v16[3] = a1;
  void v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_1ACADDDD0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_12_0;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a2;
  unint64_t v19 = a1;
  swift_retain();
  sub_1ACE75E08();
  v21[1] = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1ACADCDEC()
{
  return sub_1ACADCB1C(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACADCDF8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a4;
  uint64_t v40 = a3;
  unint64_t v41 = a2;
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1ACE75E48();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  char v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_pf_metadata);
  sub_1ACA50D4C(0, &qword_1E99F1C48);
  unint64_t v9 = sub_1ACE76578();

  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = MEMORY[0x1E4FBC868];
  dispatch_group_t v54 = dispatch_group_create();
  if (v9 >> 62) {
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1ACE77508())
  {
    unint64_t v11 = v9 & 0xC000000000000001;
    unint64_t v52 = &v59;
    uint64_t v12 = 4;
    uint64_t v13 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
    uint64_t v49 = "metadataLoadingQueue";
    unint64_t v50 = 0x80000001ACEC7F60;
    unint64_t v53 = v9 & 0xC000000000000001;
    uint64_t v51 = v10;
    uint64_t v14 = 0;
    if ((v9 & 0xC000000000000001) != 0)
    {
LABEL_4:
      id v15 = (id)MEMORY[0x1AD119490](v14, v9);
      goto LABEL_6;
    }
    while (1)
    {
      id v15 = *(id *)(v9 + 8 * v12);
LABEL_6:
      int v16 = v15;
      uint64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      id v18 = [v15 v13[28]];
      if (v18
        && (id v56 = v18, __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1C50), (swift_dynamicCast() & 1) != 0))
      {
        uint64_t v19 = aBlock;
        uint64_t v20 = v58;
        if (aBlock == 0xD000000000000012 && v58 == v50 || (sub_1ACE77848() & 1) != 0)
        {
          dispatch_group_t v21 = v54;
          dispatch_group_enter(v54);
          unint64_t v22 = v9;
          uint64_t v23 = (void *)sub_1ACE76558();
          uint64_t v24 = (void *)swift_allocObject();
          v24[2] = v16;
          v24[3] = v19;
          uint64_t v25 = v13;
          uint64_t v26 = v55;
          v24[4] = v20;
          v24[5] = v26;
          v24[6] = v21;
          char v61 = sub_1ACADDEB8;
          uint64_t v62 = v24;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v58 = 1107296256;
          char v59 = sub_1ACA6DA9C;
          char v60 = &block_descriptor_28;
          uint64_t v27 = _Block_copy(&aBlock);
          uint64_t v13 = v25;
          swift_retain();
          id v28 = v16;
          int v29 = v21;
          swift_release();
          objc_msgSend(v28, sel_pf_loadValuesAsynchronouslyForKeys_completionHandler_, v23, v27);
          _Block_release(v27);

          unint64_t v9 = v22;
          uint64_t v10 = v51;
          unint64_t v11 = v53;
          if (v17 == v51) {
            goto LABEL_18;
          }
        }
        else
        {

          swift_bridgeObjectRelease();
          if (v17 == v10) {
            goto LABEL_18;
          }
        }
      }
      else
      {

        if (v17 == v10) {
          goto LABEL_18;
        }
      }
      uint64_t v14 = ++v12 - 4;
      if (v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  uint64_t v30 = v41;
  uint64_t v31 = (void *)swift_allocObject();
  id v31[2] = v55;
  v31[3] = v30;
  uint64_t v32 = v42;
  v31[4] = v40;
  v31[5] = v32;
  char v61 = sub_1ACADDE5C;
  uint64_t v62 = v31;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v58 = 1107296256;
  char v59 = sub_1ACA6DA9C;
  char v60 = &block_descriptor_21;
  uint64_t v33 = _Block_copy(&aBlock);
  swift_retain();
  id v34 = v30;
  swift_retain();
  uint64_t v35 = v43;
  sub_1ACE75E08();
  id v56 = (id)MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v36 = v45;
  uint64_t v37 = v48;
  sub_1ACE770E8();
  dispatch_group_t v38 = v54;
  sub_1ACE76C68();

  _Block_release(v33);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v46);
  swift_release();
  return swift_release();
}

void sub_1ACADD430(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, NSObject *a5)
{
  dispatch_group_t v32 = a5;
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_1ACE76178();
  id v33 = objc_msgSend(a1, sel_pf_statusOfValueForKey_error_, v13, 0);

  if (qword_1EB768FD8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB768FB8);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  swift_bridgeObjectRetain_n();
  id v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76C08();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v31 = a2;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = v9;
    uint64_t v19 = v18;
    uint64_t v29 = swift_slowAlloc();
    v35[0] = v29;
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1ACA3189C(a2, a3, v35);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2048;
    id v20 = v33;
    uint64_t v34 = (uint64_t)v33;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v15, v16, "Status of metadata key %s is %ld", (uint8_t *)v19, 0x16u);
    uint64_t v21 = v29;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v21, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
    if (v20 != (id)2) {
      goto LABEL_9;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v33 != (id)2) {
      goto LABEL_9;
    }
  }
  id v22 = objc_msgSend(a1, sel_pf_stringValue);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = (uint64_t *)(a4 + 16);
    uint64_t v25 = sub_1ACE761B8();
    uint64_t v27 = v26;

    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = *v24;
    *uint64_t v24 = 0x8000000000000000;
    sub_1ACD0CAD0(v25, v27, v31, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v24 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_9:
  dispatch_group_leave(v32);
}

uint64_t sub_1ACADD7F8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v33 - v12;
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  if (*(void *)(v14 + 16) && (uint64_t v15 = sub_1ACA657FC(0xD000000000000012, 0x80000001ACEC7F60), (v16 & 1) != 0))
  {
    BOOL v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
    id v20 = sub_1ACADDEC8(v18, v19);
    swift_bridgeObjectRelease();
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v21, v7);
    swift_bridgeObjectRetain_n();
    id v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76C08();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v34 = a3;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = (uint64_t)v20;
      uint64_t v36 = v25;
      v33[1] = a4;
      *(_DWORD *)uint64_t v24 = 136315138;
      v33[0] = v24 + 4;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1C58);
      uint64_t v26 = sub_1ACE76228();
      uint64_t v35 = sub_1ACA3189C(v26, v27, &v36);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      a3 = v34;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v22, v23, "Metadata in HLS playlist has HLS keys %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    a3(v20);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v28 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v28, v7);
    uint64_t v29 = sub_1ACE75498();
    os_log_type_t v30 = sub_1ACE76BE8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1AC9D5000, v29, v30, "Metadata in HLS playlist was missing HLS key information", v31, 2u);
      MEMORY[0x1AD11B340](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return ((uint64_t (*)(void))a3)(0);
  }
}

id MediaItemMetadataLoader.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaItemMetadataLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for MediaItemMetadataLoader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaItemMetadataLoader);
}

uint64_t dispatch thunk of MediaItemMetadataLoader.keyIdentifiers(from:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t sub_1ACADDD8C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACADDDC4(uint64_t a1)
{
  sub_1ACE6F710(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACADDDD0()
{
  return sub_1ACADCDF8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACADDDDC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACADDE14()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACADDE5C()
{
  return sub_1ACADD7F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACADDE68()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACADDEB8()
{
  sub_1ACADD430(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(NSObject **)(v0 + 48));
}

void *sub_1ACADDEC8(uint64_t a1, unint64_t a2)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1ACE754C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = sub_1ACE74F48();
  if (v12 >> 60 == 15)
  {
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76BE8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v48 = v5;
      char v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(void *)&long long v52 = v17;
      *(_DWORD *)char v16 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1ACA3189C(a1, a2, (uint64_t *)&v52);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v14, v15, "Metadata in HLS playlist was not base64 encoded: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v17, -1, -1);
      MEMORY[0x1AD11B340](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v4);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    return 0;
  }
  uint64_t v18 = v11;
  unint64_t v19 = v12;
  id v20 = self;
  uint64_t v21 = (void *)sub_1ACE74F68();
  v51[0] = 0;
  id v22 = objc_msgSend(v20, sel_JSONObjectWithData_options_error_, v21, 0, v51);

  uint64_t v48 = v18;
  if (!v22)
  {
    id v35 = v51[0];
    uint64_t v36 = (void *)sub_1ACE74D78();

    swift_willThrow();
    goto LABEL_25;
  }
  id v23 = v51[0];
  sub_1ACE770C8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772250);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v37 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v37, v4);
    swift_bridgeObjectRetain_n();
    dispatch_group_t v38 = sub_1ACE75498();
    os_log_type_t v39 = sub_1ACE76BE8();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      unint64_t v47 = v19;
      unint64_t v41 = (uint8_t *)v40;
      uint64_t v42 = a1;
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v52 = v43;
      *(_DWORD *)unint64_t v41 = 136315138;
      uint64_t v46 = v41 + 4;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1ACA3189C(v42, a2, (uint64_t *)&v52);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v38, v39, "base64 encoded metadata in HLS playlist was not a JSON object: %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v43, -1, -1);
      MEMORY[0x1AD11B340](v41, -1, -1);
      sub_1ACAB2EF0(v48, v47);
    }
    else
    {
      sub_1ACAB2EF0(v48, v19);

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return 0;
  }
  uint64_t v24 = *(void *)(v52 + 16);
  uint64_t v46 = (uint8_t *)v52;
  unint64_t v47 = v19;
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(v52 + 32);
    uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v27 = *v25;
      uint64_t v49 = 6910581;
      unint64_t v50 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_1ACE771F8();
      if (*(void *)(v27 + 16) && (unint64_t v28 = sub_1ACA65B48((uint64_t)v51), (v29 & 1) != 0))
      {
        sub_1ACA33128(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v52);
      }
      else
      {
        long long v52 = 0u;
        long long v53 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1ACA6A0F8((uint64_t)v51);
      if (*((void *)&v53 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v30 = v49;
          unint64_t v31 = v50;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v26 = sub_1ACA41EA0(0, v26[2] + 1, 1, v26);
          }
          unint64_t v33 = v26[2];
          unint64_t v32 = v26[3];
          if (v33 >= v32 >> 1) {
            uint64_t v26 = sub_1ACA41EA0((void *)(v32 > 1), v33 + 1, 1, v26);
          }
          void v26[2] = v33 + 1;
          uint64_t v34 = &v26[2 * v33];
          v34[4] = v30;
          v34[5] = v31;
        }
      }
      else
      {
        sub_1ACA65828((uint64_t)&v52);
      }
      ++v25;
      --v24;
    }
    while (v24);
  }
  else
  {
    uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  sub_1ACAB2EF0(v48, v47);
  return v26;
}

uint64_t static FairPlayService.shared.getter()
{
  return MEMORY[0x1F41866B0](v0, &unk_1E99F0190);
}

uint64_t FairPlayService.removeKey(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1ACADE600, 0, 0);
}

uint64_t sub_1ACADE600()
{
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1ACE754C8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB76D598);
  uint64_t v2 = sub_1ACE75498();
  os_log_type_t v3 = sub_1ACE76C08();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[2] = v4;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v2, v3, "[FairPlayService]: Begin removing key for adamID=%llu.", v5, 0xCu);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }

  uint64_t v6 = v0[3];
  id v7 = sub_1ACADE98C();
  v0[5] = v7;
  uint64_t v8 = swift_task_alloc();
  v0[6] = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1ACADE7FC;
  uint64_t v10 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v9, 0, 0, 0x654B65766F6D6572, 0xEF293A726F662879, sub_1ACADF178, v8, v10);
}

uint64_t sub_1ACADE7FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1ACADE920;
  }
  else
  {

    swift_task_dealloc();
    os_log_type_t v3 = sub_1ACACCD20;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1ACADE920()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1ACADE98C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayInvalidationManager()), sel_init);
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1ACADE9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t result = MEMORY[0x1F4188790](v5);
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    FairPlayInvalidationManager.removeKey(for:completion:)(a3, (uint64_t)sub_1ACADF384, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACADEB4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE767F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  sub_1ACE76778();
  id v14 = a1;
  uint64_t v15 = sub_1ACE76768();
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBCFD8];
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = v18;
  *((void *)v17 + 4) = a1;
  *((void *)v17 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v16], v9, v6);
  sub_1ACA47C2C((uint64_t)v12, (uint64_t)&unk_1E99F1C80, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1ACADED4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  void v6[5] = a6;
  void v6[3] = a4;
  sub_1ACE76778();
  v6[6] = sub_1ACE76768();
  uint64_t v8 = sub_1ACE766D8();
  return MEMORY[0x1F4188298](sub_1ACADEDE8, v8, v7);
}

uint64_t sub_1ACADEDE8()
{
  id v2 = (id *)(v0 + 3);
  uint64_t v1 = v0[3];
  swift_release();
  if (v1)
  {
    id v3 = *v2;
    id v4 = *v2;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB76D598);
    uint64_t v6 = sub_1ACE75498();
    os_log_type_t v7 = sub_1ACE76C08();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = v0[4];
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 134217984;
      v0[2] = v8;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v6, v7, "[FairPlayService]: Error removing key for adamID=%llu.", v9, 0xCu);
      MEMORY[0x1AD11B340](v9, -1, -1);
    }

    v0[2] = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
    sub_1ACE766E8();
  }
  else
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D598);
    uint64_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76C08();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = v0[4];
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v14 = 134217984;
      v0[2] = v13;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v11, v12, "[FairPlayService]: Finished removing key for adamID=%llu.", v14, 0xCu);
      MEMORY[0x1AD11B340](v14, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
    sub_1ACE766F8();
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t FairPlayService.deinit()
{
  return v0;
}

uint64_t FairPlayService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACADF0C8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA50B84;
  v5[3] = a1;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1ACADE600, 0, 0);
}

uint64_t sub_1ACADF178(uint64_t a1)
{
  return sub_1ACADE9F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1ACADF180@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of FairPlayServicing.removeKey(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1ACA50B84;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for FairPlayService()
{
  return self;
}

uint64_t method lookup function for FairPlayService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayService);
}

uint64_t sub_1ACADF2F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACADF384(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1ACADEB4C(a1, v4, v5);
}

uint64_t sub_1ACADF3FC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACADF4D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1AB0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1ACA50B84;
  return sub_1ACADED4C(a1, v5, v6, v7, v8, v9);
}

id static MTPodcast.sortDescriptor(newestToOldest:)(char a1)
{
  sub_1ACE761B8();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  unint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, (a1 & 1) == 0);

  return v4;
}

uint64_t ServerChannel.name.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.subscriptionName.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.showCount.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  if (*(unsigned char *)(v1 + 56)) {
    return 0;
  }
  else {
    return *(void *)(v1 + 48);
  }
}

uint64_t ServerChannel.availableShowCount.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  if (*(unsigned char *)(v1 + 72)) {
    return 0;
  }
  else {
    return *(void *)(v1 + 64);
  }
}

uint64_t ServerChannel.storeId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.displayType.getter()
{
  sub_1ACADF9EC(v0, &v2);
  return *(void *)&aFree_3[8 * v2];
}

uint64_t sub_1ACADF9EC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  char v4 = *(unsigned char *)(v3 + 73);
  if ((v4 - 1) > 1u)
  {
    char v8 = 0;
  }
  else
  {
    if (*(void *)(v3 + 120)) {
      unint64_t v5 = *(void *)(v3 + 120);
    }
    else {
      unint64_t v5 = MEMORY[0x1E4FBC860];
    }
    if (*(void *)(v3 + 152)) {
      unint64_t v6 = *(void *)(v3 + 152);
    }
    else {
      unint64_t v6 = MEMORY[0x1E4FBC860];
    }
    unint64_t v9 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA6FB18(v6);
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      char v8 = v4;
    }
    else {
      char v8 = 0;
    }
  }
  *a2 = v8;
  return result;
}

uint64_t ServerChannel.artworkURL.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 24);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerChannel.logoImageURL.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 128);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerChannel.backgroundColor.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 136);
  swift_bridgeObjectRetain();
  return v1;
}

float ServerChannel.logoImageHeight.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 128);
  if (v1 && *(unsigned char *)(v1 + 40) != 1) {
    return (float)*(uint64_t *)(v1 + 32);
  }
  else {
    return (float)0;
  }
}

float ServerChannel.logoImageWidth.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 128);
  if (v1 && *(unsigned char *)(v1 + 24) != 1) {
    return (float)*(uint64_t *)(v1 + 16);
  }
  else {
    return (float)0;
  }
}

uint64_t ServerChannel.uberBackgroundImageURL.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 112);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerChannel.uberBackgroundJoeColor.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 112);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerChannel.url.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.fallbackSubscriptionName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  unint64_t v2 = *(void *)(v1 + 120);
  if (!v2) {
    goto LABEL_7;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1ACE77508())
    {
LABEL_4:
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x1AD119490](0, v2);
        swift_bridgeObjectRelease();
        unint64_t v2 = *(void *)(v9 + 80);
        uint64_t v10 = *(void *)(v9 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        if (v10) {
          return v2;
        }
      }
      else
      {
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_22;
        }
        uint64_t v4 = *(void *)(v2 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        unint64_t v2 = *(void *)(v4 + 80);
        uint64_t v5 = *(void *)(v4 + 88);
        swift_bridgeObjectRetain();
        swift_release();
        if (v5) {
          return v2;
        }
      }
LABEL_7:
      unint64_t v2 = *(void *)(v1 + 152);
      if (v2) {
        goto LABEL_8;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v1 + 152);
  if (!v2) {
    goto LABEL_15;
  }
LABEL_8:
  if (!(v2 >> 62))
  {
    uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_10;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE77508();
  if (!result) {
    goto LABEL_17;
  }
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_22:
    uint64_t v11 = MEMORY[0x1AD119490](0, v2);
    swift_bridgeObjectRelease();
    unint64_t v2 = *(void *)(v11 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v2;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v8 = *(void *)(v2 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v2 = *(void *)(v8 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t PaginatedPublisher.eraseToAnyPaginatedPublisher()(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyPaginatedPublisherPrivate();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  return sub_1ACAE03D0((uint64_t)v5);
}

uint64_t type metadata accessor for AnyPaginatedPublisherPrivate()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACAE03D0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 144) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 160), a1);
  return v2;
}

uint64_t *PaginatedPublisher.transformPublisherPart<A>(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = v13;
  v18[1] = v14;
  v18[2] = v15;
  _DWORD v18[3] = v16;
  type metadata accessor for AnyPaginatedPublisherTransformed();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v3, a3);
  a1(v3);
  swift_allocObject();
  return sub_1ACAE158C((uint64_t)v12, (uint64_t)v8);
}

uint64_t type metadata accessor for AnyPaginatedPublisherTransformed()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_1ACAE05D8(uint64_t a1, uint64_t a2)
{
  return sub_1ACAE158C(a1, a2);
}

uint64_t *PaginatedPublisher.paginatedBufferedMulticast()(uint64_t a1, uint64_t a2)
{
  v4[2] = a1;
  BOOL v4[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1ACE757F8();
  swift_getWitnessTable();
  return PaginatedPublisher.transformPublisherPart<A>(_:)((void (*)(uint64_t))sub_1ACAE0734, (uint64_t)v4, a1);
}

uint64_t sub_1ACAE0734@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Publisher.bufferedMulticast()(*(void *)(v1 + 16), *(void *)(*(void *)(v1 + 24) + 8));
  *a1 = result;
  return result;
}

uint64_t *PaginatedPublisher.paginatedMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v7[2] = a3;
  void v7[3] = a4;
  v7[4] = a5;
  v7[5] = a1;
  v7[6] = a2;
  sub_1ACE75678();
  swift_getWitnessTable();
  return PaginatedPublisher.transformPublisherPart<A>(_:)((void (*)(uint64_t))sub_1ACAE0810, (uint64_t)v7, a3);
}

uint64_t sub_1ACAE0810()
{
  return sub_1ACE75B58();
}

uint64_t *PaginatedPublisher.paginatedPrepend(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[2] = a2;
  void v6[3] = a3;
  v6[4] = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  swift_getAssociatedTypeWitness();
  sub_1ACE76688();
  swift_getAssociatedTypeWitness();
  swift_getWitnessTable();
  swift_getAssociatedConformanceWitness();
  v6[6] = sub_1ACE75738();
  void v6[7] = a2;
  v6[8] = swift_getWitnessTable();
  v6[9] = v4;
  sub_1ACE755B8();
  swift_getWitnessTable();
  return PaginatedPublisher.transformPublisherPart<A>(_:)((void (*)(uint64_t))sub_1ACAE0A68, (uint64_t)v6, a2);
}

uint64_t sub_1ACAE09BC()
{
  return sub_1ACE75C98();
}

uint64_t sub_1ACAE0A68()
{
  return sub_1ACAE09BC();
}

uint64_t *PaginatedPublisher.paginatedPrint(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v7[2] = a4;
  void v7[3] = a5;
  v7[4] = a1;
  v7[5] = a2;
  v7[6] = a3;
  sub_1ACE756B8();
  swift_getWitnessTable();
  return PaginatedPublisher.transformPublisherPart<A>(_:)((void (*)(uint64_t))sub_1ACAE0B10, (uint64_t)v7, a4);
}

uint64_t sub_1ACAE0B10()
{
  return sub_1ACE75BD8();
}

uint64_t *PaginatedPublisher.paginatedSectionMap<A, B, C>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  v16[3] = a4;
  void v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  v16[7] = a8;
  v16[8] = a1;
  v16[9] = a2;
  sub_1ACE76688();
  uint64_t v17 = type metadata accessor for FRPOutput();
  swift_retain();
  uint64_t v18 = PaginatedPublisher.paginatedMap<A>(_:)((uint64_t)sub_1ACAE0D28, (uint64_t)v16, a3, v17, a7);
  swift_release();
  return v18;
}

uint64_t sub_1ACAE0C28@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  uint64_t v2 = type metadata accessor for FRPOutput();
  uint64_t v3 = sub_1ACE76688();
  return FRPOutput.map<A>(_:)((uint64_t)sub_1ACAE29B8, v2, v3, a1);
}

uint64_t sub_1ACAE0CF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAE0D28@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACAE0C28(a1);
}

uint64_t sub_1ACAE0D5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  v16[11] = *a1;
  void v16[2] = a4;
  v16[3] = a5;
  void v16[4] = a6;
  v16[5] = a7;
  v16[6] = a8;
  v16[7] = a10;
  v16[8] = a2;
  v16[9] = a3;
  type metadata accessor for FRPSectionInfo();
  uint64_t v12 = sub_1ACE76688();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACAE29EC, (uint64_t)v16, v12, a7, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v14);
  *a9 = result;
  return result;
}

uint64_t *PaginatedPublisher.paginatedFRPOutputMap<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  void v12[6] = a1;
  v12[7] = a2;
  uint64_t v13 = type metadata accessor for FRPOutput();
  swift_retain();
  uint64_t v14 = PaginatedPublisher.paginatedMap<A>(_:)((uint64_t)sub_1ACAE0F28, (uint64_t)v12, a3, v13, a6);
  swift_release();
  return v14;
}

uint64_t sub_1ACAE0EF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAE0F28@<X0>(uint64_t a1@<X8>)
{
  long long v5 = *(_OWORD *)(v1 + 32);
  uint64_t v3 = type metadata accessor for FRPOutput();
  return FRPOutput.map<A>(_:)((uint64_t)sub_1ACAE2990, v3, v5, a1);
}

void *Publisher<>.paginatedSwitchToLatest()()
{
  return sub_1ACAE239C();
}

uint64_t type metadata accessor for SwitchToLatestPaginatedPublisher()
{
  return swift_getGenericMetadata();
}

void sub_1ACAE1044()
{
}

void sub_1ACAE1090()
{
}

void sub_1ACAE10DC()
{
}

void sub_1ACAE1128()
{
}

uint64_t AnyPaginatedPublisher.deinit()
{
  return v0;
}

uint64_t AnyPaginatedPublisher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACAE118C()
{
  return v0;
}

uint64_t sub_1ACAE1194()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))() & 1;
}

uint64_t sub_1ACAE11DC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))() & 1;
}

uint64_t sub_1ACAE1224()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1ACAE1268()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t sub_1ACAE12AC()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 152) + 16))(*(void *)(*(void *)v0 + 144)) & 1;
}

uint64_t sub_1ACAE1328()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 152) + 24))(*(void *)(*(void *)v0 + 144)) & 1;
}

uint64_t sub_1ACAE13A4()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 152) + 32))(*(void *)(*(void *)v0 + 144));
}

uint64_t sub_1ACAE141C()
{
  return sub_1ACE75AB8();
}

uint64_t sub_1ACAE1488()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 144) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 160));
}

uint64_t sub_1ACAE14E0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 144) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 160));
  return swift_deallocClassInstance();
}

uint64_t *sub_1ACAE158C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*v2 + 144) - 8) + 32))((uint64_t)v2 + *(void *)(*v2 + 176), a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + 152) - 8) + 32))((uint64_t)v2 + *(void *)(*v2 + 184), a2);
  return v2;
}

uint64_t sub_1ACAE166C()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 160) + 16))(*(void *)(*(void *)v0 + 144)) & 1;
}

uint64_t sub_1ACAE16E8()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 160) + 24))(*(void *)(*(void *)v0 + 144)) & 1;
}

uint64_t sub_1ACAE1764()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 160) + 32))(*(void *)(*(void *)v0 + 144));
}

uint64_t sub_1ACAE17DC()
{
  return sub_1ACE75AB8();
}

uint64_t sub_1ACAE1844()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 144) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 176));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 184);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v1 + 152) - 8) + 8);
  return v3(v2);
}

uint64_t *sub_1ACAE1918()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 144) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 176));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 152) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 184));
  return v0;
}

uint64_t sub_1ACAE19E4()
{
  sub_1ACAE1918();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACAE1A38(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 152);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1ACE758F8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 168) + 16))(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11 & 1;
}

uint64_t sub_1ACAE1C58(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 152);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1ACE758F8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 168) + 24))(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11 & 1;
}

uint64_t sub_1ACAE1E78(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 152);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = sub_1ACE76FD8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1ACE758F8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3)) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(uint64_t))(*(void *)(v2 + 168) + 32))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ACAE208C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = sub_1ACE75608();
  sub_1ACE757F8();
  swift_getWitnessTable();
  v7[0] = v1;
  v7[1] = sub_1ACE75678();
  v7[2] = swift_getWitnessTable();
  void v7[3] = swift_getWitnessTable();
  uint64_t v2 = sub_1ACE75628();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - v4;
  v7[0] = *(void *)(v0 + 16);
  sub_1ACE75AC8();
  sub_1ACE75618();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1ACAE22F0()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACAE2328()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1ACAE2358()
{
  sub_1ACAE2328();
  return swift_deallocClassInstance();
}

uint64_t Just.isPreparingNextPage.getter()
{
  return 0;
}

Swift::Bool __swiftcall Just.shouldPrepareNextPage()()
{
  return 0;
}

void *sub_1ACAE239C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 152);
  uint64_t v4 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - v5;
  sub_1ACE75918();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v6, 1, 1, v3);
  swift_retain();
  v1[3] = sub_1ACE75928();
  uint64_t v7 = Publisher.bufferedMulticast()(*(void *)(v2 + 144), *(void *)(v2 + 160));
  void v1[2] = v7;
  uint64_t v13 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_1ACE757F8();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = Publisher.makeOptional.getter(v8, WitnessTable);
  sub_1ACE757F8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = sub_1ACE75D08();
  swift_release();
  swift_release();
  v1[4] = v10;
  swift_release();
  return v1;
}

uint64_t sub_1ACAE2628(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ACAE2664(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of PaginatedPublisher.isPreparingNextPage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PaginatedPublisher.shouldPrepareNextPage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PaginatedPublisher.loadNextPage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ACAE26DC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AnyPaginatedPublisher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AnyPaginatedPublisher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyPaginatedPublisher);
}

uint64_t dispatch thunk of AnyPaginatedPublisher.isPreparingNextPage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.shouldPrepareNextPage()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.loadNextPage()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AnyPaginatedPublisher.receive<A>(subscriber:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1ACAE27D4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1ACAE2868()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1ACAE293C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1ACAE2990()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1ACAE29B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACAE0D5C(a1, v2[8], v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], a2, v2[7]);
}

uint64_t sub_1ACAE29EC()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t DownloadedAssetEffect.hash(into:)()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadedAssetEffect();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAE3050(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1ACE77B28();
    sub_1ACAE30FC(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
    sub_1ACE760F8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE76108();
    return swift_bridgeObjectRelease();
  }
}

uint64_t DownloadedAssetEffect.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE2C48()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE2C8C()
{
  return sub_1ACE77B78();
}

uint64_t _s18PodcastsFoundation21DownloadedAssetEffectO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DownloadedAssetEffect();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v30 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1C98);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v18[*(int *)(v19 + 56)];
  sub_1ACAE3050(a1, (uint64_t)v18);
  sub_1ACAE3050(a2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1ACAE3050((uint64_t)v18, (uint64_t)v15);
    uint64_t v23 = *v15;
    uint64_t v22 = v15[1];
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_4:
      if (v23 == *(void *)v20 && v22 == *((void *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v25 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          sub_1ACAE34D8((uint64_t)v18);
LABEL_16:
          char v27 = 0;
          return v27 & 1;
        }
      }
      sub_1ACAE34D8((uint64_t)v18);
      char v27 = 1;
      return v27 & 1;
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1ACAE3050((uint64_t)v18, (uint64_t)v12);
    uint64_t v23 = *v12;
    uint64_t v22 = v12[1];
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1ACAE3748((uint64_t)v18);
    goto LABEL_16;
  }
  sub_1ACAE3050((uint64_t)v18, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v4);
    goto LABEL_15;
  }
  uint64_t v26 = v31;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v6, v20, v4);
  char v27 = MEMORY[0x1AD117040](v9, v6);
  unint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
  v28(v6, v4);
  v28(v9, v4);
  sub_1ACAE34D8((uint64_t)v18);
  return v27 & 1;
}

uint64_t type metadata accessor for DownloadedAssetEffect()
{
  uint64_t result = qword_1EB76BDB8;
  if (!qword_1EB76BDB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACAE3050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadedAssetEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAE30B4()
{
  return sub_1ACAE30FC(&qword_1E99F1C90, (void (*)(uint64_t))type metadata accessor for DownloadedAssetEffect);
}

uint64_t sub_1ACAE30FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadedAssetEffect(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = sub_1ACE74F28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DownloadedAssetEffect(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = sub_1ACE74F28();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for DownloadedAssetEffect(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = sub_1ACE74F28();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for DownloadedAssetEffect(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1ACAE34D8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v4 = sub_1ACE74F28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1ACAE34D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadedAssetEffect();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for DownloadedAssetEffect(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1ACE74F28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for DownloadedAssetEffect(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACAE34D8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1ACAE36B4()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1ACAE3748(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1C98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of PodcastStateDataSourceDelegate.refreshStates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PodcastStateDataSourceProtocol.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

BOOL static OAuthSessionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t OAuthSessionError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t OAuthSessionError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACAE38D4()
{
  unint64_t result = qword_1E99F1CA0;
  if (!qword_1E99F1CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1CA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OAuthSessionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OAuthSessionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAE3A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthSessionError()
{
  return &type metadata for OAuthSessionError;
}

id PushSubscriptionRequest.__allocating_init(endpointURL:action:apnsToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  uint64_t v12 = &v11[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_endpointURL];
  uint64_t v13 = sub_1ACE74F28();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  uint64_t v15 = &v11[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_action];
  *(void *)uint64_t v15 = a2;
  *((void *)v15 + 1) = a3;
  uint64_t v16 = &v11[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_apnsToken];
  *(void *)uint64_t v16 = a4;
  *((void *)v16 + 1) = a5;
  v19.receiver = v11;
  v19.super_class = v5;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id PushSubscriptionRequest.init(endpointURL:action:apnsToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = &v5[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_endpointURL];
  uint64_t v13 = sub_1ACE74F28();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  uint64_t v15 = &v5[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_action];
  *(void *)uint64_t v15 = a2;
  *((void *)v15 + 1) = a3;
  uint64_t v16 = &v5[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_apnsToken];
  *(void *)uint64_t v16 = a4;
  *((void *)v16 + 1) = a5;
  v19.receiver = v5;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

unint64_t PushSubscriptionRequest.parameters.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE8A540;
  *(void *)(inited + 32) = sub_1ACE761B8();
  *(void *)(inited + 40) = v2;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_action);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_action + 8);
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 80) = sub_1ACE761B8();
  *(void *)(inited + 88) = v6;
  BOOL v7 = self;
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_mainBundle);
  id v9 = objc_msgSend(v8, sel_bundleIdentifier);

  if (!v9)
  {
    uint64_t v13 = (uint64_t *)(inited + 96);
    *(void *)(inited + 120) = v5;
    goto LABEL_5;
  }
  uint64_t v10 = sub_1ACE761B8();
  unint64_t v12 = v11;

  uint64_t v13 = (uint64_t *)(inited + 96);
  *(void *)(inited + 120) = v5;
  if (!v12)
  {
LABEL_5:
    *uint64_t v13 = 0;
    unint64_t v12 = 0xE000000000000000;
    goto LABEL_6;
  }
  *uint64_t v13 = v10;
LABEL_6:
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 128) = sub_1ACE761B8();
  *(void *)(inited + 136) = v14;
  uint64_t v15 = sub_1ACE761B8();
  *(void *)(inited + 168) = v5;
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 152) = v16;
  *(void *)(inited + 176) = sub_1ACE761B8();
  *(void *)(inited + 184) = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1ACE84820;
  *(void *)(v18 + 32) = sub_1ACE761B8();
  *(void *)(v18 + 40) = v19;
  *(void *)(v18 + 48) = sub_1ACE761B8();
  *(void *)(v18 + 56) = v20;
  *(void *)(inited + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  *(void *)(inited + 192) = v18;
  *(void *)(inited + 224) = sub_1ACE761B8();
  *(void *)(inited + 232) = v21;
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_apnsToken);
  unint64_t v23 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_apnsToken + 8);
  *(void *)(inited + 264) = MEMORY[0x1E4F277C0];
  *(void *)(inited + 240) = v22;
  *(void *)(inited + 248) = v23;
  sub_1ACA3985C(v22, v23);
  return sub_1ACA3625C(inited);
}

uint64_t PushSubscriptionRequest.buildURLRequest()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_endpointURL);
  sub_1ACE74848();
  sub_1ACAE4288();
  if (v2)
  {
    uint64_t v7 = sub_1ACE74898();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  }
  else
  {
    sub_1ACE74878();
    sub_1ACE747E8();
    sub_1ACE761B8();
    sub_1ACE74888();
    return swift_bridgeObjectRelease();
  }
}

void *sub_1ACAE4288()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = self;
  PushSubscriptionRequest.parameters.getter();
  uint64_t v1 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_dataWithPropertyList_format_options_error_, v1, 200, 0, v6);

  id v3 = v6[0];
  if (v2)
  {
    uint64_t v4 = (void *)sub_1ACE74F88();
  }
  else
  {
    uint64_t v4 = v3;
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v4;
}

id PushSubscriptionRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PushSubscriptionRequest.init()()
{
}

id PushSubscriptionRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACAE4654()
{
  return type metadata accessor for PushSubscriptionRequest();
}

uint64_t type metadata accessor for PushSubscriptionRequest()
{
  uint64_t result = qword_1E99F1CC0;
  if (!qword_1E99F1CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACAE46A8()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PushSubscriptionRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PushSubscriptionRequest);
}

uint64_t dispatch thunk of PushSubscriptionRequest.__allocating_init(endpointURL:action:apnsToken:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t MetricsActionType.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsActionType.debugDescription.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1ACAE4850()
{
  return MetricsActionType.debugDescription.getter();
}

uint64_t MetricsActionType.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsActionType.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsActionType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsActionType.add.getter()
{
  return 6579297;
}

uint64_t static MetricsActionType.actionSheet.getter()
{
  return 0x68536E6F69746361;
}

uint64_t static MetricsActionType.buy.getter()
{
  return 7959906;
}

uint64_t static MetricsActionType.cancelDownload.getter()
{
  return 0x6F446C65636E6163;
}

uint64_t static MetricsActionType.clear.getter()
{
  return 0x7261656C63;
}

uint64_t static MetricsActionType.click.getter()
{
  return 0x6B63696C63;
}

uint64_t static MetricsActionType.copy.getter()
{
  return 2037411683;
}

uint64_t static MetricsActionType.delete.getter()
{
  return 0x6574656C6564;
}

uint64_t static MetricsActionType.description.getter()
{
  return 0x7470697263736564;
}

uint64_t static MetricsActionType.dismiss.getter()
{
  return 0x7373696D736964;
}

uint64_t static MetricsActionType.download.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static MetricsActionType.fastForward.getter()
{
  return 0x77726F4674736166;
}

uint64_t static MetricsActionType.favorite.getter()
{
  return 0x657469726F766166;
}

uint64_t static MetricsActionType.filter.getter()
{
  return 0x7265746C6966;
}

uint64_t static MetricsActionType.follow.getter()
{
  return 0x776F6C6C6F66;
}

uint64_t static MetricsActionType.hide.getter()
{
  return 1701079400;
}

uint64_t static MetricsActionType.hint.getter()
{
  return 1953393000;
}

uint64_t static MetricsActionType.input.getter()
{
  return 0x7475706E69;
}

uint64_t static MetricsActionType.navigate.getter()
{
  return 0x657461676976616ELL;
}

uint64_t static MetricsActionType.openDocument.getter()
{
  return 0x75636F446E65706FLL;
}

uint64_t static MetricsActionType.pause.getter()
{
  return 0x6573756170;
}

uint64_t static MetricsActionType.play.getter()
{
  return 2036427888;
}

uint64_t static MetricsActionType.played.getter()
{
  return 0x646579616C70;
}

uint64_t static MetricsActionType.ratings.getter()
{
  return 0x73676E69746172;
}

uint64_t static MetricsActionType.remove.getter()
{
  return 0x65766F6D6572;
}

uint64_t static MetricsActionType.removeDownload.getter()
{
  return 0x6F4465766F6D6572;
}

unint64_t static MetricsActionType.removeFromStation.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsActionType.report.getter()
{
  return 0x74726F706572;
}

uint64_t static MetricsActionType.reportConcern.getter()
{
  return 0x6F4374726F706572;
}

uint64_t static MetricsActionType.rewind.getter()
{
  return 0x646E69776572;
}

uint64_t static MetricsActionType.save.getter()
{
  return 1702257011;
}

uint64_t static MetricsActionType.select.getter()
{
  return 0x7463656C6573;
}

uint64_t static MetricsActionType.share.getter()
{
  return 0x6572616873;
}

uint64_t static MetricsActionType.show.getter()
{
  return 2003789939;
}

uint64_t static MetricsActionType.skip.getter()
{
  return 1885956979;
}

uint64_t static MetricsActionType.sort.getter()
{
  return 1953656691;
}

uint64_t static MetricsActionType.submit.getter()
{
  return 0x74696D627573;
}

uint64_t static MetricsActionType.suggestLess.getter()
{
  return 0x4C74736567677573;
}

uint64_t static MetricsActionType.tapToRate.getter()
{
  return 0x7461526F54706174;
}

unint64_t static MetricsActionType.turnOffAutoDownloads.getter()
{
  return 0xD000000000000014;
}

unint64_t static MetricsActionType.turnOnAutoDownloads.getter()
{
  return 0xD000000000000013;
}

uint64_t static MetricsActionType.unadd.getter()
{
  return 0x6464616E75;
}

uint64_t static MetricsActionType.undoSuggestLess.getter()
{
  return 0x676775536F646E75;
}

uint64_t static MetricsActionType.unfavorite.getter()
{
  return 0x69726F7661666E75;
}

uint64_t static MetricsActionType.unfollow.getter()
{
  return 0x776F6C6C6F666E75;
}

uint64_t static MetricsActionType.unplayed.getter()
{
  return 0x646579616C706E75;
}

uint64_t static MetricsActionType.unsave.getter()
{
  return 0x657661736E75;
}

uint64_t static MetricsActionType.viewTranscript.getter()
{
  return 0x6E61725477656976;
}

unint64_t sub_1ACAE4E58()
{
  unint64_t result = qword_1E99F1CD0;
  if (!qword_1E99F1CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1CD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsActionType()
{
  return &type metadata for MetricsActionType;
}

uint64_t static CacheDeleteUrgency.from(purgeability:)(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    return 0;
  }
  if ((int)a1 > 2047)
  {
    if (a1 == 2048) {
      return 3;
    }
    if (a1 == 0x8000) {
      return 4;
    }
  }
  else
  {
    if (a1 == 512) {
      return 1;
    }
    if (a1 == 1024) {
      return 2;
    }
  }
  uint64_t result = sub_1ACE77498();
  __break(1u);
  return result;
}

unint64_t CacheDeleteUrgency.rawValue.getter(char a1)
{
  unint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      unint64_t result = 7827308;
      break;
    case 2:
      unint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      unint64_t result = 1751607656;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAE5004(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 1701736302;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE400000000000000;
  unint64_t v5 = 1701736302;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      unint64_t v5 = 7827308;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v5 = 0x6D756964656DLL;
      break;
    case 3:
      unint64_t v5 = 1751607656;
      break;
    case 4:
      unint64_t v4 = 0x80000001ACEC4320;
      unint64_t v5 = 0xD000000000000015;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7827308) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 1751607656;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0x80000001ACEC4320;
      if (v5 != 0xD000000000000015) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACAE519C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5278()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAE533C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5414@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation18CacheDeleteUrgencyO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACAE5444(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7827308;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 1751607656;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0xD000000000000015;
      a1[1] = 0x80000001ACEC4320;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t _s18PodcastsFoundation18CacheDeleteUrgencyO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACAE5534()
{
  unint64_t result = qword_1E99F1CD8;
  if (!qword_1E99F1CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1CD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CacheDeleteUrgency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAE5654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CacheDeleteUrgency()
{
  return &type metadata for CacheDeleteUrgency;
}

uint64_t sub_1ACAE568C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE577C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5894()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE59A0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE59E8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5B04()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5BF8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5CF0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE5E2C()
{
  return sub_1ACE77B78();
}

void RecommendationsMetadata.Shows.Metadata.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_podcast);
  if (v8)
  {
    uint64_t v9 = v8;
    unint64_t v10 = (unint64_t)objc_msgSend(v8, sel_storeCollectionId);
    if ((v10 & 0x8000000000000000) == 0)
    {
      unint64_t v11 = v10;
      if (v10 && v10 != 1000000000000)
      {
        id v13 = objc_msgSend(a1, sel_lastUpdatedDate);
        sub_1ACE75078();

        sub_1ACE75058();
        double v15 = v14 * 1000.0;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        *(void *)a2 = v11;
        *(double *)(a2 + 8) = floor(v15);
        *(unsigned char *)(a2 + 16) = 0;
        return;
      }
    }
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
}

PodcastsFoundation::RecommendationsMetadata::Shows __swiftcall RecommendationsMetadata.Shows.init(from:dislikedPodcasts:)(Swift::OpaquePointer from, Swift::OpaquePointer dislikedPodcasts)
{
  uint64_t v5 = v2;
  uint64_t v34 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v34 - 8);
  char v7 = (void *)MEMORY[0x1F4188790](v34);
  unint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)from._rawValue >> 62)
  {
    char v7 = (void *)sub_1ACE77508();
    uint64_t v12 = (uint64_t)v7;
    if (v7) {
      goto LABEL_3;
    }
LABEL_29:
    char v7 = (void *)swift_bridgeObjectRelease();
    double v14 = (void *)MEMORY[0x1E4FBC860];
    char v29 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_30;
  }
  uint64_t v12 = *(void *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_29;
  }
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v31 = v5;
  rawValue = dislikedPodcasts._rawValue;
  uint64_t v13 = 0;
  unint64_t v33 = (void (**)(char *, uint64_t))(v6 + 8);
  double v14 = (void *)MEMORY[0x1E4FBC860];
  double v15 = &selRef_rangeOfCharacterFromSet_options_range_;
  id v35 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (((unint64_t)from._rawValue & 0xC000000000000001) != 0) {
      id v16 = (id)MEMORY[0x1AD119490](v13, from._rawValue);
    }
    else {
      id v16 = *((id *)from._rawValue + v13 + 4);
    }
    uint64_t v17 = v16;
    unint64_t v18 = (unint64_t)[v16 v15[459]];
    if ((v18 & 0x8000000000000000) == 0)
    {
      unint64_t v19 = v18;
      if (v18 && v18 != 1000000000000)
      {
        objc_msgSend(v17, sel_addedDate);
        sub_1ACE74FA8();
        sub_1ACE75058();
        double v22 = v21;
        (*v33)(v11, v34);
        if (objc_msgSend(v17, sel_subscribed))
        {
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v23 = v35;
          }
          else {
            unint64_t v23 = sub_1ACA41664(0, v35[2] + 1, 1, v35);
          }
          unint64_t v25 = v23[2];
          unint64_t v24 = v23[3];
          if (v25 >= v24 >> 1) {
            unint64_t v23 = sub_1ACA41664((void *)(v24 > 1), v25 + 1, 1, v23);
          }
          _OWORD v23[2] = v25 + 1;
          id v35 = v23;
          uint64_t v26 = (double *)&v23[2 * v25];
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v14 = sub_1ACA41664(0, v14[2] + 1, 1, v14);
          }
          unint64_t v28 = v14[2];
          unint64_t v27 = v14[3];
          if (v28 >= v27 >> 1) {
            double v14 = sub_1ACA41664((void *)(v27 > 1), v28 + 1, 1, v14);
          }
          void v14[2] = v28 + 1;
          uint64_t v26 = (double *)&v14[2 * v28];
        }
        *((void *)v26 + 4) = v19;
        v26[5] = floor(v22 * 1000.0);
        double v15 = &selRef_rangeOfCharacterFromSet_options_range_;
      }
    }
    ++v13;
  }
  while (v12 != v13);
  char v7 = (void *)swift_bridgeObjectRelease();
  uint64_t v5 = v31;
  dislikedPodcasts._rawValue = rawValue;
  char v29 = v35;
LABEL_30:
  v5->_rawValue = v29;
  v5[1]._rawValue = v14;
  v5[2]._rawValue = dislikedPodcasts._rawValue;
LABEL_32:
  result.disliked._rawValue = v9;
  result.unfollowed._rawValue = v8;
  result.followed._rawValue = v7;
  return result;
}

void RecommendationsMetadata.Channels.Metadata.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_channel);
  if (v8)
  {
    uint64_t v9 = v8;
    unint64_t v10 = (unint64_t)objc_msgSend(v8, sel_storeId);
    if ((v10 & 0x8000000000000000) == 0)
    {
      unint64_t v11 = v10;
      if (v10 && v10 != 1000000000000)
      {
        id v13 = objc_msgSend(a1, sel_lastUpdatedDate);
        sub_1ACE75078();

        sub_1ACE75058();
        double v15 = v14 * 1000.0;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        *(void *)a2 = v11;
        *(double *)(a2 + 8) = floor(v15);
        *(unsigned char *)(a2 + 16) = 0;
        return;
      }
    }
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
}

PodcastsFoundation::RecommendationsMetadata::Channels __swiftcall RecommendationsMetadata.Channels.init(from:favoritedChannels:dislikedChannels:)(Swift::OpaquePointer from, Swift::OpaquePointer favoritedChannels, Swift::OpaquePointer dislikedChannels)
{
  char v7 = v3;
  uint64_t v33 = sub_1ACE750A8();
  uint64_t v8 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)from._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1ACE77508();
    uint64_t v11 = (uint64_t)v12;
  }
  else
  {
    uint64_t v11 = *(void *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = (void *)swift_bridgeObjectRetain();
  }
  rawValue = favoritedChannels._rawValue;
  uint64_t v31 = dislikedChannels._rawValue;
  char v29 = v7;
  if (v11)
  {
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v15 = 0;
    unint64_t v32 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (((unint64_t)from._rawValue & 0xC000000000000001) != 0) {
        id v17 = (id)MEMORY[0x1AD119490](v15, from._rawValue);
      }
      else {
        id v17 = *((id *)from._rawValue + v15 + 4);
      }
      unint64_t v18 = v17;
      unint64_t v19 = (unint64_t)objc_msgSend(v17, sel_storeId);
      if ((v19 & 0x8000000000000000) != 0 || (unint64_t v20 = v19, v19 == 1000000000000) || !v19)
      {
      }
      else
      {
        objc_msgSend(v18, sel_subscriptionEnabledDate);
        sub_1ACE74FA8();
        sub_1ACE75058();
        double v22 = v21;
        (*v32)(v10, v33);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1ACA41670(0, v16[2] + 1, 1, v16);
        }
        unint64_t v24 = v16[2];
        unint64_t v23 = v16[3];
        if (v24 >= v23 >> 1) {
          uint64_t v16 = sub_1ACA41670((void *)(v23 > 1), v24 + 1, 1, v16);
        }
        void v16[2] = v24 + 1;
        unint64_t v25 = (double *)&v16[2 * v24];
        *((void *)v25 + 4) = v20;
        v25[5] = floor(v22 * 1000.0);
      }
      ++v15;
    }
    while (v11 != v15);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = (void *)swift_bridgeObjectRelease_n();
  unint64_t v27 = v29;
  uint64_t v26 = rawValue;
  *char v29 = v16;
  v27[1] = v26;
  v27[2] = v31;
LABEL_23:
  result.disliked._rawValue = v14;
  result.liked._rawValue = v13;
  result.subscribed._rawValue = v12;
  return result;
}

PodcastsFoundation::RecommendationsMetadata::Episodes __swiftcall RecommendationsMetadata.Episodes.init(from:)(Swift::OpaquePointer from)
{
  uint64_t v26 = v1;
  uint64_t v28 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)from._rawValue >> 62))
  {
    uint64_t rawValue = *(void *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    result.recentlyPlayed._uint64_t rawValue = (void *)swift_bridgeObjectRetain();
    if (rawValue) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
    result.recentlyPlayed._uint64_t rawValue = (void *)swift_bridgeObjectRelease_n();
    *uint64_t v26 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  result.recentlyPlayed._uint64_t rawValue = (void *)sub_1ACE77508();
  uint64_t rawValue = (uint64_t)result.recentlyPlayed._rawValue;
  if (!result.recentlyPlayed._rawValue) {
    goto LABEL_19;
  }
LABEL_3:
  if (rawValue >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v27 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v10 = &selRef_rangeOfCharacterFromSet_options_range_;
    do
    {
      if (((unint64_t)from._rawValue & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x1AD119490](v8, from._rawValue);
      }
      else {
        id v11 = *((id *)from._rawValue + v8 + 4);
      }
      uint64_t v12 = v11;
      unint64_t v13 = (unint64_t)[v11 v10[465]];
      if ((v13 & 0x8000000000000000) != 0 || (unint64_t v14 = v13, v13 == 1000000000000) || !v13)
      {
      }
      else
      {
        objc_msgSend(v12, sel_lastDatePlayed);
        sub_1ACE74FA8();
        sub_1ACE75058();
        double v16 = v15;
        (*v27)(v5, v28);
        id v17 = objc_msgSend(v12, sel_playState);
        objc_msgSend(v12, sel_duration);
        double v19 = v18;
        objc_msgSend(v12, sel_playhead);
        float v21 = v20;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1ACA41788(0, v9[2] + 1, 1, v9);
        }
        unint64_t v23 = v9[2];
        unint64_t v22 = v9[3];
        if (v23 >= v22 >> 1) {
          uint64_t v9 = sub_1ACA41788((void *)(v22 > 1), v23 + 1, 1, v9);
        }
        _OWORD v9[2] = v23 + 1;
        unint64_t v24 = (double *)&v9[7 * v23];
        *((void *)v24 + 4) = v14;
        v24[5] = floor(v16 * 1000.0);
        *((unsigned char *)v24 + 48) = v17 == 0;
        v24[7] = floor(v19 * 1000.0);
        *((unsigned char *)v24 + 64) = 0;
        v24[9] = floorf(v21 * 1000.0);
        *((unsigned char *)v24 + 80) = 0;
        unint64_t v10 = &selRef_rangeOfCharacterFromSet_options_range_;
      }
      ++v8;
    }
    while (rawValue != v8);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

PodcastsFoundation::RecommendationsMetadata::Categories __swiftcall RecommendationsMetadata.Categories.init(from:dislikedInterests:)(Swift::OpaquePointer from, Swift::OpaquePointer dislikedInterests)
{
  uint64_t v5 = v2;
  uint64_t v48 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)from._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = (void *)sub_1ACE77508();
    uint64_t v9 = (uint64_t)v10;
  }
  else
  {
    uint64_t v9 = *(void *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v10 = (void *)swift_bridgeObjectRetain();
  }
  uint64_t rawValue = dislikedInterests._rawValue;
  uint64_t v45 = v6;
  uint64_t v46 = v5;
  if (v9)
  {
    if (v9 >= 1)
    {
      uint64_t v12 = 0;
      unint64_t v47 = (void (**)(char *, uint64_t))(v6 + 8);
      unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        if (((unint64_t)from._rawValue & 0xC000000000000001) != 0) {
          id v14 = (id)MEMORY[0x1AD119490](v12, from._rawValue);
        }
        else {
          id v14 = *((id *)from._rawValue + v12 + 4);
        }
        double v15 = v14;
        id v16 = objc_msgSend(v14, sel_category);
        if (v16)
        {
          id v17 = v16;
          id v18 = objc_msgSend(v16, sel_adamID);
          if (v18)
          {
            id v19 = v18;
            if (v18 != (id)1000000000000)
            {
              id v20 = objc_msgSend(v15, sel_lastUpdatedDate);
              sub_1ACE75078();

              sub_1ACE75058();
              double v22 = v21;
              (*v47)(v8, v48);

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v13 = sub_1ACA418B0(0, v13[2] + 1, 1, v13);
              }
              unint64_t v24 = v13[2];
              unint64_t v23 = v13[3];
              if (v24 >= v23 >> 1) {
                unint64_t v13 = sub_1ACA418B0((void *)(v23 > 1), v24 + 1, 1, v13);
              }
              void v13[2] = v24 + 1;
              uint64_t v25 = (double *)&v13[2 * v24];
              *((void *)v25 + 4) = v19;
              v25[5] = floor(v22 * 1000.0);
              dislikedInterests._uint64_t rawValue = rawValue;
              goto LABEL_8;
            }
          }
        }
LABEL_8:
        if (v9 == ++v12) {
          goto LABEL_21;
        }
      }
    }
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease_n();
  if ((unint64_t)dislikedInterests._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = (void *)sub_1ACE77508();
    uint64_t v26 = (uint64_t)v10;
    if (v10) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v26 = *(void *)(((unint64_t)dislikedInterests._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v10 = (void *)swift_bridgeObjectRetain();
    if (v26)
    {
LABEL_23:
      if (v26 < 1)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v27 = 0;
      unint64_t v28 = (unint64_t)dislikedInterests._rawValue & 0xC000000000000001;
      unint64_t v47 = (void (**)(char *, uint64_t))(v45 + 8);
      char v29 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        if (v28) {
          id v30 = (id)MEMORY[0x1AD119490](v27, dislikedInterests._rawValue);
        }
        else {
          id v30 = *((id *)dislikedInterests._rawValue + v27 + 4);
        }
        uint64_t v31 = v30;
        id v32 = objc_msgSend(v30, sel_category);
        if (v32)
        {
          uint64_t v33 = v32;
          id v34 = objc_msgSend(v32, sel_adamID);
          if (v34)
          {
            id v35 = v34;
            if (v34 != (id)1000000000000)
            {
              id v36 = objc_msgSend(v31, sel_lastUpdatedDate);
              sub_1ACE75078();

              sub_1ACE75058();
              double v38 = v37;
              (*v47)(v8, v48);

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v29 = sub_1ACA418B0(0, v29[2] + 1, 1, v29);
              }
              unint64_t v40 = v29[2];
              unint64_t v39 = v29[3];
              if (v40 >= v39 >> 1) {
                char v29 = sub_1ACA418B0((void *)(v39 > 1), v40 + 1, 1, v29);
              }
              v29[2] = v40 + 1;
              unint64_t v41 = (double *)&v29[2 * v40];
              *((void *)v41 + 4) = v35;
              v41[5] = floor(v38 * 1000.0);
              dislikedInterests._uint64_t rawValue = rawValue;
              goto LABEL_27;
            }
          }
        }
LABEL_27:
        if (v26 == ++v27) {
          goto LABEL_42;
        }
      }
    }
  }
  char v29 = (void *)MEMORY[0x1E4FBC860];
LABEL_42:
  unint64_t v10 = (void *)swift_bridgeObjectRelease_n();
  uint64_t v42 = v46;
  *uint64_t v46 = v13;
  v42[1] = v29;
LABEL_45:
  result.disliked._uint64_t rawValue = v11;
  result.liked._uint64_t rawValue = v10;
  return result;
}

{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  double *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  double v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  double *v40;
  void *v41;
  void *v42;
  void *v43;
  PodcastsFoundation::RecommendationsMetadata::Categories result;
  void *v45;
  uint64_t v46;
  void *v47;
  void *rawValue;
  uint64_t v49;
  void *v50;

  uint64_t v5 = v2;
  uint64_t v49 = type metadata accessor for InterestModel();
  uint64_t v6 = *(void *)(v49 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v49);
  uint64_t v9 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v45 - v11;
  unint64_t v13 = MEMORY[0x1F4188790](v10);
  double v15 = (uint64_t *)((char *)&v45 - v14);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v45 - v16;
  id v18 = *((void *)from._rawValue + 2);
  unint64_t v47 = v5;
  uint64_t rawValue = dislikedInterests._rawValue;
  if (v18)
  {
    id v19 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v45 = from._rawValue;
    uint64_t v46 = v6;
    id v20 = (char *)from._rawValue + ((v19 + 32) & ~v19);
    double v21 = *(void *)(v6 + 72);
    unint64_t v50 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1ACAEBCE4((uint64_t)v20, (uint64_t)v17);
      sub_1ACAEBCE4((uint64_t)v17, (uint64_t)v15);
      double v22 = *v15;
      if (*v15 == 1000000000000 || v22 == 0)
      {
        sub_1ACAEBD48((uint64_t)v15);
        sub_1ACAEBD48((uint64_t)v17);
      }
      else
      {
        sub_1ACE75058();
        uint64_t v25 = v24;
        sub_1ACAEBD48((uint64_t)v15);
        sub_1ACAEBD48((uint64_t)v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v50 = sub_1ACA418B0(0, v50[2] + 1, 1, v50);
        }
        uint64_t v27 = v50[2];
        uint64_t v26 = v50[3];
        if (v27 >= v26 >> 1) {
          unint64_t v50 = sub_1ACA418B0((void *)(v26 > 1), v27 + 1, 1, v50);
        }
        unint64_t v28 = v50;
        v50[2] = v27 + 1;
        char v29 = (double *)&v28[2 * v27];
        *((void *)v29 + 4) = v22;
        v29[5] = floor(v25 * 1000.0);
      }
      v20 += v21;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    dislikedInterests._uint64_t rawValue = rawValue;
    uint64_t v6 = v46;
    id v30 = rawValue[2];
    if (v30) {
      goto LABEL_15;
    }
LABEL_29:
    unint64_t v41 = (void *)swift_bridgeObjectRelease();
    uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  unint64_t v50 = (void *)MEMORY[0x1E4FBC860];
  id v30 = *((void *)dislikedInterests._rawValue + 2);
  if (!v30) {
    goto LABEL_29;
  }
LABEL_15:
  uint64_t v31 = (char *)dislikedInterests._rawValue
      + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  id v32 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1ACAEBCE4((uint64_t)v31, (uint64_t)v12);
    sub_1ACAEBCE4((uint64_t)v12, (uint64_t)v9);
    id v34 = *v9;
    if (*v9 == 1000000000000 || v34 == 0)
    {
      sub_1ACAEBD48((uint64_t)v9);
      sub_1ACAEBD48((uint64_t)v12);
    }
    else
    {
      sub_1ACE75058();
      double v37 = v36;
      sub_1ACAEBD48((uint64_t)v9);
      sub_1ACAEBD48((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_1ACA418B0(0, v33[2] + 1, 1, v33);
      }
      unint64_t v39 = v33[2];
      double v38 = v33[3];
      if (v39 >= v38 >> 1) {
        uint64_t v33 = sub_1ACA418B0((void *)(v38 > 1), v39 + 1, 1, v33);
      }
      void v33[2] = v39 + 1;
      unint64_t v40 = (double *)&v33[2 * v39];
      *((void *)v40 + 4) = v34;
      v40[5] = floor(v37 * 1000.0);
    }
    v31 += v32;
    --v30;
  }
  while (v30);
  unint64_t v41 = (void *)swift_bridgeObjectRelease_n();
LABEL_30:
  uint64_t v43 = v47;
  *unint64_t v47 = v50;
  v43[1] = v33;
  result.disliked._uint64_t rawValue = v42;
  result.liked._uint64_t rawValue = v41;
  return result;
}

void RecommendationsMetadata.Analytics.init(from:)(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId];
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_clientId + 8];
  char v6 = a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userAllowsPersonalization];
  char v7 = a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userIsManagedAccount];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId];
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userId + 8];
  char v10 = a1[OBJC_IVAR____TtC18PodcastsFoundation23AnalyticsUserIdentifier_userUnder13YearsOld];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v8;
  *(unsigned char *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 33) = v7;
  *(unsigned char *)(a2 + 34) = v10;
}

uint64_t RecommendationsMetadata.Analytics.clientID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendationsMetadata.Analytics.userID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendationsMetadata.Analytics.userAllowsPersonalization.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t RecommendationsMetadata.Analytics.userIsManagedAccount.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t RecommendationsMetadata.Analytics.userIsUnder13.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

void __swiftcall RecommendationsMetadata.Analytics.init(clientID:userID:userAllowsPersonalization:userIsManagedAccount:userIsUnder13:)(PodcastsFoundation::RecommendationsMetadata::Analytics *__return_ptr retstr, Swift::String_optional clientID, Swift::String_optional userID, Swift::Bool userAllowsPersonalization, Swift::Bool userIsManagedAccount, Swift::Bool userIsUnder13)
{
  retstr->clientID = clientID;
  retstr->userID = userID;
  retstr->userAllowsPersonalization = userAllowsPersonalization;
  retstr->userIsManagedAccount = userIsManagedAccount;
  retstr->userIsUnder13 = userIsUnder13;
}

uint64_t RecommendationsMetadata.Categories.Metadata.adamID.getter()
{
  return *(void *)v0;
}

double RecommendationsMetadata.Categories.Metadata.timestamp.getter()
{
  return *(double *)(v0 + 8);
}

BOOL static RecommendationsMetadata.Categories.Metadata.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BOOL sub_1ACAE70B0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t RecommendationsMetadata.Categories.liked.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.Categories.disliked.getter()
{
  return swift_bridgeObjectRetain();
}

PodcastsFoundation::RecommendationsMetadata::Categories __swiftcall RecommendationsMetadata.Categories.init(liked:disliked:)(Swift::OpaquePointer liked, Swift::OpaquePointer disliked)
{
  v2->_uint64_t rawValue = liked._rawValue;
  v2[1]._uint64_t rawValue = disliked._rawValue;
  result.disliked = disliked;
  result.liked = liked;
  return result;
}

uint64_t RecommendationsMetadata.Categories.Metadata.init(from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  if (*a1) {
    BOOL v5 = v4 == 1000000000000;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    uint64_t result = sub_1ACAEBD48((uint64_t)a1);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 1;
  }
  else
  {
    type metadata accessor for InterestModel();
    sub_1ACE75058();
    double v7 = floor(v6 * 1000.0);
    uint64_t result = sub_1ACAEBD48((uint64_t)a1);
    *(void *)a2 = v4;
    *(double *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = 0;
  }
  return result;
}

BOOL static RecommendationsMetadata.Categories.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (!sub_1ACA878CC(*a1, *a2)) {
    return 0;
  }
  return sub_1ACA878CC(v2, v3);
}

uint64_t sub_1ACAE75E4()
{
  if (*v0) {
    return 0x64656B696C736964;
  }
  else {
    return 0x64656B696CLL;
  }
}

uint64_t sub_1ACAE761C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAEDFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAE7644(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC0DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE7680(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC0DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1ACAE76BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (!sub_1ACA878CC(*a1, *a2)) {
    return 0;
  }
  return sub_1ACA878CC(v2, v3);
}

uint64_t RecommendationsMetadata.Channels.Metadata.adamID.getter()
{
  return *(void *)v0;
}

uint64_t static RecommendationsMetadata.Channels.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1ACAE7A48(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1ACA878CC);
}

uint64_t sub_1ACAE7738()
{
  uint64_t v1 = 0x64656B696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656B696C736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6269726373627573;
  }
}

uint64_t sub_1ACAE7794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAEE0C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAE77BC(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC184();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE77F8(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC184();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACAE7834(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACAE7BEC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1ACA878CC);
}

uint64_t RecommendationsMetadata.Episodes.Metadata.adamID.getter()
{
  return *(void *)v0;
}

double RecommendationsMetadata.Episodes.Metadata.timestamp.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t RecommendationsMetadata.Episodes.Metadata.isComplete.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RecommendationsMetadata.Episodes.Metadata.duration.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t RecommendationsMetadata.Episodes.Metadata.position.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t RecommendationsMetadata.Episodes.recentlyPlayed.getter()
{
  return swift_bridgeObjectRetain();
}

PodcastsFoundation::RecommendationsMetadata::Episodes __swiftcall RecommendationsMetadata.Episodes.init(recentlyPlayed:)(PodcastsFoundation::RecommendationsMetadata::Episodes recentlyPlayed)
{
  v1->recentlyPlayed._uint64_t rawValue = recentlyPlayed.recentlyPlayed._rawValue;
  return recentlyPlayed;
}

uint64_t static RecommendationsMetadata.Episodes.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1ACA878D0(*a1, *a2);
}

uint64_t sub_1ACAE78A0()
{
  return 0x796C746E65636572;
}

uint64_t sub_1ACAE78C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x796C746E65636572 && a2 == 0xEE00646579616C50)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACAE7980(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC22C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE79BC(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC22C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACAE79F8(uint64_t *a1, uint64_t *a2)
{
  return sub_1ACA878D0(*a1, *a2);
}

uint64_t RecommendationsMetadata.Shows.Metadata.adamID.getter()
{
  return *(void *)v0;
}

uint64_t RecommendationsMetadata.Shows.followed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.Shows.unfollowed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.Shows.disliked.getter()
{
  return swift_bridgeObjectRetain();
}

PodcastsFoundation::RecommendationsMetadata::Shows __swiftcall RecommendationsMetadata.Shows.init(followed:unfollowed:disliked:)(Swift::OpaquePointer followed, Swift::OpaquePointer unfollowed, Swift::OpaquePointer disliked)
{
  v3->_uint64_t rawValue = followed._rawValue;
  v3[1]._uint64_t rawValue = unfollowed._rawValue;
  v3[2]._uint64_t rawValue = disliked._rawValue;
  result.disliked = disliked;
  result.unfollowed = unfollowed;
  result.followed = followed;
  return result;
}

uint64_t static RecommendationsMetadata.Shows.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1ACAE7A48(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1ACA878CC);
}

uint64_t sub_1ACAE7A48(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if ((a3(*a1, *a2) & 1) == 0 || (a3(v3, v5) & 1) == 0) {
    return 0;
  }
  return a3(v4, v6);
}

uint64_t sub_1ACAE7AEC()
{
  uint64_t v1 = 0x776F6C6C6F666E75;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656B696C736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465776F6C6C6F66;
  }
}

uint64_t sub_1ACAE7B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAEE220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAE7B74(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC2D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE7BB0(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC2D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACAE7BEC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  if ((a5(*a1, *a2) & 1) == 0 || (a5(v5, v7) & 1) == 0) {
    return 0;
  }
  return a5(v6, v8);
}

uint64_t RecommendationsMetadata.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 33);
  char v5 = *(unsigned char *)(v1 + 34);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 33) = v4;
  *(unsigned char *)(a1 + 34) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.categories.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *a1 = *(void *)(v1 + 40);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.channels.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  uint64_t v4 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.episodes.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t RecommendationsMetadata.shows.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall RecommendationsMetadata.init(analytics:categories:channels:episodes:shows:)(PodcastsFoundation::RecommendationsMetadata *__return_ptr retstr, PodcastsFoundation::RecommendationsMetadata::Analytics *analytics, PodcastsFoundation::RecommendationsMetadata::Categories categories, PodcastsFoundation::RecommendationsMetadata::Channels channels, PodcastsFoundation::RecommendationsMetadata::Episodes episodes, PodcastsFoundation::RecommendationsMetadata::Shows shows)
{
  Swift::Bool userAllowsPersonalization = analytics->userAllowsPersonalization;
  Swift::Bool userIsManagedAccount = analytics->userIsManagedAccount;
  Swift::Bool userIsUnder13 = analytics->userIsUnder13;
  uint64_t v9 = (void *)*((void *)categories.disliked._rawValue + 2);
  char v10 = *(void **)channels.subscribed._rawValue;
  id v11 = (void *)*((void *)channels.liked._rawValue + 2);
  Swift::String_optional userID = analytics->userID;
  retstr->analytics.clientID = analytics->clientID;
  retstr->analytics.Swift::String_optional userID = userID;
  retstr->analytics.Swift::Bool userAllowsPersonalization = userAllowsPersonalization;
  retstr->analytics.Swift::Bool userIsManagedAccount = userIsManagedAccount;
  retstr->analytics.Swift::Bool userIsUnder13 = userIsUnder13;
  retstr->categories = *(PodcastsFoundation::RecommendationsMetadata::Categories *)categories.liked._rawValue;
  *(_OWORD *)&retstr->channels.subscribed._uint64_t rawValue = *(_OWORD *)categories.disliked._rawValue;
  retstr->channels.disliked._uint64_t rawValue = v9;
  retstr->episodes.recentlyPlayed._uint64_t rawValue = v10;
  *(_OWORD *)&retstr->shows.followed._uint64_t rawValue = *(_OWORD *)channels.liked._rawValue;
  retstr->shows.disliked._uint64_t rawValue = v11;
}

unint64_t sub_1ACAE7E2C(char a1)
{
  unint64_t result = 0x6449746E65696C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x644972657375;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E55734972657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACAE7EF0(char a1)
{
  unint64_t result = 0x6449746E65696C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x644972657375;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E55734972657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAE7FB4()
{
  uint64_t result = 0x636974796C616E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x69726F6765746163;
      break;
    case 2:
      uint64_t result = 0x736C656E6E616863;
      break;
    case 3:
      uint64_t result = 0x7365646F73697065;
      break;
    case 4:
      uint64_t result = 0x73776F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAE8064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAEE384(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACAE808C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1ACAE8098(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC3E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE80D4(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC3E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACAE8114(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF53E4(*a1, *a2);
}

uint64_t sub_1ACAE8120()
{
  return sub_1ACAE5894();
}

uint64_t sub_1ACAE8128()
{
  return sub_1ACBD51E4();
}

uint64_t sub_1ACAE8130()
{
  return sub_1ACD23454();
}

uint64_t sub_1ACAE8138@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAEDF90();
  *a1 = result;
  return result;
}

unint64_t sub_1ACAE8170@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1ACAE7E2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1ACAE819C()
{
  return sub_1ACAE7EF0(*v0);
}

uint64_t sub_1ACAE81A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAEDF90();
  *a1 = result;
  return result;
}

uint64_t sub_1ACAE81D4(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEBF38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE8210(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEBF38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationsMetadata.Analytics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AF0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v15 = *(void *)(v1 + 24);
  uint64_t v16 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 32);
  void v14[2] = *(unsigned __int8 *)(v1 + 33);
  v14[3] = v8;
  v14[1] = *(unsigned __int8 *)(v1 + 34);
  uint64_t v9 = a1[3];
  char v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1ACAEBF38();
  sub_1ACE77C78();
  char v21 = 0;
  sub_1ACE776E8();
  if (!v2)
  {
    char v20 = 1;
    sub_1ACE776E8();
    char v19 = 2;
    sub_1ACE77758();
    char v18 = 3;
    sub_1ACE77758();
    char v17 = 4;
    sub_1ACE77758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t RecommendationsMetadata.Analytics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEBF38();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_1ACE775F8();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1ACE775F8();
  uint64_t v14 = v13;
  uint64_t v21 = v12;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v22 = v14;
  int v20 = sub_1ACE77668();
  char v25 = 3;
  int v19 = sub_1ACE77668();
  char v24 = 4;
  LOBYTE(v14) = sub_1ACE77668();
  v20 &= 1u;
  uint64_t v16 = v19 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v14 & 1;
  uint64_t v18 = v22;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 33) = v16;
  *(unsigned char *)(a2 + 34) = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAE874C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RecommendationsMetadata.Analytics.init(from:)(a1, a2);
}

uint64_t sub_1ACAE8764(void *a1)
{
  return RecommendationsMetadata.Analytics.encode(to:)(a1);
}

uint64_t sub_1ACAE877C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF57A4(*a1, *a2);
}

uint64_t sub_1ACAE8794@<X0>(char *a1@<X8>)
{
  return sub_1ACAE95E8(a1);
}

void sub_1ACAE87A0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496D616461;
  if (*v1) {
    uint64_t v2 = 0x6D617473656D6974;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000070;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACAE87E0()
{
  if (*v0) {
    return 0x6D617473656D6974;
  }
  else {
    return 0x64496D616461;
  }
}

uint64_t sub_1ACAE881C@<X0>(char *a1@<X8>)
{
  return sub_1ACAE9650(a1);
}

uint64_t sub_1ACAE8828(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEBF8C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE8864(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEBF8C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationsMetadata.Categories.Metadata.encode(to:)(void *a1)
{
  return sub_1ACAE9764(a1, &qword_1E99F1CE8, (uint64_t)sub_1ACAEBF8C);
}

uint64_t RecommendationsMetadata.Categories.Metadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACAE992C(a1, &qword_1E99F1CF8, (void (*)(void))sub_1ACAEBF8C, a2);
}

uint64_t sub_1ACAE8918@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Categories.Metadata.init(from:)(a1, a2);
}

uint64_t sub_1ACAE8930(void *a1)
{
  return RecommendationsMetadata.Categories.Metadata.encode(to:)(a1);
}

uint64_t sub_1ACAE8948@<X0>(char *a1@<X8>)
{
  return sub_1ACAE95E8(a1);
}

uint64_t sub_1ACAE8954@<X0>(char *a1@<X8>)
{
  return sub_1ACAE9650(a1);
}

uint64_t sub_1ACAE8960(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEBFE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE899C(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEBFE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationsMetadata.Channels.Metadata.encode(to:)(void *a1)
{
  return sub_1ACAE9764(a1, &qword_1E99F1D00, (uint64_t)sub_1ACAEBFE0);
}

uint64_t RecommendationsMetadata.Channels.Metadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACAE992C(a1, &qword_1E99F1D10, (void (*)(void))sub_1ACAEBFE0, a2);
}

uint64_t sub_1ACAE8A50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Channels.Metadata.init(from:)(a1, a2);
}

uint64_t sub_1ACAE8A68(void *a1)
{
  return RecommendationsMetadata.Channels.Metadata.encode(to:)(a1);
}

uint64_t sub_1ACAE8A80(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF55D8(*a1, *a2);
}

uint64_t sub_1ACAE8A8C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE8B80()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAE8C5C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE8D4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAEDF90();
  *a1 = result;
  return result;
}

void sub_1ACAE8D84(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x64496D616461;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000070;
      uint64_t v3 = 0x6D617473656D6974;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C706D6F437369;
      a1[1] = 0xEA00000000006574;
      return;
    case 3:
      unsigned int v4 = 1634891108;
      goto LABEL_7;
    case 4:
      unsigned int v4 = 1769172848;
LABEL_7:
      *a1 = v4 | 0x6E6F697400000000;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1ACAE8E38()
{
  uint64_t result = 0x64496D616461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 2:
      uint64_t result = 0x656C706D6F437369;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      uint64_t result = 0x6E6F697469736F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACAE8EE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACAEDF90();
  *a1 = result;
  return result;
}

uint64_t sub_1ACAE8F18(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC034();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE8F54(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC034();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationsMetadata.Episodes.Metadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v14 = *((unsigned __int8 *)v1 + 16);
  uint64_t v13 = v1[3];
  int v12 = *((unsigned __int8 *)v1 + 32);
  uint64_t v11 = v1[5];
  void v10[3] = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC034();
  sub_1ACE77C78();
  uint64_t v20 = v8;
  char v19 = 0;
  sub_1ACA80994();
  sub_1ACE77788();
  if (!v2)
  {
    char v18 = 1;
    sub_1ACE77768();
    char v17 = 2;
    sub_1ACE776F8();
    char v16 = 3;
    sub_1ACE77708();
    char v15 = 4;
    sub_1ACE77708();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RecommendationsMetadata.Episodes.Metadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC034();
  sub_1ACE77C48();
  if (!v2)
  {
    char v26 = 0;
    sub_1ACA80CD4();
    sub_1ACE77698();
    uint64_t v9 = v27;
    char v25 = 1;
    sub_1ACE77678();
    uint64_t v11 = v10;
    char v24 = 2;
    char v12 = sub_1ACE77608();
    char v23 = 3;
    uint64_t v13 = sub_1ACE77618();
    HIDWORD(v20) = v14;
    uint64_t v21 = v13;
    char v22 = 4;
    uint64_t v16 = sub_1ACE77618();
    char v17 = v8;
    char v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 32) = BYTE4(v20) & 1;
    *(void *)(a2 + 40) = v16;
    *(unsigned char *)(a2 + 48) = v19 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACAE9438@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RecommendationsMetadata.Episodes.Metadata.init(from:)(a1, a2);
}

uint64_t sub_1ACAE9450(void *a1)
{
  return RecommendationsMetadata.Episodes.Metadata.encode(to:)(a1);
}

uint64_t sub_1ACAE9468()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE94EC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAE955C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAE95DC@<X0>(char *a1@<X8>)
{
  return sub_1ACAE95E8(a1);
}

uint64_t sub_1ACAE95E8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1ACAE9644@<X0>(char *a1@<X8>)
{
  return sub_1ACAE9650(a1);
}

uint64_t sub_1ACAE9650@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1ACAE96B0(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC088();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAE96EC(uint64_t a1)
{
  unint64_t v2 = sub_1ACAEC088();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendationsMetadata.Shows.Metadata.encode(to:)(void *a1)
{
  return sub_1ACAE9764(a1, &qword_1EB771AD0, (uint64_t)sub_1ACAEC088);
}

uint64_t sub_1ACAE9764(void *a1, uint64_t *a2, uint64_t a3)
{
  v12[0] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  ((void (*)(void))v12[0])();
  sub_1ACE77C78();
  uint64_t v15 = v9;
  char v14 = 0;
  sub_1ACA80994();
  uint64_t v10 = v12[1];
  sub_1ACE77788();
  if (!v10)
  {
    char v13 = 1;
    sub_1ACE77768();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RecommendationsMetadata.Shows.Metadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACAE992C(a1, &qword_1E99F1D30, (void (*)(void))sub_1ACAEC088, a2);
}

uint64_t sub_1ACAE992C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  char v17 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v16 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1ACE77C48();
  if (!v4)
  {
    uint64_t v11 = v16;
    uint64_t v10 = v17;
    char v19 = 0;
    sub_1ACA80CD4();
    sub_1ACE77698();
    uint64_t v12 = v20;
    char v18 = 1;
    sub_1ACE77678();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
    *uint64_t v10 = v12;
    v10[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACAE9AF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Shows.Metadata.init(from:)(a1, a2);
}

uint64_t sub_1ACAE9B10(void *a1)
{
  return RecommendationsMetadata.Shows.Metadata.encode(to:)(a1);
}

uint64_t RecommendationsMetadata.Categories.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC0DC();
  sub_1ACE77C78();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771890);
  sub_1ACAEC328(&qword_1EB771898, &qword_1EB771890, (void (*)(void))sub_1ACA509C8);
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RecommendationsMetadata.Categories.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC0DC();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771890);
  char v14 = 0;
  sub_1ACAEC328(&qword_1E99F1D40, &qword_1EB771890, (void (*)(void))sub_1ACAEC130);
  sub_1ACE77698();
  uint64_t v9 = v15;
  char v14 = 1;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v15;
  char v11 = v13;
  *uint64_t v13 = v9;
  v11[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAE9F54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Categories.init(from:)(a1, a2);
}

uint64_t sub_1ACAE9F6C(void *a1)
{
  return RecommendationsMetadata.Categories.encode(to:)(a1);
}

uint64_t RecommendationsMetadata.Channels.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC184();
  sub_1ACE77C78();
  uint64_t v16 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718B0);
  sub_1ACAEC328(&qword_1EB7718B8, &qword_1EB7718B0, (void (*)(void))sub_1ACA508A8);
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v16 = v14;
    char v15 = 1;
    sub_1ACE77788();
    uint64_t v16 = v10;
    char v15 = 2;
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RecommendationsMetadata.Channels.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC184();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v16 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718B0);
  char v17 = 0;
  sub_1ACAEC328(&qword_1E99F1D58, &qword_1EB7718B0, (void (*)(void))sub_1ACAEC1D8);
  sub_1ACE77698();
  uint64_t v9 = v18;
  char v17 = 1;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  char v17 = 2;
  uint64_t v15 = v18;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v15;
  char v11 = v16;
  *uint64_t v16 = v9;
  v11[1] = v12;
  v11[2] = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAEA490@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Channels.init(from:)(a1, a2);
}

uint64_t sub_1ACAEA4A8(void *a1)
{
  return RecommendationsMetadata.Channels.encode(to:)(a1);
}

uint64_t RecommendationsMetadata.Episodes.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC22C();
  sub_1ACE77C78();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718C0);
  sub_1ACAEC328(&qword_1EB7718C8, &qword_1EB7718C0, (void (*)(void))sub_1ACA508FC);
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RecommendationsMetadata.Episodes.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC22C();
  sub_1ACE77C48();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718C0);
    sub_1ACAEC328(&qword_1E99F1D70, &qword_1EB7718C0, (void (*)(void))sub_1ACAEC280);
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACAEA7F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Episodes.init(from:)(a1, a2);
}

uint64_t sub_1ACAEA810(void *a1)
{
  return RecommendationsMetadata.Episodes.encode(to:)(a1);
}

uint64_t RecommendationsMetadata.Shows.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AD8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC2D4();
  sub_1ACE77C78();
  uint64_t v16 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718A0);
  sub_1ACAEC328(&qword_1EB7718A8, &qword_1EB7718A0, (void (*)(void))sub_1ACA507FC);
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v16 = v14;
    char v15 = 1;
    sub_1ACE77788();
    uint64_t v16 = v10;
    char v15 = 2;
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RecommendationsMetadata.Shows.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC2D4();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v16 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7718A0);
  char v17 = 0;
  sub_1ACAEC328(&qword_1E99F1D88, &qword_1EB7718A0, (void (*)(void))sub_1ACAEC394);
  sub_1ACE77698();
  uint64_t v9 = v18;
  char v17 = 1;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  char v17 = 2;
  uint64_t v15 = v18;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v15;
  char v11 = v16;
  *uint64_t v16 = v9;
  v11[1] = v12;
  v11[2] = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAEAD34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.Shows.init(from:)(a1, a2);
}

uint64_t sub_1ACAEAD4C(void *a1)
{
  return RecommendationsMetadata.Shows.encode(to:)(a1);
}

uint64_t RecommendationsMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771AC8);
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v27 = *v1;
  uint64_t v6 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  char v7 = *((unsigned char *)v1 + 32);
  int v35 = *((unsigned __int8 *)v1 + 33);
  char v8 = *((unsigned char *)v1 + 34);
  long long v25 = *(long long *)((char *)v1 + 40);
  long long v9 = *(long long *)((char *)v1 + 56);
  uint64_t v10 = *((void *)v1 + 9);
  uint64_t v23 = *((void *)v1 + 10);
  uint64_t v24 = v10;
  long long v20 = *(long long *)((char *)v1 + 88);
  long long v21 = v9;
  uint64_t v22 = *((void *)v1 + 13);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v13 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1ACAEC3E8();
  sub_1ACE77C78();
  long long v29 = v27;
  uint64_t v30 = v6;
  uint64_t v31 = v5;
  char v32 = v7;
  char v33 = v35;
  char v34 = v8;
  char v36 = 0;
  sub_1ACA50A1C();
  uint64_t v14 = v28;
  sub_1ACE77788();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v13, v3);
  }
  uint64_t v16 = v23;
  uint64_t v17 = v24;
  uint64_t v18 = v22;
  uint64_t v19 = v26;
  long long v29 = v25;
  char v36 = 1;
  sub_1ACAEC43C();
  sub_1ACE77788();
  long long v29 = v21;
  uint64_t v30 = v17;
  char v36 = 2;
  sub_1ACAEC490();
  sub_1ACE77788();
  *(void *)&long long v29 = v16;
  char v36 = 3;
  sub_1ACAEC4E4();
  sub_1ACE77788();
  long long v29 = v20;
  uint64_t v30 = v18;
  char v36 = 4;
  sub_1ACAEC538();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v3);
}

uint64_t RecommendationsMetadata.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1D98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAEC3E8();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v56 = 0;
  sub_1ACAEC58C();
  sub_1ACE77698();
  uint64_t v9 = v49;
  uint64_t v44 = v48;
  uint64_t v10 = v51;
  uint64_t v42 = a2;
  uint64_t v43 = v50;
  int v55 = v52;
  int v41 = v53;
  int v11 = v54;
  char v56 = 1;
  sub_1ACAEC5E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  int v34 = v11;
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  uint64_t v12 = v48;
  uint64_t v13 = v49;
  char v56 = 2;
  sub_1ACAEC634();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  sub_1ACE77698();
  uint64_t v39 = v13;
  uint64_t v40 = v12;
  uint64_t v15 = v48;
  uint64_t v14 = v49;
  uint64_t v16 = v50;
  char v56 = 3;
  sub_1ACAEC688();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v46 = v16;
  uint64_t v47 = v14;
  uint64_t v45 = v15;
  uint64_t v18 = v48;
  char v56 = 4;
  sub_1ACAEC6DC();
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v35 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v36 = v48;
  uint64_t v32 = v50;
  uint64_t v33 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v40;
  swift_bridgeObjectRetain();
  uint64_t v20 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v47;
  swift_bridgeObjectRetain();
  uint64_t v22 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = v37;
  swift_bridgeObjectRelease();
  uint64_t v24 = v38;
  swift_bridgeObjectRelease();
  uint64_t v25 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v45;
  swift_bridgeObjectRelease();
  long long v27 = v42;
  *uint64_t v42 = v44;
  v27[1] = v24;
  v27[2] = v43;
  v27[3] = v23;
  *((unsigned char *)v27 + 32) = v55;
  *((unsigned char *)v27 + 33) = v41;
  *((unsigned char *)v27 + 34) = v34;
  v27[5] = v19;
  v27[6] = v25;
  v27[7] = v26;
  v27[8] = v21;
  uint64_t v28 = v35;
  uint64_t v29 = v36;
  v27[9] = v22;
  v27[10] = v28;
  uint64_t v30 = v32;
  uint64_t v31 = v33;
  v27[11] = v29;
  v27[12] = v31;
  v27[13] = v30;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAEB670@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecommendationsMetadata.init(from:)(a1, a2);
}

uint64_t sub_1ACAEB688(void *a1)
{
  return RecommendationsMetadata.encode(to:)(a1);
}

BOOL sub_1ACAEB6A0(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t sub_1ACAEB6AC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_1ACAEB6B8(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t (*sub_1ACAEB718(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1ACAEB904(v6, a2, a3);
  return sub_1ACAEB780;
}

uint64_t (*sub_1ACAEB784(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1ACAEB98C(v6, a2, a3);
  return sub_1ACAEB780;
}

uint64_t (*sub_1ACAEB7EC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1ACAEBA0C(v6, a2, a3);
  return sub_1ACAEB780;
}

uint64_t (*sub_1ACAEB854(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1ACAEBA94(v6, a2, a3);
  return sub_1ACAEB780;
}

void sub_1ACAEB8BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1ACAEB904(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1AD119490](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1ACAEB984;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACAEB984()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACAEB98C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1AD119490](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s18PodcastsFoundation33IntermediateEyebrowBuilderEpisodeVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1ACAEBA0C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1AD119490](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1ACAEBA8C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACAEBA8C()
{
  return swift_release();
}

void (*sub_1ACAEBA94(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1AD119490](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for IntermediateEyebrowBuilderEpisode;
  }
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation23RecommendationsMetadataV8EpisodesV0D0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    int v4 = *(unsigned __int8 *)(a1 + 16);
    double v5 = *(double *)(a1 + 24);
    char v6 = *(unsigned char *)(a1 + 32);
    double v7 = *(double *)(a1 + 40);
    char v8 = *(unsigned char *)(a1 + 48);
    int v9 = *(unsigned __int8 *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 32);
    char v11 = *(unsigned char *)(a2 + 48);
    if (v4 == 2)
    {
      if (v9 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      BOOL v12 = (v4 & 1) == 0;
      if (v9 == 2 || ((v12 ^ v9) & 1) == 0) {
        return result;
      }
    }
    if (v6)
    {
      if (!*(unsigned char *)(a2 + 32)) {
        return 0;
      }
    }
    else
    {
      if (v5 != *(double *)(a2 + 24)) {
        char v10 = 1;
      }
      if (v10) {
        return 0;
      }
    }
    if (v8)
    {
      if ((*(unsigned char *)(a2 + 48) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v7 != *(double *)(a2 + 40)) {
        char v11 = 1;
      }
      if (v11) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t _s18PodcastsFoundation23RecommendationsMetadataV9AnalyticsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 33);
  int v8 = *(unsigned __int8 *)(a1 + 34);
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  int v12 = *(unsigned __int8 *)(a2 + 32);
  int v13 = *(unsigned __int8 *)(a2 + 33);
  int v14 = *(unsigned __int8 *)(a2 + 34);
  if (!v3)
  {
    if (v9) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v9) {
    return 0;
  }
  if (*(void *)a1 == *(void *)a2 && v3 == v9 || (v15 = sub_1ACE77848(), uint64_t result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (v5)
    {
      if (v11)
      {
        if (v4 != v10 || v5 != v11)
        {
          char v17 = sub_1ACE77848();
          uint64_t result = 0;
          if (v17 & 1) == 0 || ((v6 ^ v12)) {
            return result;
          }
LABEL_19:
          if (((v7 ^ v13) & 1) == 0) {
            return v8 ^ v14 ^ 1u;
          }
          return result;
        }
LABEL_18:
        uint64_t result = 0;
        if (v6 != v12) {
          return result;
        }
        goto LABEL_19;
      }
    }
    else if (!v11)
    {
      goto LABEL_18;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1ACAEBCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InterestModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAEBD48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InterestModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL _s18PodcastsFoundation23RecommendationsMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 33);
  char v4 = *(unsigned char *)(a1 + 34);
  uint64_t v28 = *(void *)(a1 + 40);
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v24 = *(void *)(a1 + 72);
  uint64_t v23 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a1 + 96);
  char v6 = *(unsigned char *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 33);
  char v8 = *(unsigned char *)(a2 + 34);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  long long v18 = *(_OWORD *)(a1 + 16);
  v33[0] = *(_OWORD *)a1;
  v33[1] = v18;
  char v34 = v2;
  char v35 = v3;
  char v36 = v4;
  long long v19 = *(_OWORD *)(a2 + 16);
  v29[0] = *(_OWORD *)a2;
  v29[1] = v19;
  char v30 = v6;
  char v31 = v7;
  char v32 = v8;
  return (_s18PodcastsFoundation23RecommendationsMetadataV9AnalyticsV2eeoiySbAE_AEtFZ_0((uint64_t)v33, (uint64_t)v29) & 1) != 0
      && sub_1ACA878CC(v28, v10)
      && sub_1ACA878CC(v27, v9)
      && sub_1ACA878CC(v26, v11)
      && sub_1ACA878CC(v25, v12)
      && sub_1ACA878CC(v24, v14)
      && (sub_1ACA878D0(v23, v13) & 1) != 0
      && sub_1ACA878CC(v22, v16)
      && sub_1ACA878CC(v21, v15)
      && sub_1ACA878CC(v5, v17);
}

unint64_t sub_1ACAEBF38()
{
  unint64_t result = qword_1EB771420;
  if (!qword_1EB771420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771420);
  }
  return result;
}

unint64_t sub_1ACAEBF8C()
{
  unint64_t result = qword_1E99F1CF0;
  if (!qword_1E99F1CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1CF0);
  }
  return result;
}

unint64_t sub_1ACAEBFE0()
{
  unint64_t result = qword_1E99F1D08;
  if (!qword_1E99F1D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1D08);
  }
  return result;
}

unint64_t sub_1ACAEC034()
{
  unint64_t result = qword_1E99F1D20;
  if (!qword_1E99F1D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1D20);
  }
  return result;
}

unint64_t sub_1ACAEC088()
{
  unint64_t result = qword_1EB771390;
  if (!qword_1EB771390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771390);
  }
  return result;
}

unint64_t sub_1ACAEC0DC()
{
  unint64_t result = qword_1EB771360;
  if (!qword_1EB771360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771360);
  }
  return result;
}

unint64_t sub_1ACAEC130()
{
  unint64_t result = qword_1E99F1D48;
  if (!qword_1E99F1D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1D48);
  }
  return result;
}

unint64_t sub_1ACAEC184()
{
  unint64_t result = qword_1EB7713D8;
  if (!qword_1EB7713D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713D8);
  }
  return result;
}

unint64_t sub_1ACAEC1D8()
{
  unint64_t result = qword_1E99F1D60;
  if (!qword_1E99F1D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1D60);
  }
  return result;
}

unint64_t sub_1ACAEC22C()
{
  unint64_t result = qword_1EB771400;
  if (!qword_1EB771400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771400);
  }
  return result;
}

unint64_t sub_1ACAEC280()
{
  unint64_t result = qword_1E99F1D78;
  if (!qword_1E99F1D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1D78);
  }
  return result;
}

unint64_t sub_1ACAEC2D4()
{
  unint64_t result = qword_1EB7713B0;
  if (!qword_1EB7713B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713B0);
  }
  return result;
}

uint64_t sub_1ACAEC328(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACAEC394()
{
  unint64_t result = qword_1E99F1D90;
  if (!qword_1E99F1D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1D90);
  }
  return result;
}

unint64_t sub_1ACAEC3E8()
{
  unint64_t result = qword_1EB771380;
  if (!qword_1EB771380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771380);
  }
  return result;
}

unint64_t sub_1ACAEC43C()
{
  unint64_t result = qword_1EB771378;
  if (!qword_1EB771378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771378);
  }
  return result;
}

unint64_t sub_1ACAEC490()
{
  unint64_t result = qword_1EB7713F0;
  if (!qword_1EB7713F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713F0);
  }
  return result;
}

unint64_t sub_1ACAEC4E4()
{
  unint64_t result = qword_1EB771418;
  if (!qword_1EB771418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771418);
  }
  return result;
}

unint64_t sub_1ACAEC538()
{
  unint64_t result = qword_1EB7713C8;
  if (!qword_1EB7713C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713C8);
  }
  return result;
}

unint64_t sub_1ACAEC58C()
{
  unint64_t result = qword_1E99F1DA0;
  if (!qword_1E99F1DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DA0);
  }
  return result;
}

unint64_t sub_1ACAEC5E0()
{
  unint64_t result = qword_1E99F1DA8;
  if (!qword_1E99F1DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DA8);
  }
  return result;
}

unint64_t sub_1ACAEC634()
{
  unint64_t result = qword_1E99F1DB0;
  if (!qword_1E99F1DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DB0);
  }
  return result;
}

unint64_t sub_1ACAEC688()
{
  unint64_t result = qword_1E99F1DB8;
  if (!qword_1E99F1DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DB8);
  }
  return result;
}

unint64_t sub_1ACAEC6DC()
{
  unint64_t result = qword_1E99F1DC0;
  if (!qword_1E99F1DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DC0);
  }
  return result;
}

uint64_t destroy for RecommendationsMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RecommendationsMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecommendationsMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RecommendationsMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendationsMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendationsMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata()
{
  return &type metadata for RecommendationsMetadata;
}

uint64_t destroy for RecommendationsMetadata.Analytics()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RecommendationsMetadata.Analytics(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RecommendationsMetadata.Analytics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t assignWithTake for RecommendationsMetadata.Analytics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendationsMetadata.Analytics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 35)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendationsMetadata.Analytics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 35) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Analytics()
{
  return &type metadata for RecommendationsMetadata.Analytics;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Categories()
{
  return &type metadata for RecommendationsMetadata.Categories;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Categories.Metadata()
{
  return &type metadata for RecommendationsMetadata.Categories.Metadata;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Channels()
{
  return &type metadata for RecommendationsMetadata.Channels;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Channels.Metadata()
{
  return &type metadata for RecommendationsMetadata.Channels.Metadata;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Episodes()
{
  return &type metadata for RecommendationsMetadata.Episodes;
}

uint64_t getEnumTagSinglePayload for RecommendationsMetadata.Episodes.Metadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendationsMetadata.Episodes.Metadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Episodes.Metadata()
{
  return &type metadata for RecommendationsMetadata.Episodes.Metadata;
}

uint64_t destroy for GroupedContentIDs()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18PodcastsFoundation23RecommendationsMetadataV8ChannelsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GroupedContentIDs(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GroupedContentIDs(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupedContentIDs(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupedContentIDs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Shows()
{
  return &type metadata for RecommendationsMetadata.Shows;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Shows.Metadata()
{
  return &type metadata for RecommendationsMetadata.Shows.Metadata;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Shows.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Shows.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RecommendationsMetadata.Episodes.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACAED1B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Episodes.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Episodes.CodingKeys;
}

unsigned char *_s18PodcastsFoundation23RecommendationsMetadataV5ShowsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAED2BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Channels.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Channels.CodingKeys;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Categories.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Categories.CodingKeys;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Shows.Metadata.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Shows.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Episodes.Metadata.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Episodes.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Channels.Metadata.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Channels.Metadata.CodingKeys;
}

unsigned char *_s18PodcastsFoundation23RecommendationsMetadataV10CategoriesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAED404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Categories.Metadata.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Categories.Metadata.CodingKeys;
}

unsigned char *_s18PodcastsFoundation23RecommendationsMetadataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAED508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationsMetadata.Analytics.CodingKeys()
{
  return &type metadata for RecommendationsMetadata.Analytics.CodingKeys;
}

unint64_t sub_1ACAED544()
{
  unint64_t result = qword_1E99F1DC8;
  if (!qword_1E99F1DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DC8);
  }
  return result;
}

unint64_t sub_1ACAED59C()
{
  unint64_t result = qword_1E99F1DD0;
  if (!qword_1E99F1DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DD0);
  }
  return result;
}

unint64_t sub_1ACAED5F4()
{
  unint64_t result = qword_1E99F1DD8;
  if (!qword_1E99F1DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DD8);
  }
  return result;
}

unint64_t sub_1ACAED64C()
{
  unint64_t result = qword_1E99F1DE0;
  if (!qword_1E99F1DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DE0);
  }
  return result;
}

unint64_t sub_1ACAED6A4()
{
  unint64_t result = qword_1E99F1DE8;
  if (!qword_1E99F1DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DE8);
  }
  return result;
}

unint64_t sub_1ACAED6FC()
{
  unint64_t result = qword_1E99F1DF0;
  if (!qword_1E99F1DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DF0);
  }
  return result;
}

unint64_t sub_1ACAED754()
{
  unint64_t result = qword_1E99F1DF8;
  if (!qword_1E99F1DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1DF8);
  }
  return result;
}

unint64_t sub_1ACAED7AC()
{
  unint64_t result = qword_1E99F1E00;
  if (!qword_1E99F1E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E00);
  }
  return result;
}

unint64_t sub_1ACAED804()
{
  unint64_t result = qword_1E99F1E08;
  if (!qword_1E99F1E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E08);
  }
  return result;
}

unint64_t sub_1ACAED85C()
{
  unint64_t result = qword_1E99F1E10;
  if (!qword_1E99F1E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E10);
  }
  return result;
}

unint64_t sub_1ACAED8B4()
{
  unint64_t result = qword_1EB770B40;
  if (!qword_1EB770B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B40);
  }
  return result;
}

unint64_t sub_1ACAED90C()
{
  unint64_t result = qword_1EB771388;
  if (!qword_1EB771388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771388);
  }
  return result;
}

unint64_t sub_1ACAED964()
{
  unint64_t result = qword_1EB7713C0;
  if (!qword_1EB7713C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713C0);
  }
  return result;
}

unint64_t sub_1ACAED9BC()
{
  unint64_t result = qword_1EB7713B8;
  if (!qword_1EB7713B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713B8);
  }
  return result;
}

unint64_t sub_1ACAEDA14()
{
  unint64_t result = qword_1EB771410;
  if (!qword_1EB771410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771410);
  }
  return result;
}

unint64_t sub_1ACAEDA6C()
{
  unint64_t result = qword_1EB771408;
  if (!qword_1EB771408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771408);
  }
  return result;
}

unint64_t sub_1ACAEDAC4()
{
  unint64_t result = qword_1EB7713E8;
  if (!qword_1EB7713E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713E8);
  }
  return result;
}

unint64_t sub_1ACAEDB1C()
{
  unint64_t result = qword_1EB7713E0;
  if (!qword_1EB7713E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713E0);
  }
  return result;
}

unint64_t sub_1ACAEDB74()
{
  unint64_t result = qword_1EB771370;
  if (!qword_1EB771370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771370);
  }
  return result;
}

unint64_t sub_1ACAEDBCC()
{
  unint64_t result = qword_1EB771368;
  if (!qword_1EB771368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771368);
  }
  return result;
}

unint64_t sub_1ACAEDC24()
{
  unint64_t result = qword_1EB7713A0;
  if (!qword_1EB7713A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7713A0);
  }
  return result;
}

unint64_t sub_1ACAEDC7C()
{
  unint64_t result = qword_1EB771398;
  if (!qword_1EB771398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771398);
  }
  return result;
}

unint64_t sub_1ACAEDCD4()
{
  unint64_t result = qword_1E99F1E18;
  if (!qword_1E99F1E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E18);
  }
  return result;
}

unint64_t sub_1ACAEDD2C()
{
  unint64_t result = qword_1E99F1E20;
  if (!qword_1E99F1E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E20);
  }
  return result;
}

unint64_t sub_1ACAEDD84()
{
  unint64_t result = qword_1E99F1E28;
  if (!qword_1E99F1E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E28);
  }
  return result;
}

unint64_t sub_1ACAEDDDC()
{
  unint64_t result = qword_1E99F1E30;
  if (!qword_1E99F1E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E30);
  }
  return result;
}

unint64_t sub_1ACAEDE34()
{
  unint64_t result = qword_1E99F1E38;
  if (!qword_1E99F1E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1E38);
  }
  return result;
}

unint64_t sub_1ACAEDE8C()
{
  unint64_t result = qword_1E99F1E40[0];
  if (!qword_1E99F1E40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E99F1E40);
  }
  return result;
}

unint64_t sub_1ACAEDEE4()
{
  unint64_t result = qword_1EB771430;
  if (!qword_1EB771430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771430);
  }
  return result;
}

unint64_t sub_1ACAEDF3C()
{
  unint64_t result = qword_1EB771428;
  if (!qword_1EB771428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771428);
  }
  return result;
}

uint64_t sub_1ACAEDF90()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1ACAEDFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656B696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656B696C736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1ACAEE0C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6269726373627573 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656B696CLL && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656B696C736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACAEE220(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465776F6C6C6F66 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F6C6C6F666E75 && a2 == 0xEA00000000006465 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656B696C736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACAEE384(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636974796C616E61 && a2 == 0xE900000000000073;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C656E6E616863 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73776F6873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1ACAEE5EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1ACA91C80;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1ACA6DEC8(v4);
}

uint64_t sub_1ACAEE680(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1ACA91C78;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_1ACA6DEC8(v3);
  return sub_1ACA76F34(v8);
}

uint64_t ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.getter()
{
  uint64_t v0 = sub_1ACA91A90();
  sub_1ACA6DEC8(v0);
  return v0;
}

uint64_t ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1ACA76F34(v5);
}

uint64_t (*ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.modify())()
{
  return j__swift_endAccess;
}

void *ThinClientLibraryEpisodeStateDataSource.__allocating_init(thinClientEpisodeStateRepository:)(uint64_t a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = 0;
  v2[3] = 0;
  v2[4] = a1;
  v2[5] = 0;
  swift_retain();
  ThinClientLibraryEpisodeStateDataSource.startObservingChanges()();
  swift_release();
  return v2;
}

void *ThinClientLibraryEpisodeStateDataSource.init(thinClientEpisodeStateRepository:)(uint64_t a1)
{
  uint64_t v1 = sub_1ACAEF0FC(a1);
  swift_release();
  return v1;
}

Swift::Void __swiftcall ThinClientLibraryEpisodeStateDataSource.startObservingChanges()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F12E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *(void *)(v0[4] + 24);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0FF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E58);
  sub_1ACA51EA4((unint64_t *)&qword_1E99F1088, &qword_1E99F0FF8);
  sub_1ACE75B58();
  swift_release();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = *(void *)(v2 + 80);
  void v8[3] = *(void *)(v2 + 88);
  v8[4] = v7;
  sub_1ACA51EA4(qword_1E99F12F0, &qword_1E99F12E8);
  uint64_t v9 = sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v1[5] = v9;
  swift_release();
}

uint64_t ThinClientLibraryEpisodeStateDataSource.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return ThinClientStateRepository<>.state<A>(for:)(a1, a2, a3 & 1, *(void *)(*(void *)v4 + 80), *(void *)(*(void *)v4 + 88), a4);
}

uint64_t sub_1ACAEEB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  long long v19 = (char *)v31 - v18;
  if (a3)
  {
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1ACE754C8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_1ACE75498();
    os_log_type_t v25 = sub_1ACE76BE8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v35 = v27;
      uint64_t v32 = a1;
      uint64_t v33 = a2;
      char v34 = 1;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1ACE76228();
      uint64_t v32 = sub_1ACA3189C(v28, v29, &v35);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
      _os_log_impl(&dword_1AC9D5000, v24, v25, "Episode ID not supported on thin clients: %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v27, -1, -1);
      MEMORY[0x1AD11B340](v26, -1, -1);
    }
    else
    {
      sub_1ACA91B68(a1, a2, 1);
      sub_1ACA91B68(a1, a2, 1);
    }

    uint64_t v30 = type metadata accessor for EpisodePlayState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a4, 1, 1, v30);
  }
  else
  {
    v31[0] = a4;
    uint64_t v20 = *(void *)(v4 + 16);
    MEMORY[0x1F4188790](v17);
    v31[-2] = a1;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v20 + 40));
    sub_1ACAEF28C((uint64_t *)(v20 + 16), (uint64_t)v19);
    os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 40));
    swift_release();
    sub_1ACA3AAD4((uint64_t)v19, (uint64_t)v16, &qword_1E99F1EC8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
    {
      sub_1ACAEF2A8((uint64_t)v19);
      sub_1ACAEF2A8((uint64_t)v16);
      uint64_t v21 = type metadata accessor for EpisodePlayState();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v31[0], 1, 1, v21);
    }
    else
    {
      sub_1ACAEF308((uint64_t)v16, (uint64_t)v12);
      sub_1ACA3AAD4((uint64_t)v12, v31[0], (uint64_t *)&unk_1EB772D70);
      sub_1ACAEF36C((uint64_t)v12);
      return sub_1ACAEF2A8((uint64_t)v19);
    }
  }
}

uint64_t ThinClientLibraryEpisodeStateDataSource.deinit()
{
  sub_1ACA76F34(*(void *)(v0 + 16));
  swift_release();
  swift_release();
  return v0;
}

uint64_t ThinClientLibraryEpisodeStateDataSource.__deallocating_deinit()
{
  ThinClientLibraryEpisodeStateDataSource.deinit();
  return swift_deallocClassInstance();
}

void sub_1ACAEEFDC()
{
}

uint64_t sub_1ACAEF000(uint64_t a1, uint64_t a2)
{
  return ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.setter(a1, a2);
}

void (*sub_1ACAEF024(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ThinClientLibraryEpisodeStateDataSource.refreshControllerStates.modify();
  return sub_1ACA8E534;
}

uint64_t sub_1ACAEF080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return ThinClientLibraryEpisodeStateDataSource.state(for:)(a1, a2, a3 & 1, a4);
}

uint64_t ThinClientLibraryEpisodeStateDataSource<>.estimatedPlayState(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_1ACAEEB40(a1, a2, a3 & 1, a4);
}

uint64_t sub_1ACAEF0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_1ACAEEB40(a1, a2, a3 & 1, a4);
}

void *sub_1ACAEF0FC(uint64_t a1)
{
  void v1[2] = 0;
  v1[3] = 0;
  v1[4] = a1;
  v1[5] = 0;
  swift_retain();
  ThinClientLibraryEpisodeStateDataSource.startObservingChanges()();
  return v1;
}

uint64_t sub_1ACAEF124()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACAEF15C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAEF19C()
{
  return 16;
}

__n128 sub_1ACAEF1A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACAEF1B4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ThinClientLibraryEpisodeStateDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ThinClientLibraryEpisodeStateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThinClientLibraryEpisodeStateDataSource);
}

uint64_t dispatch thunk of ThinClientLibraryEpisodeStateDataSource.__allocating_init(thinClientEpisodeStateRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1ACAEF254()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAEF28C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACB6D460(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACAEF2A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1EC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACAEF308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAEF36C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ThinClientEpisodeStateModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id PurchaseControllerWrapper.purchaseController.getter()
{
  return *(id *)(v0 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController);
}

id sub_1ACAEF3DC()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PurchaseControllerWrapper()), sel_init);
  qword_1EB7680B8 = (uint64_t)result;
  return result;
}

id static PurchaseControllerWrapper.sharedInstance.getter()
{
  if (qword_1EB7680C8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB7680B8;
  return v0;
}

uint64_t sub_1ACAEF544()
{
  uint64_t v0 = sub_1ACE754C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76C08();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1AC9D5000, v5, v6, "Force fetching latest channel updates", v7, 2u);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1ACAEF708(0);
}

uint64_t sub_1ACAEF708(char a1)
{
  uint64_t ObjectType = swift_getObjectType();
  char v4 = a1 & 1;
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68));
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  *(unsigned char *)(v13 + 24) = v4;
  *(void *)(v13 + 32) = ObjectType;
  aBlock[4] = sub_1ACAF74D0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_19;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v1;
  sub_1ACE75E08();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1ACAF7B08((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1ACAEFA48()
{
  uint64_t v1 = sub_1ACE754C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = &v31[-v7 - 8];
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v31[-v9 - 8];
  uint64_t v11 = (os_unfair_lock_s **)(*(void *)(v0 + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController)
                            + *(void *)((*MEMORY[0x1E4FBC8C8] & **(void **)(v0
                                                                              + OBJC_IVAR___MTPurchaseControllerWrapper_purchaseController))
                                        + 0xA8));
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = *v11 + 4;
  swift_retain();
  os_unfair_lock_lock(v12 + 5);
  sub_1ACA8ADD8(v13, v31);
  os_unfair_lock_unlock(v12 + 5);
  LODWORD(v13) = v31[0];
  swift_release();
  if (v13 == 1)
  {
    uint64_t v30 = v8;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v1, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v15(v10, v14, v1);
    uint64_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76C08();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1AC9D5000, v16, v17, "receivedEntitlementsNotification = true, force fetching latest channel updates", v18, 2u);
      MEMORY[0x1AD11B340](v18, -1, -1);
    }

    long long v19 = *(void (**)(char *, uint64_t))(v2 + 8);
    v19(v10, v1);
    uint64_t v20 = v30;
    v15(v30, v14, v1);
    uint64_t v21 = v20;
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76C08();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1AC9D5000, v22, v23, "Force fetching latest channel updates", v24, 2u);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }

    v19(v21, v1);
    return sub_1ACAEF708(0);
  }
  else
  {
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v1, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v26, v1);
    uint64_t v27 = sub_1ACE75498();
    os_log_type_t v28 = sub_1ACE76C08();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      _os_log_impl(&dword_1AC9D5000, v27, v28, "receivedEntitlementsNotification = false, not force fetching latest channel updates", v29, 2u);
      MEMORY[0x1AD11B340](v29, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

void sub_1ACAEFEC4()
{
}

id PurchaseControllerWrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PurchaseControllerWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_1ACAF000C(uint64_t a1)
{
  uint64_t v50 = a1;
  uint64_t v2 = sub_1ACE76E78();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v54 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772570);
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v51 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1ACE76CE8();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x60)) = MEMORY[0x1E4FBC870];
  uint64_t v48 = *(void *)((*v11 & *v1) + 0x68);
  v47[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v12 = v1;
  sub_1ACE75E08();
  uint64_t v58 = MEMORY[0x1E4FBC860];
  sub_1ACAF7B08((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  uint64_t v13 = v50;
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  uint64_t v14 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC58], v49);
  *(void *)((char *)v1 + v48) = sub_1ACE76D28();
  uint64_t v15 = (uint64_t)v12 + *(void *)((*v14 & *v12) + 0x70);
  *(_OWORD *)uint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  uint64_t v16 = (char *)v12 + *(void *)((*v14 & *v12) + 0x78);
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  os_log_type_t v17 = (char *)v12 + *(void *)((*v14 & *v12) + 0x80);
  uint64_t v18 = MEMORY[0x1E4FBC870];
  uint64_t v58 = MEMORY[0x1E4FBC870];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  long long v19 = v51;
  sub_1ACE75A58();
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v17, v19, v53);
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0x88)) = v18;
  *((unsigned char *)v12 + *(void *)((*v14 & *v12) + 0x90)) = 0;
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0x98)) = 0;
  uint64_t v20 = *(void *)((*v14 & *v12) + 0xA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 2sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  *(void *)((char *)v12 + v2sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v21;
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0xB8)) = 0;
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0xD0)) = 0;
  swift_beginAccess();
  sub_1ACAF7104(v13, v15);
  swift_endAccess();
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0xC8)) = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  id v22 = objc_msgSend(self, sel_sharedInstance);
  id v23 = objc_msgSend(v22, sel_privateQueueContext);

  type metadata accessor for InterestStore();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  if (qword_1EB7693C0 != -1) {
    swift_once();
  }
  os_log_type_t v25 = (void *)qword_1EB7693B0;
  type metadata accessor for InterestRepository();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v24;
  *(void *)(v26 + 24) = v25;
  id v27 = objc_allocWithZone((Class)MTSubscriptionChangeHandler);
  id v28 = v25;
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0xA0)) = objc_msgSend(v27, sel_init);
  id v29 = objc_msgSend(self, sel_sharedInstance);
  id v30 = objc_msgSend(self, sel_ams_sharedAccountStore);
  char v31 = (char *)objc_allocWithZone((Class)type metadata accessor for MusicSubscriptionInfoSyncUtil());
  id v32 = sub_1ACAF716C(v29, v30, v31);

  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0xB0)) = v32;
  *(void *)((char *)v12 + *(void *)((*v14 & *v12) + 0xC0)) = v26;
  swift_retain();

  uint64_t v33 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7675A8);
  v57.receiver = v12;
  v57.super_class = v33;
  id v34 = objc_msgSendSuper2(&v57, sel_init);
  uint64_t v35 = self;
  id v36 = v34;
  id v37 = objc_msgSend(v35, sel_defaultCenter);
  uint64_t v38 = v36;
  uint64_t v39 = (void *)sub_1ACE76178();
  objc_msgSend(v37, sel_addObserver_selector_name_object_, v38, sel_didFinishUpdatingFeeds, v39, 0);

  id v40 = objc_msgSend(objc_allocWithZone((Class)MTSubscriptionEntitlementsObserver), sel_initWithDelegate_onQueue_, v38, *(void *)((char *)v38 + *(void *)((*v14 & *v38) + 0x68)));
  uint64_t v41 = *(void *)((*v14 & *v38) + 0xB8);
  uint64_t v42 = *(void **)((char *)v38 + v41);
  *(void *)((char *)v38 + v41) = v40;

  id v43 = objc_msgSend(v35, sel_defaultCenter);
  uint64_t v44 = v54;
  sub_1ACE76E88();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1ACAF7B08((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  uint64_t v45 = v56;
  sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v45);
  swift_beginAccess();
  sub_1ACE75828();
  swift_endAccess();
  swift_release();
  swift_release();

  sub_1ACA50E78(v13, &qword_1EB767BF8);
  return v38;
}

void sub_1ACAF09EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1AD11B470](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1ACAEF708(0);
  }
}

uint64_t sub_1ACAF0A44()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68));
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_1ACAF7B50;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_83_0;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v0;
  sub_1ACE75E08();
  v13[1] = MEMORY[0x1E4FBC860];
  sub_1ACAF7B08((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1ACAF0D20(void *a1)
{
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Resetting all subs to not subscribed state", v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1ACAF0F10(MEMORY[0x1E4FBC860]);
  uint64_t result = swift_bridgeObjectRelease();
  *((unsigned char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x90)) = 1;
  return result;
}

uint64_t sub_1ACAF0F10(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v26 = v6 + 16;
  sub_1ACE761B8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  os_log_type_t v8 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  id v10 = objc_msgSend(self, sel_predicateWithValue_, 1);
  objc_msgSend(v9, sel_setPredicate_, v10);

  id v11 = objc_msgSend(self, sel_sharedInstance);
  id v12 = objc_msgSend(v11, sel_privateQueueContext);

  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a1;
  _DWORD v14[4] = v9;
  v14[5] = v6;
  v14[6] = ObjectType;
  aBlock[4] = sub_1ACAF7A1C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_61_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  uint64_t v16 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWaitWithSave_, v15);
  _Block_release(v15);

  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
  uint64_t v18 = sub_1ACE75498();
  os_log_type_t v19 = sub_1ACE76C08();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1AC9D5000, v18, v19, "Finished updating subscriptions.", v20, 2u);
    MEMORY[0x1AD11B340](v20, -1, -1);
    uint64_t v21 = v16;
  }
  else
  {
    uint64_t v21 = v18;
    uint64_t v18 = v16;
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v22;
}

void sub_1ACAF1310(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v48 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v48 - v14;
  id v16 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v17 = objc_msgSend(v16, sel_ams_activeiTunesAccount);

  if (v17)
  {
    if ((objc_msgSend(self, sel_acknowledgementNeededForPrivacyIdentifier_, @"com.apple.onboarding.podcasts") & 1) == 0)
    {
      if (a2)
      {
        unsigned __int8 v54 = a1;
        uint64_t v22 = swift_allocObject();
        uint64_t v53 = v22;
        *(void *)(v22 + 16) = MEMORY[0x1E4FBC860];
        uint64_t v23 = v22 + 16;
        if (qword_1EB772290 != -1) {
          swift_once();
        }
        uint64_t v24 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
        swift_beginAccess();
        os_log_type_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
        uint64_t v50 = v7 + 16;
        uint64_t v51 = v24;
        uint64_t v49 = v25;
        v25(v13, v24, v6);
        uint64_t v26 = sub_1ACE75498();
        os_log_type_t v27 = sub_1ACE76C08();
        if (os_log_type_enabled(v26, v27))
        {
          id v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v28 = 0;
          _os_log_impl(&dword_1AC9D5000, v26, v27, "Fetching all channels for personalization.", v28, 2u);
          MEMORY[0x1AD11B340](v28, -1, -1);
        }

        uint64_t v48 = *(void (**)(char *, uint64_t))(v7 + 8);
        v48(v13, v6);
        sub_1ACE761B8();
        id v29 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
        id v30 = (void *)sub_1ACE76178();
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(v29, sel_initWithEntityName_, v30);

        id v32 = objc_msgSend(self, sel_predicateWithValue_, 1);
        objc_msgSend(v31, sel_setPredicate_, v32);

        id v33 = objc_msgSend(self, sel_sharedInstance);
        id v34 = objc_msgSend(v33, sel_privateQueueContext);

        uint64_t v35 = (void *)swift_allocObject();
        v35[2] = v31;
        uint64_t v35[3] = v23;
        v35[4] = a3;
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = sub_1ACAF7518;
        *(void *)(v36 + 24) = v35;
        char v59 = sub_1ACADC690;
        uint64_t v60 = v36;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v56 = 1107296256;
        objc_super v57 = sub_1ACC525DC;
        uint64_t v58 = &block_descriptor_17;
        id v37 = _Block_copy(&aBlock);
        id v52 = v31;
        swift_retain();
        swift_release();
        objc_msgSend(v34, sel_performBlockAndWait_, v37);

        _Block_release(v37);
        LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v31)
        {
          __break(1u);
        }
        else
        {
          uint64_t v38 = v54;
          if (*(void *)(*(void *)v23 + 16))
          {
            v49(v10, v51, v6);
            uint64_t v39 = sub_1ACE75498();
            os_log_type_t v40 = sub_1ACE76C08();
            if (os_log_type_enabled(v39, v40))
            {
              uint64_t v41 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v41 = 0;
              _os_log_impl(&dword_1AC9D5000, v39, v40, "Retrieving personalized polling interval.", v41, 2u);
              MEMORY[0x1AD11B340](v41, -1, -1);
            }

            v48(v10, v6);
            id v42 = objc_msgSend(self, sel_sharedInstance);
            id v43 = objc_msgSend(v42, sel_personalizedChannelPollingInterval);

            id v44 = objc_msgSend(v43, sel_asyncValuePromiseOnQueue_, *(void *)((char *)v38 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v38) + 0x68)));
            uint64_t v45 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v46 = swift_allocObject();
            *(void *)(v46 + 16) = v53;
            *(void *)(v46 + 24) = v45;
            char v59 = sub_1ACAF7574;
            uint64_t v60 = v46;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v56 = 1107296256;
            objc_super v57 = sub_1ACCE320C;
            uint64_t v58 = &block_descriptor_24_0;
            uint64_t v47 = _Block_copy(&aBlock);
            swift_retain();
            swift_release();
            objc_msgSend(v44, sel_addFinishBlock_, v47);
            _Block_release(v47);
            swift_release();
            swift_release();
          }
          else
          {
            swift_release();
            swift_release();
          }
        }
      }
      else
      {
        sub_1ACAF1B18();
      }
    }
  }
  else
  {
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v18, v6);
    os_log_type_t v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76C08();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1AC9D5000, v19, v20, "Resetting subscription cache since user is not signed in.", v21, 2u);
      MEMORY[0x1AD11B340](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    sub_1ACAF0A44();
  }
}

uint64_t sub_1ACAF1B18()
{
  uint64_t v0 = sub_1ACE754C8();
  uint64_t v53 = *(void (***)(char *, uint64_t, uint64_t))(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v52 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MediaRequest.Params();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v56 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v49 - v8;
  *(void *)uint64_t v63 = 1;
  memset(&v63[8], 0, 32);
  v63[40] = 4;
  v58[0] = 3;
  char v62 = 1;
  char v61 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = &unk_1F0380ED0;
  unint64_t v51 = sub_1ACA364C4(inited);
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE84820;
  *(unsigned char *)(v11 + 32) = 3;
  *(void *)(v11 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = &unk_1F0380EF8;
  *(unsigned char *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = &unk_1F0380F20;
  unint64_t v12 = sub_1ACA364C4(v11);
  char v60 = 1;
  char v59 = 1;
  uint64_t v13 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v16 = sub_1ACA35F90(v14);
  unint64_t v17 = sub_1ACA35FB0(v14);
  unint64_t v18 = sub_1ACA360DC(v14);
  *((void *)&v48 + 1) = sub_1ACA360FC(v14);
  *(void *)&long long v48 = v18;
  *(void *)&long long v47 = v14;
  *((void *)&v47 + 1) = v14;
  *(void *)&long long v46 = v12;
  *((void *)&v46 + 1) = v14;
  *(void *)&long long v45 = v14;
  *((void *)&v45 + 1) = v51;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)v63, v58, &v62, &v61, v15, v16, v17, v14, (uint64_t)v9, v45, v46, v47, v14, &v60, 30, 0, v48, 0, 1,
    &v59,
    0,
    (uint64_t)v4,
    0,
    0,
    0,
    0,
    0,
    v14,
    0,
    0,
    2);
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  os_log_type_t v20 = v53;
  uint64_t v21 = v52;
  v53[2](v52, v19, v0);
  uint64_t v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76C08();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_1AC9D5000, v22, v23, "Getting state from MediaAPI for user's entitlements.", v24, 2u);
    MEMORY[0x1AD11B340](v24, -1, -1);
  }

  ((void (*)(char *, uint64_t))v20[1])(v21, v0);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v57;
  *(void *)(v25 + 16) = v57;
  uint64_t v27 = v25;
  id v52 = (char *)v25;
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v29 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v29 + 2) = v28;
  *((void *)v29 + 3) = sub_1ACAF75B4;
  *((void *)v29 + 4) = v27;
  sub_1ACE77B88();
  uint64_t v50 = v9;
  uint64_t v30 = v56;
  sub_1ACA394B0((uint64_t)v9, v56);
  unint64_t v31 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v32 = (v55 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  sub_1ACA56190(v30, v35 + v31);
  *(void *)(v35 + v32) = MEMORY[0x1E4FBC860];
  unint64_t v36 = v35 + v33;
  *(void *)(v36 + 64) = v65;
  long long v37 = v64;
  *(_OWORD *)(v36 + 32) = *(_OWORD *)&v63[32];
  *(_OWORD *)(v36 + 48) = v37;
  long long v38 = *(_OWORD *)&v63[16];
  *(_OWORD *)unint64_t v36 = *(_OWORD *)v63;
  *(_OWORD *)(v36 + 16) = v38;
  uint64_t v39 = v53;
  *(void *)(v35 + v34) = v53;
  os_log_type_t v40 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  *os_log_type_t v40 = sub_1ACA394A4;
  v40[1] = v29;
  id v41 = v26;
  swift_retain();
  swift_retain();
  id v42 = v39;
  swift_retain();
  uint64_t v43 = (uint64_t)v50;
  sub_1ACB0443C((uint64_t)v50, 0, (uint64_t)sub_1ACA3ABF0, v35);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACA39598(v43);
}

uint64_t sub_1ACAF21B8(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_sharedInstance);
  id v4 = objc_msgSend(v3, sel_privateQueueContext);

  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F70);
  unint64_t v5 = sub_1ACE76EE8();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC82F08(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = 0;
  uint64_t v9 = v16;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x1AD119490](v8, v5);
    }
    else {
      id v10 = *(id *)(v5 + 8 * v8 + 32);
    }
    uint64_t v11 = v10;
    objc_msgSend(v10, sel_lastPersonalizedRequestDate, v16);
    uint64_t v13 = v12;

    uint64_t v16 = v9;
    unint64_t v15 = *(void *)(v9 + 16);
    unint64_t v14 = *(void *)(v9 + 24);
    if (v15 >= v14 >> 1) {
      sub_1ACC82F08(v14 > 1, v15 + 1, 1);
    }
    ++v8;
    *(void *)(v9 + 16) = v15 + 1;
    *(void *)(v9 + 8 * v15 + 32) = v13;
  }
  while (v6 != v8);
  swift_bridgeObjectRelease();
LABEL_14:
  *a2 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAF23C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v83 = a4;
  uint64_t v86 = a3;
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v74 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  long long v84 = (char *)&v74 - v14;
  MEMORY[0x1F4188790](v13);
  long long v85 = (char *)&v74 - v15;
  uint64_t v16 = sub_1ACE750A8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  os_log_type_t v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  os_log_type_t v23 = (char *)&v74 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (uint8_t *)&v74 - v24;
  if (a1)
  {
    id v26 = a1;
    sub_1ACE75098();
    id v80 = v26;
    objc_msgSend(v26, sel_doubleValue);
    sub_1ACE74FF8();
    long long v87 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v88 = (void *)(v17 + 8);
    v87(v23, v16);
    uint64_t v27 = v16;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    long long v79 = (uint64_t *)(v86 + 16);
    uint64_t v28 = v6;
    uint64_t v29 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    uint64_t v30 = v89;
    unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    unint64_t v32 = v85;
    uint64_t v78 = v29;
    uint64_t v77 = v89 + 16;
    uint64_t v76 = v31;
    v31(v85, v29, v28);
    unint64_t v33 = *(void (**)(char *, uint8_t *, uint64_t))(v17 + 16);
    uint64_t v82 = v25;
    unint64_t v34 = v25;
    uint64_t v35 = v32;
    v33(v20, v34, v16);
    unint64_t v36 = sub_1ACE75498();
    uint64_t v37 = v28;
    os_log_type_t v38 = sub_1ACE76C08();
    BOOL v39 = os_log_type_enabled(v36, v38);
    uint64_t v81 = v27;
    if (v39)
    {
      uint64_t v75 = v28;
      os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      unint64_t v92 = v41;
      *(_DWORD *)os_log_type_t v40 = 136315138;
      uint64_t v74 = v40 + 4;
      sub_1ACAF7B08((unint64_t *)&qword_1EB76A950, MEMORY[0x1E4F27928]);
      uint64_t v42 = sub_1ACE777C8();
      uint64_t v91 = sub_1ACA3189C(v42, v43, (uint64_t *)&v92);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      v87(v20, v27);
      _os_log_impl(&dword_1AC9D5000, v36, v38, "Updating channels if any were updated before %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v41, -1, -1);
      MEMORY[0x1AD11B340](v40, -1, -1);

      id v44 = *(void (**)(char *, uint64_t))(v30 + 8);
      uint64_t v45 = v75;
      v44(v35, v75);
    }
    else
    {
      v87(v20, v27);

      id v44 = *(void (**)(char *, uint64_t))(v30 + 8);
      v44(v35, v37);
      uint64_t v45 = v37;
    }
    uint64_t v55 = v79;
    uint64_t v56 = swift_beginAccess();
    uint64_t v57 = *v55;
    MEMORY[0x1F4188790](v56);
    uint64_t v58 = v82;
    *(&v74 - 2) = v82;
    swift_bridgeObjectRetain();
    uint64_t v59 = *(void *)(sub_1ACCA5940((uint64_t)sub_1ACAF7AE8, (uint64_t)(&v74 - 4), v57) + 16);
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v60 = v83 + 16;
      swift_beginAccess();
      uint64_t v61 = MEMORY[0x1AD11B470](v60);
      if (v61)
      {
        char v62 = (void *)v61;
        sub_1ACAF1B18();
      }
      else
      {
      }
    }
    else
    {
      v76(v84, v78, v45);
      uint64_t v63 = v86;
      swift_retain();
      long long v64 = sub_1ACE75498();
      uint64_t v65 = sub_1ACE76C08();
      if (os_log_type_enabled(v64, (os_log_type_t)v65))
      {
        int64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int64_t v66 = 134217984;
        swift_beginAccess();
        uint64_t v90 = *(void *)(*(void *)(v63 + 16) + 16);
        uint64_t v58 = v82;
        sub_1ACE76FF8();
        swift_release();
        _os_log_impl(&dword_1AC9D5000, v64, (os_log_type_t)v65, "Defer MAPI update, all %ld channels were updated recently", v66, 0xCu);
        MEMORY[0x1AD11B340](v66, -1, -1);
      }
      else
      {

        swift_release();
      }
      v44(v84, v45);
    }
    return ((uint64_t (*)(uint8_t *, uint64_t))v87)(v58, v81);
  }
  else if (a2)
  {
    long long v46 = (void *)sub_1ACE74D68();
    uint64_t v47 = v6;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v12, v48, v6);
    uint64_t v49 = v46;
    uint64_t v50 = sub_1ACE75498();
    os_log_type_t v51 = sub_1ACE76BE8();
    if (os_log_type_enabled(v50, v51))
    {
      id v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = (void *)swift_slowAlloc();
      *(_DWORD *)id v52 = 138412290;
      unint64_t v92 = v49;
      uint64_t v53 = v49;
      sub_1ACE76FF8();
      uint64_t v54 = v88;
      *uint64_t v88 = v49;

      _os_log_impl(&dword_1AC9D5000, v50, v51, "Error getting subs TTL from bag: %@", v52, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v54, -1, -1);
      MEMORY[0x1AD11B340](v52, -1, -1);
    }
    else
    {

      uint64_t v50 = v49;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v12, v47);
  }
  else
  {
    uint64_t v67 = v6;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v68 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    uint64_t v69 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v9, v68, v67);
    unint64_t v70 = sub_1ACE75498();
    os_log_type_t v71 = sub_1ACE76BE8();
    if (os_log_type_enabled(v70, v71))
    {
      unint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v72 = 0;
      _os_log_impl(&dword_1AC9D5000, v70, v71, "Error getting subs TTL from bag", v72, 2u);
      MEMORY[0x1AD11B340](v72, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v9, v67);
  }
}

uint64_t sub_1ACAF2D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE75E48();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = *(void *)((char *)a6 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a6) + 0x68));
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a5;
  v17[3] = a6;
  v17[4] = a1;
  aBlock[4] = sub_1ACAF7878;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_44;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a5;
  swift_bridgeObjectRetain();
  os_log_type_t v20 = a6;
  sub_1ACE75E08();
  v22[1] = MEMORY[0x1E4FBC860];
  sub_1ACAF7B08((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_1ACAF3088(void *a1, uint64_t (*a2)(char *, uint64_t), unint64_t a3)
{
  v209 = (uint64_t (*)(char *, uint64_t))a2;
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v208 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v196 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v207 = (uint64_t (*)(char *, uint64_t))((char *)&v196 - v9);
  uint64_t v213 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v213 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v213);
  uint64_t v13 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v196 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v19 = (char *)&v196 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v196 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v196 - v23;
  if (a1)
  {
    v222[2] = (uint64_t)a1;
    id v25 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if ((swift_dynamicCast() & 1) == 0 || LOBYTE(v220[0]) != 1)
    {
      id v45 = a1;
      if (qword_1EB772290 != -1) {
        swift_once();
      }
      uint64_t v46 = v213;
      uint64_t v47 = __swift_project_value_buffer(v213, (uint64_t)qword_1EB766B88);
      swift_beginAccess();
      uint64_t v48 = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v24, v47, v46);
      id v49 = a1;
      id v50 = a1;
      os_log_type_t v51 = sub_1ACE75498();
      os_log_type_t v52 = sub_1ACE76BE8();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        v220[0] = v54;
        *(_DWORD *)uint64_t v53 = 136315138;
        swift_getErrorValue();
        uint64_t v55 = sub_1ACE77A98();
        v222[0] = sub_1ACA3189C(v55, v56, v220);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v51, v52, "Getting channels failed with error %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v54, -1, -1);
        MEMORY[0x1AD11B340](v53, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v24, v213);
      }
      else
      {

        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v24, v46);
      }
    }
  }
  v218 = v8;
  v199 = v13;
  uint64_t v202 = v5;
  uint64_t v26 = swift_beginAccess();
  LOBYTE(v220[0]) = 0;
  MEMORY[0x1F4188790](v26);
  *(&v196 - 2) = (uint64_t (*)(char *, uint64_t))v220;
  uint64_t v28 = v27 + 4;
  uint64_t v29 = v27 + 5;
  os_unfair_lock_lock(v27 + 5);
  sub_1ACAF7884(v28);
  uint64_t v217 = 0;
  os_unfair_lock_unlock(v29);
  swift_endAccess();
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v30 = v213;
  uint64_t v31 = __swift_project_value_buffer(v213, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v32 = v10;
  uint64_t v33 = v10 + 16;
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v35 = v31;
  uint64_t v204 = v33;
  v203 = v34;
  v34(v22, v31, v30);
  unint64_t v36 = sub_1ACE75498();
  os_log_type_t v37 = sub_1ACE76C08();
  if (os_log_type_enabled(v36, v37))
  {
    os_log_type_t v38 = v16;
    BOOL v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v39 = 0;
    _os_log_impl(&dword_1AC9D5000, v36, v37, "Set receivedEntitlementsNotification to false", v39, 2u);
    os_log_type_t v40 = v39;
    uint64_t v16 = v38;
    MEMORY[0x1AD11B340](v40, -1, -1);
  }

  uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
  uint64_t v41 = v32 + 8;
  v205 = v42;
  v42(v22, v213);
  if (a3 && (uint64_t v43 = sub_1ACC2BAAC(a3)) != 0)
  {
    unint64_t v44 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v44 = MEMORY[0x1E4FBC860];
  }
  v219 = v16;
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v59 = MEMORY[0x1E4FBC860];
  if (v58)
  {
    v220[0] = MEMORY[0x1E4FBC860];
    if (v58 < 1)
    {
      __break(1u);
      goto LABEL_151;
    }
    uint64_t v201 = v41;
    if ((v44 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v58; ++i)
      {
        int v61 = *(unsigned __int8 *)(*(void *)(MEMORY[0x1AD119490](i, v44)
                                             + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                                 + 74);
        if (v61 == 2 || (v61 & 1) == 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
      }
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v77 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
      do
      {
        uint64_t v78 = *(char **)(v44 + 8 * v76 + 32);
        if (*(unsigned char *)(*(void *)&v78[v77] + 74))
        {
          long long v79 = v78;
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          uint64_t v77 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
        }
        ++v76;
      }
      while (v58 != v76);
    }
  }
  else
  {
    if (!a1)
    {
      swift_bridgeObjectRelease();
      uint64_t v80 = v213;
      v203(v19, v35, v213);
      uint64_t v81 = sub_1ACE75498();
      os_log_type_t v82 = sub_1ACE76BE8();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v83 = 0;
        _os_log_impl(&dword_1AC9D5000, v81, v82, "Failed to cast to channel objects", v83, 2u);
        MEMORY[0x1AD11B340](v83, -1, -1);
      }

      return v205(v19, v80);
    }
    uint64_t v201 = v41;
    v220[0] = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = v213;
  uint64_t v63 = v35;
  uint64_t v206 = v220[0];
  if (v220[0] < 0 || (v220[0] & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v64 = sub_1ACE77508();
    if (v64) {
      goto LABEL_33;
    }
LABEL_51:
    swift_release();
    uint64_t v66 = MEMORY[0x1E4FBC860];
    uint64_t v75 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
    goto LABEL_52;
  }
  uint64_t v64 = *(void *)(v220[0] + 16);
  swift_retain();
  if (!v64) {
    goto LABEL_51;
  }
LABEL_33:
  v220[0] = v59;
  sub_1ACC82D44(0, v64 & ~(v64 >> 63), 0);
  if (v64 < 0) {
    goto LABEL_152;
  }
  uint64_t v65 = 0;
  uint64_t v66 = v220[0];
  uint64_t v67 = v206;
  do
  {
    if ((v67 & 0xC000000000000001) != 0) {
      uint64_t v68 = (char *)MEMORY[0x1AD119490](v65, v67);
    }
    else {
      uint64_t v68 = (char *)*(id *)(v67 + 8 * v65 + 32);
    }
    uint64_t v69 = v68;
    uint64_t v71 = *(void *)&v68[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    uint64_t v70 = *(void *)&v68[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    v220[0] = v66;
    unint64_t v73 = *(void *)(v66 + 16);
    unint64_t v72 = *(void *)(v66 + 24);
    if (v73 >= v72 >> 1)
    {
      sub_1ACC82D44(v72 > 1, v73 + 1, 1);
      uint64_t v66 = v220[0];
    }
    ++v65;
    *(void *)(v66 + 16) = v73 + 1;
    uint64_t v74 = v66 + 16 * v73;
    *(void *)(v74 + 32) = v71;
    *(void *)(v74 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v70;
  }
  while (v64 != v65);
  swift_release();
  uint64_t v62 = v213;
  uint64_t v75 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
  uint64_t v63 = v35;
LABEL_52:
  uint64_t v84 = sub_1ACB02BC0(v66);
  swift_bridgeObjectRelease();
  long long v85 = (char *)v219;
  v203((char *)v219, v63, v62);
  swift_bridgeObjectRetain_n();
  uint64_t v86 = sub_1ACE75498();
  os_log_type_t v87 = sub_1ACE76C08();
  BOOL v88 = os_log_type_enabled(v86, v87);
  uint64_t v197 = v63;
  uint64_t v198 = v84;
  if (v88)
  {
    uint64_t v89 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    v220[0] = v90;
    *(_DWORD *)uint64_t v89 = 141558275;
    v222[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v89 + 12) = 2081;
    v222[0] = v84;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
    sub_1ACA51EA4(&qword_1EB772258, &qword_1EB772580);
    sub_1ACA4F4AC();
    uint64_t v75 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
    uint64_t v91 = sub_1ACE76498();
    v222[0] = sub_1ACA3189C(v91, v92, v220);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v86, v87, "Got purchased channels %{private,mask.hash}s from MAPI", (uint8_t *)v89, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v90, -1, -1);
    MEMORY[0x1AD11B340](v89, -1, -1);

    uint64_t v93 = v85;
    uint64_t v94 = v213;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v93 = v85;
    uint64_t v94 = v62;
  }
  v205(v93, v94);
  uint64_t v95 = v208;
  uint64_t v96 = v209;
  unint64_t v97 = v218;
  sub_1ACE75098();
  unint64_t v98 = v207;
  sub_1ACE74FF8();
  id v99 = *(uint64_t (**)(char *, uint64_t))(v95 + 8);
  uint64_t v208 = v95 + 8;
  v196 = v99;
  uint64_t v100 = v99(v97, v202);
  MEMORY[0x1F4188790](v100);
  *(&v196 - 2) = v98;
  *(&v196 - 1) = v96;
  unint64_t v101 = v206;
  swift_retain();
  unint64_t v102 = sub_1ACCA5794((uint64_t (*)(id *))sub_1ACAF78A0, (uint64_t)(&v196 - 4), v101);
  unint64_t v103 = v102;
  unint64_t v104 = v102 >> 62;
  if (v102 >> 62) {
    goto LABEL_149;
  }
  uint64_t v105 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_57:
  uint64_t v106 = MEMORY[0x1E4FBC860];
  v218 = (char *)v103;
  if (v105)
  {
    v220[0] = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v105 & ~(v105 >> 63), 0);
    if (v105 < 0) {
      goto LABEL_153;
    }
    uint64_t v107 = 0;
    uint64_t v106 = v220[0];
    unint64_t v108 = v103 & 0xC000000000000001;
    do
    {
      if (v108) {
        uint64_t v109 = (char *)MEMORY[0x1AD119490](v107, v103);
      }
      else {
        uint64_t v109 = (char *)*(id *)(v103 + 8 * v107 + 32);
      }
      uint64_t v110 = v109;
      int v111 = &v109[*v75];
      uint64_t v113 = *(void *)v111;
      uint64_t v112 = *((void *)v111 + 1);
      swift_bridgeObjectRetain();

      v220[0] = v106;
      unint64_t v115 = *(void *)(v106 + 16);
      unint64_t v114 = *(void *)(v106 + 24);
      if (v115 >= v114 >> 1)
      {
        sub_1ACC82D44(v114 > 1, v115 + 1, 1);
        uint64_t v106 = v220[0];
      }
      ++v107;
      *(void *)(v106 + 16) = v115 + 1;
      uint64_t v116 = v106 + 16 * v115;
      *(void *)(v116 + 32) = v113;
      *(void *)(v116 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v112;
      unint64_t v103 = (unint64_t)v218;
    }
    while (v105 != v107);
  }
  uint64_t v117 = sub_1ACB02BC0(v106);
  swift_bridgeObjectRelease();
  if (v104)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v118 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v118 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v200 = v117;
  if (v118)
  {
    uint64_t v119 = 0;
    unint64_t v104 = v103 & 0xC000000000000001;
    uint64_t v120 = MEMORY[0x1E4FBC868];
    unint64_t v210 = v103 + 32;
    uint64_t v212 = v118;
    unint64_t v211 = v103 & 0xC000000000000001;
    while (1)
    {
      if (v104)
      {
        unint64_t v122 = (char *)MEMORY[0x1AD119490](v119, v103);
        BOOL v123 = __OFADD__(v119++, 1);
        if (v123) {
          goto LABEL_144;
        }
      }
      else
      {
        unint64_t v122 = (char *)*(id *)(v210 + 8 * v119);
        BOOL v123 = __OFADD__(v119++, 1);
        if (v123)
        {
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          swift_bridgeObjectRetain();
          uint64_t v105 = sub_1ACE77508();
          swift_bridgeObjectRelease();
          goto LABEL_57;
        }
      }
      v124 = (uint64_t *)&v122[*v75];
      uint64_t v126 = *v124;
      uint64_t v125 = v124[1];
      uint64_t v127 = *(void *)&v122[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships];
      v219 = v122;
      if (!v127 || (uint64_t v128 = *(void *)(v127 + 16)) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v141 = sub_1ACA657FC(v126, v125);
        if (v142)
        {
          uint64_t v143 = v141;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v222[0] = v120;
          uint64_t v121 = v120;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACD06B78();
            uint64_t v121 = v222[0];
          }
          swift_bridgeObjectRelease();
          sub_1ACB1B6A4(v143, v121);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v121 = v120;
        }
        goto LABEL_72;
      }
      uint64_t v216 = v126;
      uint64_t v217 = v125;
      v129 = (uint64_t *)(v128 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
      swift_beginAccess();
      uint64_t v130 = *v129;
      if ((unint64_t)*v129 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1ACE77508();
        uint64_t v214 = v119;
        uint64_t v215 = v120;
        if (v131)
        {
LABEL_82:
          if (v131 < 1) {
            goto LABEL_147;
          }
          uint64_t v132 = 0;
          uint64_t v75 = (uint64_t *)(v130 + 32);
          int64_t v133 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            if ((v130 & 0xC000000000000001) != 0)
            {
              uint64_t v134 = MEMORY[0x1AD119490](v132++, v130);
              uint64_t v136 = *(void *)(v134 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
              uint64_t v135 = *(void *)(v134 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
              swift_bridgeObjectRetain();
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v137 = v75[v132++];
              char v138 = (uint64_t *)(v137 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
              uint64_t v136 = *v138;
              uint64_t v135 = v138[1];
              swift_bridgeObjectRetain();
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int64_t v133 = sub_1ACA41EA0(0, v133[2] + 1, 1, v133);
            }
            unint64_t v104 = v133[2];
            unint64_t v139 = v133[3];
            if (v104 >= v139 >> 1) {
              int64_t v133 = sub_1ACA41EA0((void *)(v139 > 1), v104 + 1, 1, v133);
            }
            v133[2] = v104 + 1;
            char v140 = &v133[2 * v104];
            v140[4] = v136;
            v140[5] = v135;
          }
          while (v132 != v131);
          goto LABEL_99;
        }
      }
      else
      {
        uint64_t v131 = *(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v214 = v119;
        uint64_t v215 = v120;
        if (v131) {
          goto LABEL_82;
        }
      }
      int64_t v133 = (void *)MEMORY[0x1E4FBC860];
LABEL_99:
      swift_bridgeObjectRelease_n();
      uint64_t v145 = v215;
      char v146 = swift_isUniquelyReferenced_nonNull_native();
      v222[0] = v145;
      uint64_t v147 = v217;
      unint64_t v103 = sub_1ACA657FC(v216, v217);
      uint64_t v149 = *(void *)(v145 + 16);
      BOOL v150 = (v148 & 1) == 0;
      uint64_t v151 = v149 + v150;
      if (__OFADD__(v149, v150)) {
        goto LABEL_146;
      }
      char v152 = v148;
      if (*(void *)(v145 + 24) >= v151)
      {
        if ((v146 & 1) == 0) {
          sub_1ACD06B78();
        }
      }
      else
      {
        sub_1ACCFDE20(v151, v146);
        uint64_t v153 = sub_1ACA657FC(v216, v147);
        if ((v152 & 1) != (v154 & 1)) {
          goto LABEL_154;
        }
        unint64_t v103 = v153;
      }
      uint64_t v75 = &OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id;
      uint64_t v121 = v222[0];
      if (v152)
      {
        uint64_t v155 = *(void *)(v222[0] + 56);
        swift_bridgeObjectRelease();
        *(void *)(v155 + 8 * v103) = v133;
      }
      else
      {
        *(void *)(v222[0] + 8 * (v103 >> 6) + 64) |= 1 << v103;
        v156 = (void *)(*(void *)(v121 + 48) + 16 * v103);
        void *v156 = v216;
        v156[1] = v147;
        *(void *)(*(void *)(v121 + 56) + 8 * v103) = v133;
        uint64_t v157 = *(void *)(v121 + 16);
        BOOL v123 = __OFADD__(v157, 1);
        uint64_t v158 = v157 + 1;
        if (v123) {
          goto LABEL_148;
        }
        *(void *)(v121 + 16) = v158;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v103 = (unint64_t)v218;
      uint64_t v118 = v212;
      uint64_t v119 = v214;
      unint64_t v104 = v211;
LABEL_72:
      swift_bridgeObjectRelease();

      uint64_t v120 = v121;
      if (v119 == v118) {
        goto LABEL_111;
      }
    }
  }
  uint64_t v121 = MEMORY[0x1E4FBC868];
LABEL_111:
  swift_bridgeObjectRelease_n();
  unint64_t v103 = v121 + 64;
  uint64_t v159 = 1 << *(unsigned char *)(v121 + 32);
  uint64_t v160 = -1;
  if (v159 < 64) {
    uint64_t v160 = ~(-1 << v159);
  }
  uint64_t v161 = v160 & *(void *)(v121 + 64);
  int64_t v162 = (unint64_t)(v159 + 63) >> 6;
  swift_bridgeObjectRetain();
  unint64_t v104 = 0;
  for (uint64_t j = MEMORY[0x1E4FBC860]; ; uint64_t j = v222[0])
  {
    if (v161)
    {
      v161 &= v161 - 1;
      goto LABEL_115;
    }
    int64_t v165 = v104 + 1;
    if (__OFADD__(v104, 1)) {
      goto LABEL_145;
    }
    if (v165 >= v162)
    {
LABEL_135:
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v168 = sub_1ACB02BC0(j);
      swift_bridgeObjectRelease();
      v169 = (char *)v209;
      uint64_t v170 = *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v209) + 0x90);
      if ((*((unsigned char *)v209 + v170) & 1) == 0)
      {
        *(void *)((char *)v209 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v209) + 0x88)) = v198;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v169[v170] = 1;
      }
      v171 = v199;
      uint64_t v172 = v213;
      v203(v199, v197, v213);
      uint64_t v173 = v200;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v174 = sub_1ACE75498();
      os_log_type_t v175 = sub_1ACE76C08();
      if (os_log_type_enabled(v174, v175))
      {
        uint64_t v176 = swift_slowAlloc();
        v177 = (void *)swift_slowAlloc();
        v219 = v177;
        *(_DWORD *)uint64_t v176 = 141558787;
        uint64_t v221 = 1752392040;
        v222[0] = (uint64_t)v177;
        sub_1ACE76FF8();
        *(_WORD *)(v176 + 12) = 2081;
        uint64_t v221 = v173;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
        sub_1ACA51EA4(&qword_1EB772258, &qword_1EB772580);
        sub_1ACA4F4AC();
        uint64_t v178 = sub_1ACE76498();
        uint64_t v221 = sub_1ACA3189C(v178, v179, v222);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v176 + 22) = 2160;
        uint64_t v221 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v176 + 32) = 2081;
        uint64_t v221 = v168;
        uint64_t v173 = v200;
        uint64_t v180 = sub_1ACE76498();
        uint64_t v221 = sub_1ACA3189C(v180, v181, v222);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v174, v175, "Got recently purchased channels %{private,mask.hash}s and purchased shows %{private,mask.hash}s from MAPI", (uint8_t *)v176, 0x2Au);
        id v182 = v219;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v182, -1, -1);
        MEMORY[0x1AD11B340](v176, -1, -1);

        v183 = v199;
        uint64_t v184 = v213;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v183 = v171;
        uint64_t v184 = v172;
      }
      v205(v183, v184);
      uint64_t v185 = sub_1ACB82050(v168, v173);
      MEMORY[0x1F4188790](v185);
      uint64_t v186 = type metadata accessor for StorePurchaseTask();
      *(&v196 - 2) = (uint64_t (*)(char *, uint64_t))v186;
      *(&v196 - 1) = (uint64_t (*)(char *, uint64_t))&protocol witness table for StorePurchaseTask;
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath);
      *(&v196 - 2) = (uint64_t (*)(char *, uint64_t))v186;
      *(&v196 - 1) = (uint64_t (*)(char *, uint64_t))&protocol witness table for StorePurchaseTask;
      swift_getKeyPath();
      v222[0] = v185;
      v188 = v209;
      sub_1ACE75A98();
      unint64_t v189 = v206;
      uint64_t v190 = sub_1ACAF0F10(v206);
      unsigned int v191 = objc_msgSend(self, sel_isRunningOnInternalOS);
      uint64_t v192 = v198;
      if (v191)
      {
        v193 = *(void **)&v188[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v188) + 0xC8)];
        v194 = (void *)sub_1ACE76178();
        LODWORD(v193) = objc_msgSend(v193, sel_BOOLForKey_, v194);

        BOOL v195 = v193 == 0;
        unint64_t v189 = v206;
        if (!v195) {
          uint64_t v190 = v192;
        }
      }
      swift_bridgeObjectRelease();
      sub_1ACAF4D38(v190, v189);
      swift_bridgeObjectRelease();
      swift_release();
      return v196((char *)v207, v202);
    }
    uint64_t v166 = *(void *)(v103 + 8 * v165);
    ++v104;
    if (!v166)
    {
      unint64_t v104 = v165 + 1;
      if (v165 + 1 >= v162) {
        goto LABEL_135;
      }
      uint64_t v166 = *(void *)(v103 + 8 * v104);
      if (!v166)
      {
        unint64_t v104 = v165 + 2;
        if (v165 + 2 >= v162) {
          goto LABEL_135;
        }
        uint64_t v166 = *(void *)(v103 + 8 * v104);
        if (!v166)
        {
          unint64_t v104 = v165 + 3;
          if (v165 + 3 >= v162) {
            goto LABEL_135;
          }
          uint64_t v166 = *(void *)(v103 + 8 * v104);
          if (!v166)
          {
            unint64_t v104 = v165 + 4;
            if (v165 + 4 >= v162) {
              goto LABEL_135;
            }
            uint64_t v166 = *(void *)(v103 + 8 * v104);
            if (!v166) {
              break;
            }
          }
        }
      }
    }
LABEL_134:
    uint64_t v161 = (v166 - 1) & v166;
LABEL_115:
    v222[0] = j;
    swift_bridgeObjectRetain();
    uint64_t v164 = swift_bridgeObjectRetain();
    sub_1ACA6FB30(v164);
    swift_bridgeObjectRelease();
  }
  int64_t v167 = v165 + 5;
  if (v167 >= v162) {
    goto LABEL_135;
  }
  uint64_t v166 = *(void *)(v103 + 8 * v167);
  if (v166)
  {
    unint64_t v104 = v167;
    goto LABEL_134;
  }
  while (1)
  {
    unint64_t v104 = v167 + 1;
    if (__OFADD__(v167, 1)) {
      break;
    }
    if ((uint64_t)v104 >= v162) {
      goto LABEL_135;
    }
    uint64_t v166 = *(void *)(v103 + 8 * v104);
    ++v167;
    if (v166) {
      goto LABEL_134;
    }
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACAF4990(uint64_t a1, uint64_t a2, void *a3)
{
  v26[3] = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v26 - v10;
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[0] = a1;
  if (!*(void *)(*(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes) + 88))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_9:
    sub_1ACE74FD8();
    sub_1ACA50E78((uint64_t)v11, (uint64_t *)&unk_1EB773140);
    goto LABEL_11;
  }
  v26[1] = v3;
  if (qword_1EB76E118 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_1EB76E110;
  uint64_t v17 = (void *)sub_1ACE76178();
  id v18 = objc_msgSend(v16, sel_dateFromString_, v17);

  if (v18)
  {
    sub_1ACE75078();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
  }
  sub_1ACA909B4((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
LABEL_11:
  char v19 = sub_1ACE75018();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v19)
  {
    char v20 = 1;
  }
  else if (*((unsigned char *)a3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a3) + 0x90)))
  {
    uint64_t v21 = *(void *)((char *)a3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a3) + 0x88));
    uint64_t v23 = *(void *)(v26[0] + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
    uint64_t v22 = *(void *)(v26[0] + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v24 = sub_1ACCEA330(v23, v22, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v20 = v24 ^ 1;
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1ACAF4D38(uint64_t a1, unint64_t a2)
{
  uint64_t v73 = a1;
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v76 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1ACE75E48();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v74 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  os_log_type_t v82 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v70 - v9;
  aBlock[0] = MEMORY[0x1E4FBC860];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    if (!v11) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_21;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      switch(*(unsigned char *)(*(void *)(MEMORY[0x1AD119490](i, a2)
                                    + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                        + 176))
      {
        case 1:
        case 2:
          char v13 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0) {
            goto LABEL_6;
          }
          goto LABEL_11;
        case 3:
LABEL_6:
          swift_unknownObjectRelease();
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_11:
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          break;
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      uint64_t v16 = *(char **)(a2 + 8 * j + 32);
      switch(*(unsigned char *)(*(void *)&v16[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 176))
      {
        case 1:
        case 2:
          char v17 = sub_1ACE77848();
          id v18 = v16;
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_14;
          }

          break;
        case 3:
          continue;
        default:
          uint64_t v15 = v16;
          swift_bridgeObjectRelease();
LABEL_14:
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          break;
      }
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v19 = aBlock[0];
  uint64_t v80 = v10;
  if ((aBlock[0] & 0x8000000000000000) == 0 && (aBlock[0] & 0x4000000000000000) == 0)
  {
    uint64_t v20 = *(void *)(aBlock[0] + 16);
    if (v20) {
      goto LABEL_24;
    }
LABEL_34:
    swift_release();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1ACE77508();
  swift_release();
  if (!v20) {
    goto LABEL_34;
  }
LABEL_24:
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
  {
LABEL_49:
    __break(1u);
    JUMPOUT(0x1ACAF592CLL);
  }
  uint64_t v21 = 0;
  uint64_t v22 = aBlock[0];
  do
  {
    if ((v19 & 0xC000000000000001) != 0) {
      uint64_t v23 = (char *)MEMORY[0x1AD119490](v21, v19);
    }
    else {
      uint64_t v23 = (char *)*(id *)(v19 + 8 * v21 + 32);
    }
    char v24 = v23;
    uint64_t v26 = *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    uint64_t v25 = *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    aBlock[0] = v22;
    unint64_t v28 = *(void *)(v22 + 16);
    unint64_t v27 = *(void *)(v22 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1ACC82D44(v27 > 1, v28 + 1, 1);
      uint64_t v22 = aBlock[0];
    }
    ++v21;
    *(void *)(v22 + 16) = v28 + 1;
    uint64_t v29 = v22 + 16 * v28;
    *(void *)(v29 + 32) = v26;
    *(void *)(v29 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v25;
  }
  while (v20 != v21);
  swift_release();
  uint64_t v10 = v80;
LABEL_35:
  uint64_t v30 = sub_1ACB02BC0(v22);
  swift_bridgeObjectRelease();
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v31 = v84;
  uint64_t v32 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v33 = v83;
  unint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v72(v10, v32, v31);
  swift_bridgeObjectRetain_n();
  unint64_t v34 = sub_1ACE75498();
  os_log_type_t v35 = sub_1ACE76C08();
  unint64_t v36 = &unk_1ACE8B000;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v71 = v38;
    *(_DWORD *)uint64_t v37 = 141558275;
    uint64_t v85 = 1752392040;
    aBlock[0] = v38;
    sub_1ACE76FF8();
    *(_WORD *)(v37 + 12) = 2081;
    uint64_t v70 = v37 + 14;
    swift_bridgeObjectRetain();
    uint64_t v39 = v32;
    uint64_t v40 = sub_1ACE76998();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v40;
    uint64_t v32 = v39;
    uint64_t v85 = sub_1ACA3189C(v43, v42, aBlock);
    unint64_t v36 = (void *)&unk_1ACE8B000;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v34, v35, "User's Entitlements IAP/1p Id's: %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
    uint64_t v44 = v71;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v44, -1, -1);
    MEMORY[0x1AD11B340](v37, -1, -1);

    id v45 = *(void (**)(char *, uint64_t))(v83 + 8);
    v45(v80, v31);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    id v45 = *(void (**)(char *, uint64_t))(v33 + 8);
    v45(v10, v31);
  }
  unsigned int v46 = objc_msgSend(self, sel_isRunningOnInternalOS);
  uint64_t v47 = v82;
  if (v46
    && (uint64_t v48 = *(void **)((char *)v81 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v81) + 0xC8)),
        id v49 = (void *)sub_1ACE76178(),
        LODWORD(v48) = objc_msgSend(v48, sel_BOOLForKey_, v49),
        v49,
        v48))
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = v73;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v51 = v73;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1ACCAEA4C(v30, v51);
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = v84;
  v72(v47, v32, v84);
  swift_bridgeObjectRetain_n();
  uint64_t v53 = sub_1ACE75498();
  os_log_type_t v54 = sub_1ACE76C08();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v80 = (char *)v45;
    uint64_t v57 = v56;
    *(_DWORD *)uint64_t v55 = v36[333];
    uint64_t v85 = 1752392040;
    aBlock[0] = v56;
    sub_1ACE76FF8();
    *(_WORD *)(v55 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1ACE76998();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1ACA3189C(v58, v60, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v53, v54, "Showing all newly subscribed 1p/IAP subscriptions in the confirmation sheet: %{private,mask.hash}s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v57, -1, -1);
    MEMORY[0x1AD11B340](v55, -1, -1);

    ((void (*)(char *, uint64_t))v80)(v82, v84);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v45(v47, v52);
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  int v61 = (void *)sub_1ACE76CF8();
  uint64_t v62 = swift_allocObject();
  uint64_t v63 = v81;
  *(void *)(v62 + 16) = v81;
  *(void *)(v62 + 24) = v50;
  aBlock[4] = (uint64_t)sub_1ACAF7924;
  aBlock[5] = v62;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  void aBlock[3] = (uint64_t)&block_descriptor_51;
  uint64_t v64 = _Block_copy(aBlock);
  id v65 = v63;
  swift_release();
  uint64_t v66 = v74;
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACAF7B08((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v67 = v76;
  uint64_t v68 = v79;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v66, v67, v64);
  _Block_release(v64);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v67, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v66, v77);
}

uint64_t sub_1ACAF594C(void *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x78);
  swift_beginAccess();
  sub_1ACAF792C(v3, (uint64_t)v10);
  if (!v11) {
    return sub_1ACA50E78((uint64_t)v10, &qword_1EB76D340);
  }
  sub_1ACA3E158((uint64_t)v10, (uint64_t)v7);
  sub_1ACA50E78((uint64_t)v10, &qword_1EB76D340);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a2, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_1ACAF5A38(uint64_t a1, unint64_t a2, void (**a3)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v127 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v128 = (char *)&v121 - v11;
  uint64_t v145 = sub_1ACE750A8();
  uint64_t v126 = *(uint64_t (***)(uint64_t))(v145 - 8);
  MEMORY[0x1F4188790](v145);
  char v144 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = sub_1ACE754C8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v130 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  char v138 = (char *)&v121 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v121 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v121 - v22;
  swift_beginAccess();
  uint64_t v24 = MEMORY[0x1AD11B470](a1 + 16);
  if (v24)
  {
    uint64_t v25 = v24;
    if (qword_1EB772290 != -1) {
      goto LABEL_116;
    }
    while (1)
    {
      uint64_t v26 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB766B88);
      swift_beginAccess();
      unint64_t v27 = *(void (**)(char *, uint64_t, unint64_t))(v14 + 16);
      uint64_t v135 = v26;
      uint64_t v134 = v14 + 16;
      int64_t v133 = v27;
      v27(v23, v26, v13);
      unint64_t v28 = sub_1ACE75498();
      os_log_type_t v29 = sub_1ACE76C08();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_1AC9D5000, v28, v29, "Updating subscribed channels from server objects.", v30, 2u);
        MEMORY[0x1AD11B340](v30, -1, -1);
      }

      uint64_t v31 = *(void (**)(char *, unint64_t))(v14 + 8);
      v14 += 8;
      uint64_t v136 = v14;
      uint64_t v132 = v31;
      v31(v23, v13);
      unint64_t v142 = v13;
      uint64_t v137 = (char *)v25;
      uint64_t v123 = v10;
      *(void *)&long long v125 = a4;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = (char *)sub_1ACE77508();
      }
      else
      {
        uint64_t v23 = *(char **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      unint64_t v146 = a2;
      if (!v23) {
        break;
      }
      uint64_t v141 = (char *)self;
      char v140 = (char *)self;
      a4 = 0;
      unint64_t v143 = a2 & 0xC000000000000001;
      uint64_t v131 = a2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v129 = a2 + 32;
      unint64_t v139 = (unint64_t)v23;
      while (1)
      {
        if (v143)
        {
          id v33 = (id)MEMORY[0x1AD119490](a4, a2);
          BOOL v34 = __OFADD__(a4++, 1);
          if (v34) {
            goto LABEL_111;
          }
        }
        else
        {
          if ((unint64_t)a4 >= *(void *)(v131 + 16)) {
            goto LABEL_115;
          }
          id v33 = *(id *)(v129 + 8 * a4);
          BOOL v34 = __OFADD__(a4++, 1);
          if (v34)
          {
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
            goto LABEL_113;
          }
        }
        uint64_t v23 = (char *)v33;
        id v35 = objc_msgSend(v140, sel_sharedInstance);
        id v36 = objc_msgSend(v35, sel_privateQueueContext);

        id v37 = objc_msgSend(v141, sel_createOrFindChannelFromFeedChannelItem_personalizedRequest_context_, v23, 1, v36);
        uint64_t v38 = *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes];
        unint64_t v39 = *(void *)(v38 + 152) ? *(void *)(v38 + 152) : MEMORY[0x1E4FBC860];
        unint64_t v40 = *(void *)(v38 + 120) ? *(void *)(v38 + 120) : MEMORY[0x1E4FBC860];
        unint64_t aBlock = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1ACA6FB18(v40);
        a2 = aBlock;
        if (aBlock >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = sub_1ACE77508();
        }
        else
        {
          uint64_t v10 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        uint64_t v147 = v23;
        id v148 = v37;
        if (v10) {
          break;
        }
        unint64_t v42 = (char *)MEMORY[0x1E4FBC860];
LABEL_38:
        swift_bridgeObjectRelease_n();
        if (*((void *)v42 + 2))
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = (char *)v139;
          uint64_t v47 = v148;
          a2 = v146;
          uint64_t v32 = (void *)sub_1ACE76178();
        }
        else
        {
          uint64_t v32 = 0;
          a2 = v146;
          uint64_t v23 = (char *)v139;
          uint64_t v47 = v148;
        }
        swift_bridgeObjectRelease();
        objc_msgSend(v47, sel_setSubscriptionOfferAppType_, v32);

        if ((char *)a4 == v23) {
          goto LABEL_42;
        }
      }
      if (v10 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v25 = a2 + 32;
        unint64_t v42 = (char *)MEMORY[0x1E4FBC860];
        while (1)
        {
          if ((a2 & 0xC000000000000001) != 0)
          {
            uint64_t v43 = MEMORY[0x1AD119490](v41++, a2);
            unint64_t v13 = *(unsigned __int8 *)(v43 + 208);
            swift_unknownObjectRelease();
            if (v13 != 4) {
              goto LABEL_33;
            }
          }
          else
          {
            uint64_t v44 = *(void *)(v25 + 8 * v41++);
            unint64_t v13 = *(unsigned __int8 *)(v44 + 208);
            if (v13 != 4)
            {
LABEL_33:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v42 = sub_1ACA429B4(0, *((void *)v42 + 2) + 1, 1, v42);
              }
              unint64_t v46 = *((void *)v42 + 2);
              unint64_t v45 = *((void *)v42 + 3);
              uint64_t v14 = v46 + 1;
              if (v46 >= v45 >> 1) {
                unint64_t v42 = sub_1ACA429B4((char *)(v45 > 1), v46 + 1, 1, v42);
              }
              *((void *)v42 + 2) = v14;
              v42[v46 + 32] = v13;
            }
          }
          if (v41 == v10) {
            goto LABEL_38;
          }
        }
      }
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      swift_once();
    }
LABEL_42:
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(self, sel_sharedInstance);
    id v49 = objc_msgSend(v48, sel_privateQueueContext);

    sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F70);
    unint64_t v13 = sub_1ACE76EE8();
    uint64_t v55 = v125;

    unint64_t aBlock = MEMORY[0x1E4FBC860];
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      a4 = sub_1ACE77508();
    }
    else
    {
      a4 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v10 = (uint64_t)&selRef_rangeOfCharacterFromSet_options_range_;
    unint64_t v143 = v13;
    if (a4)
    {
      if (a4 < 1)
      {
        __break(1u);
        JUMPOUT(0x1ACAF701CLL);
      }
      uint64_t v56 = 0;
      unint64_t v57 = v13 & 0xC000000000000001;
      do
      {
        if (v57) {
          id v58 = (id)MEMORY[0x1AD119490](v56, v13);
        }
        else {
          id v58 = *(id *)(v13 + 8 * v56 + 32);
        }
        unint64_t v59 = v58;
        if (objc_msgSend(v58, sel_subscriptionActive, v121))
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          unint64_t v13 = v143;
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v56;
      }
      while (a4 != v56);
      swift_bridgeObjectRelease();
      v60._uint64_t rawValue = (void *)aBlock;
    }
    else
    {
      swift_bridgeObjectRelease();
      v60._uint64_t rawValue = (void *)MEMORY[0x1E4FBC860];
    }
    int v61 = v137;
    uint64_t v62 = (void *)MEMORY[0x1E4FBC8C8];
    char v140 = *(char **)((*MEMORY[0x1E4FBC8C8] & *(void *)v137) + 0xC0);
    swift_retain();
    InterestRepository.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(v60);
    swift_release();
    swift_release();
    if (a4)
    {
      unint64_t v129 = v55 + 16;
      uint64_t v64 = *v62 & *v61;
      unint64_t v65 = v13 & 0xC000000000000001;
      uint64_t v147 = (char *)(v126 + 1);
      uint64_t v121 = &v150;
      uint64_t v127 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 7);
      uint64_t v131 = *(void *)(v64 + 160);
      unint64_t v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 6);
      uint64_t v126 = &v151;
      uint64_t v25 = 4;
      *(void *)&long long v63 = 141558275;
      long long v125 = v63;
      id v66 = 0;
      uint64_t v124 = a4;
      unint64_t v139 = v13 & 0xC000000000000001;
      while (1)
      {
        if (v65) {
          uint64_t v67 = (char *)MEMORY[0x1AD119490](v25 - 4, v13);
        }
        else {
          uint64_t v67 = (char *)*(id *)(v13 + 8 * v25);
        }
        uint64_t v23 = v67;
        uint64_t v14 = v25 - 3;
        if (__OFADD__(v25 - 4, 1)) {
          goto LABEL_112;
        }
        uint64_t v68 = v144;
        sub_1ACE75098();
        sub_1ACE74FB8();
        double v70 = v69;
        uint64_t v10 = *(void *)v147;
        (*(void (**)(char *, uint64_t))v147)(v68, v145);
        objc_msgSend(v23, sel_setLastPersonalizedRequestDate_, v70, v121);
        swift_bridgeObjectRetain();
        uint64_t v23 = v23;
        unint64_t v71 = sub_1ACCAF0B8(a2, v23);
        swift_bridgeObjectRelease();

        if (v71 >> 62)
        {
          if (sub_1ACE77508())
          {
LABEL_72:
            id v148 = v66;
            if ((v71 & 0xC000000000000001) != 0)
            {
              unint64_t v72 = (char *)MEMORY[0x1AD119490](0, v71);
            }
            else
            {
              if (!*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_114;
              }
              unint64_t v72 = (char *)*(id *)(v71 + 32);
            }
            uint64_t v73 = v72;
            swift_bridgeObjectRelease();
            if (!objc_msgSend(v23, sel_subscriptionActive))
            {
              v133(v138, v135, v142);
              uint64_t v74 = v23;
              uint64_t v75 = sub_1ACE75498();
              os_log_type_t v76 = sub_1ACE76C08();
              BOOL v77 = os_log_type_enabled(v75, v76);
              uint64_t v141 = v73;
              if (v77)
              {
                uint64_t v78 = swift_slowAlloc();
                *(_DWORD *)uint64_t v78 = v125;
                unint64_t aBlock = 1752392040;
                sub_1ACE76FF8();
                *(_WORD *)(v78 + 12) = 2049;
                unint64_t aBlock = (unint64_t)objc_msgSend(v74, sel_storeId);
                uint64_t v73 = v141;
                sub_1ACE76FF8();

                _os_log_impl(&dword_1AC9D5000, v75, v76, "Setting channel %{private,mask.hash}lld to subscribed", (uint8_t *)v78, 0x16u);
                MEMORY[0x1AD11B340](v78, -1, -1);
              }
              else
              {

                uint64_t v75 = v74;
              }
              uint64_t v79 = (uint64_t)v128;

              v132(v138, v142);
              if (!*(void *)(*(void *)&v73[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 88))
              {
                (*v127)(v79, 1, 1, v145);
                goto LABEL_87;
              }
              if (qword_1EB76E118 != -1) {
                swift_once();
              }
              uint64_t v80 = (void *)qword_1EB76E110;
              uint64_t v81 = (void *)sub_1ACE76178();
              id v82 = objc_msgSend(v80, sel_dateFromString_, v81);

              if (v82)
              {
                uint64_t v83 = v123;
                sub_1ACE75078();

                uint64_t v84 = 0;
              }
              else
              {
                uint64_t v84 = 1;
                uint64_t v83 = v123;
              }
              uint64_t v85 = v145;
              (*v127)(v83, v84, 1, v145);
              sub_1ACA909B4(v83, v79);
              if ((*v122)(v79, 1, v85) == 1)
              {
LABEL_87:
                sub_1ACA50E78(v79, (uint64_t *)&unk_1EB773140);
                double v86 = 0.0;
              }
              else
              {
                sub_1ACE74FB8();
                double v86 = v87;
                ((void (*)(uint64_t, uint64_t))v10)(v79, v145);
              }
              BOOL v88 = v137;
              objc_msgSend(*(id *)&v137[v131], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v74, 1, v86);
              uint64_t v89 = *(void *)&v140[(void)v88];
              swift_retain();
              uint64_t v90 = (uint64_t)objc_msgSend(v74, sel_storeId);
              char v152 = &type metadata for Podcasts;
              unint64_t v91 = sub_1ACA56248();
              unint64_t v153 = v91;
              LOBYTE(aBlock) = 33;
              char v92 = sub_1ACE75298();
              __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
              if (v92)
              {
                uint64_t v93 = *(void **)(*(void *)(v89 + 16) + 16);
                uint64_t v10 = swift_allocObject();
                swift_weakInit();
                uint64_t v94 = swift_allocObject();
                *(void *)(v94 + 16) = v10;
                *(void *)(v94 + 24) = v90 & ~(v90 >> 63);
                *(unsigned char *)(v94 + 32) = 0;
                unint64_t v153 = (unint64_t)sub_1ACAF7A9C;
                uint64_t v154 = v94;
                unint64_t aBlock = MEMORY[0x1E4F143A8];
                uint64_t v150 = 1107296256;
                uint64_t v151 = sub_1ACA6DA9C;
                char v152 = (ValueMetadata *)&block_descriptor_70;
                uint64_t v95 = _Block_copy(&aBlock);
                swift_release();
                objc_msgSend(v93, sel_performBlock_, v95);
                _Block_release(v95);
                char v152 = &type metadata for Podcasts;
                unint64_t v153 = v91;
                LOBYTE(aBlock) = 37;
                char v96 = sub_1ACE75298();
                __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
                if (v96)
                {
                  uint64_t v97 = *(void *)(v89 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
                  swift_beginAccess();
                  sub_1ACA3E158(v97, (uint64_t)&aBlock);
                  unint64_t v98 = v152;
                  unint64_t v99 = v153;
                  __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v152);
                  (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v99 + 280))(1, v98, v99);
                  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
                }
                swift_release();
                a4 = v124;
              }
              else
              {
                swift_release();
              }
              id v100 = v141;
              uint64_t v101 = (uint64_t)objc_msgSend(v74, sel_storeId);
              unint64_t aBlock = v101 & ~(v101 >> 63);
              sub_1ACA55E4C();
              uint64_t v102 = sub_1ACE770B8();
              uint64_t v104 = v103;
              swift_beginAccess();
              sub_1ACD3007C(&v155, v102, v104);
              swift_endAccess();

              swift_bridgeObjectRelease();
              a2 = v146;
              unint64_t v13 = v143;
              id v66 = v148;
LABEL_105:
              unint64_t v65 = v139;
              goto LABEL_65;
            }

            id v66 = v148;
            goto LABEL_65;
          }
        }
        else if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_72;
        }
        swift_bridgeObjectRelease();
        if (objc_msgSend(v23, sel_subscriptionActive))
        {
          v133(v130, v135, v142);
          uint64_t v105 = v23;
          uint64_t v106 = sub_1ACE75498();
          os_log_type_t v107 = sub_1ACE76C08();
          uint64_t v10 = a4;
          if (os_log_type_enabled(v106, v107))
          {
            uint64_t v108 = swift_slowAlloc();
            *(_DWORD *)uint64_t v108 = v125;
            *(void *)(v108 + 4) = 1752392040;
            *(_WORD *)(v108 + 12) = 2049;
            *(void *)(v108 + 14) = objc_msgSend(v105, sel_storeId);

            _os_log_impl(&dword_1AC9D5000, v106, v107, "Setting channel %{private,mask.hash}lld to not subscribed", (uint8_t *)v108, 0x16u);
            MEMORY[0x1AD11B340](v108, -1, -1);
          }
          else
          {

            uint64_t v106 = v105;
          }

          v132(v130, v142);
          uint64_t v109 = v137;
          objc_msgSend(*(id *)&v137[v131], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v105, 0, 0.0);
          uint64_t v110 = *(void *)&v140[(void)v109];
          swift_retain();
          uint64_t v111 = (uint64_t)objc_msgSend(v105, sel_storeId);
          char v152 = &type metadata for Podcasts;
          unint64_t v112 = sub_1ACA56248();
          unint64_t v153 = v112;
          LOBYTE(aBlock) = 33;
          char v113 = sub_1ACE75298();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
          if ((v113 & 1) == 0)
          {

            swift_release();
            a2 = v146;
            unint64_t v13 = v143;
            unint64_t v65 = v139;
            goto LABEL_65;
          }
          id v148 = v66;
          unint64_t v114 = *(void **)(*(void *)(v110 + 16) + 16);
          uint64_t v10 = swift_allocObject();
          swift_weakInit();
          uint64_t v115 = swift_allocObject();
          *(void *)(v115 + 16) = v10;
          *(void *)(v115 + 24) = v111 & ~(v111 >> 63);
          unint64_t v153 = (unint64_t)sub_1ACAF7AE0;
          uint64_t v154 = v115;
          unint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v150 = 1107296256;
          uint64_t v151 = sub_1ACA6DA9C;
          char v152 = (ValueMetadata *)&block_descriptor_77_0;
          uint64_t v116 = _Block_copy(&aBlock);
          swift_release();
          objc_msgSend(v114, sel_performBlock_, v116);
          _Block_release(v116);
          char v152 = &type metadata for Podcasts;
          unint64_t v153 = v112;
          LOBYTE(aBlock) = 37;
          char v117 = sub_1ACE75298();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
          if (v117)
          {
            uint64_t v118 = *(void *)(v110 + 24) + OBJC_IVAR____TtC18PodcastsFoundation18SyncKeysRepository_syncKeysStore;
            swift_beginAccess();
            sub_1ACA3E158(v118, (uint64_t)&aBlock);
            uint64_t v119 = v152;
            unint64_t v120 = v153;
            __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v152);
            (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v120 + 280))(1, v119, v120);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
          }

          swift_release();
          a2 = v146;
          unint64_t v13 = v143;
          id v66 = v148;
          a4 = v124;
          goto LABEL_105;
        }

LABEL_65:
        ++v25;
        if (v14 == a4)
        {

          return swift_bridgeObjectRelease();
        }
      }
    }

    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v50 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, unint64_t))(v14 + 16))(v21, v50, v13);
    os_log_type_t v51 = sub_1ACE76BE8();
    uint64_t v52 = sub_1ACE75498();
    if (os_log_type_enabled(v52, v51))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_1AC9D5000, v52, v51, "Could not unwrap self in PurchaseController. Cannot update subscriptions.", v53, 2u);
      MEMORY[0x1AD11B340](v53, -1, -1);
    }

    return (*(uint64_t (**)(char *, unint64_t))(v14 + 8))(v21, v13);
  }
}

uint64_t type metadata accessor for PurchaseControllerWrapper()
{
  return self;
}

uint64_t method lookup function for PurchaseControllerWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PurchaseControllerWrapper);
}

uint64_t dispatch thunk of PurchaseControllerWrapper.forceFetchLatestChannelUpdates()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of PurchaseControllerWrapper.fetchChannelUpdatesCheckingEntitlementsNotification()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PurchaseControllerWrapper.syncMusicSubscriptionInformation()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1ACAF7104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB767BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_1ACAF716C(void *a1, void *a2, char *a3)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC68], v6);
  uint64_t v10 = a3;
  sub_1ACE75E08();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1ACAF7B08((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  *(void *)&a3[v19] = sub_1ACE76D28();
  sub_1ACE74FD8();
  *(void *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_syncSession] = 0;
  uint64_t v11 = &v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_appleMusicSegmentKey];
  *(void *)uint64_t v11 = 0x746E656D676573;
  *((void *)v11 + 1) = 0xE700000000000000;
  uint64_t v12 = &v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_appleMusicSegmentValue];
  *(void *)uint64_t v12 = 0x636973754DLL;
  *((void *)v12 + 1) = 0xE500000000000000;
  unint64_t v13 = v20;
  uint64_t v14 = v21;
  *(void *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag] = v20;
  *(void *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_accountStore] = v14;
  id v15 = v13;
  id v16 = v14;

  uint64_t v17 = (objc_class *)type metadata accessor for MusicSubscriptionInfoSyncUtil();
  v22.receiver = v10;
  v22.super_class = v17;
  return objc_msgSendSuper2(&v22, sel_init);
}

uint64_t sub_1ACAF7490()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACAF74C8(uint64_t a1)
{
  sub_1ACAF09EC(a1, v1);
}

void sub_1ACAF74D0()
{
  sub_1ACAF1310(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACAF74E0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACAF7518()
{
  return sub_1ACAF21B8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1ACAF7524()
{
  return swift_deallocObject();
}

uint64_t sub_1ACAF7534()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7574(void *a1, uint64_t a2)
{
  return sub_1ACAF23C4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACAF757C()
{
  return swift_deallocObject();
}

uint64_t sub_1ACAF75B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACAF2D8C(a1, a2, a3, a4, a5, *(void **)(v5 + 16));
}

uint64_t sub_1ACAF75BC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAF75FC()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7830()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7878()
{
  return sub_1ACAF3088(*(void **)(v0 + 16), *(uint64_t (**)(char *, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

unsigned char *sub_1ACAF7884(unsigned char *a1)
{
  return sub_1ACE0122C(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_1ACAF78A0(uint64_t *a1)
{
  return sub_1ACAF4990(*a1, *(void *)(v1 + 16), *(void **)(v1 + 24)) & 1;
}

uint64_t sub_1ACAF78CC()
{
  return 16;
}

__n128 sub_1ACAF78D8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACAF78E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7924()
{
  return sub_1ACAF594C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1ACAF792C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACAF7994()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACAF79CC()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7A1C()
{
  return sub_1ACAF5A38(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACAF7A2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7A64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAF7A9C()
{
  return sub_1ACC1D564(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1ACAF7AA8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACAF7AE0()
{
  sub_1ACC1DF54(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

BOOL sub_1ACAF7AE8(double *a1)
{
  return sub_1ACCAAC9C(a1);
}

uint64_t sub_1ACAF7B08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACAF7B50()
{
  return sub_1ACAF0D20(*(void **)(v0 + 16));
}

void __swiftcall ServerPodcast.toFeed()(IMPodcastFeed *__return_ptr retstr)
{
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone((Class)IMPodcastFeed), sel_init);
  uint64_t v7 = v6;
  unint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (!v8)
  {
    objc_msgSend(v6, sel_setFeedDescription_, 0);
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(v8 + 104);
  if (!v9)
  {
    uint64_t v10 = 0;
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (*(void *)(v9 + 24))
  {
    swift_bridgeObjectRetain();
LABEL_8:
    uint64_t v10 = (void *)sub_1ACE76178();
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_8;
  }
  uint64_t v10 = 0;
LABEL_10:
  objc_msgSend(v7, sel_setFeedDescription_, v10);

  if (*(void *)(v8 + 24))
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v12 = 0;
LABEL_13:
  objc_msgSend(v7, sel_setAuthor_, v12);

  if (!v8)
  {
    objc_msgSend(v7, sel_setCategory_, 0);
    goto LABEL_25;
  }
  uint64_t v13 = *(void *)(v8 + 208);
  if (v13 && *(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  objc_msgSend(v7, sel_setCategory_, v14);

  uint64_t v15 = *(void *)(v8 + 112);
  if (!v15) {
    goto LABEL_25;
  }
  if (!*(void *)(v15 + 56) || (*(unsigned char *)(v15 + 24) & 1) != 0 || (*(unsigned char *)(v15 + 40) & 1) != 0)
  {
    uint64_t v16 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
LABEL_23:
    sub_1ACA50E78((uint64_t)v5, &qword_1EB7731B0);
LABEL_25:
    uint64_t v17 = 0;
    goto LABEL_26;
  }
  uint64_t v60 = *(void *)(v15 + 16);
  uint64_t v61 = *(void *)(v15 + 32);
  type metadata accessor for ArtworkFormatter();
  swift_retain();
  static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(0, (uint64_t)v5, (double)v60, (double)v61);
  swift_release();
  uint64_t v62 = sub_1ACE74F28();
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v5, 1, v62) == 1) {
    goto LABEL_23;
  }
  sub_1ACE74DD8();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v5, v62);
  uint64_t v17 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
LABEL_26:
  objc_msgSend(v7, sel_setImageURL_, v17);

  if (v8)
  {
    if (*(void *)(v8 + 24))
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = 0;
    }
    objc_msgSend(v7, sel_setProvider_, v18);

    if (*(void *)(v8 + 96))
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  else
  {
    objc_msgSend(v7, sel_setProvider_, 0);
  }
  uint64_t v19 = 0;
LABEL_34:
  objc_msgSend(v7, sel_setTitle_, v19);

  if (v8)
  {
    if (!*(void *)(v8 + 184)
      || (swift_bridgeObjectRetain(), uint64_t v20 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v20 != 1))
    {
      LOBYTE(v2sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE77848();
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setIsExplicit_, v20 & 1);
    int v21 = *(unsigned __int8 *)(v8 + 48);
    BOOL v23 = (v21 & 1) == 0 && v21 != 2;
    objc_msgSend(v7, sel_setIsNotSubscribable_, v23);
    if (*(void *)(v8 + 40))
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
    }
    objc_msgSend(v7, sel_setShareURL_, v24);

    if (*(void *)(v8 + 144))
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
  }
  else
  {
    objc_msgSend(v7, sel_setIsExplicit_, 0);
    objc_msgSend(v7, sel_setIsNotSubscribable_, 0);
    objc_msgSend(v7, sel_setShareURL_, 0);
  }
  uint64_t v25 = 0;
LABEL_51:
  objc_msgSend(v7, sel_setShowType_, v25);

  if (v8)
  {
    if (*(void *)(v8 + 200))
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = 0;
    }
    objc_msgSend(v7, sel_setWebpageURL_, v26);

    uint64_t v27 = *(void *)(v8 + 152);
    if (v27)
    {
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        if (*(void *)(v28 + 56))
        {
          swift_bridgeObjectRetain();
          os_log_type_t v29 = (void *)sub_1ACE76178();
          swift_bridgeObjectRelease();
          goto LABEL_61;
        }
      }
    }
  }
  else
  {
    objc_msgSend(v7, sel_setWebpageURL_, 0);
  }
  os_log_type_t v29 = 0;
LABEL_61:
  objc_msgSend(v7, sel_setUberBackgroundImageURL_, v29);

  if (v8)
  {
    uint64_t v30 = *(void *)(v8 + 152);
    if (v30 && (uint64_t v31 = *(void *)(v30 + 16)) != 0 && *(void *)(v31 + 72))
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
    }
    objc_msgSend(v7, sel_setUberBackgroundJoeColor_, v32);

    uint64_t v33 = *(void *)(v8 + 56);
    BOOL v34 = *(void **)(v8 + 64);
    swift_bridgeObjectRetain();
    v35._countAndFlagsBits = v33;
    v35._object = v34;
    PodcastAttributes.DisplayType.init(rawValue:)(v35);
    id v36 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(v7, sel_setUberBackgroundJoeColor_, 0);
    id v36 = 0;
  }
  objc_msgSend(v7, sel_setDisplayType_, v36);

  id v37 = (void *)sub_1ACE76178();
  objc_msgSend(v7, sel_setPodcastStoreId_, v37);

  if (!v8)
  {
    objc_msgSend(v7, sel_setArtworkPrimaryColor_, 0);
LABEL_77:
    unint64_t v40 = 0;
    goto LABEL_78;
  }
  uint64_t v38 = *(void *)(v8 + 112);
  if (v38 && *(void *)(v38 + 72))
  {
    swift_bridgeObjectRetain();
    unint64_t v39 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v39 = 0;
  }
  objc_msgSend(v7, sel_setArtworkPrimaryColor_, v39);

  if (!*(void *)(v8 + 80)) {
    goto LABEL_77;
  }
  swift_bridgeObjectRetain();
  unint64_t v40 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
LABEL_78:
  objc_msgSend(v7, sel_setResolvedFeedURL_, v40);

  uint64_t v41 = *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_relationships);
  if (v41 && (uint64_t v42 = *(void *)(v41 + 16)) != 0)
  {
    unint64_t v43 = *(void *)(v42 + 16);
    if (v43 >> 62) {
      goto LABEL_117;
    }
    id v44 = *(id *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v44) {
      goto LABEL_82;
    }
LABEL_118:
    swift_bridgeObjectRelease();
    id v47 = 0;
  }
  else
  {
    id v47 = 0;
    id v44 = 0;
  }
LABEL_87:
  objc_msgSend(v7, sel_setChannelItem_, v47, v65);

  if (v8 && *(void *)(v8 + 240))
  {
    swift_bridgeObjectRetain();
    id v48 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v48 = 0;
  }
  objc_msgSend(v7, sel_setShowSpecificUpsellCopy_, v48);

  id v49 = (void *)(v2 + OBJC_IVAR___MTServerPodcast_episodes);
  swift_beginAccess();
  if (*v49)
  {
    id v50 = v44;
    unint64_t v51 = swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    sub_1ACAF9AD4(v51);
    swift_bridgeObjectRelease();

    sub_1ACA50D4C(0, &qword_1EB768ED0);
    uint64_t v52 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    objc_msgSend(v52, sel_mutableCopy);

    sub_1ACE770C8();
    swift_unknownObjectRelease();
    sub_1ACA50D4C(0, &qword_1EB768EA8);
    if (swift_dynamicCast()) {
      uint64_t v53 = v68;
    }
    else {
      uint64_t v53 = 0;
    }
    objc_msgSend(v7, sel_setItems_, v53);

    if (!v8) {
      goto LABEL_122;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if (!v8) {
      goto LABEL_122;
    }
  }
  unint64_t v54 = *(void *)(v8 + 224);
  if (!v54) {
    goto LABEL_122;
  }
  uint64_t v66 = MEMORY[0x1E4FBC860];
  if (v54 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v55 = sub_1ACE77508();
    if (v55) {
      goto LABEL_101;
    }
  }
  else
  {
    uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v55)
    {
LABEL_101:
      id v65 = v44;
      uint64_t v56 = 4;
      while (1)
      {
        uint64_t v57 = v56 - 4;
        if ((v54 & 0xC000000000000001) != 0)
        {
          unint64_t v43 = MEMORY[0x1AD119490](v56 - 4, v54);
          uint64_t v58 = v56 - 3;
          if (__OFADD__(v57, 1)) {
            goto LABEL_116;
          }
        }
        else
        {
          unint64_t v43 = *(void *)(v54 + 8 * v56);
          swift_retain();
          uint64_t v58 = v56 - 3;
          if (__OFADD__(v57, 1))
          {
LABEL_116:
            __break(1u);
LABEL_117:
            swift_bridgeObjectRetain();
            id v44 = (id)sub_1ACE77508();
            if (!v44) {
              goto LABEL_118;
            }
LABEL_82:
            if ((v43 & 0xC000000000000001) != 0)
            {
              id v45 = (id)MEMORY[0x1AD119490](0, v43);
            }
            else
            {
              if (!*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                __break(1u);
                JUMPOUT(0x1ACAF882CLL);
              }
              id v45 = *(id *)(v43 + 32);
            }
            unint64_t v46 = v45;
            swift_bridgeObjectRelease();
            id v44 = v46;
            id v47 = sub_1ACAF883C();

            goto LABEL_87;
          }
        }
        uint64_t v68 = (void *)v43;
        sub_1ACAF8CC8((uint64_t *)&v68, &v67);
        uint64_t v59 = swift_release();
        if (v67)
        {
          MEMORY[0x1AD118700](v59);
          unint64_t v8 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v8 >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
        }
        ++v56;
        if (v58 == v55)
        {
          swift_bridgeObjectRelease();
          id v44 = v65;
          goto LABEL_121;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_121:
  swift_bridgeObjectRelease();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768E98);
  uint64_t v64 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setOffers_, v64);

LABEL_122:
}

id sub_1ACAF883C()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)IMPodcastFeedChannelItem), sel_init);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setName_, v3);

  if (*(unsigned char *)(v2 + 56)) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *(void *)(v2 + 48);
  }
  objc_msgSend(v1, sel_setShowCount_, v4);
  if (*(unsigned char *)(v2 + 72)) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)(v2 + 64);
  }
  objc_msgSend(v1, sel_setAvailableShowCount_, v5);
  id v6 = (void *)sub_1ACE76178();
  objc_msgSend(v1, sel_setStoreId_, v6);

  uint64_t v7 = *(void *)(v2 + 24);
  if (v7 && *(void *)(v7 + 56))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v8 = 0;
  }
  objc_msgSend(v1, sel_setArtworkURL_, v8);

  uint64_t v9 = *(void *)(v2 + 128);
  if (v9 && *(void *)(v9 + 56))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    uint64_t v10 = 0;
  }
  objc_msgSend(v1, sel_setLogoImageURL_, v10);

  if (!v9)
  {
    objc_msgSend(v1, sel_setLogoImageHeight_, 0.0);
LABEL_21:
    uint64_t v13 = 0;
    goto LABEL_22;
  }
  double v11 = 0.0;
  if ((*(unsigned char *)(v9 + 40) & 1) == 0) {
    *(float *)&double v11 = (float)*(uint64_t *)(v9 + 32);
  }
  objc_msgSend(v1, sel_setLogoImageHeight_, v11);
  if (*(unsigned char *)(v9 + 24) == 1) {
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)(v9 + 16);
LABEL_22:
  *(float *)&double v12 = (float)v13;
  objc_msgSend(v1, sel_setLogoImageWidth_, v12);
  uint64_t v14 = *(void *)(v2 + 112);
  if (v14 && (uint64_t v15 = *(void *)(v14 + 32)) != 0 && *(void *)(v15 + 56))
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  objc_msgSend(v1, sel_setUberBackgroundImageURL_, v16);

  uint64_t v17 = *(void *)(v2 + 112);
  if (v17 && (uint64_t v18 = *(void *)(v17 + 32)) != 0 && *(void *)(v18 + 72))
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  objc_msgSend(v1, sel_setUberBackgroundJoeColor_, v19);

  if (*(void *)(v2 + 144))
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  objc_msgSend(v1, sel_setBackgroundColor_, v20);

  if (*(void *)(v2 + 168))
  {
    swift_bridgeObjectRetain();
    int v21 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v21 = 0;
  }
  objc_msgSend(v1, sel_setUrl_, v21);

  if (*(unsigned __int8 *)(v2 + 73) - 1 < 2)
  {
    if (*(void *)(v2 + 152)) {
      unint64_t v22 = *(void *)(v2 + 152);
    }
    else {
      unint64_t v22 = MEMORY[0x1E4FBC860];
    }
    if (*(void *)(v2 + 120)) {
      unint64_t v23 = *(void *)(v2 + 120);
    }
    else {
      unint64_t v23 = MEMORY[0x1E4FBC860];
    }
    unint64_t v26 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA6FB18(v23);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setDisplayType_, v24);

  swift_release();
  return v1;
}

void sub_1ACAF8CC8(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  id v4 = objc_msgSend(objc_allocWithZone((Class)IMPodcastOffer), sel_init);
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v5 > 1)
  {
    id v6 = 0;
  }
  else
  {
    id v6 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_setKind_, v6);

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = *(void **)(v3 + 24);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  PriceType.init(rawValue:)(v9);
  switch(v11)
  {
    case 4:
      uint64_t v10 = 0;
      break;
    default:
      uint64_t v10 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      break;
  }
  objc_msgSend(v4, sel_setPriceType_, v10);

  *a2 = v4;
}

id sub_1ACAF8EB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  v80[0] = (char *)v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v80 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)v80 - v9;
  MEMORY[0x1F4188790](v8);
  double v12 = (char *)v80 - v11;
  id v13 = objc_msgSend(objc_allocWithZone((Class)IMPodcastFeedItem), sel_init);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (*(void *)(v14 + 24))
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  objc_msgSend(v13, sel_setAuthor_, v15);

  uint64_t v16 = *(void *)(v14 + 248);
  if (v16 && *(void *)(v16 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  objc_msgSend(v13, sel_setCategory_, v17);

  if (!*(void *)(v14 + 224)
    || (swift_bridgeObjectRetain(), uint64_t v18 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v18 != 1))
  {
    LOBYTE(v18) = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setIsExplicit_, v18 & 1);
  if (*(void *)(v14 + 328))
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  objc_msgSend(v13, sel_setGuid_, v19);

  if (*(void *)(v14 + 184)) {
    goto LABEL_15;
  }
  uint64_t v21 = *(void *)(v14 + 112);
  if (v21 && *(void *)(v21 + 24))
  {
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v20 = 0;
LABEL_20:
  objc_msgSend(v13, sel_setItemDescription_, v20);

  uint64_t v22 = *(void *)(v14 + 112);
  v80[1] = v1;
  if (v22)
  {
    if (*(void *)(v22 + 24))
    {
LABEL_24:
      swift_bridgeObjectRetain();
      unint64_t v23 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    if (*(void *)(v22 + 40))
    {
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
  }
  unint64_t v23 = 0;
LABEL_26:
  objc_msgSend(v13, sel_setItemSummary_, v23);

  PodcastEpisodeAttributes.releaseDateResolved.getter((uint64_t)v12);
  uint64_t v24 = sub_1ACE750A8();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v27 = 0;
  if (v26(v12, 1, v24) != 1)
  {
    uint64_t v27 = (void *)sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
  }
  objc_msgSend(v13, sel_setPubDate_, v27);

  uint64_t v28 = *(void **)(v14 + 208);
  if (v28)
  {
    char v82 = 1;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v82, v7);
    if (v26(v7, 1, v24) == 1)
    {
      char v81 = 0;
      PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v81, v10);
      sub_1ACA50E78((uint64_t)v7, (uint64_t *)&unk_1EB773140);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v10, v7, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v24);
    }
    swift_release();
    if (v26(v10, 1, v24) == 1)
    {
      uint64_t v28 = 0;
    }
    else
    {
      uint64_t v28 = (void *)sub_1ACE75008();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v10, 1, 1, v24);
  }
  os_log_type_t v29 = (char *)v80[0];
  objc_msgSend(v13, sel_setFirstTimeAvailableAsFree_, v28);

  uint64_t v30 = *(void **)(v14 + 208);
  if (v30)
  {
    v83[0] = 2;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(v83, v29);
    swift_release();
    if (v26(v29, 1, v24) == 1)
    {
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = (void *)sub_1ACE75008();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v29, 1, 1, v24);
  }
  objc_msgSend(v13, sel_setFirstTimeAvailableAsPaid_, v30);

  if (*(void *)(v14 + 88))
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = 0;
  }
  objc_msgSend(v13, sel_setTitle_, v31);

  if (*(void *)(v14 + 104))
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
  }
  objc_msgSend(v13, sel_setItunesTitle_, v32);

  PodcastEpisodeAttributes.uti.getter();
  if (v33)
  {
    BOOL v34 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v34 = 0;
  }
  objc_msgSend(v13, sel_setUti_, v34);

  if (*(unsigned char *)(v14 + 360)) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = *(void *)(v14 + 352);
  }
  objc_msgSend(v13, sel_setSeasonNumber_, v35);
  if (*(unsigned char *)(v14 + 344)) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = *(void *)(v14 + 336);
  }
  objc_msgSend(v13, sel_setEpisodeNumber_, v36);
  id v37 = *(void **)(v14 + 168);
  if (v37)
  {
    uint64_t v38 = *(void *)(v14 + 160);
    swift_bridgeObjectRetain();
    v39._countAndFlagsBits = v38;
    v39._object = v37;
    PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v39);
  }
  unint64_t v40 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setEpisodeType_, v40);

  if (*(void *)(v14 + 240))
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = 0;
  }
  objc_msgSend(v13, sel_setWebpageURL_, v41);

  uint64_t v42 = (void *)sub_1ACE76178();
  objc_msgSend(v13, sel_setEpisodeStoreId_, v42);

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v43, (Swift::Bool)&v87);
  uint64_t v45 = v44;
  char v46 = v87;
  double v48 = v47 / 1000.0;
  if (v49) {
    double v48 = 0.0;
  }
  objc_msgSend(v13, sel_setDuration_, v48);
  id v50 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setPriceType_, v50);

  if (v45)
  {
    unint64_t v51 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v51 = 0;
  }
  objc_msgSend(v13, sel_setEnclosureURL_, v51);

  v85[1] = v46;
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v52, (PodcastsFoundation::PriceType)&v86);
  uint64_t v54 = v53;
  int v55 = v86;
  if (v56)
  {
    uint64_t v57 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v57 = 0;
  }
  objc_msgSend(v13, sel_setFreeTranscriptIdentifier_, v57);

  if (v54)
  {
    uint64_t v58 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = 0;
  }
  objc_msgSend(v13, sel_setFreeTranscriptSnippet_, v58);

  if (v55 == 2)
  {
    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v59 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v13, sel_setFreeTranscriptProvider_, v59);

  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v60, (Swift::Bool)v85);
  uint64_t v62 = v61;
  double v64 = v63;
  char v66 = v65;
  char v67 = v85[0];
  uint64_t v68 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setEntitledPriceType_, v68);

  double v69 = v64 / 1000.0;
  if (v66) {
    double v69 = 0.0;
  }
  objc_msgSend(v13, sel_setEntitledDuration_, v69);
  if (v62)
  {
    double v70 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v70 = 0;
  }
  objc_msgSend(v13, sel_setEntitledEnclosureURL_, v70);

  v83[2] = v67;
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v71, (PodcastsFoundation::PriceType)&v84);
  uint64_t v73 = v72;
  int v74 = v84;
  if (v75)
  {
    os_log_type_t v76 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v76 = 0;
  }
  objc_msgSend(v13, sel_setEntitledTranscriptIdentifier_, v76);

  if (v73)
  {
    BOOL v77 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v77 = 0;
  }
  objc_msgSend(v13, sel_setEntitledTranscriptSnippet_, v77);

  if (v74 == 2)
  {
    uint64_t v78 = 0;
  }
  else
  {
    uint64_t v78 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v13, sel_setEntitledTranscriptProvider_, v78);

  return v13;
}

uint64_t sub_1ACAF9AD4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACE773D8();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1AD119490](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      sub_1ACAF8EB4();

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (v2 == v4) {
        return v7;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CompoundDownloadedAssetIssueIdentifier.init(identifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CompoundDownloadedAssetIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DBC8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD30);
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  double v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA90);
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v30[0] = *v2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E078);
  sub_1ACA51EA4(&qword_1EB76E080, &qword_1EB76E078);
  sub_1ACE75728();
  uint64_t v15 = *(void **)(a1 + 80);
  *(void *)&v30[0] = v15;
  uint64_t v16 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB76DBC0, &qword_1EB76DBC8);
  sub_1ACA93A6C();
  id v17 = v15;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v6);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1ACAFA130(v25, (uint64_t)v30);
  uint64_t v18 = swift_allocObject();
  long long v19 = v30[3];
  *(_OWORD *)(v18 + 48) = v30[2];
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v30[4];
  *(void *)(v18 + 96) = v31;
  long long v20 = v30[1];
  *(_OWORD *)(v18 + 16) = v30[0];
  *(_OWORD *)(v18 + 32) = v20;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD68);
  sub_1ACA51EA4(&qword_1EB76DD28, &qword_1EB76DD30);
  sub_1ACA51EA4(&qword_1EB76DD60, &qword_1EB76DD68);
  uint64_t v21 = v26;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v21);
  sub_1ACA51EA4(&qword_1EB76DA88, &qword_1EB76DA90);
  uint64_t v22 = v27;
  uint64_t v23 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v22);
  return v23;
}

uint64_t sub_1ACAFA0D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACAFA130(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACAFA18C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1ACAFA1D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v2 + 16, v4, v5);
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for CompoundDownloadedAssetIssueIdentifier()
{
  return &type metadata for CompoundDownloadedAssetIssueIdentifier;
}

id MTPodcast.syncType.getter()
{
  id result = objc_msgSend(v0, sel_displayType);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = MTDisplayTypeFromPersistentString(result);

    return (id)(v3 == 1);
  }
  return result;
}

void static ArtworkCrop.boundingBox.getter(_WORD *a1@<X8>)
{
  *a1 = 256;
}

uint64_t ArtworkCrop.cropCodeString.getter()
{
  uint64_t result = 25186;
  switch(*v0)
  {
    case 1:
      uint64_t result = 29299;
      break;
    case 2:
      uint64_t result = 29555;
      break;
    case 3:
      uint64_t result = 28006;
      break;
    case 4:
      uint64_t result = 28262;
      break;
    case 5:
      uint64_t result = 28518;
      break;
    case 6:
      uint64_t result = 24934;
      break;
    case 7:
      uint64_t result = 30309;
      break;
    case 8:
      uint64_t result = 30053;
      break;
    case 9:
      uint64_t result = 29797;
      break;
    case 0xA:
      uint64_t result = 0x4D7370552E545053;
      break;
    case 0xB:
      uint64_t result = 0x577370552E545053;
      break;
    case 0xC:
      uint64_t result = 0x547370552E545053;
      break;
    case 0xD:
      uint64_t result = 0x3042454C532E4553;
      break;
    case 0xE:
      uint64_t result = 0x544C424C532E4253;
      break;
    case 0xF:
      uint64_t result = 0x5452424C532E4253;
      break;
    default:
      return result;
  }
  return result;
}

void static ArtworkCrop.sr.getter(_WORD *a1@<X8>)
{
  *a1 = 1;
}

void static ArtworkCrop.searchEditorial.getter(_WORD *a1@<X8>)
{
  *a1 = 13;
}

void static ArtworkCrop.searchBackgroundLTR.getter(_WORD *a1@<X8>)
{
  *a1 = 14;
}

void static ArtworkCrop.searchBackgroundRTL.getter(_WORD *a1@<X8>)
{
  *a1 = 15;
}

void ArtworkCrop.cropCode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ArtworkCrop.preferredContentMode.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

char *static ArtworkCrop.from(_:)@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  char v3 = *((unsigned char *)&xmmword_1ACE8BD70 + v2);
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t sub_1ACAFA4D4()
{
  if (*v0) {
    return 0x4D746E65746E6F63;
  }
  else {
    return 0x65646F43706F7263;
  }
}

uint64_t sub_1ACAFA518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACAFAFB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACAFA540(uint64_t a1)
{
  unint64_t v2 = sub_1ACAFAB10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACAFA57C(uint64_t a1)
{
  unint64_t v2 = sub_1ACAFAB10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArtworkCrop.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771950);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ACA3E158((uint64_t)a1, (uint64_t)v13);
  sub_1ACAFAA68();
  sub_1ACAFAABC();
  sub_1ACE76508();
  if (v2)
  {

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACAFAB10();
    sub_1ACE77C48();
    char v14 = 0;
    sub_1ACE77698();
    char v10 = v13[0];
    char v14 = 1;
    sub_1ACAFAB64();
    sub_1ACE77698();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    char v11 = v13[0];
  }
  else
  {
    static ArtworkCrop.from(_:)(&v14, v13);
    char v10 = v13[0];
    char v11 = v13[1];
  }
  *a2 = v10;
  a2[1] = v11;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ArtworkCrop.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1ED8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[1] = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACAFAB10();
  sub_1ACE77C78();
  char v13 = v8;
  char v12 = 0;
  sub_1ACAFABB8();
  sub_1ACE77788();
  if (!v2)
  {
    char v11 = 1;
    sub_1ACE77778();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ACAFA978@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ArtworkCrop.init(from:)(a1, a2);
}

uint64_t sub_1ACAFA990(void *a1)
{
  return ArtworkCrop.encode(to:)(a1);
}

BOOL _s18PodcastsFoundation11ArtworkCropV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  int v3 = *(unsigned __int8 *)(a2 + 1);
  uint64_t v4 = CropCode.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == CropCode.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    return v2 == v3;
  }
  char v9 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v9) {
    return v2 == v3;
  }
  return result;
}

unint64_t sub_1ACAFAA68()
{
  unint64_t result = qword_1EB7714F0;
  if (!qword_1EB7714F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714F0);
  }
  return result;
}

unint64_t sub_1ACAFAABC()
{
  unint64_t result = qword_1EB7714E8;
  if (!qword_1EB7714E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7714E8);
  }
  return result;
}

unint64_t sub_1ACAFAB10()
{
  unint64_t result = qword_1EB770EC0;
  if (!qword_1EB770EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EC0);
  }
  return result;
}

unint64_t sub_1ACAFAB64()
{
  unint64_t result = qword_1EB770EE8;
  if (!qword_1EB770EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EE8);
  }
  return result;
}

unint64_t sub_1ACAFABB8()
{
  unint64_t result = qword_1E99F1EE0;
  if (!qword_1E99F1EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1EE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArtworkCrop(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 65292 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65292 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65292;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65292;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65292;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkCrop(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65292 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65292 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 244;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAFAD6CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkCrop()
{
  return &type metadata for ArtworkCrop;
}

unsigned char *storeEnumTagSinglePayload for ArtworkCrop.CK(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACAFAE70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkCrop.CK()
{
  return &type metadata for ArtworkCrop.CK;
}

unint64_t sub_1ACAFAEAC()
{
  unint64_t result = qword_1E99F1EE8;
  if (!qword_1E99F1EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1EE8);
  }
  return result;
}

unint64_t sub_1ACAFAF04()
{
  unint64_t result = qword_1EB770EB8;
  if (!qword_1EB770EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EB8);
  }
  return result;
}

unint64_t sub_1ACAFAF5C()
{
  unint64_t result = qword_1EB770EB0;
  if (!qword_1EB770EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770EB0);
  }
  return result;
}

uint64_t sub_1ACAFAFB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F43706F7263 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t MetricsTargetType.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsTargetType.debugDescription.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1ACAFB194()
{
  return MetricsTargetType.debugDescription.getter();
}

uint64_t MetricsTargetType.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsTargetType.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsTargetType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsTargetType.banner.getter()
{
  return 0x72656E6E6162;
}

uint64_t static MetricsTargetType.brick.getter()
{
  return 0x6B63697262;
}

uint64_t static MetricsTargetType.bubbleTip.getter()
{
  return 0x6954656C62627562;
}

uint64_t static MetricsTargetType.button.getter()
{
  return 0x6E6F74747562;
}

uint64_t static MetricsTargetType.category.getter()
{
  return 0x79726F6765746163;
}

uint64_t static MetricsTargetType.categoryBrick.getter()
{
  return 0x79726F6765746163;
}

uint64_t static MetricsTargetType.chapter.getter()
{
  return 0x72657470616863;
}

uint64_t static MetricsTargetType.description.getter()
{
  return 0x7470697263736564;
}

uint64_t static MetricsTargetType.episodeSwoosh.getter()
{
  return 0x5365646F73697065;
}

unint64_t static MetricsTargetType.episodeSwooshItem.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsTargetType.filter.getter()
{
  return 0x7265746C6966;
}

uint64_t static MetricsTargetType.hero.getter()
{
  return 1869768040;
}

uint64_t static MetricsTargetType.hintListItem.getter()
{
  return 0x7473694C746E6968;
}

unint64_t static MetricsTargetType.interactiveModule.getter()
{
  return 0xD000000000000011;
}

uint64_t static MetricsTargetType.key.getter()
{
  return 7955819;
}

uint64_t static MetricsTargetType.link.getter()
{
  return 1802398060;
}

uint64_t static MetricsTargetType.listItem.getter()
{
  return 0x6D6574497473696CLL;
}

uint64_t static MetricsTargetType.lockup.getter()
{
  return 0x70756B636F6CLL;
}

uint64_t static MetricsTargetType.powerSwoosh.getter()
{
  return 0x6F77537265776F70;
}

uint64_t static MetricsTargetType.powerSwooshItem.getter()
{
  return 0x6F77537265776F70;
}

uint64_t static MetricsTargetType.promoCard.getter()
{
  return 0x7261436F6D6F7270;
}

uint64_t static MetricsTargetType.ratings.getter()
{
  return 0x73676E69746172;
}

uint64_t static MetricsTargetType.swoosh.getter()
{
  return 0x68736F6F7773;
}

uint64_t static MetricsTargetType.tab.getter()
{
  return 6447476;
}

uint64_t static MetricsTargetType.tapToRate.getter()
{
  return 0x7461526F54706174;
}

uint64_t static MetricsTargetType.transcriptText.getter()
{
  return 0x697263736E617274;
}

unint64_t sub_1ACAFB5C8()
{
  unint64_t result = qword_1E99F1EF0;
  if (!qword_1E99F1EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1EF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsTargetType()
{
  return &type metadata for MetricsTargetType;
}

uint64_t sub_1ACAFB62C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t AutoDownloadProcessorDataSource.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id AutoDownloadProcessorDataSource.context.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t AutoDownloadProcessorDataSource.accountController.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACAFB69C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAFB6FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACAFB734(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ACAFB77C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACAFB7D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACAFB830()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACAFB868(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ACAFB8B0())()
{
  return j_j__swift_endAccess;
}

uint64_t AutoDownloadProcessorDataSource.__allocating_init(context:accountDataSource:workQueue:capacityMonitor:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  AutoDownloadProcessorDataSource.init(context:accountDataSource:workQueue:capacityMonitor:)(a1, a2, a3, a4);
  return v8;
}

uint64_t AutoDownloadProcessorDataSource.init(context:accountDataSource:workQueue:capacityMonitor:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  strcpy((char *)(v5 + 16), "AutoDownload");
  *(unsigned char *)(v5 + 29) = 0;
  *(_WORD *)(v5 + 3sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = -5120;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ACE84470;
  *(void *)(v10 + 32) = sub_1ACE761B8();
  *(void *)(v10 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v11;
  *(void *)(v10 + 48) = sub_1ACE761B8();
  *(void *)(v10 + 56) = v12;
  *(void *)(v10 + 64) = sub_1ACE761B8();
  *(void *)(v10 + 72) = v13;
  *(void *)(v5 + 48) = v10;
  *(void *)(v5 + 56) = 0;
  *(unsigned char *)(v5 + 96) = 1;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = a2;
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 72) = a4;
  *(_OWORD *)(v5 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = xmmword_1ACE8BF20;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = v5;
  id v15 = a3;
  swift_retain_n();
  id v16 = v15;
  id v17 = a1;
  swift_unknownObjectRetain();
  uint64_t v18 = a4;
  sub_1ACE6E734((uint64_t)v18, v16, v5);
  long long v19 = *(os_unfair_lock_s **)&v18[OBJC_IVAR___MTDeviceCapacityMonitor__capacityChangeObservers];
  swift_retain();
  os_unfair_lock_lock(v19 + 6);
  sub_1ACAFD07C();
  os_unfair_lock_unlock(v19 + 6);

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  *(void *)(v5 + 88) = 0;
  *(unsigned char *)(v5 + 96) = 0;
  return v5;
}

uint64_t sub_1ACAFBB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[0] = a2;
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a1;
  aBlock[4] = sub_1ACAFD628;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_26_1;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t AutoDownloadProcessorDataSource.deinit(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + 96) & 1) == 0)
  {
    uint64_t v2 = *(os_unfair_lock_s **)(*(void *)(v1 + 72) + OBJC_IVAR___MTDeviceCapacityMonitor__capacityChangeObservers);
    uint64_t v3 = MEMORY[0x1F4188790](a1);
    MEMORY[0x1F4188790](v3);
    swift_retain();
    os_unfair_lock_lock(v2 + 6);
    sub_1ACAFD634();
    os_unfair_lock_unlock(v2 + 6);
    swift_release();
  }
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t AutoDownloadProcessorDataSource.__deallocating_deinit(uint64_t a1)
{
  AutoDownloadProcessorDataSource.deinit(a1);
  return swift_deallocClassInstance();
}

id sub_1ACAFBF78()
{
  id v0 = objc_msgSend(self, sel_predicateForPodcastsToAutodownload);
  return v0;
}

uint64_t sub_1ACAFBFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v27 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DC70);
  uint64_t v30 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D928);
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v2 + 32);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a1;
  _DWORD v14[4] = a2;
  v14[5] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF70);
  swift_allocObject();
  id v15 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v16 = sub_1ACE75A18();
  id v17 = *(void **)(v2 + 64);
  id v32 = v17;
  uint64_t v33 = v16;
  uint64_t v18 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF60, &qword_1EB76DF70);
  sub_1ACA93A6C();
  id v19 = v17;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v8);

  swift_release();
  long long v20 = (void *)swift_allocObject();
  uint64_t v21 = v27;
  long long v20[2] = v3;
  v20[3] = v21;
  v20[4] = a2;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  sub_1ACA51EA4(&qword_1EB76DC68, (uint64_t *)&unk_1EB76DC70);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = v28;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v22);
  sub_1ACA51EA4(&qword_1EB76D920, &qword_1EB76D928);
  uint64_t v23 = v29;
  uint64_t v24 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v23);
  return v24;
}

void sub_1ACAFC3D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a1;
  void v12[6] = a2;
  v12[7] = a6;
  v15[4] = sub_1ACAFD58C;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_1ACA6DA9C;
  v15[3] = &block_descriptor_20;
  uint64_t v13 = _Block_copy(v15);
  id v14 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v13);
  _Block_release(v13);
}

void sub_1ACAFC4E8(void *a1, void *a2, uint64_t a3, void (*a4)(void **), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (void *)sub_1ACE76178();
  id v12 = objc_msgSend(a1, sel_podcastForUuid_, v11);

  if (v12)
  {
    if (os_feature_enabled_serial_sort_auto_downloads())
    {
      if (objc_msgSend(v12, sel_currentEpisodeLimitIsNextNEpisodes)) {
        __int16 v13 = 256;
      }
      else {
        __int16 v13 = 0;
      }
    }
    else
    {
      __int16 v13 = 0;
    }
    unsigned int v16 = objc_msgSend(v12, sel_currentEpisodeLimitAllowsAutomaticDownloads);
    id v17 = objc_msgSend(v12, sel_episodeLimitResolvedValue);
    unsigned __int16 v18 = (unsigned __int16)objc_msgSend(v12, sel_deletePlayedEpisodesResolvedValue);
    id v19 = objc_msgSend(*(id *)(a6 + 40), sel_activeDsid);
    if (v19)
    {

      int v20 = 0;
    }
    else
    {
      int v20 = 0x10000;
    }
    uint64_t v21 = a2;
    uint64_t v22 = a3;
    uint64_t v23 = v16;
    *(void *)uint64_t v24 = v17;
    v24[10] = BYTE2(v20);
    *(_WORD *)&v24[8] = v13 | v18 | v20;
    char v25 = 0;
    swift_bridgeObjectRetain();
    a4(&v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACAFD59C();
    id v14 = (void *)swift_allocError();
    *id v15 = a2;
    v15[1] = a3;
    uint64_t v21 = v14;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    memset(v24, 0, sizeof(v24));
    char v25 = 1;
    swift_bridgeObjectRetain();
    a4(&v21);
  }
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.init(showUUID:autoDownloadEnabled:episodeLimit:deletePlayedEpisodes:serialNextEpisodesSort:includePlayableWithoutAccount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5;
  *(unsigned char *)(a8 + 33) = a6;
  *(unsigned char *)(a8 + 34) = a7;
  return result;
}

void sub_1ACAFC6C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 1 && !*(void *)(a2 + 80))
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v16 = *(unsigned __int8 *)(a1 + 32);
    uint64_t v17 = *(unsigned __int8 *)(a1 + 33);
    uint64_t v18 = *(unsigned __int8 *)(a1 + 34);
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1ACE754C8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB768C28);
    swift_bridgeObjectRetain_n();
    int v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76BC8();
    if (os_log_type_enabled(v20, v21))
    {
      unsigned int v29 = v18;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v36 = v28;
      *(_DWORD *)uint64_t v22 = 136446210;
      v30[1] = v14;
      char v31 = 1;
      uint64_t v32 = v15;
      char v33 = v16;
      char v34 = v17;
      char v35 = v29;
      uint64_t v23 = AutoDownloadProcessorDataSource.AutoDownloadContext.description.getter();
      v30[0] = sub_1ACA3189C(v23, v24, &v36);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v20, v21, "Creating autodownload predicate with context: %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v17 = v17;
      MEMORY[0x1AD11B340](v28, -1, -1);
      char v25 = v22;
      uint64_t v18 = v29;
      MEMORY[0x1AD11B340](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v26 = self;
    uint64_t v27 = (void *)sub_1ACE76178();
    id v13 = objc_msgSend(v26, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v27, v16, v15, v17, v18);
  }
  else
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1ACE754C8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB768C28);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1ACE75498();
    os_log_type_t v10 = sub_1ACE76C08();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v30[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1ACA3189C(a3, a4, v30);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v9, v10, "AutoDownloads unavailable for show %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v12, -1, -1);
      MEMORY[0x1AD11B340](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v13 = objc_msgSend(self, sel_falsePredicate);
  }
  *a5 = v13;
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.showUUID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.autoDownloadEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.episodeLimit.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.deletePlayedEpisodes.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.serialNextEpisodesSort.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.includePlayableWithoutAccount.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t AutoDownloadProcessorDataSource.AutoDownloadContext.description.getter()
{
  return 0;
}

void AutoDownloadProcessorDataSource.AutoDownloadContext.init(show:accountController:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_uuid);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1ACE761B8();
    uint64_t v10 = v9;

    if (os_feature_enabled_serial_sort_auto_downloads())
    {
      if (objc_msgSend(a1, sel_currentEpisodeLimitIsNextNEpisodes)) {
        __int16 v11 = 256;
      }
      else {
        __int16 v11 = 0;
      }
    }
    else
    {
      __int16 v11 = 0;
    }
    unsigned int v12 = objc_msgSend(a1, sel_currentEpisodeLimitAllowsAutomaticDownloads);
    id v13 = objc_msgSend(a1, sel_episodeLimitResolvedValue);
    unsigned __int16 v14 = (unsigned __int16)objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue);
    id v15 = objc_msgSend(a2, sel_activeDsid);
    swift_unknownObjectRelease();

    if (v15)
    {

      int v16 = 0;
    }
    else
    {
      int v16 = 0x10000;
    }
    *(void *)a3 = v8;
    *(void *)(a3 + 8) = v10;
    *(void *)(a3 + 16) = v12;
    *(void *)(a3 + 24) = v13;
    *(unsigned char *)(a3 + 34) = BYTE2(v16);
    *(_WORD *)(a3 + 32) = v11 | v14 | v16;
  }
  else
  {

    swift_unknownObjectRelease();
    *(_DWORD *)(a3 + 31) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

id AutoDownloadProcessorDataSource.AutoDownloadContext.predicate.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 33);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 34);
  uint64_t v5 = self;
  id v6 = (void *)sub_1ACE76178();
  id v7 = objc_msgSend(v5, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v6, v2, v1, v3, v4);

  return v7;
}

uint64_t sub_1ACAFCF48(uint64_t a1, uint64_t a2)
{
  return sub_1ACAFBFB8(a1, a2);
}

uint64_t sub_1ACAFCF6C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACAFCFA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACAFCFE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACAFD028()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACAFD068(uint64_t a1)
{
  return sub_1ACAFBB90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1ACAFD070(uint64_t a1)
{
  return sub_1ACE6D184(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACAFD07C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1ACAFD0AC(void *a1)
{
  return sub_1ACE6D280(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACAFD0B4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACAFD0FC(uint64_t a1, uint64_t a2)
{
  sub_1ACAFC3D0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACAFD108()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACAFD148(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1ACAFC6C8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1ACAFD154@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACAFD1A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AutoDownloadProcessorDataSource()
{
  return self;
}

uint64_t method lookup function for AutoDownloadProcessorDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AutoDownloadProcessorDataSource);
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedShowKeys.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedShowKeys.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedShowKeys.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedEpisodeKeys.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedEpisodeKeys.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.observedEpisodeKeys.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.__allocating_init(context:accountDataSource:workQueue:capacityMonitor:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.showsPredicate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of AutoDownloadProcessorDataSource.predicate(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t initializeWithCopy for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t assignWithTake for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 35)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadProcessorDataSource.AutoDownloadContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 35) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadProcessorDataSource.AutoDownloadContext()
{
  return &type metadata for AutoDownloadProcessorDataSource.AutoDownloadContext;
}

uint64_t sub_1ACAFD53C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACAFD58C()
{
  sub_1ACAFC4E8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void **))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

unint64_t sub_1ACAFD59C()
{
  unint64_t result = qword_1E99F1EF8;
  if (!qword_1E99F1EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1EF8);
  }
  return result;
}

uint64_t sub_1ACAFD5F0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACAFD628()
{
  *(void *)(*(void *)(v0 + 16) + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(void *)(v0 + 24);
}

uint64_t sub_1ACAFD634()
{
  return sub_1ACAFD07C();
}

uint64_t MetricsActionResult.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsActionResult.debugDescription.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1ACAFD724()
{
  return MetricsActionResult.debugDescription.getter();
}

uint64_t MetricsActionResult.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsActionResult.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsActionResult.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsActionResult.app.getter()
{
  return 7368801;
}

uint64_t static MetricsActionResult.appStore.getter()
{
  return 0x65726F7453707061;
}

uint64_t static MetricsActionResult.upsell.getter()
{
  return 0x6C6C65737075;
}

unint64_t sub_1ACAFD900()
{
  unint64_t result = qword_1E99F1F00;
  if (!qword_1E99F1F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F1F00);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsActionResult()
{
  return &type metadata for MetricsActionResult;
}

uint64_t static EpisodePlayState.initialState.getter()
{
  type metadata accessor for EpisodePlayState();
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for EpisodePlayState()
{
  uint64_t result = qword_1EB772638;
  if (!qword_1EB772638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static EpisodePlayState.defaultState.getter()
{
  type metadata accessor for EpisodePlayState();
  return swift_storeEnumTagMultiPayload();
}

uint64_t EpisodePlayState.dictionaryKey.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x646579616C706E75;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t result = 0x6C616974726170;
      break;
    case 2:
      sub_1ACA50E78((uint64_t)v3, (uint64_t *)&unk_1EB773140);
      uint64_t result = 0x646579616C70;
      break;
    case 3:
      unsigned int v6 = 2036427888;
      goto LABEL_6;
    case 4:
      return result;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      unsigned int v6 = 1684956528;
LABEL_6:
      uint64_t result = v6 | 0x676E6900000000;
      break;
  }
  return result;
}

uint64_t sub_1ACAFDB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL EpisodePlayState.isEpisodePlaying.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EpisodePlayState();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1ACAFDB90(v1, (uint64_t)&v10 - v6);
  BOOL v8 = 0;
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1ACAFDB90((uint64_t)v7, (uint64_t)v5);
    if (v5[16] != 1) {
      BOOL v8 = 1;
    }
  }
  sub_1ACAFDCDC((uint64_t)v7);
  return v8;
}

uint64_t sub_1ACAFDCDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodePlayState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL EpisodePlayState.isPending.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload) {
    sub_1ACAFDCDC((uint64_t)v3);
  }
  return EnumCaseMultiPayload == 0;
}

BOOL EpisodePlayState.isEpisodePlayed.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2) {
    sub_1ACA50E78((uint64_t)v3, (uint64_t *)&unk_1EB773140);
  }
  else {
    sub_1ACAFDCDC((uint64_t)v3);
  }
  return EnumCaseMultiPayload == 2;
}

BOOL EpisodePlayState.isEpisodePaused.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EpisodePlayState();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1ACAFDB90(v1, (uint64_t)&v10 - v6);
  BOOL v8 = 0;
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1ACAFDB90((uint64_t)v7, (uint64_t)v5);
    if (v5[16]) {
      BOOL v8 = 1;
    }
  }
  sub_1ACAFDCDC((uint64_t)v7);
  return v8;
}

BOOL EpisodePlayState.isPartial.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1) {
    sub_1ACAFDCDC((uint64_t)v3);
  }
  return EnumCaseMultiPayload == 1;
}

uint64_t EpisodePlayState.timeRemaining.getter()
{
  uint64_t v1 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (double *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACAFDB90(v0, (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      sub_1ACA50E78((uint64_t)v3, (uint64_t *)&unk_1EB773140);
      uint64_t result = 0;
      break;
    case 4:
    case 5:
      return result;
    default:
      double v6 = v3[1] - *v3;
      if (v6 <= 0.0) {
        double v6 = 0.0;
      }
      uint64_t result = *(void *)&v6;
      break;
  }
  return result;
}

uint64_t EpisodePlayState.hash(into:)()
{
  uint64_t v1 = sub_1ACE750A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  BOOL v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v0, (uint64_t)v13);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
      sub_1ACA909B4((uint64_t)v13, (uint64_t)v10);
      sub_1ACE77B28();
      sub_1ACA3AAD4((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_1EB773140);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
      {
        sub_1ACE77B38();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
        sub_1ACE77B38();
        sub_1ACAFFA60(&qword_1E99F1F08, MEMORY[0x1E4F27928]);
        sub_1ACE760F8();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      sub_1ACE77B38();
      uint64_t result = sub_1ACA50E78((uint64_t)v10, (uint64_t *)&unk_1EB773140);
      break;
    case 3u:
      sub_1ACE77B28();
      sub_1ACE77B58();
      sub_1ACE77B58();
      sub_1ACE77B38();
      sub_1ACE77B38();
      uint64_t result = sub_1ACE77B38();
      break;
    case 4u:
    case 5u:
      uint64_t result = sub_1ACE77B28();
      break;
    default:
      sub_1ACE77B28();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B58();
      break;
  }
  return result;
}

uint64_t EpisodePlayState.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAFE4F8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACAFE508()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACAFE518()
{
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAFDB90(v1, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x646579616C706E75;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t result = 0x6C616974726170;
      break;
    case 2:
      sub_1ACA50E78((uint64_t)v3, (uint64_t *)&unk_1EB773140);
      uint64_t result = 0x646579616C70;
      break;
    case 3:
      unsigned int v6 = 2036427888;
      goto LABEL_6;
    case 4:
      return result;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      unsigned int v6 = 1684956528;
LABEL_6:
      uint64_t result = v6 | 0x676E6900000000;
      break;
  }
  return result;
}

uint64_t static EpisodePlayState.state(for:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  if (*(unsigned char *)(a1 + 11))
  {
    uint64_t v10 = type metadata accessor for EpisodePlayState();
    uint64_t v11 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    id v13 = a2;
    uint64_t v14 = 1;
LABEL_11:
    return v11(v13, v14, 1, v12);
  }
  if (*(unsigned char *)(a1 + 12) == 1)
  {
    *a2 = *(_OWORD *)(a1 + 16);
    uint64_t v15 = type metadata accessor for EpisodePlayState();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    id v13 = a2;
    uint64_t v14 = 0;
    uint64_t v12 = v15;
    goto LABEL_11;
  }
  if (!*(unsigned char *)(a1 + 13))
  {
    uint64_t v15 = type metadata accessor for EpisodePlayState();
    goto LABEL_10;
  }
  double v16 = *(double *)(a1 + 32);
  char v17 = *(unsigned char *)(a1 + 40);
  uint64_t v18 = sub_1ACE750A8();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v9, 1, 1, v18);
  if (v16 > 0.0)
  {
    sub_1ACE74FA8();
    sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB773140);
    v19(v7, 0, 1, v18);
    sub_1ACA909B4((uint64_t)v7, (uint64_t)v9);
  }
  uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78) + 48);
  sub_1ACA909B4((uint64_t)v9, (uint64_t)a2);
  *((unsigned char *)a2 + v2sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v17;
  uint64_t v21 = type metadata accessor for EpisodePlayState();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 0, 1, v21);
}

uint64_t sub_1ACAFE920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(a1, a2, (uint64_t *)&unk_1EB772D70);
}

uint64_t static EpisodePlayState.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(a1, a2, (uint64_t *)&unk_1EB772D70);
}

void static EpisodePlayState.episodeStateDomain.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1ACAFE974()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACAFE9B8()
{
  return sub_1ACE77B78();
}

uint64_t _s18PodcastsFoundation16EpisodePlayStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A968);
  MEMORY[0x1F4188790](v6);
  uint64_t v54 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v53 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (uint64_t)&v52 - v11;
  uint64_t v12 = type metadata accessor for EpisodePlayState();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (double *)((char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (double *)((char *)&v52 - v20);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (double *)((char *)&v52 - v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766F80);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v27 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (uint64_t)&v27[*(int *)(v25 + 56)];
  sub_1ACAFDB90(a1, (uint64_t)v27);
  sub_1ACAFDB90(a2, v28);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1ACAFDB90((uint64_t)v27, (uint64_t)v21);
      double v29 = v21[1];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_23;
      }
      double v30 = *v21;
      goto LABEL_6;
    case 2u:
      sub_1ACAFDB90((uint64_t)v27, (uint64_t)v18);
      uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78) + 48);
      int v33 = v18[v32];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_1ACA50E78((uint64_t)v18, (uint64_t *)&unk_1EB773140);
LABEL_23:
        sub_1ACA50E78((uint64_t)v27, &qword_1EB766F80);
        return 0;
      }
      int v34 = *(unsigned __int8 *)(v28 + v32);
      uint64_t v35 = v28;
      uint64_t v36 = v57;
      sub_1ACA909B4(v35, v57);
      uint64_t v37 = v54;
      uint64_t v38 = v54 + *(int *)(v6 + 48);
      sub_1ACA909B4((uint64_t)v18, v54);
      sub_1ACA3AAD4(v36, v38, (uint64_t *)&unk_1EB773140);
      uint64_t v40 = v55;
      uint64_t v39 = v56;
      uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
      if (v41(v37, 1, v56) == 1)
      {
        sub_1ACA50E78(v36, (uint64_t *)&unk_1EB773140);
        if (v41(v38, 1, v39) == 1)
        {
          sub_1ACA50E78(v37, (uint64_t *)&unk_1EB773140);
          goto LABEL_31;
        }
        goto LABEL_26;
      }
      uint64_t v47 = v53;
      sub_1ACA3AAD4(v37, v53, (uint64_t *)&unk_1EB773140);
      if (v41(v38, 1, v39) == 1)
      {
        sub_1ACA50E78(v57, (uint64_t *)&unk_1EB773140);
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v47, v39);
LABEL_26:
        sub_1ACA50E78(v37, &qword_1EB76A968);
LABEL_27:
        sub_1ACAFDCDC((uint64_t)v27);
        return 0;
      }
      char v49 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v52, v38, v39);
      sub_1ACAFFA60((unint64_t *)&unk_1E99F3590, MEMORY[0x1E4F27928]);
      char v50 = sub_1ACE76168();
      unint64_t v51 = *(void (**)(char *, uint64_t))(v40 + 8);
      v51(v49, v39);
      sub_1ACA50E78(v57, (uint64_t *)&unk_1EB773140);
      v51((char *)v47, v39);
      sub_1ACA50E78(v37, (uint64_t *)&unk_1EB773140);
      if ((v50 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_31:
      int v46 = v33 ^ v34;
LABEL_32:
      sub_1ACAFDCDC((uint64_t)v27);
      return v46 ^ 1u;
    case 3u:
      sub_1ACAFDB90((uint64_t)v27, (uint64_t)v15);
      double v42 = v15[1];
      int v43 = *((unsigned __int8 *)v15 + 16);
      int v44 = *((unsigned __int8 *)v15 + 17);
      int v45 = *((unsigned __int8 *)v15 + 18);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_23;
      }
      if (*v15 != *(double *)v28
        || v42 != *(double *)(v28 + 8)
        || v43 != *(unsigned __int8 *)(v28 + 16)
        || v44 != *(unsigned __int8 *)(v28 + 17))
      {
        goto LABEL_27;
      }
      int v46 = v45 ^ *(unsigned __int8 *)(v28 + 18);
      goto LABEL_32;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_23;
      }
LABEL_21:
      sub_1ACAFDCDC((uint64_t)v27);
      return 1;
    default:
      sub_1ACAFDB90((uint64_t)v27, (uint64_t)v23);
      double v29 = v23[1];
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_23;
      }
      double v30 = *v23;
LABEL_6:
      if (v30 != *(double *)v28) {
        goto LABEL_27;
      }
      BOOL v31 = v29 == *(double *)(v28 + 8);
      sub_1ACAFDCDC((uint64_t)v27);
      return v31;
  }
}

uint64_t sub_1ACAFF064(uint64_t a1)
{
  uint64_t result = sub_1ACAFFA60(&qword_1EB766F70, (void (*)(uint64_t))type metadata accessor for EpisodePlayState);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ACAFF0BC()
{
  return sub_1ACAFFA60(&qword_1EB766F70, (void (*)(uint64_t))type metadata accessor for EpisodePlayState);
}

uint64_t *initializeBufferWithCopyOfBuffer for EpisodePlayState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_1ACE750A8();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
      *((unsigned char *)a1 + *(int *)(v11 + 48)) = *((unsigned char *)a2 + *(int *)(v11 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for EpisodePlayState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = sub_1ACE750A8();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (!result)
    {
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
      return v4(a1, v3);
    }
  }
  return result;
}

void *initializeWithCopy for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1ACE750A8();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
    *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACAFDCDC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1ACE750A8();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
      *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1ACE750A8();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
    *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for EpisodePlayState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACAFDCDC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1ACE750A8();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
      *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1ACAFF9B0()
{
  v1[4] = &unk_1ACE8C2E8;
  v1[5] = &unk_1ACE8C2E8;
  sub_1ACA73D00();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[6] = v1;
    v1[7] = &unk_1ACE8C318;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1ACAFFA60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t JustAssetProcessingStep.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t JustAssetProcessingStep.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t JustAssetProcessingStep.init(asset:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, a1, AssociatedTypeWitness);
  uint64_t v9 = a4 + *(int *)(type metadata accessor for JustAssetProcessingStep() + 36);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v10(v9, a2, a3);
}

uint64_t type metadata accessor for JustAssetProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t JustAssetProcessingStep.publisher.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v5 = sub_1ACE759B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, AssociatedTypeWitness);
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE75998();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ACAFFE00(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1ACAFFE08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ACAFFE54()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACAFFF38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(v5 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v7 + 64) + v9;
  uint64_t v11 = (*(unsigned char *)(v7 + 80) | v9);
  if (v11 > 7
    || ((*(_DWORD *)(v7 + 80) | v9) & 0x100000) != 0
    || (v10 & ~(unint64_t)v9) + *(void *)(v8 + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    unint64_t v15 = ~(unint64_t)v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v15, ((unint64_t)a2 + v10) & v15, v5);
  }
  return a1;
}

uint64_t sub_1ACB000AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  unint64_t v8 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v8, v3);
}

uint64_t sub_1ACB00174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1ACB00240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1ACB0030C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1ACB003D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_1ACB004A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v11;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v5 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v8 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
          return v23(a1);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11, v10, v5);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = (v13 & ~v11) + *(_DWORD *)(*(void *)(v5 - 8) + 64);
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_1ACB00714(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(void *)(v8 + 64) + v12;
  size_t v15 = (v14 & ~v12) + *(void *)(*(void *)(v7 - 8) + 64);
  if (a3 <= v13)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v13 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v17 = ~v13 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1ACB00A04);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v11)
        {
          uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v8 + 56);
          v22(a1, a2);
        }
        else
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
          v21((unint64_t)&a1[v14] & ~v12, a2, v11, v7);
        }
      }
      return;
  }
}

uint64_t sub_1ACB00A2C()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  sub_1ACE77BF8();
  return swift_getWitnessTable();
}

uint64_t AssetRemovalProcessorDelegate.episodeAndShowStorage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1, a1);
}

uint64_t AssetRemovalProcessorDelegate.library.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1 + 40, a1);
}

uint64_t AssetRemovalProcessorDelegate.managedAssetDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetRemovalProcessorDelegate() + 24);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AssetRemovalProcessorDelegate()
{
  uint64_t result = qword_1EB76C9A0;
  if (!qword_1EB76C9A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id AssetRemovalProcessorDelegate.workQueue.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for AssetRemovalProcessorDelegate() + 28));
  return v1;
}

uint64_t AssetRemovalProcessorDelegate.init(episodeAndShowStorage:library:workQueue:managedAssetDirectory:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1ACA3AABC(a1, a5);
  sub_1ACA3AABC(a2, a5 + 40);
  uint64_t v9 = type metadata accessor for AssetRemovalProcessorDelegate();
  *(void *)(a5 + *(int *)(v9 + 28)) = a3;
  uint64_t v10 = a5 + *(int *)(v9 + 24);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  return v12(v10, a4, v11);
}

uint64_t AssetRemovalProcessorDelegate.didMatch(episodes:)(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v88 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v88 - 8);
  uint64_t v85 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v88);
  char v81 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F10);
  uint64_t v69 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F18);
  uint64_t v82 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F20);
  uint64_t v87 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v68 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F28);
  uint64_t v89 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  unint64_t v71 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F30);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v90 = v15;
  uint64_t v91 = v16;
  MEMORY[0x1F4188790](v15);
  int v74 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F38);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v92 = v18;
  uint64_t v93 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v75 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F40);
  uint64_t v98 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  os_log_type_t v76 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F48);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v99 = v22;
  uint64_t v100 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v94 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F50);
  uint64_t v104 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v95 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F58);
  uint64_t v103 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v97 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v65 = v1 + 5;
  uint64_t v27 = v1[8];
  uint64_t v28 = v1[9];
  __swift_project_boxed_opaque_existential_1(v1 + 5, v27);
  *(void *)&long long v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 8))(a1, v27, v28);
  uint64_t v29 = type metadata accessor for AssetRemovalProcessorDelegate();
  uint64_t v83 = *(int *)(v29 + 28);
  double v30 = *(void **)((char *)v1 + v83);
  double v63 = v2;
  id v106 = v30;
  uint64_t v78 = sub_1ACE76CA8();
  uint64_t v31 = *(void *)(v78 - 8);
  BOOL v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v79 = v31 + 56;
  char v66 = v8;
  v77(v8, 1, 1, v78);
  id v32 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F60);
  unint64_t v72 = sub_1ACA51E1C();
  uint64_t v64 = MEMORY[0x1E4F1AAE8];
  sub_1ACA51EA4(&qword_1E99F1F68, &qword_1E99F1F60);
  unint64_t v73 = sub_1ACA93A6C();
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v8);

  swift_release();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1F70);
  uint64_t v70 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4(&qword_1E99F1F78, &qword_1E99F1F10);
  sub_1ACA51EA4(&qword_1E99F1F80, &qword_1E99F1F70);
  uint64_t v33 = v67;
  sub_1ACE75C68();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v10, v33);
  int v34 = v81;
  uint64_t v35 = v88;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v81, (char *)v2 + *(int *)(v29 + 24), v88);
  unint64_t v36 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v37 + v36, v34, v35);
  sub_1ACA51EA4(&qword_1E99F1F88, &qword_1E99F1F18);
  uint64_t v38 = v68;
  uint64_t v39 = v80;
  sub_1ACE75C08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v39);
  swift_getKeyPath();
  sub_1ACA51EA4(&qword_1E99F1F90, &qword_1E99F1F20);
  uint64_t v40 = v71;
  uint64_t v41 = v84;
  sub_1ACE75B48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v38, v41);
  sub_1ACA51EA4(&qword_1E99F1F98, &qword_1E99F1F28);
  double v42 = v74;
  uint64_t v43 = v86;
  sub_1ACE75C48();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v40, v43);
  sub_1ACA51EA4(&qword_1E99F1FA0, &qword_1E99F1F30);
  int v44 = v75;
  uint64_t v45 = v90;
  sub_1ACE75C08();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v42, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  sub_1ACA51EA4(&qword_1E99F1FA8, &qword_1E99F1F38);
  int v46 = v76;
  uint64_t v47 = v92;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v44, v47);
  sub_1ACA3E158((uint64_t)v65, (uint64_t)&v105);
  uint64_t v48 = swift_allocObject();
  sub_1ACA3AABC(&v105, v48 + 16);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_1ACB02388;
  *(void *)(v49 + 24) = v48;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1FB0);
  sub_1ACA51EA4(&qword_1E99F1FB8, &qword_1E99F1F40);
  sub_1ACA51EA4(&qword_1E99F1FC0, &qword_1E99F1FB0);
  char v50 = v94;
  uint64_t v51 = v96;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v46, v51);
  *(void *)&long long v105 = *(void *)((char *)v63 + v83);
  uint64_t v52 = (void *)v105;
  uint64_t v53 = (uint64_t)v66;
  v77(v66, 1, 1, v78);
  sub_1ACA51EA4(&qword_1E99F1FC8, &qword_1E99F1F48);
  id v54 = v52;
  uint64_t v55 = v95;
  uint64_t v56 = v99;
  sub_1ACE75CA8();
  sub_1ACAFA0D0(v53);

  (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v56);
  sub_1ACA51EA4(&qword_1E99F1FD0, &qword_1E99F1F50);
  uint64_t v57 = v97;
  uint64_t v58 = v102;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v55, v58);
  sub_1ACA51EA4(&qword_1E99F1FD8, &qword_1E99F1F58);
  uint64_t v59 = v101;
  uint64_t v60 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v59);
  return v60;
}

uint64_t sub_1ACB01AE4()
{
  return sub_1ACE763B8();
}

uint64_t sub_1ACB01B68()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_1ACB01BDC(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 16) != 0;
}

uint64_t sub_1ACB01BF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACB02BC0(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

void sub_1ACB01C38()
{
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB768C28);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76BE8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE76998();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v5, v7, &v8);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v1, v2, "Automatically removed episodes: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v4, -1, -1);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1ACB01E10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadedAsset();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (uint64_t *)((char *)&v28 - v6);
  uint64_t v8 = sub_1ACE74EE8();
  if (!v9) {
    goto LABEL_7;
  }
  if (v8 == 0x62696C2D646F7069 && v9 == 0xEC00000079726172)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v11 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_10:
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB768C28);
    sub_1ACB02C58(a1, (uint64_t)v5);
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BC8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v29 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v19 = *v5;
      unint64_t v20 = v5[1];
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1ACA3189C(v19, v20, &v29);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACB02CBC((uint64_t)v5);
      _os_log_impl(&dword_1AC9D5000, v15, v16, "Skipping auto-deletion of ipod-library asset: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }
    else
    {
      sub_1ACB02CBC((uint64_t)v5);
    }

    return 0;
  }
LABEL_7:
  sub_1ACE74EC8();
  sub_1ACE74EC8();
  char v12 = sub_1ACE76348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    return 1;
  }
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1ACE754C8();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB768C28);
  sub_1ACB02C58(a1, (uint64_t)v7);
  uint64_t v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76BC8();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v26 = *v7;
    unint64_t v27 = v7[1];
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1ACA3189C(v26, v27, &v29);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB02CBC((uint64_t)v7);
    _os_log_impl(&dword_1AC9D5000, v22, v23, "Skipping auto-deletion of non-managed asset: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v25, -1, -1);
    MEMORY[0x1AD11B340](v24, -1, -1);
  }
  else
  {
    sub_1ACB02CBC((uint64_t)v7);
  }

  return 0;
}

uint64_t sub_1ACB02250()
{
  uint64_t v1 = sub_1ACE74F28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACB022E0(uint64_t a1)
{
  sub_1ACE74F28();
  return sub_1ACB01E10(a1);
}

uint64_t sub_1ACB02350()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1ACB02388(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_1ACB023E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB0241C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    long long v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(void *)(v4 + v13) = v14;
    id v15 = v14;
  }
  return v4;
}

void destroy for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 28));
}

uint64_t initializeWithCopy for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

uint64_t *assignWithCopy for AssetRemovalProcessorDelegate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  uint64_t v6 = *(int *)(a3 + 24);
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(uint64_t *)((char *)a1 + v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = (uint64_t)v11;
  id v13 = v11;

  return a1;
}

uint64_t initializeWithTake for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB029B0);
}

uint64_t sub_1ACB029B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE74F28();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AssetRemovalProcessorDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB02A74);
}

uint64_t sub_1ACB02A74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACB02B1C()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACB02BC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1ACE769C8();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1ACD3007C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1ACB02C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadedAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB02CBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadedAsset();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACB02D18()
{
  return sub_1ACA51EA4(&qword_1E99F1FE0, &qword_1E99F1FE8);
}

id MediaRequestController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *MediaRequestController.__allocating_init(responseQueue:)(void *a1)
{
  uint64_t v3 = (char *)objc_msgSend(objc_allocWithZone(v1), sel_init);
  uint64_t v4 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue];
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;

  return v3;
}

void sub_1ACB02E04(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_1ACB02E68()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_1ACB02EC0(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_1ACB02F14())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACB02F70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1ACB02FB8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1ACB03004())()
{
  return j__swift_endAccess;
}

id MediaRequestController.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_1ACE76CF8();
  *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy] = 0;

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MediaRequestController();
  return objc_msgSendSuper2(&v4, sel_initWithConcurrentOperationCount_requestEncodingType_, 1, 1);
}

uint64_t type metadata accessor for MediaRequestController()
{
  return self;
}

uint64_t sub_1ACB031AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t v25 = a4;
  uint64_t v26 = a1;
  unint64_t v27 = a2;
  uint64_t v9 = type metadata accessor for MediaRequest.Params();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v14 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v14 + 2) = v13;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  sub_1ACE77B88();
  sub_1ACA394B0(a1, (uint64_t)v12);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  sub_1ACA56190((uint64_t)v12, v19 + v15);
  *(void *)(v19 + v16) = MEMORY[0x1E4FBC860];
  unint64_t v20 = v19 + v17;
  *(void *)(v20 + 64) = v32;
  long long v21 = v31;
  *(_OWORD *)(v20 + 32) = v30;
  *(_OWORD *)(v20 + 48) = v21;
  long long v22 = v29;
  *(_OWORD *)unint64_t v20 = v28;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v19 + v18) = v5;
  os_log_type_t v23 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  *os_log_type_t v23 = sub_1ACA394A4;
  v23[1] = v14;
  swift_retain();
  swift_retain();
  v5;
  swift_retain();
  sub_1ACB0443C(v26, v27, (uint64_t)sub_1ACA39594, v19);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACB033CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB03404(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a7;
  uint64_t v35 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE75E48();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a6 + 16);
  if (result)
  {
    long long v21 = (void *)result;
    uint64_t v32 = v13;
    uint64_t v33 = v16;
    long long v22 = (id *)(result + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
    swift_beginAccess();
    id v31 = *v22;

    os_log_type_t v23 = (void *)swift_allocObject();
    _OWORD v23[2] = v34;
    void v23[3] = a8;
    uint64_t v24 = v35;
    v23[4] = v36;
    v23[5] = a2;
    v23[6] = v24;
    v23[7] = a4;
    uint64_t v25 = v37;
    v23[8] = v37;
    aBlock[4] = sub_1ACB08D4C;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    void aBlock[3] = &block_descriptor_99;
    uint64_t v26 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    id v27 = a2;
    swift_bridgeObjectRetain();
    id v28 = v25;
    sub_1ACE75E08();
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    long long v29 = v31;
    MEMORY[0x1AD118ED0](0, v19, v15, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v33);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACB03720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v24[1] = a3;
  uint64_t v25 = a1;
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  v12[3] = a2;
  v12[4] = a3;
  sub_1ACE77B88();
  sub_1ACA394B0(a1, (uint64_t)v10);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_1ACA56190((uint64_t)v10, v17 + v13);
  *(void *)(v17 + v14) = MEMORY[0x1E4FBC860];
  unint64_t v18 = v17 + v15;
  *(void *)(v18 + 64) = v30;
  long long v19 = v29;
  *(_OWORD *)(v18 + 32) = v28;
  *(_OWORD *)(v18 + 48) = v19;
  long long v20 = v27;
  *(_OWORD *)unint64_t v18 = v26;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v17 + v16) = v3;
  long long v21 = (void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
  *long long v21 = sub_1ACA3ACF4;
  v21[1] = v12;
  swift_retain();
  swift_retain();
  id v22 = v3;
  swift_retain();
  sub_1ACB0443C(v25, 0, (uint64_t)sub_1ACA39594, v17);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACB03938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_1ACA394B0(a1, (uint64_t)v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (void *)swift_allocObject();
  void v14[2] = sub_1ACB04734;
  v14[3] = v11;
  _DWORD v14[4] = MEMORY[0x1E4FBC860];
  sub_1ACA56190((uint64_t)v10, (uint64_t)v14 + v12);
  *(void *)((char *)v14 + v13) = v3;
  *(void *)((char *)v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = 0;
  swift_retain();
  swift_retain();
  id v15 = v3;
  sub_1ACB0443C(a1, 0, (uint64_t)sub_1ACB04760, (uint64_t)v14);
  swift_release();
  return swift_release();
}

void sub_1ACB03AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1ACB03AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void *, void *), uint64_t a7, void *a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v16 = type metadata accessor for MediaRequest.Params();
  uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v16 - 8);
  MEMORY[0x1F4188790](v18);
  id v22 = (char *)&v44 - v21;
  if (a5)
  {
    id v23 = a5;
    a6(0, a5);
  }
  else
  {
    int v46 = a10;
    uint64_t v47 = a7;
    if (a3)
    {
      uint64_t v24 = v20;
      uint64_t v44 = v19;
      uint64_t v25 = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = a11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v25 = sub_1ACA42AB8(0, a8[2] + 1, 1, a8);
      }
      unint64_t v28 = v25[2];
      unint64_t v27 = v25[3];
      if (v28 >= v27 >> 1) {
        uint64_t v25 = sub_1ACA42AB8((void *)(v27 > 1), v28 + 1, 1, v25);
      }
      v25[2] = v28 + 1;
      v25[v28 + 4] = a3;
      _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(a3);
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(a9 + 186) != 1 || v30 == 0)
      {
        a6(v25, 0);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1ACA394B0(a9, (uint64_t)v22);
        uint64_t v32 = *((void *)v22 + 18);
        if (v22[152]) {
          uint64_t v32 = 0;
        }
        uint64_t v33 = *((void *)v22 + 22);
        if (v22[184]) {
          uint64_t v33 = 0;
        }
        BOOL v34 = __OFADD__(v32, v33);
        uint64_t v35 = v32 + v33;
        uint64_t v36 = v47;
        if (v34)
        {
          __break(1u);
        }
        else
        {
          *((void *)v22 + 22) = v35;
          v22[184] = 0;
          sub_1ACA394B0((uint64_t)v22, v24);
          unint64_t v37 = (*(unsigned __int8 *)(v44 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
          unint64_t v38 = (v17 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v39 = (void *)swift_allocObject();
          v39[2] = a6;
          v39[3] = v36;
          v39[4] = v25;
          sub_1ACA56190(v24, (uint64_t)v39 + v37);
          uint64_t v41 = v45;
          uint64_t v40 = v46;
          *(void *)((char *)v39 + v38) = v46;
          *(void *)((char *)v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v41;
          id v42 = v41;
          swift_retain();
          swift_bridgeObjectRetain();
          id v43 = v40;
          sub_1ACB0443C((uint64_t)v22, v41, (uint64_t)sub_1ACB04760, (uint64_t)v39);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1ACA39598((uint64_t)v22);
        }
      }
    }
    else
    {
      a6((void *)MEMORY[0x1E4FBC860], 0);
    }
  }
}

void sub_1ACB03E4C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, long long *a8, void *a9, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, void *), void (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v17 = type metadata accessor for MediaRequest.Params();
  uint64_t v57 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v57 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v58 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v59 = (uint64_t)&v57 - v21;
  MEMORY[0x1F4188790](v20);
  id v23 = (char *)&v57 - v22;
  if (a3)
  {
    type metadata accessor for MediaRequestResponseParser();
    _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0((uint64_t)a3);
    LODWORD(v6sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v24 == 0;
    if (v24) {
      swift_bridgeObjectRelease();
    }
    sub_1ACBB4E48((uint64_t)a3, (uint64_t)v68);
    char v25 = v68[0];
    if (BYTE1(v68[0]))
    {
      sub_1ACB08198();
      a3 = (void *)swift_allocError();
      *long long v26 = v25;
      unint64_t v27 = MEMORY[0x1E4FBC860];
    }
    else
    {
      LOBYTE(v63) = v68[0];
      unint64_t v27 = sub_1ACBB4F88((uint64_t)a3, &v63);
      a3 = v28;
    }
  }
  else
  {
    unint64_t v27 = MEMORY[0x1E4FBC860];
    LODWORD(v6sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
  }
  uint64_t v61 = a10;
  *(void *)&v68[0] = a7;
  swift_bridgeObjectRetain();
  sub_1ACA6F0DC(v27);
  uint64_t v29 = *(void *)&v68[0];
  long long v30 = a8[3];
  long long v65 = a8[2];
  long long v66 = v30;
  uint64_t v67 = *((void *)a8 + 8);
  long long v31 = a8[1];
  long long v63 = *a8;
  long long v64 = v31;
  if (a4)
  {
    sub_1ACB04310();
    if (v32)
    {
      sub_1ACE76108();
      swift_bridgeObjectRelease();
    }
  }
  if (a5)
  {
    sub_1ACA394B0(a6, (uint64_t)v23);
    sub_1ACA39598((uint64_t)v23);
    swift_bridgeObjectRelease();
    uint64_t v33 = a3;
    a3 = a5;
LABEL_15:
    id v35 = a5;
    v61(0, a4, 0, 0, a3);

    return;
  }
  sub_1ACA394B0(a6, (uint64_t)v23);
  if (a3)
  {
    sub_1ACA39598((uint64_t)v23);
    swift_bridgeObjectRelease();
    id v34 = a3;
    uint64_t v33 = a3;
    goto LABEL_15;
  }
  char v36 = v23[186];
  sub_1ACA39598((uint64_t)v23);
  if (v60 & 1 | ((v36 & 1) == 0))
  {
    v68[2] = v65;
    id v68[3] = v66;
    uint64_t v69 = v67;
    v68[0] = v63;
    v68[1] = v64;
    uint64_t v62 = sub_1ACE77B68();
    uint64_t v37 = sub_1ACE777C8();
    v61(v29, a4, v37, v38, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = a6;
    uint64_t v40 = v59;
    sub_1ACA394B0(v39, v59);
    uint64_t v41 = *(void *)(v40 + 144);
    if (*(unsigned char *)(v40 + 152)) {
      uint64_t v41 = 0;
    }
    uint64_t v42 = *(void *)(v40 + 176);
    if (*(unsigned char *)(v40 + 184)) {
      uint64_t v42 = 0;
    }
    BOOL v43 = __OFADD__(v41, v42);
    uint64_t v44 = v41 + v42;
    if (v43)
    {
      __break(1u);
    }
    else
    {
      uint64_t v60 = a9;
      *(void *)(v40 + 176) = v44;
      *(unsigned char *)(v40 + 184) = 0;
      uint64_t v45 = v58;
      sub_1ACA394B0(v40, v58);
      unint64_t v46 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      unint64_t v47 = (v18 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v49 = (v48 + 79) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v50 = swift_allocObject();
      sub_1ACA56190(v45, v50 + v46);
      *(void *)(v50 + v47) = v29;
      unint64_t v51 = v50 + v48;
      *(void *)(v51 + 64) = v67;
      long long v52 = v66;
      *(_OWORD *)(v51 + 32) = v65;
      *(_OWORD *)(v51 + 48) = v52;
      long long v53 = v64;
      *(_OWORD *)unint64_t v51 = v63;
      *(_OWORD *)(v51 + 16) = v53;
      id v54 = v60;
      *(void *)(v50 + v49) = v60;
      uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v55 = v61;
      v55[1] = a11;
      swift_bridgeObjectRetain();
      id v56 = v54;
      swift_retain();
      sub_1ACB0443C(v40, 0, (uint64_t)sub_1ACA39594, v50);
      swift_bridgeObjectRelease();
      swift_release();

      sub_1ACA39598(v40);
    }
  }
}

uint64_t sub_1ACB04310()
{
  id v1 = objc_msgSend(v0, sel_allHeaderFields);
  uint64_t v2 = sub_1ACE75FF8();

  *(void *)&long long v8 = 1734440005;
  *((void *)&v8 + 1) = 0xE400000000000000;
  sub_1ACE771F8();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1ACA65B48((uint64_t)v7), (v4 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1ACA6A0F8((uint64_t)v7);
  if (*((void *)&v9 + 1))
  {
    if (swift_dynamicCast()) {
      return v6;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1ACA50E78((uint64_t)&v8, qword_1EB7725E0);
    return 0;
  }
}

void sub_1ACB0443C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v27 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v5 = type metadata accessor for MediaRequest.Params();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  long long v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MediaRequestBuilder();
  sub_1ACCECE2C(a1);
  id v10 = sub_1ACCECFAC(a1);
  sub_1ACA394B0(a1, (uint64_t)v8);
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  sub_1ACA56190((uint64_t)v8, v12 + ((v11 + 24) & ~v11));
  uint64_t v33 = sub_1ACB08978;
  uint64_t v34 = v12;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  long long v31 = sub_1ACB081EC;
  uint64_t v32 = &block_descriptor_21;
  unint64_t v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = objc_msgSend(v10, sel_thenWithBlock_, v13);
  _Block_release(v13);

  sub_1ACA394B0(a1, (uint64_t)v8);
  uint64_t v15 = (v11 + 32) & ~v11;
  unint64_t v16 = (v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v26;
  *(void *)(v18 + 16) = v25;
  *(void *)(v18 + 24) = v19;
  sub_1ACA56190((uint64_t)v8, v18 + v15);
  uint64_t v20 = v28;
  *(void *)(v18 + v16) = v28;
  uint64_t v21 = v27;
  *(void *)(v18 + v17) = v27;
  uint64_t v33 = sub_1ACB08C0C;
  uint64_t v34 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  long long v31 = sub_1ACAA3910;
  uint64_t v32 = &block_descriptor_83_1;
  uint64_t v22 = _Block_copy(&aBlock);
  id v23 = v21;
  swift_retain();
  id v24 = v20;
  swift_release();
  objc_msgSend(v14, sel_addFinishBlock_, v22);
  _Block_release(v22);
}

uint64_t sub_1ACB046FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB04734()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1ACB04764(void *a1, uint64_t a2, void (*a3)(void, unint64_t, void, id, uint64_t), uint64_t a4, uint64_t *a5, void *a6, uint64_t a7)
{
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  unint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v10 = sub_1ACE74898();
  uint64_t v44 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v39 - v21;
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v41 = v10;
  id v23 = a1;
  id v24 = objc_msgSend(v23, sel_URL);
  id v45 = v23;
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_6;
  }
  uint64_t v25 = v24;
  sub_1ACE74E98();

  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v26(v15, v20, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_6:

    sub_1ACA50E78((uint64_t)v15, &qword_1EB7731B0);
LABEL_7:
    id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D20]), sel_init);
    v46(0, 0xF000000000000000, 0, v34, a2);

    return;
  }
  v26(v22, v15, v16);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  sub_1ACE74848();
  uint64_t v27 = *a5;
  uint64_t v28 = a5[1];
  uint64_t v29 = (void *)a5[3];
  uint64_t v40 = (uint64_t (*)(uint64_t, void *, uint64_t, void *, void *))a5[2];
  uint64_t v30 = (uint64_t (*)())a5[4];
  int v31 = *((unsigned __int8 *)a5 + 40);
  uint64_t v32 = *((unsigned __int8 *)a5 + 40);
  uint64_t v33 = v42;
  switch(v32)
  {
    case 3:
      swift_bridgeObjectRetain();
      break;
    default:
      break;
  }
  sub_1ACE747E8();
  uint64_t aBlock = v27;
  uint64_t v49 = v28;
  uint64_t v50 = v40;
  unint64_t v51 = v29;
  long long v52 = v30;
  LOBYTE(v53) = v31;
  sub_1ACCED1F8((uint64_t)&aBlock);
  sub_1ACE74878();
  swift_beginAccess();
  sub_1ACE747F8();
  if (v31 == 1) {
    sub_1ACE74888();
  }
  id v35 = (void *)sub_1ACE74818();
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v47;
  *(void *)(v36 + 16) = v46;
  *(void *)(v36 + 24) = v37;
  long long v52 = sub_1ACB08CC8;
  uint64_t v53 = v36;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_1ACCCAC28;
  unint64_t v51 = &block_descriptor_89;
  uint64_t v38 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v33, sel_performDataRequest_account_callback_, v35, v43, v38);

  _Block_release(v38);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v41);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
}

id MediaRequestController.__allocating_init(concurrentOperationCount:requestEncodingType:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return objc_msgSend(v5, sel_initWithConcurrentOperationCount_requestEncodingType_, a1, a2);
}

void MediaRequestController.init(concurrentOperationCount:requestEncodingType:)()
{
}

id MediaRequestController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaRequestController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACB04DEC()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1ACB04E38(uint64_t a1)
{
  unint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1ACB04E88())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACB04EE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v8 = type metadata accessor for MediaRequest.Params();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v4;
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a3;
  _DWORD v14[4] = a4;
  sub_1ACE77B88();
  sub_1ACA394B0(a1, (uint64_t)v11);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  sub_1ACA56190((uint64_t)v11, v19 + v15);
  *(void *)(v19 + v16) = MEMORY[0x1E4FBC860];
  unint64_t v20 = v19 + v17;
  *(void *)(v20 + 64) = v33;
  long long v21 = v32;
  *(_OWORD *)(v20 + 32) = v31;
  *(_OWORD *)(v20 + 48) = v21;
  long long v22 = v30;
  *(_OWORD *)unint64_t v20 = v29;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v19 + v18) = v12;
  id v23 = (void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
  *id v23 = sub_1ACA3ACF4;
  v23[1] = v14;
  swift_retain();
  swift_retain();
  id v24 = v12;
  swift_retain();
  sub_1ACB0443C(v27, v28, (uint64_t)sub_1ACA39594, v19);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACB05104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACB03720(a1, a2, a3);
}

uint64_t sub_1ACB05128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  sub_1ACA394B0(a1, (uint64_t)v10);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_1ACB08D88;
  v15[3] = v12;
  v15[4] = MEMORY[0x1E4FBC860];
  sub_1ACA56190((uint64_t)v10, (uint64_t)v15 + v13);
  *(void *)((char *)v15 + v14) = v11;
  *(void *)((char *)v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = 0;
  swift_retain();
  swift_retain();
  id v16 = v11;
  sub_1ACB0443C(a1, 0, (uint64_t)sub_1ACB04760, (uint64_t)v15);
  swift_release();
  return swift_release();
}

void sub_1ACB052C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1ACB052F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MediaRequestController.send<A>(_:completion:)(a1, a2, a3, a4, a5);
}

uint64_t MediaRequestController.send<A>(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a2;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v5;
  (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a4);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a4;
  *((void *)v18 + 3) = a5;
  *((void *)v18 + 4) = v23;
  *((void *)v18 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v17], v12, a4);
  uint64_t v19 = type metadata accessor for MediaRequestController();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_retain();
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)((uint64_t)v15, v21, (uint64_t)sub_1ACB05C24, (uint64_t)v18, v19, AssociatedTypeWitness, (uint64_t)&protocol witness table for MediaRequestController, AssociatedConformanceWitness);
  swift_release();
  return sub_1ACA39598((uint64_t)v15);
}

uint64_t sub_1ACB05558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[5] = a4;
  v11[6] = v10;
  void v11[3] = a2;
  v11[4] = a3;
  v11[1] = sub_1ACA50B84;
  v11[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACB05650, 0, 0);
}

uint64_t MediaRequestController.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  void v5[4] = a3;
  _OWORD v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACB05650, 0, 0);
}

uint64_t sub_1ACB05650()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *uint64_t v5 = v0;
  v5[1] = sub_1ACAC6190;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v7, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_1ACB05ECC, v3, AssociatedTypeWitness);
}

uint64_t sub_1ACB05774(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a6;
  uint64_t v36 = a5;
  uint64_t v37 = a4;
  uint64_t v35 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v33 = a7;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v30 - v15;
  sub_1ACB08420();
  uint64_t v31 = AssociatedTypeWitness;
  uint64_t v17 = sub_1ACE77C08();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (uint64_t *)((char *)&v30 - v19);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v21 = sub_1ACE77C08();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)((char *)&v30 - v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)&v30 - v22, v35, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = *v23;
    *unint64_t v20 = v25;
    swift_storeEnumTagMultiPayload();
    id v26 = v25;
    v37(v20);

    return (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v14 + 32))(v16, v23, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(a8 + 40))(v16, v33, a8);
    uint64_t v28 = v34;
    uint64_t v29 = v31;
    (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v20, v12, v31);
    swift_storeEnumTagMultiPayload();
    v37(v20);
    (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1ACB05B60()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACB05C24(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1ACB05774(a1, a2 & 1, a3, *(void (**)(void *))(v3 + 32), *(void *)(v3 + 40), v3+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80)), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a8;
  void v15[6] = a3;
  v15[7] = a4;
  swift_retain();
  MediaRequestControllerProtocol.perform(params:callback:)(a1, (uint64_t)sub_1ACB0639C, (uint64_t)v15, a5, a7);
  return swift_release();
}

uint64_t sub_1ACB05D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v9 = sub_1ACE76708();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - v11, a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, v12, v9);
  MediaRequestController.send<A>(_:completion:)(a3, (uint64_t)sub_1ACB08354, v14, a4, a5);
  return swift_release();
}

uint64_t sub_1ACB05ECC(uint64_t a1)
{
  return sub_1ACB05D2C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1ACB05ED8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v17 - v7;
  sub_1ACB08420();
  uint64_t v9 = sub_1ACE77C08();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v17 - v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v17 - v10, a1, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *v11;
    uint64_t v14 = swift_allocError();
    *uint64_t v15 = v13;
    v17[1] = v14;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
    sub_1ACE76708();
    return sub_1ACE766E8();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v8, v11, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, AssociatedTypeWitness);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
    sub_1ACE76708();
    sub_1ACE766F8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
  }
}

uint64_t sub_1ACB06170(uint64_t a1, char a2, void *a3, unint64_t a4, char a5, void (*a6)(uint64_t, void, void *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = a7;
  id v26 = a6;
  unsigned int v24 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v14 = sub_1ACE77C08();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v23 - v17);
  if (a5)
  {
    *uint64_t v18 = a3;
    swift_storeEnumTagMultiPayload();
    id v21 = a3;
    v26(a1, v24, v18);
  }
  else
  {
    uint64_t v23 = (uint64_t)&v23;
    MEMORY[0x1F4188790](v16);
    *(&v23 - 6) = a8;
    *(&v23 - 5) = a9;
    *(&v23 - 4) = v20;
    *(&v23 - 3) = v19;
    *(&v23 - 2) = (uint64_t)a3;
    *(&v23 - 1) = a4;
    sub_1ACA3985C((uint64_t)a3, a4);
    sub_1ACC52604((void (*)(unsigned char *))sub_1ACB08254, (uint64_t)v18);
    v26(a1, v24, v18);
    sub_1ACB0827C(a3, a4, 0);
  }
  return (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_1ACB06364()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB0639C(uint64_t a1, char a2, void *a3, unint64_t a4, char a5)
{
  return sub_1ACB06170(a1, a2 & 1, a3, a4, a5 & 1, *(void (**)(uint64_t, void, void *))(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_1ACB063DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACE748B8();
  sub_1ACE748A8();
  uint64_t result = swift_release();
  if (v7) {
    *a7 = v7;
  }
  return result;
}

uint64_t MediaRequestControllerProtocol.perform(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(a5 + 56);
  swift_retain();
  v11(a1, sub_1ACB068BC, v10, a4, a5);
  return swift_release();
}

void sub_1ACB0654C(uint64_t a1, unint64_t a2, int a3, id a4, id a5, void (*a6)(id, uint64_t, id, unint64_t, uint64_t))
{
  if (!a4)
  {
    if (!a5)
    {
      id v11 = 0;
      goto LABEL_13;
    }
    *(void *)&long long v31 = a5;
    id v13 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    sub_1ACA50D4C(0, &qword_1EB771CC0);
    if (swift_dynamicCast())
    {
      id v14 = v33;
      id v15 = objc_msgSend(v33, sel_domain, (void)v31);
      uint64_t v16 = sub_1ACE761B8();
      uint64_t v18 = v17;

      if (v16 == sub_1ACE761B8() && v18 == v19)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {

          goto LABEL_29;
        }
      }
      id v24 = objc_msgSend(v33, sel_userInfo);
      uint64_t v25 = sub_1ACE75FF8();

      uint64_t v26 = sub_1ACE761B8();
      if (*(void *)(v25 + 16) && (uint64_t v28 = sub_1ACA657FC(v26, v27), (v29 & 1) != 0))
      {
        sub_1ACA33128(*(void *)(v25 + 56) + 32 * v28, (uint64_t)&v31);
      }
      else
      {
        long long v31 = 0u;
        long long v32 = 0u;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v32 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v12 = 0;
          id v11 = v33;
          goto LABEL_30;
        }
      }
      else
      {
        sub_1ACA50E78((uint64_t)&v31, qword_1EB7725E0);
      }
    }
LABEL_29:
    id v11 = 0;
    uint64_t v12 = 1;
    goto LABEL_30;
  }
  id v11 = objc_msgSend(a4, sel_statusCode);
  if (a5)
  {
    uint64_t v12 = 0;
LABEL_30:
    id v30 = a5;
    a6(v11, v12, a5, 0, 1);

    return;
  }
LABEL_13:
  if (a2 >> 60 == 15)
  {
    sub_1ACB08198();
    uint64_t v22 = (void *)swift_allocError();
    *uint64_t v23 = 3;
    a6(v11, a4 == 0, v22, 0, 1);
  }
  else
  {
    sub_1ACA3985C(a1, a2);
    a6(v11, a4 == 0, (id)a1, a2, 0);
    sub_1ACAB2EF0(a1, a2);
  }
}

void sub_1ACB068BC(uint64_t a1, unint64_t a2, int a3, void *a4, void *a5)
{
  sub_1ACB0654C(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t, id, unint64_t, uint64_t))(v5 + 16));
}

uint64_t MediaRequestControllerProtocol.performRecursivelyWithParsing<A>(params:resultType:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[7] = a7;
  v8[8] = v7;
  v8[5] = a5;
  v8[6] = a6;
  void v8[3] = a2;
  v8[4] = a4;
  v8[2] = a1;
  return MEMORY[0x1F4188298](sub_1ACB068F0, 0, 0);
}

uint64_t sub_1ACB068F0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  long long v6 = *(_OWORD *)(v0 + 48);
  *(void *)(v5 + 16) = v2;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v1;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 56) = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v7;
  uint64_t v8 = type metadata accessor for MediaAPIResponse();
  *uint64_t v7 = v0;
  v7[1] = sub_1ACB06A18;
  uint64_t v9 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v9, 0, 0, 0xD000000000000039, 0x80000001ACEC86F0, sub_1ACB06E10, v5, v8);
}

uint64_t sub_1ACB06A18()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACB06B54, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACB06B54()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACB06BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a6;
  uint64_t v27 = a5;
  uint64_t v28 = a4;
  uint64_t v29 = a2;
  uint64_t v10 = type metadata accessor for MediaRequest.Params();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v26 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MediaAPIResponse();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v13 = sub_1ACE76708();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v24 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v24 - v16, a1, v13);
  sub_1ACA394B0(a3, (uint64_t)v12);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (v15 + *(unsigned __int8 *)(v26 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v27;
  uint64_t v22 = v25;
  *((void *)v20 + 2) = v27;
  *((void *)v20 + 3) = v22;
  *((void *)v20 + 4) = a7;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v20[v18], v17, v13);
  sub_1ACA56190((uint64_t)v12, (uint64_t)&v20[v19]);
  (*(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t, uint64_t, void *), char *, uint64_t, uint64_t))(a7 + 32))(a3, v28, sub_1ACB08000, v20, v21, a7);
  return swift_release();
}

uint64_t sub_1ACB06E10(uint64_t a1)
{
  return sub_1ACB06BB8(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

void sub_1ACB06E20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a6;
  uint64_t v15 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MediaAPIResponse();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v30 - v19);
  if (a1 && a2)
  {
    id v21 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7722D0);
    uint64_t v22 = sub_1ACE775A8();
    if (v22)
    {
      uint64_t v23 = v22;
      sub_1ACA394B0(a7, (uint64_t)v17);
      MediaAPIResponse.init(objects:response:contentHash:parameters:)(v23, (uint64_t)v21, a3, a4, (uint64_t)v17, v20);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
      sub_1ACE76708();
      sub_1ACE766F8();
    }
    else
    {
      unint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2040) | 0x8000000000000000;
      sub_1ACB08144();
      uint64_t v28 = swift_allocError();
      *uint64_t v29 = a9;
      v29[1] = v27;
      uint64_t v31 = v28;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
      sub_1ACE76708();
      sub_1ACE766E8();
    }
  }
  else
  {
    sub_1ACB08144();
    uint64_t v24 = swift_allocError();
    *uint64_t v25 = a5;
    v25[1] = 0;
    uint64_t v31 = v24;
    id v26 = a5;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
    sub_1ACE76708();
    sub_1ACE766E8();
  }
}

uint64_t MediaRequestControllerProtocol.perform(params:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  void v4[6] = a1;
  v4[7] = a2;
  return MEMORY[0x1F4188298](sub_1ACB070A8, 0, 0);
}

uint64_t sub_1ACB070A8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2018);
  *uint64_t v4 = v0;
  v4[1] = sub_1ACB071B8;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000010, 0x80000001ACEC8730, sub_1ACB074C4, v3, v5);
}

uint64_t sub_1ACB071B8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1ACB07300;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1ACB072D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACB072D4()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 8))(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACB07300()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACB07364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  MediaRequestControllerProtocol.perform(params:callback:)(a3, (uint64_t)sub_1ACB07CC0, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1ACB074C4(uint64_t a1)
{
  return sub_1ACB07364(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1ACB074D0(int a1, int a2, id a3, unint64_t a4, char a5)
{
  if (a5)
  {
    id v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
    return sub_1ACE766E8();
  }
  else
  {
    sub_1ACA3985C((uint64_t)a3, a4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
    return sub_1ACE766F8();
  }
}

id sub_1ACB07558@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_responseQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1ACB075C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1ACB07614(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.cachePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.cachePolicy.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.cachePolicy.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.performRecursivelyWithParsing(params:account:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.performRecursivelyWithParsing(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.performRecursively(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.perform(params:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.send<A>(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of MediaRequestControllerProtocol.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 72)
                                                                                     + **(int **)(a6 + 72));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1ACA50B84;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t method lookup function for MediaRequestController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaRequestController);
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MediaRequestController.responseQueue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MediaRequestController.cachePolicy.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MediaRequestController.cachePolicy.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MediaRequestController.cachePolicy.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:account:callback:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MediaRequestController.performRecursivelyWithParsing(params:callback:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MediaRequestController.performRecursively(params:callback:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MediaRequestController.perform(params:callback:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

void *initializeBufferWithCopyOfBuffer for MediaRequestControllerError(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  sub_1ACB07A8C(*(id *)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_1ACB07A8C(id result, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return result;
  }
  return result;
}

void destroy for MediaRequestControllerError(uint64_t a1)
{
}

void sub_1ACB07AA4(id a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
}
  }

uint64_t assignWithCopy for MediaRequestControllerError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  sub_1ACB07A8C(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  sub_1ACB07AA4(v5, v6);
  return a1;
}

uint64_t assignWithTake for MediaRequestControllerError(uint64_t a1, _OWORD *a2)
{
  id v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1ACB07AA4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaRequestControllerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x38 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MediaRequestControllerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1ACB07BE0(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_1ACB07BEC(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1ACB07BFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MediaRequestControllerError()
{
  return &type metadata for MediaRequestControllerError;
}

uint64_t sub_1ACB07C2C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACB07CC0(int a1, char a2, void *a3, unint64_t a4, char a5)
{
  int v8 = a2 & 1;
  char v9 = a5 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2030);
  return sub_1ACB074D0(a1, v8, a3, a4, v9);
}

uint64_t sub_1ACB07D64()
{
  type metadata accessor for MediaAPIResponse();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v1 = sub_1ACE76708();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for MediaRequest.Params();
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1ACA39518(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(void *)(v0 + v6 + 16), *(void *)(v0 + v6 + 24), *(void *)(v0 + v6 + 32), *(unsigned char *)(v0 + v6 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v6 + *(int *)(v5 + 104);
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACB08000(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = *(void *)(v5 + 24);
  type metadata accessor for MediaAPIResponse();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v12 = *(void *)(sub_1ACE76708() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  sub_1ACB06E20(a1, a2, a3, a4, a5, v5 + v13, v5 + ((v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v10, v11);
}

unint64_t sub_1ACB08144()
{
  unint64_t result = qword_1E99F2038;
  if (!qword_1E99F2038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2038);
  }
  return result;
}

unint64_t sub_1ACB08198()
{
  unint64_t result = qword_1EB772478[0];
  if (!qword_1EB772478[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB772478);
  }
  return result;
}

id sub_1ACB081EC(uint64_t a1, void *a2)
{
  unint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1ACB08254(void *a1)
{
  return sub_1ACB063DC(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_1ACB0827C(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1ACA50850((uint64_t)a1, a2);
  }
}

uint64_t sub_1ACB08288()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v1 = sub_1ACE76708();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ACB08354(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  sub_1ACE76708();
  return sub_1ACB05ED8(a1);
}

unint64_t sub_1ACB08420()
{
  unint64_t result = qword_1E99F2048;
  if (!qword_1E99F2048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2048);
  }
  return result;
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  unint64_t v7 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1ACB086A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1ACB03AE4(a1, a2, a3, a4, a5, *(void (**)(void *, void *))(v5 + 16), *(void *)(v5 + 24), *(void **)(v5 + 32), v5 + v12, *(void **)(v5 + v13), *(void **)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1ACB08784()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_1ACA39518(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 104);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1ACB08978(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1ACCEBC10(a1, v4, v5);
}

uint64_t sub_1ACB089EC()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  unint64_t v7 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1ACB08C0C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void (**)(void, unint64_t, void, id, uint64_t))(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void **)(v2 + v7);
  uint64_t v11 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACB04764(a1, a2, v8, v9, (uint64_t *)(v2 + v6), v10, v11);
}

uint64_t sub_1ACB08CC8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1ACB08CF4()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB08D4C()
{
  return (*(uint64_t (**)(void, void, void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1ACB08DA4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 48;
    do
    {
      sub_1ACE762C8();
      sub_1ACE762C8();
      sub_1ACE77458();
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      if (v6 >= v5 >> 1) {
        sub_1ACC82D44(v5 > 1, v6 + 1, 1);
      }
      *(void *)(v9 + 16) = v6 + 1;
      uint64_t v7 = v9 + 16 * v6;
      *(void *)(v7 + 32) = 0;
      *(void *)(v7 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0xE000000000000000;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ACB08ECC()
{
  uint64_t v1 = 0x62694C6C61636F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7265666E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x495041616964656DLL;
  }
}

uint64_t MediaRequest.Params.debugDescription.getter()
{
  uint64_t v1 = sub_1ACE77BD8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = (void *)sub_1ACA3625C(MEMORY[0x1E4FBC860]);
  *((void *)&v33 + 1) = type metadata accessor for MediaRequest.Params();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v32);
  sub_1ACA394B0(v0, (uint64_t)boxed_opaque_existential_1);
  sub_1ACE77B98();
  sub_1ACE77BC8();
  sub_1ACE77438();
  swift_release();
  swift_retain();
  sub_1ACE77578();
  sub_1ACB09374((uint64_t)v31, (uint64_t)v32);
  if (!v34)
  {
LABEL_17:
    swift_release_n();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = (void *)sub_1ACD0AEF0((uint64_t)v5);
    swift_bridgeObjectRelease();
    v32[0] = v23;
    sub_1ACB09308(v32);
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_1ACB08DA4((uint64_t)v32[0]);
    swift_bridgeObjectRelease();
    swift_release();
    v32[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA8B0C0();
    uint64_t v25 = sub_1ACE76138();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v25;
  }
  while (1)
  {
    while (1)
    {
      uint64_t v8 = v32[0];
      uint64_t v7 = v32[1];
      sub_1ACA3AA44(&v33, v31);
      if (v7) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      sub_1ACE77578();
      sub_1ACB09374((uint64_t)v31, (uint64_t)v32);
      if (!v34) {
        goto LABEL_17;
      }
    }
    unint64_t v27 = v4;
    uint64_t v28 = v2;
    uint64_t v9 = v1;
    sub_1ACA33128((uint64_t)v31, (uint64_t)v30);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = v5;
    unint64_t v12 = sub_1ACA657FC((uint64_t)v8, (uint64_t)v7);
    uint64_t v13 = v5[2];
    BOOL v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v15 = v11;
    if (v5[3] >= v13 + v14)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v5 = v29;
        if (v11) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1ACD0568C();
        unint64_t v5 = v29;
        if (v15) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1ACCFB66C();
      uint64_t v16 = sub_1ACA657FC((uint64_t)v8, (uint64_t)v7);
      if ((v15 & 1) != (v17 & 1)) {
        goto LABEL_20;
      }
      unint64_t v12 = v16;
      unint64_t v5 = v29;
      if (v15)
      {
LABEL_12:
        uint64_t v18 = (_OWORD *)(v5[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
        sub_1ACA3AA44(v30, v18);
        goto LABEL_16;
      }
    }
    v5[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v19 = (void *)(v5[6] + 16 * v12);
    void *v19 = v8;
    v19[1] = v7;
    sub_1ACA3AA44(v30, (_OWORD *)(v5[7] + 32 * v12));
    uint64_t v20 = v5[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_19;
    }
    _OWORD v5[2] = v22;
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    sub_1ACE77578();
    sub_1ACB09374((uint64_t)v31, (uint64_t)v32);
    uint64_t v1 = v9;
    uint64_t v4 = v27;
    uint64_t v2 = v28;
    if (!v34) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_1ACE77A68();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ACB09308(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1ACBE80B4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1ACB094B4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1ACB09374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACB093DC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1ACB0940C();
  unint64_t result = sub_1ACB09460();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1ACB0940C()
{
  unint64_t result = qword_1E99F2058;
  if (!qword_1E99F2058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2058);
  }
  return result;
}

unint64_t sub_1ACB09460()
{
  unint64_t result = qword_1E99F2060;
  if (!qword_1E99F2060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2060);
  }
  return result;
}

uint64_t sub_1ACB094B4(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v2)
  {
    if (v2 < 0) {
      goto LABEL_149;
    }
    if (v2) {
      return sub_1ACB09C34(0, v2, 1, a1);
    }
    return result;
  }
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  if (v2 < -1) {
    goto LABEL_157;
  }
  uint64_t v102 = result;
  uint64_t v109 = v1;
  if (v2 < 2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v2 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v10 = a1;
LABEL_115:
      uint64_t v92 = v9;
      uint64_t v101 = v7;
      if (v11 >= 2)
      {
        uint64_t v93 = *v10;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_144;
          }
          if (!v93) {
            goto LABEL_156;
          }
          uint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v11 + 24];
          uint64_t v98 = v109;
          sub_1ACB09D64((char *)(v93 + 48 * v96), (char *)(v93 + 48 * *(void *)&v92[16 * v11 + 16]), v93 + 48 * v97, __dst);
          uint64_t v109 = v98;
          if (v98) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_145;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_1ACBE8028((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_146;
          }
          uint64_t v99 = &v95[16 * v94 + 32];
          *(void *)uint64_t v99 = v96;
          *((void *)v99 + 1) = v97;
          unint64_t v100 = *((void *)v95 + 2);
          if (v11 > v100) {
            goto LABEL_147;
          }
          memmove(&v95[16 * v11 + 16], &v95[16 * v11 + 32], 16 * (v100 - v11));
          uint64_t v92 = v95;
          *((void *)v95 + 2) = v100 - 1;
          unint64_t v11 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(void *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v101 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v5 = v4 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E20);
    uint64_t v6 = sub_1ACE76608();
    *(void *)(v6 + 16) = v5;
    uint64_t v101 = v6;
    __dst = (char *)(v6 + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v10 = a1;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 < v2)
    {
      uint64_t v13 = *v10;
      sub_1ACB0A0DC(*v10 + 48 * v8, (uint64_t)&v107);
      sub_1ACB0A0DC(v13 + 48 * v12, (uint64_t)&v105);
      if (v105 == v107 && v106 == v108) {
        int v15 = 0;
      }
      else {
        int v15 = sub_1ACE77848();
      }
      sub_1ACB0A144((uint64_t)&v105);
      sub_1ACB0A144((uint64_t)&v107);
      uint64_t v8 = v12 + 2;
      if (v12 + 2 < v2)
      {
        uint64_t v16 = v13;
        uint64_t v17 = v13 + 48 * v12 + 48;
        while (1)
        {
          sub_1ACB0A0DC(v17 + 48, (uint64_t)&v107);
          sub_1ACB0A0DC(v17, (uint64_t)&v105);
          BOOL v18 = v105 == v107 && v106 == v108;
          int v19 = v18 ? 0 : sub_1ACE77848();
          sub_1ACB0A144((uint64_t)&v105);
          sub_1ACB0A144((uint64_t)&v107);
          if ((v15 ^ v19)) {
            break;
          }
          ++v8;
          v17 += 48;
          if (v2 == v8)
          {
            uint64_t v8 = v2;
            break;
          }
        }
        uint64_t v13 = v16;
      }
      if (v15)
      {
        if (v8 < v12) {
          goto LABEL_150;
        }
        if (v12 < v8)
        {
          uint64_t v20 = (long long *)(v13 + 48 * v8 - 48);
          BOOL v21 = (long long *)(v13 + 48 * v12);
          uint64_t v22 = v8;
          uint64_t v23 = v12;
          do
          {
            if (v23 != --v22)
            {
              if (!v13) {
                goto LABEL_155;
              }
              long long v24 = *v21;
              long long v25 = v21[1];
              long long v26 = v21[2];
              long long v28 = v20[1];
              long long v27 = v20[2];
              *BOOL v21 = *v20;
              v21[1] = v28;
              void v21[2] = v27;
              v20[1] = v25;
              long long v20[2] = v26;
              *uint64_t v20 = v24;
            }
            ++v23;
            v20 -= 3;
            v21 += 3;
          }
          while (v23 < v22);
        }
      }
    }
    if (v8 >= v2) {
      goto LABEL_64;
    }
    if (__OFSUB__(v8, v12)) {
      goto LABEL_148;
    }
    if (v8 - v12 >= v102) {
      goto LABEL_64;
    }
    if (__OFADD__(v12, v102)) {
      goto LABEL_151;
    }
    if (v12 + v102 < v2) {
      uint64_t v2 = v12 + v102;
    }
    if (v2 < v12) {
      break;
    }
    if (v8 != v2)
    {
      uint64_t v29 = 48 * v8;
      do
      {
        uint64_t v30 = v12;
        uint64_t v31 = v29;
        while (1)
        {
          uint64_t v32 = *v10 + v31;
          sub_1ACB0A0DC(v32, (uint64_t)&v107);
          sub_1ACB0A0DC(v32 - 48, (uint64_t)&v105);
          if (v105 == v107 && v106 == v108) {
            break;
          }
          char v34 = sub_1ACE77848();
          sub_1ACB0A144((uint64_t)&v105);
          sub_1ACB0A144((uint64_t)&v107);
          if ((v34 & 1) == 0) {
            goto LABEL_53;
          }
          if (!*v10) {
            goto LABEL_153;
          }
          uint64_t v35 = (long long *)(*v10 + v31);
          long long v37 = v35[1];
          long long v36 = v35[2];
          long long v38 = *v35;
          long long v39 = *(v35 - 2);
          *uint64_t v35 = *(v35 - 3);
          v35[1] = v39;
          v35[2] = *(v35 - 1);
          *(v35 - 3) = v38;
          *(v35 - 2) = v37;
          *(v35 - 1) = v36;
          v31 -= 48;
          if (v8 == ++v30) {
            goto LABEL_53;
          }
        }
        sub_1ACB0A144((uint64_t)&v105);
        sub_1ACB0A144((uint64_t)&v107);
LABEL_53:
        ++v8;
        v29 += 48;
      }
      while (v8 != v2);
      uint64_t v8 = v2;
    }
LABEL_64:
    if (v8 < v12) {
      goto LABEL_143;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1ACBE7A88(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v41 = *((void *)v9 + 2);
    unint64_t v40 = *((void *)v9 + 3);
    unint64_t v11 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v9 = sub_1ACBE7A88((char *)(v40 > 1), v41 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v11;
    uint64_t v42 = v9 + 32;
    uint64_t v43 = &v9[16 * v41 + 32];
    *(void *)uint64_t v43 = v12;
    *((void *)v43 + 1) = v8;
    if (v41)
    {
      uint64_t v10 = a1;
      while (1)
      {
        unint64_t v44 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v49 = &v42[16 * v11];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_132;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_133;
          }
          unint64_t v56 = v11 - 2;
          uint64_t v57 = &v42[16 * v11 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_135;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_138;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_142;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_102;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v73 = *((void *)v9 + 4);
            uint64_t v74 = *((void *)v9 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_96;
          }
          uint64_t v46 = *((void *)v9 + 4);
          uint64_t v45 = *((void *)v9 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_134;
        }
        unint64_t v56 = v11 - 2;
        uint64_t v62 = &v42[16 * v11 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_137;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_140;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_141;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_102:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_104;
        }
LABEL_96:
        if (v67) {
          goto LABEL_136;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_139;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_104:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v11)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        uint64_t v84 = *v10;
        if (!*v10) {
          goto LABEL_154;
        }
        uint64_t v85 = v9;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = &v42[16 * v44];
        uint64_t v89 = *((void *)v88 + 1);
        uint64_t v90 = v109;
        sub_1ACB09D64((char *)(v84 + 48 * *(void *)v86), (char *)(v84 + 48 * *(void *)v88), v84 + 48 * v89, __dst);
        uint64_t v109 = v90;
        if (v90) {
          goto LABEL_112;
        }
        if (v89 < v87) {
          goto LABEL_129;
        }
        if (v44 > *((void *)v85 + 2)) {
          goto LABEL_130;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v42[16 * v83 + 8] = v89;
        unint64_t v91 = *((void *)v85 + 2);
        if (v44 >= v91) {
          goto LABEL_131;
        }
        uint64_t v9 = v85;
        unint64_t v11 = v91 - 1;
        memmove(&v42[16 * v44], v88 + 16, 16 * (v91 - 1 - v44));
        *((void *)v85 + 2) = v91 - 1;
        BOOL v72 = v91 > 2;
        uint64_t v10 = a1;
        if (!v72) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
    uint64_t v10 = a1;
LABEL_15:
    uint64_t v2 = v10[1];
    if (v8 >= v2)
    {
      uint64_t v7 = v101;
      goto LABEL_115;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACB09C34(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = result;
    uint64_t v8 = 48 * a3;
LABEL_6:
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = *a4 + v10;
      sub_1ACB0A0DC(v11, (uint64_t)v20);
      sub_1ACB0A0DC(v11 - 48, (uint64_t)v19);
      if (v19[0] == v20[0] && v19[1] == v20[1])
      {
        sub_1ACB0A144((uint64_t)v19);
        uint64_t result = sub_1ACB0A144((uint64_t)v20);
LABEL_5:
        ++v5;
        v8 += 48;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v13 = sub_1ACE77848();
      sub_1ACB0A144((uint64_t)v19);
      uint64_t result = sub_1ACB0A144((uint64_t)v20);
      if ((v13 & 1) == 0) {
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      BOOL v14 = (long long *)(*a4 + v10);
      long long v16 = v14[1];
      long long v15 = v14[2];
      long long v17 = *v14;
      long long v18 = *(v14 - 2);
      *BOOL v14 = *(v14 - 3);
      v14[1] = v18;
      void v14[2] = *(v14 - 1);
      *(v14 - 3) = v17;
      *(v14 - 2) = v16;
      *(v14 - 1) = v15;
      v10 -= 48;
      if (v5 == ++v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACB09D64(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  unint64_t v40 = __src;
  long long v39 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      uint64_t v22 = &v4[48 * v11];
      long long v38 = v22;
      unint64_t v40 = v6;
      if (__src < v6 && v10 >= 48)
      {
        uint64_t v23 = (char *)(a3 - 48);
        do
        {
          sub_1ACB0A0DC((uint64_t)(v22 - 48), (uint64_t)&v36);
          long long v26 = v6 - 48;
          sub_1ACB0A0DC((uint64_t)(v6 - 48), (uint64_t)&v34);
          if (v34 == v36 && v35 == v37) {
            char v28 = 0;
          }
          else {
            char v28 = sub_1ACE77848();
          }
          uint64_t v29 = v23 + 48;
          sub_1ACB0A144((uint64_t)&v34);
          sub_1ACB0A144((uint64_t)&v36);
          if (v28)
          {
            if (v29 != v6 || v23 >= v6)
            {
              long long v24 = *(_OWORD *)v26;
              long long v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v23 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v23 + 2) = v25;
              *(_OWORD *)uint64_t v23 = v24;
            }
            v40 -= 48;
            uint64_t v22 = v38;
            if (v38 <= v4) {
              break;
            }
          }
          else
          {
            unint64_t v30 = (unint64_t)v38;
            uint64_t v22 = v38 - 48;
            v38 -= 48;
            if ((unint64_t)v29 < v30 || (unint64_t)v23 >= v30 || v29 != (char *)v30)
            {
              long long v31 = *(_OWORD *)v22;
              long long v32 = *(_OWORD *)(v30 - 16);
              *((_OWORD *)v23 + 1) = *(_OWORD *)(v30 - 32);
              *((_OWORD *)v23 + 2) = v32;
              *(_OWORD *)uint64_t v23 = v31;
            }
            long long v26 = v6;
            if (v22 <= v4) {
              break;
            }
          }
          v23 -= 48;
          uint64_t v6 = v26;
        }
        while (v26 > __src);
      }
LABEL_51:
      sub_1ACBE7DCC((void **)&v40, (const void **)&v39, &v38);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[48 * v9];
    long long v38 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        sub_1ACB0A0DC((uint64_t)v6, (uint64_t)&v36);
        sub_1ACB0A0DC((uint64_t)v4, (uint64_t)&v34);
        if (v34 == v36 && v35 == v37) {
          break;
        }
        char v14 = sub_1ACE77848();
        sub_1ACB0A144((uint64_t)&v34);
        sub_1ACB0A144((uint64_t)&v36);
        if ((v14 & 1) == 0) {
          goto LABEL_18;
        }
        long long v15 = v40;
        unint64_t v16 = (unint64_t)(v6 + 48);
        if (v40 >= v6 && (unint64_t)v40 < v16 && v40 == v6)
        {
          long long v15 = v6;
        }
        else
        {
          long long v17 = *(_OWORD *)v6;
          long long v18 = *((_OWORD *)v6 + 2);
          *((_OWORD *)v40 + 1) = *((_OWORD *)v6 + 1);
          *((_OWORD *)v15 + 2) = v18;
          *(_OWORD *)long long v15 = v17;
        }
LABEL_22:
        unint64_t v40 = v15 + 48;
        uint64_t v4 = v39;
        if ((unint64_t)v39 < v12)
        {
          uint64_t v6 = (char *)v16;
          if (v16 < a3) {
            continue;
          }
        }
        goto LABEL_51;
      }
      sub_1ACB0A144((uint64_t)&v34);
      sub_1ACB0A144((uint64_t)&v36);
LABEL_18:
      long long v15 = v40;
      int v19 = v39 + 48;
      if (v40 != v39 || v40 >= v19)
      {
        long long v20 = *(_OWORD *)v39;
        long long v21 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v40 + 1) = *((_OWORD *)v39 + 1);
        *((_OWORD *)v15 + 2) = v21;
        *(_OWORD *)long long v15 = v20;
      }
      long long v39 = v19;
      unint64_t v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACB0A0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB0A144(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MTEpisodePubDateLimit.description.getter(uint64_t a1)
{
  uint64_t result = 0x6B656557656E6FLL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x736B6565576F7774;
      break;
    case 2:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t result = 0x74696D694C6F6ELL;
      break;
    default:
      type metadata accessor for MTEpisodePubDateLimit(0);
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACB0A264);
  }
  return result;
}

uint64_t sub_1ACB0A274()
{
  uint64_t result = 0x6B656557656E6FLL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x736B6565576F7774;
      break;
    case 2:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 3:
      uint64_t result = 0x74696D694C6F6ELL;
      break;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACB0A32CLL);
  }
  return result;
}

uint64_t sub_1ACB0A33C(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = v4[4];
      if (v5)
      {
        uint64_t v19 = v4[3];
        long long v20 = (void *)v4[5];
        uint64_t v6 = v4[1];
        uint64_t v18 = v4[2];
        uint64_t v8 = *(v4 - 1);
        uint64_t v7 = *v4;
        uint64_t v9 = *(v4 - 2);
        long long v21 = (objc_class *)type metadata accessor for ServerPodcastEpisode();
        uint64_t v10 = (char *)objc_allocWithZone(v21);
        uint64_t v11 = (void **)&v10[OBJC_IVAR___MTServerPodcastEpisode_relationships];
        *(void *)&v10[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
        unint64_t v12 = &v10[OBJC_IVAR___MTServerPodcastEpisode_id];
        *(void *)unint64_t v12 = v9;
        *((void *)v12 + 1) = v8;
        char v13 = &v10[OBJC_IVAR___MTServerPodcastEpisode_type];
        *(void *)char v13 = v7;
        *((void *)v13 + 1) = v6;
        char v14 = &v10[OBJC_IVAR___MTServerPodcastEpisode_href];
        *(void *)char v14 = v18;
        *((void *)v14 + 1) = v19;
        *(void *)&v10[OBJC_IVAR___MTServerPodcastEpisode_attributes] = v5;
        swift_beginAccess();
        long long v15 = *v11;
        *uint64_t v11 = v20;
        swift_retain_n();
        id v16 = v20;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v17 = v16;

        v22.receiver = v10;
        v22.super_class = v21;
        objc_msgSendSuper2(&v22, sel_init);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();

        MEMORY[0x1AD118700]();
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1ACE765C8();
        }
        sub_1ACE76628();
        sub_1ACE76598();
      }
      v4 += 9;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v23;
  }
  return result;
}

uint64_t sub_1ACB0A560(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82D44(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v6 = (char *)MEMORY[0x1AD119490](v5, a1);
      }
      else {
        uint64_t v6 = (char *)*(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      uint64_t v8 = &v6[OBJC_IVAR___MTServerPodcastEpisode_id];
      swift_beginAccess();
      uint64_t v9 = *(void *)v8;
      uint64_t v10 = *((void *)v8 + 1);
      swift_bridgeObjectRetain();

      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1ACC82D44(v11 > 1, v12 + 1, 1);
      }
      ++v5;
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v10;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB0A6E4()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_queue);
  aBlock[4] = sub_1ACB19CD4;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_88;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1ACB19A40((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1ACB0A990(uint64_t a1)
{
  uint64_t v3 = sub_1ACE753F8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = &v36[-v9];
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = &v36[-v11];
  uint64_t v13 = sub_1ACE75438();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v46 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACB18D38((long long *)(a1 + 16), v49);
  if (sub_1ACB0FEDC((uint64_t)v49) == 8)
  {
    uint64_t v43 = v10;
    uint64_t v16 = a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
    uint64_t v41 = sub_1ACE750C8();
    unint64_t v1 = v17;
    LODWORD(v42) = *(unsigned __int8 *)(v16 + *(int *)(type metadata accessor for StoreFeedUpdater.Update(0) + 28));
    if (qword_1EB76D390 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB76D378);
  uint64_t v44 = v14;
  uint64_t v45 = v13;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v46, v18, v13);
  sub_1ACE75428();
  sub_1ACE753C8();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1ACE75428();
  int v20 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    int v37 = v20;
    long long v38 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
    v38(v43, v12, v3);
    uint64_t v21 = swift_slowAlloc();
    long long v39 = v7;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v24 = v23;
    *(void *)&v48[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&v47[0] = sub_1ACA3189C(v41, v1, (uint64_t *)v48);
    uint64_t v41 = v4;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    BOOL v25 = v42 == 0;
    long long v26 = "DeltaFeedUpdate";
    if (v42) {
      long long v26 = "BootstrapFeedUpdate";
    }
    uint64_t v42 = v26;
    *(_WORD *)(v22 + 12) = 2080;
    if (v25) {
      uint64_t v27 = 0x65654661746C6544;
    }
    else {
      uint64_t v27 = 0xD000000000000013;
    }
    if (v25) {
      unint64_t v28 = 0xEF65746164705564;
    }
    else {
      unint64_t v28 = 0x80000001ACEC8A40;
    }
    *(void *)&v47[0] = sub_1ACA3189C(v27, v28, (uint64_t *)v48);
    uint64_t v4 = v41;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    uint64_t v29 = v43;
    os_signpost_id_t v30 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v19, (os_signpost_type_t)v37, v30, v42, "[identifier=%{name=identifier}s] %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v31 = v24;
    a1 = v40;
    MEMORY[0x1AD11B340](v31, -1, -1);
    uint64_t v32 = v22;
    long long v33 = v39;
    MEMORY[0x1AD11B340](v32, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v29, v3);
    v38(v33, v12, v3);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v12, v3);
  }
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v34 = sub_1ACE75468();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v12, v3);
  (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v46, v45);
  *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_overallInterval) = v34;
  swift_release();
  sub_1ACB19CDC((uint64_t)v48);
  sub_1ACB18D38(v48, v47);
  return sub_1ACB0AEA4(v47);
}

uint64_t sub_1ACB0AEA4(long long *a1)
{
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE75E48();
  uint64_t v7 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB18D38(a1, v17);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  sub_1ACB18D38(v17, (_OWORD *)(v10 + 24));
  aBlock[4] = sub_1ACB19C94;
  void aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_85;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACB18D78((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
  sub_1ACE75E08();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1ACB19A40((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v9, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  return swift_release();
}

uint64_t sub_1ACB0B1D0(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75448();
  uint64_t v265 = *(void *)(v4 - 8);
  uint64_t v266 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  v263 = (char *)v258 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v262 = (char *)v258 - v7;
  uint64_t v8 = sub_1ACE75438();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v258 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v278 = (char *)v258 - v13;
  uint64_t v14 = sub_1ACE753F8();
  uint64_t v280 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  v264 = (char *)v258 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v268 = (char *)v258 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v267 = (char *)v258 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v275 = (char *)v258 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v274 = (char *)v258 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v273 = (char *)v258 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v272 = (char *)v258 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v271 = (char *)v258 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v270 = (void (*)(char *, char *, uint64_t))((char *)v258 - v32);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)v258 - v34;
  MEMORY[0x1F4188790](v33);
  v269 = (char *)v258 - v36;
  v277 = (char *)type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v277);
  long long v38 = (char *)v258 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB18D38(a1, v298);
  sub_1ACB18D38(v2 + 1, v299);
  sub_1ACB18D38(v2 + 1, v300);
  sub_1ACB18D38(v298, v2 + 1);
  sub_1ACB18D78((uint64_t)v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
  sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
  sub_1ACB18D78((uint64_t)v300, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1ACE754C8();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EB76D4E0);
  sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
  sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
  swift_retain();
  uint64_t v40 = sub_1ACE75498();
  os_log_type_t v41 = sub_1ACE76C08();
  int v42 = v41;
  BOOL v43 = os_log_type_enabled(v40, v41);
  uint64_t v279 = v14;
  if (v43)
  {
    uint64_t v44 = swift_slowAlloc();
    os_log_t v260 = v40;
    uint64_t v45 = v44;
    uint64_t v261 = swift_slowAlloc();
    *(void *)&long long v284 = v261;
    *(_DWORD *)uint64_t v45 = 141558531;
    *(void *)&v295[0] = 1752392040;
    int v259 = v42;
    sub_1ACE76FF8();
    *(_WORD *)(v45 + 12) = 2081;
    v276 = (void (*)(void, void, void))v8;
    v258[1] = v45 + 14;
    sub_1ACB18E7C((uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v38, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v46 = (uint64_t *)&v38[*((int *)v277 + 8)];
    uint64_t v47 = v12;
    uint64_t v48 = v9;
    uint64_t v49 = v35;
    uint64_t v50 = v2;
    uint64_t v52 = *v46;
    unint64_t v51 = v46[1];
    swift_bridgeObjectRetain();
    sub_1ACB19D1C((uint64_t)v38, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v53 = v52;
    uint64_t v2 = v50;
    uint64_t v35 = v49;
    uint64_t v9 = v48;
    unint64_t v12 = v47;
    *(void *)&v295[0] = sub_1ACA3189C(v53, v51, (uint64_t *)&v284);
    sub_1ACE76FF8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2082;
    sub_1ACB18D38(v298, v295);
    unint64_t v54 = sub_1ACB18A80();
    *(void *)&v295[0] = sub_1ACA3189C(v54, v55, (uint64_t *)&v284);
    uint64_t v14 = v279;
    uint64_t v8 = (uint64_t)v276;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
    sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
    os_log_t v56 = v260;
    _os_log_impl(&dword_1AC9D5000, v260, (os_log_type_t)v259, "Job %{private,mask.hash}s: %{public}s", (uint8_t *)v45, 0x20u);
    uint64_t v57 = v261;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v57, -1, -1);
    MEMORY[0x1AD11B340](v45, -1, -1);
  }
  else
  {
    swift_release();
    sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
    sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
  }
  uint64_t v58 = v278;
  sub_1ACB0EB1C();
  sub_1ACB18D38(v298, v295);
  switch(sub_1ACB0FEDC((uint64_t)v295))
  {
    case 1u:
      uint64_t v144 = sub_1ACB0FF08((uint64_t)v295);
      uint64_t v146 = *(void *)v144;
      uint64_t v145 = *(char **)(v144 + 8);
      v277 = *(char **)(v144 + 16);
      v278 = v145;
      uint64_t v147 = *(char **)(v144 + 24);
      v273 = *(const char **)(v144 + 32);
      v274 = v147;
      LODWORD(v272) = *(unsigned __int8 *)(v144 + 40);
      id v148 = *(void **)(v144 + 48);
      uint64_t v149 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)uint64_t v149 = "RequestInitialEpisodes";
      *((void *)v149 + 1) = 22;
      *((_WORD *)v149 + 8) = 2;
      uint64_t v150 = qword_1EB76D390;
      id v151 = v148;
      if (v150 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      char v152 = v271;
      sub_1ACE753C8();
      swift_retain_n();
      unint64_t v153 = sub_1ACE75428();
      int v154 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        v270 = *(void (**)(char *, char *, uint64_t))(v280 + 16);
        LODWORD(v269) = v154;
        v270(v35, v152, v14);
        uint64_t v155 = (uint8_t *)swift_slowAlloc();
        uint64_t v156 = swift_slowAlloc();
        v275 = (char *)v2;
        uint64_t v157 = v156;
        v276 = (void (*)(void, void, void))v151;
        *(_DWORD *)uint64_t v155 = 136315138;
        *(void *)&long long v284 = v156;
        uint64_t v158 = sub_1ACE750C8();
        *(void *)&v283[0] = sub_1ACA3189C(v158, v159, (uint64_t *)&v284);
        id v151 = v276;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v160 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v153, (os_signpost_type_t)v269, v160, "RequestInitialEpisodes", "[identifier=%{name=identifier}s] RequestInitialEpisodes", v155, 0xCu);
        swift_arrayDestroy();
        uint64_t v161 = v157;
        uint64_t v2 = (long long *)v275;
        char v152 = v271;
        MEMORY[0x1AD11B340](v161, -1, -1);
        int64_t v162 = v155;
        uint64_t v14 = v279;
        MEMORY[0x1AD11B340](v162, -1, -1);

        uint64_t v163 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v35, v14);
        v270(v35, v152, v14);
      }
      else
      {
        swift_release_n();

        uint64_t v163 = v280;
        (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v35, v152, v14);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v230 = sub_1ACE75468();
      (*(void (**)(char *, uint64_t))(v163 + 8))(v152, v14);
      *(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v230;
      swift_release();
      *(void *)&long long v284 = v146;
      *((void *)&v284 + 1) = v278;
      *(void *)&long long v285 = v277;
      *((void *)&v285 + 1) = v274;
      *(void *)&long long v286 = v273;
      BYTE8(v286) = (_BYTE)v272;
      uint64_t v231 = swift_allocObject();
      swift_weakInit();
      uint64_t v232 = swift_allocObject();
      *(void *)(v232 + 16) = v231;
      *(void *)(v232 + 24) = v151;
      id v233 = v151;
      swift_retain();
      sub_1ACB10A7C(&v284, (uint64_t)sub_1ACB18E74, v232);

      swift_release();
      swift_release();
      goto LABEL_66;
    case 2u:
      uint64_t v77 = v8;
      uint64_t v78 = (void **)sub_1ACB0FF08((uint64_t)v295);
      uint64_t v80 = v78 + 1;
      uint64_t v79 = *v78;
      uint64_t v81 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)uint64_t v81 = "ProcessShowMetadataAndInitialEpisodes";
      *((void *)v81 + 1) = 37;
      *((_WORD *)v81 + 8) = 2;
      uint64_t v82 = qword_1EB76D390;
      unint64_t v83 = v79;
      if (v82 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v77, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      uint64_t v84 = v272;
      sub_1ACE753C8();
      swift_retain_n();
      uint64_t v85 = sub_1ACE75428();
      int v86 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        uint64_t v87 = v279;
        v276 = *(void (**)(void, void, void))(v280 + 16);
        LODWORD(v275) = v86;
        uint64_t v88 = v2;
        v276(v35, v84, v279);
        uint64_t v89 = (uint8_t *)swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        v274 = (char *)v90;
        v277 = v83;
        v278 = v35;
        *(_DWORD *)uint64_t v89 = 136315138;
        *(void *)&long long v284 = v90;
        uint64_t v91 = sub_1ACE750C8();
        *(void *)&v283[0] = sub_1ACA3189C(v91, v92, (uint64_t *)&v284);
        unint64_t v83 = v277;
        uint64_t v93 = v278;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v94 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v85, (os_signpost_type_t)v275, v94, "ProcessShowMetadataAndInitialEpisodes", "[identifier=%{name=identifier}s] ProcessShowMetadataAndInitialEpisodes", v89, 0xCu);
        uint64_t v95 = v274;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v95, -1, -1);
        uint64_t v96 = v89;
        uint64_t v84 = v272;
        MEMORY[0x1AD11B340](v96, -1, -1);

        uint64_t v97 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v93, v87);
        v276(v93, v84, v87);
      }
      else
      {
        swift_release_n();

        uint64_t v88 = v2;
        uint64_t v87 = v279;
        uint64_t v97 = v280;
        (*(void (**)(char *, const char *, uint64_t))(v280 + 16))(v35, v84, v279);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v225 = sub_1ACE75468();
      (*(void (**)(const char *, uint64_t))(v97 + 8))(v84, v87);
      *(void *)((char *)v88 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v225;
      swift_release();
      long long v291 = *((_OWORD *)v80 + 7);
      long long v292 = *((_OWORD *)v80 + 8);
      long long v293 = *((_OWORD *)v80 + 9);
      char v294 = *((unsigned char *)v80 + 160);
      long long v287 = *((_OWORD *)v80 + 3);
      long long v288 = *((_OWORD *)v80 + 4);
      long long v289 = *((_OWORD *)v80 + 5);
      long long v290 = *((_OWORD *)v80 + 6);
      long long v284 = *(_OWORD *)v80;
      long long v285 = *((_OWORD *)v80 + 1);
      long long v286 = *((_OWORD *)v80 + 2);
      sub_1ACB0E0BC(v83, (uint64_t)&v284);

      goto LABEL_66;
    case 3u:
      uint64_t v98 = sub_1ACB0FF08((uint64_t)v295);
      uint64_t v99 = *(void (**)(void, void, void))v98;
      uint64_t v100 = *(void *)(v98 + 8);
      uint64_t v101 = *(char **)(v98 + 16);
      v277 = *(char **)(v98 + 24);
      v278 = v101;
      v275 = *(char **)(v98 + 32);
      LODWORD(v274) = *(unsigned __int8 *)(v98 + 40);
      uint64_t v102 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)uint64_t v102 = "RequestEpisodes";
      *((void *)v102 + 1) = 15;
      *((_WORD *)v102 + 8) = 2;
      if (qword_1EB76D390 != -1) {
        swift_once();
      }
      uint64_t v103 = v35;
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      uint64_t v104 = v273;
      sub_1ACE753C8();
      swift_retain_n();
      uint64_t v105 = sub_1ACE75428();
      int v106 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        v272 = *(const char **)(v280 + 16);
        LODWORD(v271) = v106;
        ((void (*)(char *, const char *, uint64_t))v272)(v103, v104, v14);
        uint64_t v107 = (uint8_t *)swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        v276 = v99;
        v270 = (void (*)(char *, char *, uint64_t))v108;
        *(_DWORD *)uint64_t v107 = 136315138;
        *(void *)&long long v284 = v108;
        uint64_t v109 = sub_1ACE750C8();
        *(void *)&v283[0] = sub_1ACA3189C(v109, v110, (uint64_t *)&v284);
        uint64_t v14 = v279;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v111 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v105, (os_signpost_type_t)v271, v111, "RequestEpisodes", "[identifier=%{name=identifier}s] RequestEpisodes", v107, 0xCu);
        unint64_t v112 = v270;
        swift_arrayDestroy();
        uint64_t v99 = v276;
        MEMORY[0x1AD11B340](v112, -1, -1);
        char v113 = v107;
        uint64_t v104 = v273;
        MEMORY[0x1AD11B340](v113, -1, -1);

        uint64_t v114 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v103, v14);
        ((void (*)(char *, const char *, uint64_t))v272)(v103, v104, v14);
      }
      else
      {
        swift_release_n();

        uint64_t v114 = v280;
        (*(void (**)(char *, const char *, uint64_t))(v280 + 16))(v103, v104, v14);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v226 = sub_1ACE75468();
      (*(void (**)(const char *, uint64_t))(v114 + 8))(v104, v14);
      *(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v226;
      swift_release();
      *(void *)&long long v284 = v99;
      *((void *)&v284 + 1) = v100;
      *(void *)&long long v285 = v278;
      *((void *)&v285 + 1) = v277;
      *(void *)&long long v286 = v275;
      BYTE8(v286) = (_BYTE)v274;
      uint64_t v227 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1ACB10A7C(&v284, (uint64_t)sub_1ACB18E2C, v227);
      swift_release_n();
      goto LABEL_66;
    case 4u:
      uint64_t v115 = v8;
      uint64_t v116 = sub_1ACB0FF08((uint64_t)v295);
      char v117 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)char v117 = "ProcessEpisodes";
      *((void *)v117 + 1) = 15;
      *((_WORD *)v117 + 8) = 2;
      if (qword_1EB76D390 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v115, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      uint64_t v118 = v274;
      sub_1ACE753C8();
      swift_retain_n();
      uint64_t v119 = sub_1ACE75428();
      int v120 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        v277 = *(char **)(v280 + 16);
        LODWORD(v276) = v120;
        ((void (*)(char *, char *, uint64_t))v277)(v35, v118, v14);
        uint64_t v121 = (uint8_t *)swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        v278 = v35;
        uint64_t v123 = v2;
        uint64_t v124 = v122;
        *(_DWORD *)uint64_t v121 = 136315138;
        *(void *)&long long v284 = v122;
        uint64_t v125 = sub_1ACE750C8();
        *(void *)&v283[0] = sub_1ACA3189C(v125, v126, (uint64_t *)&v284);
        uint64_t v118 = v274;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v127 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v119, (os_signpost_type_t)v276, v127, "ProcessEpisodes", "[identifier=%{name=identifier}s] ProcessEpisodes", v121, 0xCu);
        swift_arrayDestroy();
        uint64_t v128 = v124;
        uint64_t v2 = v123;
        unint64_t v129 = v278;
        MEMORY[0x1AD11B340](v128, -1, -1);
        uint64_t v130 = v121;
        uint64_t v14 = v279;
        MEMORY[0x1AD11B340](v130, -1, -1);

        uint64_t v131 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v129, v14);
        ((void (*)(char *, char *, uint64_t))v277)(v129, v118, v14);
      }
      else
      {
        swift_release_n();

        uint64_t v131 = v280;
        (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v35, v118, v14);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v228 = sub_1ACE75468();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v118, v14);
      *(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v228;
      swift_release();
      long long v291 = *(_OWORD *)(v116 + 112);
      long long v292 = *(_OWORD *)(v116 + 128);
      long long v293 = *(_OWORD *)(v116 + 144);
      char v294 = *(unsigned char *)(v116 + 160);
      long long v287 = *(_OWORD *)(v116 + 48);
      long long v288 = *(_OWORD *)(v116 + 64);
      long long v289 = *(_OWORD *)(v116 + 80);
      long long v290 = *(_OWORD *)(v116 + 96);
      long long v284 = *(_OWORD *)v116;
      long long v285 = *(_OWORD *)(v116 + 16);
      long long v286 = *(_OWORD *)(v116 + 32);
      sub_1ACB11BA8(&v284, 0, 0);
      goto LABEL_66;
    case 5u:
      uint64_t v164 = (uint64_t *)sub_1ACB0FF08((uint64_t)v295);
      uint64_t v165 = *v164;
      uint64_t v166 = (const char *)v164[1];
      int64_t v167 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)int64_t v167 = "ProcessingCompleted";
      *((void *)v167 + 1) = 19;
      *((_WORD *)v167 + 8) = 2;
      if (qword_1EB76D390 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      uint64_t v168 = v275;
      sub_1ACE753C8();
      swift_retain_n();
      v169 = sub_1ACE75428();
      int v170 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        v276 = *(void (**)(void, void, void))(v280 + 16);
        LODWORD(v274) = v170;
        uint64_t v171 = v279;
        v276(v35, v168, v279);
        uint64_t v172 = (uint8_t *)swift_slowAlloc();
        uint64_t v173 = (const char *)swift_slowAlloc();
        v278 = (char *)v165;
        v273 = v173;
        v277 = (char *)v166;
        *(_DWORD *)uint64_t v172 = 136315138;
        *(void *)&long long v284 = v173;
        uint64_t v174 = sub_1ACE750C8();
        *(void *)&v283[0] = sub_1ACA3189C(v174, v175, (uint64_t *)&v284);
        uint64_t v166 = v277;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v176 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v169, (os_signpost_type_t)v274, v176, "ProcessingCompleted", "[identifier=%{name=identifier}s] HandleProcessingCompleted", v172, 0xCu);
        v177 = v273;
        swift_arrayDestroy();
        uint64_t v165 = (uint64_t)v278;
        MEMORY[0x1AD11B340](v177, -1, -1);
        uint64_t v178 = v172;
        uint64_t v168 = v275;
        MEMORY[0x1AD11B340](v178, -1, -1);

        uint64_t v179 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v35, v171);
        v276(v35, v168, v171);
      }
      else
      {
        swift_release_n();

        uint64_t v171 = v279;
        uint64_t v179 = v280;
        (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v35, v168, v279);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v234 = sub_1ACE75468();
      (*(void (**)(char *, uint64_t))(v179 + 8))(v168, v171);
      *(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v234;
      swift_release();
      sub_1ACB0E29C(v165, (uint64_t)v166);
      goto LABEL_66;
    case 6u:
      uint64_t v180 = (void **)sub_1ACB0FF08((uint64_t)v295);
      unint64_t v181 = *v180;
      if (*(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_overallInterval))
      {
        v274 = (char *)*v180;
        sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
        uint64_t v182 = qword_1EB76D390;
        swift_retain();
        if (v182 != -1) {
          swift_once();
        }
        uint64_t v183 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v58, v183, v8);
        v275 = (char *)v2;
        int v184 = *((unsigned __int8 *)v2
               + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update
               + *((int *)v277 + 7));
        uint64_t v185 = sub_1ACE75428();
        uint64_t v186 = v267;
        sub_1ACE75458();
        LODWORD(v277) = sub_1ACE76E08();
        if (sub_1ACE76FA8())
        {
          v187 = "DeltaFeedUpdate";
          if (v184) {
            v187 = "BootstrapFeedUpdate";
          }
          v273 = v187;
          swift_retain();
          v188 = v262;
          sub_1ACE75488();
          swift_release();
          uint64_t v190 = v265;
          uint64_t v189 = v266;
          int v191 = (*(uint64_t (**)(char *, uint64_t))(v265 + 88))(v188, v266);
          int v192 = *MEMORY[0x1E4FBD340];
          v276 = (void (*)(void, void, void))v8;
          v258[0] = v9;
          if (v191 == v192)
          {
            v193 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v190 + 8))(v188, v189);
            v193 = "FAILED";
          }
          v238 = v267;
          uint64_t v239 = v280;
          v240 = v35;
          v241 = v35;
          uint64_t v242 = v279;
          (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v240, v267, v279);
          v243 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v243 = 0;
          os_signpost_id_t v244 = sub_1ACE753D8();
          _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v185, (os_signpost_type_t)v277, v244, v273, v193, v243, 2u);
          MEMORY[0x1AD11B340](v243, -1, -1);

          v245 = *(void (**)(char *, uint64_t))(v239 + 8);
          v245(v238, v242);
          (*(void (**)(char *, void (*)(void, void, void)))(v258[0] + 8))(v278, v276);
          swift_release();
          v245(v241, v242);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v280 + 8))(v186, v279);
          (*(void (**)(char *, uint64_t))(v9 + 8))(v58, v8);
          swift_release();
        }
        unint64_t v181 = v274;
      }
      else
      {
        sub_1ACB18D38(v298, &v284);
        id v236 = *(id *)sub_1ACB0FF08((uint64_t)&v284);
      }
      sub_1ACB18D38(v299, &v284);
      sub_1ACB0E3CC(&v284, v181);
      sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
      v235 = v299;
      return sub_1ACB18D78((uint64_t)v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
    case 7u:
      uint64_t v194 = sub_1ACB0FF08((uint64_t)v295);
      int v195 = *(unsigned __int8 *)(v194 + 64);
      long long v196 = *(_OWORD *)(v194 + 16);
      v296[0] = *(_OWORD *)v194;
      v296[1] = v196;
      long long v197 = *(_OWORD *)(v194 + 48);
      v296[2] = *(_OWORD *)(v194 + 32);
      v296[3] = v197;
      char v297 = v195;
      uint64_t v198 = *(char **)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_overallInterval);
      if (v198)
      {
        LODWORD(v273) = v195;
        sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
        uint64_t v199 = qword_1EB76D390;
        swift_retain();
        v274 = v198;
        if (v199 != -1) {
          swift_once();
        }
        uint64_t v200 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v200, v8);
        v275 = (char *)v2;
        LODWORD(v277) = *((unsigned __int8 *)v2
                        + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update
                        + *((int *)v277 + 7));
        sub_1ACB18D38(v298, v283);
        uint64_t v201 = sub_1ACB0FF08((uint64_t)v283);
        uint64_t v202 = *(void **)v201;
        uint64_t v203 = *(void *)(v201 + 8);
        v278 = v12;
        uint64_t v204 = *(void *)(v201 + 16);
        uint64_t v205 = *(void *)(v201 + 24);
        uint64_t v206 = *(void *)(v201 + 32);
        uint64_t v207 = *(void *)(v201 + 40);
        v258[0] = v9;
        uint64_t v208 = *(void *)(v201 + 48);
        v209 = *(void **)(v201 + 56);
        v276 = (void (*)(void, void, void))v8;
        char v210 = *(unsigned char *)(v201 + 64);
        sub_1ACB18D38(v298, &v284);
        uint64_t v211 = sub_1ACB0FF08((uint64_t)&v284);
        sub_1ACB0F624(*(id *)v211, *(void *)(v211 + 8), *(void *)(v211 + 16), *(void *)(v211 + 24), *(void *)(v211 + 32), *(void *)(v211 + 40), *(void *)(v211 + 48), *(id *)(v211 + 56), *(unsigned char *)(v211 + 64));
        char v257 = v210;
        uint64_t v212 = v278;
        sub_1ACB0F624(v202, v203, v204, v205, v206, v207, v208, v209, v257);
        uint64_t v213 = sub_1ACE75428();
        uint64_t v214 = v268;
        sub_1ACE75458();
        os_signpost_type_t v215 = sub_1ACE76E08();
        if (sub_1ACE76FA8())
        {
          if (v277) {
            uint64_t v216 = "BootstrapFeedUpdate";
          }
          else {
            uint64_t v216 = "DeltaFeedUpdate";
          }
          swift_retain();
          uint64_t v217 = v263;
          sub_1ACE75488();
          swift_release();
          uint64_t v219 = v265;
          uint64_t v218 = v266;
          int v220 = (*(uint64_t (**)(char *, uint64_t))(v265 + 88))(v217, v266);
          int v221 = *MEMORY[0x1E4FBD340];
          v277 = (char *)v216;
          if (v220 == v221)
          {
            char v222 = 0;
            char v223 = 0;
            v272 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v219 + 8))(v217, v218);
            v272 = "%s";
            char v223 = 2;
            char v222 = 1;
          }
          uint64_t v246 = v280;
          v247 = v264;
          v248 = v214;
          uint64_t v249 = v279;
          (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v264, v248, v279);
          uint64_t v250 = swift_slowAlloc();
          uint64_t v251 = swift_slowAlloc();
          uint64_t v282 = v251;
          *(unsigned char *)uint64_t v250 = v223;
          *(unsigned char *)(v250 + 1) = v222;
          *(_WORD *)(v250 + 2) = 2080;
          if (v273) {
            uint64_t v252 = 0x44454C494146;
          }
          else {
            uint64_t v252 = 0x53534543435553;
          }
          if (v273) {
            unint64_t v253 = 0xE600000000000000;
          }
          else {
            unint64_t v253 = 0xE700000000000000;
          }
          uint64_t v281 = sub_1ACA3189C(v252, v253, &v282);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
          sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
          os_signpost_id_t v254 = sub_1ACE753D8();
          _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v213, v215, v254, v277, v272, (uint8_t *)v250, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v251, -1, -1);
          MEMORY[0x1AD11B340](v250, -1, -1);

          v255 = *(void (**)(char *, uint64_t))(v246 + 8);
          v255(v268, v249);
          (*(void (**)(char *, void (*)(void, void, void)))(v258[0] + 8))(v278, v276);
          swift_release();
          v255(v247, v249);
        }
        else
        {

          sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
          sub_1ACB18D78((uint64_t)v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
          (*(void (**)(char *, uint64_t))(v280 + 8))(v214, v279);
          (*(void (**)(char *, void (*)(void, void, void)))(v258[0] + 8))(v212, v276);
          swift_release();
        }
        uint64_t v2 = (long long *)v275;
      }
      else
      {
        sub_1ACB18D38(v298, &v284);
        uint64_t v237 = sub_1ACB0FF08((uint64_t)&v284);
        sub_1ACB0F624(*(id *)v237, *(void *)(v237 + 8), *(void *)(v237 + 16), *(void *)(v237 + 24), *(void *)(v237 + 32), *(void *)(v237 + 40), *(void *)(v237 + 48), *(id *)(v237 + 56), *(unsigned char *)(v237 + 64));
      }
      (*(void (**)(char *, _OWORD *))((char *)v2
                                               + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion))((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v296);
      goto LABEL_85;
    case 8u:
      __break(1u);
      JUMPOUT(0x1ACB0D6A4);
    case 9u:
      uint64_t v132 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)uint64_t v132 = "RequestShowMetadata";
      *((void *)v132 + 1) = 19;
      *((_WORD *)v132 + 8) = 2;
      if (qword_1EB76D390 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      int64_t v133 = v269;
      sub_1ACE753C8();
      swift_retain_n();
      uint64_t v134 = sub_1ACE75428();
      int v135 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        v278 = *(char **)(v280 + 16);
        ((void (*)(char *, char *, uint64_t))v278)(v35, v133, v14);
        uint64_t v136 = (uint8_t *)swift_slowAlloc();
        uint64_t v137 = swift_slowAlloc();
        LODWORD(v277) = v135;
        uint64_t v138 = v137;
        *(_DWORD *)uint64_t v136 = 136315138;
        *(void *)&long long v284 = v137;
        uint64_t v139 = sub_1ACE750C8();
        *(void *)&v283[0] = sub_1ACA3189C(v139, v140, (uint64_t *)&v284);
        uint64_t v14 = v279;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v141 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v134, (os_signpost_type_t)v277, v141, "RequestShowMetadata", "[identifier=%{name=identifier}s] RequestShowMetadata", v136, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v138, -1, -1);
        unint64_t v142 = v136;
        int64_t v133 = v269;
        MEMORY[0x1AD11B340](v142, -1, -1);

        uint64_t v143 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v35, v14);
        ((void (*)(char *, char *, uint64_t))v278)(v35, v133, v14);
      }
      else
      {
        swift_release_n();

        uint64_t v143 = v280;
        (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v35, v133, v14);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v229 = sub_1ACE75468();
      (*(void (**)(char *, uint64_t))(v143 + 8))(v133, v14);
      *(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v229;
      swift_release();
      sub_1ACB0D6CC();
LABEL_66:
      v235 = v299;
      break;
    default:
      uint64_t v59 = *(char **)sub_1ACB0FF08((uint64_t)v295);
      uint64_t v60 = (char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
      *(void *)uint64_t v60 = "PrepareForInitialEpisodesRequest";
      *((void *)v60 + 1) = 32;
      *((_WORD *)v60 + 8) = 2;
      sub_1ACB18D38(v298, &v284);
      uint64_t v61 = (id *)sub_1ACB0FF08((uint64_t)&v284);
      uint64_t v62 = qword_1EB76D390;
      id v63 = *v61;
      if (v62 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D378);
      sub_1ACE75428();
      uint64_t v64 = (char *)v270;
      sub_1ACE753C8();
      swift_retain_n();
      BOOL v65 = sub_1ACE75428();
      int v66 = sub_1ACE76E18();
      if (sub_1ACE76FA8())
      {
        uint64_t v67 = v279;
        v277 = *(char **)(v280 + 16);
        LODWORD(v276) = v66;
        ((void (*)(char *, char *, uint64_t))v277)(v35, v64, v279);
        uint64_t v68 = swift_slowAlloc();
        v278 = v59;
        uint64_t v69 = (uint8_t *)v68;
        uint64_t v70 = swift_slowAlloc();
        v275 = (char *)v70;
        *(_DWORD *)uint64_t v69 = 136315138;
        *(void *)&v283[0] = v70;
        uint64_t v71 = sub_1ACE750C8();
        *(void *)&v296[0] = sub_1ACA3189C(v71, v72, (uint64_t *)v283);
        uint64_t v64 = (char *)v270;
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v73 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v65, (os_signpost_type_t)v276, v73, "PrepareForInitialEpisodesRequest", "[identifier=%{name=identifier}s] PrepareForInitialEpisodesRequest", v69, 0xCu);
        uint64_t v74 = v275;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v74, -1, -1);
        uint64_t v75 = v69;
        uint64_t v59 = v278;
        MEMORY[0x1AD11B340](v75, -1, -1);

        uint64_t v76 = v280;
        (*(void (**)(char *, uint64_t))(v280 + 8))(v35, v67);
        ((void (*)(char *, char *, uint64_t))v277)(v35, v64, v67);
      }
      else
      {
        swift_release_n();

        uint64_t v67 = v279;
        uint64_t v76 = v280;
        (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v35, v64, v279);
      }
      sub_1ACE75478();
      swift_allocObject();
      uint64_t v224 = sub_1ACE75468();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v67);
      *(void *)((char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = v224;
      swift_release();
      sub_1ACB0DF0C(v59);
LABEL_85:
      sub_1ACB18D78((uint64_t)v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
      v235 = v298;
      break;
  }
  return sub_1ACB18D78((uint64_t)v235, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
}

uint64_t sub_1ACB0D6CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE753F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v64 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  int v66 = (char *)&v60 - v6;
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1F4188790](updated);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v68 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v75 + 1) = &type metadata for Podcasts;
  unint64_t v15 = sub_1ACA56248();
  unint64_t v76 = v15;
  LOBYTE(v74) = 33;
  char v16 = sub_1ACE75298();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74);
  uint64_t v63 = v3;
  if ((v16 & 1) != 0
    && (*((void *)&v75 + 1) = &type metadata for Podcasts,
        unint64_t v76 = v15,
        LOBYTE(v74) = 46,
        char v17 = sub_1ACE75298(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74),
        (v17 & 1) != 0))
  {
    uint64_t v18 = (void (*)(char *, char *, uint64_t))&unk_1F0380390;
  }
  else
  {
    uint64_t v18 = (void (*)(char *, char *, uint64_t))&unk_1F03803B8;
  }
  uint64_t v62 = v18;
  uint64_t v65 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = &unk_1F03803E0;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = &unk_1F0380408;
  unint64_t v61 = sub_1ACA364C4(inited);
  unint64_t v76 = 0;
  long long v74 = 0u;
  long long v75 = 0u;
  char v77 = 4;
  char v73 = 1;
  char v72 = 1;
  char v71 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1ACE843F0;
  uint64_t v21 = v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  uint64_t v70 = *(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update + updated[7]);
  *(void *)(v20 + 32) = sub_1ACE777C8();
  *(void *)(v20 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v22;
  LOBYTE(v7sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
  char v69 = 1;
  uint64_t v23 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 1, 1, v23);
  char v24 = *(unsigned char *)(v21 + updated[9]);
  uint64_t v60 = v21;
  sub_1ACB18E7C(v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  uint64_t v67 = v1;
  uint64_t v25 = (uint64_t)v12;
  if (v24) {
    char v26 = 0;
  }
  else {
    char v26 = v9[updated[11]];
  }
  sub_1ACB19D1C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  unint64_t v28 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v29 = sub_1ACA35F90(v27);
  unint64_t v30 = sub_1ACA35FB0(v27);
  unint64_t v31 = sub_1ACA360BC(v27);
  unint64_t v32 = sub_1ACA360DC(v27);
  *((void *)&v59 + 1) = sub_1ACA360FC(v27);
  *(void *)&long long v59 = v32;
  *((void *)&v58 + 1) = v27;
  *((void *)&v57 + 1) = v27;
  *(void *)&long long v58 = v27;
  *((void *)&v56 + 1) = v31;
  *(void *)&long long v57 = v61;
  *(void *)&long long v56 = v27;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v74, &v73, &v72, &v71, v28, v29, v30, (uint64_t)v62, v68, v56, v57, v58, v20, (char *)&v70, 0, 1, v59, 0, 1,
    &v69,
    0,
    v25,
    0,
    0,
    v26,
    0,
    0,
    v27,
    0,
    0,
    2);
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1ACE75438();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EB76D378);
  uint64_t v34 = v67;
  swift_retain_n();
  uint64_t v35 = v66;
  sub_1ACE753E8();
  uint64_t v36 = sub_1ACE75428();
  int v37 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v38 = v63;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    uint64_t v39 = v64;
    uint64_t v40 = v65;
    v62(v64, v35, v65);
    os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(void *)&long long v74 = v42;
    LODWORD(v61) = v37;
    *(_DWORD *)os_log_type_t v41 = 136315138;
    uint64_t v43 = sub_1ACE750C8();
    uint64_t v70 = sub_1ACA3189C(v43, v44, (uint64_t *)&v74);
    uint64_t v34 = v67;
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v45 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v36, (os_signpost_type_t)v61, v45, "MAPINetwork", "[identifier=%{name=identifier}s] MediaAPIRequestShowMetadata", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v42, -1, -1);
    uint64_t v46 = v41;
    uint64_t v35 = v66;
    MEMORY[0x1AD11B340](v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
    v62(v39, v35, v40);
  }
  else
  {
    swift_release_n();

    uint64_t v38 = v63;
    uint64_t v40 = v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v64, v35, v65);
  }
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v47 = sub_1ACE75468();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v40);
  uint64_t v49 = *(void *)(v34 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 24);
  uint64_t v48 = *(void *)(v34 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v34 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController), v49);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76BF70);
  uint64_t v51 = swift_allocObject();
  swift_weakInit();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v47;
  *(void *)(v52 + 24) = v51;
  uint64_t v53 = sub_1ACA51EA4(&qword_1EB76BF68, qword_1EB76BF70);
  swift_retain();
  uint64_t v54 = v68;
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)(v68, v50, (uint64_t)sub_1ACB18EFC, v52, v49, v50, v48, v53);
  swift_release();
  swift_release();
  return sub_1ACB19D1C(v54, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
}

void sub_1ACB0DF0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  if (*(unsigned char *)(v4 + *(int *)(type metadata accessor for StoreFeedUpdater.Update(0) + 28)) == 1)
  {
    uint64_t v14 = 0;
    long long aBlock = 0u;
    long long v13 = 0u;
    LOBYTE(v15) = 0x80;
    char v16 = a1;
    sub_1ACB18FDC((uint64_t)&aBlock);
    sub_1ACB18D38(&aBlock, v11);
    id v5 = a1;
    sub_1ACB0AEA4(v11);
    sub_1ACB0F9AC(0, 0, 0, 0, 0, 0x80u);
  }
  else
  {
    LOBYTE(aBlock) = 5;
    uint64_t updated = FeedUpdateType.beginInterval()();
    uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = updated;
    void v8[3] = v2;
    v8[4] = a1;
    uint64_t v14 = sub_1ACB18FD0;
    unint64_t v15 = v8;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v13 = sub_1ACA6DA9C;
    *((void *)&v13 + 1) = &block_descriptor_22;
    uint64_t v9 = _Block_copy(&aBlock);
    id v10 = a1;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_performBlock_, v9);
    _Block_release(v9);
    swift_release();
  }
}

void sub_1ACB0E0BC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, void))(v6
                                                         + *(int *)(type metadata accessor for FeedUpdateRequest() + 60));
  if (!v7) {
    goto LABEL_4;
  }
  LOBYTE(v19[0]) = 6;
  swift_retain();
  FeedUpdateType.beginInterval()();
  uint64_t v8 = (void *)v7(a1, 1, *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx));
  LOBYTE(v19[0]) = 6;
  FeedUpdateType.endInterval(for:)();
  if (objc_msgSend(v8, sel_shouldContinue))
  {
    swift_release();

    sub_1ACA76F34((uint64_t)v7);
LABEL_4:
    long long v9 = *(_OWORD *)(a2 + 144);
    v19[8] = *(_OWORD *)(a2 + 128);
    v19[9] = v9;
    char v20 = *(unsigned char *)(a2 + 160);
    long long v10 = *(_OWORD *)(a2 + 80);
    _OWORD v19[4] = *(_OWORD *)(a2 + 64);
    v19[5] = v10;
    long long v11 = *(_OWORD *)(a2 + 112);
    void v19[6] = *(_OWORD *)(a2 + 96);
    v19[7] = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    v19[0] = *(_OWORD *)a2;
    v19[1] = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    _OWORD v19[2] = *(_OWORD *)(a2 + 32);
    v19[3] = v13;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a1;
    id v15 = a1;
    sub_1ACB11BA8(v19, (uint64_t)sub_1ACB19234, v14);
    swift_release();
    return;
  }
  sub_1ACB18F1C();
  char v16 = (void *)swift_allocError();
  *char v17 = 11;
  *(void *)&v19[0] = v16;
  sub_1ACB18F70((uint64_t)v19);
  sub_1ACB18D38(v19, v18);
  sub_1ACB0AEA4(v18);
  swift_release();

  sub_1ACA76F34((uint64_t)v7);
}

uint64_t sub_1ACB0E29C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void))(v6
                                                       + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  if (v7)
  {
    LOBYTE(v13[0]) = 7;
    swift_retain();
    FeedUpdateType.beginInterval()();
    v7(a1, a2, *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx));
    LOBYTE(v13[0]) = 7;
    FeedUpdateType.endInterval(for:)();
    sub_1ACA76F34((uint64_t)v7);
    swift_release();
  }
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 48);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 56);
  long long v10 = *(_OWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 16);
  v13[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData);
  v13[1] = v10;
  void v13[2] = *(_OWORD *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 32);
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  char v16 = 0;
  sub_1ACB18FF4((uint64_t)v13);
  sub_1ACB18D38(v13, v12);
  swift_bridgeObjectRetain();
  sub_1ACB0AEA4(v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB0E3CC(long long *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB18D38(a1, v60);
  if (sub_1ACB0FEDC((uint64_t)v60) - 3 >= 3)
  {
    LOBYTE(v54) = 17;
    uint64_t updated = FeedUpdateType.beginInterval()();
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB76D4E0);
    swift_retain();
    id v25 = a2;
    char v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76BE8();
    unint64_t v28 = &unk_1EB785000;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v52 = updated;
      uint64_t v30 = v29;
      uint64_t v50 = (void *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v51 = v31;
      *(_DWORD *)uint64_t v30 = 141558531;
      uint64_t v53 = 1752392040;
      uint64_t v54 = v31;
      sub_1ACE76FF8();
      *(_WORD *)(v30 + 12) = 2081;
      sub_1ACB18E7C(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      unint64_t v32 = (uint64_t *)&v8[*(int *)(v6 + 32)];
      os_log_t v49 = v26;
      uint64_t v34 = *v32;
      unint64_t v33 = v32[1];
      swift_bridgeObjectRetain();
      sub_1ACB19D1C((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v53 = sub_1ACA3189C(v34, v33, &v54);
      sub_1ACE76FF8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2112;
      uint64_t v35 = sub_1ACE74D68();
      uint64_t v53 = v35;
      sub_1ACE76FF8();
      uint64_t v36 = v50;
      *uint64_t v50 = v35;
      unint64_t v28 = (void *)&unk_1EB785000;

      os_log_t v37 = v49;
      _os_log_impl(&dword_1AC9D5000, v49, v27, "Job %{private,mask.hash}s: Failed with error %@", (uint8_t *)v30, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v36, -1, -1);
      uint64_t v38 = v51;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v38, -1, -1);
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
    else
    {
      swift_release();
    }
    uint64_t v44 = v3 + v28[311];
    os_signpost_id_t v45 = (void (**)(void *, void))(v44 + *(int *)(type metadata accessor for FeedUpdateRequest() + 56));
    if (*v45) {
      (*v45)(a2, 0);
    }
    uint64_t v46 = *(void (**)(uint64_t, uint64_t *))(v3
                                                    + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
    uint64_t v54 = (uint64_t)a2;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    uint64_t v58 = 0;
    char v59 = 1;
    v46(v44, &v54);
    LOBYTE(v53) = 17;
  }
  else
  {
    LOBYTE(v54) = 19;
    uint64_t v9 = FeedUpdateType.beginInterval()();
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D4E0);
    swift_retain();
    id v11 = a2;
    long long v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76BE8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v52 = v9;
      uint64_t v15 = v14;
      uint64_t v50 = (void *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v51 = v16;
      *(_DWORD *)uint64_t v15 = 141558531;
      uint64_t v53 = 1752392040;
      uint64_t v54 = v16;
      sub_1ACE76FF8();
      *(_WORD *)(v15 + 12) = 2081;
      os_log_t v49 = (os_log_t)(v15 + 14);
      sub_1ACB18E7C(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      char v17 = (uint64_t *)&v8[*(int *)(v6 + 32)];
      uint64_t v19 = *v17;
      unint64_t v18 = v17[1];
      swift_bridgeObjectRetain();
      sub_1ACB19D1C((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v53 = sub_1ACA3189C(v19, v18, &v54);
      sub_1ACE76FF8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2112;
      uint64_t v20 = sub_1ACE74D68();
      uint64_t v53 = v20;
      sub_1ACE76FF8();
      uint64_t v21 = v50;
      *uint64_t v50 = v20;

      _os_log_impl(&dword_1AC9D5000, v12, v13, "Job %{private,mask.hash}s: Partially Succeeded with error %@", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v21, -1, -1);
      uint64_t v22 = v51;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v22, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }
    else
    {
      swift_release();
    }
    LOBYTE(v54) = 18;
    uint64_t v39 = FeedUpdateType.beginInterval()();
    uint64_t v40 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
    os_log_type_t v41 = (void *)swift_allocObject();
    v41[2] = v39;
    v41[3] = v3;
    v41[4] = a2;
    *((void *)&v56 + 1) = sub_1ACB19AD0;
    *(void *)&long long v57 = v41;
    uint64_t v54 = MEMORY[0x1E4F143A8];
    *(void *)&long long v55 = 1107296256;
    *((void *)&v55 + 1) = sub_1ACA6DA9C;
    *(void *)&long long v56 = &block_descriptor_67;
    uint64_t v42 = _Block_copy(&v54);
    swift_retain();
    id v43 = a2;
    swift_retain();
    swift_release();
    objc_msgSend(v40, sel_performBlock_, v42);
    _Block_release(v42);
    swift_release();
    LOBYTE(v54) = 19;
  }
  FeedUpdateType.endInterval(for:)();
  return swift_release();
}

uint64_t sub_1ACB0EB1C()
{
  uint64_t v1 = sub_1ACE75448();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE753F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v7);
  long long v12 = (char *)&v22 - v11;
  if (!*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval)) {
    return result;
  }
  uint64_t v13 = v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName + 17)) {
    return result;
  }
  unint64_t v25 = *(void *)v13;
  int v26 = *(unsigned __int8 *)(v13 + 16);
  uint64_t v14 = qword_1EB76D390;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE75438();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB76D378);
  uint64_t v16 = sub_1ACE75428();
  sub_1ACE75458();
  int v24 = sub_1ACE76E08();
  if ((sub_1ACE76FA8() & 1) == 0) {
    goto LABEL_9;
  }
  os_log_t v23 = v16;
  if ((v26 & 1) == 0)
  {
    uint64_t v16 = v25;
    if (!v25)
    {
      __break(1u);
LABEL_9:

      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      return swift_release();
    }
    goto LABEL_14;
  }
  uint64_t result = v25;
  if (HIDWORD(v25))
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v25 >> 11 == 27)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (WORD1(v25) > 0x10u)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v16 = sub_1ACA31704();
LABEL_14:
  swift_retain();
  sub_1ACE75488();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x1E4FBD340])
  {
    char v17 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    char v17 = "";
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  unint64_t v18 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v18 = 0;
  os_signpost_id_t v19 = sub_1ACE753D8();
  os_log_t v20 = v23;
  _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v23, (os_signpost_type_t)v24, v19, (const char *)v16, v17, v18, 2u);
  MEMORY[0x1AD11B340](v18, -1, -1);

  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v12, v5);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v21)(v9, v5);
}

uint64_t sub_1ACB0EEC0()
{
  sub_1ACB18D38((long long *)(v0 + 16), v4);
  sub_1ACB18D78((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
  sub_1ACB19D1C(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, type metadata accessor for StoreFeedUpdater.Update);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_signpostID;
  uint64_t v2 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1ACB19D1C(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider);

  swift_release();
  sub_1ACB19D7C(*(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalMetadata), *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalMetadata + 8));
  swift_release();
  return v0;
}

uint64_t sub_1ACB0F058()
{
  sub_1ACB0EEC0();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB0F0B0()
{
  return type metadata accessor for StoreFeedUpdaterJob();
}

uint64_t type metadata accessor for StoreFeedUpdaterJob()
{
  uint64_t result = qword_1EB76BA70;
  if (!qword_1EB76BA70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACB0F104()
{
  uint64_t result = type metadata accessor for StoreFeedUpdater.Update(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE753F8();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for FeedManagerBagConfiguration();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

id sub_1ACB0F274(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, id a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, id a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,char a23)
{
  if (a23) {
    int v23 = 8;
  }
  else {
    int v23 = 0;
  }
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  switch(v23 & 0xFFFFFFF8 | (a22 >> 3) & 7)
  {
    case 0u:
      goto LABEL_6;
    case 1u:
      sub_1ACB0F578((uint64_t)result, a2, a3, a4, a5, a6);
      uint64_t result = a7;
LABEL_6:
      goto LABEL_8;
    case 2u:
      unsigned __int8 v31 = a7;
      id v29 = result;
      sub_1ACB0F578(v28, v27, v26, v25, v24, v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1ACB0F610(a11, a12, a13, a14, a15, a16);
      uint64_t result = a17;
      a2 = a18;
      a3 = a19;
      a5 = a21;
      a4 = a20;
      LOBYTE(a6) = a22 & 0xC7;
      goto LABEL_11;
    case 3u:
      goto LABEL_11;
    case 4u:
      sub_1ACB0F578((uint64_t)result, a2, a3, a4, a5, a6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1ACB0F610(a10, a11, a12, a13, a14, a15);
      uint64_t result = a16;
      a2 = (uint64_t)a17;
      a3 = a18;
      a4 = a19;
      LOBYTE(a6) = a21;
      a5 = a20;
LABEL_11:
      uint64_t result = (id)sub_1ACB0F578((uint64_t)result, a2, a3, a4, a5, a6);
      break;
    case 5u:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 6u:
LABEL_8:
      uint64_t result = result;
      break;
    case 7u:
      uint64_t result = sub_1ACB0F624(result, a2, a3, a4, a5, a6, (int)a7, a8, a9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB0F578(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >> 6 == 1) {
    return sub_1ACB0F59C(result, a2, a3, a4, a5, a6 & 0x3F);
  }
  if (!(a6 >> 6)) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACB0F59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >= 2u)
  {
    if (a6 == 3)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t result = a2;
      if (a6 != 2) {
        return result;
      }
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACB0F610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF) {
    return sub_1ACB0F59C(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

id sub_1ACB0F624(id result, int a2, int a3, int a4, int a5, int a6, int a7, id a8, char a9)
{
  if (a9 == 1) {
    return result;
  }
  if (!a9) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for StoreFeedUpdaterJob.State(uint64_t a1)
{
  sub_1ACB0F6A8(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void **)(a1 + 120), *(void **)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(unsigned char *)(a1 + 168),
    *(unsigned char *)(a1 + 169));
}

void sub_1ACB0F6A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,char a23)
{
  if (a23) {
    int v23 = 8;
  }
  else {
    int v23 = 0;
  }
  uint64_t v24 = a6;
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  switch(v23 & 0xFFFFFFF8 | (a22 >> 3) & 7)
  {
    case 0u:
      goto LABEL_6;
    case 1u:
      sub_1ACB0F9AC((uint64_t)a1, a2, a3, a4, a5, a6);
      a1 = a7;
LABEL_6:
      goto LABEL_8;
    case 2u:
      unsigned __int8 v30 = a7;

      sub_1ACB0F9AC(v28, v27, v26, v25, v24, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACB0F9D0(a11, a12, a13, a14, a15, a16);
      a1 = a17;
      a2 = a18;
      a3 = a19;
      a5 = a21;
      a4 = a20;
      LOBYTE(a6) = a22 & 0xC7;
      goto LABEL_11;
    case 3u:
      goto LABEL_11;
    case 4u:
      sub_1ACB0F9AC((uint64_t)a1, a2, a3, a4, a5, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ACB0F9D0(a10, a11, a12, a13, a14, a15);
      a1 = a16;
      a2 = (uint64_t)a17;
      a3 = a18;
      a4 = a19;
      LOBYTE(a6) = a21;
      a5 = a20;
LABEL_11:
      sub_1ACB0F9AC((uint64_t)a1, a2, a3, a4, a5, a6);
      break;
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 6u:
LABEL_8:

      break;
    case 7u:
      sub_1ACB0F9E4(a1, a2, a3, a4, a5, a6, (int)a7, a8, a9);
      break;
    default:
      return;
  }
}

uint64_t sub_1ACB0F9AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >> 6 == 1) {
    return sub_1ACA39518(result, a2, a3, a4, a5, a6 & 0x3F);
  }
  if (!(a6 >> 6)) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACB0F9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF) {
    return sub_1ACA39518(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

void sub_1ACB0F9E4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, id a8, char a9)
{
  if (a9 == 1)
  {
  }
  else if (!a9)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for StoreFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 48);
  uint64_t v6 = *(void **)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  os_signpost_id_t v19 = *(void **)(a2 + 120);
  os_log_t v20 = *(void **)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  unsigned __int8 v25 = *(unsigned char *)(a2 + 168);
  char v26 = *(unsigned char *)(a2 + 169);
  uint64_t v7 = *(void *)(a2 + 64);
  id v8 = *(id *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  sub_1ACB0F274(*(id *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v24;
  *(unsigned char *)(a1 + 168) = v25;
  *(unsigned char *)(a1 + 169) = v26;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void **)(a2 + 48);
  uint64_t v10 = *(void **)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v30 = *(void *)(a2 + 72);
  uint64_t v31 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  uint64_t v36 = *(void **)(a2 + 120);
  os_log_t v37 = *(void **)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 144);
  uint64_t v40 = *(void *)(a2 + 152);
  uint64_t v41 = *(void *)(a2 + 160);
  unsigned __int8 v42 = *(unsigned char *)(a2 + 168);
  char v43 = *(unsigned char *)(a2 + 169);
  sub_1ACB0F274(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  long long v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  uint64_t v18 = *(void **)(a1 + 48);
  os_signpost_id_t v19 = *(void **)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v31;
  *(void *)(a1 + 88) = v32;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v33;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v35;
  *(void *)(a1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v36;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v38;
  *(void *)(a1 + 144) = v39;
  *(void *)(a1 + 152) = v40;
  uint64_t v26 = *(void *)(a1 + 160);
  *(void *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v41;
  unsigned __int8 v27 = *(unsigned char *)(a1 + 168);
  *(unsigned char *)(a1 + 168) = v42;
  char v28 = *(unsigned char *)(a1 + 169);
  *(unsigned char *)(a1 + 169) = v43;
  sub_1ACB0F6A8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((void **)&v23 + 1), (void *)v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

__n128 __swift_memcpy170_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 154) = *(long long *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdaterJob.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 160);
  char v4 = *(unsigned char *)(a2 + 168);
  char v5 = *(unsigned char *)(a2 + 169);
  long long v6 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  long long v12 = *(void **)(a1 + 48);
  uint64_t v13 = *(void **)(a1 + 56);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v18 = *(_OWORD *)(a1 + 128);
  long long v19 = *(_OWORD *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 160);
  unsigned __int8 v21 = *(unsigned char *)(a1 + 168);
  char v22 = *(unsigned char *)(a1 + 169);
  long long v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v23;
  long long v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v24;
  long long v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v25;
  long long v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  long long v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(void *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v3;
  *(unsigned char *)(a1 + 168) = v4;
  *(unsigned char *)(a1 + 169) = v5;
  sub_1ACB0F6A8(v6, v8, v7, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((void **)&v17 + 1), (void *)v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F8 && *(unsigned char *)(a1 + 170)) {
    return (*(_DWORD *)a1 + 2040);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 168) >> 3) & 7 | (8 * *(unsigned __int8 *)(a1 + 169))) ^ 0x7FF;
  if (v3 >= 0x7F7) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7F7)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 168) = 0;
    *(void *)__n128 result = a2 - 2040;
    if (a3 >= 0x7F8) {
      *(unsigned char *)(result + 17sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F8) {
      *(unsigned char *)(result + 17sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 168) = 8 * (-(char)a2 & 7);
      *(unsigned char *)(result + 169) = -a2 >> 3;
    }
  }
  return result;
}

uint64_t sub_1ACB0FEDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 169)) {
    int v1 = 8;
  }
  else {
    int v1 = 0;
  }
  unsigned int v2 = v1 & 0xFFFFFFF8 | (*(unsigned __int8 *)(a1 + 168) >> 3) & 7;
  if (v2 <= 7) {
    return v2;
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_1ACB0FF08(uint64_t result)
{
  *(unsigned char *)(result + 168) &= 0xC7u;
  return result;
}

uint64_t sub_1ACB0FF18(uint64_t result, unsigned int a2)
{
  if (a2 < 8)
  {
    *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | (8 * (a2 & 7));
  }
  else
  {
    *(void *)__n128 result = a2 - 8;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(unsigned char *)(result + 168) = 0;
  }
  *(unsigned char *)(result + 169) = a2 > 7;
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.State()
{
  return &type metadata for StoreFeedUpdaterJob.State;
}

void sub_1ACB0FF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1ACE75448();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v65[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  long long v12 = &v65[-v11];
  uint64_t v71 = sub_1ACE753F8();
  uint64_t v13 = *(void *)(v71 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v71);
  long long v16 = &v65[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v70 = &v65[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v65[-v19];
  unint64_t v21 = *(void *)a3;
  int v22 = *(unsigned __int8 *)(a3 + 8);
  uint64_t v23 = a5 + 16;
  if (v22 != 1)
  {
    uint64_t v33 = qword_1EB76D390;
    swift_bridgeObjectRetain();
    if (v33 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1ACE75438();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB76D378);
    uint64_t v35 = sub_1ACE75428();
    sub_1ACE75458();
    int v36 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v38 = v68;
      uint64_t v37 = v69;
      int v39 = (*(uint64_t (**)(unsigned char *, uint64_t))(v68 + 88))(v10, v69);
      int v40 = *MEMORY[0x1E4FBD340];
      uint64_t v67 = v23;
      int v66 = v36;
      if (v39 == v40)
      {
        uint64_t v41 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v10, v37);
        uint64_t v41 = "SUCCESS";
      }
      os_log_t v49 = v70;
      uint64_t v48 = v71;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v70, v16, v71);
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      os_signpost_id_t v51 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v35, (os_signpost_type_t)v66, v51, "MAPINetwork", v41, v50, 2u);
      MEMORY[0x1AD11B340](v50, -1, -1);

      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v52(v16, v48);
      v52(v49, v48);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v71);
    }
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1ACE77508();
      sub_1ACAC1E88((id)v21, 0);
      if (v62) {
        goto LABEL_23;
      }
    }
    else if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_23:
      if ((v21 & 0xC000000000000001) != 0)
      {
        uint64_t v53 = (char *)MEMORY[0x1AD119490](0, v21);
      }
      else
      {
        if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        uint64_t v53 = (char *)*(id *)(v21 + 32);
      }
      uint64_t v54 = v53;
      sub_1ACAC1E88((id)v21, 0);
      uint64_t v55 = *(void *)&v54[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
      if (!v55 || ((int v56 = *(unsigned __int8 *)(v55 + 48), v56 != 2) ? (v57 = (v56 & 1) == 0) : (v57 = 0), !v57))
      {
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          *(void *)&v73[0] = v54;
          sub_1ACB18F08((uint64_t)v73);
          sub_1ACB18D38(v73, v72);
          uint64_t v58 = v54;
          sub_1ACB0AEA4(v72);

          swift_release();
          return;
        }
        goto LABEL_35;
      }
      swift_beginAccess();
      if (!swift_weakLoadStrong())
      {
LABEL_35:

        return;
      }
      sub_1ACB18F1C();
      uint64_t v59 = swift_allocError();
      *uint64_t v60 = 16;
      *(void *)&v73[0] = v59;
      sub_1ACB18F70((uint64_t)v73);
      sub_1ACB18D38(v73, v72);
      sub_1ACB0AEA4(v72);

      swift_release();
      unint64_t v61 = (void *)v59;
LABEL_39:

      return;
    }
    sub_1ACAC1E88((id)v21, 0);
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      return;
    }
    sub_1ACB18F1C();
    uint64_t v63 = swift_allocError();
    unsigned char *v64 = 1;
    *(void *)&v73[0] = v63;
    sub_1ACB18F70((uint64_t)v73);
    sub_1ACB18D38(v73, v72);
    sub_1ACB0AEA4(v72);
    swift_release();
    unint64_t v61 = (void *)v63;
    goto LABEL_39;
  }
  long long v24 = (id *)(id)v21;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1ACE75438();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EB76D378);
  long long v26 = sub_1ACE75428();
  sub_1ACE75458();
  int v27 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    uint64_t v67 = a5 + 16;
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v29 = v68;
    uint64_t v28 = v69;
    int v30 = (*(uint64_t (**)(unsigned char *, uint64_t))(v68 + 88))(v12, v69);
    int v31 = *MEMORY[0x1E4FBD340];
    int v66 = v27;
    if (v30 == v31)
    {
      uint64_t v32 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v12, v28);
      uint64_t v32 = "FAILURE";
    }
    char v43 = v70;
    uint64_t v42 = v71;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v70, v20, v71);
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    os_signpost_id_t v45 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v26, (os_signpost_type_t)v66, v45, "MAPINetwork", v32, v44, 2u);
    MEMORY[0x1AD11B340](v44, -1, -1);

    uint64_t v46 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v46(v20, v42);
    v46(v43, v42);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v71);
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    *(void *)&v73[0] = v21;
    sub_1ACB18F70((uint64_t)v73);
    sub_1ACB18D38(v73, v72);
    uint64_t v47 = (id *)(id)v21;
    sub_1ACB0AEA4(v72);
    swift_release();
    sub_1ACAC1E88((id)v21, 1);
  }
  sub_1ACAC1E88((id)v21, 1);
}

void sub_1ACB10760(uint64_t a1, uint64_t a2, void *a3)
{
  LOBYTE(v21) = 5;
  FeedUpdateType.endInterval(for:)();
  uint64_t v5 = a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  id v6 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx), sel_podcastForStoreId_, *(void *)(a2+ OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update+ *(int *)(type metadata accessor for FeedUpdateRequest() + 28)));
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_nextSyncToken);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1ACE761B8();
      unint64_t v12 = v11;

      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v13)
      {
        char v14 = 0;
        unsigned __int8 v15 = 0;
        char v16 = 1;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  uint64_t v10 = 0;
  unint64_t v12 = 0;
  char v16 = 0;
  unsigned __int8 v15 = 0x80;
  char v14 = 1;
LABEL_10:
  uint64_t v17 = type metadata accessor for StoreFeedUpdater.Update(0);
  if (v16 & 1) != 0 || (*(unsigned char *)(v5 + *(int *)(v17 + 28))) {
    goto LABEL_16;
  }
  char v18 = v14 ^ 1;
  if (v12 | v10) {
    char v18 = 1;
  }
  if (v18)
  {
LABEL_16:
    *(void *)&long long v21 = v10;
    *((void *)&v21 + 1) = v12;
    *(void *)&long long v23 = 0;
    long long v22 = 0uLL;
    BYTE8(v23) = v15;
    *(void *)&long long v24 = a3;
    sub_1ACB18FDC((uint64_t)&v21);
    sub_1ACB18D38(&v21, v20);
    id v19 = a3;
    sub_1ACB0AEA4(v20);
    sub_1ACB0F9AC(v10, v12, 0, 0, 0, v15);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    char v25 = 2;
    sub_1ACB18FF4((uint64_t)&v21);
    sub_1ACB18D38(&v21, v20);
    sub_1ACB0AEA4(v20);
  }
}

uint64_t sub_1ACB1093C(long long *a1, uint64_t a2, void *a3)
{
  long long v4 = a1[9];
  long long v23 = a1[8];
  long long v24 = v4;
  char v25 = *((unsigned char *)a1 + 160);
  long long v5 = a1[5];
  long long v19 = a1[4];
  long long v20 = v5;
  long long v6 = a1[7];
  long long v21 = a1[6];
  long long v22 = v6;
  long long v7 = a1[1];
  long long v15 = *a1;
  long long v16 = v7;
  long long v8 = a1[3];
  long long v17 = a1[2];
  long long v18 = v8;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(_OWORD *)&v12[72] = v19;
    *(_OWORD *)&v12[56] = v18;
    *(_OWORD *)&v12[120] = v22;
    *(_OWORD *)&v12[136] = v23;
    *(_OWORD *)&v12[152] = v24;
    *(_OWORD *)&v12[88] = v20;
    *(_OWORD *)&v12[104] = v21;
    *(_OWORD *)&v12[8] = v15;
    *(void *)unint64_t v12 = a3;
    v12[168] = v25;
    *(_OWORD *)&v12[24] = v16;
    *(_OWORD *)&v12[40] = v17;
    v13[8] = *(_OWORD *)&v12[128];
    v14[0] = *(_OWORD *)&v12[144];
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)&v12[153];
    v13[4] = *(_OWORD *)&v12[64];
    v13[5] = *(_OWORD *)&v12[80];
    v13[6] = *(_OWORD *)&v12[96];
    v13[7] = *(_OWORD *)&v12[112];
    v13[0] = *(_OWORD *)v12;
    v13[1] = *(_OWORD *)&v12[16];
    void v13[2] = *(_OWORD *)&v12[32];
    long long v13[3] = *(_OWORD *)&v12[48];
    sub_1ACB19008((uint64_t)v13);
    sub_1ACB18D38(v13, v11);
    id v10 = a3;
    sub_1ACB19020((uint64_t)&v15);
    sub_1ACB0AEA4(v11);
    swift_release();
    return sub_1ACB190F8((uint64_t)v12);
  }
  return result;
}

uint64_t sub_1ACB10A7C(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v113 = a2;
  uint64_t v114 = a3;
  uint64_t v112 = sub_1ACE753F8();
  uint64_t v117 = *(void *)(v112 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v112);
  long long v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v116 = (char *)&v106 - v9;
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1F4188790](updated);
  unint64_t v12 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v119 = (uint64_t)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v120 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB1923C(a1, v131);
  LOBYTE(v135) = 9;
  uint64_t v111 = FeedUpdateType.beginInterval()();
  sub_1ACB1923C(v131, v132);
  int v20 = v133 >> 6;
  uint64_t v121 = v4;
  uint64_t v115 = v8;
  if (v20)
  {
    int v106 = v12;
    if (v20 == 1)
    {
      v133 &= 0x3Fu;
      sub_1ACB19254((uint64_t)v132, (uint64_t)v134);
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1ACE754C8();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D4E0);
      swift_retain();
      long long v22 = sub_1ACE75498();
      os_log_type_t v23 = sub_1ACE76C08();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        *(void *)&long long v118 = swift_slowAlloc();
        uint64_t v135 = v118;
        *(_DWORD *)uint64_t v24 = 141558275;
        uint64_t v127 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v24 + 12) = 2081;
        unint64_t v110 = v24 + 14;
        sub_1ACB18E7C(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
        char v25 = (uint64_t *)&v19[*(int *)(v17 + 32)];
        long long v26 = updated;
        uint64_t v27 = *v25;
        unint64_t v28 = v25[1];
        swift_bridgeObjectRetain();
        sub_1ACB19D1C((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v127 = sub_1ACA3189C(v27, v28, &v135);
        sub_1ACE76FF8();
        swift_release();
        uint64_t updated = v26;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v22, v23, "Job %{private,mask.hash}s: Requesting sync with next page", (uint8_t *)v24, 0x16u);
        uint64_t v29 = v118;
        swift_arrayDestroy();
        uint64_t v30 = v29;
LABEL_15:
        MEMORY[0x1AD11B340](v30, -1, -1);
        MEMORY[0x1AD11B340](v24, -1, -1);

LABEL_17:
        unint64_t v12 = v106;
        goto LABEL_20;
      }
    }
    else
    {
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1ACE754C8();
      __swift_project_value_buffer(v44, (uint64_t)qword_1EB76D4E0);
      swift_retain();
      long long v22 = sub_1ACE75498();
      os_log_type_t v45 = sub_1ACE76C08();
      if (os_log_type_enabled(v22, v45))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v135 = v46;
        *(_DWORD *)uint64_t v24 = 141558275;
        v134[0] = 1752392040;
        *(void *)&long long v118 = updated;
        sub_1ACE76FF8();
        *(_WORD *)(v24 + 12) = 2081;
        unint64_t v110 = v24 + 14;
        sub_1ACB18E7C(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v47 = (uint64_t *)&v19[*(int *)(v17 + 32)];
        uint64_t v49 = *v47;
        unint64_t v48 = v47[1];
        swift_bridgeObjectRetain();
        sub_1ACB19D1C((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
        v134[0] = sub_1ACA3189C(v49, v48, &v135);
        uint64_t updated = (int *)v118;
        sub_1ACE76FF8();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v22, v45, "Job %{private,mask.hash}s: Requesting Bootstrap", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        uint64_t v30 = v46;
        goto LABEL_15;
      }
    }

    swift_release();
    goto LABEL_17;
  }
  v133 &= 0x3Fu;
  unint64_t v109 = *((void *)&v132[0] + 1);
  unint64_t v110 = *(void *)&v132[0];
  uint64_t v31 = qword_1EB76D4F8;
  swift_bridgeObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1ACE754C8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB76D4E0);
  swift_retain_n();
  sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F578);
  uint64_t v33 = sub_1ACE75498();
  os_log_type_t v34 = sub_1ACE76C08();
  int v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v36 = swift_slowAlloc();
    int v106 = v12;
    uint64_t v37 = v36;
    uint64_t v108 = swift_slowAlloc();
    uint64_t v135 = v108;
    *(_DWORD *)uint64_t v37 = 141558787;
    v134[0] = 1752392040;
    *(void *)&long long v118 = updated;
    sub_1ACE76FF8();
    *(_WORD *)(v37 + 12) = 2081;
    int v107 = v35;
    sub_1ACB18E7C(v121 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, (uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v38 = (uint64_t *)&v19[*(int *)(v17 + 32)];
    uint64_t v39 = *v38;
    unint64_t v40 = v38[1];
    swift_bridgeObjectRetain();
    sub_1ACB19D1C((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
    v134[0] = sub_1ACA3189C(v39, v40, &v135);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2160;
    v134[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v37 + 32) = 2081;
    uint64_t v4 = v121;
    unint64_t v41 = v109;
    swift_bridgeObjectRetain();
    v134[0] = sub_1ACA3189C(v110, v41, &v135);
    uint64_t updated = (int *)v118;
    sub_1ACE76FF8();
    sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F9AC);
    sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F9AC);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v33, (os_log_type_t)v107, "Job %{private,mask.hash}s: Requesting sync with nextSyncToken %{private,mask.hash}s", (uint8_t *)v37, 0x2Au);
    uint64_t v42 = v108;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v42, -1, -1);
    uint64_t v43 = v37;
    unint64_t v12 = v106;
    MEMORY[0x1AD11B340](v43, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F9AC);
    sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F9AC);
  }

LABEL_20:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769498);
  uint64_t inited = swift_initStackObject();
  long long v118 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 1;
  *(void *)(inited + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = &unk_1F0380430;
  unint64_t v110 = sub_1ACA36AC8(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E458);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = v118;
  *(unsigned char *)(v51 + 32) = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_1ACE84820;
  *(unsigned char *)(v52 + 32) = 0;
  *(void *)(v52 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = &unk_1F0380458;
  *(unsigned char *)(v52 + 48) = 4;
  *(void *)(v52 + 56) = &unk_1F0380480;
  unint64_t v109 = sub_1ACA364C4(v52);
  uint64_t v53 = sub_1ACA42BE8((char *)1, 2, 1, (char *)v51);
  *((void *)v53 + 2) = 2;
  uint64_t v108 = (uint64_t)v53;
  v53[33] = 3;
  sub_1ACB1923C(v131, &v135);
  int v55 = v138 >> 6;
  long long v56 = 0uLL;
  if (v55)
  {
    if (v55 == 1)
    {
      LOBYTE(v55) = v138 & 0x3F;
      v138 &= 0x3Fu;
      uint64_t v57 = v135;
      long long v54 = v136;
      long long v56 = v137;
    }
    else
    {
      uint64_t v57 = 0;
      long long v54 = 0uLL;
    }
  }
  else
  {
    v138 &= 0x3Fu;
    uint64_t v57 = v135;
    *(void *)&long long v54 = v136;
    LOBYTE(v55) = 2;
  }
  uint64_t v127 = v57;
  long long v128 = v54;
  long long v129 = v56;
  char v130 = v55;
  char v126 = 1;
  char v125 = 1;
  char v124 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v118;
  uint64_t v59 = v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  uint64_t v123 = *(void *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update + updated[7]);
  sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F578);
  *(void *)(v58 + 32) = sub_1ACE777C8();
  *(void *)(v58 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v60;
  LOBYTE(v123) = 1;
  if (objc_msgSend(self, sel_isRunningOnHomepod))
  {
    if (qword_1E99EFE70 != -1) {
      swift_once();
    }
    unint64_t v61 = &qword_1E99F16E0;
  }
  else
  {
    if (qword_1EB76CBB8 != -1) {
      swift_once();
    }
    unint64_t v61 = &qword_1EB76CBB0;
  }
  uint64_t v62 = *v61 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_deltaNumberOfEpisodesToRequestPerPage;
  *(void *)&long long v118 = *(void *)v62;
  int v107 = *(unsigned __int8 *)(v62 + 8);
  char v122 = 1;
  sub_1ACA3AAD4(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration, v119, &qword_1EB7731B0);
  char v63 = *(unsigned char *)(v59 + updated[9]);
  sub_1ACB18E7C(v59, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  if (v63) {
    char v64 = 0;
  }
  else {
    char v64 = v12[updated[11]];
  }
  sub_1ACB19D1C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  uint64_t v65 = updated[8];
  int v106 = (char *)v59;
  int v66 = (uint64_t *)(v59 + v65);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  swift_bridgeObjectRetain();
  uint64_t v69 = MEMORY[0x1E4FBC860];
  unint64_t v70 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v71 = sub_1ACA35FB0(v69);
  unint64_t v72 = sub_1ACA360BC(v69);
  unint64_t v73 = sub_1ACA360DC(v69);
  *((void *)&v105 + 1) = sub_1ACA360FC(v69);
  *(void *)&long long v105 = v73;
  *((void *)&v104 + 1) = v69;
  *((void *)&v103 + 1) = v69;
  *(void *)&long long v104 = v108;
  *((void *)&v102 + 1) = v72;
  *(void *)&long long v103 = v109;
  *(void *)&long long v102 = v69;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)&v127, &v126, &v125, &v124, v110, v70, v71, v69, v120, v102, v103, v104, v58, (char *)&v123, v118, v107, v105, 0, 1,
    &v122,
    1,
    v119,
    0,
    0,
    v64,
    0,
    0,
    v69,
    v68,
    v67,
    2);
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v74 = sub_1ACE75438();
  __swift_project_value_buffer(v74, (uint64_t)qword_1EB76D378);
  uint64_t v75 = v121;
  swift_retain_n();
  unint64_t v76 = v116;
  sub_1ACE753E8();
  char v77 = sub_1ACE75428();
  int v78 = sub_1ACE76E18();
  char v79 = sub_1ACE76FA8();
  uint64_t v80 = v112;
  uint64_t v81 = v117;
  if (v79)
  {
    uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    LODWORD(v119) = v78;
    v82(v115, v76, v112);
    unint64_t v83 = (uint8_t *)swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    uint64_t v127 = v84;
    *(_DWORD *)unint64_t v83 = 136315138;
    uint64_t v85 = sub_1ACE750C8();
    uint64_t v123 = sub_1ACA3189C(v85, v86, &v127);
    uint64_t v75 = v121;
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v87 = v115;
    os_signpost_id_t v88 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v77, (os_signpost_type_t)v119, v88, "MAPINetwork", "[identifier=%{name=identifier}s] MediaAPIRequestEpisodes", v83, 0xCu);
    swift_arrayDestroy();
    uint64_t v89 = v84;
    unint64_t v76 = v116;
    MEMORY[0x1AD11B340](v89, -1, -1);
    uint64_t v90 = v83;
    uint64_t v81 = v117;
    MEMORY[0x1AD11B340](v90, -1, -1);

    uint64_t v91 = v87;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v87, v80);
  }
  else
  {
    swift_release_n();

    uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    uint64_t v91 = v115;
  }
  v82(v91, v76, v80);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v92 = sub_1ACE75468();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v76, v80);
  uint64_t v94 = *(void *)(v75 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 24);
  uint64_t v93 = *(void *)(v75 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v75 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController), v94);
  uint64_t v95 = swift_allocObject();
  swift_weakInit();
  uint64_t v96 = swift_allocObject();
  uint64_t v97 = v111;
  *(void *)(v96 + 16) = v92;
  *(void *)(v96 + 24) = v97;
  *(void *)(v96 + 32) = v95;
  sub_1ACB1923C(v131, (_OWORD *)(v96 + 40));
  uint64_t v98 = v114;
  *(void *)(v96 + 88) = v113;
  *(void *)(v96 + 96) = v98;
  sub_1ACB193A0((uint64_t)v131, (void (*)(void, void, void, void, void, void))sub_1ACB0F578);
  unint64_t v99 = sub_1ACB1934C();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v100 = v120;
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)(v120, (uint64_t)&type metadata for ServerSyncResponse, (uint64_t)sub_1ACB19314, v96, v94, (uint64_t)&type metadata for ServerSyncResponse, v93, v99);
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACB19D1C(v100, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
}

uint64_t sub_1ACB11B20(void *a1, uint64_t a2, uint64_t a3)
{
  FeedUpdateType.beginInterval()();
  objc_msgSend(a1, sel_unsafeIngestShow_, a3);
  FeedUpdateType.endInterval(for:)();
  return swift_release();
}

uint64_t sub_1ACB11BA8(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v5 = a1[8];
  long long v6 = a1[9];
  long long v7 = a1[6];
  long long v52 = a1[7];
  long long v53 = v5;
  long long v54 = v6;
  long long v9 = a1[4];
  long long v8 = a1[5];
  char v55 = *((unsigned char *)a1 + 160);
  long long v50 = v8;
  long long v51 = v7;
  long long v10 = a1[1];
  long long v45 = *a1;
  long long v46 = v10;
  long long v11 = a1[2];
  long long v48 = a1[3];
  long long v49 = v9;
  long long v47 = v11;
  LOBYTE(aBlock[0]) = 12;
  FeedUpdateType.beginInterval()();
  uint64_t v12 = v48;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_1ACB0A33C(v13);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v48 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = (unsigned char *)(v48 + 96);
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (*v16 & 0xFE) != 2 && (*v16)
      {
        uint64_t v20 = *((void *)v16 - 8);
        uint64_t v21 = *((void *)v16 - 7);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_1ACA41EA0(0, v17[2] + 1, 1, v17);
        }
        unint64_t v23 = v17[2];
        unint64_t v22 = v17[3];
        if (v23 >= v22 >> 1) {
          uint64_t v17 = sub_1ACA41EA0((void *)(v22 > 1), v23 + 1, 1, v17);
        }
        void v17[2] = v23 + 1;
        uint64_t v18 = &v17[2 * v23];
        void v18[4] = v20;
        v18[5] = v21;
      }
      v16 += 72;
      --v15;
    }
    while (v15);
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = (void *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData);
  uint64_t v25 = *(void *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *uint64_t v24 = v27;
    uint64_t v28 = *(void *)(v12 + 16);
    uint64_t v29 = v24[1];
    BOOL v26 = __OFADD__(v29, v28);
    uint64_t v30 = v29 + v28;
    if (!v26)
    {
      v24[1] = v30;
      LOBYTE(aBlock[0]) = 11;
      uint64_t updated = FeedUpdateType.beginInterval()();
      uint64_t v32 = *(void **)(v4 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
      uint64_t v33 = swift_allocObject();
      long long v34 = v52;
      long long v35 = v54;
      *(_OWORD *)(v33 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v53;
      *(_OWORD *)(v33 + 176) = v35;
      long long v36 = v50;
      long long v37 = v51;
      *(_OWORD *)(v33 + 96) = v49;
      *(_OWORD *)(v33 + 112) = v36;
      *(void *)(v33 + 16) = updated;
      *(void *)(v33 + 24) = v4;
      *(unsigned char *)(v33 + 192) = v55;
      *(_OWORD *)(v33 + 128) = v37;
      *(_OWORD *)(v33 + 144) = v34;
      long long v38 = v46;
      *(_OWORD *)(v33 + 32) = v45;
      *(_OWORD *)(v33 + 48) = v38;
      long long v39 = v48;
      *(_OWORD *)(v33 + 64) = v47;
      *(_OWORD *)(v33 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v39;
      *(void *)(v33 + 20sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = a2;
      *(void *)(v33 + 208) = a3;
      *(void *)(v33 + 216) = v41;
      *(void *)(v33 + 224) = v17;
      aBlock[4] = sub_1ACB1968C;
      void aBlock[5] = v33;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1ACA6DA9C;
      void aBlock[3] = &block_descriptor_55_0;
      unint64_t v40 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1ACB19020((uint64_t)&v45);
      sub_1ACA6DEC8(a2);
      swift_release();
      objc_msgSend(v32, sel_performBlock_, v40);
      _Block_release(v40);
      swift_release();
      LOBYTE(aBlock[0]) = 12;
      FeedUpdateType.endInterval(for:)();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB11EC0(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 128);
  long long v19 = v1;
  char v20 = *(unsigned char *)(a1 + 160);
  long long v2 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = v2;
  long long v3 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 96);
  long long v17 = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v10 = *(_OWORD *)a1;
  long long v11 = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v12 = *(_OWORD *)(a1 + 32);
  long long v13 = v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v8[8] = v18;
    v8[9] = v19;
    char v9 = v20;
    v8[4] = v14;
    v8[5] = v15;
    v8[6] = v16;
    v8[7] = v17;
    v8[0] = v10;
    v8[1] = v11;
    v8[2] = v12;
    void v8[3] = v13;
    sub_1ACB195C0((uint64_t)v8);
    sub_1ACB18D38(v8, v7);
    sub_1ACB19020((uint64_t)&v10);
    sub_1ACB0AEA4(v7);
    swift_release();
    return sub_1ACB19464((uint64_t)&v10);
  }
  return result;
}

uint64_t sub_1ACB11FA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, void (*a8)(void), uint64_t a9)
{
  long long v45 = a8;
  uint64_t v43 = a7;
  uint64_t v47 = a5;
  int v42 = a2;
  uint64_t v44 = a1;
  uint64_t v11 = sub_1ACE75448();
  uint64_t v32 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE753F8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  long long v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v20 = (char *)&v31 - v19;
  uint64_t v41 = *(char **)a3;
  unint64_t v40 = *(char **)(a3 + 8);
  long long v39 = *(char **)(a3 + 16);
  long long v38 = *(char **)(a3 + 24);
  long long v37 = *(char **)(a3 + 32);
  long long v36 = *(char **)(a3 + 40);
  long long v35 = *(char **)(a3 + 48);
  long long v34 = *(char **)(a3 + 56);
  int v33 = *(unsigned __int8 *)(a3 + 64);
  uint64_t v46 = a6 + 16;
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1ACE75438();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D378);
  unint64_t v22 = sub_1ACE75428();
  sub_1ACE75458();
  os_signpost_type_t v23 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v24 = v32;
    if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v13, v11) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v25 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
      uint64_t v25 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    BOOL v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v26 = 0;
    os_signpost_id_t v27 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v22, v23, v27, "MAPINetwork", v25, v26, 2u);
    MEMORY[0x1AD11B340](v26, -1, -1);

    uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
    v28(v20, v14);
    v28(v18, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  LOBYTE(v48[0]) = 9;
  FeedUpdateType.endInterval(for:)();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v30 = v42 & 1;
    sub_1ACB1923C(v43, v50);
    v48[0] = v41;
    v48[1] = v40;
    v48[2] = v39;
    v48[3] = v38;
    v48[4] = v37;
    v48[5] = v36;
    v48[6] = v35;
    v48[7] = v34;
    char v49 = v33;
    sub_1ACB12434((uint64_t)v50, v44, v30, v48, v45, a9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACB12434(uint64_t a1, uint64_t a2, int a3, char **a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v229 = a6;
  uint64_t v230 = a5;
  LODWORD(v247) = a3;
  uint64_t v248 = a2;
  uint64_t v8 = sub_1ACE75448();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v243 = v8;
  uint64_t v244 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v231 = (char *)&v210 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v210 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v210 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v219 = (char *)&v210 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v216 = (char *)&v210 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v212 = (char *)&v210 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A928);
  MEMORY[0x1F4188790](v23 - 8);
  int v220 = (char *)&v210 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_1ACE74B18();
  uint64_t v221 = *(void *)(v234 - 8);
  MEMORY[0x1F4188790](v234);
  uint64_t v214 = (char *)&v210 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v235);
  uint64_t v236 = (uint64_t)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1ACE753F8();
  uint64_t v28 = *(void (***)(char *, uint64_t))(v27 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v245 = (char *)&v210 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v218 = (char *)&v210 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v232 = (char *)&v210 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v239 = (char *)&v210 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  id v233 = (char *)&v210 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v217 = (char *)&v210 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v43 = (char *)&v210 - v42;
  MEMORY[0x1F4188790](v41);
  long long v45 = (char *)&v210 - v44;
  uint64_t v46 = *(void *)a1;
  uint64_t v226 = *(void *)(a1 + 8);
  uint64_t v227 = v46;
  uint64_t v47 = *(void *)(a1 + 16);
  uint64_t v224 = *(void *)(a1 + 24);
  uint64_t v225 = v47;
  uint64_t v223 = *(void *)(a1 + 32);
  int v228 = *(unsigned __int8 *)(a1 + 40);
  long long v48 = *a4;
  v238 = a4[1];
  uint64_t v49 = (uint64_t)a4[2];
  uint64_t v246 = a4[3];
  uint64_t v249 = (uint64_t)a4[4];
  uint64_t v50 = (uint64_t)a4[5];
  uint64_t v240 = v49;
  uint64_t v241 = v50;
  uint64_t v51 = (uint64_t)a4[7];
  uint64_t v242 = a4[6];
  LODWORD(v251) = *((unsigned __int8 *)a4 + 64);
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v237 = v51;
  os_signpost_type_t v215 = v17;
  uint64_t v213 = v14;
  uint64_t v52 = sub_1ACE75438();
  uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1EB76D378);
  swift_retain_n();
  sub_1ACE753E8();
  uint64_t v250 = v53;
  long long v54 = sub_1ACE75428();
  int v55 = sub_1ACE76E18();
  long long v56 = v45;
  if (sub_1ACE76FA8())
  {
    uint64_t v252 = v28[2];
    LODWORD(v255) = v55;
    unint64_t v57 = (unint64_t)(v28 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v58 = v43;
    uint64_t v59 = v43;
    uint64_t v60 = v27;
    ((void (*)(char *, char *, uint64_t))v252)(v59, v56, v27);
    uint64_t v61 = swift_slowAlloc();
    os_signpost_id_t v254 = v58;
    uint64_t v62 = (uint8_t *)v61;
    uint64_t v63 = swift_slowAlloc();
    unint64_t v253 = v28;
    unint64_t v222 = v63;
    uint64_t v211 = v56;
    *(_DWORD *)uint64_t v62 = 136315138;
    *(void *)&v259[0] = v63;
    uint64_t v64 = sub_1ACE750C8();
    *(void *)&v257[0] = sub_1ACA3189C(v64, v65, (uint64_t *)v259);
    int v66 = v252;
    sub_1ACE76FF8();
    uint64_t v67 = v211;
    swift_release_n();
    swift_bridgeObjectRelease();
    os_signpost_id_t v68 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v54, (os_signpost_type_t)v255, v68, "ParseEpisodesResponse", "[identifier=%{name=identifier}s] ParseEpisodesResponse", v62, 0xCu);
    unint64_t v69 = v222;
    swift_arrayDestroy();
    unint64_t v70 = v253;
    MEMORY[0x1AD11B340](v69, -1, -1);
    unint64_t v71 = v62;
    unint64_t v72 = v254;
    MEMORY[0x1AD11B340](v71, -1, -1);

    v70[1](v72, v60);
  }
  else
  {
    swift_release_n();

    unint64_t v73 = v28;
    uint64_t v74 = v28;
    uint64_t v67 = v45;
    int v66 = v74[2];
    unint64_t v57 = (unint64_t)(v74 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    unint64_t v72 = v43;
    uint64_t v60 = v27;
    unint64_t v70 = v73;
  }
  ((void (*)(char *, char *, uint64_t))v66)(v72, v67, v60);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v255 = sub_1ACE75468();
  char v77 = v70[1];
  unint64_t v76 = v70 + 1;
  uint64_t v75 = (char *)v77;
  v77(v67, v60);
  if (v251)
  {
    unint64_t v222 = v57;
    int v78 = v75;
    *(void *)&v259[0] = v48;
    char v79 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_willThrowTypedImpl();
    goto LABEL_8;
  }
  uint64_t v93 = v249;
  uint64_t v252 = v66;
  if ((v249 & 0x100) != 0)
  {
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v97 = sub_1ACE754C8();
    __swift_project_value_buffer(v97, (uint64_t)qword_1EB76D4E0);
    swift_retain();
    uint64_t v98 = sub_1ACE75498();
    os_log_type_t v99 = sub_1ACE76C08();
    int v100 = v99;
    if (os_log_type_enabled(v98, v99))
    {
      uint64_t v101 = swift_slowAlloc();
      LODWORD(v249) = v100;
      uint64_t v102 = v101;
      unint64_t v253 = (void (**)(char *, uint64_t))swift_slowAlloc();
      *(void *)&v259[0] = v253;
      *(_DWORD *)uint64_t v102 = 141558275;
      *(void *)&v257[0] = 1752392040;
      os_signpost_id_t v254 = v72;
      sub_1ACE76FF8();
      *(_WORD *)(v102 + 12) = 2081;
      uint64_t v248 = v102 + 14;
      uint64_t v103 = v236;
      sub_1ACB18E7C(v256 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v236, type metadata accessor for StoreFeedUpdater.Update);
      long long v104 = (uint64_t *)(v103 + *(int *)(v235 + 32));
      uint64_t v251 = v60;
      uint64_t v105 = *v104;
      unint64_t v106 = v104[1];
      swift_bridgeObjectRetain();
      sub_1ACB19D1C(v103, type metadata accessor for StoreFeedUpdater.Update);
      *(void *)&v257[0] = sub_1ACA3189C(v105, v106, (uint64_t *)v259);
      unint64_t v72 = v254;
      sub_1ACE76FF8();
      swift_release();
      uint64_t v60 = v251;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v98, (os_log_type_t)v249, "Job %{private,mask.hash}s: Server Meta is asking for reset, needs bootstrap", (uint8_t *)v102, 0x16u);
      int v107 = v253;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v107, -1, -1);
      MEMORY[0x1AD11B340](v102, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v145 = v239;
    memset(v259, 0, sizeof(v259));
    LOBYTE(v26sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
    sub_1ACB18FF4((uint64_t)v259);
    sub_1ACB18D38(v259, v257);
    sub_1ACB0AEA4(v257);
    long long v137 = sub_1ACE75428();
    sub_1ACE75458();
    LODWORD(v256) = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      uint64_t v146 = v219;
      sub_1ACE75488();
      swift_release();
      uint64_t v148 = v243;
      uint64_t v147 = v244;
      if ((*(unsigned int (**)(char *, uint64_t))(v244 + 88))(v146, v243) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v144 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v147 + 8))(v146, v148);
        uint64_t v144 = "";
      }
      uint64_t v178 = v72;
      uint64_t v179 = v239;
      goto LABEL_78;
    }
LABEL_67:

    uint64_t v202 = v145;
LABEL_79:
    ((void (*)(char *, uint64_t))v75)(v202, v60);
    return swift_release();
  }
  uint64_t v211 = v75;
  if (v249)
  {
    unint64_t v253 = v76;
    uint64_t v248 = 0;
    uint64_t v95 = 0;
    uint64_t v94 = v234;
    uint64_t v96 = v240;
LABEL_32:
    uint64_t v131 = v237;
    uint64_t v132 = (uint64_t)v238;
    if (v238)
    {
      sub_1ACB1953C(v48, (uint64_t)v238, v96, (uint64_t)v246, v93, v241, (uint64_t)v242, v237, 0);
      swift_bridgeObjectRetain();
      uint64_t v133 = (uint64_t)v220;
      sub_1ACE74AD8();
      swift_bridgeObjectRelease();
      uint64_t v134 = v221;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v133, 1, v94) == 1)
      {
        sub_1ACA50E78(v133, &qword_1EB76A928);
        swift_bridgeObjectRelease();
        sub_1ACB193E0(v48, v132, v240, (uint64_t)v246, v249, v241, (uint64_t)v242, v237, 0);
        sub_1ACB18F1C();
        uint64_t v135 = (void *)swift_allocError();
        *long long v136 = 3;
        *(void *)&v259[0] = v135;
        sub_1ACB18F70((uint64_t)v259);
        sub_1ACB18D38(v259, v257);
        sub_1ACB0AEA4(v257);

        long long v137 = sub_1ACE75428();
        unsigned __int8 v138 = v217;
        sub_1ACE75458();
        int v139 = sub_1ACE76E08();
        if ((sub_1ACE76FA8() & 1) == 0)
        {

          ((void (*)(char *, uint64_t))v211)(v138, v60);
          return swift_release();
        }
        LODWORD(v256) = v139;
        swift_retain();
        unint64_t v140 = v212;
        sub_1ACE75488();
        swift_release();
        uint64_t v142 = v243;
        uint64_t v141 = v244;
        int v143 = (*(uint64_t (**)(char *, uint64_t))(v244 + 88))(v140, v243);
        uint64_t v75 = v211;
        if (v143 == *MEMORY[0x1E4FBD340])
        {
          uint64_t v144 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v141 + 8))(v140, v142);
          uint64_t v144 = "";
        }
        uint64_t v178 = v72;
        uint64_t v179 = v217;
        goto LABEL_78;
      }
      uint64_t v256 = v95;
      unint64_t v222 = v57;
      os_signpost_id_t v254 = v72;
      uint64_t v251 = v60;
      unint64_t v159 = v214;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v214, v133, v94);
      uint64_t v247 = sub_1ACE74A98();
      v245 = v160;
      uint64_t v239 = (char *)sub_1ACE74A48();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v159, v94);
      LODWORD(v236) = 3;
      uint64_t v235 = 0xE300000000000000;
      uint64_t v152 = 7628135;
      uint64_t v131 = v237;
    }
    else
    {
      uint64_t v256 = v95;
      unint64_t v222 = v57;
      os_signpost_id_t v254 = v72;
      uint64_t v251 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v247 = 0;
      v245 = 0;
      uint64_t v239 = 0;
      uint64_t v152 = 0;
      uint64_t v235 = 0;
      LODWORD(v236) = 255;
    }
    uint64_t v162 = v226;
    uint64_t v161 = v227;
    uint64_t v164 = v224;
    uint64_t v163 = v225;
    uint64_t v165 = v223;
    unsigned __int8 v166 = v228;
    sub_1ACB0F578(v227, v226, v225, v224, v223, v228);
    sub_1ACB0F578(v161, v162, v163, v164, v165, v166);
    swift_bridgeObjectRetain();
    sub_1ACB193E0(v48, (uint64_t)v238, v240, (uint64_t)v246, v249, v241, (uint64_t)v242, v131, 0);
    *(void *)&v259[0] = v161;
    *((void *)&v259[0] + 1) = v162;
    *(void *)&v259[1] = v163;
    *((void *)&v259[1] + 1) = v164;
    *(void *)&v259[2] = v165;
    BYTE8(v259[2]) = v166;
    *(void *)&v259[3] = v131;
    *((void *)&v259[3] + 1) = v248;
    *(void *)&long long v260 = v256;
    *((void *)&v260 + 1) = v247;
    *(void *)&long long v261 = v245;
    *((void *)&v261 + 1) = v239;
    *(void *)&long long v262 = v152;
    *((void *)&v262 + 1) = v235;
    LOBYTE(v263) = v236;
    *((void *)&v263 + 1) = v161;
    *(void *)&long long v264 = v162;
    *((void *)&v264 + 1) = v163;
    *(void *)&long long v265 = v164;
    *((void *)&v265 + 1) = v165;
    unsigned __int8 v266 = v166;
    v257[8] = v264;
    v257[9] = v265;
    unsigned __int8 v258 = v166;
    v257[4] = v260;
    v257[5] = v261;
    v257[6] = v262;
    v257[7] = v263;
    v257[0] = v259[0];
    v257[1] = v259[1];
    v257[2] = v259[2];
    v257[3] = v259[3];
    v230(v257);
    sub_1ACB19464((uint64_t)v259);
    int64_t v167 = sub_1ACE75428();
    uint64_t v168 = v233;
    sub_1ACE75458();
    int v169 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      int v170 = v216;
      sub_1ACE75488();
      swift_release();
      uint64_t v172 = v243;
      uint64_t v171 = v244;
      int v173 = (*(uint64_t (**)(char *, uint64_t))(v244 + 88))(v170, v243);
      int v174 = *MEMORY[0x1E4FBD340];
      uint64_t v175 = v251;
      os_signpost_id_t v176 = v211;
      LODWORD(v256) = v169;
      if (v173 == v174)
      {
        v177 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v171 + 8))(v170, v172);
        v177 = "";
      }
      int v195 = v254;
      long long v196 = v233;
      ((void (*)(char *, char *, uint64_t))v252)(v254, v233, v175);
      long long v197 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v197 = 0;
      os_signpost_id_t v198 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v167, (os_signpost_type_t)v256, v198, "ParseEpisodesResponse", v177, v197, 2u);
      MEMORY[0x1AD11B340](v197, -1, -1);

      ((void (*)(char *, uint64_t))v176)(v196, v175);
      ((void (*)(char *, uint64_t))v176)(v195, v175);
    }
    else
    {

      ((void (*)(char *, uint64_t))v211)(v168, v251);
    }
    return swift_release();
  }
  uint64_t v94 = v234;
  uint64_t v95 = (uint64_t)v246;
  if (v246)
  {
    unint64_t v253 = v76;
    swift_bridgeObjectRetain();
    uint64_t v93 = v249;
    uint64_t v96 = v240;
    uint64_t v248 = v240;
    goto LABEL_32;
  }
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v180 = sub_1ACE754C8();
  __swift_project_value_buffer(v180, (uint64_t)qword_1EB76D4E0);
  swift_retain();
  unint64_t v181 = sub_1ACE75498();
  os_log_type_t v182 = sub_1ACE76C08();
  int v183 = v182;
  BOOL v184 = os_log_type_enabled(v181, v182);
  unint64_t v222 = v57;
  if (v184)
  {
    uint64_t v185 = swift_slowAlloc();
    uint64_t v186 = v256;
    LODWORD(v249) = v183;
    uint64_t v187 = v185;
    unint64_t v253 = (void (**)(char *, uint64_t))swift_slowAlloc();
    *(void *)&v259[0] = v253;
    *(_DWORD *)uint64_t v187 = 141558275;
    *(void *)&v257[0] = 1752392040;
    os_signpost_id_t v254 = v72;
    uint64_t v246 = (char *)v257 + 8;
    sub_1ACE76FF8();
    *(_WORD *)(v187 + 12) = 2081;
    uint64_t v242 = (char *)(v187 + 14);
    uint64_t v188 = v236;
    sub_1ACB18E7C(v186 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v236, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v189 = (uint64_t *)(v188 + *(int *)(v235 + 32));
    uint64_t v190 = v76;
    uint64_t v251 = v60;
    uint64_t v191 = *v189;
    unint64_t v192 = v189[1];
    swift_bridgeObjectRetain();
    sub_1ACB19D1C(v188, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v193 = v191;
    unint64_t v76 = v190;
    *(void *)&v257[0] = sub_1ACA3189C(v193, v192, (uint64_t *)v259);
    unint64_t v72 = v254;
    sub_1ACE76FF8();
    swift_release();
    uint64_t v60 = v251;
    uint64_t v75 = v211;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v181, (os_log_type_t)v249, "Job %{private,mask.hash}s: Response is missing nextSyncToken", (uint8_t *)v187, 0x16u);
    uint64_t v194 = v253;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v194, -1, -1);
    MEMORY[0x1AD11B340](v187, -1, -1);
  }
  else
  {

    swift_release();
  }
  int v78 = v75;
  sub_1ACB18F1C();
  long long v48 = (char *)swift_allocError();
  *uint64_t v206 = 2;
  swift_willThrow();
LABEL_8:
  if (v247) {
    goto LABEL_27;
  }
  if (v248 != 400)
  {
    if ((unint64_t)(v248 - 500) <= 0x63)
    {
      unint64_t v253 = (void (**)(char *, uint64_t))v48;
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      uint64_t v108 = sub_1ACE754C8();
      __swift_project_value_buffer(v108, (uint64_t)qword_1EB76D4E0);
      swift_retain();
      unint64_t v109 = sub_1ACE75498();
      os_log_type_t v110 = sub_1ACE76C08();
      int v111 = v110;
      BOOL v112 = os_log_type_enabled(v109, v110);
      uint64_t v75 = v78;
      uint64_t v252 = v66;
      if (v112)
      {
        uint64_t v113 = swift_slowAlloc();
        LODWORD(v247) = v111;
        uint64_t v114 = v113;
        uint64_t v249 = swift_slowAlloc();
        *(void *)&v259[0] = v249;
        *(_DWORD *)uint64_t v114 = 141558531;
        *(void *)&v257[0] = 1752392040;
        os_signpost_id_t v254 = v72;
        sub_1ACE76FF8();
        *(_WORD *)(v114 + 12) = 2081;
        uint64_t v115 = v236;
        sub_1ACB18E7C(v256 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v236, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v116 = (uint64_t *)(v115 + *(int *)(v235 + 32));
        uint64_t v251 = v60;
        uint64_t v117 = *v116;
        unint64_t v118 = v116[1];
        swift_bridgeObjectRetain();
        sub_1ACB19D1C(v115, type metadata accessor for StoreFeedUpdater.Update);
        *(void *)&v257[0] = sub_1ACA3189C(v117, v118, (uint64_t *)v259);
        sub_1ACE76FF8();
        swift_release();
        uint64_t v60 = v251;
        swift_bridgeObjectRelease();
        *(_WORD *)(v114 + 22) = 2048;
        *(void *)&v257[0] = v248;
        unint64_t v72 = v254;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v109, (os_log_type_t)v247, "Job %{private,mask.hash}s: Server return %ld, needs retry", (uint8_t *)v114, 0x20u);
        uint64_t v119 = v249;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v119, -1, -1);
        MEMORY[0x1AD11B340](v114, -1, -1);
      }
      else
      {

        swift_release();
      }
      uint64_t v145 = v218;
      *(long long *)((char *)v259 + 8) = 0u;
      *(long long *)((char *)&v259[1] + 8) = 0u;
      *(long long *)((char *)&v259[2] + 8) = 0u;
      *(void *)&v259[0] = 1;
      *((void *)&v259[3] + 1) = 0;
      LOBYTE(v26sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
      sub_1ACB18FF4((uint64_t)v259);
      sub_1ACB18D38(v259, v257);
      sub_1ACB0AEA4(v257);

      long long v137 = sub_1ACE75428();
      sub_1ACE75458();
      LODWORD(v256) = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        swift_retain();
        uint64_t v199 = v213;
        sub_1ACE75488();
        swift_release();
        uint64_t v201 = v243;
        uint64_t v200 = v244;
        if ((*(unsigned int (**)(char *, uint64_t))(v244 + 88))(v199, v243) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v144 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v200 + 8))(v199, v201);
          uint64_t v144 = "";
        }
        uint64_t v178 = v72;
        uint64_t v179 = v218;
LABEL_78:
        ((void (*)(char *, char *, uint64_t))v252)(v178, v179, v60);
        uint64_t v202 = v72;
        uint64_t v207 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v207 = 0;
        os_signpost_id_t v208 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v137, (os_signpost_type_t)v256, v208, "ParseEpisodesResponse", v144, v207, 2u);
        MEMORY[0x1AD11B340](v207, -1, -1);

        ((void (*)(char *, uint64_t))v75)(v179, v60);
        goto LABEL_79;
      }
      goto LABEL_67;
    }
LABEL_27:
    unint64_t v253 = v76;
    uint64_t v120 = v60;
    *(void *)&v259[0] = v48;
    sub_1ACB18F70((uint64_t)v259);
    sub_1ACB18D38(v259, v257);
    uint64_t v121 = v48;
    sub_1ACB0AEA4(v257);

    char v122 = sub_1ACE75428();
    uint64_t v123 = v245;
    sub_1ACE75458();
    os_signpost_type_t v124 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      uint64_t v211 = v78;
      char v125 = v66;
      swift_retain();
      char v126 = v231;
      sub_1ACE75488();
      uint64_t v127 = v126;
      swift_release();
      uint64_t v129 = v243;
      uint64_t v128 = v244;
      if ((*(unsigned int (**)(char *, uint64_t))(v244 + 88))(v127, v243) == *MEMORY[0x1E4FBD340])
      {
        char v130 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v128 + 8))(v127, v129);
        char v130 = "";
      }
      uint64_t v60 = v120;
      uint64_t v149 = v245;
      ((void (*)(char *, char *, uint64_t))v125)(v72, v245, v60);
      uint64_t v123 = v72;
      uint64_t v150 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v150 = 0;
      os_signpost_id_t v151 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v122, v124, v151, "ParseEpisodesResponse", v130, v150, 2u);
      MEMORY[0x1AD11B340](v150, -1, -1);

      int v78 = v211;
      ((void (*)(char *, uint64_t))v211)(v149, v60);
    }
    else
    {
    }
    ((void (*)(char *, uint64_t))v78)(v123, v60);
    return swift_release();
  }
  unint64_t v253 = (void (**)(char *, uint64_t))v48;
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v80 = sub_1ACE754C8();
  __swift_project_value_buffer(v80, (uint64_t)qword_1EB76D4E0);
  swift_retain();
  uint64_t v81 = sub_1ACE75498();
  os_log_type_t v82 = sub_1ACE76C08();
  int v83 = v82;
  BOOL v84 = os_log_type_enabled(v81, v82);
  uint64_t v252 = v66;
  if (v84)
  {
    uint64_t v85 = swift_slowAlloc();
    LODWORD(v249) = v83;
    uint64_t v86 = v85;
    uint64_t v87 = swift_slowAlloc();
    *(void *)&v259[0] = v87;
    *(_DWORD *)uint64_t v86 = 141558275;
    *(void *)&v257[0] = 1752392040;
    os_signpost_id_t v254 = v72;
    sub_1ACE76FF8();
    *(_WORD *)(v86 + 12) = 2081;
    uint64_t v248 = v86 + 14;
    uint64_t v88 = v236;
    sub_1ACB18E7C(v256 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v236, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v89 = (uint64_t *)(v88 + *(int *)(v235 + 32));
    uint64_t v251 = v60;
    uint64_t v90 = *v89;
    unint64_t v91 = v89[1];
    swift_bridgeObjectRetain();
    sub_1ACB19D1C(v88, type metadata accessor for StoreFeedUpdater.Update);
    *(void *)&v257[0] = sub_1ACA3189C(v90, v91, (uint64_t *)v259);
    unint64_t v72 = v254;
    sub_1ACE76FF8();
    swift_release();
    uint64_t v60 = v251;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v81, (os_log_type_t)v249, "Job %{private,mask.hash}s: Server returned 400, needs bootstrap", (uint8_t *)v86, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v87, -1, -1);
    MEMORY[0x1AD11B340](v86, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v92 = v232;
  memset(v259, 0, sizeof(v259));
  LOBYTE(v26sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  sub_1ACB18FF4((uint64_t)v259);
  sub_1ACB18D38(v259, v257);
  sub_1ACB0AEA4(v257);

  unint64_t v153 = sub_1ACE75428();
  sub_1ACE75458();
  LODWORD(v256) = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    int v154 = v215;
    sub_1ACE75488();
    swift_release();
    uint64_t v156 = v243;
    uint64_t v155 = v244;
    if ((*(unsigned int (**)(char *, uint64_t))(v244 + 88))(v154, v243) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v157 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
      uint64_t v157 = "";
    }
    uint64_t v203 = v232;
    ((void (*)(char *, char *, uint64_t))v252)(v72, v232, v60);
    uint64_t v158 = v72;
    uint64_t v204 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v204 = 0;
    os_signpost_id_t v205 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v153, (os_signpost_type_t)v256, v205, "ParseEpisodesResponse", v157, v204, 2u);
    MEMORY[0x1AD11B340](v204, -1, -1);

    ((void (*)(char *, uint64_t))v78)(v203, v60);
  }
  else
  {

    uint64_t v158 = v92;
  }
  ((void (*)(char *, uint64_t))v78)(v158, v60);
  return swift_release();
}

void sub_1ACB1403C(uint64_t a1, uint64_t a2, long long *a3, void (*a4)(void, id), uint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v229 = a6;
  uint64_t v230 = a7;
  uint64_t v224 = a5;
  int v228 = a4;
  uint64_t v236 = a3;
  uint64_t v239 = sub_1ACE75118();
  uint64_t v235 = *(void *)(v239 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v239);
  uint64_t v10 = (char *)&v211 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v211 - v12;
  MEMORY[0x1F4188790](v11);
  int v220 = (char *)&v211 - v14;
  uint64_t v232 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v232);
  uint64_t v233 = (uint64_t)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_1ACE754C8();
  uint64_t v225 = *(void (***)(char *, uint64_t, uint64_t))(v238 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v238);
  os_log_t v219 = (os_log_t)((char *)&v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  unint64_t v222 = (char *)&v211 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A978);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v223 = (uint64_t)&v211 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v231 = (uint64_t)&v211 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v217 = (uint64_t)&v211 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v218 = (uint64_t)&v211 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v211 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  uint64_t v33 = (char *)&v211 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v36 = (char *)&v211 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v240 = (char *)&v211 - v37;
  LOBYTE(v243) = 11;
  FeedUpdateType.endInterval(for:)();
  uint64_t v38 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
  uint64_t v241 = a2;
  uint64_t v39 = a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  id v41 = objc_retainAutoreleasedReturnValue(objc_msgSend(v38, sel_podcastForStoreId_, *(void *)(v39
                                                                                               + *(int *)(updated + 28))));
  uint64_t v237 = v39;
  if (!v41)
  {
    sub_1ACE74DD8();
    uint64_t v42 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v41 = objc_msgSend(v38, sel_podcastForFeedUrl_, v42);

    uint64_t v39 = v237;
    if (!v41) {
      goto LABEL_16;
    }
  }
  id v226 = v38;
  uint64_t v227 = updated;
  id v43 = objc_msgSend(v41, sel_uuid);
  if (!v43)
  {

LABEL_16:
    sub_1ACB18F1C();
    uint64_t v74 = (void *)swift_allocError();
    unsigned char *v75 = 10;
    *(void *)&long long v243 = v74;
    sub_1ACB18F70((uint64_t)&v243);
    sub_1ACB18D38(&v243, v242);
    sub_1ACB0AEA4(v242);

    return;
  }
  uint64_t v44 = v43;
  id v234 = v41;
  uint64_t v216 = sub_1ACE761B8();
  uint64_t v221 = v45;

  sub_1ACB1923C(v236, v249);
  sub_1ACB1923C(v249, &v250);
  os_signpost_type_t v215 = v10;
  if ((v253 & 0xC0) == 0x80 && v253 == 128)
  {
    int8x16_t v46 = vorrq_s8(v251, v252);
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v46.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v46, v46, 8uLL)) | v250))
    {
      uint64_t v47 = (uint64_t)v240;
      sub_1ACE75108();
      uint64_t v48 = v235;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v235 + 56))(v47, 0, 1, v239);
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      uint64_t v49 = v238;
      uint64_t v50 = __swift_project_value_buffer(v238, (uint64_t)qword_1EB76D4E0);
      uint64_t v51 = v225;
      uint64_t v52 = v222;
      v225[2](v222, v50, v49);
      sub_1ACA3AAD4(v47, (uint64_t)v36, &qword_1EB76A978);
      uint64_t v53 = v241;
      swift_retain();
      long long v54 = sub_1ACE75498();
      LODWORD(v22sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE76C08();
      if (os_log_type_enabled(v54, (os_log_type_t)v220))
      {
        os_log_t v219 = v54;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v218 = swift_slowAlloc();
        *(void *)&long long v243 = v218;
        *(_DWORD *)uint64_t v55 = 141558531;
        *(void *)&v242[0] = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v55 + 12) = 2081;
        uint64_t v56 = v233;
        sub_1ACB18E7C(v39, v233, type metadata accessor for StoreFeedUpdater.Update);
        unint64_t v57 = (uint64_t *)(v56 + *(int *)(v232 + 32));
        uint64_t v59 = *v57;
        unint64_t v58 = v57[1];
        swift_bridgeObjectRetain();
        uint64_t v60 = v56;
        uint64_t v48 = v235;
        sub_1ACB19D1C(v60, type metadata accessor for StoreFeedUpdater.Update);
        *(void *)&v242[0] = sub_1ACA3189C(v59, v58, (uint64_t *)&v243);
        uint64_t v217 = (uint64_t)v242 + 8;
        sub_1ACE76FF8();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v55 + 22) = 2082;
        sub_1ACA3AAD4((uint64_t)v36, (uint64_t)v33, &qword_1EB76A978);
        uint64_t v61 = v239;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v33, 1, v239) == 1)
        {
LABEL_85:
          __break(1u);
          goto LABEL_86;
        }
        sub_1ACB19A40(&qword_1EB76A970, MEMORY[0x1E4F27990]);
        uint64_t v62 = sub_1ACE777C8();
        unint64_t v64 = v63;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v61);
        *(void *)&v242[0] = sub_1ACA3189C(v62, v64, (uint64_t *)&v243);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACA50E78((uint64_t)v36, &qword_1EB76A978);
        os_log_t v65 = v219;
        _os_log_impl(&dword_1AC9D5000, v219, (os_log_type_t)v220, "Job %{private,mask.hash}s: Processing: Starting a new bootstrap with token %{public}s", (uint8_t *)v55, 0x20u);
        uint64_t v66 = v218;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v66, -1, -1);
        MEMORY[0x1AD11B340](v55, -1, -1);

        ((void (*)(char *, uint64_t))v225[1])(v222, v238);
        goto LABEL_28;
      }
      swift_release();
      sub_1ACA50E78((uint64_t)v36, &qword_1EB76A978);

      ((void (*)(char *, uint64_t))v51[1])(v52, v49);
LABEL_31:
      uint64_t v111 = *(void *)(v53 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v53 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider), *(void *)(v53 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 24));
      BOOL v112 = *(uint64_t (**)(void))(v111 + 8);
      swift_bridgeObjectRetain();
      id v113 = v234;
      uint64_t v114 = (void (*)(void, id))v112();
      swift_bridgeObjectRelease();
      if (v228) {
        v228(v114, v113);
      }
      unint64_t v116 = v229;
      uint64_t v115 = v230;
      uint64_t v117 = v236;
      if (v229 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v118 = *(void *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v119 = v241;
      uint64_t v120 = v239;
      int v228 = v114;
      if (v118 || *(void *)(v115 + 16))
      {
        sub_1ACB15FD8(v113, (uint64_t)v240, v116, v114);
        uint64_t v121 = (void *)sub_1ACB1751C(v115);
        sub_1ACB17A0C((uint64_t)v121, v114);
      }
      else
      {
        if (qword_1EB76D4F8 != -1) {
          swift_once();
        }
        __swift_project_value_buffer(v238, (uint64_t)qword_1EB76D4E0);
        swift_retain();
        uint64_t v165 = sub_1ACE75498();
        os_log_type_t v166 = sub_1ACE76C08();
        if (os_log_type_enabled(v165, v166))
        {
          uint64_t v167 = swift_slowAlloc();
          uint64_t v168 = swift_slowAlloc();
          *(void *)&long long v243 = v168;
          *(_DWORD *)uint64_t v167 = 141558275;
          *(void *)&v242[0] = 1752392040;
          sub_1ACE76FF8();
          *(_WORD *)(v167 + 12) = 2081;
          uint64_t v169 = v233;
          sub_1ACB18E7C(v237, v233, type metadata accessor for StoreFeedUpdater.Update);
          int v170 = (uint64_t *)(v169 + *(int *)(v232 + 32));
          uint64_t v171 = *v170;
          unint64_t v172 = v170[1];
          swift_bridgeObjectRetain();
          uint64_t v173 = v169;
          uint64_t v48 = v235;
          sub_1ACB19D1C(v173, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v174 = v171;
          uint64_t v119 = v241;
          *(void *)&v242[0] = sub_1ACA3189C(v174, v172, (uint64_t *)&v243);
          id v113 = v234;
          sub_1ACE76FF8();
          swift_release();
          uint64_t v117 = v236;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v165, v166, "Job %{private,mask.hash}s: Sync response contained no updates", (uint8_t *)v167, 0x16u);
          swift_arrayDestroy();
          uint64_t v175 = v168;
          uint64_t v114 = v228;
          MEMORY[0x1AD11B340](v175, -1, -1);
          MEMORY[0x1AD11B340](v167, -1, -1);
        }
        else
        {

          swift_release();
        }
        uint64_t v120 = v239;
      }
      if (*((void *)v117 + 8))
      {
        swift_bridgeObjectRetain();
        char v122 = (void *)sub_1ACE76178();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v122 = 0;
      }
      objc_msgSend(v113, sel_setNextSyncToken_, v122);

      uint64_t v123 = v231;
      sub_1ACA3AAD4((uint64_t)v240, v231, &qword_1EB76A978);
      os_signpost_type_t v124 = *(void (***)(char *, uint64_t, uint64_t))(v48 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v123, 1, v120) == 1)
      {
        char v125 = 0;
      }
      else
      {
        uint64_t v126 = v123;
        char v125 = (void *)sub_1ACE750D8();
        uint64_t v127 = v126;
        uint64_t v114 = v228;
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v127, v120);
      }
      objc_msgSend(v113, sel_setBootstrapGeneration_, v125);

      int v128 = *((unsigned __int8 *)v117 + 112);
      if (v128 == 255) {
        goto LABEL_68;
      }
      uint64_t v227 = *((void *)v117 + 9);
      uint64_t v129 = *((void *)v117 + 11);
      unint64_t v229 = *((void *)v117 + 10);
      uint64_t v230 = v129;
      uint64_t v231 = *((void *)v117 + 12);
      uint64_t v236 = (long long *)*((void *)v117 + 13);
      uint64_t v130 = v119 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration;
      if (*(unsigned char *)(v130 + *(int *)(type metadata accessor for FeedManagerBagConfiguration() + 24)) == 1
        && (sub_1ACB1923C((long long *)((char *)v117 + 120), v248), sub_1ACB1923C(v248, v254), (v255 & 0xC0) == 0x40))
      {
        uint64_t v225 = v124;
        v255 &= 0x3Fu;
        sub_1ACB19254((uint64_t)v254, (uint64_t)v256);
        uint64_t v131 = v227;
        uint64_t v132 = v229;
        uint64_t v133 = v230;
        *(void *)&long long v243 = v227;
        *((void *)&v243 + 1) = v229;
        uint64_t v134 = v231;
        uint64_t v244 = v230;
        uint64_t v245 = v231;
        uint64_t v135 = v236;
        uint64_t v246 = v236;
        char v247 = v128;
        sub_1ACB19254((uint64_t)v256, (uint64_t)v242);
        uint64_t v136 = v131;
        uint64_t v137 = v241;
        sub_1ACB0F610(v136, v132, v133, v134, (uint64_t)v135, v128);
        if (_s18PodcastsFoundation12MediaRequestC0D4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v243, (uint64_t)v242))
        {
          sub_1ACB0F9D0(v227, v229, v230, v231, (uint64_t)v236, v128);
          if (qword_1EB76D4F8 != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v238, (uint64_t)qword_1EB76D4E0);
          swift_retain();
          unsigned __int8 v138 = sub_1ACE75498();
          os_log_type_t v139 = sub_1ACE76BF8();
          BOOL v140 = os_log_type_enabled(v138, v139);
          os_signpost_type_t v124 = v225;
          if (v140)
          {
            uint64_t v141 = swift_slowAlloc();
            uint64_t v236 = (long long *)swift_slowAlloc();
            *(void *)&long long v243 = v236;
            *(_DWORD *)uint64_t v141 = 141558275;
            *(void *)&v242[0] = 1752392040;
            sub_1ACE76FF8();
            *(_WORD *)(v141 + 12) = 2081;
            uint64_t v231 = v141 + 14;
            uint64_t v142 = v233;
            sub_1ACB18E7C(v237, v233, type metadata accessor for StoreFeedUpdater.Update);
            int v143 = (uint64_t *)(v142 + *(int *)(v232 + 32));
            uint64_t v144 = *v143;
            unint64_t v145 = v143[1];
            swift_bridgeObjectRetain();
            uint64_t v146 = v142;
            uint64_t v114 = v228;
            sub_1ACB19D1C(v146, type metadata accessor for StoreFeedUpdater.Update);
            uint64_t v147 = v144;
            uint64_t v137 = v241;
            *(void *)&v242[0] = sub_1ACA3189C(v147, v145, (uint64_t *)&v243);
            id v113 = v234;
            sub_1ACE76FF8();
            swift_release();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1AC9D5000, v138, v139, "Job %{private,mask.hash}s: Next link is the same page we just loaded, we're stuck in a loop, ending update.", (uint8_t *)v141, 0x16u);
            uint64_t v148 = v236;
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v148, -1, -1);
            MEMORY[0x1AD11B340](v141, -1, -1);
          }
          else
          {

            swift_release();
          }
          uint64_t v120 = v239;
          uint64_t v176 = *(void *)(v137 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 40);
          BOOL v177 = __OFADD__(v176, 1);
          uint64_t v178 = v176 + 1;
          if (!v177)
          {
            *(void *)(v137 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v178;
LABEL_68:
            LOBYTE(v243) = 13;
            uint64_t v236 = (long long *)FeedUpdateType.beginInterval()();
            objc_msgSend(v113, sel_setFeedUpdateNeedsRetry_, 0);
            uint64_t v179 = v223;
            sub_1ACA3AAD4((uint64_t)v240, v223, &qword_1EB76A978);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v179, 1, v120) == 1)
            {
              sub_1ACA50E78(v179, &qword_1EB76A978);
              id v180 = v226;
              uint64_t v181 = v238;
            }
            else
            {
              uint64_t v182 = v235;
              (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v215, v179, v120);
              uint64_t v183 = v238;
              if (qword_1EB76D4F8 != -1) {
                swift_once();
              }
              __swift_project_value_buffer(v183, (uint64_t)qword_1EB76D4E0);
              swift_retain();
              BOOL v184 = sub_1ACE75498();
              os_log_type_t v185 = sub_1ACE76C08();
              if (os_log_type_enabled(v184, v185))
              {
                uint64_t v186 = swift_slowAlloc();
                uint64_t v187 = swift_slowAlloc();
                *(void *)&long long v243 = v187;
                *(_DWORD *)uint64_t v186 = 141558275;
                *(void *)&v242[0] = 1752392040;
                sub_1ACE76FF8();
                *(_WORD *)(v186 + 12) = 2081;
                uint64_t v188 = v233;
                sub_1ACB18E7C(v237, v233, type metadata accessor for StoreFeedUpdater.Update);
                uint64_t v189 = (uint64_t *)(v188 + *(int *)(v232 + 32));
                uint64_t v190 = *v189;
                unint64_t v191 = v189[1];
                swift_bridgeObjectRetain();
                uint64_t v192 = v188;
                uint64_t v120 = v239;
                sub_1ACB19D1C(v192, type metadata accessor for StoreFeedUpdater.Update);
                *(void *)&v242[0] = sub_1ACA3189C(v190, v191, (uint64_t *)&v243);
                sub_1ACE76FF8();
                swift_release();
                uint64_t v182 = v235;
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1AC9D5000, v184, v185, "Job %{private,mask.hash}s: Bootstrap completed, feed deleting all episodes that are not in this bootstrap.", (uint8_t *)v186, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v187, -1, -1);
                MEMORY[0x1AD11B340](v186, -1, -1);
              }
              else
              {

                swift_release();
              }
              uint64_t v193 = self;
              uint64_t v194 = (void *)sub_1ACE76178();
              id v195 = objc_msgSend(v193, sel_predicateForAllEpisodesOnPodcastUuid_, v194);

              long long v196 = v215;
              long long v197 = (void *)_sSo9MTEpisodeC18PodcastsFoundationE31predicateForEpisodesNotMatching19bootstrapGenerationSo11NSPredicateC0C04UUIDV_tFZ_0();
              id v198 = objc_msgSend(v195, sel_AND_, v197);

              id v199 = objc_msgSend(v193, sel_predicateForFeedDeleted_, 0);
              id v200 = objc_msgSend(v198, sel_AND_, v199);

              uint64_t v114 = v228;
              sub_1ACB17A0C((uint64_t)v200, v228);
              id v113 = v234;
              objc_msgSend(v234, sel_setBootstrapGeneration_, 0);

              (*(void (**)(char *, uint64_t))(v182 + 8))(v196, v120);
              uint64_t v181 = v238;
              id v180 = v226;
            }
            objc_msgSend(v114, sel_unsafeFinalizeIngestion);
            objc_msgSend(v113, sel_setImporting_, 0);
            objc_msgSend(v113, sel_setIsTransitioningFromImplicit_, 0);
            objc_msgSend(v180, sel_saveInCurrentBlock);
            if (qword_1EB76D4F8 != -1) {
              swift_once();
            }
            __swift_project_value_buffer(v181, (uint64_t)qword_1EB76D4E0);
            swift_retain();
            uint64_t v201 = sub_1ACE75498();
            os_log_type_t v202 = sub_1ACE76C08();
            if (os_log_type_enabled(v201, v202))
            {
              uint64_t v203 = swift_slowAlloc();
              uint64_t v204 = swift_slowAlloc();
              *(void *)&long long v243 = v204;
              *(_DWORD *)uint64_t v203 = 141558275;
              *(void *)&v242[0] = 1752392040;
              sub_1ACE76FF8();
              *(_WORD *)(v203 + 12) = 2081;
              uint64_t v205 = v233;
              sub_1ACB18E7C(v237, v233, type metadata accessor for StoreFeedUpdater.Update);
              uint64_t v206 = (uint64_t *)(v205 + *(int *)(v232 + 32));
              uint64_t v207 = *v206;
              unint64_t v208 = v206[1];
              swift_bridgeObjectRetain();
              sub_1ACB19D1C(v205, type metadata accessor for StoreFeedUpdater.Update);
              uint64_t v209 = (uint64_t)v240;
              *(void *)&v242[0] = sub_1ACA3189C(v207, v208, (uint64_t *)&v243);
              sub_1ACE76FF8();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1AC9D5000, v201, v202, "Job %{private,mask.hash}s: Episode Processing fully completed", (uint8_t *)v203, 0x16u);
              swift_arrayDestroy();
              uint64_t v210 = v204;
              id v113 = v234;
              MEMORY[0x1AD11B340](v210, -1, -1);
              MEMORY[0x1AD11B340](v203, -1, -1);
            }
            else
            {

              swift_release();
              uint64_t v209 = (uint64_t)v240;
            }
            LOBYTE(v243) = 13;
            FeedUpdateType.endInterval(for:)();
            *(void *)&long long v243 = v216;
            *((void *)&v243 + 1) = v221;
            sub_1ACB196A0((uint64_t)&v243);
            sub_1ACB18D38(&v243, v242);
            sub_1ACB0AEA4(v242);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_release();

            uint64_t v164 = v209;
LABEL_82:
            sub_1ACA50E78(v164, &qword_1EB76A978);
            return;
          }
          __break(1u);
          goto LABEL_85;
        }
      }
      else
      {
        sub_1ACB0F59C(v227, v229, v230, v231, (uint64_t)v236, v128);
      }
      swift_bridgeObjectRelease();
      LOBYTE(v243) = 16;
      uint64_t v239 = FeedUpdateType.beginInterval()();
      objc_msgSend(v113, sel_setFeedUpdateNeedsRetry_, 1);
      objc_msgSend(v114, sel_unsafeIngestPage);
      objc_msgSend(v226, sel_saveInCurrentBlock);
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      LODWORD(v235) = v128;
      __swift_project_value_buffer(v238, (uint64_t)qword_1EB76D4E0);
      swift_retain();
      uint64_t v149 = sub_1ACE75498();
      os_log_type_t v150 = sub_1ACE76C08();
      if (os_log_type_enabled(v149, v150))
      {
        uint64_t v151 = swift_slowAlloc();
        uint64_t v152 = swift_slowAlloc();
        *(void *)&long long v243 = v152;
        *(_DWORD *)uint64_t v151 = 141558275;
        *(void *)&v242[0] = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v151 + 12) = 2081;
        uint64_t v153 = v233;
        sub_1ACB18E7C(v237, v233, type metadata accessor for StoreFeedUpdater.Update);
        int v154 = (uint64_t *)(v153 + *(int *)(v232 + 32));
        uint64_t v155 = *v154;
        unint64_t v156 = v154[1];
        swift_bridgeObjectRetain();
        sub_1ACB19D1C(v153, type metadata accessor for StoreFeedUpdater.Update);
        *(void *)&v242[0] = sub_1ACA3189C(v155, v156, (uint64_t *)&v243);
        sub_1ACE76FF8();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v149, v150, "Job %{private,mask.hash}s: Episode Processing complete, moving to next page", (uint8_t *)v151, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v152, -1, -1);
        id v157 = v234;
        MEMORY[0x1AD11B340](v151, -1, -1);
      }
      else
      {

        swift_release();
        id v157 = v113;
      }
      LOBYTE(v243) = 16;
      FeedUpdateType.endInterval(for:)();
      unsigned __int8 v158 = v235;
      uint64_t v159 = v227;
      uint64_t v161 = v229;
      uint64_t v160 = v230;
      *(void *)&long long v243 = v227;
      *((void *)&v243 + 1) = v229;
      uint64_t v162 = v231;
      uint64_t v244 = v230;
      uint64_t v245 = v231;
      uint64_t v163 = v236;
      uint64_t v246 = v236;
      char v247 = v235 | 0x40;
      sub_1ACB19980((uint64_t)&v243);
      sub_1ACB18D38(&v243, v242);
      sub_1ACB0AEA4(v242);
      swift_unknownObjectRelease();
      swift_release();

      sub_1ACB0F9D0(v159, v161, v160, v162, (uint64_t)v163, v158);
      uint64_t v164 = (uint64_t)v240;
      goto LABEL_82;
    }
  }
  id v67 = objc_msgSend(v234, sel_bootstrapGeneration);
  if (!v67)
  {
    uint64_t v48 = v235;
    unint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v235 + 56);
    uint64_t v71 = v239;
    v72(v30, 1, 1, v239);
    goto LABEL_18;
  }
  os_signpost_id_t v68 = v67;
  sub_1ACE750F8();

  uint64_t v69 = v235;
  unint64_t v70 = *(void (**)(char *, char *, uint64_t))(v235 + 32);
  uint64_t v71 = v239;
  v70(v30, v13, v239);
  unint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
  v72(v30, 0, 1, v71);
  unint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  if (v73(v30, 1, v71) == 1)
  {
    uint64_t v39 = v237;
    uint64_t v48 = v69;
LABEL_18:
    sub_1ACA50E78((uint64_t)v30, &qword_1EB76A978);
    v72(v240, 1, 1, v71);
    uint64_t v53 = v241;
    uint64_t v76 = v238;
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v76, (uint64_t)qword_1EB76D4E0);
    swift_retain();
    char v77 = sub_1ACE75498();
    os_log_type_t v78 = sub_1ACE76C08();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(void *)&long long v243 = v80;
      *(_DWORD *)uint64_t v79 = 141558275;
      *(void *)&v242[0] = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v79 + 12) = 2081;
      uint64_t v81 = v233;
      sub_1ACB18E7C(v39, v233, type metadata accessor for StoreFeedUpdater.Update);
      os_log_type_t v82 = (uint64_t *)(v81 + *(int *)(v232 + 32));
      uint64_t v83 = *v82;
      unint64_t v84 = v82[1];
      swift_bridgeObjectRetain();
      uint64_t v85 = v81;
      uint64_t v48 = v235;
      sub_1ACB19D1C(v85, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v86 = v83;
      uint64_t v53 = v241;
      *(void *)&v242[0] = sub_1ACA3189C(v86, v84, (uint64_t *)&v243);
      sub_1ACE76FF8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v77, v78, "Job %{private,mask.hash}s: Processing new delta update", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v80, -1, -1);
      MEMORY[0x1AD11B340](v79, -1, -1);
    }
    else
    {

      swift_release();
    }
    goto LABEL_31;
  }
  unint64_t v222 = (char *)v73;
  uint64_t v87 = v220;
  v70(v220, v30, v71);
  uint64_t v88 = (uint64_t)v240;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v240, v87, v71);
  v72((char *)v88, 0, 1, v71);
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v89 = v238;
  uint64_t v90 = __swift_project_value_buffer(v238, (uint64_t)qword_1EB76D4E0);
  unint64_t v91 = v225;
  os_log_t v92 = v219;
  v225[2]((char *)v219, v90, v89);
  uint64_t v93 = v218;
  sub_1ACA3AAD4(v88, v218, &qword_1EB76A978);
  uint64_t v94 = v241;
  swift_retain_n();
  uint64_t v95 = sub_1ACE75498();
  int v214 = sub_1ACE76C08();
  BOOL v96 = os_log_type_enabled(v95, (os_log_type_t)v214);
  uint64_t v97 = v237;
  if (!v96)
  {

    sub_1ACA50E78(v93, &qword_1EB76A978);
    swift_release_n();
    ((void (*)(os_log_t, uint64_t))v91[1])(v92, v89);
    uint64_t v48 = v235;
    (*(void (**)(char *, uint64_t))(v235 + 8))(v87, v239);
    uint64_t v53 = v94;
    goto LABEL_31;
  }
  os_log_t v213 = v95;
  uint64_t v98 = swift_slowAlloc();
  uint64_t v212 = swift_slowAlloc();
  *(void *)&long long v243 = v212;
  *(_DWORD *)uint64_t v98 = 141558531;
  *(void *)&v242[0] = 1752392040;
  sub_1ACE76FF8();
  *(_WORD *)(v98 + 12) = 2081;
  uint64_t v99 = v233;
  sub_1ACB18E7C(v97, v233, type metadata accessor for StoreFeedUpdater.Update);
  int v100 = (uint64_t *)(v99 + *(int *)(v232 + 32));
  uint64_t v102 = *v100;
  unint64_t v101 = v100[1];
  swift_bridgeObjectRetain();
  sub_1ACB19D1C(v99, type metadata accessor for StoreFeedUpdater.Update);
  *(void *)&v242[0] = sub_1ACA3189C(v102, v101, (uint64_t *)&v243);
  uint64_t v211 = (char *)v242 + 8;
  sub_1ACE76FF8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v98 + 22) = 2082;
  uint64_t v103 = v217;
  sub_1ACA3AAD4(v93, v217, &qword_1EB76A978);
  uint64_t v104 = v239;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v222)(v103, 1, v239) != 1)
  {
    sub_1ACB19A40(&qword_1EB76A970, MEMORY[0x1E4F27990]);
    uint64_t v105 = sub_1ACE777C8();
    unint64_t v107 = v106;
    uint64_t v48 = v235;
    uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v235 + 8);
    v108(v103, v104);
    *(void *)&v242[0] = sub_1ACA3189C(v105, v107, (uint64_t *)&v243);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACA50E78(v218, &qword_1EB76A978);
    os_log_t v109 = v213;
    _os_log_impl(&dword_1AC9D5000, v213, (os_log_type_t)v214, "Job %{private,mask.hash}s: Processing: Continuing bootstrap with token %{public}s", (uint8_t *)v98, 0x20u);
    uint64_t v110 = v212;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v110, -1, -1);
    MEMORY[0x1AD11B340](v98, -1, -1);

    ((void (*)(os_log_t, uint64_t))v225[1])(v219, v238);
    v108((uint64_t)v220, v104);
LABEL_28:
    uint64_t v53 = v241;
    goto LABEL_31;
  }
LABEL_86:
  __break(1u);
}

uint64_t sub_1ACB15FD8(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  id v170 = a4;
  uint64_t v168 = a2;
  id v155 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A978);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v166 = (uint64_t)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v163 = (uint64_t)&v130 - v10;
  uint64_t v140 = sub_1ACE750A8();
  uint64_t v153 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  os_log_type_t v139 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v138);
  uint64_t v137 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = 14;
  uint64_t updated = FeedUpdateType.beginInterval()();
  uint64_t v13 = 0;
  uint64_t v14 = sub_1ACB0A560(a3);
  sub_1ACE761B8();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v16 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  uint64_t v18 = (void *)sub_1ACB1751C(v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setPredicate_, v18);

  uint64_t v157 = v5;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v131 = v17;
  unint64_t v19 = sub_1ACE76EE8();
  unint64_t v33 = v19;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v164 = a3;
  if (v20)
  {
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1ACC83120(0, v20 & ~(v20 >> 63), 0);
    if (v20 < 0)
    {
      __break(1u);
      goto LABEL_77;
    }
    *(double *)&uint64_t v171 = 0.0;
    uint64_t v21 = 0;
    uint64_t v22 = aBlock[0];
    unint64_t v172 = v33 & 0xC000000000000001;
    unint64_t v23 = v33;
    uint64_t v24 = v20;
    do
    {
      if (*(double *)&v172 == 0.0) {
        id v25 = *(id *)(v33 + 8 * v21 + 32);
      }
      else {
        id v25 = (id)MEMORY[0x1AD119490](v21, v33);
      }
      id v26 = v25;
      double v175 = COERCE_DOUBLE(objc_msgSend(v25, sel_storeTrackId));
      uint64_t v27 = sub_1ACE777C8();
      uint64_t v29 = v28;
      aBlock[0] = v22;
      unint64_t v31 = *(void *)(v22 + 16);
      unint64_t v30 = *(void *)(v22 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1ACC83120(v30 > 1, v31 + 1, 1);
        uint64_t v22 = aBlock[0];
      }
      ++v21;
      *(void *)(v22 + 16) = v31 + 1;
      uint64_t v32 = (void *)(v22 + 24 * v31);
      v32[4] = v27;
      v32[5] = v29;
      v32[6] = v26;
      unint64_t v33 = v23;
    }
    while (v24 != v21);
    swift_bridgeObjectRelease();
    a3 = v164;
    uint64_t v13 = v171;
    if (*(void *)(v22 + 16)) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(void *)(MEMORY[0x1E4FBC860] + 16))
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EC10);
      uint64_t v34 = sub_1ACE77558();
      goto LABEL_18;
    }
  }
  uint64_t v34 = MEMORY[0x1E4FBC868];
LABEL_18:
  aBlock[0] = v34;
  uint64_t v35 = swift_bridgeObjectRetain();
  sub_1ACB196BC(v35, 1, aBlock);
  if (!v13)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v36 = aBlock[0];
    uint64_t v37 = a3 >> 62;
    if (a3 >> 62) {
      goto LABEL_71;
    }
    uint64_t v38 = *(uint64_t *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
    double v39 = *(double *)(v36 + 16);
    uint64_t v40 = v38 - *(void *)&v39;
    if (__OFSUB__(v38, *(void *)&v39))
    {
      __break(1u);
    }
    else
    {
      uint64_t v41 = v157 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData;
      uint64_t v42 = *(void *)(v157 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 16);
      BOOL v43 = __OFADD__(v42, v40);
      uint64_t v44 = v42 + v40;
      if (!v43)
      {
        *(void *)(v41 + 16) = v44;
        uint64_t v45 = *(void *)(v41 + 24);
        BOOL v43 = __OFADD__(v45, *(void *)&v39);
        uint64_t v46 = v45 + *(void *)&v39;
        if (!v43)
        {
          uint64_t v171 = v38;
          unint64_t v172 = v38 - *(void *)&v39;
          *(void *)(v41 + 24) = v46;
          if (qword_1EB76D4F8 == -1)
          {
LABEL_25:
            uint64_t v154 = sub_1ACE754C8();
            __swift_project_value_buffer(v154, (uint64_t)qword_1EB76D4E0);
            uint64_t v47 = v157;
            swift_retain();
            uint64_t v48 = sub_1ACE75498();
            os_log_type_t v49 = sub_1ACE76C08();
            BOOL v50 = os_log_type_enabled(v48, v49);
            uint64_t v51 = MEMORY[0x1E4FBC840];
            uint64_t v162 = v36;
            if (v50)
            {
              uint64_t v52 = swift_slowAlloc();
              unint64_t v169 = v37;
              uint64_t v53 = v52;
              uint64_t v167 = swift_slowAlloc();
              aBlock[0] = v167;
              *(_DWORD *)uint64_t v53 = 141559043;
              *(void *)&double v175 = 1752392040;
              sub_1ACE76FF8();
              *(_WORD *)(v53 + 12) = 2081;
              uint64_t v54 = v137;
              sub_1ACB18E7C(v47 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v137, type metadata accessor for StoreFeedUpdater.Update);
              uint64_t v55 = (uint64_t *)(v54 + *(int *)(v138 + 32));
              uint64_t v56 = *v55;
              unint64_t v57 = v55[1];
              swift_bridgeObjectRetain();
              sub_1ACB19D1C(v54, type metadata accessor for StoreFeedUpdater.Update);
              uint64_t v58 = v56;
              uint64_t v51 = MEMORY[0x1E4FBC840];
              double v175 = COERCE_DOUBLE(sub_1ACA3189C(v58, v57, aBlock));
              sub_1ACE76FF8();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v53 + 22) = 2048;
              double v175 = *(double *)&v171;
              sub_1ACE76FF8();
              *(_WORD *)(v53 + 32) = 2048;
              double v175 = v39;
              sub_1ACE76FF8();
              *(_WORD *)(v53 + 42) = 2048;
              a3 = v164;
              double v175 = *(double *)&v172;
              uint64_t v36 = v162;
              sub_1ACE76FF8();
              _os_log_impl(&dword_1AC9D5000, v48, v49, "Job %{private,mask.hash}s: Ingesting %ld episodes. %ld updates and %ld inserts.", (uint8_t *)v53, 0x34u);
              uint64_t v59 = v167;
              swift_arrayDestroy();
              MEMORY[0x1AD11B340](v59, -1, -1);
              uint64_t v60 = v53;
              uint64_t v37 = v169;
              MEMORY[0x1AD11B340](v60, -1, -1);
            }
            else
            {

              swift_release();
            }
            id v61 = v155;
            if ((objc_msgSend(v155, sel_importing) & 1) != 0
              || (objc_msgSend(v61, sel_isHiddenOrImplicitlyFollowed) & 1) != 0)
            {
              LODWORD(v167) = 0;
            }
            else
            {
              LODWORD(v167) = objc_msgSend(v61, sel_isTransitioningFromImplicit) ^ 1;
            }
            uint64_t v62 = v139;
            sub_1ACE75088();
            sub_1ACE74FB8();
            double v64 = v63;
            os_log_t v65 = *(void (**)(char *, uint64_t))(v153 + 8);
            v153 += 8;
            uint64_t v136 = v65;
            v65(v62, v140);
            if (v37)
            {
              swift_bridgeObjectRetain();
              uint64_t v66 = sub_1ACE77508();
              if (!v66)
              {
LABEL_69:

                swift_bridgeObjectRelease();
                swift_release();
                LOBYTE(aBlock[0]) = 14;
                FeedUpdateType.endInterval(for:)();
                return swift_release();
              }
            }
            else
            {
              uint64_t v66 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v66) {
                goto LABEL_69;
              }
            }
            uint64_t v156 = v157 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
            unint64_t v169 = a3 & 0xC000000000000001;
            uint64_t v152 = &v176;
            uint64_t v135 = (char *)&v175 + 4;
            uint64_t v151 = @"com.apple.podcasts.storeEpisodeInsert";
            os_log_type_t v150 = v174;
            uint64_t v68 = 4;
            *(void *)&long long v67 = 141560835;
            long long v134 = v67;
            uint64_t v133 = v51 + 8;
            long long v149 = xmmword_1ACE8A540;
            unint64_t v148 = 0x80000001ACEC8B60;
            unint64_t v147 = 0x80000001ACEC8B80;
            uint64_t v165 = v66;
            while (1)
            {
              if (v169) {
                uint64_t v71 = (char *)MEMORY[0x1AD119490](v68 - 4, a3);
              }
              else {
                uint64_t v71 = (char *)*(id *)(a3 + 8 * v68);
              }
              unint64_t v70 = v71;
              uint64_t v37 = v68 - 3;
              if (__OFADD__(v68 - 4, 1))
              {
                __break(1u);
LABEL_71:
                swift_bridgeObjectRetain();
                *(double *)&uint64_t v38 = COERCE_DOUBLE(sub_1ACE77508());
                swift_bridgeObjectRelease();
                goto LABEL_21;
              }
              unint64_t v72 = (uint64_t *)&v71[OBJC_IVAR___MTServerPodcastEpisode_id];
              if (*(void *)(v36 + 16))
              {
                uint64_t v74 = *v72;
                uint64_t v73 = v72[1];
                swift_bridgeObjectRetain();
                uint64_t v75 = sub_1ACA657FC(v74, v73);
                if (v76)
                {
                  uint64_t v171 = v68 - 3;
                  unint64_t v172 = v68;
                  id v77 = *(id *)(*(void *)(v36 + 56) + 8 * v75);
                  swift_bridgeObjectRelease();

                  uint64_t v78 = v163;
                  sub_1ACA3AAD4(v168, v163, &qword_1EB76A978);
                  uint64_t v79 = sub_1ACE75118();
                  uint64_t v80 = *(void *)(v79 - 8);
                  uint64_t v81 = 0;
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) != 1)
                  {
                    uint64_t v82 = v163;
                    uint64_t v81 = sub_1ACE750D8();
                    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v79);
                  }
                  objc_msgSend(v77, sel_setBootstrapGeneration_, v81);
                  goto LABEL_38;
                }
                swift_bridgeObjectRelease();
              }
              id v69 = objc_msgSend(v170, sel_unsafeIngestNewEpisode_, v70);
              if (!v69)
              {
                if (v167) {
                  goto LABEL_41;
                }
                goto LABEL_40;
              }
              uint64_t v171 = v68 - 3;
              unint64_t v172 = v68;
              uint64_t v83 = v166;
              sub_1ACA3AAD4(v168, v166, &qword_1EB76A978);
              uint64_t v84 = sub_1ACE75118();
              uint64_t v85 = *(void *)(v84 - 8);
              uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
              int v87 = v86(v83, 1, v84);
              id v88 = v69;
              uint64_t v89 = 0;
              if (v87 != 1)
              {
                uint64_t v90 = v166;
                uint64_t v89 = (void *)sub_1ACE750D8();
                (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v90, v84);
              }
              objc_msgSend(v88, sel_setBootstrapGeneration_, v89);

              uint64_t v66 = v165;
              if (!v167)
              {
                a3 = v164;
                uint64_t v36 = v162;
                goto LABEL_39;
              }
              id v91 = v88;
              objc_msgSend(v91, sel_pubDate);
              double v93 = v92;
              id v159 = v91;
              unsigned int v158 = objc_msgSend(v91, sel_backCatalog);
              int v94 = v86(v168, 1, v84);
              double v95 = *(double *)(v156 + *(int *)(type metadata accessor for FeedUpdateRequest() + 48));
              unsigned int v161 = objc_msgSend(v155, sel_subscribed);
              if (qword_1E99EFF18 != -1) {
                swift_once();
              }
              __swift_project_value_buffer(v154, (uint64_t)qword_1E99F2C58);
              swift_retain();
              id v96 = v70;
              uint64_t v97 = sub_1ACE75498();
              int v98 = sub_1ACE76C08();
              BOOL v99 = os_log_type_enabled(v97, (os_log_type_t)v98);
              id v160 = v96;
              if (v99)
              {
                int v143 = v98;
                os_log_t v144 = v97;
                int v146 = v94;
                double v145 = v95;
                uint64_t v100 = swift_slowAlloc();
                uint64_t v101 = swift_slowAlloc();
                aBlock[0] = v101;
                *(_DWORD *)uint64_t v100 = v134;
                *(void *)&double v175 = 1752392040;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 12) = 2081;
                uint64_t v102 = v137;
                sub_1ACB18E7C(v156, v137, type metadata accessor for StoreFeedUpdater.Update);
                uint64_t v103 = (uint64_t *)(v102 + *(int *)(v138 + 32));
                uint64_t v104 = *v103;
                unint64_t v105 = v103[1];
                swift_bridgeObjectRetain();
                sub_1ACB19D1C(v102, type metadata accessor for StoreFeedUpdater.Update);
                double v175 = COERCE_DOUBLE(sub_1ACA3189C(v104, v105, aBlock));
                sub_1ACE76FF8();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v100 + 22) = 2080;
                uint64_t v106 = *v72;
                unint64_t v107 = v72[1];
                swift_bridgeObjectRetain();
                double v175 = COERCE_DOUBLE(sub_1ACA3189C(v106, v107, aBlock));
                sub_1ACE76FF8();

                swift_bridgeObjectRelease();
                *(_WORD *)(v100 + 32) = 2080;
                if (qword_1E99EFE80 != -1) {
                  swift_once();
                }
                id v108 = objc_msgSend((id)qword_1E99F2068, sel_stringFromTimeInterval_, v64 - v93);
                uint64_t v142 = v101;
                if (v108)
                {
                  os_log_t v109 = v108;
                  uint64_t v110 = sub_1ACE761B8();
                  unint64_t v112 = v111;
                }
                else
                {
                  unint64_t v112 = 0xEF474E4952545320;
                  uint64_t v110 = 0x41544C4544204F4ELL;
                }
                BOOL v141 = v146 != 1;
                double v175 = COERCE_DOUBLE(sub_1ACA3189C(v110, v112, aBlock));
                sub_1ACE76FF8();
                swift_bridgeObjectRelease();
                *(_WORD *)(v100 + 42) = 2048;
                double v175 = v64 - v93;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 52) = 2048;
                double v175 = v64;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 62) = 2080;
                id v113 = v139;
                sub_1ACE74FA8();
                sub_1ACB19A40((unint64_t *)&qword_1EB76A950, MEMORY[0x1E4F27928]);
                uint64_t v114 = v140;
                uint64_t v115 = sub_1ACE777C8();
                unint64_t v117 = v116;
                v136(v113, v114);
                double v175 = COERCE_DOUBLE(sub_1ACA3189C(v115, v117, aBlock));
                sub_1ACE76FF8();
                swift_bridgeObjectRelease();
                *(_WORD *)(v100 + 72) = 2048;
                double v175 = v93;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 82) = 1024;
                LODWORD(v175) = v161;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 88) = 1024;
                LODWORD(v175) = v158;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 94) = 1024;
                LODWORD(v175) = v141;
                sub_1ACE76FF8();
                *(_WORD *)(v100 + 10sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2048;
                double v175 = v145;
                sub_1ACE76FF8();
                os_log_t v118 = v144;
                _os_log_impl(&dword_1AC9D5000, v144, (os_log_type_t)v143, "Job %{private,mask.hash}s: Metrics event for %s - insert delta %s - %f - current time %f - pub date %s - %f - is show followed %{BOOL}d - back catalog %{BOOL}d - bootstrap update %{BOOL}d - feed update source %ld", (uint8_t *)v100, 0x6Eu);
                uint64_t v119 = v142;
                swift_arrayDestroy();
                MEMORY[0x1AD11B340](v119, -1, -1);
                MEMORY[0x1AD11B340](v100, -1, -1);

                uint64_t v66 = v165;
                a3 = v164;
              }
              else
              {

                swift_release();
                a3 = v164;
              }
              id v120 = objc_msgSend(objc_allocWithZone((Class)PFCoreAnalyticsChannel), sel_init);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E4A0);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = v149;
              unint64_t v122 = v148;
              *(void *)(inited + 32) = 0xD000000000000012;
              *(void *)(inited + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v122;
              uint64_t v123 = v151;
              *(void *)(inited + 48) = sub_1ACE76908();
              strcpy((char *)(inited + 56), "isBackCatalog");
              *(_WORD *)(inited + 7sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = -4864;
              *(void *)(inited + 72) = sub_1ACE766C8();
              *(void *)(inited + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0x7473746F6F427369;
              *(void *)(inited + 88) = 0xEB00000000706172;
              *(void *)(inited + 96) = sub_1ACE766C8();
              *(void *)(inited + 104) = 0xD000000000000010;
              *(void *)(inited + 112) = v147;
              *(void *)(inited + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE76A58();
              strcpy((char *)(inited + 128), "isShowFollowed");
              *(unsigned char *)(inited + 143) = -18;
              *(void *)(inited + 144) = sub_1ACE766C8();
              unint64_t v124 = sub_1ACA36DD8(inited);
              id v125 = objc_allocWithZone((Class)type metadata accessor for AnalyticsEvent());
              uint64_t v126 = swift_allocObject();
              *(void *)(v126 + 16) = v124;
              v174[2] = sub_1ACB19A38;
              v174[3] = v126;
              aBlock[0] = MEMORY[0x1E4F143A8];
              aBlock[1] = 1107296256;
              v174[0] = sub_1ACDD55C4;
              v174[1] = &block_descriptor_61_1;
              uint64_t v127 = _Block_copy(aBlock);
              swift_release();
              id v128 = objc_msgSend(v125, sel_initWithName_generator_, v123, v127);

              _Block_release(v127);
              objc_msgSend(v120, sel_sendEvent_, v128);

              uint64_t v81 = (uint64_t)v159;
              unint64_t v70 = v159;
              uint64_t v36 = v162;
              id v77 = v160;
LABEL_38:
              id v69 = v70;

              unint64_t v70 = (void *)v81;
LABEL_39:
              uint64_t v68 = v172;
              uint64_t v37 = v171;
LABEL_40:

              unint64_t v70 = v69;
LABEL_41:

              ++v68;
              if (v37 == v66) {
                goto LABEL_69;
              }
            }
          }
LABEL_75:
          swift_once();
          goto LABEL_25;
        }
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_77:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ACB1751C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = a1 + 32;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    long long v6 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v3 + 16 * v5);
      uint64_t v8 = *v7;
      unint64_t v9 = v7[1];
      uint64_t v10 = HIBYTE(v9) & 0xF;
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
      if ((v9 & 0x2000000000000000) != 0) {
        uint64_t v12 = HIBYTE(v9) & 0xF;
      }
      else {
        uint64_t v12 = v8 & 0xFFFFFFFFFFFFLL;
      }
      if (v12)
      {
        if ((v9 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_1ACCCEEB0(v8, v9, 10);
          char v31 = v30;
          uint64_t result = swift_bridgeObjectRelease();
          if ((v31 & 1) == 0) {
            goto LABEL_48;
          }
        }
        else if ((v9 & 0x2000000000000000) != 0)
        {
          v39[0] = v8;
          v39[1] = v9 & 0xFFFFFFFFFFFFFFLL;
          if (v8 == 43)
          {
            if (!v10) {
              goto LABEL_70;
            }
            if (v10 == 1 || (BYTE1(v8) - 48) > 9u) {
              goto LABEL_4;
            }
            uint64_t v15 = (BYTE1(v8) - 48);
            if (v10 == 2) {
              goto LABEL_48;
            }
            if ((BYTE2(v8) - 48) <= 9u)
            {
              uint64_t v15 = 10 * (BYTE1(v8) - 48) + (BYTE2(v8) - 48);
              uint64_t v16 = v10 - 3;
              if (v10 != 3)
              {
                id v17 = (unsigned __int8 *)v39 + 3;
                while (1)
                {
                  unsigned int v18 = *v17 - 48;
                  if (v18 > 9) {
                    goto LABEL_4;
                  }
                  uint64_t v19 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
                    goto LABEL_4;
                  }
                  uint64_t v15 = v19 + v18;
                  if (__OFADD__(v19, v18)) {
                    goto LABEL_4;
                  }
                  ++v17;
                  if (!--v16) {
                    goto LABEL_48;
                  }
                }
              }
              goto LABEL_48;
            }
          }
          else if (v8 == 45)
          {
            if (!v10)
            {
              __break(1u);
LABEL_70:
              __break(1u);
              return result;
            }
            if (v10 == 1 || (BYTE1(v8) - 48) > 9u) {
              goto LABEL_4;
            }
            if (v10 == 2)
            {
              uint64_t v15 = -(uint64_t)(BYTE1(v8) - 48);
              goto LABEL_48;
            }
            if ((BYTE2(v8) - 48) <= 9u)
            {
              uint64_t v15 = -10 * (BYTE1(v8) - 48) - (BYTE2(v8) - 48);
              uint64_t v24 = v10 - 3;
              if (v10 != 3)
              {
                uint64_t v27 = (unsigned __int8 *)v39 + 3;
                while (1)
                {
                  unsigned int v28 = *v27 - 48;
                  if (v28 > 9) {
                    goto LABEL_4;
                  }
                  uint64_t v29 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
                    goto LABEL_4;
                  }
                  uint64_t v15 = v29 - v28;
                  if (__OFSUB__(v29, v28)) {
                    goto LABEL_4;
                  }
                  ++v27;
                  if (!--v24) {
                    goto LABEL_48;
                  }
                }
              }
              goto LABEL_48;
            }
          }
          else if (v10 && (v8 - 48) <= 9u)
          {
            uint64_t v15 = (v8 - 48);
            if (v10 == 1) {
              goto LABEL_48;
            }
            if ((BYTE1(v8) - 48) <= 9u)
            {
              uint64_t v15 = 10 * (v8 - 48) + (BYTE1(v8) - 48);
              uint64_t v20 = v10 - 2;
              if (v10 != 2)
              {
                uint64_t v21 = (unsigned __int8 *)v39 + 2;
                while (1)
                {
                  unsigned int v22 = *v21 - 48;
                  if (v22 > 9) {
                    goto LABEL_4;
                  }
                  uint64_t v23 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
                    goto LABEL_4;
                  }
                  uint64_t v15 = v23 + v22;
                  if (__OFADD__(v23, v22)) {
                    goto LABEL_4;
                  }
                  ++v21;
                  if (!--v20) {
                    goto LABEL_48;
                  }
                }
              }
              goto LABEL_48;
            }
          }
        }
        else
        {
          if ((v8 & 0x1000000000000000) != 0) {
            uint64_t v13 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v13 = (unsigned __int8 *)sub_1ACE77388();
          }
          uint64_t result = (uint64_t)sub_1ACCCEE80(v13, v11, 10);
          if ((v14 & 1) == 0)
          {
            uint64_t v15 = result;
LABEL_48:
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1ACA42BF4(0, v6[2] + 1, 1, v6);
              long long v6 = (void *)result;
            }
            unint64_t v26 = v6[2];
            unint64_t v25 = v6[3];
            if (v26 >= v25 >> 1)
            {
              uint64_t result = (uint64_t)sub_1ACA42BF4((void *)(v25 > 1), v26 + 1, 1, v6);
              long long v6 = (void *)result;
            }
            id v6[2] = v26 + 1;
            v6[v26 + 4] = v15;
          }
        }
      }
LABEL_4:
      if (++v5 == v1)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = MEMORY[0x1E4FBC860];
        uint64_t v32 = v6[2];
        if (!v32) {
          goto LABEL_67;
        }
LABEL_63:
        v39[0] = v2;
        sub_1ACE773D8();
        uint64_t v33 = 0;
        do
        {
          uint64_t v34 = v33 + 1;
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v6[v33 + 4]);
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          uint64_t v33 = v34;
        }
        while (v32 != v34);
        unint64_t v35 = v39[0];
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
    }
  }
  long long v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v32 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v32) {
    goto LABEL_63;
  }
LABEL_67:
  swift_bridgeObjectRelease();
  unint64_t v35 = MEMORY[0x1E4FBC860];
LABEL_68:
  uint64_t v36 = self;
  sub_1ACDF7264(v35);
  swift_bridgeObjectRelease();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  sub_1ACB19998();
  uint64_t v37 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v38 = objc_msgSend(v36, sel_predicateForEpisodeStoreTrackIds_, v37);

  return (uint64_t)v38;
}

void sub_1ACB17A0C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v40 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v43) = 15;
  uint64_t updated = FeedUpdateType.beginInterval()();
  sub_1ACE761B8();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v9 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v11 = sub_1ACE76EE8();
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 32);
  BOOL v14 = __OFADD__(v13, v12);
  uint64_t v15 = v13 + v12;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData + 32) = v15;
    if (qword_1EB76D4F8 == -1) {
      goto LABEL_5;
    }
  }
  swift_once();
LABEL_5:
  uint64_t v16 = sub_1ACE754C8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D4E0);
  swift_bridgeObjectRetain();
  swift_retain();
  id v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76C08();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = v21;
    *(_DWORD *)uint64_t v20 = 141558531;
    uint64_t v42 = 1752392040;
    uint64_t v43 = v21;
    int v37 = v19;
    sub_1ACE76FF8();
    *(_WORD *)(v20 + 12) = 2081;
    uint64_t v35 = v20 + 14;
    uint64_t v36 = v12;
    uint64_t v22 = v40;
    sub_1ACB18E7C(v3 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, v40, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v23 = (uint64_t *)(v22 + *(int *)(v6 + 32));
    unint64_t v39 = v11 >> 62;
    id v24 = v10;
    uint64_t v26 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    sub_1ACB19D1C(v22, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v27 = v26;
    id v10 = v24;
    uint64_t v42 = sub_1ACA3189C(v27, v25, &v43);
    sub_1ACE76FF8();
    unint64_t v28 = v39;
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v42 = v36;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v17, (os_log_type_t)v37, "Job %{private,mask.hash}s: Feed deleting %ld episodes", (uint8_t *)v20, 0x20u);
    uint64_t v29 = v38;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v29, -1, -1);
    MEMORY[0x1AD11B340](v20, -1, -1);

    uint64_t v30 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v28) {
      goto LABEL_7;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v30 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v11 >> 62)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (!v31) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
LABEL_17:

    swift_bridgeObjectRelease();
    LOBYTE(v43) = 15;
    FeedUpdateType.endInterval(for:)();
    swift_release();
    return;
  }
LABEL_11:
  if (v31 >= 1)
  {
    for (uint64_t i = 0; i != v31; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x1AD119490](i, v11);
      }
      else {
        id v33 = *(id *)(v11 + 8 * i + 32);
      }
      uint64_t v34 = v33;
      objc_msgSend(a2, sel_unsafeDeleteFeedDeletedEpisode_, v33);
    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1ACB17ED4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  objc_msgSend(v0, sel_setAllowedUnits_, 240);
  objc_msgSend(v0, sel_setUnitsStyle_, 1);

  qword_1E99F2068 = (uint64_t)v0;
}

void sub_1ACB17F40(uint64_t a1, uint64_t a2, void *a3)
{
  int v87 = a3;
  uint64_t v4 = type metadata accessor for StoreFeedUpdater.Update(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v91 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v88 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock) = 18;
  FeedUpdateType.endInterval(for:)();
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
  uint64_t v14 = a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v16 = *(void *)(v14 + *(int *)(updated + 28));
  id v83 = v13;
  id v17 = objc_msgSend(v13, sel_podcastForStoreId_, v16);
  uint64_t v89 = v9;
  uint64_t v90 = v7;
  uint64_t v82 = v6;
  uint64_t v86 = v14;
  if (v17)
  {
    uint64_t v79 = v4;
    uint64_t v84 = v11;
    uint64_t v85 = v10;
    os_log_type_t v18 = v17;
    uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 24);
    uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider + 32);
    __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider), v20);
    uint64_t v21 = *(void *)(v14 + *(int *)(updated + 48));
    uint64_t v81 = a2;
    uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_updaterJobUUID);
    uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_updaterJobUUID + 8);
    id v24 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
    swift_bridgeObjectRetain();
    unint64_t v25 = (void *)v24(v18, v21, v22, v23, v20, v19);
    swift_bridgeObjectRelease();
    uint64_t v80 = v25;
    objc_msgSend(v25, sel_unsafeFinalizeIngestion);
    objc_msgSend(v18, sel_setFeedUpdateNeedsRetry_, 1);
    objc_msgSend(v83, sel_saveInCurrentBlock);
    id v83 = v18;
    id v26 = objc_msgSend(v18, sel_uuid);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = sub_1ACE761B8();
      uint64_t v30 = v29;
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v30 = 0;
    }
    uint64_t v53 = v89;
    uint64_t v52 = v90;
    uint64_t v54 = v85;
    uint64_t v55 = v81;
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = v55;
    v56[3] = v28;
    unint64_t v57 = v87;
    v56[4] = v30;
    v56[5] = v57;
    uint64_t v97 = sub_1ACB19BF8;
    int v98 = v56;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v94 = 1107296256;
    double v95 = sub_1ACA6DA9C;
    id v96 = &block_descriptor_79;
    uint64_t v58 = _Block_copy(&aBlock);
    swift_retain();
    id v59 = v57;
    uint64_t v60 = v88;
    sub_1ACE75E08();
    uint64_t v92 = MEMORY[0x1E4FBC860];
    sub_1ACB19A40((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v60, v53, v58);
    _Block_release(v58);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v52);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v60, v54);
    swift_release();
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1ACE754C8();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EB76D4E0);
    swift_retain();
    uint64_t v62 = sub_1ACE75498();
    os_log_type_t v63 = sub_1ACE76C08();
    BOOL v64 = os_log_type_enabled(v62, v63);
    uint64_t v65 = v86;
    if (v64)
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 141558275;
      uint64_t v92 = 1752392040;
      uint64_t aBlock = v67;
      sub_1ACE76FF8();
      *(_WORD *)(v66 + 12) = 2081;
      uint64_t v68 = v65;
      uint64_t v69 = (uint64_t)v82;
      sub_1ACB18E7C(v68, (uint64_t)v82, type metadata accessor for StoreFeedUpdater.Update);
      unint64_t v70 = (uint64_t *)(v69 + *(int *)(v79 + 32));
      uint64_t v71 = *v70;
      unint64_t v72 = v70[1];
      swift_bridgeObjectRetain();
      sub_1ACB19D1C(v69, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v92 = sub_1ACA3189C(v71, v72, &aBlock);
      sub_1ACE76FF8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v62, v63, "Job %{private,mask.hash}s: Episode Processing partially completed", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v67, -1, -1);
      MEMORY[0x1AD11B340](v66, -1, -1);
      swift_unknownObjectRelease();

      return;
    }

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v31 = v4;
    uint64_t v32 = v91;
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1ACE754C8();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EB76D4E0);
    uint64_t v34 = a2;
    swift_retain();
    uint64_t v35 = sub_1ACE75498();
    os_log_type_t v36 = sub_1ACE76C08();
    uint64_t v37 = v11;
    uint64_t v38 = v10;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v85 = v10;
      uint64_t v40 = v39;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v84 = v11;
      uint64_t v42 = v41;
      *(_DWORD *)uint64_t v40 = 141558275;
      uint64_t v92 = 1752392040;
      uint64_t aBlock = v41;
      uint64_t v43 = v31;
      sub_1ACE76FF8();
      *(_WORD *)(v40 + 12) = 2081;
      id v83 = (id)(v40 + 14);
      uint64_t v44 = (uint64_t)v82;
      sub_1ACB18E7C(v86, (uint64_t)v82, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v45 = (uint64_t *)(v44 + *(int *)(v43 + 32));
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      swift_bridgeObjectRetain();
      sub_1ACB19D1C(v44, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v92 = sub_1ACA3189C(v46, v47, &aBlock);
      uint64_t v48 = v91;
      sub_1ACE76FF8();
      swift_release();
      os_log_type_t v49 = v89;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v35, v36, "Job %{private,mask.hash}s: Partial Success failed to finalize", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      uint64_t v37 = v84;
      MEMORY[0x1AD11B340](v42, -1, -1);
      uint64_t v50 = v40;
      uint64_t v38 = v85;
      MEMORY[0x1AD11B340](v50, -1, -1);
    }
    else
    {
      uint64_t v48 = v32;

      swift_release();
      os_log_type_t v49 = v89;
    }
    uint64_t v51 = v90;
    uint64_t v91 = *(void *)(v34 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_queue);
    uint64_t v73 = swift_allocObject();
    uint64_t v74 = v87;
    *(void *)(v73 + 16) = v34;
    *(void *)(v73 + 24) = v74;
    uint64_t v97 = sub_1ACB19B44;
    int v98 = (void *)v73;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v94 = 1107296256;
    double v95 = sub_1ACA6DA9C;
    id v96 = &block_descriptor_73;
    uint64_t v75 = _Block_copy(&aBlock);
    swift_retain();
    id v76 = v74;
    id v77 = v88;
    sub_1ACE75E08();
    uint64_t v92 = MEMORY[0x1E4FBC860];
    sub_1ACB19A40((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v77, v49, v75);
    _Block_release(v75);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v51);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v77, v38);
  }
  swift_release();
}

uint64_t sub_1ACB18990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update;
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8
                                                        + *(int *)(type metadata accessor for FeedUpdateRequest() + 64));
  if (v9) {
    BOOL v10 = a3 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx);
    swift_retain();
    v9(a2, a3, v11);
    sub_1ACA76F34((uint64_t)v9);
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t *))(a1
                                                     + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
  uint64_t v14 = a4;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v18 = 0;
  char v19 = 1;
  return v12(v8, &v14);
}

unint64_t sub_1ACB18A80()
{
  sub_1ACB18D38(v0, v14);
  sub_1ACB18D38(v14, v15);
  unint64_t v1 = 0x206C616974696E49;
  switch(sub_1ACB0FEDC((uint64_t)v15))
  {
    case 1u:
      sub_1ACB0FF08((uint64_t)v15);
      unint64_t v1 = 0xD00000000000001BLL;
      break;
    case 2u:
      sub_1ACB0FF08((uint64_t)v15);
      unint64_t v1 = 0xD00000000000002DLL;
      break;
    case 3u:
    case 4u:
      unint64_t v1 = 0xD000000000000013;
      sub_1ACB0FF08((uint64_t)v15);
      break;
    case 5u:
      sub_1ACB0FF08((uint64_t)v15);
      unint64_t v1 = 0xD000000000000014;
      break;
    case 6u:
      sub_1ACB0FF08((uint64_t)v15);
      unint64_t v1 = 0x64656C696146;
      break;
    case 7u:
      sub_1ACB0FF08((uint64_t)v15);
      sub_1ACB18D38(v14, v13);
      uint64_t v2 = sub_1ACB0FF08((uint64_t)v13);
      uint64_t v3 = *(void **)v2;
      uint64_t v4 = *(void *)(v2 + 8);
      uint64_t v5 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      uint64_t v7 = *(void *)(v2 + 32);
      uint64_t v8 = *(void *)(v2 + 40);
      uint64_t v9 = *(void *)(v2 + 48);
      BOOL v10 = *(void **)(v2 + 56);
      char v11 = *(unsigned char *)(v2 + 64);
      sub_1ACB18D78((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F274);
      sub_1ACB0F624(v3, v4, v5, v6, v7, v8, v9, v10, v11);
      sub_1ACE76228();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACB18D78((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_1ACB0F6A8);
      unint64_t v1 = 0x64656873696E6946;
      break;
    case 8u:
      return v1;
    case 9u:
      unint64_t v1 = 0xD000000000000018;
      break;
    default:
      sub_1ACB0FF08((uint64_t)v15);
      unint64_t v1 = 0xD000000000000026;
      break;
  }
  return v1;
}

_OWORD *sub_1ACB18D38(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  long long v4 = a1[3];
  long long v5 = a1[4];
  long long v6 = a1[6];
  a2[5] = a1[5];
  a2[6] = v6;
  a2[3] = v4;
  a2[4] = v5;
  long long v7 = a1[7];
  long long v8 = a1[8];
  long long v9 = a1[9];
  *(_OWORD *)((char *)a2 + 154) = *(long long *)((char *)a1 + 154);
  a2[8] = v8;
  a2[9] = v9;
  a2[7] = v7;
  return a2;
}

uint64_t sub_1ACB18D78(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(_WORD *)(a1 + 168));
  return a1;
}

uint64_t sub_1ACB18DF4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB18E2C(uint64_t a1)
{
  return sub_1ACB11EC0(a1);
}

uint64_t sub_1ACB18E34()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACB18E74(long long *a1)
{
  return sub_1ACB1093C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1ACB18E7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACB18EE4()
{
  return objectdestroy_34Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1ACB18EFC(uint64_t a1, char a2, uint64_t a3)
{
  sub_1ACB0FF8C(a1, a2 & 1, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1ACB18F08(uint64_t result)
{
  *(unsigned char *)(result + 168) &= 0xC7u;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

unint64_t sub_1ACB18F1C()
{
  unint64_t result = qword_1EB76B050;
  if (!qword_1EB76B050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B050);
  }
  return result;
}

uint64_t sub_1ACB18F70(uint64_t result)
{
  *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | 0x30;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1ACB18F88()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACB18FD0()
{
  sub_1ACB10760(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACB18FDC(uint64_t result)
{
  *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | 8;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1ACB18FF4(uint64_t result)
{
  *(unsigned char *)(result + 168) |= 0x38u;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1ACB19008(uint64_t result)
{
  *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | 0x10;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1ACB19020(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 152);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 112);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 160);
  sub_1ACB0F578(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACB0F610(v2, v3, v4, v5, v6, v7);
  sub_1ACB0F578(v14, v13, v12, v11, v10, v8);
  return a1;
}

uint64_t sub_1ACB190F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v19 = *(void *)(a1 + 136);
  uint64_t v20 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 144);
  uint64_t v16 = *(void *)(a1 + 160);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 48);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 120);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 168);

  sub_1ACB0F9AC(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACB0F9D0(v14, v13, v12, v11, v10, v8);
  sub_1ACB0F9AC(v20, v19, v18, v17, v16, v15);
  return a1;
}

uint64_t sub_1ACB191FC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACB19234(void *a1, uint64_t a2)
{
  return sub_1ACB11B20(a1, a2, *(void *)(v2 + 16));
}

_OWORD *sub_1ACB1923C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1ACB19254(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACB192B0()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1ACB0F9AC(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB19314(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1ACB11FA8(a1, a2 & 1, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), (long long *)(v3 + 40), *(void (**)(void))(v3 + 88), *(void *)(v3 + 96));
}

unint64_t sub_1ACB1934C()
{
  unint64_t result = qword_1EB76B758;
  if (!qword_1EB76B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B758);
  }
  return result;
}

uint64_t sub_1ACB193A0(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void sub_1ACB193E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACB19464(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 152);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 112);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 160);
  sub_1ACB0F9AC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACB0F9D0(v2, v3, v4, v5, v6, v7);
  sub_1ACB0F9AC(v14, v13, v12, v11, v10, v8);
  return a1;
}

id sub_1ACB1953C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1ACB195C0(uint64_t result)
{
  *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | 0x20;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1ACB195D8()
{
  swift_release();
  swift_release();
  sub_1ACB0F9AC(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 144);
  if (v1 != 255) {
    sub_1ACA39518(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), v1);
  }
  sub_1ACB0F9AC(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(unsigned char *)(v0 + 192));
  if (*(void *)(v0 + 200)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACB1968C()
{
  sub_1ACB1403C(*(void *)(v0 + 16), *(void *)(v0 + 24), (long long *)(v0 + 32), *(void (**)(void, id))(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224));
}

uint64_t sub_1ACB196A0(uint64_t result)
{
  *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | 0x28;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1ACB196BC(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    unsigned __int8 v7 = (void *)swift_bridgeObjectRetain();
    uint64_t v9 = v7[4];
    uint64_t v8 = v7[5];
    uint64_t v10 = (void *)v7[6];
    uint64_t v11 = (void *)*a3;
    swift_bridgeObjectRetain();
    id v48 = v10;
    unint64_t v13 = sub_1ACA657FC(v9, v8);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v17 = v12;
    if (v11[3] < v16)
    {
      sub_1ACCFE20C(v16, a2 & 1);
      uint64_t v18 = sub_1ACA657FC(v9, v8);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        unint64_t result = sub_1ACE77A68();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
      uint64_t v20 = (void *)*a3;
      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      id v21 = *(id *)(v20[7] + 8 * v13);
      swift_bridgeObjectRelease();

      uint64_t v22 = v20[7];
      *(void *)(v22 + 8 * v13) = v21;
      uint64_t v23 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (uint64_t i = (void **)(v6 + 72); ; i += 3)
      {
        uint64_t v33 = (uint64_t)*(i - 2);
        uint64_t v32 = (uint64_t)*(i - 1);
        uint64_t v34 = *i;
        uint64_t v35 = (void *)*a3;
        swift_bridgeObjectRetain();
        id v36 = v34;
        unint64_t v37 = sub_1ACA657FC(v33, v32);
        uint64_t v39 = v35[2];
        BOOL v40 = (v38 & 1) == 0;
        BOOL v26 = __OFADD__(v39, v40);
        uint64_t v41 = v39 + v40;
        if (v26) {
          break;
        }
        char v42 = v38;
        if (v35[3] < v41)
        {
          sub_1ACCFE20C(v41, 1);
          unint64_t v37 = sub_1ACA657FC(v33, v32);
          if ((v42 & 1) != (v43 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v44 = (void *)*a3;
        if (v42)
        {
          uint64_t v29 = 8 * v37;
          id v30 = *(id *)(v44[7] + 8 * v37);
          swift_bridgeObjectRelease();

          uint64_t v31 = v44[7];
          *(void *)(v31 + v29) = v30;
        }
        else
        {
          v44[(v37 >> 6) + 8] |= 1 << v37;
          uint64_t v45 = (uint64_t *)(v44[6] + 16 * v37);
          *uint64_t v45 = v33;
          v45[1] = v32;
          *(void *)(v44[7] + 8 * v37) = v36;
          uint64_t v46 = v44[2];
          BOOL v26 = __OFADD__(v46, 1);
          uint64_t v47 = v46 + 1;
          if (v26) {
            goto LABEL_26;
          }
          v44[2] = v47;
        }
        if (!--v23) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      uint64_t v20 = (void *)*a3;
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1ACD06E10();
      uint64_t v20 = (void *)*a3;
      if (v17) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    id v24 = (uint64_t *)(v20[6] + 16 * v13);
    *id v24 = v9;
    v24[1] = v8;
    *(void *)(v20[7] + 8 * v13) = v48;
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    long long v20[2] = v27;
    uint64_t v23 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1ACB19980(uint64_t result)
{
  *(unsigned char *)(result + 168) = *(unsigned char *)(result + 168) & 0xC7 | 0x18;
  *(unsigned char *)(result + 169) = 0;
  return result;
}

unint64_t sub_1ACB19998()
{
  unint64_t result = qword_1EB76E300;
  if (!qword_1EB76E300)
  {
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76E300);
  }
  return result;
}

uint64_t sub_1ACB19A00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB19A38()
{
  return j__swift_bridgeObjectRetain(*(void *)(v0 + 16));
}

uint64_t sub_1ACB19A40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACB19A88()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACB19AD0()
{
  sub_1ACB17F40(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACB19ADC()
{
  return objectdestroy_34Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t objectdestroy_34Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t sub_1ACB19B44()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t *))(v1
                                                    + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
  uint64_t v4 = *(void *)(v0 + 24);
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  uint64_t v8 = 0;
  char v9 = 1;
  return v2(v1 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, &v4);
}

uint64_t sub_1ACB19BB0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ACB19BF8()
{
  return sub_1ACB18990(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1ACB19C04()
{
  swift_release();
  sub_1ACB0F6A8(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168),
    *(void *)(v0 + 176),
    *(void *)(v0 + 184),
    *(unsigned char *)(v0 + 192),
    *(unsigned char *)(v0 + 193));
  return swift_deallocObject();
}

uint64_t sub_1ACB19C94()
{
  sub_1ACB18D38((long long *)(v0 + 24), v2);
  return sub_1ACB0B1D0(v2);
}

uint64_t sub_1ACB19CD4()
{
  return sub_1ACB0A990(v0);
}

double sub_1ACB19CDC(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_WORD *)(a1 + 168) = 256;
  return result;
}

uint64_t sub_1ACB19D1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACB19D7C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1)
{
  sub_1ACB0F9AC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 112);
  if (v2 != 255) {
    sub_1ACA39518(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v2);
  }
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 152);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 160);
  return sub_1ACB0F9AC(v3, v4, v5, v6, v7, v8);
}

uint64_t initializeWithCopy for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F578(*(void *)a2, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  int v11 = *(unsigned __int8 *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 255)
  {
    long long v17 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v17;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  }
  else
  {
    uint64_t v12 = *(void *)(a2 + 72);
    uint64_t v13 = *(void *)(a2 + 80);
    uint64_t v14 = *(void *)(a2 + 88);
    uint64_t v15 = *(void *)(a2 + 96);
    uint64_t v16 = *(void *)(a2 + 104);
    sub_1ACB0F59C(v12, v13, v14, v15, v16, v11);
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v13;
    *(void *)(a1 + 88) = v14;
    *(void *)(a1 + 96) = v15;
    *(void *)(a1 + 104) = v16;
    *(unsigned char *)(a1 + 112) = v11;
  }
  uint64_t v18 = *(void *)(a2 + 120);
  uint64_t v19 = *(void *)(a2 + 128);
  uint64_t v20 = *(void *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 144);
  uint64_t v22 = *(void *)(a2 + 152);
  unsigned __int8 v23 = *(unsigned char *)(a2 + 160);
  sub_1ACB0F578(v18, v19, v20, v21, v22, v23);
  *(void *)(a1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v18;
  *(void *)(a1 + 128) = v19;
  *(void *)(a1 + 136) = v20;
  *(void *)(a1 + 144) = v21;
  *(void *)(a1 + 152) = v22;
  *(unsigned char *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v23;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F578(*(void *)a2, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v9;
  sub_1ACB0F9AC(v10, v11, v12, v13, v14, v15);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (long long *)(a1 + 72);
  long long v17 = (long long *)(a2 + 72);
  int v18 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v18 == 255)
    {
      long long v37 = *v17;
      long long v38 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      *uint64_t v16 = v37;
      *(_OWORD *)(a1 + 88) = v38;
    }
    else
    {
      uint64_t v30 = *(void *)(a2 + 72);
      uint64_t v31 = *(void *)(a2 + 80);
      uint64_t v32 = *(void *)(a2 + 88);
      uint64_t v33 = *(void *)(a2 + 96);
      uint64_t v34 = *(void *)(a2 + 104);
      sub_1ACB0F59C(v30, v31, v32, v33, v34, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 72) = v30;
      *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v31;
      *(void *)(a1 + 88) = v32;
      *(void *)(a1 + 96) = v33;
      *(void *)(a1 + 104) = v34;
      *(unsigned char *)(a1 + 112) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_1ACB1A16C(a1 + 72);
    long long v35 = *(_OWORD *)(a2 + 97);
    long long v36 = *(_OWORD *)(a2 + 88);
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 88) = v36;
    *(_OWORD *)(a1 + 97) = v35;
  }
  else
  {
    uint64_t v19 = *(void *)(a2 + 72);
    uint64_t v20 = *(void *)(a2 + 80);
    uint64_t v21 = *(void *)(a2 + 88);
    uint64_t v22 = *(void *)(a2 + 96);
    uint64_t v23 = *(void *)(a2 + 104);
    sub_1ACB0F59C(v19, v20, v21, v22, v23, *(unsigned char *)(a2 + 112));
    uint64_t v24 = *(void *)(a1 + 72);
    uint64_t v25 = *(void *)(a1 + 80);
    uint64_t v26 = *(void *)(a1 + 88);
    uint64_t v27 = *(void *)(a1 + 96);
    uint64_t v28 = *(void *)(a1 + 104);
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v20;
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 96) = v22;
    *(void *)(a1 + 104) = v23;
    unsigned __int8 v29 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v18;
    sub_1ACA39518(v24, v25, v26, v27, v28, v29);
  }
  uint64_t v39 = *(void *)(a2 + 120);
  uint64_t v40 = *(void *)(a2 + 128);
  uint64_t v41 = *(void *)(a2 + 136);
  uint64_t v42 = *(void *)(a2 + 144);
  uint64_t v43 = *(void *)(a2 + 152);
  unsigned __int8 v44 = *(unsigned char *)(a2 + 160);
  sub_1ACB0F578(v39, v40, v41, v42, v43, v44);
  uint64_t v45 = *(void *)(a1 + 120);
  uint64_t v46 = *(void *)(a1 + 128);
  uint64_t v47 = *(void *)(a1 + 136);
  uint64_t v48 = *(void *)(a1 + 144);
  uint64_t v49 = *(void *)(a1 + 152);
  *(void *)(a1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v39;
  *(void *)(a1 + 128) = v40;
  *(void *)(a1 + 136) = v41;
  *(void *)(a1 + 144) = v42;
  *(void *)(a1 + 152) = v43;
  unsigned __int8 v50 = *(unsigned char *)(a1 + 160);
  *(unsigned char *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v44;
  sub_1ACB0F9AC(v45, v46, v47, v48, v49, v50);
  return a1;
}

uint64_t sub_1ACB1A16C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v4;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v5;
  sub_1ACB0F9AC(v6, v7, v8, v9, v10, v12);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v13;
  swift_bridgeObjectRelease();
  int v14 = *(unsigned __int8 *)(a1 + 112);
  if (v14 == 255) {
    goto LABEL_5;
  }
  int v15 = *(unsigned __int8 *)(a2 + 112);
  if (v15 == 255)
  {
    sub_1ACB1A16C(a1 + 72);
LABEL_5:
    long long v22 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v22;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(a2 + 104);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  uint64_t v21 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v16;
  *(unsigned char *)(a1 + 112) = v15;
  sub_1ACA39518(v17, v18, v19, v20, v21, v14);
LABEL_6:
  uint64_t v23 = *(void *)(a2 + 152);
  char v24 = *(unsigned char *)(a2 + 160);
  uint64_t v25 = *(void *)(a1 + 120);
  uint64_t v26 = *(void *)(a1 + 128);
  uint64_t v27 = *(void *)(a1 + 136);
  uint64_t v28 = *(void *)(a1 + 144);
  uint64_t v29 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = v23;
  unsigned __int8 v30 = *(unsigned char *)(a1 + 160);
  *(unsigned char *)(a1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v24;
  sub_1ACB0F9AC(v25, v26, v27, v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.ValidSyncResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.ValidSyncResponse()
{
  return &type metadata for StoreFeedUpdaterJob.ValidSyncResponse;
}

uint64_t destroy for StoreFeedUpdaterJob.SyncRequest(uint64_t a1)
{
  return sub_1ACB0F9AC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F578(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F578(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  sub_1ACB0F9AC(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v4;
  sub_1ACB0F9AC(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdaterJob.SyncRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1E && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 30);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1C | (*(unsigned __int8 *)(a1 + 40) >> 6)) ^ 0x1F;
  if (v3 >= 0x1D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdaterJob.SyncRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
    *(void *)__n128 result = a2 - 30;
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 8 * (((-a2 >> 2) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1ACB1A618(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1ACB1A638(uint64_t result)
{
  *(unsigned char *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_1ACB1A648(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(unsigned char *)(result + 40) & 7 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.SyncRequest()
{
  return &type metadata for StoreFeedUpdaterJob.SyncRequest;
}

ValueMetadata *type metadata accessor for StoreFeedUpdaterJob.ValidSyncResponse.NextSyncInfo()
{
  return &type metadata for StoreFeedUpdaterJob.ValidSyncResponse.NextSyncInfo;
}

uint64_t static RemoteInterestError.== infix(_:_:)()
{
  return 1;
}

uint64_t RemoteInterestError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t RemoteInterestError.hashValue.getter()
{
  return sub_1ACE77B78();
}

void sub_1ACB1A72C()
{
  off_1E99F20D0 = &unk_1F03804A8;
}

uint64_t static RemoteInterest.knownSyncKeys.getter()
{
  return sub_1ACB1A88C(&qword_1E99EFE88);
}

unint64_t static RemoteInterest.unknownSyncKey.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1ACB1A780()
{
  if (qword_1E99EFE88 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1E99F20D0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACA41EA0(0, v0[2] + 1, 1, v0);
    uint64_t v0 = (void *)result;
  }
  unint64_t v3 = v0[2];
  unint64_t v2 = v0[3];
  if (v3 >= v2 >> 1)
  {
    uint64_t result = (uint64_t)sub_1ACA41EA0((void *)(v2 > 1), v3 + 1, 1, v0);
    uint64_t v0 = (void *)result;
  }
  v0[2] = v3 + 1;
  char v4 = &v0[2 * v3];
  void v4[4] = 0xD000000000000015;
  v4[5] = 0x80000001ACEC8BC0;
  qword_1E99F20D8 = (uint64_t)v0;
  return result;
}

uint64_t static RemoteInterest.allSyncKeys.getter()
{
  return sub_1ACB1A88C(&qword_1E99EFE90);
}

uint64_t sub_1ACB1A88C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t RemoteInterest.adamID.getter()
{
  return *(void *)v0;
}

double RemoteInterest.interestValue.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t RemoteInterest.interestValueUpdatedDate.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t RemoteInterest.unknownSyncProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteInterest.init(dictionary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16)
    && (uint64_t v4 = sub_1ACA657FC(0x44496D616461, 0xE600000000000000), (v5 & 1) != 0)
    && (sub_1ACA33128(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v28), (swift_dynamicCast() & 1) != 0)
    && *(void *)(a1 + 16)
    && (uint64_t v6 = v27, v7 = sub_1ACA657FC(0x7473657265746E69, 0xED000065756C6156), (v8 & 1) != 0)
    && (sub_1ACA33128(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v28), (swift_dynamicCast() & 1) != 0))
  {
    if (*(void *)(a1 + 16) && (uint64_t v9 = sub_1ACA657FC(0x616470557473616CLL, 0xEF65746144646574), (v10 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v28);
      int v11 = swift_dynamicCast();
      if (v11) {
        uint64_t v12 = v27;
      }
      else {
        uint64_t v12 = 0;
      }
      char v13 = v11 ^ 1;
    }
    else
    {
      uint64_t v12 = 0;
      char v13 = 1;
    }
    char v29 = v13;
    if (qword_1E99EFE88 != -1) {
      swift_once();
    }
    int v15 = (char *)off_1E99F20D0;
    uint64_t v16 = *((void *)off_1E99F20D0 + 2);
    if (v16)
    {
      uint64_t v26 = v12;
      swift_bridgeObjectRetain();
      uint64_t v17 = (uint64_t *)(v15 + 40);
      do
      {
        uint64_t v18 = *(v17 - 1);
        uint64_t v19 = *v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_1ACA657FC(v18, v19);
        char v22 = v21;
        swift_bridgeObjectRelease();
        if (v22)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1ACD0568C();
          }
          swift_bridgeObjectRelease();
          sub_1ACA3AA44((_OWORD *)(*(void *)(a1 + 56) + 32 * v20), v28);
          sub_1ACB1C698(v20, a1);
          swift_bridgeObjectRelease();
        }
        else
        {
          memset(v28, 0, sizeof(v28));
        }
        v17 += 2;
        sub_1ACA65828((uint64_t)v28);
        swift_bridgeObjectRelease();
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      uint64_t v12 = v26;
      uint64_t v6 = v27;
    }
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1ACB1AC14(v23);
    uint64_t result = swift_bridgeObjectRelease_n();
    char v25 = v29;
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v27;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v25;
    *(void *)(a2 + 32) = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1ACB1AFC4();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1ACB1AC14(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v39 = MEMORY[0x1E4FBC868];
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v40 = v38;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v13 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_34;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v15 >= v28) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    int64_t v17 = v7 + 1;
    if (!v16)
    {
      int64_t v17 = v7 + 2;
      if (v7 + 2 >= v28) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v7 + 3;
        if (v7 + 3 >= v28) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v7 + 4;
          if (v7 + 4 >= v28) {
            goto LABEL_36;
          }
          unint64_t v16 = *(void *)(v29 + 8 * v17);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_33:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v7 = v17;
LABEL_34:
    uint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v14);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v14, (uint64_t)v40);
    *(void *)&long long v37 = v25;
    *((void *)&v37 + 1) = v24;
    long long v35 = v37;
    v36[0] = v38[0];
    v36[1] = v38[1];
    sub_1ACA33128((uint64_t)v36, (uint64_t)&v32);
    swift_bridgeObjectRetain();
    sub_1ACC81278((uint64_t)&v32, (uint64_t)v30);
    sub_1ACB1DF98((uint64_t)v30, (uint64_t)v34);
    long long v26 = v35;
    long long v32 = v35;
    sub_1ACA3AA44(v36, v33);
    sub_1ACB1DF98((uint64_t)v34, (uint64_t)v31);
    unint64_t v27 = *(void *)(v2 + 16);
    if (*(void *)(v2 + 24) <= v27)
    {
      sub_1ACCFB344(v27 + 1, 1);
      uint64_t v2 = v39;
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v8 = v2 + 64;
    uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    if (((-1 << v10) & ~*(void *)(v2 + 64 + 8 * (v10 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v2 + 64 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v19 = 0;
      unint64_t v20 = (unint64_t)(63 - v9) >> 6;
      do
      {
        if (++v11 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v21 = v11 == v20;
        if (v11 == v20) {
          unint64_t v11 = 0;
        }
        v19 |= v21;
        uint64_t v22 = *(void *)(v8 + 8 * v11);
      }
      while (v22 == -1);
      unint64_t v12 = __clz(__rbit64(~v22)) + (v11 << 6);
    }
    *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_OWORD *)(*(void *)(v2 + 48) + 16 * v12) = v26;
    sub_1ACB1DF98((uint64_t)v31, *(void *)(v2 + 56) + 40 * v12);
    ++*(void *)(v2 + 16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  }
  int64_t v18 = v7 + 5;
  if (v7 + 5 >= v28)
  {
LABEL_36:
    sub_1ACA50A70();
    return v2;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v7 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v28) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_33;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1ACB1AFA0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1ACB1AFA8()
{
  return 0xD000000000000015;
}

unint64_t sub_1ACB1AFC4()
{
  unint64_t result = qword_1E99F20E0;
  if (!qword_1E99F20E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F20E0);
  }
  return result;
}

unint64_t sub_1ACB1B020()
{
  unint64_t result = qword_1E99F20E8;
  if (!qword_1E99F20E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F20E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteInterestError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACB1B110);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteInterestError()
{
  return &type metadata for RemoteInterestError;
}

uint64_t destroy for RemoteInterest()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteInterest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemoteInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteInterest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteInterest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteInterest()
{
  return &type metadata for RemoteInterest;
}

unint64_t sub_1ACB1B2E8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACE77B18();
        sub_1ACE77B58();
        unint64_t result = sub_1ACE77B78();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unint64_t v13 = (void *)(v12 + 8 * v3);
          unint64_t v14 = (void *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *unint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 40 * v3;
          int64_t v17 = (long long *)(v15 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 40))
          {
            long long v9 = *v17;
            long long v10 = v17[1];
            *(void *)(v16 + 32) = *((void *)v17 + 4);
            *(_OWORD *)unint64_t v16 = v9;
            *(_OWORD *)(v16 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1B4B8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        uint64_t v11 = sub_1ACE77B78();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          int64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1B6A8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACE77B18();
        sub_1ACE77B58();
        unint64_t result = sub_1ACE77B78();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (void *)(v10 + 8 * v3);
          unint64_t v12 = (void *)(v10 + 8 * v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          unint64_t v14 = (unsigned char *)(v13 + v3);
          uint64_t v15 = (unsigned char *)(v13 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *unint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1ACB1B864(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1ACE76F58();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (_OWORD *)(v18 + 16 * v3);
            BOOL v20 = (_OWORD *)(v18 + 16 * v6);
            if (16 * v3 != 16 * v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              _OWORD *v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1ACB1BA20(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1ACE76F58();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (unsigned char *)(v18 + v3);
            BOOL v20 = (unsigned char *)(v18 + v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              unsigned char *v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1ACB1BBD4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1ACE77B18();
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1ACE77B78();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (unsigned char *)(v10 + v3);
        unint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_1ACE750A8() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1BDDC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACA69FEC(*(void *)(a2 + 48) + 72 * v6, (uint64_t)&v22);
        sub_1ACE77B18();
        sub_1ACE77B58();
        sub_1ACE76108();
        sub_1ACE77B48();
        uint64_t v9 = sub_1ACE77B78();
        unint64_t result = sub_1ACA6A048((uint64_t)&v22);
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t result = v11 + 72 * v3;
          unint64_t v12 = (const void *)(v11 + 72 * v6);
          if (v3 != v6 || result >= (unint64_t)v12 + 72) {
            unint64_t result = (unint64_t)memmove((void *)result, v12, 0x48uLL);
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          int64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1BFE4(unint64_t a1, uint64_t a2)
{
  return sub_1ACB1D430(a1, a2, type metadata accessor for StoreFeedUpdater.Update);
}

unint64_t sub_1ACB1BFFC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1ACE77B08();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1C194(unint64_t a1, uint64_t a2)
{
  return sub_1ACB1D430(a1, a2, type metadata accessor for StoreFeedUpdater.Retry);
}

unint64_t sub_1ACB1C1AC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE75118();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1ACE770F8();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      long long v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1ACB1DF50((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1ACE760E8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *BOOL v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1C4A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1ACE77B18();
        sub_1ACE77B58();
        unint64_t result = sub_1ACE77B78();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v3);
        uint64_t v12 = (void *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for ThinClientEpisodeStateModel() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1C698(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        uint64_t v10 = sub_1ACE77B78();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          int64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *int64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1ACB1C870(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2 + 64;
  uint64_t v46 = a2;
  uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v15 = v9;
    uint64_t v16 = ~v13;
    uint64_t v17 = sub_1ACE770F8();
    uint64_t v18 = v12;
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      uint64_t v42 = v4;
      uint64_t v19 = (uint64_t)v44;
      uint64_t v20 = (v17 + 1) & v16;
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v41 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
      long long v38 = (void (**)(char *, uint64_t))(v43 + 8);
      uint64_t v39 = (void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      uint64_t v43 = v18;
      uint64_t v22 = v46;
      uint64_t v45 = v21;
      while (1)
      {
        unint64_t v23 = v20;
        int64_t v24 = v21 * v14;
        sub_1ACA69EDC(*(void *)(v22 + 48) + v21 * v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
        sub_1ACE77B18();
        sub_1ACA615AC((uint64_t)v11, v19);
        uint64_t v25 = v42;
        if ((*v41)(v19, 1, v42) == 1)
        {
          sub_1ACE77B38();
        }
        else
        {
          uint64_t v26 = v40;
          (*v39)(v40, v19, v25);
          sub_1ACE77B38();
          sub_1ACB1DF50(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
          sub_1ACE760F8();
          (*v38)(v26, v25);
        }
        sub_1ACE77B48();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        uint64_t v20 = v23;
        uint64_t v18 = v43;
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        uint64_t v27 = sub_1ACE77B78();
        sub_1ACA69F44((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
        unint64_t v28 = v27 & v16;
        if ((uint64_t)a1 >= (uint64_t)v23)
        {
          uint64_t v19 = (uint64_t)v44;
          uint64_t v21 = v45;
          uint64_t v22 = v46;
          if (v28 < v23) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v19 = (uint64_t)v44;
          uint64_t v21 = v45;
          uint64_t v22 = v46;
          if (v28 >= v23) {
            goto LABEL_14;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v28)
        {
LABEL_14:
          if ((uint64_t)(v21 * a1) < v24 || *(void *)(v22 + 48) + v21 * a1 >= *(void *)(v22 + 48) + v24 + v21)
          {
            swift_arrayInitWithTakeFrontToBack();
LABEL_19:
            uint64_t v21 = v45;
            uint64_t v22 = v46;
          }
          else if (v21 * a1 != v24)
          {
            swift_arrayInitWithTakeBackToFront();
            goto LABEL_19;
          }
          uint64_t v29 = *(void *)(v22 + 56);
          uint64_t v30 = (void *)(v29 + 8 * a1);
          unint64_t v31 = (void *)(v29 + 8 * v14);
          if (a1 != v14 || (a1 = v14, v30 >= v31 + 1))
          {
            *uint64_t v30 = *v31;
            a1 = v14;
          }
        }
LABEL_5:
        unint64_t v14 = (v14 + 1) & v16;
        if (((*(void *)(v18 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v22 = v46;
LABEL_25:
    long long v32 = (uint64_t *)(v18 + 8 * (a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    long long v32 = (uint64_t *)(v12 + 8 * (a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
    uint64_t v22 = v46;
  }
  uint64_t *v32 = v33 & v34;
  uint64_t v35 = *(void *)(v22 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
    JUMPOUT(0x1ACB1CE20);
  }
  *(void *)(v22 + 16) = v37;
  ++*(_DWORD *)(v22 + 36);
}

void sub_1ACB1CE44(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2 + 64;
  uint64_t v46 = a2;
  uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v15 = v9;
    uint64_t v16 = ~v13;
    uint64_t v17 = sub_1ACE770F8();
    uint64_t v18 = v12;
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      uint64_t v42 = v4;
      uint64_t v19 = (uint64_t)v44;
      uint64_t v20 = (v17 + 1) & v16;
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v41 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
      long long v38 = (void (**)(char *, uint64_t))(v43 + 8);
      uint64_t v39 = (void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      uint64_t v43 = v18;
      uint64_t v22 = v46;
      uint64_t v45 = v21;
      while (1)
      {
        unint64_t v23 = v20;
        int64_t v24 = v21 * v14;
        sub_1ACA69EDC(*(void *)(v22 + 48) + v21 * v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
        sub_1ACE77B18();
        sub_1ACA615AC((uint64_t)v11, v19);
        uint64_t v25 = v42;
        if ((*v41)(v19, 1, v42) == 1)
        {
          sub_1ACE77B38();
        }
        else
        {
          uint64_t v26 = v40;
          (*v39)(v40, v19, v25);
          sub_1ACE77B38();
          sub_1ACB1DF50(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
          sub_1ACE760F8();
          (*v38)(v26, v25);
        }
        sub_1ACE77B48();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        uint64_t v20 = v23;
        uint64_t v18 = v43;
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        uint64_t v27 = sub_1ACE77B78();
        sub_1ACA69F44((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
        unint64_t v28 = v27 & v16;
        if ((uint64_t)a1 >= (uint64_t)v23)
        {
          uint64_t v19 = (uint64_t)v44;
          uint64_t v21 = v45;
          uint64_t v22 = v46;
          if (v28 < v23) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v19 = (uint64_t)v44;
          uint64_t v21 = v45;
          uint64_t v22 = v46;
          if (v28 >= v23) {
            goto LABEL_14;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v28)
        {
LABEL_14:
          if ((uint64_t)(v21 * a1) < v24 || *(void *)(v22 + 48) + v21 * a1 >= *(void *)(v22 + 48) + v24 + v21)
          {
            swift_arrayInitWithTakeFrontToBack();
LABEL_19:
            uint64_t v21 = v45;
            uint64_t v22 = v46;
          }
          else if (v21 * a1 != v24)
          {
            swift_arrayInitWithTakeBackToFront();
            goto LABEL_19;
          }
          uint64_t v29 = *(void *)(v22 + 56);
          uint64_t v30 = (void *)(v29 + 8 * a1);
          unint64_t v31 = (void *)(v29 + 8 * v14);
          if (a1 != v14 || (a1 = v14, v30 >= v31 + 1))
          {
            *uint64_t v30 = *v31;
            a1 = v14;
          }
        }
LABEL_5:
        unint64_t v14 = (v14 + 1) & v16;
        if (((*(void *)(v18 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v22 = v46;
LABEL_25:
    long long v32 = (uint64_t *)(v18 + 8 * (a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    long long v32 = (uint64_t *)(v12 + 8 * (a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
    uint64_t v22 = v46;
  }
  uint64_t *v32 = v33 & v34;
  uint64_t v35 = *(void *)(v22 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
    JUMPOUT(0x1ACB1D3F4);
  }
  *(void *)(v22 + 16) = v37;
  ++*(_DWORD *)(v22 + 36);
}

unint64_t sub_1ACB1D418(unint64_t a1, uint64_t a2)
{
  return sub_1ACB1D430(a1, a2, MEMORY[0x1E4F26C48]);
}

unint64_t sub_1ACB1D430(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (void *)(v11 + 8 * v7);
        unint64_t result = sub_1ACE77B08();
        unint64_t v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13) {
            goto LABEL_6;
          }
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        uint64_t v16 = (void *)(v11 + 8 * v4);
        if (v4 != v7 || v16 >= v12 + 1) {
          *uint64_t v16 = *v12;
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v19 = v18 * v4;
        unint64_t result = v17 + v18 * v4;
        int64_t v20 = v18 * v7;
        unint64_t v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v19 == v20) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    unint64_t v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v4) - 1;
  }
  else
  {
    unint64_t v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *unint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1ACB1D610(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1ACE770F8();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      unint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      unint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1ACB1DF50(&qword_1E99F0F90, MEMORY[0x1E4F26C48]);
        uint64_t v17 = sub_1ACE760E8();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            unint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *uint64_t v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1ACB1D908(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACE77B18();
        sub_1ACE76108();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1ACE77B78();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x1ACB1DB8CLL);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1ACB1DBA4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACA69E2C(*(void *)(a2 + 48) + (v6 << 8), (uint64_t)v22);
        sub_1ACE77B18();
        ArtworkRequest.hash(into:)();
        uint64_t v9 = sub_1ACE77B78();
        unint64_t result = sub_1ACA69E88((uint64_t)v22);
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t result = v11 + (v3 << 8);
          uint64_t v12 = (const void *)(v11 + (v6 << 8));
          if (v3 != v6 || result >= (unint64_t)v12 + 256) {
            unint64_t result = (unint64_t)memmove((void *)result, v12, 0x100uLL);
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ACB1DD78(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        uint64_t v9 = sub_1ACE77B78();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1ACB1DF50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACB1DF98(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1ACB1DFF4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1ACE770F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_1ACE77B08();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (_OWORD *)(v15 + 16 * v3);
            uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t URL.fileSize()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1ACE74C88();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  unint64_t v8 = (void *)*MEMORY[0x1E4F1C5F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C5F8];
  id v9 = v8;
  sub_1ACA6CDF4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1ACE74DE8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v11 = sub_1ACE74C78();
    if (v12)
    {
      type metadata accessor for FileError();
      sub_1ACAA54C8();
      swift_allocError();
      uint64_t v15 = v14;
      uint64_t v16 = sub_1ACE74F28();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 2, v16);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      uint64_t v13 = v11;
      if (v11 < 0)
      {
        uint64_t result = sub_1ACE77488();
        __break(1u);
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        *a1 = v13;
      }
    }
  }
  return result;
}

Swift::Bool __swiftcall URL.isRemoteAddress()()
{
  sub_1ACE74EE8();
  if (v0)
  {
    swift_bridgeObjectRetain();
    char v1 = sub_1ACE76348();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    char v2 = sub_1ACE76348();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    char v3 = sub_1ACE76348();
    swift_bridgeObjectRelease();
    if ((v3 & 1) != 0
      || (swift_bridgeObjectRetain(), char v4 = sub_1ACE76348(), swift_bridgeObjectRelease(), (v4 & 1) != 0)
      || (swift_bridgeObjectRetain(), char v5 = sub_1ACE76348(), swift_bridgeObjectRelease(), (v5 & 1) != 0))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      char v6 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      char v6 = sub_1ACE76348();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_arrayDestroy();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

Swift::Bool __swiftcall URL.isMediaLibraryURL()()
{
  uint64_t v0 = sub_1ACE74EE8();
  if (v1)
  {
    if (v0 == 0x62696C2D646F7069 && v1 == 0xEC00000079726172) {
      char v2 = 1;
    }
    else {
      char v2 = sub_1ACE77848();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1ACB1E644(uint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1ACA42334(0, *(void *)(v3 + 16) + 1, 1, v3);
  }
  unint64_t v5 = *(void *)(v3 + 16);
  unint64_t v4 = *(void *)(v3 + 24);
  if (v5 >= v4 >> 1) {
    unint64_t v3 = sub_1ACA42334(v4 > 1, v5 + 1, 1, v3);
  }
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v6 = sub_1ACE74A28();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v3+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v5, a1, v6);
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1ACB1E72C(char a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACA43F34(0, *(void *)(v3 + 16) + 1, 1, (char *)v3);
    uint64_t v3 = result;
  }
  unint64_t v6 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    uint64_t result = (uint64_t)sub_1ACA43F34((char *)(v5 > 1), v6 + 1, 1, (char *)v3);
    uint64_t v3 = result;
  }
  *(void *)(v3 + 16) = v6 + 1;
  *(unsigned char *)(v3 + v6 + 32) = a1;
  *uint64_t v1 = v3;
  return result;
}

PodcastsFoundation::OAuthAuthenticationError_optional __swiftcall OAuthAuthenticationError.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

unint64_t OAuthAuthenticationError.rawValue.getter()
{
  unint64_t result = 0x645F737365636361;
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
    case 9:
      unint64_t result = 0x5F64696C61766E69;
      break;
    case 4:
      unint64_t result = 0x655F726576726573;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB1E97C(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF5058(*a1, *a2);
}

uint64_t sub_1ACB1E988()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB1E9D0()
{
  return sub_1ACBD5058();
}

uint64_t sub_1ACB1E9D8()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::OAuthAuthenticationError_optional sub_1ACB1EA1C(Swift::String *a1)
{
  return OAuthAuthenticationError.init(rawValue:)(*a1);
}

unint64_t sub_1ACB1EA28@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = OAuthAuthenticationError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void OAuthAuthenticationErrorResponse.error.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t OAuthAuthenticationErrorResponse.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthAuthenticationErrorResponse.detailURI.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void OAuthAuthenticationErrorResponse.sessionError.getter(unsigned char *a1@<X8>)
{
  *a1 = byte_1ACE8CA64[*v1];
}

unint64_t OAuthAuthenticationErrorResponse.responseItems.getter()
{
  uint64_t v21 = sub_1ACE74A28();
  uint64_t v1 = *(void *)(v21 - 8);
  uint64_t v2 = v1;
  uint64_t v3 = MEMORY[0x1F4188790](v21);
  uint64_t v20 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v19 - v5;
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[4];
  v19[1] = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725C8);
  uint64_t v9 = *(void *)(v1 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE843F0;
  unint64_t v12 = v11;
  sub_1ACE749F8();
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_1ACE749F8();
    unint64_t v12 = sub_1ACA42334(1, 2, 1, v12);
    *(void *)(v12 + 16) = 2;
    uint64_t v13 = v6;
    uint64_t v14 = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v10 + v9, v13, v21);
    uint64_t v15 = v20;
    if (!v8) {
      return v12;
    }
  }
  else
  {
    uint64_t v14 = v21;
    uint64_t v15 = v20;
    if (!v8) {
      return v12;
    }
  }
  sub_1ACE749F8();
  unint64_t v17 = *(void *)(v12 + 16);
  unint64_t v16 = *(void *)(v12 + 24);
  if (v17 >= v16 >> 1) {
    unint64_t v12 = sub_1ACA42334(v16 > 1, v17 + 1, 1, v12);
  }
  *(void *)(v12 + 16) = v17 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v10 + v17 * v9, v15, v14);
  return v12;
}

void __swiftcall OAuthAuthenticationErrorResponse.init(body:)(PodcastsFoundation::OAuthAuthenticationErrorResponse_optional *__return_ptr retstr, Swift::OpaquePointer body)
{
  if (!*((void *)body._rawValue + 2)) {
    goto LABEL_4;
  }
  uint64_t v4 = sub_1ACA657FC(0x726F727265, 0xE500000000000000);
  if ((v5 & 1) == 0
    || (unint64_t v6 = (uint64_t *)(*((void *)body._rawValue + 7) + 16 * v4),
        uint64_t v7 = *v6,
        uint64_t v8 = (void *)v6[1],
        swift_bridgeObjectRetain(),
        v9._countAndFlagsBits = v7,
        v9._object = v8,
        OAuthAuthenticationError.init(rawValue:)(v9),
        v20 == 10))
  {
LABEL_4:
    swift_bridgeObjectRelease();
    *(void *)&retstr->value.error = 0;
    retstr->value.description.value._countAndFlagsBits = 0;
    retstr->value.detailURI.value._countAndFlagsBits = 0;
    retstr->value.detailURI.value._object = 0;
    retstr->value.description.value._object = (void *)1;
    return;
  }
  if (!*((void *)body._rawValue + 2))
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    goto LABEL_13;
  }
  uint64_t v10 = sub_1ACA657FC(0xD000000000000011, 0x80000001ACEC8BE0);
  if ((v11 & 1) == 0)
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    if (*((void *)body._rawValue + 2)) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    goto LABEL_14;
  }
  unint64_t v12 = (uint64_t *)(*((void *)body._rawValue + 7) + 16 * v10);
  uint64_t v14 = *v12;
  uint64_t v13 = (void *)v12[1];
  swift_bridgeObjectRetain();
  if (!*((void *)body._rawValue + 2)) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v15 = sub_1ACA657FC(0x72755F726F727265, 0xE900000000000069);
  if ((v16 & 1) == 0) {
    goto LABEL_13;
  }
  unint64_t v17 = (uint64_t *)(*((void *)body._rawValue + 7) + 16 * v15);
  uint64_t v19 = *v17;
  uint64_t v18 = (void *)v17[1];
  swift_bridgeObjectRetain();
LABEL_14:
  swift_bridgeObjectRelease();
  *(void *)&retstr->value.error = v20;
  retstr->value.description.value._countAndFlagsBits = v14;
  retstr->value.description.value._object = v13;
  retstr->value.detailURI.value._countAndFlagsBits = v19;
  retstr->value.detailURI.value._object = v18;
}

void __swiftcall OAuthAuthenticationErrorResponse.init(error:description:detailURI:)(PodcastsFoundation::OAuthAuthenticationErrorResponse *__return_ptr retstr, PodcastsFoundation::OAuthAuthenticationError error, Swift::String_optional description, Swift::String_optional detailURI)
{
  retstr->error = *(unsigned char *)error;
  retstr->description = description;
  retstr->detailURI = detailURI;
}

uint64_t sub_1ACB1F004()
{
  return sub_1ACB1F04C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1ACA42328);
}

uint64_t sub_1ACB1F01C()
{
  return sub_1ACB1F04C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1ACA42334);
}

uint64_t sub_1ACB1F034()
{
  return sub_1ACB1F04C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1ACA43F34);
}

uint64_t sub_1ACB1F04C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1ACB1F0A8(uint64_t a1)
{
  return sub_1ACB1F0F0(a1, (uint64_t (*)(BOOL))sub_1ACA42328);
}

uint64_t sub_1ACB1F0C0(uint64_t a1)
{
  return sub_1ACB1F0F0(a1, (uint64_t (*)(BOOL))sub_1ACA42334);
}

uint64_t sub_1ACB1F0D8(uint64_t a1)
{
  return sub_1ACB1F0F0(a1, (uint64_t (*)(BOOL))sub_1ACA43F34);
}

uint64_t sub_1ACB1F0F0(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_1ACB1F13C(uint64_t result, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(unsigned char *)(v3 + result + 32) = a2;
  return result;
}

uint64_t sub_1ACB1F154(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 16) = a1 + 1;
  uint64_t v6 = sub_1ACE74A28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = v6;
  unint64_t v10 = v5
      + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + *(void *)(v7 + 72) * a1;
  return v8(v10, a2, v9);
}

unint64_t sub_1ACB1F1F0()
{
  unint64_t result = qword_1E99F20F0;
  if (!qword_1E99F20F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F20F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OAuthAuthenticationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OAuthAuthenticationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB1F3A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthenticationError()
{
  return &type metadata for OAuthAuthenticationError;
}

uint64_t initializeWithCopy for OAuthAuthenticationErrorResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OAuthAuthenticationErrorResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OAuthAuthenticationErrorResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OAuthAuthenticationErrorResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OAuthAuthenticationErrorResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthenticationErrorResponse()
{
  return &type metadata for OAuthAuthenticationErrorResponse;
}

uint64_t sub_1ACB1F5B4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1ACC82E60(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1ACE631A8(a1);
  uint64_t v6 = result;
  uint64_t v7 = v24;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v6 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8 * v6) + OBJC_IVAR___PFFairPlayAsset_adamID);
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t v22 = v9;
      uint64_t v23 = v5;
      uint64_t v21 = v10;
      uint64_t result = sub_1ACC82E60(v14 > 1, v15 + 1, 1);
      uint64_t v10 = v21;
      uint64_t v9 = v22;
      uint64_t v5 = v23;
      uint64_t v7 = v24;
    }
    *(void *)(v25 + 16) = v15 + 1;
    *(void *)(v25 + 8 * v15 + 32) = v13;
    int64_t v11 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v11) {
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v18 = v12 + 1;
      unint64_t v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            unint64_t v20 = *(void *)(v10 + 8 * v12++);
            if (v20)
            {
              unint64_t v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v6 = v11;
    if (v8 == v7) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

id FairPlayValidationManager.__allocating_init(episodeRemovalManager:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v2);
  id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayKeyLoader()), sel_init);
  type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  uint64_t v6 = swift_allocObject();
  id v7 = sub_1ACB22A78(v5, a1, v6, (char *)objc_allocWithZone(v2));

  swift_release();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id FairPlayValidationManager.init(episodeRemovalManager:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayKeyLoader()), sel_init);
  type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  uint64_t v4 = swift_allocObject();
  id v5 = sub_1ACB22A78(v3, a1, v4, (char *)objc_allocWithZone(ObjectType));

  swift_release();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t FairPlayValidationManager.validateDownloadedEpisodes(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(v3 + OBJC_IVAR___PFFairPlayValidationManager_internalQueue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v13;
  v14[3] = a1;
  _DWORD v14[4] = a2;
  aBlock[4] = sub_1ACB22EBC;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_23;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACA6DEC8(a1);
  sub_1ACE75E08();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

void sub_1ACB1FD34(uint64_t a1, void (*a2)(id, void *), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1ACE754C8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D598);
    uint64_t v9 = v7;
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v11 = sub_1ACE76BC8();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v27 = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      unint64_t v14 = sub_1ACB20078();
      sub_1ACA3189C(v14, v15, &v27);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v10, v11, "%s Validating downloaded FairPlay episodes.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v13, -1, -1);
      MEMORY[0x1AD11B340](v12, -1, -1);
    }
    else
    {
    }
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v9;
    v21[3] = a2;
    unsigned char v21[4] = a3;
    uint64_t v22 = *(void *)&v9[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher + 24];
    uint64_t v23 = *(void *)&v9[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher + 32];
    __swift_project_boxed_opaque_existential_1(&v9[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher], v22);
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = sub_1ACB23028;
    v24[3] = v21;
    v24[4] = v9;
    uint64_t v25 = *(void (**)(void (*)(void *, char), void *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v26 = v9;
    sub_1ACA6DEC8((uint64_t)a2);
    swift_retain();
    v25(sub_1ACB23074, v24, v22, v23);

    swift_release();
    swift_release();
  }
  else if (a2)
  {
    uint64_t v16 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
    unint64_t v17 = (char *)objc_allocWithZone(v16);
    uint64_t v18 = MEMORY[0x1E4FBC860];
    *(void *)&v17[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = MEMORY[0x1E4FBC860];
    *(void *)&v17[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v18;
    *(void *)&v17[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v18;
    v28.receiver = v17;
    v28.super_class = v16;
    id v19 = objc_msgSendSuper2(&v28, sel_init);
    sub_1ACB22F8C();
    unint64_t v20 = (void *)swift_allocError();
    a2(v19, v20);
  }
}

unint64_t sub_1ACB20078()
{
  int64_t v1 = (unint64_t *)(v0 + OBJC_IVAR___PFFairPlayValidationManager____lazy_storage___logPrefix);
  if (*(void *)(v0 + OBJC_IVAR___PFFairPlayValidationManager____lazy_storage___logPrefix + 8))
  {
    unint64_t v2 = *v1;
  }
  else
  {
    unint64_t v2 = 0xD00000000000002FLL;
    *int64_t v1 = 0xD00000000000002FLL;
    v1[1] = 0x80000001ACEC8D40;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1ACB200F0(unint64_t a1, void *a2, void (*a3)(id, void), uint64_t a4)
{
  unint64_t v29 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1ACE77508();
    if (v8)
    {
LABEL_3:
      if (v8 < 1)
      {
        __break(1u);
        goto LABEL_30;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v10 = (id)MEMORY[0x1AD119490](i, a1);
        }
        else {
          id v10 = *(id *)(a1 + 8 * i + 32);
        }
        os_log_type_t v11 = v10;
        if (FairPlayAsset.requiresRenewal()())
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v12 = v29;
      if ((v29 & 0x8000000000000000) != 0) {
        goto LABEL_21;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_21;
  }
LABEL_16:
  if ((v12 & 0x4000000000000000) == 0)
  {
    if (!*(void *)(v12 + 16)) {
      goto LABEL_22;
    }
LABEL_18:
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = a3;
    long long v13[3] = a4;
    v13[4] = a2;
    v13[5] = v12;
    swift_retain();
    sub_1ACA6DEC8((uint64_t)a3);
    id v14 = a2;
    sub_1ACB21798(v12, (uint64_t)sub_1ACB230E0, (uint64_t)v13);
    swift_release();
    swift_release();
    return;
  }
LABEL_21:
  swift_retain();
  uint64_t v15 = sub_1ACE77508();
  swift_release();
  if (v15) {
    goto LABEL_18;
  }
LABEL_22:
  swift_release();
  if (qword_1EB76D5B8 != -1) {
LABEL_30:
  }
    swift_once();
  uint64_t v16 = sub_1ACE754C8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D598);
  id v17 = a2;
  uint64_t v18 = sub_1ACE75498();
  os_log_type_t v19 = sub_1ACE76C08();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    unint64_t v29 = v21;
    *(_DWORD *)unint64_t v20 = 136315138;
    unint64_t v22 = sub_1ACB20078();
    sub_1ACA3189C(v22, v23, (uint64_t *)&v29);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v18, v19, "%s No episodes found requiring renewal.", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v21, -1, -1);
    MEMORY[0x1AD11B340](v20, -1, -1);

    if (!a3) {
      return;
    }
  }
  else
  {

    if (!a3) {
      return;
    }
  }
  uint64_t v24 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
  uint64_t v25 = (char *)objc_allocWithZone(v24);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)&v25[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = MEMORY[0x1E4FBC860];
  *(void *)&v25[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v26;
  *(void *)&v25[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v26;
  v28.receiver = v25;
  v28.super_class = v24;
  id v27 = objc_msgSendSuper2(&v28, sel_init);
  a3(v27, 0);
}

void sub_1ACB204DC(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, void *a5, unint64_t a6)
{
  if (a2)
  {
    if (!a3) {
      return;
    }
    uint64_t v8 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
    uint64_t v9 = (char *)objc_allocWithZone(v8);
    uint64_t v10 = MEMORY[0x1E4FBC860];
    *(void *)&v9[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = MEMORY[0x1E4FBC860];
    *(void *)&v9[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v10;
    *(void *)&v9[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v10;
    v39.receiver = v9;
    v39.super_class = v8;
    os_log_type_t v11 = (char *)objc_msgSendSuper2(&v39, sel_init);
    unint64_t v12 = v11;
    uint64_t v13 = a2;
    goto LABEL_13;
  }
  uint64_t v15 = (char *)sub_1ACB20964(a6, a1);
  if (*(void *)(*(void *)&v15[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs]
                 + 16))
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_1ACB21314(v16);
    swift_bridgeObjectRelease();
  }
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1ACE754C8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D598);
  uint64_t v18 = v15;
  id v19 = a5;
  unint64_t v12 = v18;
  id v20 = v19;
  uint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76C08();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v41 = v38;
    *(_DWORD *)uint64_t v23 = 136316675;
    unint64_t v24 = sub_1ACB20078();
    sub_1ACA3189C(v24, v25, &v41);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v23 + 22) = 2081;
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = MEMORY[0x1AD118740](v26, MEMORY[0x1E4FBC1C8]);
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v27, v29, &v41);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v23 + 42) = 2081;
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = MEMORY[0x1AD118740](v30, MEMORY[0x1E4FBC1C8]);
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v31, v33, &v41);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 52) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v23 + 62) = 2081;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x1AD118740](v34, MEMORY[0x1E4FBC1C8]);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1ACA3189C(v35, v37, &v41);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v21, v22, "%s Finished validating downloaded FairPlay episodes with errors for adamIds: %{private,mask.hash}s, episodes to be removed: %{private,mask.hash}s, successfully renewed %{private,mask.hash}s.", (uint8_t *)v23, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v38, -1, -1);
    MEMORY[0x1AD11B340](v23, -1, -1);

    if (!a3) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }

  if (a3)
  {
LABEL_12:
    os_log_type_t v11 = v12;
    uint64_t v13 = 0;
LABEL_13:
    a3(v11, v13);
  }
LABEL_14:
}

id sub_1ACB20964(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (!*(void *)(a2 + 16))
  {
    if (!v4)
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_14;
    }
LABEL_85:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1ACE77508();
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v14 = MEMORY[0x1E4FBC860];
    if (v13)
    {
      unint64_t v91 = MEMORY[0x1E4FBC860];
      id result = (id)sub_1ACC82E60(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0)
      {
        __break(1u);
        return result;
      }
      unint64_t v16 = v91;
      if ((v3 & 0xC000000000000001) != 0)
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          uint64_t v18 = *(void *)(MEMORY[0x1AD119490](i, v3) + OBJC_IVAR___PFFairPlayAsset_adamID);
          swift_unknownObjectRelease();
          unint64_t v91 = v16;
          unint64_t v20 = *(void *)(v16 + 16);
          unint64_t v19 = *(void *)(v16 + 24);
          if (v20 >= v19 >> 1)
          {
            sub_1ACC82E60(v19 > 1, v20 + 1, 1);
            unint64_t v16 = v91;
          }
          *(void *)(v16 + 16) = v20 + 1;
          *(void *)(v16 + 8 * v20 + 32) = v18;
        }
      }
      else
      {
        id v76 = (void *)(v3 + 32);
        unint64_t v77 = *(void *)(v91 + 16);
        do
        {
          uint64_t v78 = *(void *)(*v76 + OBJC_IVAR___PFFairPlayAsset_adamID);
          unint64_t v91 = v16;
          unint64_t v79 = *(void *)(v16 + 24);
          if (v77 >= v79 >> 1)
          {
            sub_1ACC82E60(v79 > 1, v77 + 1, 1);
            unint64_t v16 = v91;
          }
          *(void *)(v16 + 16) = v77 + 1;
          *(void *)(v16 + 8 * v77 + 32) = v78;
          ++v76;
          ++v77;
          --v13;
        }
        while (v13);
      }
    }
    else
    {
      unint64_t v16 = MEMORY[0x1E4FBC860];
    }
    uint64_t v74 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
    uint64_t v75 = (char *)objc_allocWithZone(v74);
    *(void *)&v75[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = v16;
    *(void *)&v75[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v14;
    *(void *)&v75[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v14;
    v88.receiver = v75;
    v88.super_class = v74;
    return objc_msgSendSuper2(&v88, sel_init);
  }
  uint64_t v5 = v2;
  uint64_t v6 = a2;
  if (v4)
  {
LABEL_81:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v7) {
    goto LABEL_26;
  }
  unint64_t v91 = MEMORY[0x1E4FBC860];
  sub_1ACC82E60(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  uint64_t v8 = v91;
  if ((v3 & 0xC000000000000001) != 0)
  {
    for (uint64_t j = 0; j != v7; ++j)
    {
      uint64_t v10 = *(void *)(MEMORY[0x1AD119490](j, v3) + OBJC_IVAR___PFFairPlayAsset_adamID);
      swift_unknownObjectRelease();
      unint64_t v91 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1ACC82E60(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v91;
      }
      *(void *)(v8 + 16) = v12 + 1;
      *(void *)(v8 + 8 * v12 + 32) = v10;
    }
  }
  else
  {
    uint64_t v21 = (void *)(v3 + 32);
    unint64_t v22 = *(void *)(v91 + 16);
    do
    {
      uint64_t v23 = *(void *)(*v21 + OBJC_IVAR___PFFairPlayAsset_adamID);
      unint64_t v91 = v8;
      unint64_t v24 = *(void *)(v8 + 24);
      if (v22 >= v24 >> 1)
      {
        sub_1ACC82E60(v24 > 1, v22 + 1, 1);
        uint64_t v8 = v91;
      }
      *(void *)(v8 + 16) = v22 + 1;
      *(void *)(v8 + 8 * v22 + 32) = v23;
      ++v21;
      ++v22;
      --v7;
    }
    while (v7);
  }
LABEL_26:
  uint64_t v25 = sub_1ACDF745C(v8);
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_bridgeObjectRetain();
  unint64_t v3 = 0;
  uint64_t v27 = sub_1ACB1F5B4(v26);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1ACDF745C(v27);
  swift_bridgeObjectRelease();
  uint64_t v81 = v28;
  if (*(void *)(v28 + 16) <= *(void *)(v25 + 16) >> 3)
  {
    unint64_t v91 = v25;
    sub_1ACC413BC(v28);
    uint64_t v80 = v91;
  }
  else
  {
    uint64_t v80 = sub_1ACB881A4(v28, v25);
  }
  unint64_t v91 = MEMORY[0x1E4FBC860];
  uint64_t v84 = v6 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & *(void *)(v6 + 64);
  int64_t v85 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v32 = 0;
  unint64_t v33 = &unk_1EB76D000;
  uint64_t v82 = v5;
  uint64_t v83 = v6;
  while (1)
  {
    if (v31)
    {
      unint64_t v34 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      int64_t v86 = v32;
      unint64_t v35 = v34 | (v32 << 6);
      goto LABEL_50;
    }
    int64_t v36 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    if (v36 >= v85) {
      goto LABEL_58;
    }
    unint64_t v37 = *(void *)(v84 + 8 * v36);
    int64_t v38 = v32 + 1;
    if (!v37)
    {
      int64_t v38 = v32 + 2;
      if (v32 + 2 >= v85) {
        goto LABEL_58;
      }
      unint64_t v37 = *(void *)(v84 + 8 * v38);
      if (!v37)
      {
        int64_t v38 = v32 + 3;
        if (v32 + 3 >= v85) {
          goto LABEL_58;
        }
        unint64_t v37 = *(void *)(v84 + 8 * v38);
        if (!v37) {
          break;
        }
      }
    }
LABEL_49:
    unint64_t v31 = (v37 - 1) & v37;
    int64_t v86 = v38;
    unint64_t v35 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_50:
    uint64_t v40 = 8 * v35;
    uint64_t v41 = *(void **)(*(void *)(v6 + 56) + v40);
    id v42 = *(id *)(*(void *)(v6 + 48) + v40);
    id v43 = v41;
    if (v33[183] != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1ACE754C8();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EB76D598);
    id v45 = v42;
    id v46 = v41;
    id v47 = v5;
    unint64_t v3 = (unint64_t)v45;
    id v48 = v41;
    id v49 = v47;
    unsigned __int8 v50 = sub_1ACE75498();
    os_log_type_t v51 = sub_1ACE76BE8();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = (void *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v90[0] = v54;
      *(_DWORD *)uint64_t v52 = 136316163;
      unint64_t v55 = sub_1ACB20078();
      *(void *)(v52 + 4) = sub_1ACA3189C(v55, v56, v90);

      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2160;
      *(void *)(v52 + 14) = 1752392040;
      *(_WORD *)(v52 + 22) = 2113;
      *(void *)(v52 + 24) = v3;
      *uint64_t v53 = v3;

      *(_WORD *)(v52 + 32) = 2160;
      *(void *)(v52 + 34) = 1752392040;
      *(_WORD *)(v52 + 42) = 2081;
      swift_getErrorValue();
      uint64_t v57 = sub_1ACE77A98();
      *(void *)(v52 + 44) = sub_1ACA3189C(v57, v58, v90);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v50, v51, "%s Unable to renew key for asset: %{private,mask.hash}@, with error: %{private,mask.hash}s.", (uint8_t *)v52, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      id v59 = v53;
      unint64_t v33 = (void *)&unk_1EB76D000;
      MEMORY[0x1AD11B340](v59, -1, -1);
      swift_arrayDestroy();
      uint64_t v60 = v54;
      uint64_t v5 = v82;
      MEMORY[0x1AD11B340](v60, -1, -1);
      uint64_t v61 = v52;
      uint64_t v6 = v83;
      MEMORY[0x1AD11B340](v61, -1, -1);
    }
    else
    {
    }
    swift_getErrorValue();
    if (sub_1ACB22658(v90[2]))
    {
      uint64_t v62 = (id)v3;
      MEMORY[0x1AD118700]();
      if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1ACE765C8();
      }
      sub_1ACE76628();
      sub_1ACE76598();
    }

    int64_t v32 = v86;
  }
  uint64_t v39 = v32 + 4;
  if (v32 + 4 < v85)
  {
    unint64_t v37 = *(void *)(v84 + 8 * v39);
    if (!v37)
    {
      while (1)
      {
        int64_t v38 = v39 + 1;
        if (__OFADD__(v39, 1)) {
          goto LABEL_80;
        }
        if (v38 >= v85) {
          goto LABEL_58;
        }
        unint64_t v37 = *(void *)(v84 + 8 * v38);
        ++v39;
        if (v37) {
          goto LABEL_49;
        }
      }
    }
    int64_t v38 = v32 + 4;
    goto LABEL_49;
  }
LABEL_58:
  swift_release();
  os_log_type_t v63 = sub_1ACD0AFE8(v80);
  swift_bridgeObjectRelease();
  unint64_t v3 = (unint64_t)sub_1ACD0AFE8(v81);
  swift_bridgeObjectRelease();
  unint64_t v64 = v91;
  if (v91 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1ACE77508();
  }
  else
  {
    uint64_t v65 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v65)
  {
    v90[0] = MEMORY[0x1E4FBC860];
    sub_1ACC82E60(0, v65 & ~(v65 >> 63), 0);
    if (v65 < 0) {
      goto LABEL_84;
    }
    int v87 = (void *)v3;
    uint64_t v66 = v63;
    uint64_t v67 = 0;
    uint64_t v68 = v90[0];
    do
    {
      if ((v64 & 0xC000000000000001) != 0)
      {
        uint64_t v69 = *(void *)(MEMORY[0x1AD119490](v67, v64) + OBJC_IVAR___PFFairPlayAsset_adamID);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v69 = *(void *)(*(void *)(v64 + 8 * v67 + 32) + OBJC_IVAR___PFFairPlayAsset_adamID);
      }
      v90[0] = v68;
      unint64_t v71 = *(void *)(v68 + 16);
      unint64_t v70 = *(void *)(v68 + 24);
      if (v71 >= v70 >> 1)
      {
        sub_1ACC82E60(v70 > 1, v71 + 1, 1);
        uint64_t v68 = v90[0];
      }
      ++v67;
      *(void *)(v68 + 16) = v71 + 1;
      *(void *)(v68 + 8 * v71 + 32) = v69;
    }
    while (v65 != v67);
    swift_bridgeObjectRelease();
    os_log_type_t v63 = v66;
    unint64_t v3 = (unint64_t)v87;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v68 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  unint64_t v72 = (objc_class *)type metadata accessor for FairPlayValidationManager.Response();
  uint64_t v73 = (char *)objc_allocWithZone(v72);
  *(void *)&v73[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = v63;
  *(void *)&v73[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = v3;
  *(void *)&v73[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = v68;
  v89.receiver = v73;
  v89.super_class = v72;
  return objc_msgSendSuper2(&v89, sel_init);
}

void sub_1ACB21314(uint64_t a1)
{
  uint64_t v3 = sub_1ACE75EC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)&v1[OBJC_IVAR___PFFairPlayValidationManager_internalQueue];
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D598);
  uint64_t v10 = v1;
  swift_bridgeObjectRetain_n();
  unint64_t v11 = v10;
  unint64_t v12 = sub_1ACE75498();
  int v13 = sub_1ACE76C08();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v39 = v13;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v42 = v38;
    *(_DWORD *)uint64_t v14 = 136315651;
    unint64_t v15 = sub_1ACB20078();
    uint64_t v41 = sub_1ACA3189C(v15, v16, &v42);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2160;
    uint64_t v41 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v14 + 22) = 2081;
    int64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = MEMORY[0x1E4FBC860];
    if (v17)
    {
      uint64_t v34 = v14;
      unint64_t v35 = v12;
      int64_t v36 = v11;
      uint64_t v41 = MEMORY[0x1E4FBC860];
      sub_1ACC82D44(0, v17, 0);
      uint64_t v18 = v41;
      uint64_t v37 = a1;
      unint64_t v19 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v20 = *v19++;
        uint64_t v40 = v20;
        uint64_t v21 = sub_1ACE777C8();
        uint64_t v23 = v22;
        uint64_t v41 = v18;
        unint64_t v25 = *(void *)(v18 + 16);
        unint64_t v24 = *(void *)(v18 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1ACC82D44(v24 > 1, v25 + 1, 1);
          uint64_t v18 = v41;
        }
        *(void *)(v18 + 16) = v25 + 1;
        unint64_t v26 = v18 + 16 * v25;
        *(void *)(v26 + 32) = v21;
        *(void *)(v26 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v23;
        --v17;
      }
      while (v17);
      unint64_t v11 = v36;
      uint64_t v14 = v34;
      unint64_t v12 = v35;
    }
    uint64_t v41 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    uint64_t v27 = sub_1ACE76138();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_1ACA3189C(v27, v29, &v42);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v12, (os_log_type_t)v39, "%s Attempting to remove episodes with adamIDs: %{private,mask.hash}s.", (uint8_t *)v14, 0x20u);
    uint64_t v30 = v38;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v30, -1, -1);
    MEMORY[0x1AD11B340](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v31 = *(void **)&v11[OBJC_IVAR___PFFairPlayValidationManager_episodeRemovalManager];
  if (v31)
  {
    int64_t v32 = (void *)sub_1ACE76558();
    objc_msgSend(v31, sel_removeEpisodesWith_, v32);
  }
}

void sub_1ACB21798(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = *(void **)&v3[OBJC_IVAR___PFFairPlayValidationManager_internalQueue];
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v13 = sub_1ACE754C8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB76D598);
  uint64_t v14 = v3;
  swift_bridgeObjectRetain_n();
  unint64_t v15 = v14;
  unint64_t v16 = sub_1ACE75498();
  int v17 = sub_1ACE76BC8();
  if (!os_log_type_enabled(v16, (os_log_type_t)v17))
  {

    swift_bridgeObjectRelease_n();
LABEL_18:
    int v39 = *(void **)&v15[OBJC_IVAR___PFFairPlayValidationManager_keyLoader];
    type metadata accessor for FairPlayAsset();
    uint64_t v40 = (void *)sub_1ACE76558();
    uint64_t v41 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = v41;
    v42[3] = a2;
    v42[4] = a3;
    aBlock[4] = (uint64_t)sub_1ACB2312C;
    void aBlock[5] = (uint64_t)v42;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1ACD5533C;
    void aBlock[3] = (uint64_t)&block_descriptor_30;
    id v43 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v39, sel_renewKeyRequestsWithAssets_completion_, v40, v43);
    _Block_release(v43);

    return;
  }
  int v49 = v17;
  uint64_t v18 = swift_slowAlloc();
  uint64_t v48 = swift_slowAlloc();
  aBlock[0] = v48;
  *(_DWORD *)uint64_t v18 = 136315651;
  unint64_t v19 = sub_1ACB20078();
  uint64_t v53 = sub_1ACA3189C(v19, v20, aBlock);
  sub_1ACE76FF8();

  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 12) = 2160;
  uint64_t v53 = 1752392040;
  sub_1ACE76FF8();
  unsigned __int8 v50 = (uint8_t *)v18;
  *(_WORD *)(v18 + 22) = 2081;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v51 = a2;
  if (!v21)
  {
LABEL_17:
    uint64_t v34 = v50;
    uint64_t v53 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    uint64_t v35 = sub_1ACE76138();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1ACA3189C(v35, v37, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v16, (os_log_type_t)v49, "%s Attempting to renew keys for episodes with adamIDs: %{private,mask.hash}s.", v34, 0x20u);
    uint64_t v38 = v48;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v38, -1, -1);
    MEMORY[0x1AD11B340](v34, -1, -1);

    a2 = v51;
    goto LABEL_18;
  }
  uint64_t v53 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    id v45 = v16;
    id v46 = v15;
    uint64_t v47 = a3;
    uint64_t v23 = 0;
    uint64_t v22 = v53;
    unint64_t v24 = a1 & 0xC000000000000001;
    unint64_t v25 = a1;
    do
    {
      if (v24) {
        unint64_t v26 = (char *)MEMORY[0x1AD119490](v23, a1);
      }
      else {
        unint64_t v26 = (char *)*(id *)(a1 + 8 * v23 + 32);
      }
      uint64_t v27 = v26;
      uint64_t v52 = *(void *)&v26[OBJC_IVAR___PFFairPlayAsset_adamID];
      uint64_t v28 = sub_1ACE777C8();
      uint64_t v30 = v29;

      uint64_t v53 = v22;
      unint64_t v32 = *(void *)(v22 + 16);
      unint64_t v31 = *(void *)(v22 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1ACC82D44(v31 > 1, v32 + 1, 1);
        uint64_t v22 = v53;
      }
      ++v23;
      *(void *)(v22 + 16) = v32 + 1;
      unint64_t v33 = v22 + 16 * v32;
      *(void *)(v33 + 32) = v28;
      *(void *)(v33 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v30;
      a1 = v25;
    }
    while (v21 != v23);
    unint64_t v15 = v46;
    a3 = v47;
    unint64_t v16 = v45;
    goto LABEL_17;
  }
  __break(1u);
}

id FairPlayValidationManager.Response.__allocating_init(renewedAdamIDs:failedAdamIDs:removedAdamIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = a1;
  *(void *)&v7[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = a2;
  *(void *)&v7[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id FairPlayValidationManager.Response.init(renewedAdamIDs:failedAdamIDs:removedAdamIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_renewedAdamIDs] = a1;
  *(void *)&v3[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_failedAdamIDs] = a2;
  *(void *)&v3[OBJC_IVAR____TtCC18PodcastsFoundation25FairPlayValidationManager8Response_removedAdamIDs] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id FairPlayValidationManager.Response.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FairPlayValidationManager.Response.init()()
{
}

void FairPlayValidationManager.init()()
{
}

uint64_t sub_1ACB220F0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unint64_t, void *), uint64_t a5)
{
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1ACE75E48();
  uint64_t v14 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  unint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1AD11B470](a3 + 16);
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    uint64_t v26 = *(void *)(v17 + OBJC_IVAR___PFFairPlayValidationManager_internalQueue);
    unint64_t v19 = (void *)swift_allocObject();
    void v19[2] = v18;
    v19[3] = a4;
    _OWORD v19[4] = a5;
    v19[5] = a1;
    void v19[6] = a2;
    aBlock[4] = sub_1ACB23188;
    void aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1ACA6DA9C;
    void aBlock[3] = &block_descriptor_36;
    unint64_t v20 = _Block_copy(aBlock);
    id v21 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    id v22 = a2;
    sub_1ACE75E08();
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v16, v13, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v27);

    return swift_release();
  }
  else
  {
    unint64_t v24 = sub_1ACA36DE4(MEMORY[0x1E4FBC860]);
    sub_1ACB22F8C();
    unint64_t v25 = (void *)swift_allocError();
    a4(v24, v25);

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ACB22468(void *a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D598);
  id v10 = a1;
  uint64_t v11 = sub_1ACE75498();
  os_log_type_t v12 = sub_1ACE76BC8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v19 = a5;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    unint64_t v15 = sub_1ACB20078();
    sub_1ACA3189C(v15, v16, &v20);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v11, v12, "%s Finished key renewal process.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v14, -1, -1);
    uint64_t v17 = v13;
    a5 = v19;
    MEMORY[0x1AD11B340](v17, -1, -1);
  }
  else
  {
  }
  return a2(a4, a5);
}

BOOL sub_1ACB22658(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_1ACE777F8();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_1ACE74D68();

  id v10 = objc_msgSend(v9, sel_code);
  return v10 == (id)-1002;
}

void sub_1ACB227BC(id a1, char a2, void (*a3)(id), uint64_t a4, void *a5)
{
  if (a2)
  {
    id v8 = a1;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D598);
    sub_1ACB23084(a1, 1);
    id v10 = a5;
    sub_1ACB23084(a1, 1);
    id v11 = v10;
    uint64_t v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76BE8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = v19;
      *(_DWORD *)uint64_t v14 = 136315651;
      unint64_t v15 = sub_1ACB20078();
      sub_1ACA3189C(v15, v16, &v20);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v14 + 22) = 2081;
      swift_getErrorValue();
      uint64_t v17 = sub_1ACE77A98();
      sub_1ACA3189C(v17, v18, &v20);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACAC1E88(a1, 1);
      sub_1ACAC1E88(a1, 1);
      _os_log_impl(&dword_1AC9D5000, v12, v13, "%s Unable to fetch downloaded FairPlay episodes with error: %{private,mask.hash}s.", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v19, -1, -1);
      MEMORY[0x1AD11B340](v14, -1, -1);
    }
    else
    {

      sub_1ACAC1E88(a1, 1);
      sub_1ACAC1E88(a1, 1);
    }

    a3((id)MEMORY[0x1E4FBC860]);
    sub_1ACAC1E88(a1, 1);
  }
  else
  {
    a3(a1);
  }
}

id sub_1ACB22A78(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v26 = sub_1ACE76CE8();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v25 = OBJC_IVAR___PFFairPlayValidationManager_internalQueue;
  unint64_t v24 = sub_1ACA51E1C();
  id v10 = a4;
  sub_1ACE75DF8();
  v33[0] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v26);
  id v11 = (void *)sub_1ACE76D28();
  *(void *)&a4[v25] = v11;
  uint64_t v12 = &v10[OBJC_IVAR___PFFairPlayValidationManager____lazy_storage___logPrefix];
  os_log_type_t v13 = (objc_class *)type metadata accessor for DispatchingFairPlayKeyLoading();
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  unint64_t v15 = v27;
  *(void *)&v14[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = v27;
  *(void *)&v14[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = v11;
  v34.receiver = v14;
  v34.super_class = v13;
  id v16 = v11;
  id v17 = v15;
  *(void *)&v10[OBJC_IVAR___PFFairPlayValidationManager_keyLoader] = objc_msgSendSuper2(&v34, sel_init);
  *(void *)&v10[OBJC_IVAR___PFFairPlayValidationManager_episodeRemovalManager] = v28;
  v33[3] = type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v33[4] = &off_1F039A7F0;
  v33[0] = v29;
  unint64_t v18 = (objc_class *)type metadata accessor for DispatchingFairPlayEpisodeDataFetching();
  uint64_t v19 = (char *)objc_allocWithZone(v18);
  sub_1ACA3E158((uint64_t)v33, (uint64_t)&v19[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance]);
  *(void *)&v19[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue] = v16;
  v32.receiver = v19;
  v32.super_class = v18;
  id v20 = v16;
  swift_unknownObjectRetain();
  swift_retain();
  id v21 = objc_msgSendSuper2(&v32, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);

  id v22 = &v10[OBJC_IVAR___PFFairPlayValidationManager_episodeFetcher];
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = &off_1F0394770;
  *(void *)id v22 = v21;

  v31.receiver = v10;
  v31.super_class = ObjectType;
  return objc_msgSendSuper2(&v31, sel_init);
}

uint64_t sub_1ACB22E3C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB22E74()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACB22EBC()
{
  sub_1ACB1FD34(*(void *)(v0 + 16), *(void (**)(id, void *))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for FairPlayValidationManager()
{
  return self;
}

uint64_t method lookup function for FairPlayValidationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayValidationManager);
}

uint64_t type metadata accessor for FairPlayValidationManager.Response()
{
  return self;
}

uint64_t method lookup function for FairPlayValidationManager.Response(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayValidationManager.Response);
}

uint64_t dispatch thunk of FairPlayValidationManager.Response.__allocating_init(renewedAdamIDs:failedAdamIDs:removedAdamIDs:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ACB22F54()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1ACB22F8C()
{
  unint64_t result = qword_1E99F2138;
  if (!qword_1E99F2138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2138);
  }
  return result;
}

uint64_t sub_1ACB22FE0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACB23028(unint64_t a1)
{
  sub_1ACB200F0(a1, *(void **)(v1 + 16), *(void (**)(id, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACB23034()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1ACB23074(void *a1, char a2)
{
  sub_1ACB227BC(a1, a2 & 1, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

id sub_1ACB23084(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1ACB23090()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACB230E0(uint64_t a1, uint64_t a2)
{
  sub_1ACB204DC(a1, a2, *(void (**)(char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACB230EC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB2312C(uint64_t a1, void *a2)
{
  return sub_1ACB220F0(a1, a2, *(void *)(v2 + 16), *(void (**)(unint64_t, void *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1ACB23138()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ACB23188()
{
  return sub_1ACB22468(*(void **)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1ACB23198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FairPlayValidationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACB2327CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayValidationError()
{
  return &type metadata for FairPlayValidationError;
}

unint64_t sub_1ACB232B8()
{
  unint64_t result = qword_1E99F2140;
  if (!qword_1E99F2140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2140);
  }
  return result;
}

uint64_t ChannelAttributes.DisplayType.rawValue.getter()
{
  uint64_t v1 = 1684627824;
  if (*v0 != 1) {
    uint64_t v1 = 0x646972627968;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701147238;
  }
}

uint64_t ServerChannel.href.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_href);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1ACB233F8()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ServerChannel.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerChannel.attributes.getter()
{
  return swift_retain();
}

uint64_t ServerChannel.relationships.getter()
{
  return swift_retain();
}

uint64_t sub_1ACB234B0()
{
  uint64_t result = 1717924456;
  switch(*v0)
  {
    case 1:
      uint64_t result = 25705;
      break;
    case 2:
      uint64_t result = 1701869940;
      break;
    case 3:
      uint64_t result = 0x7475626972747461;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB2354C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB2A790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACB23574(uint64_t a1)
{
  unint64_t v2 = sub_1ACB23970();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB235B0(uint64_t a1)
{
  unint64_t v2 = sub_1ACB23970();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ServerChannel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServerChannel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ServerChannel()
{
  return self;
}

uint64_t sub_1ACB236CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB23970();
  sub_1ACE77C78();
  LOBYTE(v13) = 0;
  sub_1ACE77748();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1ACE77748();
    LOBYTE(v13) = 2;
    sub_1ACE77748();
    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes);
    HIBYTE(v12) = 3;
    type metadata accessor for ChannelAttributes();
    sub_1ACB292C8(&qword_1EB7670A0, v9, (void (*)(uint64_t))type metadata accessor for ChannelAttributes);
    sub_1ACE77788();
    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships);
    HIBYTE(v12) = 4;
    type metadata accessor for ChannelRelationships();
    sub_1ACB292C8(&qword_1EB767900, v10, (void (*)(uint64_t))type metadata accessor for ChannelRelationships);
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ACB23970()
{
  unint64_t result = qword_1EB766E28;
  if (!qword_1EB766E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766E28);
  }
  return result;
}

uint64_t type metadata accessor for ChannelAttributes()
{
  return self;
}

uint64_t type metadata accessor for ChannelRelationships()
{
  return self;
}

unint64_t ServerChannel.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ServerChannel.init(from:)(a1);
}

unint64_t ServerChannel.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769090);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v8 = sub_1ACB23970();
  uint64_t v9 = v1;
  uint64_t v10 = v6;
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);

    type metadata accessor for ServerChannel();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v28;
    uint64_t v12 = v29;
    LOBYTE(v33) = 0;
    uint64_t v13 = sub_1ACE77658();
    unint64_t v15 = v9;
    id v16 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_href];
    *id v16 = v13;
    v16[1] = v17;
    LOBYTE(v33) = 1;
    uint64_t v18 = sub_1ACE77658();
    uint64_t v19 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    uint64_t *v19 = v18;
    v19[1] = v20;
    LOBYTE(v33) = 2;
    uint64_t v21 = sub_1ACE77658();
    id v22 = (uint64_t *)&v9[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_type];
    *id v22 = v21;
    v22[1] = v23;
    type metadata accessor for ChannelAttributes();
    char v32 = 3;
    sub_1ACB292C8(&qword_1EB7670A8, v24, (void (*)(uint64_t))type metadata accessor for ChannelAttributes);
    sub_1ACE77698();
    *(void *)&v9[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] = v33;
    type metadata accessor for ChannelRelationships();
    char v32 = 4;
    sub_1ACB292C8(&qword_1EB767908, v25, (void (*)(uint64_t))type metadata accessor for ChannelRelationships);
    sub_1ACE77638();
    uint64_t v26 = v11;
    *(void *)&v15[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships] = v33;

    uint64_t v27 = (objc_class *)type metadata accessor for ServerChannel();
    v31.receiver = v15;
    v31.super_class = v27;
    unint64_t v8 = (unint64_t)objc_msgSendSuper2(&v31, sel_init);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  }
  return v8;
}

unint64_t sub_1ACB23E8C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ServerChannel());
  unint64_t result = ServerChannel.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACB23EE0(void *a1)
{
  return sub_1ACB236CC(a1);
}

PodcastsFoundation::ChannelAttributes::DisplayType_optional __swiftcall ChannelAttributes.DisplayType.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::ChannelAttributes::DisplayType_optional)sub_1ACB26C18(v1);
}

uint64_t sub_1ACB23F10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF6184(*a1, *a2);
}

uint64_t sub_1ACB23F1C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB23FAC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB24028()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::ChannelAttributes::DisplayType_optional sub_1ACB240B4(Swift::String *a1)
{
  return ChannelAttributes.DisplayType.init(rawValue:)(*a1);
}

void sub_1ACB240C0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1684627824;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646972627968;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701147238;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACB2410C()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACB2416C()
{
  return sub_1ACE764C8();
}

PodcastsFoundation::ChannelAttributes::SubscriptionType_optional __swiftcall ChannelAttributes.SubscriptionType.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::ChannelAttributes::SubscriptionType_optional)sub_1ACB26C18(v1);
}

uint64_t ChannelAttributes.SubscriptionType.rawValue.getter()
{
  uint64_t v1 = 0x687475616FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7374736163646F70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1936748641;
  }
}

uint64_t sub_1ACB24218(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF6188(*a1, *a2);
}

uint64_t sub_1ACB24224()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB242BC()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB24340()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::ChannelAttributes::SubscriptionType_optional sub_1ACB243D4(Swift::String *a1)
{
  return ChannelAttributes.SubscriptionType.init(rawValue:)(*a1);
}

void sub_1ACB243E0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x687475616FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7374736163646F70;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1936748641;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACB24434()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACB24494()
{
  return sub_1ACE764C8();
}

uint64_t ChannelAttributes.description.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.artwork.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.showCount.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t ChannelAttributes.availableShowCount.getter()
{
  return *(void *)(v0 + 64);
}

void ChannelAttributes.displayType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 73);
}

uint64_t ChannelAttributes.isSubscribed.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t ChannelAttributes.subscriptionEnabledDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACB24550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 88))
  {
    if (qword_1EB76E118 != -1) {
      swift_once();
    }
    BOOL v6 = (void *)qword_1EB76E110;
    uint64_t v7 = (void *)sub_1ACE76178();
    id v8 = objc_msgSend(v6, sel_dateFromString_, v7);

    if (v8)
    {
      sub_1ACE75078();

      uint64_t v9 = sub_1ACE750A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
    }
    else
    {
      uint64_t v13 = sub_1ACE750A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
    }
    return sub_1ACA909B4((uint64_t)v5, a1);
  }
  else
  {
    uint64_t v10 = sub_1ACE750A8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v11(a1, 1, 1, v10);
  }
}

uint64_t ChannelAttributes.subscriptionName.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelAttributes.editorialArtwork.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.subscriptionOffers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ChannelAttributes.logoArtwork.getter()
{
  return swift_retain();
}

uint64_t ChannelAttributes.backgroundSwatch.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelAttributes.personalizedSubscriptionOffers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ChannelAttributes.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

void ChannelAttributes.subscriptionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 176);
}

uint64_t sub_1ACB247F8()
{
  if (*(void *)(v0 + 152)) {
    uint64_t v1 = *(void *)(v0 + 152);
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  if (*(void *)(v0 + 120)) {
    unint64_t v2 = *(void *)(v0 + 120);
  }
  else {
    unint64_t v2 = MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACA6FB18(v2);
  return v4;
}

uint64_t sub_1ACB24864@<X0>(unsigned char *a1@<X8>)
{
  if (*(void *)(v1 + 152)) {
    unint64_t v3 = *(void *)(v1 + 152);
  }
  else {
    unint64_t v3 = MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = *(void *)(v1 + 120);
  if (v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACA6FB18(v5);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_9;
    }
LABEL_22:
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
LABEL_23:
    swift_bridgeObjectRelease_n();
    if (*((void *)v9 + 2))
    {
      *a1 = v9[32];
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = 4;
    }
    return result;
  }
  uint64_t v6 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_22;
  }
LABEL_9:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    while (1)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x1AD119490](v8++, v15);
        int v11 = *(unsigned __int8 *)(v10 + 208);
        swift_unknownObjectRelease();
        if (v11 != 4) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v12 = *(void *)(v15 + 32 + 8 * v8++);
        int v11 = *(unsigned __int8 *)(v12 + 208);
        if (v11 != 4)
        {
LABEL_17:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1ACA429B4(0, *((void *)v9 + 2) + 1, 1, v9);
          }
          unint64_t v14 = *((void *)v9 + 2);
          unint64_t v13 = *((void *)v9 + 3);
          if (v14 >= v13 >> 1) {
            uint64_t v9 = sub_1ACA429B4((char *)(v13 > 1), v14 + 1, 1, v9);
          }
          *((void *)v9 + 2) = v14 + 1;
          v9[v14 + 32] = v11;
        }
      }
      if (v8 == v6) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1ACB24A64(char a1)
{
  unint64_t result = 0x7470697263736564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B726F77747261;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x6E756F43776F6873;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x5479616C70736964;
      break;
    case 6:
      unint64_t result = 0x7263736275537369;
      break;
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    case 8:
    case 9:
    case 12:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0x777472416F676F6CLL;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACB24C44()
{
  return sub_1ACB24A64(*v0);
}

uint64_t sub_1ACB24C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB2A9A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACB24C74(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1ACB24C80(uint64_t a1)
{
  unint64_t v2 = sub_1ACB28E2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB24CBC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB28E2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ChannelAttributes.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChannelAttributes.__deallocating_deinit()
{
  ChannelAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB24D9C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769108);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB28E2C();
  sub_1ACE77C78();
  uint64_t v14 = *(void *)(v3 + 16);
  char v13 = 0;
  type metadata accessor for ServerDescription();
  sub_1ACB292C8(&qword_1EB767380, 255, (void (*)(uint64_t))type metadata accessor for ServerDescription);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 24);
    char v13 = 1;
    type metadata accessor for ServerArtwork();
    sub_1ACB292C8(&qword_1EB766D38, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77728();
    LOBYTE(v14) = 2;
    sub_1ACE77748();
    LOBYTE(v14) = 3;
    sub_1ACE77718();
    LOBYTE(v14) = 4;
    sub_1ACE77718();
    LOBYTE(v14) = *(unsigned char *)(v3 + 73);
    char v13 = 5;
    sub_1ACB28E80();
    sub_1ACE77728();
    LOBYTE(v14) = 6;
    sub_1ACE776F8();
    LOBYTE(v14) = 7;
    sub_1ACE776E8();
    LOBYTE(v14) = 8;
    sub_1ACE776E8();
    uint64_t v14 = *(void *)(v3 + 112);
    char v13 = 9;
    type metadata accessor for ChannelEditorialArtworkContainer();
    sub_1ACB292C8(&qword_1EB768498, v9, (void (*)(uint64_t))type metadata accessor for ChannelEditorialArtworkContainer);
    sub_1ACE77728();
    uint64_t v14 = *(void *)(v3 + 120);
    char v13 = 10;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E30);
    sub_1ACB28FC4(&qword_1EB768E38, &qword_1EB767458);
    uint64_t v12 = v10;
    sub_1ACE77728();
    uint64_t v14 = *(void *)(v3 + 128);
    char v13 = 11;
    sub_1ACE77728();
    LOBYTE(v14) = 12;
    sub_1ACE776E8();
    uint64_t v14 = *(void *)(v3 + 152);
    char v13 = 13;
    sub_1ACE77728();
    LOBYTE(v14) = 14;
    sub_1ACE776E8();
    LOBYTE(v14) = *(unsigned char *)(v3 + 176);
    char v13 = 15;
    sub_1ACB28F1C();
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ChannelAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ChannelAttributes.init(from:)(a1);
  return v2;
}

uint64_t ChannelAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB28E2C();
  sub_1ACE77C48();
  if (v2)
  {
    type metadata accessor for ChannelAttributes();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerDescription();
    char v20 = 0;
    sub_1ACB292C8(&qword_1EB767388, 255, (void (*)(uint64_t))type metadata accessor for ServerDescription);
    sub_1ACE77638();
    *(void *)(v1 + 16) = v21;
    type metadata accessor for ServerArtwork();
    char v20 = 1;
    sub_1ACB292C8(&qword_1EB766D40, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    *(void *)(v1 + 24) = v21;
    LOBYTE(v21) = 2;
    *(void *)(v1 + 32) = sub_1ACE77658();
    *(void *)(v1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v9;
    LOBYTE(v21) = 3;
    v19[1] = 0;
    *(void *)(v1 + 48) = sub_1ACE77628();
    *(unsigned char *)(v1 + 56) = v10 & 1;
    LOBYTE(v21) = 4;
    *(void *)(v1 + 64) = sub_1ACE77628();
    *(unsigned char *)(v1 + 72) = v11 & 1;
    char v20 = 5;
    sub_1ACB28F70();
    sub_1ACE77638();
    *(unsigned char *)(v1 + 73) = v21;
    LOBYTE(v21) = 6;
    *(unsigned char *)(v1 + 74) = sub_1ACE77608();
    LOBYTE(v21) = 7;
    *(void *)(v1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE775F8();
    *(void *)(v1 + 88) = v13;
    LOBYTE(v21) = 8;
    *(void *)(v1 + 96) = sub_1ACE775F8();
    *(void *)(v1 + 104) = v14;
    type metadata accessor for ChannelEditorialArtworkContainer();
    char v20 = 9;
    sub_1ACB292C8(&qword_1EB7684A0, v15, (void (*)(uint64_t))type metadata accessor for ChannelEditorialArtworkContainer);
    sub_1ACE77638();
    *(void *)(v1 + 112) = v21;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E30);
    char v20 = 10;
    v19[3] = sub_1ACB28FC4(&qword_1EB768E40, &qword_1EB767460);
    _OWORD v19[4] = v16;
    sub_1ACE77638();
    *(void *)(v3 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v21;
    char v20 = 11;
    sub_1ACE77638();
    *(void *)(v3 + 128) = v21;
    LOBYTE(v21) = 12;
    *(void *)(v3 + 136) = sub_1ACE775F8();
    *(void *)(v3 + 144) = v17;
    char v20 = 13;
    sub_1ACE77638();
    *(void *)(v3 + 152) = v21;
    LOBYTE(v21) = 14;
    *(void *)(v3 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE775F8();
    *(void *)(v3 + 168) = v18;
    char v20 = 15;
    sub_1ACB29058();
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)(v3 + 176) = v21;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACB25C18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB28D98(a1, (void (*)(void))type metadata accessor for ChannelAttributes, (uint64_t (*)(uint64_t))ChannelAttributes.init(from:), a2);
}

uint64_t sub_1ACB25C5C(void *a1)
{
  return sub_1ACB24D9C(a1);
}

void *ChannelRelationships.podcasts.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_1ACB25CA8()
{
  return 0x7374736163646F70;
}

uint64_t sub_1ACB25CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7374736163646F70 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACB25D58(uint64_t a1)
{
  unint64_t v2 = sub_1ACB290AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB25D94(uint64_t a1)
{
  unint64_t v2 = sub_1ACB290AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ChannelRelationships.deinit()
{
  return v0;
}

uint64_t ChannelRelationships.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t ChannelRelationships.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2178);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB290AC();
  sub_1ACE77C78();
  v9[1] = *(void *)(v2 + 16);
  type metadata accessor for PodcastRelationshipContainer();
  sub_1ACB292C8(&qword_1E99F2188, 255, (void (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer);
  sub_1ACE77728();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ChannelRelationships.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ChannelRelationships.init(from:)(a1);
  return v2;
}

uint64_t ChannelRelationships.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2190);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB290AC();
  sub_1ACE77C48();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for PodcastRelationshipContainer();
    sub_1ACB292C8(qword_1EB76A448, 255, (void (*)(uint64_t))type metadata accessor for PodcastRelationshipContainer);
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(void *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACB261EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = ChannelRelationships.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1ACB26244(void *a1)
{
  return ChannelRelationships.encode(to:)(a1);
}

uint64_t ChannelEditorialArtworkContainer.channelPageBackground.getter()
{
  return swift_retain();
}

uint64_t ChannelEditorialArtworkContainer.channelFeaturingSquare.getter()
{
  return swift_retain();
}

uint64_t ChannelEditorialArtworkContainer.storeFlowcase.getter()
{
  return swift_retain();
}

uint64_t ChannelEditorialArtworkContainer.contentLogoTrimmed.getter()
{
  return swift_retain();
}

unint64_t sub_1ACB26288(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x6F6C4665726F7473;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACB26348()
{
  return sub_1ACB26288(*v0);
}

uint64_t sub_1ACB26350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB2AFF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACB26378(uint64_t a1)
{
  unint64_t v2 = sub_1ACB29100();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB263B4(uint64_t a1)
{
  unint64_t v2 = sub_1ACB29100();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ChannelEditorialArtworkContainer.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ChannelEditorialArtworkContainer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB26498(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7690D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB29100();
  sub_1ACE77C78();
  uint64_t v11 = v3[2];
  HIBYTE(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
  type metadata accessor for ServerArtwork();
  sub_1ACB292C8(&qword_1EB766D38, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
  sub_1ACE77728();
  if (!v2)
  {
    uint64_t v11 = v3[3];
    HIBYTE(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
    sub_1ACE77728();
    uint64_t v11 = v3[4];
    HIBYTE(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
    sub_1ACE77728();
    uint64_t v11 = v3[5];
    HIBYTE(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 3;
    sub_1ACE77728();
    uint64_t v11 = v3[6];
    HIBYTE(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 4;
    sub_1ACE77728();
    uint64_t v11 = v3[7];
    HIBYTE(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 5;
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ChannelEditorialArtworkContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ChannelEditorialArtworkContainer.init(from:)(a1);
  return v2;
}

void *ChannelEditorialArtworkContainer.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769070);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB29100();
  sub_1ACE77C48();
  if (v2)
  {
    type metadata accessor for ChannelEditorialArtworkContainer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for ServerArtwork();
    char v10 = 0;
    sub_1ACB292C8(&qword_1EB766D40, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    void v1[2] = v11;
    char v10 = 1;
    sub_1ACE77638();
    v1[3] = v11;
    char v10 = 2;
    sub_1ACE77638();
    v1[4] = v11;
    char v10 = 3;
    uint64_t v9 = 0;
    sub_1ACE77638();
    v1[5] = v11;
    char v10 = 4;
    sub_1ACE77638();
    v1[6] = v11;
    char v10 = 5;
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[7] = v11;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_1ACB26BA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB28D98(a1, (void (*)(void))type metadata accessor for ChannelEditorialArtworkContainer, (uint64_t (*)(uint64_t))ChannelEditorialArtworkContainer.init(from:), a2);
}

uint64_t sub_1ACB26BE8(void *a1)
{
  return sub_1ACB26498(a1);
}

PodcastsFoundation::SubscriptionOffer::Kind_optional __swiftcall SubscriptionOffer.Kind.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::SubscriptionOffer::Kind_optional)sub_1ACB26C18(v1);
}

uint64_t sub_1ACB26C18@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t SubscriptionOffer.Kind.rawValue.getter()
{
  uint64_t v1 = 0x687475616FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6269726373627573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7070612D6E69;
  }
}

uint64_t sub_1ACB26CC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF6070(*a1, *a2);
}

uint64_t sub_1ACB26CD4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB26D74()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB26E00()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::SubscriptionOffer::Kind_optional sub_1ACB26E9C(Swift::String *a1)
{
  return SubscriptionOffer.Kind.init(rawValue:)(*a1);
}

void sub_1ACB26EA8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x687475616FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6269726373627573;
    unint64_t v4 = 0xE900000000000065;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7070612D6E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ACB26F04()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACB26F64()
{
  return sub_1ACE764C8();
}

PodcastsFoundation::SubscriptionOffer::AppType_optional __swiftcall SubscriptionOffer.AppType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t SubscriptionOffer.AppType.rawValue.getter()
{
  uint64_t result = 0x636973756DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1937204590;
      break;
    case 2:
      uint64_t result = 30324;
      break;
    case 3:
      uint64_t result = 0x6C616E7265747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB27088(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF5F10(*a1, *a2);
}

uint64_t sub_1ACB27094()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACB27158()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB27204()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::SubscriptionOffer::AppType_optional sub_1ACB272C4(Swift::String *a1)
{
  return SubscriptionOffer.AppType.init(rawValue:)(*a1);
}

void sub_1ACB272D0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x636973756DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1937204590;
      goto LABEL_3;
    case 2:
      *a1 = 30324;
      a1[1] = 0xE200000000000000;
      break;
    case 3:
      *a1 = 0x6C616E7265747865;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1ACB27354()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACB273B4()
{
  return sub_1ACE764C8();
}

uint64_t SubscriptionOffer.isFamily.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SubscriptionOffer.isSubscribed.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SubscriptionOffer.eligibilityType.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionOffer.offerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void SubscriptionOffer.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t SubscriptionOffer.isStudent.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t SubscriptionOffer.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionOffer.freeTrial.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SubscriptionOffer.isFree.getter()
{
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t SubscriptionOffer.valueProposition.getter()
{
  return swift_retain();
}

uint64_t SubscriptionOffer.appId.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

void SubscriptionOffer.appType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 208);
}

uint64_t SubscriptionOffer.appName.getter()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionOffer.appArtwork.getter()
{
  return swift_retain();
}

uint64_t SubscriptionOffer.authorizationUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1ACB27574(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x796C696D61467369;
      break;
    case 2:
      unint64_t result = 0x7263736275537369;
      break;
    case 3:
      unint64_t result = 0x6C69626967696C65;
      break;
    case 4:
      unint64_t result = 0x6D614E726566666FLL;
      break;
    case 5:
      unint64_t result = 1684957547;
      break;
    case 6:
      unint64_t result = 0x656C746974;
      break;
    case 7:
      unint64_t result = 0x646F69726570;
      break;
    case 8:
      unint64_t result = 0x6E65647574537369;
      break;
    case 9:
      unint64_t result = 0x7470697263736564;
      break;
    case 10:
      unint64_t result = 0x6D61726150797562;
      break;
    case 11:
      unint64_t result = 0x6169725465657266;
      break;
    case 12:
      unint64_t result = 0x6169725465657266;
      break;
    case 13:
      unint64_t result = 0x656572467369;
      break;
    case 14:
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 15:
      unint64_t result = 0x6449707061;
      break;
    case 16:
      unint64_t result = 0x65707954707061;
      break;
    case 17:
      unint64_t result = 0x656D614E707061;
      break;
    case 18:
      unint64_t result = 0x6F77747241707061;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACB277E4()
{
  return sub_1ACB27574(*v0);
}

uint64_t sub_1ACB277EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB2B270(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACB27814(unsigned char *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1ACB27820(uint64_t a1)
{
  unint64_t v2 = sub_1ACB29154();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB2785C(uint64_t a1)
{
  unint64_t v2 = sub_1ACB29154();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SubscriptionOffer.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SubscriptionOffer.__deallocating_deinit()
{
  SubscriptionOffer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB2794C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2198);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB29154();
  sub_1ACE77C78();
  LOBYTE(v11) = 0;
  sub_1ACE77748();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1ACE776F8();
    LOBYTE(v11) = 2;
    sub_1ACE776F8();
    LOBYTE(v11) = 3;
    sub_1ACE776E8();
    LOBYTE(v11) = 4;
    sub_1ACE776E8();
    LOBYTE(v11) = *(unsigned char *)(v3 + 72);
    char v12 = 5;
    sub_1ACB291A8();
    sub_1ACE77728();
    LOBYTE(v11) = 6;
    sub_1ACE776E8();
    LOBYTE(v11) = 7;
    sub_1ACE776E8();
    LOBYTE(v11) = 8;
    sub_1ACE776F8();
    LOBYTE(v11) = 9;
    sub_1ACE776E8();
    LOBYTE(v11) = 10;
    sub_1ACE776E8();
    LOBYTE(v11) = 11;
    sub_1ACE776F8();
    LOBYTE(v11) = 12;
    sub_1ACE776E8();
    LOBYTE(v11) = 13;
    sub_1ACE776F8();
    uint64_t v11 = *(void *)(v3 + 184);
    char v12 = 14;
    type metadata accessor for ValueProposition();
    sub_1ACB292C8(&qword_1E99F21A8, v9, (void (*)(uint64_t))type metadata accessor for ValueProposition);
    sub_1ACE77728();
    LOBYTE(v11) = 15;
    sub_1ACE776E8();
    LOBYTE(v11) = *(unsigned char *)(v3 + 208);
    char v12 = 16;
    sub_1ACB29220();
    sub_1ACE77728();
    LOBYTE(v11) = 17;
    sub_1ACE776E8();
    uint64_t v11 = *(void *)(v3 + 232);
    char v12 = 18;
    type metadata accessor for ServerArtwork();
    sub_1ACB292C8(&qword_1EB766D38, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77728();
    LOBYTE(v11) = 19;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SubscriptionOffer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SubscriptionOffer.init(from:)(a1);
  return v2;
}

uint64_t SubscriptionOffer.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB29154();
  sub_1ACE77C48();
  if (v2)
  {
    type metadata accessor for SubscriptionOffer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v25) = 0;
    *(void *)(v1 + 16) = sub_1ACE77658();
    *(void *)(v1 + 24) = v9;
    LOBYTE(v25) = 1;
    *(unsigned char *)(v1 + 32) = sub_1ACE77608();
    LOBYTE(v25) = 2;
    *(unsigned char *)(v1 + 33) = sub_1ACE77608();
    LOBYTE(v25) = 3;
    *(void *)(v1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE775F8();
    *(void *)(v1 + 48) = v11;
    LOBYTE(v25) = 4;
    *(void *)(v1 + 56) = sub_1ACE775F8();
    *(void *)(v1 + 64) = v12;
    char v26 = 5;
    sub_1ACB29274();
    uint64_t v24 = 0;
    sub_1ACE77638();
    *(unsigned char *)(v1 + 72) = v25;
    LOBYTE(v25) = 6;
    *(void *)(v1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE775F8();
    *(void *)(v1 + 88) = v13;
    LOBYTE(v25) = 7;
    *(void *)(v1 + 96) = sub_1ACE775F8();
    *(void *)(v1 + 104) = v14;
    LOBYTE(v25) = 8;
    *(unsigned char *)(v1 + 112) = sub_1ACE77608();
    LOBYTE(v25) = 9;
    *(void *)(v1 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE775F8();
    *(void *)(v1 + 128) = v15;
    LOBYTE(v25) = 10;
    *(void *)(v1 + 136) = sub_1ACE775F8();
    *(void *)(v1 + 144) = v16;
    LOBYTE(v25) = 11;
    *(unsigned char *)(v1 + 152) = sub_1ACE77608();
    LOBYTE(v25) = 12;
    *(void *)(v1 + 16sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = sub_1ACE775F8();
    *(void *)(v1 + 168) = v17;
    LOBYTE(v25) = 13;
    *(unsigned char *)(v1 + 176) = sub_1ACE77608();
    type metadata accessor for ValueProposition();
    char v26 = 14;
    sub_1ACB292C8(&qword_1EB771210, v18, (void (*)(uint64_t))type metadata accessor for ValueProposition);
    sub_1ACE77638();
    *(void *)(v1 + 184) = v25;
    LOBYTE(v25) = 15;
    *(void *)(v1 + 192) = sub_1ACE775F8();
    *(void *)(v1 + 20sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v19;
    char v26 = 16;
    sub_1ACB29310();
    sub_1ACE77638();
    *(unsigned char *)(v1 + 208) = v25;
    LOBYTE(v25) = 17;
    *(void *)(v1 + 216) = sub_1ACE775F8();
    *(void *)(v1 + 224) = v20;
    type metadata accessor for ServerArtwork();
    char v26 = 18;
    sub_1ACB292C8(&qword_1EB766D40, 255, (void (*)(uint64_t))type metadata accessor for ServerArtwork);
    sub_1ACE77638();
    *(void *)(v1 + 232) = v25;
    LOBYTE(v25) = 19;
    uint64_t v21 = sub_1ACE775F8();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 24sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v21;
    *(void *)(v3 + 248) = v23;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACB287B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB28D98(a1, (void (*)(void))type metadata accessor for SubscriptionOffer, (uint64_t (*)(uint64_t))SubscriptionOffer.init(from:), a2);
}

uint64_t sub_1ACB287F4(void *a1)
{
  return sub_1ACB2794C(a1);
}

uint64_t ValueProposition.price.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ValueProposition.priceForDisplay.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACB28878()
{
  if (*v0) {
    return 0x726F466563697270;
  }
  else {
    return 0x6563697270;
  }
}

uint64_t sub_1ACB288BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB2BA8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACB288E4(uint64_t a1)
{
  unint64_t v2 = sub_1ACB29364();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB28920(uint64_t a1)
{
  unint64_t v2 = sub_1ACB29364();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ValueProposition.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ValueProposition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB289C4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F21B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB29364();
  sub_1ACE77C78();
  v8[15] = 0;
  sub_1ACE77748();
  if (!v1)
  {
    v8[14] = 1;
    sub_1ACE77748();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ValueProposition.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ValueProposition.init(from:)(a1);
  return v2;
}

uint64_t ValueProposition.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7719A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB29364();
  sub_1ACE77C48();
  if (v2)
  {
    type metadata accessor for ValueProposition();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v16 = 0;
    *(void *)(v1 + 16) = sub_1ACE77658();
    *(void *)(v1 + 24) = v9;
    char v15 = 1;
    uint64_t v11 = sub_1ACE77658();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v3 + 32) = v11;
    *(void *)(v3 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1ACB28D54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB28D98(a1, (void (*)(void))type metadata accessor for ValueProposition, (uint64_t (*)(uint64_t))ValueProposition.init(from:), a2);
}

uint64_t sub_1ACB28D98@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  a2();
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_1ACB28E08(void *a1)
{
  return sub_1ACB289C4(a1);
}

unint64_t sub_1ACB28E2C()
{
  unint64_t result = qword_1EB767070;
  if (!qword_1EB767070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767070);
  }
  return result;
}

unint64_t sub_1ACB28E80()
{
  unint64_t result = qword_1EB767088;
  if (!qword_1EB767088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767088);
  }
  return result;
}

uint64_t type metadata accessor for ChannelEditorialArtworkContainer()
{
  return self;
}

uint64_t type metadata accessor for SubscriptionOffer()
{
  return self;
}

unint64_t sub_1ACB28F1C()
{
  unint64_t result = qword_1E99F2170;
  if (!qword_1E99F2170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2170);
  }
  return result;
}

unint64_t sub_1ACB28F70()
{
  unint64_t result = qword_1EB767098;
  if (!qword_1EB767098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767098);
  }
  return result;
}

uint64_t sub_1ACB28FC4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB768E30);
    sub_1ACB292C8(a2, v5, (void (*)(uint64_t))type metadata accessor for SubscriptionOffer);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACB29058()
{
  unint64_t result = qword_1EB76B550;
  if (!qword_1EB76B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B550);
  }
  return result;
}

unint64_t sub_1ACB290AC()
{
  unint64_t result = qword_1E99F2180;
  if (!qword_1E99F2180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2180);
  }
  return result;
}

unint64_t sub_1ACB29100()
{
  unint64_t result = qword_1EB768480;
  if (!qword_1EB768480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768480);
  }
  return result;
}

unint64_t sub_1ACB29154()
{
  unint64_t result = qword_1EB771238;
  if (!qword_1EB771238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771238);
  }
  return result;
}

unint64_t sub_1ACB291A8()
{
  unint64_t result = qword_1E99F21A0;
  if (!qword_1E99F21A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21A0);
  }
  return result;
}

uint64_t type metadata accessor for ValueProposition()
{
  return self;
}

unint64_t sub_1ACB29220()
{
  unint64_t result = qword_1E99F21B0;
  if (!qword_1E99F21B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21B0);
  }
  return result;
}

unint64_t sub_1ACB29274()
{
  unint64_t result = qword_1EB771250;
  if (!qword_1EB771250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771250);
  }
  return result;
}

uint64_t sub_1ACB292C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACB29310()
{
  unint64_t result = qword_1EB771260;
  if (!qword_1EB771260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771260);
  }
  return result;
}

unint64_t sub_1ACB29364()
{
  unint64_t result = qword_1EB7711F8;
  if (!qword_1EB7711F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711F8);
  }
  return result;
}

unint64_t sub_1ACB293BC()
{
  unint64_t result = qword_1E99F21C0;
  if (!qword_1E99F21C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21C0);
  }
  return result;
}

unint64_t sub_1ACB29414()
{
  unint64_t result = qword_1E99F21C8;
  if (!qword_1E99F21C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21C8);
  }
  return result;
}

unint64_t sub_1ACB2946C()
{
  unint64_t result = qword_1E99F21D0;
  if (!qword_1E99F21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21D0);
  }
  return result;
}

unint64_t sub_1ACB294C4()
{
  unint64_t result = qword_1E99F21D8;
  if (!qword_1E99F21D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21D8);
  }
  return result;
}

uint64_t method lookup function for ServerChannel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServerChannel);
}

uint64_t dispatch thunk of ServerChannel.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ServerChannel.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for ChannelAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelAttributes);
}

uint64_t dispatch thunk of ChannelAttributes.subscriptionEnabledDateResolved.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ChannelAttributes.allOffers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ChannelAttributes.appType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ChannelAttributes.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ChannelAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

ValueMetadata *type metadata accessor for ChannelAttributes.DisplayType()
{
  return &type metadata for ChannelAttributes.DisplayType;
}

ValueMetadata *type metadata accessor for ChannelAttributes.SubscriptionType()
{
  return &type metadata for ChannelAttributes.SubscriptionType;
}

uint64_t method lookup function for ChannelRelationships(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelRelationships);
}

uint64_t dispatch thunk of ChannelRelationships.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ChannelEditorialArtworkContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelEditorialArtworkContainer);
}

uint64_t dispatch thunk of ChannelEditorialArtworkContainer.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ChannelEditorialArtworkContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for SubscriptionOffer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SubscriptionOffer);
}

uint64_t dispatch thunk of SubscriptionOffer.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of SubscriptionOffer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

unsigned char *_s18PodcastsFoundation17ChannelAttributesC11DisplayTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB298A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOffer.Kind()
{
  return &type metadata for SubscriptionOffer.Kind;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionOffer.AppType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB299A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOffer.AppType()
{
  return &type metadata for SubscriptionOffer.AppType;
}

uint64_t method lookup function for ValueProposition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ValueProposition);
}

uint64_t dispatch thunk of ValueProposition.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ValueProposition.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for ValueProposition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB29B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueProposition.CodingKeys()
{
  return &type metadata for ValueProposition.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SubscriptionOffer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SubscriptionOffer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB29CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOffer.CodingKeys()
{
  return &type metadata for SubscriptionOffer.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ChannelEditorialArtworkContainer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB29DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelEditorialArtworkContainer.CodingKeys()
{
  return &type metadata for ChannelEditorialArtworkContainer.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ChannelRelationships.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACB29E90);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelRelationships.CodingKeys()
{
  return &type metadata for ChannelRelationships.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CropCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChannelAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB2A024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelAttributes.CodingKeys()
{
  return &type metadata for ChannelAttributes.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServerChannel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB2A128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerChannel.CodingKeys()
{
  return &type metadata for ServerChannel.CodingKeys;
}

unint64_t sub_1ACB2A164()
{
  unint64_t result = qword_1E99F21E0;
  if (!qword_1E99F21E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21E0);
  }
  return result;
}

unint64_t sub_1ACB2A1BC()
{
  unint64_t result = qword_1E99F21E8;
  if (!qword_1E99F21E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21E8);
  }
  return result;
}

unint64_t sub_1ACB2A214()
{
  unint64_t result = qword_1E99F21F0;
  if (!qword_1E99F21F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21F0);
  }
  return result;
}

unint64_t sub_1ACB2A26C()
{
  unint64_t result = qword_1E99F21F8;
  if (!qword_1E99F21F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F21F8);
  }
  return result;
}

unint64_t sub_1ACB2A2C4()
{
  unint64_t result = qword_1E99F2200;
  if (!qword_1E99F2200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2200);
  }
  return result;
}

unint64_t sub_1ACB2A31C()
{
  unint64_t result = qword_1E99F2208;
  if (!qword_1E99F2208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2208);
  }
  return result;
}

unint64_t sub_1ACB2A374()
{
  unint64_t result = qword_1EB771208;
  if (!qword_1EB771208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771208);
  }
  return result;
}

unint64_t sub_1ACB2A3CC()
{
  unint64_t result = qword_1EB771200;
  if (!qword_1EB771200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771200);
  }
  return result;
}

unint64_t sub_1ACB2A424()
{
  unint64_t result = qword_1EB770B38;
  if (!qword_1EB770B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B38);
  }
  return result;
}

unint64_t sub_1ACB2A47C()
{
  unint64_t result = qword_1EB771240;
  if (!qword_1EB771240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771240);
  }
  return result;
}

unint64_t sub_1ACB2A4D4()
{
  unint64_t result = qword_1EB768490;
  if (!qword_1EB768490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768490);
  }
  return result;
}

unint64_t sub_1ACB2A52C()
{
  unint64_t result = qword_1EB768488;
  if (!qword_1EB768488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB768488);
  }
  return result;
}

unint64_t sub_1ACB2A584()
{
  unint64_t result = qword_1E99F2210;
  if (!qword_1E99F2210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2210);
  }
  return result;
}

unint64_t sub_1ACB2A5DC()
{
  unint64_t result = qword_1E99F2218;
  if (!qword_1E99F2218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2218);
  }
  return result;
}

unint64_t sub_1ACB2A634()
{
  unint64_t result = qword_1EB767080;
  if (!qword_1EB767080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767080);
  }
  return result;
}

unint64_t sub_1ACB2A68C()
{
  unint64_t result = qword_1EB767078;
  if (!qword_1EB767078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767078);
  }
  return result;
}

unint64_t sub_1ACB2A6E4()
{
  unint64_t result = qword_1EB766E38;
  if (!qword_1EB766E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766E38);
  }
  return result;
}

unint64_t sub_1ACB2A73C()
{
  unint64_t result = qword_1EB766E30;
  if (!qword_1EB766E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766E30);
  }
  return result;
}

uint64_t sub_1ACB2A790(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1717924456 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1ACB2A9A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E756F43776F6873 && a2 == 0xE900000000000074 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACEC3D70 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5479616C70736964 && a2 == 0xEB00000000657079 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ACEC3DC0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC3E30 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC3D50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACEC3D30 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x777472416F676F6CLL && a2 == 0xEB000000006B726FLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC8EA0 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ACEC3D10 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC3E10)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_1ACB2AFF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001ACEC8F30 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ACEC8F50 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ACEC8F70 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ACEC8F90 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C4665726F7473 && a2 == 0xED00006573616377 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACEC8FC0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1ACB2B270(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C696D61467369 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C69626967696C65 && a2 == 0xEF65707954797469 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E726566666FLL && a2 == 0xE900000000000065 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x646F69726570 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E65647574537369 && a2 == 0xE900000000000074 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D61726150797562 && a2 == 0xE900000000000073 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6169725465657266 && a2 == 0xE90000000000006CLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6169725465657266 && a2 == 0xEF646F697265506CLL || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x656572467369 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC9080 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x65707954707061 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6F77747241707061 && a2 == 0xEA00000000006B72 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ACEC90C0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 19;
    }
    else {
      return 20;
    }
  }
}

uint64_t sub_1ACB2BA8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F466563697270 && a2 == 0xEF79616C70736944)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1ACB2BB9C()
{
  unint64_t result = qword_1EB771258;
  if (!qword_1EB771258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771258);
  }
  return result;
}

unint64_t sub_1ACB2BBF0()
{
  unint64_t result = qword_1EB771248;
  if (!qword_1EB771248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771248);
  }
  return result;
}

unint64_t sub_1ACB2BC44()
{
  unint64_t result = qword_1E99F2220;
  if (!qword_1E99F2220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2220);
  }
  return result;
}

unint64_t sub_1ACB2BC98()
{
  unint64_t result = qword_1EB767090;
  if (!qword_1EB767090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB767090);
  }
  return result;
}

id MAPITranscriptTimeBombedURLProvider.workQueue.getter()
{
  return *v0;
}

uint64_t MAPITranscriptTimeBombedURLProvider.init(workQueue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = sub_1ACA36EF0(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A890);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v4;
  *a2 = a1;
  a2[1] = result;
  return result;
}

uint64_t MAPITranscriptTimeBombedURLProvider.timeBombedURLs(for:)()
{
  uint64_t v2 = *(void *)(v0 + 8);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1ACB2BED0((uint64_t *)(v2 + 16), &v3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  return v3;
}

uint64_t sub_1ACB2BDDC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v11 = sub_1ACA66220(a2), (v12 & 1) != 0))
  {
    *a5 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    return swift_retain();
  }
  else
  {
    v16[0] = a3;
    v16[1] = a4;
    uint64_t v14 = sub_1ACB2BEF0((uint64_t)a2);
    sub_1ACA69FEC((uint64_t)a2, (uint64_t)v16);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *a1;
    *a1 = 0x8000000000000000;
    sub_1ACD0D090(v14, v16, isUniquelyReferenced_nonNull_native);
    *a1 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = sub_1ACA6A048((uint64_t)v16);
    *a5 = v14;
  }
  return result;
}

uint64_t sub_1ACB2BED0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB2BDDC(a1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1ACB2BEF0(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2230);
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  BOOL v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2238);
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2240);
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  id v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2248);
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v42 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2250);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  unsigned __int8 v50 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)v1;
  uint64_t v14 = *(void *)(v1 + 8);
  sub_1ACA69FEC(a1, (uint64_t)&v57);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v14;
  long long v16 = v60;
  *(_OWORD *)(v15 + 64) = v59;
  *(_OWORD *)(v15 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v16;
  *(void *)(v15 + 96) = v61;
  long long v17 = v58;
  *(_OWORD *)(v15 + 32) = v57;
  *(_OWORD *)(v15 + 48) = v17;
  id v18 = v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2258);
  sub_1ACA51EA4(&qword_1E99F2260, &qword_1E99F2258);
  sub_1ACE75A38();
  *(void *)&long long v57 = v18;
  uint64_t v19 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1E99F2268, &qword_1E99F2230);
  sub_1ACA93A6C();
  id v20 = v18;
  uint64_t v21 = v9;
  uint64_t v22 = v44;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v22);
  type metadata accessor for TranscriptData.TimeBombedURLs();
  sub_1ACA51EA4(&qword_1E99F2270, &qword_1E99F2238);
  uint64_t v23 = v43;
  uint64_t v24 = v47;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v24);
  uint64_t v25 = v42;
  sub_1ACD4A3A0(v42);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v48);
  uint64_t v26 = v41;
  sub_1ACA69FEC(v41, (uint64_t)&v57);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v20;
  *(void *)(v27 + 24) = v14;
  long long v28 = v60;
  *(_OWORD *)(v27 + 64) = v59;
  *(_OWORD *)(v27 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v28;
  *(void *)(v27 + 96) = v61;
  long long v29 = v58;
  *(_OWORD *)(v27 + 32) = v57;
  *(_OWORD *)(v27 + 48) = v29;
  sub_1ACA69FEC(v26, (uint64_t)&v57);
  sub_1ACA69FEC((uint64_t)&v57, (uint64_t)v55);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v20;
  *(void *)(v30 + 24) = v14;
  long long v31 = v55[3];
  *(_OWORD *)(v30 + 64) = v55[2];
  *(_OWORD *)(v30 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v31;
  *(void *)(v30 + 96) = v56;
  long long v32 = v55[1];
  *(_OWORD *)(v30 + 32) = v55[0];
  *(_OWORD *)(v30 + 48) = v32;
  sub_1ACA51EA4(&qword_1E99F2278, &qword_1E99F2248);
  id v33 = v20;
  swift_retain_n();
  id v34 = v33;
  uint64_t v35 = v51;
  unint64_t v36 = v50;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  sub_1ACA6A048((uint64_t)&v57);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v25, v35);
  sub_1ACA51EA4(&qword_1E99F2280, &qword_1E99F2250);
  uint64_t v37 = v52;
  uint64_t v38 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v37);
  return v38;
}

uint64_t sub_1ACB2C680@<X0>(void *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MediaRequest.Params();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v8 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  sub_1ACB2CA44(a1, (uint64_t)&v18 - v9);
  sub_1ACA394B0((uint64_t)v10, (uint64_t)v8);
  sub_1ACA69FEC((uint64_t)a1, (uint64_t)v19);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1ACA56190((uint64_t)v8, v12 + v11);
  unint64_t v13 = v12 + ((v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v14 = v19[3];
  *(_OWORD *)(v13 + 32) = v19[2];
  *(_OWORD *)(v13 + 48) = v14;
  *(void *)(v13 + 64) = v20;
  long long v15 = v19[1];
  *(_OWORD *)unint64_t v13 = v19[0];
  *(_OWORD *)(v13 + 16) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2258);
  swift_allocObject();
  uint64_t v16 = sub_1ACE75A18();
  uint64_t result = sub_1ACA39598((uint64_t)v10);
  *a2 = v16;
  return result;
}

uint64_t sub_1ACB2C81C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes;
  uint64_t v5 = v3 + *(int *)(type metadata accessor for ServerTranscript.Attributes(0) + 20) + v4;
  uint64_t v6 = type metadata accessor for ServerTranscript.Attributes.AssetUrls(0);
  sub_1ACA615AC(v5 + *(int *)(v6 + 20), a2);
  uint64_t v7 = a2 + *(int *)(type metadata accessor for TranscriptData.TimeBombedURLs() + 20);
  return sub_1ACA615AC(v5, v7);
}

uint64_t sub_1ACB2C8A4(uint64_t a1, uint64_t a2, os_unfair_lock_s *a3)
{
  uint64_t v3 = (uint64_t *)&a3[4];
  uint64_t v4 = a3 + 6;
  os_unfair_lock_lock(a3 + 6);
  sub_1ACB2E1A4(v3, &v6);
  os_unfair_lock_unlock(v4);
  return swift_release();
}

uint64_t sub_1ACB2C908(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = (uint64_t *)&a2[4];
  uint64_t v3 = a2 + 6;
  os_unfair_lock_lock(a2 + 6);
  sub_1ACB2D934(v2, &v5);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_1ACB2C96C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1ACA66220(a2);
  char v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *a1;
    uint64_t v13 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACD06FC4();
      uint64_t v11 = v13;
    }
    sub_1ACA6A048(*(void *)(v11 + 48) + 72 * v6);
    uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 8 * v6);
    sub_1ACB1BDDC(v6, v11);
    *a1 = v11;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  *a3 = v12;
  return result;
}

uint64_t sub_1ACB2CA44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = 0;
  memset(v27, 0, sizeof(v27));
  char v29 = 4;
  char v26 = 0;
  char v25 = 1;
  char v24 = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ACE843F0;
  *(void *)uint64_t v23 = *a1;
  sub_1ACA55E4C();
  *(void *)(v6 + 32) = sub_1ACE770B8();
  *(void *)(v6 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v7;
  v23[0] = 1;
  char v22 = 1;
  uint64_t v8 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v10 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v11 = sub_1ACA35F90(v9);
  unint64_t v12 = sub_1ACA35FB0(v9);
  unint64_t v13 = sub_1ACA360BC(v9);
  unint64_t v14 = sub_1ACA360BC(v9);
  unint64_t v15 = sub_1ACA360DC(v9);
  *((void *)&v20 + 1) = sub_1ACA360FC(v9);
  *(void *)&long long v20 = v15;
  *((void *)&v19 + 1) = v9;
  *((void *)&v18 + 1) = &unk_1F0380578;
  *(void *)&long long v19 = v9;
  *((void *)&v17 + 1) = v13;
  *(void *)&long long v18 = v14;
  *(void *)&long long v17 = v9;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v27, &v26, &v25, &v24, v10, v11, v12, v9, v21, v17, v18, v19, v6, v23, 0, 1, v20, 0, 1,
           &v22,
           0,
           (uint64_t)v5,
           0,
           0,
           0,
           0,
           0,
           v9,
           0,
           0,
           2);
}

uint64_t sub_1ACB2CC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a3;
  uint64_t v8 = type metadata accessor for MediaRequest.Params();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  id v13 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  swift_retain();
  id v32 = objc_msgSend(v13, sel_init);
  sub_1ACA69FEC(a4, (uint64_t)v34);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1ACB2DC40;
  *(void *)(v14 + 24) = v12;
  long long v15 = v34[3];
  *(_OWORD *)(v14 + 64) = v34[2];
  *(_OWORD *)(v14 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v15;
  *(void *)(v14 + 96) = v35;
  long long v16 = v34[1];
  *(_OWORD *)(v14 + 32) = v34[0];
  *(_OWORD *)(v14 + 48) = v16;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v18 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v18 + 2) = v17;
  *((void *)v18 + 3) = sub_1ACB2DCD0;
  *((void *)v18 + 4) = v14;
  sub_1ACE77B88();
  sub_1ACA394B0(a3, (uint64_t)v11);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1ACA56190((uint64_t)v11, v23 + v19);
  *(void *)(v23 + v2sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = MEMORY[0x1E4FBC860];
  unint64_t v24 = v23 + v21;
  *(void *)(v24 + 64) = v40;
  long long v25 = v39;
  *(_OWORD *)(v24 + 32) = v38;
  *(_OWORD *)(v24 + 48) = v25;
  long long v26 = v37;
  *(_OWORD *)unint64_t v24 = v36;
  *(_OWORD *)(v24 + 16) = v26;
  uint64_t v27 = v32;
  *(void *)(v23 + v22) = v32;
  uint64_t v28 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v28 = sub_1ACA394A4;
  v28[1] = v18;
  swift_retain();
  swift_retain();
  id v29 = v27;
  swift_retain();
  sub_1ACB0443C(v33, 0, (uint64_t)sub_1ACA3ABF0, v23);
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

void sub_1ACB2CF54(unint64_t a1, int a2, int a3, int a4, id a5, void (*a6)(void *, void), int a7, uint64_t a8)
{
  uint64_t v9 = sub_1ACB2DF88(a8, a1, a5);
  a6(v9, 0);
  sub_1ACB2E108(v9);
}

uint64_t sub_1ACB2CFD0(void *a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16ServerTranscript_attributes);
  if (*v2 == *(void *)(a2 + 8) && v2[1] == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_1ACE77848() & 1;
  }
}

uint64_t sub_1ACB2D03C()
{
  uint64_t v2 = *(void *)(v0 + 8);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1ACB2E18C((uint64_t *)(v2 + 16), &v3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  return v3;
}

uint64_t _s18PodcastsFoundation35MAPITranscriptTimeBombedURLProviderV0C5ErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1ACB2D89C(a1, (uint64_t)v11);
  sub_1ACB2D89C(a2, (uint64_t)&v13);
  if (v12 == 2)
  {
    if ((void)v14 != 2) {
      goto LABEL_12;
    }
  }
  else
  {
    if (v12 != 1)
    {
      if (v12)
      {
        sub_1ACB2D89C((uint64_t)v11, (uint64_t)v10);
        uint64_t v4 = v10[9];
        if ((unint64_t)v14 >= 3)
        {
          uint64_t v6 = v18;
          v8[2] = v15;
          void v8[3] = v16;
          uint64_t v9 = v17;
          v8[0] = v13;
          v8[1] = v14;
          BOOL v7 = _s18PodcastsFoundation17TranscriptRequestV2eeoiySbAC_ACtFZ_0(v10, (uint64_t *)v8);
          sub_1ACA6A048((uint64_t)v10);
          if (v7)
          {
            char v3 = sub_1ACA87830(v4, v6);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1ACA6A048((uint64_t)v8);
            sub_1ACB2D8D4((uint64_t)v11);
            return v3 & 1;
          }
          sub_1ACA6A048((uint64_t)v8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1ACB2D8D4((uint64_t)v11);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        sub_1ACA6A048((uint64_t)v10);
      }
      else if (!(void)v14)
      {
        goto LABEL_9;
      }
LABEL_12:
      sub_1ACA50E78((uint64_t)v11, &qword_1E99F2228);
LABEL_13:
      char v3 = 0;
      return v3 & 1;
    }
    if ((void)v14 != 1) {
      goto LABEL_12;
    }
  }
LABEL_9:
  sub_1ACB2D8D4((uint64_t)v11);
  char v3 = 1;
  return v3 & 1;
}

void *initializeBufferWithCopyOfBuffer for MAPITranscriptTimeBombedURLProvider(void *a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for MAPITranscriptTimeBombedURLProvider(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for MAPITranscriptTimeBombedURLProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for MAPITranscriptTimeBombedURLProvider(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MAPITranscriptTimeBombedURLProvider()
{
  return &type metadata for MAPITranscriptTimeBombedURLProvider;
}

unint64_t destroy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 56)) {
      __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v4;
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    id v5 = (_OWORD *)(a2 + 32);
    uint64_t v6 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v6;
      *(void *)(a1 + 64) = v7;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32, v6);
    }
    else
    {
      long long v10 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *v5;
      *(_OWORD *)(a1 + 48) = v10;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
    }
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >= 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      uint64_t v5 = *(void *)(a2 + 56);
      if (*(void *)(a1 + 56))
      {
        if (v5)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_19:
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
        __swift_destroy_boxed_opaque_existential_0(a1 + 32);
      }
      else if (v5)
      {
        *(void *)(a1 + 56) = v5;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
        goto LABEL_19;
      }
      long long v14 = *(_OWORD *)(a2 + 32);
      long long v15 = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v14;
      *(_OWORD *)(a1 + 48) = v15;
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 56)) {
      __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v4 < 0xFFFFFFFF)
  {
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v9 = *(_OWORD *)(a2 + 16);
    long long v10 = *(_OWORD *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = (long long *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32, v8);
  }
  else
  {
    long long v12 = *v7;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *uint64_t v6 = v12;
    *(_OWORD *)(a1 + 48) = v13;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 56)) {
      __swift_destroy_boxed_opaque_existential_0(a1 + 32);
    }
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1ACB2D83C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1ACB2D854(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 72) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError()
{
  return &type metadata for MAPITranscriptTimeBombedURLProvider.MAPITranscriptError;
}

uint64_t sub_1ACB2D89C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACB2D8D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACB2D908@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB2C680((void *)(v1 + 32), a1);
}

uint64_t sub_1ACB2D918(uint64_t a1)
{
  return sub_1ACB2C8A4(a1, *(void *)(v1 + 16), *(os_unfair_lock_s **)(v1 + 24));
}

uint64_t sub_1ACB2D928()
{
  return sub_1ACB2C908(*(void *)(v0 + 16), *(os_unfair_lock_s **)(v0 + 24));
}

uint64_t sub_1ACB2D934@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB2C96C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1ACB2D950()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(v1 + 104);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v3 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + v3 + 32);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACB2DB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1ACB2CC7C(a1, a2, v2 + v6, v7);
}

uint64_t sub_1ACB2DC08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB2DC40(uint64_t a1, char a2)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1ACB2DC80()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  }
  return swift_deallocObject();
}

void sub_1ACB2DCD0(unint64_t a1, int a2, int a3, int a4, void *a5)
{
  sub_1ACB2CF54(a1, a2, a3, a4, a5, *(void (**)(void *, void))(v5 + 16), *(void *)(v5 + 24), v5 + 32);
}

uint64_t sub_1ACB2DCDC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB2DD14()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB2DD54()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

void *sub_1ACB2DF88(uint64_t a1, unint64_t a2, id a3)
{
  if (!a3)
  {
    if (a2)
    {
      uint64_t v8 = sub_1ACC2BAF4(a2);
      if (v8)
      {
        unint64_t v9 = v8;
        MEMORY[0x1F4188790](v8);
        _OWORD v14[2] = a1;
        long long v10 = sub_1ACD4AAEC((uint64_t (*)(id *))sub_1ACB2E168, (uint64_t)v14, v9);
        if (v10)
        {
          uint64_t v3 = v10;
          swift_bridgeObjectRelease();
          return v3;
        }
        sub_1ACB2E114();
        swift_allocError();
        uint64_t v3 = (void *)v13;
        sub_1ACA69FEC(a1, v13);
        v3[9] = v9;
      }
      else
      {
        sub_1ACB2E114();
        swift_allocError();
        *(void *)uint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        *(void *)(v12 + 16) = 1;
        *(_OWORD *)(v12 + 24) = 0u;
        *(_OWORD *)(v12 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
        *(_OWORD *)(v12 + 56) = 0u;
        *(void *)(v12 + 72) = 0;
      }
    }
    else
    {
      sub_1ACB2E114();
      swift_allocError();
      *long long v11 = 0u;
      v11[1] = 0u;
      void v11[2] = 0u;
      void v11[3] = 0u;
      v11[4] = 0u;
    }
  }
  id v5 = a3;
  swift_willThrow();
  return v3;
}

void sub_1ACB2E108(id a1)
{
}

unint64_t sub_1ACB2E114()
{
  unint64_t result = qword_1E99F2288;
  if (!qword_1E99F2288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2288);
  }
  return result;
}

uint64_t sub_1ACB2E168(void *a1)
{
  return sub_1ACB2CFD0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1ACB2E18C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACB2BED0(a1, a2);
}

uint64_t sub_1ACB2E1A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACB2D934(a1, a2);
}

uint64_t sub_1ACB2E1BC(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_1ACDE6EC8(v3);
    *uint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_1ACE76598();
      return v10;
    }
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACB2E2A0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1ACDE6F08(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_1ACB39CA8(v10, a2, type metadata accessor for StoreFeedUpdater.Update);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1ACE77568();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *unint64_t v2 = v5;
  return result;
}

void *sub_1ACB2E428()
{
  return sub_1ACB2E434(&qword_1EB76DE70);
}

void *sub_1ACB2E434(uint64_t *a1)
{
  uint64_t v3 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1ACE76CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1E4FBC870];
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_allocObject();
  uint64_t v9 = sub_1ACE75938();
  v1[3] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  uint64_t v11 = MEMORY[0x1E4FBC868];
  v1[4] = v10;
  v1[5] = v11;
  sub_1ACA51E1C();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC68], v5);
  sub_1ACE75E08();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1ACB3AB2C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  v1[6] = sub_1ACE76D28();
  void v1[2] = v9;
  swift_retain();
  return v1;
}

uint64_t sub_1ACB2E6E8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 32) + 16);
  return swift_retain();
}

uint64_t StoreFeedUpdater.__allocating_init(bagConfiguration:ctx:ingesterProvider:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  StoreFeedUpdater.init(bagConfiguration:ctx:ingesterProvider:)(a1, a2, a3);
  return v6;
}

void *StoreFeedUpdater.init(bagConfiguration:ctx:ingesterProvider:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a1;
  uint64_t v45 = a3;
  id v41 = a2;
  uint64_t v43 = type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1ACE76CE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA51E1C();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC68], v8);
  sub_1ACE75E08();
  v46[0] = MEMORY[0x1E4FBC860];
  sub_1ACB3AB2C((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  _OWORD v3[2] = sub_1ACE76D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76C868);
  swift_allocObject();
  v3[4] = sub_1ACB2E434(&qword_1EB76DE78);
  uint64_t v12 = MEMORY[0x1E4FBC868];
  v3[7] = MEMORY[0x1E4FBC868];
  v3[8] = v12;
  if (objc_msgSend(self, sel_isRunningOnHomepod))
  {
    if (qword_1E99EFE70 != -1) {
      swift_once();
    }
    uint64_t v13 = &qword_1E99F16E0;
  }
  else
  {
    if (qword_1EB76CBB8 != -1) {
      swift_once();
    }
    uint64_t v13 = &qword_1EB76CBB0;
  }
  uint64_t v14 = (void *)*v13;
  uint64_t v15 = *(void *)(*v13 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentDeltaUpdateLimit);
  uint64_t v40 = type metadata accessor for FeedManagerBagConfiguration;
  uint64_t v16 = v44;
  uint64_t v17 = v42;
  sub_1ACB37844(v44, v42, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  sub_1ACA3E158(v45, (uint64_t)v46);
  uint64_t v18 = (void *)v4[2];
  type metadata accessor for StoreFeedUpdater.Queue(0);
  swift_allocObject();
  unint64_t v19 = v14;
  id v20 = v41;
  id v21 = v18;
  unint64_t v22 = sub_1ACB37658(0x65755161746C6544, 0xEA00000000006575, v15, v17, v20, (uint64_t)v46, v21);

  v4[5] = v22;
  uint64_t v23 = *(void *)&v19[OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentBootstrapUpdateLimit];
  sub_1ACB37844(v16, v17, (uint64_t (*)(void))v40);
  uint64_t v24 = v45;
  sub_1ACA3E158(v45, (uint64_t)v46);
  swift_allocObject();
  id v25 = v20;
  id v26 = v21;
  uint64_t v27 = sub_1ACB37658(0x61727473746F6F42, 0xEE00657565755170, v23, v17, v25, (uint64_t)v46, v26);

  __swift_destroy_boxed_opaque_existential_0(v24);
  void v4[6] = v27;
  uint64_t v28 = v43;
  *((unsigned char *)v4 + 72) = *(unsigned char *)(v16 + *(int *)(v43 + 20));
  uint64_t v29 = *(void *)(v16 + *(int *)(v28 + 28));
  swift_bridgeObjectRetain();
  sub_1ACB39C48(v16, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  v4[10] = v29;
  BOOL v4[3] = v25;
  uint64_t v30 = v4[5];
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  id v32 = (uint64_t (**)(uint64_t, uint64_t))(v30
                                                  + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  uint64_t v33 = *(void *)(v30 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  void *v32 = sub_1ACB37814;
  v32[1] = (uint64_t (*)(uint64_t, uint64_t))v31;
  sub_1ACA76F34(v33);
  uint64_t v34 = v4[6];
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  long long v36 = (uint64_t (**)(uint64_t, uint64_t))(v34
                                                  + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  uint64_t v37 = *(void *)(v34 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  *long long v36 = sub_1ACB37814;
  v36[1] = (uint64_t (*)(uint64_t, uint64_t))v35;
  sub_1ACA76F34(v37);
  return v4;
}

uint64_t type metadata accessor for StoreFeedUpdater.Queue(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB76B138);
}

void sub_1ACB2ED30(uint64_t a1)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v4 = *(void *)(updated - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + *(int *)(MEMORY[0x1F4188790](updated - 8) + 36));
  aBlock[0] = v7;
  uint64_t v8 = sub_1ACE777C8();
  unint64_t v10 = v9;
  if (objc_msgSend(self, sel_isEmpty_, v7))
  {
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D4E0);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76C08();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 141558275;
      uint64_t v25 = 1752392040;
      aBlock[0] = v15;
      sub_1ACE76FF8();
      *(_WORD *)(v14 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1ACA3189C(v8, v10, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v12, v13, "Update request for %{private,mask.hash}s denied because it's not a valid adamID", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v15, -1, -1);
      MEMORY[0x1AD11B340](v14, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1ACB18F1C();
    unint64_t v22 = (void *)swift_allocError();
    *uint64_t v23 = 0;
    FeedUpdateRequest.failRequest(_:)(v22);
  }
  else
  {
    id v24 = *(id *)(v1 + 24);
    sub_1ACB37844(a1, (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v17 = (v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    sub_1ACB39CA8((uint64_t)v6, v19 + v16, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    *(void *)(v19 + v17) = v1;
    *(void *)(v19 + v18) = v7;
    id v20 = (uint64_t *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8));
    *id v20 = v8;
    v20[1] = v10;
    aBlock[4] = (uint64_t)sub_1ACB37AF8;
    void aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1ACA6DA9C;
    void aBlock[3] = (uint64_t)&block_descriptor_24;
    id v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_performBlock_, v21);
    _Block_release(v21);
  }
}

uint64_t sub_1ACB2F120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v130 = a5;
  uint64_t v112 = a4;
  uint64_t v115 = a3;
  uint64_t v129 = a2;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v125 = *(void *)(v6 - 8);
  uint64_t v126 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v123 = &v109[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v124 = sub_1ACE75E48();
  uint64_t v122 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v121 = &v109[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v10 = *(void *)(v9 - 8);
  os_log_t v118 = (int *)v9;
  uint64_t v119 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = &v109[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v120 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v127 = &v109[-v14];
  uint64_t v15 = sub_1ACE753F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = &v109[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  id v21 = &v109[-v20];
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v22 = MEMORY[0x1F4188790](updated);
  unint64_t v116 = &v109[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  id v113 = &v109[-v25];
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = &v109[-v26];
  if (qword_1EB76D390 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1ACE75438();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D378);
  sub_1ACB37844(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  sub_1ACE753E8();
  uint64_t v29 = sub_1ACE75428();
  int v30 = sub_1ACE76E28();
  char v31 = sub_1ACE76FA8();
  uint64_t v117 = a1;
  if (v31)
  {
    id v32 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16);
    int v110 = v30;
    uint64_t v33 = v19;
    v32(v19, v21, v15);
    uint64_t v34 = swift_slowAlloc();
    uint64_t v111 = v15;
    uint64_t v35 = (uint8_t *)v34;
    uint64_t v36 = swift_slowAlloc();
    aBlock[0] = v36;
    uint64_t v114 = v13;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v37 = sub_1ACE750C8();
    uint64_t v131 = sub_1ACA3189C(v37, v38, aBlock);
    uint64_t v39 = v129;
    os_log_type_t v13 = v114;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB39C48((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    os_signpost_id_t v40 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v29, (os_signpost_type_t)v110, v40, "PrepareForFeedUpdateScheduled", "[identifier=%{name=identifier}s] PrepareForFeedUpdateScheduled", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v36, -1, -1);
    MEMORY[0x1AD11B340](v35, -1, -1);

    uint64_t v41 = v39;
    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
    uint64_t v43 = v111;
    v42(v21, v111);
    v42(v33, v43);
  }
  else
  {

    sub_1ACB39C48((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v21, v15);
    uint64_t v41 = v129;
  }
  id v44 = objc_msgSend(*(id *)(v41 + 24), sel_podcastForStoreId_, v115);
  uint64_t v45 = (uint64_t)v127;
  if (v44)
  {
    uint64_t v46 = v44;
    uint64_t v47 = (int *)updated;
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1ACE754C8();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EB76D4E0);
    id v49 = v46;
    swift_bridgeObjectRetain_n();
    id v50 = v49;
    uint64_t v51 = sub_1ACE75498();
    os_log_type_t v52 = sub_1ACE76C08();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v114 = v13;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      aBlock[0] = v54;
      *(_DWORD *)uint64_t v53 = 136315907;
      id v55 = objc_msgSend(v50, sel_uuid);
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = sub_1ACE761B8();
        unint64_t v59 = v58;
      }
      else
      {
        uint64_t v57 = 0;
        unint64_t v59 = 0xE000000000000000;
      }
      uint64_t v131 = sub_1ACA3189C(v57, v59, aBlock);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2160;
      uint64_t v131 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v53 + 22) = 2081;
      unint64_t v76 = v130;
      swift_bridgeObjectRetain();
      uint64_t v131 = sub_1ACA3189C(v112, v76, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 32) = 2081;
      id v77 = objc_msgSend(v50, sel_title);
      if (v77)
      {
        uint64_t v78 = v77;
        uint64_t v79 = v54;
        uint64_t v80 = sub_1ACE761B8();
        unint64_t v82 = v81;
      }
      else
      {
        uint64_t v79 = v54;
        uint64_t v80 = 0;
        unint64_t v82 = 0xE000000000000000;
      }
      uint64_t v68 = v127;
      uint64_t v131 = sub_1ACA3189C(v80, v82, aBlock);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v51, v52, "Creating update for MTPodcast %s for %{private,mask.hash}s - %{private}s", (uint8_t *)v53, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v79, -1, -1);
      MEMORY[0x1AD11B340](v53, -1, -1);

      uint64_t v47 = (int *)updated;
      uint64_t v41 = v129;
      os_log_type_t v13 = v114;
    }
    else
    {
      uint64_t v68 = (unsigned char *)v45;

      swift_bridgeObjectRelease_n();
    }
    uint64_t v83 = v117;
    if ((*(unsigned char *)(v117 + v47[10]) & 1) == 0
      && (id v84 = objc_msgSend(v50, sel_nextSyncToken)) != 0
      && (int64_t v85 = v84, v86 = sub_1ACE761B8(), v88 = v87, v85, v88))
    {
      swift_bridgeObjectRelease();
      if ((v88 & 0x2000000000000000) != 0) {
        uint64_t v89 = HIBYTE(v88) & 0xF;
      }
      else {
        uint64_t v89 = v86 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v90 = v113;
      sub_1ACB37844(v83, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
      uint64_t v45 = (uint64_t)v68;
      if (v89)
      {
        uint64_t v91 = *(void *)&v90[v47[12]];
        sub_1ACB39C48((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
        if (v91 == 23) {
          char v92 = *(unsigned char *)(v41 + 72);
        }
        else {
          char v92 = 0;
        }
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v90 = v113;
      sub_1ACB37844(v83, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
      uint64_t v45 = (uint64_t)v68;
    }
    sub_1ACB39C48((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    char v92 = 1;
LABEL_35:
    double v93 = v116;
    sub_1ACB37844(v83, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    char v94 = *(unsigned char *)(v83 + v47[9]);
    unsigned __int8 v95 = objc_msgSend(v50, sel_feedUpdateNeedsRetry);
    sub_1ACB37844((uint64_t)v93, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    id v96 = v47;
    uint64_t v97 = v118;
    v13[v118[5]] = v94;
    v13[v97[6]] = v95;
    v13[v97[7]] = v92;
    aBlock[0] = *(void *)&v93[v96[7]];
    uint64_t v98 = sub_1ACE777C8();
    uint64_t v100 = v99;
    sub_1ACB39C48((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    uint64_t v101 = (uint64_t *)&v13[v97[8]];
    *uint64_t v101 = v98;
    v101[1] = v100;
    sub_1ACB39CA8((uint64_t)v13, v45, type metadata accessor for StoreFeedUpdater.Update);

    goto LABEL_36;
  }
  uint64_t v60 = updated;
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v61 = sub_1ACE754C8();
  __swift_project_value_buffer(v61, (uint64_t)qword_1EB76D4E0);
  swift_bridgeObjectRetain_n();
  uint64_t v62 = sub_1ACE75498();
  os_log_type_t v63 = sub_1ACE76C08();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    uint64_t v115 = v65;
    *(_DWORD *)uint64_t v64 = 141558275;
    uint64_t v131 = 1752392040;
    aBlock[0] = v65;
    sub_1ACE76FF8();
    *(_WORD *)(v64 + 12) = 2081;
    unint64_t v66 = v130;
    swift_bridgeObjectRetain();
    uint64_t v131 = sub_1ACA3189C(v112, v66, aBlock);
    uint64_t v41 = v129;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v62, v63, "No matching MTPodcast found for storeID %{private,mask.hash}s. Probably a new follow. Creating bootstrap update.", (uint8_t *)v64, 0x16u);
    uint64_t v67 = v115;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v67, -1, -1);
    MEMORY[0x1AD11B340](v64, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v69 = v117;
  unint64_t v70 = v116;
  sub_1ACB37844(v117, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  LOBYTE(v69) = *(unsigned char *)(v69 + *(int *)(v60 + 36));
  sub_1ACB37844((uint64_t)v70, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  unint64_t v71 = v118;
  v13[v118[5]] = v69;
  v13[v71[6]] = 1;
  v13[v71[7]] = 1;
  aBlock[0] = *(void *)&v70[*(int *)(v60 + 28)];
  uint64_t v72 = sub_1ACE777C8();
  uint64_t v74 = v73;
  sub_1ACB39C48((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
  uint64_t v75 = (uint64_t *)&v13[v71[8]];
  uint64_t *v75 = v72;
  v75[1] = v74;
  sub_1ACB39CA8((uint64_t)v13, v45, type metadata accessor for StoreFeedUpdater.Update);
LABEL_36:
  sub_1ACB37844(v45, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
  unint64_t v102 = (*(unsigned __int8 *)(v119 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
  uint64_t v103 = swift_allocObject();
  *(void *)(v103 + 16) = v41;
  sub_1ACB39CA8((uint64_t)v13, v103 + v102, type metadata accessor for StoreFeedUpdater.Update);
  aBlock[4] = (uint64_t)sub_1ACB3AE5C;
  void aBlock[5] = v103;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  void aBlock[3] = (uint64_t)&block_descriptor_53;
  uint64_t v104 = _Block_copy(aBlock);
  swift_retain();
  unint64_t v105 = v121;
  sub_1ACE75E08();
  uint64_t v131 = MEMORY[0x1E4FBC860];
  sub_1ACB3AB2C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v106 = v123;
  uint64_t v107 = v126;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v105, v106, v104);
  _Block_release(v104);
  (*(void (**)(unsigned char *, uint64_t))(v125 + 8))(v106, v107);
  (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v105, v124);
  sub_1ACB39C48(v45, type metadata accessor for StoreFeedUpdater.Update);
  return swift_release();
}

uint64_t sub_1ACB30030(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B2F8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v85 = (uint64_t)v77 - v8;
  uint64_t v86 = sub_1ACE753F8();
  Class isa = v86[-1].isa;
  uint64_t v10 = MEMORY[0x1F4188790](v86);
  id v84 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v77 - v12;
  uint64_t v81 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v14 = MEMORY[0x1F4188790](v81);
  uint64_t v80 = (uint64_t)v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v83 = (uint64_t)v77 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v77 - v18;
  uint64_t v20 = sub_1ACE75EC8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (void *)((char *)v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (void *)v2[2];
  *uint64_t v23 = v24;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4FBCBF0], v20);
  id v25 = v24;
  LOBYTE(v24) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  if (v24)
  {
    unint64_t v82 = v7;
    if (qword_1EB76D390 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v26 = sub_1ACE75438();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB76D378);
  sub_1ACB37844(a1, (uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
  sub_1ACE753E8();
  uint64_t v27 = sub_1ACE75428();
  int v28 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    (*((void (**)(char *, char *, NSObject *))isa + 2))(v84, v13, v86);
    uint64_t v29 = swift_slowAlloc();
    uint64_t v79 = a1;
    int v30 = (uint8_t *)v29;
    uint64_t v31 = swift_slowAlloc();
    v89[0] = v31;
    int v78 = v28;
    *(_DWORD *)int v30 = 136315138;
    uint64_t v32 = sub_1ACE750C8();
    v88[0] = sub_1ACA3189C(v32, v33, v89);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB39C48((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v34 = v84;
    os_signpost_id_t v35 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v27, (os_signpost_type_t)v78, v35, "EvaluationScheduled", "[identifier=%{name=identifier}s]", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v31, -1, -1);
    uint64_t v36 = v30;
    a1 = v79;
    MEMORY[0x1AD11B340](v36, -1, -1);

    uint64_t v37 = (void (*)(char *, NSObject *))*((void *)isa + 1);
    unint64_t v38 = v86;
    v37(v13, v86);
    v37(v34, v38);
  }
  else
  {

    sub_1ACB39C48((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
    (*((void (**)(char *, NSObject *))isa + 1))(v13, v86);
  }
  uint64_t v39 = v2[4];
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v41 = *(int *)(updated + 28);
  v89[0] = *(void *)(a1 + v41);
  uint64_t v42 = MEMORY[0x1F4188790](updated);
  v77[-4] = v39;
  v77[-3] = v89;
  v77[-2] = a1;
  MEMORY[0x1F4188790](v42);
  v77[-2] = sub_1ACB3A738;
  v77[-1] = v43;
  uint64_t v45 = v44 + 4;
  os_unfair_lock_lock(v44 + 4);
  sub_1ACB3AEC4(v88);
  os_unfair_lock_unlock(v45);
  uint64_t v46 = *(void *)(a1 + v41);
  swift_beginAccess();
  uint64_t v47 = v2[8];
  if (*(void *)(v47 + 16) && (uint64_t v48 = sub_1ACA6A1FC(v46), (v49 & 1) != 0))
  {
    uint64_t v50 = v48;
    uint64_t v51 = *(void *)(v47 + 56);
    uint64_t v52 = type metadata accessor for StoreFeedUpdater.Retry(0);
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = v51 + *(void *)(v53 + 72) * v50;
    uint64_t v55 = v85;
    sub_1ACB37844(v54, v85, type metadata accessor for StoreFeedUpdater.Retry);
    uint64_t v56 = *(char **)(v53 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v56)(v55, 0, 1, v52);
    sub_1ACA50E78(v55, qword_1EB76B2F8);
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_1ACE754C8();
    __swift_project_value_buffer(v57, (uint64_t)qword_1EB76D4E0);
    uint64_t v58 = v83;
    sub_1ACB37844(a1, v83, type metadata accessor for StoreFeedUpdater.Update);
    unint64_t v59 = sub_1ACE75498();
    os_log_type_t v60 = sub_1ACE76C08();
    int v61 = v60;
    uint64_t v86 = v59;
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v85 = v52;
      uint64_t v63 = v62;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v79 = v64;
      *(_DWORD *)uint64_t v63 = 141558275;
      uint64_t v87 = 1752392040;
      v88[0] = v64;
      v77[1] = v88;
      sub_1ACE76FF8();
      *(_WORD *)(v63 + 12) = 2081;
      v77[0] = v63 + 14;
      int v78 = v61;
      uint64_t v65 = v80;
      sub_1ACB37844(v58, v80, type metadata accessor for StoreFeedUpdater.Update);
      unint64_t v66 = (uint64_t *)(v65 + *(int *)(v81 + 32));
      id v84 = v56;
      uint64_t v67 = *v66;
      unint64_t v68 = v66[1];
      swift_bridgeObjectRetain();
      sub_1ACB39C48(v65, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v87 = sub_1ACA3189C(v67, v68, v88);
      sub_1ACE76FF8();
      uint64_t v56 = v84;
      swift_bridgeObjectRelease();
      sub_1ACB39C48(v83, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v69 = v86;
      _os_log_impl(&dword_1AC9D5000, v86, (os_log_type_t)v78, "Update %{private,mask.hash}s: clearing retries because a new request has come in", (uint8_t *)v63, 0x16u);
      uint64_t v70 = v79;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v70, -1, -1);
      uint64_t v71 = v63;
      uint64_t v52 = v85;
      MEMORY[0x1AD11B340](v71, -1, -1);
    }
    else
    {
      sub_1ACB39C48(v58, type metadata accessor for StoreFeedUpdater.Update);
    }
    uint64_t v74 = (uint64_t)v82;
    uint64_t v75 = *(void *)(a1 + v41);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v56)(v82, 1, 1, v52);
    swift_beginAccess();
    sub_1ACC50EA8(v74, v75);
    swift_endAccess();
  }
  else
  {
    uint64_t v72 = type metadata accessor for StoreFeedUpdater.Retry(0);
    uint64_t v73 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v85, 1, 1, v72);
    sub_1ACA50E78(v73, qword_1EB76B2F8);
  }
  return sub_1ACB309A4(a1);
}

uint64_t sub_1ACB309A4(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v133 = a1;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1F4188790](updated);
  uint64_t v138 = (char *)v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v127 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76B3A0);
  Class isa = v127[-1].isa;
  uint64_t v5 = MEMORY[0x1F4188790](v127);
  uint64_t v126 = (uint64_t)v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v131 = (uint64_t)v122 - v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v130 = (char *)v122 - v9;
  uint64_t v10 = (int *)type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v129 = *((void *)v10 - 1);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v137 = (uint64_t)v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v136 = (char *)v122 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v135 = (uint64_t)v122 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v134 = (uint64_t)v122 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v139 = (uint64_t)v122 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (uint64_t)v122 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v124 = (uint64_t)v122 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v132 = (uint64_t)v122 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  unint64_t v128 = (unint64_t)v122 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)v122 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)v122 - v33;
  uint64_t v35 = sub_1ACE75EC8();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  unint64_t v38 = (uint64_t *)((char *)v122 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = (void *)v2[2];
  *unint64_t v38 = v39;
  (*(void (**)(void *, void, uint64_t))(v36 + 104))(v38, *MEMORY[0x1E4FBCBF0], v35);
  id v40 = v39;
  LOBYTE(v39) = sub_1ACE75EF8();
  uint64_t v42 = *(void (**)(void *, uint64_t))(v36 + 8);
  uint64_t v41 = v36 + 8;
  v42(v38, v35);
  if ((v39 & 1) == 0)
  {
    __break(1u);
LABEL_52:
    swift_once();
    goto LABEL_12;
  }
  sub_1ACB37844(v133, (uint64_t)v34, type metadata accessor for StoreFeedUpdater.Update);
  uint64_t v43 = *(void *)&v34[*(int *)(updated + 28)];
  id v44 = (objc_class *)v2[5];
  uint64_t v41 = (uint64_t)v34;
  if ((sub_1ACB36B88(v43) & 1) != 0 && v34[v10[7]] == 1)
  {
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1ACE754C8();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EB76D4E0);
    uint64_t v46 = sub_1ACE75498();
    os_log_type_t v47 = sub_1ACE76C08();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      v143[0] = v139;
      *(_DWORD *)uint64_t v48 = 141558275;
      uint64_t v141 = 1752392040;
      uint64_t v138 = v142;
      sub_1ACE76FF8();
      *(_WORD *)(v48 + 12) = 2081;
      uint64_t v137 = v48 + 14;
      swift_beginAccess();
      sub_1ACB37844(v41, (uint64_t)v32, type metadata accessor for StoreFeedUpdater.Update);
      char v49 = (uint64_t *)&v32[v10[8]];
      uint64_t v51 = *v49;
      unint64_t v50 = v49[1];
      swift_bridgeObjectRetain();
      sub_1ACB39C48((uint64_t)v32, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v141 = sub_1ACA3189C(v51, v50, v143);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v46, v47, "There is a running delta update for %{private,mask.hash}s. This is a bootstrap update, holding until the delta is done.", (uint8_t *)v48, 0x16u);
      uint64_t v52 = v139;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v52, -1, -1);
      MEMORY[0x1AD11B340](v48, -1, -1);
    }

    swift_beginAccess();
    uint64_t v53 = (uint64_t)v130;
    sub_1ACB37844(v41, (uint64_t)v130, type metadata accessor for StoreFeedUpdater.Update);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v129 + 56))(v53, 0, 1, v10);
    swift_beginAccess();
    sub_1ACC50C48(v53, v43);
    swift_endAccess();
    goto LABEL_15;
  }
  uint64_t v133 = updated;
  uint64_t v54 = v129;
  if ((sub_1ACB36B88(v43) & 1) == 0)
  {
    uint64_t v55 = v2[6];
    if ((sub_1ACB36B88(v43) & 1) == 0)
    {
      uint64_t v123 = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E468);
      uint64_t v66 = *((void *)isa + 9);
      unint64_t v67 = (*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80);
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_1ACE84820;
      unint64_t v130 = (unsigned char *)v68;
      uint64_t v69 = v68 + v67;
      Class isa = v44;
      sub_1ACB36DDC(v43, v68 + v67);
      v122[0] = v69 + v66;
      v122[2] = v55;
      sub_1ACB36DDC(v43, v69 + v66);
      v122[1] = v69;
      uint64_t v70 = v131;
      sub_1ACB3A6D0(v69, v131);
      uint64_t v71 = v126;
      sub_1ACB3AB74(v70, v126);
      uint64_t v72 = v54;
      uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v54 + 48);
      if (v73(v71, 1, v10) == 1)
      {
        sub_1ACA50E78(v71, qword_1EB76B3A0);
        unint64_t v74 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v75 = v128;
        sub_1ACB39CA8(v71, v128, type metadata accessor for StoreFeedUpdater.Update);
        sub_1ACB39CA8(v75, v132, type metadata accessor for StoreFeedUpdater.Update);
        unint64_t v76 = MEMORY[0x1E4FBC860];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v76 = sub_1ACA42C00(0, *(void *)(v76 + 16) + 1, 1, v76);
        }
        unint64_t v78 = *(void *)(v76 + 16);
        unint64_t v77 = *(void *)(v76 + 24);
        uint64_t v79 = v76;
        if (v78 >= v77 >> 1) {
          uint64_t v79 = sub_1ACA42C00(v77 > 1, v78 + 1, 1, v76);
        }
        *(void *)(v79 + 16) = v78 + 1;
        uint64_t v80 = v79
            + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))
            + *(void *)(v72 + 72) * v78;
        unint64_t v74 = v79;
        sub_1ACB39CA8(v132, v80, type metadata accessor for StoreFeedUpdater.Update);
      }
      uint64_t v81 = v131;
      sub_1ACB3A6D0(v122[0], v131);
      sub_1ACB3AB74(v81, v71);
      if (v73(v71, 1, v10) == 1)
      {
        uint64_t v82 = v123;
        sub_1ACA50E78(v71, qword_1EB76B3A0);
      }
      else
      {
        uint64_t v83 = v128;
        sub_1ACB39CA8(v71, v128, type metadata accessor for StoreFeedUpdater.Update);
        sub_1ACB39CA8(v83, v132, type metadata accessor for StoreFeedUpdater.Update);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v74 = sub_1ACA42C00(0, *(void *)(v74 + 16) + 1, 1, v74);
        }
        unint64_t v85 = *(void *)(v74 + 16);
        unint64_t v84 = *(void *)(v74 + 24);
        if (v85 >= v84 >> 1) {
          unint64_t v74 = sub_1ACA42C00(v84 > 1, v85 + 1, 1, v74);
        }
        uint64_t v82 = v123;
        *(void *)(v74 + 16) = v85 + 1;
        sub_1ACB39CA8(v132, v74+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v85, type metadata accessor for StoreFeedUpdater.Update);
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v86 = *(void *)(v74 + 16);
      if (v86)
      {
        if (qword_1EB76D4F8 != -1) {
          swift_once();
        }
        uint64_t v87 = sub_1ACE754C8();
        __swift_project_value_buffer(v87, (uint64_t)qword_1EB76D4E0);
        unint64_t v88 = sub_1ACE75498();
        os_log_type_t v89 = sub_1ACE76C08();
        int v90 = v89;
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v91 = swift_slowAlloc();
          uint64_t v132 = swift_slowAlloc();
          v143[0] = v132;
          *(_DWORD *)uint64_t v91 = 141558275;
          uint64_t v141 = 1752392040;
          unint64_t v130 = v142;
          sub_1ACE76FF8();
          *(_WORD *)(v91 + 12) = 2081;
          unint64_t v128 = v91 + 14;
          LODWORD(v131) = v90;
          uint64_t v92 = v82;
          swift_beginAccess();
          sub_1ACB37844(v82, (uint64_t)v32, type metadata accessor for StoreFeedUpdater.Update);
          double v93 = (uint64_t *)&v32[v10[8]];
          os_log_t v127 = v88;
          uint64_t v95 = *v93;
          unint64_t v94 = v93[1];
          swift_bridgeObjectRetain();
          sub_1ACB39C48((uint64_t)v32, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v141 = sub_1ACA3189C(v95, v94, v143);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          os_log_t v96 = v127;
          _os_log_impl(&dword_1AC9D5000, v127, (os_log_type_t)v131, "There is a pending update for %{private,mask.hash}s. Merging together.", (uint8_t *)v91, 0x16u);
          uint64_t v97 = v132;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v97, -1, -1);
          MEMORY[0x1AD11B340](v91, -1, -1);
        }
        else
        {

          uint64_t v92 = v82;
        }
        swift_beginAccess();
        sub_1ACB37844(v92, v23, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v99 = v10[5];
        uint64_t v131 = v10[6];
        uint64_t v132 = v99;
        uint64_t v100 = v10[7];
        uint64_t v101 = v74 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
        uint64_t v129 = *(void *)(v72 + 72);
        unint64_t v130 = (unsigned char *)v100;
        unint64_t v128 = v74;
        swift_bridgeObjectRetain();
        uint64_t v102 = (uint64_t)v138;
        uint64_t v103 = v139;
        do
        {
          sub_1ACB37844(v101, v103, type metadata accessor for StoreFeedUpdater.Update);
          sub_1ACB37844(v23, v102, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
          char v110 = *(unsigned char *)(v23 + v132);
          uint64_t v111 = v135;
          sub_1ACB37844(v103, v135, type metadata accessor for StoreFeedUpdater.Update);
          if (v110) {
            char v112 = 1;
          }
          else {
            char v112 = *(unsigned char *)(v111 + v10[5]);
          }
          uint64_t v113 = (uint64_t)v136;
          sub_1ACB39C48(v111, type metadata accessor for StoreFeedUpdater.Update);
          char v114 = *(unsigned char *)(v23 + v131);
          sub_1ACB37844(v103, v113, type metadata accessor for StoreFeedUpdater.Update);
          if (v114) {
            char v115 = 1;
          }
          else {
            char v115 = *(unsigned char *)(v113 + v10[6]);
          }
          sub_1ACB39C48(v113, type metadata accessor for StoreFeedUpdater.Update);
          char v116 = v130[v23];
          uint64_t v117 = v137;
          sub_1ACB37844(v139, v137, type metadata accessor for StoreFeedUpdater.Update);
          if (v116) {
            char v104 = 1;
          }
          else {
            char v104 = *(unsigned char *)(v117 + v10[7]);
          }
          sub_1ACB39C48(v117, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v102 = (uint64_t)v138;
          sub_1ACB37844((uint64_t)v138, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
          v32[v10[5]] = v112;
          v32[v10[6]] = v115;
          v32[v10[7]] = v104;
          uint64_t v141 = *(void *)(v102 + *(int *)(v133 + 28));
          uint64_t v105 = sub_1ACE777C8();
          uint64_t v107 = v106;
          sub_1ACB39C48(v102, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
          id v108 = (uint64_t *)&v32[v10[8]];
          *id v108 = v105;
          v108[1] = v107;
          uint64_t v109 = v134;
          sub_1ACB39CA8((uint64_t)v32, v134, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v103 = v139;
          sub_1ACB39C48(v139, type metadata accessor for StoreFeedUpdater.Update);
          sub_1ACB39C48(v23, type metadata accessor for StoreFeedUpdater.Update);
          sub_1ACB39CA8(v109, v23, type metadata accessor for StoreFeedUpdater.Update);
          v101 += v129;
          --v86;
        }
        while (v86);
        swift_bridgeObjectRelease();
        uint64_t v118 = v23;
        uint64_t v119 = v124;
        sub_1ACB39CA8(v118, v124, type metadata accessor for StoreFeedUpdater.Update);
        swift_bridgeObjectRelease();
        uint64_t v120 = v119;
        uint64_t v98 = v123;
        sub_1ACB3A150(v120, v123);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v98 = v82;
      }
      swift_beginAccess();
      sub_1ACB356A4(v98);
      uint64_t v65 = v98;
      return sub_1ACB39C48(v65, type metadata accessor for StoreFeedUpdater.Update);
    }
  }
  if (qword_1EB76D4F8 != -1) {
    goto LABEL_52;
  }
LABEL_12:
  uint64_t v56 = sub_1ACE754C8();
  __swift_project_value_buffer(v56, (uint64_t)qword_1EB76D4E0);
  uint64_t v57 = sub_1ACE75498();
  os_log_type_t v58 = sub_1ACE76C08();
  if (!os_log_type_enabled(v57, v58))
  {

LABEL_15:
    uint64_t v65 = v41;
    return sub_1ACB39C48(v65, type metadata accessor for StoreFeedUpdater.Update);
  }
  uint64_t v59 = swift_slowAlloc();
  uint64_t v60 = v41;
  uint64_t v61 = swift_slowAlloc();
  uint64_t v141 = v61;
  *(_DWORD *)uint64_t v59 = 141558275;
  v143[0] = 1752392040;
  sub_1ACE76FF8();
  *(_WORD *)(v59 + 12) = 2081;
  swift_beginAccess();
  sub_1ACB37844(v60, (uint64_t)v32, type metadata accessor for StoreFeedUpdater.Update);
  uint64_t v62 = (uint64_t *)&v32[v10[8]];
  uint64_t v63 = *v62;
  unint64_t v64 = v62[1];
  swift_bridgeObjectRetain();
  sub_1ACB39C48((uint64_t)v32, type metadata accessor for StoreFeedUpdater.Update);
  uint64_t v140 = sub_1ACA3189C(v63, v64, &v141);
  sub_1ACE76FF8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1AC9D5000, v57, v58, "There is already an update running for %{private,mask.hash}s. Dropping this redundant request.", (uint8_t *)v59, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1AD11B340](v61, -1, -1);
  MEMORY[0x1AD11B340](v59, -1, -1);

  uint64_t v65 = v60;
  return sub_1ACB39C48(v65, type metadata accessor for StoreFeedUpdater.Update);
}

void sub_1ACB31B28(uint64_t a1)
{
  uint64_t v143 = sub_1ACE75DC8();
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  uint64_t v140 = (char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1ACE75E48();
  uint64_t v139 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v138 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_1ACE75DA8();
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v133 = (uint64_t *)((char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v147 = sub_1ACE75E88();
  uint64_t v137 = *(void *)(v147 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v147);
  uint64_t v131 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int v146 = (char *)&v124 - v8;
  uint64_t v150 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v134 = *(void *)(v150 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v150);
  uint64_t v11 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v145 = (uint64_t)&v124 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v155 = (uint64_t)&v124 - v15;
  uint64_t v128 = v16;
  MEMORY[0x1F4188790](v14);
  uint64_t v129 = (uint64_t)&v124 - v17;
  uint64_t v151 = sub_1ACE75118();
  uint64_t v149 = *(void *)(v151 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v151);
  uint64_t v132 = (char *)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  os_log_t v144 = (char *)&v124 - v21;
  uint64_t v130 = v22;
  MEMORY[0x1F4188790](v20);
  uint64_t v156 = (char *)&v124 - v23;
  uint64_t v154 = type metadata accessor for StoreFeedUpdater.Retry(0);
  uint64_t v24 = *(void *)(v154 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v154);
  unint64_t v148 = (id *)((char *)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (uint64_t *)((char *)&v124 - v27);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B2F8);
  uint64_t v30 = MEMORY[0x1F4188790](v29 - 8);
  uint64_t v152 = (uint64_t)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v124 - v32;
  uint64_t v34 = sub_1ACE75EC8();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = (id *)((char *)&v124 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v153 = v1;
  unint64_t v38 = (void *)*((void *)v1 + 2);
  *uint64_t v37 = v38;
  (*(void (**)(void *, void, uint64_t))(v35 + 104))(v37, *MEMORY[0x1E4FBCBF0], v34);
  id v39 = v38;
  LOBYTE(v38) = sub_1ACE75EF8();
  uint64_t v41 = *(void (**)(void *, uint64_t))(v35 + 8);
  uint64_t v40 = v35 + 8;
  v41(v37, v34);
  if ((v38 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v40 = a1;
  if (*(unsigned char *)(a1 + *(int *)(updated + 52)))
  {
    if (qword_1EB76D4F8 == -1)
    {
LABEL_4:
      uint64_t v43 = sub_1ACE754C8();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EB76D4E0);
      sub_1ACB37844(v40, (uint64_t)v11, type metadata accessor for StoreFeedUpdater.Update);
      id v44 = sub_1ACE75498();
      os_log_type_t v45 = sub_1ACE76C08();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        aBlock[0] = v47;
        *(_DWORD *)uint64_t v46 = 141558275;
        uint64_t v159 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v46 + 12) = 2081;
        uint64_t v156 = (char *)(v46 + 14);
        uint64_t v48 = v155;
        sub_1ACB37844((uint64_t)v11, v155, type metadata accessor for StoreFeedUpdater.Update);
        char v49 = (uint64_t *)(v48 + *(int *)(v150 + 32));
        uint64_t v50 = *v49;
        unint64_t v51 = v49[1];
        swift_bridgeObjectRetain();
        sub_1ACB39C48(v48, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v159 = sub_1ACA3189C(v50, v51, aBlock);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACB39C48((uint64_t)v11, type metadata accessor for StoreFeedUpdater.Update);
        _os_log_impl(&dword_1AC9D5000, v44, v45, "Update %{private,mask.hash}s: Not retryable, dropping.", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v47, -1, -1);
        MEMORY[0x1AD11B340](v46, -1, -1);
      }
      else
      {
        sub_1ACB39C48((uint64_t)v11, type metadata accessor for StoreFeedUpdater.Update);
      }

      return;
    }
LABEL_31:
    swift_once();
    goto LABEL_4;
  }
  id v124 = v39;
  uint64_t v126 = *(int *)(updated + 28);
  uint64_t v52 = *(void *)(a1 + v126);
  uint64_t v53 = v153;
  os_log_t v127 = (void (*)(char *, char *, uint64_t))(v153 + 64);
  swift_beginAccess();
  uint64_t v54 = *((void *)v53 + 8);
  if (*(void *)(v54 + 16))
  {
    uint64_t v55 = sub_1ACA6A1FC(v52);
    uint64_t v56 = v154;
    uint64_t v57 = v24;
    if (v58)
    {
      sub_1ACB37844(*(void *)(v54 + 56) + *(void *)(v24 + 72) * v55, (uint64_t)v33, type metadata accessor for StoreFeedUpdater.Retry);
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
      uint64_t v60 = v33;
      uint64_t v61 = 0;
    }
    else
    {
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
      uint64_t v60 = v33;
      uint64_t v61 = 1;
    }
  }
  else
  {
    uint64_t v57 = v24;
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v60 = v33;
    uint64_t v61 = 1;
    uint64_t v56 = v154;
  }
  uint64_t v125 = v59;
  v59((uint64_t)v60, v61, 1, v56);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v33, 1, v56))
  {
    sub_1ACA50E78((uint64_t)v33, qword_1EB76B2F8);
    uint64_t v62 = 0;
  }
  else
  {
    sub_1ACB37844((uint64_t)v33, (uint64_t)v28, type metadata accessor for StoreFeedUpdater.Retry);
    sub_1ACA50E78((uint64_t)v33, qword_1EB76B2F8);
    uint64_t v62 = *v28;
    sub_1ACB39C48((uint64_t)v28, type metadata accessor for StoreFeedUpdater.Retry);
  }
  uint64_t v63 = *((void *)v53 + 10);
  uint64_t v64 = v151;
  if (v62 < *(void *)(v63 + 16))
  {
    uint64_t v65 = v148;
    *unint64_t v148 = v62 + 1;
    uint64_t v66 = (char *)v65 + *(int *)(v56 + 20);
    sub_1ACE75108();
    unint64_t v67 = *(void (**)(char *, char *, uint64_t))(v149 + 16);
    uint64_t v154 = v149 + 16;
    v67(v156, v66, v64);
    uint64_t v68 = *(void *)(v40 + v126);
    uint64_t v69 = (uint64_t)v65;
    uint64_t v70 = v152;
    sub_1ACB37844(v69, v152, type metadata accessor for StoreFeedUpdater.Retry);
    v125(v70, 0, 1, v56);
    swift_beginAccess();
    sub_1ACC50EA8(v70, v68);
    swift_endAccess();
    if (v62 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v62 < *(void *)(v63 + 16))
    {
      uint64_t v62 = *(void *)(v63 + 8 * v62 + 32);
      if (qword_1EB76D4F8 == -1)
      {
LABEL_20:
        uint64_t v71 = sub_1ACE754C8();
        __swift_project_value_buffer(v71, (uint64_t)qword_1EB76D4E0);
        uint64_t v145 = v40;
        uint64_t v72 = v129;
        sub_1ACB37844(v40, v129, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v73 = v144;
        os_log_t v127 = v67;
        v67(v144, v156, v64);
        unint64_t v74 = sub_1ACE75498();
        os_log_type_t v75 = sub_1ACE76C08();
        int v76 = v75;
        BOOL v77 = os_log_type_enabled(v74, v75);
        uint64_t v152 = v62;
        if (v77)
        {
          uint64_t v78 = swift_slowAlloc();
          uint64_t v126 = swift_slowAlloc();
          aBlock[0] = v126;
          *(_DWORD *)uint64_t v78 = 141558787;
          uint64_t v158 = 1752392040;
          sub_1ACE76FF8();
          *(_WORD *)(v78 + 12) = 2081;
          LODWORD(v125) = v76;
          uint64_t v79 = v155;
          sub_1ACB37844(v72, v155, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v80 = (uint64_t *)(v79 + *(int *)(v150 + 32));
          uint64_t v81 = *v80;
          unint64_t v82 = v80[1];
          swift_bridgeObjectRetain();
          sub_1ACB39C48(v79, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v158 = sub_1ACA3189C(v81, v82, aBlock);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          sub_1ACB39C48(v72, type metadata accessor for StoreFeedUpdater.Update);
          *(_WORD *)(v78 + 22) = 2080;
          sub_1ACB3AB2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
          uint64_t v83 = v144;
          uint64_t v84 = sub_1ACE777C8();
          uint64_t v158 = sub_1ACA3189C(v84, v85, aBlock);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          uint64_t v86 = v149;
          uint64_t v87 = *(void (**)(char *, uint64_t))(v149 + 8);
          uint64_t v150 = (v149 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          unint64_t v88 = v83;
          uint64_t v89 = v64;
          v87(v88, v64);
          *(_WORD *)(v78 + 32) = 2048;
          uint64_t v158 = v152;
          sub_1ACE76FF8();
          _os_log_impl(&dword_1AC9D5000, v74, (os_log_type_t)v125, "Update %{private,mask.hash}s Retry %s: will retry after %ld seconds", (uint8_t *)v78, 0x2Au);
          uint64_t v90 = v126;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v90, -1, -1);
          uint64_t v91 = v78;
          uint64_t v62 = v152;
          MEMORY[0x1AD11B340](v91, -1, -1);
        }
        else
        {
          sub_1ACB39C48(v72, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v86 = v149;
          uint64_t v105 = *(void (**)(char *, uint64_t))(v149 + 8);
          uint64_t v150 = (v149 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v105(v73, v64);

          uint64_t v89 = v64;
        }
        uint64_t v106 = v131;
        sub_1ACE75E78();
        uint64_t v107 = v133;
        *uint64_t v133 = v62;
        uint64_t v108 = v135;
        uint64_t v109 = v136;
        (*(void (**)(uint64_t *, void, uint64_t))(v135 + 104))(v107, *MEMORY[0x1E4FBCAE8], v136);
        MEMORY[0x1AD118090](v106, v107);
        (*(void (**)(uint64_t *, uint64_t))(v108 + 8))(v107, v109);
        uint64_t v153 = *(char **)(v137 + 8);
        ((void (*)(char *, uint64_t))v153)(v106, v147);
        uint64_t v110 = swift_allocObject();
        swift_weakInit();
        uint64_t v111 = v155;
        sub_1ACB37844(v145, v155, type metadata accessor for StoreFeedUpdater.Update);
        char v112 = v132;
        uint64_t v113 = v89;
        v127(v132, v156, v89);
        unint64_t v114 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
        unint64_t v115 = (v128 + *(unsigned __int8 *)(v86 + 80) + v114) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
        unint64_t v116 = (v130 + v115 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v117 = v86;
        uint64_t v118 = swift_allocObject();
        *(void *)(v118 + 16) = v110;
        sub_1ACB39CA8(v111, v118 + v114, type metadata accessor for StoreFeedUpdater.Update);
        (*(void (**)(unint64_t, char *, uint64_t))(v117 + 32))(v118 + v115, v112, v113);
        *(void *)(v118 + v116) = v152;
        aBlock[4] = (uint64_t)sub_1ACB3AA30;
        void aBlock[5] = v118;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        uint64_t aBlock[2] = (uint64_t)sub_1ACA6DA9C;
        void aBlock[3] = (uint64_t)&block_descriptor_45;
        uint64_t v119 = _Block_copy(aBlock);
        swift_retain();
        uint64_t v120 = v138;
        sub_1ACE75E08();
        uint64_t v158 = MEMORY[0x1E4FBC860];
        sub_1ACB3AB2C((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
        sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
        uint64_t v121 = v140;
        uint64_t v122 = v143;
        sub_1ACE770E8();
        uint64_t v123 = v146;
        MEMORY[0x1AD118E40](v146, v120, v121, v119);
        _Block_release(v119);
        (*(void (**)(char *, uint64_t))(v142 + 8))(v121, v122);
        (*(void (**)(char *, uint64_t))(v139 + 8))(v120, v141);
        ((void (*)(char *, uint64_t))v153)(v123, v147);
        (*(void (**)(char *, uint64_t))(v117 + 8))(v156, v113);
        sub_1ACB39C48((uint64_t)v148, type metadata accessor for StoreFeedUpdater.Retry);
        swift_release();
        swift_release();
        return;
      }
LABEL_34:
      swift_once();
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_34;
  }
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v92 = sub_1ACE754C8();
  __swift_project_value_buffer(v92, (uint64_t)qword_1EB76D4E0);
  uint64_t v93 = v145;
  sub_1ACB37844(v40, v145, type metadata accessor for StoreFeedUpdater.Update);
  unint64_t v94 = sub_1ACE75498();
  os_log_type_t v95 = sub_1ACE76C08();
  BOOL v96 = os_log_type_enabled(v94, v95);
  uint64_t v97 = v155;
  if (v96)
  {
    uint64_t v98 = swift_slowAlloc();
    uint64_t v156 = (char *)swift_slowAlloc();
    aBlock[0] = (uint64_t)v156;
    *(_DWORD *)uint64_t v98 = 141558531;
    uint64_t v158 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v98 + 12) = 2081;
    uint64_t v153 = (char *)(v98 + 14);
    sub_1ACB37844(v93, v97, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v99 = (uint64_t *)(v97 + *(int *)(v150 + 32));
    uint64_t v100 = *v99;
    unint64_t v101 = v99[1];
    swift_bridgeObjectRetain();
    sub_1ACB39C48(v97, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v158 = sub_1ACA3189C(v100, v101, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB39C48(v145, type metadata accessor for StoreFeedUpdater.Update);
    *(_WORD *)(v98 + 22) = 2048;
    uint64_t v158 = v62;
    uint64_t v56 = v154;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v94, v95, "Update %{private,mask.hash}s: Failed to trigger another retry, used all backoffs. nextBackoffIndex=%ld.", (uint8_t *)v98, 0x20u);
    uint64_t v102 = v156;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v102, -1, -1);
    MEMORY[0x1AD11B340](v98, -1, -1);
  }
  else
  {
    sub_1ACB39C48(v93, type metadata accessor for StoreFeedUpdater.Update);
  }

  uint64_t v103 = *(void *)(v40 + v126);
  uint64_t v104 = v152;
  v125(v152, 1, 1, v56);
  swift_beginAccess();
  sub_1ACC50EA8(v104, v103);
  swift_endAccess();
}

uint64_t sub_1ACB32FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACB33038(a2, a3, a4);
    return swift_release();
  }
  return result;
}

void sub_1ACB33038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v73 = a3;
  uint64_t v6 = sub_1ACE75118();
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v69[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  int v76 = &v69[-v10];
  os_log_t v78 = (os_log_t)type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v11 = MEMORY[0x1F4188790](v78);
  uint64_t v13 = &v69[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v79 = &v69[-v15];
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v69[-v16];
  uint64_t v18 = type metadata accessor for StoreFeedUpdater.Retry(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = &v69[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  BOOL v77 = &v69[-v23];
  uint64_t v74 = *(int *)(type metadata accessor for FeedUpdateRequest() + 28);
  uint64_t v24 = *(void *)(a1 + v74);
  swift_beginAccess();
  uint64_t v75 = v3;
  uint64_t v25 = *(void *)(v3 + 64);
  if (*(void *)(v25 + 16))
  {
    uint64_t v26 = sub_1ACA6A1FC(v24);
    if (v27)
    {
      sub_1ACB37844(*(void *)(v25 + 56) + *(void *)(v19 + 72) * v26, (uint64_t)v22, type metadata accessor for StoreFeedUpdater.Retry);
      uint64_t v28 = v77;
      sub_1ACB39CA8((uint64_t)v22, (uint64_t)v77, type metadata accessor for StoreFeedUpdater.Retry);
      if (sub_1ACE750E8())
      {
        if (qword_1EB76D4F8 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_1ACE754C8();
        __swift_project_value_buffer(v29, (uint64_t)qword_1EB76D4E0);
        sub_1ACB37844(a1, (uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v30 = v80;
        uint64_t v31 = v81;
        uint64_t v32 = v76;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v80 + 16))(v76, a2, v81);
        uint64_t v33 = sub_1ACE75498();
        os_log_type_t v34 = sub_1ACE76C08();
        int v35 = v34;
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v36 = swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          uint64_t v71 = v37;
          *(_DWORD *)uint64_t v36 = 141558787;
          uint64_t v82 = 1752392040;
          uint64_t v83 = (unsigned char *)v37;
          uint64_t v72 = a1;
          sub_1ACE76FF8();
          *(_WORD *)(v36 + 12) = 2081;
          int v70 = v35;
          unint64_t v38 = v79;
          sub_1ACB37844((uint64_t)v17, (uint64_t)v79, type metadata accessor for StoreFeedUpdater.Update);
          id v39 = (uint64_t *)&v38[SLODWORD(v78[4].isa)];
          os_log_t v78 = v33;
          uint64_t v40 = v30;
          uint64_t v41 = *v39;
          unint64_t v42 = v39[1];
          swift_bridgeObjectRetain();
          sub_1ACB39C48((uint64_t)v38, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v82 = sub_1ACA3189C(v41, v42, (uint64_t *)&v83);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          uint64_t v28 = v77;
          sub_1ACB39C48((uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
          *(_WORD *)(v36 + 22) = 2080;
          sub_1ACB3AB2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
          uint64_t v43 = v76;
          uint64_t v44 = sub_1ACE777C8();
          uint64_t v82 = sub_1ACA3189C(v44, v45, (uint64_t *)&v83);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v43, v31);
          *(_WORD *)(v36 + 32) = 2048;
          uint64_t v82 = v73;
          a1 = v72;
          sub_1ACE76FF8();
          uint64_t v33 = v78;
          _os_log_impl(&dword_1AC9D5000, v78, (os_log_type_t)v70, "Update %{private,mask.hash}s Retry %s: Retrying after %ld seconds", (uint8_t *)v36, 0x2Au);
          uint64_t v46 = v71;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v46, -1, -1);
          MEMORY[0x1AD11B340](v36, -1, -1);
        }
        else
        {
          sub_1ACB39C48((uint64_t)v17, type metadata accessor for StoreFeedUpdater.Update);
          (*(void (**)(unsigned char *, uint64_t))(v30 + 8))(v32, v31);
        }

        uint64_t v83 = *(unsigned char **)(a1 + v74);
        uint64_t v64 = MEMORY[0x1F4188790](v63);
        *(void *)&v69[-32] = v65;
        *(void *)&v69[-24] = &v83;
        *(void *)&v69[-16] = a1;
        MEMORY[0x1F4188790](v64);
        *(void *)&v69[-16] = sub_1ACB3A738;
        *(void *)&v69[-8] = v66;
        uint64_t v68 = v67 + 4;
        os_unfair_lock_lock(v67 + 4);
        sub_1ACB3A750(&v82);
        os_unfair_lock_unlock(v68);
        sub_1ACB309A4(a1);
        sub_1ACB39C48((uint64_t)v28, type metadata accessor for StoreFeedUpdater.Retry);
        return;
      }
      sub_1ACB39C48((uint64_t)v28, type metadata accessor for StoreFeedUpdater.Retry);
    }
  }
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1ACE754C8();
  __swift_project_value_buffer(v47, (uint64_t)qword_1EB76D4E0);
  sub_1ACB37844(a1, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
  uint64_t v49 = v80;
  uint64_t v48 = v81;
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v80 + 16))(v9, a2, v81);
  uint64_t v50 = sub_1ACE75498();
  os_log_type_t v51 = sub_1ACE76C08();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v53 = (unsigned char *)swift_slowAlloc();
    BOOL v77 = v53;
    *(_DWORD *)uint64_t v52 = 141558531;
    uint64_t v82 = 1752392040;
    uint64_t v83 = v53;
    sub_1ACE76FF8();
    *(_WORD *)(v52 + 12) = 2081;
    uint64_t v54 = v79;
    sub_1ACB37844((uint64_t)v13, (uint64_t)v79, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v55 = (uint64_t *)&v54[SLODWORD(v78[4].isa)];
    os_log_t v78 = v9;
    uint64_t v56 = *v55;
    unint64_t v57 = v55[1];
    swift_bridgeObjectRetain();
    sub_1ACB39C48((uint64_t)v54, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v82 = sub_1ACA3189C(v56, v57, (uint64_t *)&v83);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
    *(_WORD *)(v52 + 22) = 2080;
    sub_1ACB3AB2C(&qword_1EB76A970, MEMORY[0x1E4F27990]);
    os_log_t v58 = v78;
    uint64_t v59 = v81;
    uint64_t v60 = sub_1ACE777C8();
    uint64_t v82 = sub_1ACA3189C(v60, v61, (uint64_t *)&v83);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    (*(void (**)(os_log_t, uint64_t))(v80 + 8))(v58, v59);
    _os_log_impl(&dword_1AC9D5000, v50, v51, "Update %{private,mask.hash}s Retry %s: Retry no longer found in retries, dropping.", (uint8_t *)v52, 0x20u);
    uint64_t v62 = v77;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v62, -1, -1);
    MEMORY[0x1AD11B340](v52, -1, -1);
  }
  else
  {
    sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
    (*(void (**)(NSObject *, uint64_t))(v49 + 8))(v9, v48);
  }
}

uint64_t sub_1ACB339D8(int *a1, uint64_t a2)
{
  sub_1ACB3A630(a2, (uint64_t)&v170);
  uint64_t v163 = v170;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B3A0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v159 = (uint64_t)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v156 = (char *)&v151 - v8;
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v10 = MEMORY[0x1F4188790](updated);
  uint64_t v155 = (uint64_t)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v157 = (uint64_t)&v151 - v12;
  uint64_t v165 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v161 = *(void *)(v165 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v165);
  uint64_t v162 = (int *)((char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v160 = (char *)&v151 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v158 = (uint64_t)&v151 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v153 = (uint64_t)&v151 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v154 = (uint64_t)&v151 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v152 = (uint64_t)&v151 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v164 = (char *)&v151 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v151 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v151 - v30;
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1ACE75EC8();
  uint64_t v33 = *((void *)v32 - 1);
  MEMORY[0x1F4188790](v32);
  int v35 = (int *)((char *)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v166 = v2;
  uint64_t v36 = *(void **)(v2 + 16);
  *(void *)int v35 = v36;
  (*(void (**)(int *, void, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v33 + 104))(v35, *MEMORY[0x1E4FBCBF0], v32);
  id v37 = v36;
  LOBYTE(v36) = sub_1ACE75EF8();
  (*(void (**)(int *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v33 + 8))(v35, v32);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v167 = *(void *)((char *)a1 + updated[7]);
  sub_1ACB37844((uint64_t)a1, (uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
  sub_1ACB3A630(a2, (uint64_t)&v171);
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v171;
  int v35 = a1;
  if (v174)
  {
    if (v174 == 1)
    {
      uint64_t updated = v163;
      unint64_t v38 = v163;
      if (qword_1EB76D4F8 == -1)
      {
LABEL_5:
        uint64_t v39 = sub_1ACE754C8();
        __swift_project_value_buffer(v39, (uint64_t)qword_1EB76D4E0);
        uint64_t v40 = (uint64_t)v162;
        sub_1ACB37844((uint64_t)v35, (uint64_t)v162, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v41 = sub_1ACE75498();
        os_log_type_t v42 = sub_1ACE76C08();
        int v43 = v42;
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v44 = swift_slowAlloc();
          uint64_t v156 = v31;
          uint64_t v45 = v44;
          uint64_t v161 = swift_slowAlloc();
          uint64_t v175 = v161;
          *(_DWORD *)uint64_t v45 = 141558275;
          uint64_t v169 = 1752392040;
          sub_1ACE76FF8();
          *(_WORD *)(v45 + 12) = 2081;
          id v160 = (char *)(v45 + 14);
          uint64_t v46 = v40;
          uint64_t v47 = v40;
          uint64_t v48 = (uint64_t)v164;
          sub_1ACB37844(v46, (uint64_t)v164, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v49 = (uint64_t *)(v48 + *(int *)(v165 + 32));
          uint64_t v51 = *v49;
          unint64_t v50 = v49[1];
          swift_bridgeObjectRetain();
          LODWORD(v165) = v43;
          sub_1ACB39C48(v48, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v169 = sub_1ACA3189C(v51, v50, &v175);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          uint64_t v52 = v47;
          uint64_t updated = v163;
          sub_1ACB39C48(v52, type metadata accessor for StoreFeedUpdater.Update);
          _os_log_impl(&dword_1AC9D5000, v41, (os_log_type_t)v165, "Update %{private,mask.hash}s failed", (uint8_t *)v45, 0x16u);
          uint64_t v53 = v161;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v53, -1, -1);
          uint64_t v31 = v156;
          MEMORY[0x1AD11B340](v45, -1, -1);
        }
        else
        {
          sub_1ACB39C48(v40, type metadata accessor for StoreFeedUpdater.Update);
        }

        uint64_t v78 = v166;
        uint64_t v79 = updated;
        sub_1ACB350A8(v32, 1, v78, v167, (uint64_t)v31);
        sub_1ACB3A658(a2);
        sub_1ACB3A658(a2);
        return sub_1ACB39C48((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
      }
LABEL_45:
      swift_once();
      goto LABEL_5;
    }
    int8x16_t v64 = vorrq_s8(*(int8x16_t *)&v172[8], *(int8x16_t *)&v172[24]);
    if (v171 | *(void *)&vorr_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)) | *(void *)&v172[40] | v173 | *(void *)v172)
    {
      uint64_t v162 = updated;
      uint64_t v156 = v31;
      uint64_t v65 = (uint64_t)v164;
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1ACE754C8();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB76D4E0);
      uint64_t v163 = a1;
      uint64_t v68 = (uint64_t)a1;
      uint64_t v69 = v158;
      sub_1ACB37844(v68, v158, type metadata accessor for StoreFeedUpdater.Update);
      int v70 = sub_1ACE75498();
      os_log_type_t v71 = sub_1ACE76C08();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v154 = v67;
        uint64_t v74 = v73;
        uint64_t v175 = v73;
        *(_DWORD *)uint64_t v72 = 141558275;
        uint64_t v169 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v72 + 12) = 2081;
        sub_1ACB37844(v69, v65, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v75 = (uint64_t *)(v65 + *(int *)(v165 + 32));
        uint64_t v76 = *v75;
        unint64_t v77 = v75[1];
        swift_bridgeObjectRetain();
        sub_1ACB39C48(v65, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v169 = sub_1ACA3189C(v76, v77, &v175);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACB39C48(v69, type metadata accessor for StoreFeedUpdater.Update);
        _os_log_impl(&dword_1AC9D5000, v70, v71, "Update %{private,mask.hash}s failed with retry.", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v74, -1, -1);
        MEMORY[0x1AD11B340](v72, -1, -1);
      }
      else
      {
        sub_1ACB39C48(v69, type metadata accessor for StoreFeedUpdater.Update);
      }

      uint64_t v94 = v166;
      uint64_t v95 = (uint64_t)v160;
      swift_beginAccess();
      uint64_t v96 = *(void *)(v94 + 56);
      if (*(void *)(v96 + 16) && (uint64_t v97 = sub_1ACA6A1FC(v167), (v98 & 1) != 0))
      {
        uint64_t v99 = *(void *)(v96 + 56);
        uint64_t v100 = v161;
        uint64_t v101 = v159;
        sub_1ACB37844(v99 + *(void *)(v161 + 72) * v97, v159, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v102 = v165;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v101, 0, 1, v165);
        sub_1ACA50E78(v101, qword_1EB76B3A0);
        sub_1ACB37844((uint64_t)v163, v95, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v103 = sub_1ACE75498();
        os_log_type_t v104 = sub_1ACE76C08();
        if (os_log_type_enabled(v103, v104))
        {
          uint64_t v105 = swift_slowAlloc();
          uint64_t v166 = swift_slowAlloc();
          uint64_t v169 = v166;
          *(_DWORD *)uint64_t v105 = 141558275;
          uint64_t v168 = 1752392040;
          uint64_t v106 = v102;
          sub_1ACE76FF8();
          *(_WORD *)(v105 + 12) = 2081;
          uint64_t v163 = (int *)(v105 + 14);
          uint64_t v107 = (uint64_t)v164;
          sub_1ACB37844(v95, (uint64_t)v164, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v108 = (uint64_t *)(v107 + *(int *)(v106 + 32));
          uint64_t v109 = v95;
          uint64_t v110 = *v108;
          unint64_t v111 = v108[1];
          swift_bridgeObjectRetain();
          sub_1ACB39C48(v107, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v168 = sub_1ACA3189C(v110, v111, &v169);
          sub_1ACE76FF8();
          swift_bridgeObjectRelease();
          sub_1ACB39C48(v109, type metadata accessor for StoreFeedUpdater.Update);
          _os_log_impl(&dword_1AC9D5000, v103, v104, "Update %{private,mask.hash}s: There's a pending update, dropping retry.", (uint8_t *)v105, 0x16u);
          uint64_t v112 = v166;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v112, -1, -1);
          MEMORY[0x1AD11B340](v105, -1, -1);
        }
        else
        {
          sub_1ACB39C48(v95, type metadata accessor for StoreFeedUpdater.Update);
        }
      }
      else
      {
        uint64_t v113 = v159;
        unint64_t v114 = (int *)v165;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v161 + 56))(v159, 1, 1, v165);
        sub_1ACA50E78(v113, qword_1EB76B3A0);
        uint64_t v115 = v157;
        unint64_t v116 = v163;
        FeedUpdateRequest.copyWithoutCompletion()(v157);
        uint64_t v117 = v155;
        sub_1ACB37844(v115, v155, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
        char v118 = *((unsigned char *)v116 + v114[5]);
        char v119 = *((unsigned char *)v116 + v114[6]);
        char v120 = *((unsigned char *)v116 + v114[7]);
        uint64_t v121 = (uint64_t)v164;
        sub_1ACB37844(v117, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
        *(unsigned char *)(v121 + v114[5]) = v118;
        *(unsigned char *)(v121 + v114[6]) = v119;
        *(unsigned char *)(v121 + v114[7]) = v120;
        uint64_t v169 = *(void *)(v117 + v162[7]);
        uint64_t v122 = sub_1ACE777C8();
        uint64_t v124 = v123;
        sub_1ACB39C48(v117, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
        uint64_t v125 = (uint64_t *)(v121 + v114[8]);
        *uint64_t v125 = v122;
        v125[1] = v124;
        sub_1ACB31B28(v121);
        sub_1ACB39C48(v121, type metadata accessor for StoreFeedUpdater.Update);
        sub_1ACB39C48(v115, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
      }
      uint64_t v31 = v156;
      sub_1ACB18F1C();
      uint64_t v136 = (void (*)(char *, uint64_t, uint64_t, uint64_t))swift_allocError();
      uint64_t v137 = v136;
      *uint64_t v138 = 12;
      uint64_t v139 = v94;
LABEL_40:
      sub_1ACB350A8(v136, 1, v139, v167, (uint64_t)v31);

      return sub_1ACB39C48((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
    }
    uint64_t v81 = (int *)v165;
    if (*((unsigned char *)v35 + *(int *)(v165 + 28)))
    {
      if (qword_1EB76D4F8 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1ACE754C8();
      __swift_project_value_buffer(v82, (uint64_t)qword_1EB76D4E0);
      uint64_t v83 = (uint64_t)v35;
      uint64_t v84 = v153;
      sub_1ACB37844(v83, v153, type metadata accessor for StoreFeedUpdater.Update);
      unint64_t v85 = sub_1ACE75498();
      os_log_type_t v86 = sub_1ACE76BE8();
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v87 = swift_slowAlloc();
        uint64_t v88 = swift_slowAlloc();
        uint64_t v156 = v31;
        uint64_t v89 = v88;
        uint64_t v175 = v88;
        *(_DWORD *)uint64_t v87 = 141558275;
        uint64_t v169 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v87 + 12) = 2081;
        uint64_t v163 = (int *)(v87 + 14);
        uint64_t v90 = (uint64_t)v164;
        sub_1ACB37844(v84, (uint64_t)v164, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v91 = (uint64_t *)(v90 + v81[8]);
        uint64_t v92 = *v91;
        unint64_t v93 = v91[1];
        swift_bridgeObjectRetain();
        sub_1ACB39C48(v90, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v169 = sub_1ACA3189C(v92, v93, &v175);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACB39C48(v84, type metadata accessor for StoreFeedUpdater.Update);
        _os_log_impl(&dword_1AC9D5000, v85, v86, "Update %{private,mask.hash}s failed. Bootstrap needed another bootstrap. Failing request to prevent a loop.", (uint8_t *)v87, 0x16u);
        swift_arrayDestroy();
        uint64_t v31 = v156;
        MEMORY[0x1AD11B340](v89, -1, -1);
        MEMORY[0x1AD11B340](v87, -1, -1);
      }
      else
      {
        sub_1ACB39C48(v84, type metadata accessor for StoreFeedUpdater.Update);
      }

      sub_1ACB18F1C();
      uint64_t v136 = (void (*)(char *, uint64_t, uint64_t, uint64_t))swift_allocError();
      uint64_t v137 = v136;
      *uint64_t v140 = 4;
      uint64_t v139 = v166;
      goto LABEL_40;
    }
    uint64_t v162 = updated;
    sub_1ACB39C48((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v126 = sub_1ACE754C8();
    __swift_project_value_buffer(v126, (uint64_t)qword_1EB76D4E0);
    uint64_t v127 = v152;
    sub_1ACB37844((uint64_t)v35, v152, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v128 = sub_1ACE75498();
    os_log_type_t v129 = sub_1ACE76C08();
    if (os_log_type_enabled(v128, v129))
    {
      uint64_t v130 = swift_slowAlloc();
      uint64_t v163 = (int *)swift_slowAlloc();
      uint64_t v175 = (uint64_t)v163;
      *(_DWORD *)uint64_t v130 = 141558275;
      uint64_t v169 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v130 + 12) = 2081;
      id v160 = (char *)(v130 + 14);
      uint64_t v31 = v164;
      sub_1ACB37844(v127, (uint64_t)v164, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v131 = (uint64_t *)&v31[*(int *)(v165 + 32)];
      uint64_t v132 = v35;
      uint64_t v133 = *v131;
      unint64_t v134 = v131[1];
      swift_bridgeObjectRetain();
      sub_1ACB39C48((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v169 = sub_1ACA3189C(v133, v134, &v175);
      sub_1ACE76FF8();
      int v35 = v132;
      swift_bridgeObjectRelease();
      sub_1ACB39C48(v127, type metadata accessor for StoreFeedUpdater.Update);
      _os_log_impl(&dword_1AC9D5000, v128, v129, "Bootstrap requested for %{private,mask.hash}s. Starting over.", (uint8_t *)v130, 0x16u);
      uint64_t v135 = v163;
      swift_arrayDestroy();
      uint64_t v81 = (int *)v165;
      MEMORY[0x1AD11B340](v135, -1, -1);
      MEMORY[0x1AD11B340](v130, -1, -1);
    }
    else
    {
      sub_1ACB39C48(v127, type metadata accessor for StoreFeedUpdater.Update);

      uint64_t v31 = v164;
    }
    uint64_t v142 = v157;
    sub_1ACB37844((uint64_t)v35, v157, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    char v143 = *((unsigned char *)v35 + v81[5]);
    char v144 = *((unsigned char *)v35 + v81[6]);
    uint64_t v145 = v154;
    sub_1ACB37844(v142, v154, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    *(unsigned char *)(v145 + v81[5]) = v143;
    *(unsigned char *)(v145 + v81[6]) = v144;
    *(unsigned char *)(v145 + v81[7]) = 1;
    uint64_t v175 = *(void *)(v142 + v162[7]);
    uint64_t v146 = sub_1ACE777C8();
    uint64_t v148 = v147;
    sub_1ACB39C48(v142, (uint64_t (*)(void))type metadata accessor for FeedUpdateRequest);
    uint64_t v149 = (uint64_t *)(v145 + v81[8]);
    *uint64_t v149 = v146;
    v149[1] = v148;
    sub_1ACB39CA8(v145, (uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v150 = (uint64_t)v156;
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v161 + 56))(v156, 1, 1, v81);
    swift_beginAccess();
    sub_1ACC50C48(v150, v167);
    swift_endAccess();
    sub_1ACB309A4((uint64_t)v31);
  }
  else
  {
    long long v176 = *(_OWORD *)v172;
    long long v177 = *(_OWORD *)&v172[16];
    long long v178 = *(_OWORD *)&v172[32];
    uint64_t v175 = v171;
    uint64_t v179 = v173;
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1ACE754C8();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EB76D4E0);
    sub_1ACB37844((uint64_t)a1, (uint64_t)v29, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v55 = sub_1ACE75498();
    os_log_type_t v56 = sub_1ACE76C08();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v156 = v31;
      uint64_t v59 = v58;
      uint64_t v169 = v58;
      *(_DWORD *)uint64_t v57 = 141558275;
      uint64_t v168 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v57 + 12) = 2081;
      uint64_t v162 = (int *)(v57 + 14);
      uint64_t v60 = (uint64_t)v164;
      sub_1ACB37844((uint64_t)v29, (uint64_t)v164, type metadata accessor for StoreFeedUpdater.Update);
      unint64_t v61 = (uint64_t *)(v60 + *(int *)(v165 + 32));
      uint64_t v62 = *v61;
      unint64_t v63 = v61[1];
      swift_bridgeObjectRetain();
      uint64_t v163 = a1;
      sub_1ACB39C48(v60, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v168 = sub_1ACA3189C(v62, v63, &v169);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      int v35 = v163;
      sub_1ACB39C48((uint64_t)v29, type metadata accessor for StoreFeedUpdater.Update);
      _os_log_impl(&dword_1AC9D5000, v55, v56, "Update %{private,mask.hash}s completed", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy();
      uint64_t v31 = v156;
      MEMORY[0x1AD11B340](v59, -1, -1);
      MEMORY[0x1AD11B340](v57, -1, -1);
    }
    else
    {
      sub_1ACB39C48((uint64_t)v29, type metadata accessor for StoreFeedUpdater.Update);
    }

    uint64_t v80 = v166;
    sub_1ACB39D60((uint64_t)&v175, (uint64_t)v35);
    sub_1ACB350A8(0, 0, v80, v167, (uint64_t)v31);
  }
  return sub_1ACB39C48((uint64_t)v31, type metadata accessor for StoreFeedUpdater.Update);
}

uint64_t sub_1ACB350A8(void (*a1)(char *, uint64_t, uint64_t, uint64_t), int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a1;
  uint64_t v49 = a5;
  uint64_t v51 = a4;
  LODWORD(v47) = a2;
  uint64_t v6 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v46 = (uint64_t)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v50 = (uint64_t)v42 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v42 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B3A0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)v42 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v42 - v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a3 + 56);
  if (*(void *)(v23 + 16) && (uint64_t v24 = sub_1ACA6A1FC(v51), (v25 & 1) != 0))
  {
    sub_1ACB37844(*(void *)(v23 + 56) + *(void *)(v7 + 72) * v24, (uint64_t)v22, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v26(v22, 0, 1, v6);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v26(v22, 1, 1, v6);
  }
  sub_1ACB3A6D0((uint64_t)v22, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v20, 1, v6) == 1)
  {
    int v27 = v47 & 1;
    sub_1ACA50E78((uint64_t)v20, qword_1EB76B3A0);
    sub_1ACD671B8(v51, v48, v27);
  }
  else
  {
    uint64_t v48 = v26;
    sub_1ACB39CA8((uint64_t)v20, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
    if (qword_1EB76D4F8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1ACE754C8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D4E0);
    uint64_t v29 = v50;
    sub_1ACB37844(v49, v50, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76C08();
    LODWORD(v49) = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v44 = v33;
      *(_DWORD *)uint64_t v32 = 141558275;
      uint64_t v52 = 1752392040;
      v53[0] = v33;
      v42[1] = v53;
      sub_1ACE76FF8();
      *(_WORD *)(v32 + 12) = 2081;
      v42[0] = v32 + 14;
      uint64_t v34 = v29;
      uint64_t v35 = v46;
      sub_1ACB37844(v34, v46, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v36 = (uint64_t *)(v35 + *(int *)(v6 + 32));
      os_log_t v43 = v30;
      uint64_t v47 = v13;
      uint64_t v37 = *v36;
      unint64_t v38 = v36[1];
      swift_bridgeObjectRetain();
      uint64_t v45 = v7;
      sub_1ACB39C48(v35, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v52 = sub_1ACA3189C(v37, v38, v53);
      sub_1ACE76FF8();
      uint64_t v13 = v47;
      swift_bridgeObjectRelease();
      sub_1ACB39C48(v50, type metadata accessor for StoreFeedUpdater.Update);
      os_log_t v39 = v43;
      _os_log_impl(&dword_1AC9D5000, v43, (os_log_type_t)v49, "Kicking off pending bootstrap update for %{private,mask.hash}s.", (uint8_t *)v32, 0x16u);
      uint64_t v40 = v44;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v40, -1, -1);
      MEMORY[0x1AD11B340](v32, -1, -1);
    }
    else
    {
      sub_1ACB39C48(v29, type metadata accessor for StoreFeedUpdater.Update);
    }
    v48(v17, 1, 1, v6);
    swift_beginAccess();
    sub_1ACC50C48((uint64_t)v17, v51);
    swift_endAccess();
    sub_1ACB309A4((uint64_t)v13);
    sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
  }
  return sub_1ACA50E78((uint64_t)v22, qword_1EB76B3A0);
}

uint64_t StoreFeedUpdater.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StoreFeedUpdater.__deallocating_deinit()
{
  StoreFeedUpdater.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB356A4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3D0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v71 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for StoreFeedUpdater.Update(0);
  os_log_t v75 = *(os_log_t *)(v77 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v77);
  uint64_t v69 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v72 = (char *)&v66 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int v70 = (char *)&v66 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v66 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v66 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v66 - v20;
  uint64_t v22 = sub_1ACE75EC8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  char v25 = (uint64_t *)((char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = *(void **)(v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *char v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E4FBCBF0], v22);
  id v27 = v26;
  unint64_t v28 = sub_1ACE75EF8();
  uint64_t v30 = *(void (**)(void *, uint64_t))(v23 + 8);
  uint64_t v29 = v23 + 8;
  v30(v25, v22);
  if (v28)
  {
    uint64_t v76 = v16;
    os_log_type_t v31 = (uint64_t *)(v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue);
    swift_beginAccess();
    uint64_t v32 = *v31;
    uint64_t v29 = v1;
    uint64_t v74 = *(void *)(*v31 + 16);
    if (v74)
    {
      uint64_t v67 = v31;
      uint64_t v68 = v1;
      os_log_t v33 = v75;
      uint64_t v34 = v32 + ((LOBYTE(v75[10].isa) + 32) & ~(unint64_t)LOBYTE(v75[10].isa));
      uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
      uint64_t v36 = updated[13];
      Class isa = v33[9].isa;
      LODWORD(v75) = *(unsigned __int8 *)(a1 + v36);
      uint64_t v66 = v32;
      swift_bridgeObjectRetain();
      unint64_t v28 = 0;
      uint64_t v37 = (uint64_t)v76;
      uint64_t v38 = (uint64_t)v70;
      while (1)
      {
        sub_1ACB37844(v34, (uint64_t)v21, type metadata accessor for StoreFeedUpdater.Update);
        if (v75)
        {
          char v39 = v21[updated[13]];
          sub_1ACB39C48((uint64_t)v21, type metadata accessor for StoreFeedUpdater.Update);
          if ((v39 & 1) == 0) {
            goto LABEL_23;
          }
        }
        else
        {
          sub_1ACB39C48((uint64_t)v21, type metadata accessor for StoreFeedUpdater.Update);
        }
        uint64_t v40 = *(void *)(a1 + updated[12]);
        sub_1ACB37844(v34, (uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
        if (v40 == 23)
        {
          uint64_t v41 = *(void *)&v19[updated[12]];
          sub_1ACB39C48((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
          if (v41 != 23) {
            goto LABEL_23;
          }
          sub_1ACB37844(v34, v37, type metadata accessor for StoreFeedUpdater.Update);
        }
        else
        {
          sub_1ACB39C48((uint64_t)v19, type metadata accessor for StoreFeedUpdater.Update);
          sub_1ACB37844(v34, v37, type metadata accessor for StoreFeedUpdater.Update);
          if (v40 == 8)
          {
            uint64_t v42 = *(void *)(v37 + updated[12]);
            sub_1ACB39C48(v37, type metadata accessor for StoreFeedUpdater.Update);
            if (v42 != 8) {
              goto LABEL_23;
            }
            goto LABEL_17;
          }
        }
        sub_1ACB39C48(v37, type metadata accessor for StoreFeedUpdater.Update);
LABEL_17:
        uint64_t v43 = a1;
        uint64_t v44 = v77;
        uint64_t v45 = v43;
        int v46 = *(unsigned __int8 *)(v43 + *(int *)(v77 + 24));
        sub_1ACB37844(v34, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
        if (v46 == 1)
        {
          char v47 = v13[*(int *)(v44 + 24)];
          sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
          if ((v47 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v13 = v72;
            uint64_t v19 = (char *)v77;
            a1 = v45;
            os_log_type_t v31 = v67;
            uint64_t v29 = v68;
            goto LABEL_27;
          }
        }
        else
        {
          sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
        }
        a1 = v45;
        int v48 = *(unsigned __int8 *)(v45 + updated[9]);
        sub_1ACB37844(v34, v38, type metadata accessor for StoreFeedUpdater.Update);
        if (v48 == 1)
        {
          char v49 = *(unsigned char *)(v38 + updated[9]);
          sub_1ACB39C48(v38, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v37 = (uint64_t)v76;
          if ((v49 & 1) == 0)
          {
LABEL_23:
            swift_bridgeObjectRelease();
            os_log_type_t v31 = v67;
            uint64_t v29 = v68;
            goto LABEL_26;
          }
        }
        else
        {
          sub_1ACB39C48(v38, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t v37 = (uint64_t)v76;
        }
        ++v28;
        v34 += (uint64_t)isa;
        if (v74 == v28)
        {
          swift_bridgeObjectRelease();
          os_log_type_t v31 = v67;
          uint64_t v29 = v68;
          unint64_t v28 = *(void *)(*v67 + 16);
          goto LABEL_26;
        }
      }
    }
    unint64_t v28 = 0;
LABEL_26:
    uint64_t v13 = v72;
    uint64_t v19 = (char *)v77;
LABEL_27:
    swift_beginAccess();
    if (*(void *)(*v31 + 16) >= v28)
    {
      uint64_t v50 = v71;
      sub_1ACB37844(a1, v71, type metadata accessor for StoreFeedUpdater.Update);
      sub_1ACAC8DA4(v28, v28, v50);
      swift_endAccess();
      if (qword_1EB76D4F8 == -1) {
        goto LABEL_29;
      }
      goto LABEL_35;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_35:
  swift_once();
LABEL_29:
  uint64_t v51 = sub_1ACE754C8();
  __swift_project_value_buffer(v51, (uint64_t)qword_1EB76D4E0);
  sub_1ACB37844(a1, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
  swift_retain();
  uint64_t v52 = sub_1ACE75498();
  os_log_type_t v53 = sub_1ACE76C08();
  int v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v55 = swift_slowAlloc();
    LODWORD(v76) = v54;
    uint64_t v56 = v55;
    uint64_t v77 = swift_slowAlloc();
    v79[0] = v77;
    *(_DWORD *)uint64_t v56 = 136315907;
    uint64_t v57 = *(void *)(v29 + 16);
    unint64_t v58 = *(void *)(v29 + 24);
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_1ACA3189C(v57, v58, v79);
    sub_1ACE76FF8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2160;
    uint64_t v78 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v56 + 22) = 2081;
    os_log_t v75 = v52;
    uint64_t v59 = v69;
    sub_1ACB37844((uint64_t)v13, v69, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v60 = (uint64_t *)(v59 + *((int *)v19 + 8));
    uint64_t v61 = *v60;
    unint64_t v62 = v60[1];
    swift_bridgeObjectRetain();
    sub_1ACB39C48(v59, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v78 = sub_1ACA3189C(v61, v62, v79);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
    *(_WORD *)(v56 + 32) = 2048;
    uint64_t v78 = v28;
    sub_1ACE76FF8();
    os_log_t v63 = v75;
    _os_log_impl(&dword_1AC9D5000, v75, (os_log_type_t)v76, "%s: inserting %{private,mask.hash}s at index %ld", (uint8_t *)v56, 0x2Au);
    uint64_t v64 = v77;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v64, -1, -1);
    MEMORY[0x1AD11B340](v56, -1, -1);
  }
  else
  {
    swift_release();
    sub_1ACB39C48((uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
  }
  return sub_1ACB35FE8();
}

uint64_t sub_1ACB35FE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedManagerBagConfiguration();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v5 = *(void *)(v62 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v62);
  uint64_t v64 = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v58[-v9];
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = &v58[-v12];
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v58[-v14];
  uint64_t v16 = (void *)sub_1ACE75EC8();
  uint64_t v17 = *(v16 - 1);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = *(void **)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  void *v19 = v20;
  (*(void (**)(void *, void, void *))(v17 + 104))(v19, *MEMORY[0x1E4FBCBF0], v16);
  id v63 = v20;
  uint64_t v21 = sub_1ACE75EF8();
  uint64_t v23 = *(void (**)(void *, void *))(v17 + 8);
  unint64_t v22 = v17 + 8;
  v23(v19, v16);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v21 = (uint64_t)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v21 + 16) >= v1[4]) {
    return result;
  }
  uint64_t v16 = (void *)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue);
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*v16 + 16)) {
    return result;
  }
  swift_beginAccess();
  if (!*(void *)(*v16 + 16)) {
    goto LABEL_16;
  }
  unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1ACB37844(*v16 + v22, (uint64_t)v15, type metadata accessor for StoreFeedUpdater.Update);
  sub_1ACACA264(0, 1);
  swift_endAccess();
  sub_1ACB37844((uint64_t)v15, (uint64_t)v13, type metadata accessor for StoreFeedUpdater.Update);
  swift_beginAccess();
  uint64_t v16 = *(void **)v21;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v21 = v16;
  uint64_t v61 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_17:
    uint64_t v16 = (void *)sub_1ACA42C00(0, v16[2] + 1, 1, (unint64_t)v16);
    *(void *)uint64_t v21 = v16;
  }
  unint64_t v27 = v16[2];
  unint64_t v26 = v16[3];
  if (v27 >= v26 >> 1)
  {
    uint64_t v16 = (void *)sub_1ACA42C00(v26 > 1, v27 + 1, 1, (unint64_t)v16);
    *(void *)uint64_t v21 = v16;
  }
  void v16[2] = v27 + 1;
  sub_1ACB39CA8((uint64_t)v13, (uint64_t)v16 + v22 + *(void *)(v5 + 72) * v27, type metadata accessor for StoreFeedUpdater.Update);
  swift_endAccess();
  if (qword_1EB76D4F8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1ACE754C8();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D4E0);
  sub_1ACB37844((uint64_t)v15, (uint64_t)v10, type metadata accessor for StoreFeedUpdater.Update);
  swift_retain();
  uint64_t v29 = sub_1ACE75498();
  os_log_type_t v30 = sub_1ACE76C08();
  int v31 = v30;
  BOOL v32 = os_log_type_enabled(v29, v30);
  os_log_t v33 = v64;
  if (v32)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    v66[0] = v60;
    *(_DWORD *)uint64_t v34 = 136315651;
    int v59 = v31;
    uint64_t v36 = v1[2];
    unint64_t v35 = v1[3];
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1ACA3189C(v36, v35, v66);
    sub_1ACE76FF8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2160;
    uint64_t v65 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v34 + 22) = 2081;
    sub_1ACB37844((uint64_t)v10, (uint64_t)v33, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v37 = (uint64_t *)&v33[*(int *)(v62 + 32)];
    uint64_t v38 = *v37;
    unint64_t v39 = v37[1];
    swift_bridgeObjectRetain();
    sub_1ACB39C48((uint64_t)v64, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v65 = sub_1ACA3189C(v38, v39, v66);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    os_log_t v33 = v64;
    sub_1ACB39C48((uint64_t)v10, type metadata accessor for StoreFeedUpdater.Update);
    _os_log_impl(&dword_1AC9D5000, v29, (os_log_type_t)v59, "%s: starting %{private,mask.hash}s", (uint8_t *)v34, 0x20u);
    uint64_t v40 = v60;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v40, -1, -1);
    MEMORY[0x1AD11B340](v34, -1, -1);
  }
  else
  {
    swift_release();
    sub_1ACB39C48((uint64_t)v10, type metadata accessor for StoreFeedUpdater.Update);
  }

  uint64_t v41 = (uint64_t)v61;
  sub_1ACB37844((uint64_t)v15, (uint64_t)v33, type metadata accessor for StoreFeedUpdater.Update);
  sub_1ACB37844((uint64_t)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_bagConfiguration, v41, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  uint64_t v42 = (uint64_t)v33;
  uint64_t v43 = *(void **)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ctx);
  sub_1ACA3E158((uint64_t)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ingesterProvider, (uint64_t)v66);
  uint64_t v44 = *(void **)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_mediaRequestController);
  uint64_t v45 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for StoreFeedUpdaterJob();
  uint64_t v46 = swift_allocObject();
  id v47 = v63;
  id v48 = v43;
  uint64_t v49 = sub_1ACB3A1E4(v42, v41, v48, (uint64_t)v66, (uint64_t)v44, v47, (uint64_t)sub_1ACB3A1B4, v45, v46);

  swift_release();
  uint64_t v50 = *(void *)&v15[*(int *)(type metadata accessor for FeedUpdateRequest() + 28)];
  uint64_t v51 = (void *)((char *)v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_jobs);
  swift_beginAccess();
  swift_retain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v65 = *v51;
  *uint64_t v51 = 0x8000000000000000;
  sub_1ACD0D204(v49, v50, v52);
  *uint64_t v51 = v65;
  swift_bridgeObjectRelease();
  uint64_t v53 = swift_endAccess();
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = v54 + 4;
  uint64_t v56 = v54 + 6;
  os_unfair_lock_lock(v54 + 6);
  sub_1ACB3A5EC(v55);
  os_unfair_lock_unlock(v56);
  uint64_t v57 = sub_1ACB0A6E4();
  sub_1ACB35FE8(v57);
  swift_release();
  return sub_1ACB39C48((uint64_t)v15, type metadata accessor for StoreFeedUpdater.Update);
}

uint64_t sub_1ACB36870(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a4(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACB368EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE75EC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *uint64_t v9 = (uint64_t)v10;
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v11 = v10;
  uint64_t v12 = sub_1ACE75EF8();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(a1 + *(int *)(type metadata accessor for FeedUpdateRequest() + 28));
  uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_jobs);
  swift_beginAccess();
  uint64_t v14 = sub_1ACA6A1FC(v13);
  if ((v15 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v12 = v14;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v9;
  uint64_t v26 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_11;
  }
  while (1)
  {
    sub_1ACB1BFE0(v12, v17);
    *uint64_t v9 = v17;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v18 = swift_endAccess();
    uint64_t v12 = (uint64_t)&v25;
    MEMORY[0x1F4188790](v18);
    *(&v25 - 2) = a1;
    uint64_t v19 = v3 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue;
    swift_beginAccess();
    uint64_t v9 = 0;
    uint64_t v20 = sub_1ACB372D4((uint64_t (*)(unint64_t))sub_1ACB39D10);
    uint64_t v21 = *(void *)(*(void *)v19 + 16);
    if (v21 >= v20) {
      break;
    }
LABEL_10:
    __break(1u);
LABEL_11:
    sub_1ACD071B0();
    uint64_t v17 = v26;
  }
  sub_1ACACA264(v20, v21);
  uint64_t v22 = swift_endAccess();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v3
                                                + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  if (v23)
  {
    swift_retain();
    v23(a1, a2);
    uint64_t v22 = sub_1ACA76F34((uint64_t)v23);
  }
  return sub_1ACB35FE8(v22);
}

uint64_t sub_1ACB36B88(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = *(void **)(v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v14 = (uint64_t *)(v1 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue);
    swift_beginAccess();
    uint64_t v15 = *v14;
    uint64_t v16 = *(void *)(v15 + 16);
    if (!v16) {
      return 0;
    }
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v18 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v19 = v16 - 1;
    do
    {
      sub_1ACB37844(v17, (uint64_t)v6, type metadata accessor for StoreFeedUpdater.Update);
      uint64_t v20 = *(void *)&v6[*(int *)(type metadata accessor for FeedUpdateRequest() + 28)];
      sub_1ACB39C48((uint64_t)v6, type metadata accessor for StoreFeedUpdater.Update);
      BOOL v22 = v20 == a1;
      BOOL v21 = v20 == a1;
      BOOL v22 = v22 || v19-- == 0;
      v17 += v18;
    }
    while (!v22);
    swift_bridgeObjectRelease();
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACB36DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for StoreFeedUpdater.Update(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75EC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue);
  *id v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v25 = v5;
    uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue);
    swift_beginAccess();
    uint64_t v17 = *v16;
    uint64_t v18 = *(void *)(*v16 + 16);
    if (v18)
    {
      uint64_t v24 = a2;
      uint64_t v19 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v20 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain();
      unint64_t v21 = 0;
      while (1)
      {
        sub_1ACB37844(v19, (uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
        uint64_t v22 = *(void *)&v8[*(int *)(type metadata accessor for FeedUpdateRequest() + 28)];
        sub_1ACB39C48((uint64_t)v8, type metadata accessor for StoreFeedUpdater.Update);
        if (v22 == a1) {
          break;
        }
        ++v21;
        v19 += v20;
        if (v18 == v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = 1;
          a2 = v24;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v23, 1, v25);
        }
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      a2 = v24;
      sub_1ACB2E2A0(v21, v24);
      swift_endAccess();
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v23, 1, v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACB370AC()
{
  swift_bridgeObjectRelease();
  sub_1ACB39C48(v0 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_bagConfiguration, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);

  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ingesterProvider);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACA76F34(*(void *)(v0 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback));
  return v0;
}

uint64_t sub_1ACB37174()
{
  sub_1ACB370AC();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB371CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1ACB37204(int8x16_t *a1, uint64_t *a2)
{
  int v2 = *((unsigned __int8 *)a2 + 64);
  if (!a1[4].i8[0]) {
    return v2 == 0;
  }
  if (a1[4].i8[0] == 1) {
    return v2 == 1;
  }
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  int8x16_t v12 = vorrq_s8(a1[1], a1[2]);
  if (a1->i64[0] | *(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | a1[3].i64[0] | a1[3].i64[1] | a1->i64[1])
  {
    if (v2 != 2 || v5 != 1 || v7 | v4 | v6 | v9 | v8 | v11 | v10) {
      return 0;
    }
  }
  else if (v2 != 2 || v7 | v4 | v5 | v6 | v9 | v8 | v11 | v10)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1ACB372D4(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for StoreFeedUpdater.Update(0) - 8;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    os_log_type_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      uint64_t v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_1ACB37844(v12 + v20, v35, type metadata accessor for StoreFeedUpdater.Update);
      char v24 = a1(v23);
      uint64_t result = sub_1ACB39C48(v23, type metadata accessor for StoreFeedUpdater.Update);
      if (v24)
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_1ACB37844(v26 + v31 + v16 * v32, v33, type metadata accessor for StoreFeedUpdater.Update);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_1ACB37844(v26 + v36, v34, type metadata accessor for StoreFeedUpdater.Update);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v30;
          *os_log_type_t v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1ACDE6F08(v26);
            unint64_t v26 = result;
            *uint64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1ACB3A150(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1ACB3A150(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1ACB37658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_pendingQueue) = MEMORY[0x1E4FBC860];
  *(void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_runningQueue) = v12;
  *(void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_jobs) = MEMORY[0x1E4FBC868];
  uint64_t v13 = (void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_completionCallback);
  *uint64_t v13 = 0;
  v13[1] = 0;
  v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = a3;
  sub_1ACB37844(a4, (uint64_t)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_bagConfiguration, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  *(void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ctx) = a5;
  sub_1ACA3E158(a6, (uint64_t)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_ingesterProvider);
  *(void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_queue) = a7;
  id v14 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  id v15 = a5;
  id v16 = a7;
  char v17 = (char *)objc_msgSend(v14, sel_init);
  *(void *)((char *)v7 + OBJC_IVAR____TtCC18PodcastsFoundation16StoreFeedUpdater5Queue_mediaRequestController) = v17;
  uint64_t v18 = &v17[OBJC_IVAR____TtC18PodcastsFoundation22MediaRequestController_cachePolicy];
  swift_beginAccess();
  *(void *)uint64_t v18 = 1;
  objc_msgSend(v17, sel_setPersonalizeRequests_, 0);
  __swift_destroy_boxed_opaque_existential_0(a6);
  sub_1ACB39C48(a4, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  return v7;
}

uint64_t sub_1ACB377DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACB37814(uint64_t a1, uint64_t a2)
{
  return sub_1ACB36870(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_1ACB339D8);
}

uint64_t sub_1ACB37844(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACB378AC()
{
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)updated - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)updated - 1) + 80));
  uint64_t v3 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + updated[5];
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = v2 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + updated[14])) {
    swift_release();
  }
  if (*(void *)(v2 + updated[15])) {
    swift_release();
  }
  if (*(void *)(v2 + updated[16])) {
    swift_release();
  }
  if (*(void *)(v2 + updated[17])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB37AF8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeedUpdateRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = (uint64_t *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  return sub_1ACB2F120(v5, v6, v7, v9, v10);
}

uint64_t type metadata accessor for StoreFeedUpdater()
{
  return self;
}

uint64_t method lookup function for StoreFeedUpdater(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StoreFeedUpdater);
}

uint64_t dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of StoreFeedUpdater.__allocating_init(bagConfiguration:ctx:ingesterProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of StoreFeedUpdater.updateFeed(request:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t sub_1ACB37C38()
{
  return type metadata accessor for StoreFeedUpdater.Queue(0);
}

uint64_t sub_1ACB37C40()
{
  uint64_t result = type metadata accessor for FeedManagerBagConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACB37D20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1ACE75118();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1ACB37DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1ACE75118();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_1ACB37E54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE75118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1ACB37ED0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE75118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1ACB37F4C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE75118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1ACB37FC8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1ACE75118();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1ACB38044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB38058);
}

uint64_t sub_1ACB38058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1ACE75118();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1ACB380C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB380DC);
}

uint64_t sub_1ACB380DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1ACE75118();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for StoreFeedUpdater.Retry(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76B2C0);
}

uint64_t sub_1ACB38170()
{
  uint64_t result = sub_1ACE75118();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StoreFeedUpdater.UpdaterJobMetricsData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StoreFeedUpdater.UpdaterJobMetricsData(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StoreFeedUpdater.UpdaterJobMetricsData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StoreFeedUpdater.UpdaterJobMetricsData(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdater.UpdaterJobMetricsData()
{
  return &type metadata for StoreFeedUpdater.UpdaterJobMetricsData;
}

void destroy for StoreFeedUpdater.Result(uint64_t a1)
{
}

uint64_t initializeWithCopy for StoreFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unint64_t v10 = *(void **)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1ACB0F624(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for StoreFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unint64_t v10 = *(void **)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1ACB0F624(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  unint64_t v19 = *(void **)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1ACB0F9E4(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for StoreFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  char v11 = *(void **)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1ACB0F9E4(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreFeedUpdater.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreFeedUpdater.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACB38660(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 1u) {
    return *(unsigned __int8 *)(a1 + 64);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1ACB38678(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(void *)(result + 56) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StoreFeedUpdater.Result()
{
  return &type metadata for StoreFeedUpdater.Result;
}

void *sub_1ACB386B4(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1ACE75118();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
    uint64_t v9 = updated[5];
    uint64_t v10 = (char *)a1 + v9;
    char v11 = &a2[v9];
    uint64_t v12 = sub_1ACE74F28();
    uint64_t v13 = *(void *)(v12 - 8);
    long long v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    uint64_t v15 = updated[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = &a2[v15];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v14(v16, v17, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    *(void *)((char *)a1 + updated[7]) = *(void *)&a2[updated[7]];
    uint64_t v20 = updated[8];
    unint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = &a2[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *unint64_t v21 = *(void *)v22;
    v21[1] = v23;
    *((unsigned char *)a1 + updated[9]) = a2[updated[9]];
    *((unsigned char *)a1 + updated[10]) = a2[updated[10]];
    *((unsigned char *)a1 + updated[11]) = a2[updated[11]];
    *(void *)((char *)a1 + updated[12]) = *(void *)&a2[updated[12]];
    *((unsigned char *)a1 + updated[13]) = a2[updated[13]];
    uint64_t v24 = updated[14];
    uint64_t v25 = (void *)((char *)a1 + v24);
    unint64_t v26 = &a2[v24];
    uint64_t v27 = *(void *)&a2[v24];
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v28 = *((void *)v26 + 1);
      *uint64_t v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    }
    uint64_t v29 = updated[15];
    os_log_type_t v30 = (void *)((char *)a1 + v29);
    unint64_t v31 = &a2[v29];
    if (*(void *)v31)
    {
      uint64_t v32 = *((void *)v31 + 1);
      *os_log_type_t v30 = *(void *)v31;
      v30[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)os_log_type_t v30 = *(_OWORD *)v31;
    }
    uint64_t v33 = updated[16];
    uint64_t v34 = (void *)((char *)a1 + v33);
    uint64_t v35 = &a2[v33];
    if (*(void *)v35)
    {
      uint64_t v36 = *((void *)v35 + 1);
      *uint64_t v34 = *(void *)v35;
      v34[1] = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    }
    uint64_t v37 = updated[17];
    uint64_t v38 = (void *)((char *)a1 + v37);
    unint64_t v39 = &a2[v37];
    if (*(void *)v39)
    {
      uint64_t v40 = *((void *)v39 + 1);
      *uint64_t v38 = *(void *)v39;
      v38[1] = v40;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    }
    *(void *)((char *)a1 + updated[18]) = *(void *)&a2[updated[18]];
    uint64_t v41 = a3[6];
    *((unsigned char *)a1 + a3[5]) = a2[a3[5]];
    *((unsigned char *)a1 + v41) = a2[v41];
    uint64_t v42 = a3[8];
    *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
    uint64_t v43 = (void *)((char *)a1 + v42);
    uint64_t v44 = &a2[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *uint64_t v43 = *(void *)v44;
    v43[1] = v45;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1ACB389EC(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v4 = a1 + updated[5];
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + updated[14])) {
    swift_release();
  }
  if (*(void *)(a1 + updated[15])) {
    swift_release();
  }
  if (*(void *)(a1 + updated[16])) {
    swift_release();
  }
  if (*(void *)(a1 + updated[17])) {
    swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB38B9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v8 = updated[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  v13(v9, v10, v11);
  uint64_t v14 = updated[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(void *)(a1 + updated[7]) = *(void *)(a2 + updated[7]);
  uint64_t v18 = updated[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  *(unsigned char *)(a1 + updated[9]) = *(unsigned char *)(a2 + updated[9]);
  *(unsigned char *)(a1 + updated[10]) = *(unsigned char *)(a2 + updated[10]);
  *(unsigned char *)(a1 + updated[11]) = *(unsigned char *)(a2 + updated[11]);
  *(void *)(a1 + updated[12]) = *(void *)(a2 + updated[12]);
  *(unsigned char *)(a1 + updated[13]) = *(unsigned char *)(a2 + updated[13]);
  uint64_t v22 = updated[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22);
  swift_bridgeObjectRetain();
  if (v25)
  {
    uint64_t v26 = *(void *)(v24 + 8);
    *uint64_t v23 = v25;
    v23[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  uint64_t v27 = updated[15];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  if (*v29)
  {
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  }
  uint64_t v31 = updated[16];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  if (*v33)
  {
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  }
  uint64_t v35 = updated[17];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  if (*v37)
  {
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  }
  *(void *)(a1 + updated[18]) = *(void *)(a2 + updated[18]);
  uint64_t v39 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  uint64_t v40 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1ACB38E84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a1, a2, v5);
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v7 = *(int *)(updated + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v13 = *(int *)(updated + 24);
  uint64_t v14 = (const void *)(a2 + v13);
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  int v54 = (int *)updated;
  uint64_t v55 = (void *)(a1 + v13);
  LODWORD(updated) = v15();
  int v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (updated)
  {
    if (v16)
    {
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v55;
LABEL_6:
      memcpy(v18, v14, v17);
      goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v55, v14, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v55, 0, 1, v10);
  }
  else
  {
    if (v16)
    {
      (*(void (**)(void *, uint64_t))(v11 + 8))(v55, v10);
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v55;
      goto LABEL_6;
    }
    v12((uint64_t)v55, (uint64_t)v14, v10);
  }
LABEL_9:
  *(void *)(a1 + v54[7]) = *(void *)(a2 + v54[7]);
  uint64_t v19 = v54[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v54[9]) = *(unsigned char *)(a2 + v54[9]);
  *(unsigned char *)(a1 + v54[10]) = *(unsigned char *)(a2 + v54[10]);
  *(unsigned char *)(a1 + v54[11]) = *(unsigned char *)(a2 + v54[11]);
  *(void *)(a1 + v54[12]) = *(void *)(a2 + v54[12]);
  *(unsigned char *)(a1 + v54[13]) = *(unsigned char *)(a2 + v54[13]);
  uint64_t v22 = v54[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a1 + v22);
  uint64_t v26 = *(void *)(a2 + v22);
  if (v25)
  {
    if (v26)
    {
      uint64_t v27 = *(void *)(v24 + 8);
      *uint64_t v23 = v26;
      v23[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v26)
  {
    uint64_t v28 = *(void *)(v24 + 8);
    *uint64_t v23 = v26;
    v23[1] = v28;
    swift_retain();
    goto LABEL_16;
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_16:
  uint64_t v29 = v54[15];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a1 + v29);
  uint64_t v33 = *(void *)(a2 + v29);
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *(void *)(v31 + 8);
      *uint64_t v30 = v33;
      v30[1] = v34;
      swift_retain();
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *(void *)(v31 + 8);
    *uint64_t v30 = v33;
    v30[1] = v35;
    swift_retain();
    goto LABEL_23;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
LABEL_23:
  uint64_t v36 = v54[16];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a1 + v36);
  uint64_t v40 = *(void *)(a2 + v36);
  if (v39)
  {
    if (v40)
    {
      uint64_t v41 = *(void *)(v38 + 8);
      *uint64_t v37 = v40;
      v37[1] = v41;
      swift_retain();
      swift_release();
      goto LABEL_30;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *(void *)(v38 + 8);
    *uint64_t v37 = v40;
    v37[1] = v42;
    swift_retain();
    goto LABEL_30;
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_30:
  uint64_t v43 = v54[17];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(a1 + v43);
  uint64_t v47 = *(void *)(a2 + v43);
  if (!v46)
  {
    if (v47)
    {
      uint64_t v49 = *(void *)(v45 + 8);
      void *v44 = v47;
      v44[1] = v49;
      swift_retain();
      goto LABEL_37;
    }
LABEL_36:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_37;
  }
  if (!v47)
  {
    swift_release();
    goto LABEL_36;
  }
  uint64_t v48 = *(void *)(v45 + 8);
  void *v44 = v47;
  v44[1] = v48;
  swift_retain();
  swift_release();
LABEL_37:
  *(void *)(a1 + v54[18]) = *(void *)(a2 + v54[18]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v50 = a3[8];
  uint64_t v51 = (void *)(a1 + v50);
  char v52 = (void *)(a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACB39300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v8 = updated[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  uint64_t v14 = updated[6];
  uint64_t v15 = (void *)(a1 + v14);
  int v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(void *)(a1 + updated[7]) = *(void *)(a2 + updated[7]);
  *(_OWORD *)(a1 + updated[8]) = *(_OWORD *)(a2 + updated[8]);
  *(unsigned char *)(a1 + updated[9]) = *(unsigned char *)(a2 + updated[9]);
  *(unsigned char *)(a1 + updated[10]) = *(unsigned char *)(a2 + updated[10]);
  *(unsigned char *)(a1 + updated[11]) = *(unsigned char *)(a2 + updated[11]);
  *(void *)(a1 + updated[12]) = *(void *)(a2 + updated[12]);
  *(unsigned char *)(a1 + updated[13]) = *(unsigned char *)(a2 + updated[13]);
  uint64_t v18 = updated[14];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  if (*v20)
  {
    uint64_t v22 = v20[1];
    void *v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  uint64_t v23 = updated[15];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  if (*v25)
  {
    uint64_t v27 = v25[1];
    *uint64_t v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = updated[16];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  if (*v30)
  {
    uint64_t v32 = v30[1];
    *uint64_t v29 = v31;
    v29[1] = v32;
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v33 = updated[17];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  if (*v35)
  {
    uint64_t v37 = v35[1];
    *uint64_t v34 = v36;
    v34[1] = v37;
  }
  else
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  *(void *)(a1 + updated[18]) = *(void *)(a2 + updated[18]);
  uint64_t v38 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  return a1;
}

uint64_t sub_1ACB395B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1ACE75118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a1, a2, v5);
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v7 = updated[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  int v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v59(v8, v9, v10);
  uint64_t v12 = updated[6];
  uint64_t v13 = (const void *)(a2 + v12);
  uint64_t v14 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v60 = (void *)(a1 + v12);
  int v15 = v14();
  int v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v14)(v13, 1, v10);
  if (v15)
  {
    if (v16)
    {
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v60;
LABEL_6:
      memcpy(v18, v13, v17);
      goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v60, v13, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
  }
  else
  {
    if (v16)
    {
      (*(void (**)(void *, uint64_t))(v11 + 8))(v60, v10);
      size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      uint64_t v18 = v60;
      goto LABEL_6;
    }
    v59((uint64_t)v60, (uint64_t)v13, v10);
  }
LABEL_9:
  *(void *)(a1 + updated[7]) = *(void *)(a2 + updated[7]);
  uint64_t v19 = updated[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + updated[9]) = *(unsigned char *)(a2 + updated[9]);
  *(unsigned char *)(a1 + updated[10]) = *(unsigned char *)(a2 + updated[10]);
  *(unsigned char *)(a1 + updated[11]) = *(unsigned char *)(a2 + updated[11]);
  *(void *)(a1 + updated[12]) = *(void *)(a2 + updated[12]);
  *(unsigned char *)(a1 + updated[13]) = *(unsigned char *)(a2 + updated[13]);
  uint64_t v24 = updated[14];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a1 + v24);
  uint64_t v28 = *(void *)(a2 + v24);
  if (v27)
  {
    if (v28)
    {
      uint64_t v29 = *(void *)(v26 + 8);
      *uint64_t v25 = v28;
      v25[1] = v29;
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  else if (v28)
  {
    uint64_t v30 = *(void *)(v26 + 8);
    *uint64_t v25 = v28;
    v25[1] = v30;
    goto LABEL_16;
  }
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
LABEL_16:
  uint64_t v31 = updated[15];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(a1 + v31);
  uint64_t v35 = *(void *)(a2 + v31);
  if (v34)
  {
    if (v35)
    {
      uint64_t v36 = *(void *)(v33 + 8);
      void *v32 = v35;
      v32[1] = v36;
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  else if (v35)
  {
    uint64_t v37 = *(void *)(v33 + 8);
    void *v32 = v35;
    v32[1] = v37;
    goto LABEL_23;
  }
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
LABEL_23:
  uint64_t v38 = updated[16];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(a1 + v38);
  uint64_t v42 = *(void *)(a2 + v38);
  if (v41)
  {
    if (v42)
    {
      uint64_t v43 = *(void *)(v40 + 8);
      *uint64_t v39 = v42;
      v39[1] = v43;
      swift_release();
      goto LABEL_30;
    }
    swift_release();
  }
  else if (v42)
  {
    uint64_t v44 = *(void *)(v40 + 8);
    *uint64_t v39 = v42;
    v39[1] = v44;
    goto LABEL_30;
  }
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
LABEL_30:
  uint64_t v45 = updated[17];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)(a1 + v45);
  uint64_t v49 = *(void *)(a2 + v45);
  if (!v48)
  {
    if (v49)
    {
      uint64_t v51 = *(void *)(v47 + 8);
      *uint64_t v46 = v49;
      v46[1] = v51;
      goto LABEL_37;
    }
LABEL_36:
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    goto LABEL_37;
  }
  if (!v49)
  {
    swift_release();
    goto LABEL_36;
  }
  uint64_t v50 = *(void *)(v47 + 8);
  *uint64_t v46 = v49;
  v46[1] = v50;
  swift_release();
LABEL_37:
  *(void *)(a1 + updated[18]) = *(void *)(a2 + updated[18]);
  swift_release();
  uint64_t v52 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v52) = *(unsigned char *)(a2 + v52);
  uint64_t v53 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  int v54 = (void *)(a1 + v53);
  uint64_t v55 = (uint64_t *)(a2 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *int v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACB399D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACB399EC);
}

uint64_t sub_1ACB399EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v7 = *(void *)(updated - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, updated);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1ACB39AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACB39AC4);
}

uint64_t sub_1ACB39AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedUpdateRequest();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for StoreFeedUpdater.Update(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76B358);
}

uint64_t sub_1ACB39BA4()
{
  uint64_t result = type metadata accessor for FeedUpdateRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ACB39C48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACB39CA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1ACB39D10(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  return *(void *)(a1 + *(int *)(updated + 28)) == *(void *)(v3 + *(int *)(updated + 28));
}

void sub_1ACB39D60(uint64_t a1, uint64_t a2)
{
  id v19 = self;
  uint64_t v4 = (void *)sub_1ACE76178();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ACE8DCB0;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  sub_1ACE771F8();
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(void *)(v5 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v5 + 72) = v7;
  sub_1ACE771F8();
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(v5 + 168) = v8;
  *(void *)(v5 + 144) = v9;
  sub_1ACE771F8();
  uint64_t v10 = *(void *)(a1 + 32);
  *(void *)(v5 + 24sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  *(void *)(v5 + 216) = v10;
  sub_1ACE771F8();
  uint64_t v11 = *(void *)(a1 + 8);
  *(void *)(v5 + 312) = v8;
  *(void *)(v5 + 288) = v11;
  sub_1ACE771F8();
  uint64_t v12 = *(void *)(a1 + 40);
  *(void *)(v5 + 384) = v8;
  *(void *)(v5 + 36sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v12;
  sub_1ACE771F8();
  uint64_t v13 = *(void *)a1;
  *(void *)(v5 + 456) = v8;
  *(void *)(v5 + 432) = v13;
  sub_1ACE771F8();
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v15 = *(void *)(a2 + *(int *)(updated + 28));
  *(void *)(v5 + 528) = MEMORY[0x1E4FBC1C8];
  *(void *)(v5 + 504) = v15;
  sub_1ACE771F8();
  uint64_t v16 = *(void *)(a2 + *(int *)(updated + 48));
  *(void *)(v5 + 60sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  *(void *)(v5 + 576) = v16;
  sub_1ACE771F8();
  *(void *)(v5 + 672) = v6;
  *(void *)(v5 + 648) = 1668184435;
  *(void *)(v5 + 656) = 0xE400000000000000;
  sub_1ACE771F8();
  char v17 = *(unsigned char *)(a2 + *(int *)(type metadata accessor for StoreFeedUpdater.Update(0) + 28));
  *(void *)(v5 + 744) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(v5 + 72sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v17;
  sub_1ACE771F8();
  *(void *)(v5 + 816) = v6;
  *(_OWORD *)(v5 + 792) = *(_OWORD *)(a1 + 48);
  sub_1ACB3A6A4(a1);
  sub_1ACA364E4(v5);
  uint64_t v18 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_recordEvent_dataSource_data_, v4, 0, v18);
}

uint64_t sub_1ACB3A150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoreFeedUpdater.Update(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB3A1B4(uint64_t a1, uint64_t a2)
{
  return sub_1ACB36870(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_1ACB368EC);
}

uint64_t sub_1ACB3A1E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v39 = a7;
  uint64_t v38 = a4;
  uint64_t v43 = sub_1ACE753F8();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v40 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE75118();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MediaRequestController();
  v44[4] = &protocol witness table for MediaRequestController;
  v44[3] = v20;
  v44[0] = a5;
  sub_1ACB3A608((uint64_t)v45);
  sub_1ACB18D38(v45, (_OWORD *)(a9 + 16));
  uint64_t v21 = a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalName;
  *(_WORD *)(v21 + 16) = 256;
  *(void *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(void *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentInterval) = 0;
  uint64_t v22 = a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_currentIntervalMetadata;
  *(_OWORD *)uint64_t v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_OWORD *)(v22 + 32) = 0u;
  *(void *)(v22 + 48) = 0;
  *(void *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_overallInterval) = 0;
  uint64_t v42 = a1;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = v38;
  sub_1ACB37844(v23, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_update, type metadata accessor for StoreFeedUpdater.Update);
  sub_1ACB37844(v24, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_bagConfiguration, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  *(void *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ctx) = a3;
  sub_1ACA3E158(v25, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_ingesterProvider);
  sub_1ACA3E158((uint64_t)v44, a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_mediaRequestController);
  *(void *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_queue) = a6;
  uint64_t v26 = (void *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_completion);
  *uint64_t v26 = v39;
  v26[1] = a8;
  id v27 = a3;
  id v28 = a6;
  swift_retain();
  sub_1ACE75108();
  uint64_t v29 = sub_1ACE750C8();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v32 = (uint64_t *)(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_updaterJobUUID);
  uint64_t *v32 = v29;
  v32[1] = v31;
  uint64_t v33 = a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_metricsData;
  *(_OWORD *)(v33 + 16) = 0u;
  *(_OWORD *)(v33 + 32) = 0u;
  *(_OWORD *)uint64_t v33 = 0u;
  *(void *)(v33 + 48) = v29;
  *(void *)(v33 + 56) = v31;
  uint64_t v34 = qword_1EB76D390;
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1ACE75438();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EB76D378);
  sub_1ACE75428();
  uint64_t v36 = v40;
  sub_1ACE753C8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_0(v25);
  sub_1ACB39C48(v24, (uint64_t (*)(void))type metadata accessor for FeedManagerBagConfiguration);
  sub_1ACB39C48(v42, type metadata accessor for StoreFeedUpdater.Update);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(a9 + OBJC_IVAR____TtC18PodcastsFoundation19StoreFeedUpdaterJob_signpostID, v36, v43);
  return a9;
}

uint64_t sub_1ACB3A5EC(void *a1)
{
  return sub_1ACBF4388(a1);
}

double sub_1ACB3A608(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 153) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 169) = 1;
  return result;
}

uint64_t sub_1ACB3A630(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_1ACB3A658(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACB3A6A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACB3A6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B3A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1ACB3A738@<W0>(unsigned char *a1@<X8>)
{
  return sub_1ACB3ABDC(a1);
}

void *sub_1ACB3A750@<X0>(unsigned char *a1@<X8>)
{
  return sub_1ACAC5844(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1ACB3A76C()
{
  uint64_t v1 = *(void *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  uint64_t v15 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  swift_release();
  uint64_t v5 = v0 + ((v15 + 24) & ~v15);
  uint64_t v16 = v2;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v14(v5, v2);
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  uint64_t v7 = v5 + updated[5];
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = v5 + updated[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + updated[14])) {
    swift_release();
  }
  if (*(void *)(v5 + updated[15])) {
    swift_release();
  }
  if (*(void *)(v5 + updated[16])) {
    swift_release();
  }
  if (*(void *)(v5 + updated[17])) {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  v14(v0 + ((((v15 + 24) & ~v15) + v13 + v4) & ~v4), v16);
  return swift_deallocObject();
}

uint64_t sub_1ACB3AA30()
{
  uint64_t v1 = *(void *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1ACE75118() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1ACB32FBC(v6, v0 + v2, v0 + v5, v7);
}

uint64_t sub_1ACB3AB2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACB3AB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76B3A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1ACB3ABDC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1ACD66CD4(*(void *)(v1 + 16), **(void **)(v1 + 24), *(void *)(v1 + 32));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1ACB3AC18()
{
  uint64_t v1 = *(void *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1ACE75118();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  unint64_t v6 = v0 + v2 + updated[5];
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  unint64_t v10 = v0 + v2 + updated[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + updated[14])) {
    swift_release();
  }
  if (*(void *)(v3 + updated[15])) {
    swift_release();
  }
  if (*(void *)(v3 + updated[16])) {
    swift_release();
  }
  if (*(void *)(v3 + updated[17])) {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACB3AE5C()
{
  uint64_t v1 = *(void *)(type metadata accessor for StoreFeedUpdater.Update(0) - 8);
  return sub_1ACB30030(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void *sub_1ACB3AEC4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1ACB3A750(a1);
}

uint64_t IMURLBag.getCategoriesSyncThreshold()()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x1F4188298](sub_1ACB3AF04, 0, 0);
}

uint64_t sub_1ACB3AF04()
{
  id v1 = objc_msgSend(*(id *)(v0 + 136), sel_fetchCategoriesSyncThresholdValue);
  *(void *)(v0 + 144) = v1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_1ACB3B020;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1ACB3B384;
  *(void *)(v0 + 104) = &block_descriptor_0;
  *(void *)(v0 + 112) = v2;
  objc_msgSend(v1, sel_asyncValueWithCompletion_, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1ACB3B020()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1ACB3B19C;
  }
  else {
    uint64_t v2 = sub_1ACB3B130;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACB3B130()
{
  uint64_t v1 = *(void *)(v0 + 120);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1ACB3B19C()
{
  uint64_t v1 = (void *)v0[18];
  swift_willThrow();

  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[19];
  uint64_t v3 = sub_1ACE754C8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB76A5D0);
  id v4 = v2;
  unint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76BE8();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[19];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v11 = sub_1ACE74D68();
    v0[10] = v11;
    sub_1ACE76FF8();
    *unint64_t v10 = v11;

    _os_log_impl(&dword_1AC9D5000, v5, v6, "[Categories Sync] Could not get the threshold value from bag with error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1ACB3B384(uint64_t result, void *a2, char a3, void *a4)
{
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    swift_allocError();
    *unint64_t v5 = a4;
    id v6 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(result + 32) + 64) + 40);
    *(void *)uint64_t v7 = a2;
    *(unsigned char *)(v7 + 8) = a3;
    id v8 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACB3B448()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1ACB3B4F4;
  v3[17] = v2;
  return MEMORY[0x1F4188298](sub_1ACB3AF04, 0, 0);
}

uint64_t sub_1ACB3B4F4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

PodcastsFoundation::FeedUpdaterError_optional __swiftcall FeedUpdaterError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 17;
  if ((unint64_t)rawValue < 0x11) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (PodcastsFoundation::FeedUpdaterError_optional)rawValue;
}

uint64_t FeedUpdaterError.rawValue.getter()
{
  return *v0;
}

PodcastsFoundation::FeedUpdaterError_optional sub_1ACB3B610(Swift::Int *a1)
{
  return FeedUpdaterError.init(rawValue:)(*a1);
}

uint64_t sub_1ACB3B618(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1ACB3BB2C();
  unint64_t v5 = sub_1ACA339A4();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

id FeedUpdaterObjcError.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id FeedUpdaterObjcError.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedUpdaterObjcError();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FeedUpdaterObjcError()
{
  return self;
}

id FeedUpdaterObjcError.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedUpdaterObjcError();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static FeedUpdaterObjcError.domainName.getter()
{
  return sub_1ACE76228();
}

uint64_t static FeedUpdaterObjcError.feedURLIsEmpty.getter()
{
  return sub_1ACB3B900(7);
}

uint64_t static FeedUpdaterObjcError.localShowMissing.getter()
{
  return sub_1ACB3B900(10);
}

uint64_t static FeedUpdaterObjcError.preProcessHookDeniedUpdate.getter()
{
  return sub_1ACB3B900(11);
}

uint64_t static FeedUpdaterObjcError.internetNotReachable.getter()
{
  return sub_1ACB3B900(13);
}

uint64_t static FeedUpdaterObjcError.feedUpdatesDisabled.getter()
{
  return sub_1ACB3B900(14);
}

uint64_t static FeedUpdaterObjcError.notYetUpdatable.getter()
{
  return sub_1ACB3B900(15);
}

id sub_1ACB3B890(uint64_t a1, uint64_t a2, char a3)
{
  sub_1ACB18F1C();
  unint64_t v4 = (void *)swift_allocError();
  *unint64_t v5 = a3;
  id v6 = (void *)sub_1ACE74D68();

  return v6;
}

uint64_t static FeedUpdaterObjcError.nonSubscribableShow.getter()
{
  return sub_1ACB3B900(16);
}

uint64_t sub_1ACB3B900(char a1)
{
  sub_1ACB18F1C();
  uint64_t result = swift_allocError();
  *uint64_t v3 = a1;
  return result;
}

unint64_t sub_1ACB3B944()
{
  unint64_t result = qword_1E99F22B0;
  if (!qword_1E99F22B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F22B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeSortType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedUpdaterError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB3BAF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdaterError()
{
  return &type metadata for FeedUpdaterError;
}

unint64_t sub_1ACB3BB2C()
{
  unint64_t result = qword_1EB76B048;
  if (!qword_1EB76B048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B048);
  }
  return result;
}

uint64_t AVAssetsInLibraryIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEB0);
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  unsigned int v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC50);
  uint64_t v46 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  int v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA48);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  uint64_t v50 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB70);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D8D8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v53 = v17;
  uint64_t v54 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v45 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D9B8);
  uint64_t v58 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v47 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76D910);
  uint64_t v57 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v48 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(self, sel_libraryDirectory);
  sub_1ACE74E98();

  sub_1ACE759C8();
  *(void *)&v59[0] = *(void *)(a1 + 80);
  uint64_t v23 = *(void **)&v59[0];
  uint64_t v24 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 1, 1, v24);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB76DEA8, &qword_1EB76DEB0);
  sub_1ACA93A6C();
  id v25 = v23;
  uint64_t v26 = v42;
  sub_1ACE75CA8();
  sub_1ACAFA0D0((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v26);
  sub_1ACAFA130(a1, (uint64_t)v59);
  uint64_t v27 = swift_allocObject();
  long long v28 = v59[3];
  *(_OWORD *)(v27 + 48) = v59[2];
  *(_OWORD *)(v27 + 64) = v28;
  *(_OWORD *)(v27 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v59[4];
  *(void *)(v27 + 96) = v60;
  long long v29 = v59[1];
  *(_OWORD *)(v27 + 16) = v59[0];
  *(_OWORD *)(v27 + 32) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA51EA4(&qword_1EB76DC48, &qword_1EB76DC50);
  uint64_t v30 = v44;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v30);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC00);
  sub_1ACA51EA4(&qword_1EB76DA40, &qword_1EB76DA48);
  sub_1ACA51EA4(&qword_1EB76DBF8, &qword_1EB76DC00);
  uint64_t v31 = v49;
  sub_1ACE75C68();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v31);
  sub_1ACA51EA4(&qword_1EB76DB68, &qword_1EB76DB70);
  uint64_t v32 = v45;
  uint64_t v33 = v51;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v33);
  sub_1ACA51EA4(&qword_1EB76D8D0, &qword_1EB76D8D8);
  uint64_t v34 = v47;
  uint64_t v35 = v53;
  sub_1ACE75C08();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v35);
  type metadata accessor for DownloadConsistency.Issue(0);
  sub_1ACA51EA4(&qword_1EB76D9B0, &qword_1EB76D9B8);
  uint64_t v36 = v48;
  uint64_t v37 = v56;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v37);
  sub_1ACA51EA4(&qword_1EB76D908, (uint64_t *)&unk_1EB76D910);
  uint64_t v38 = v55;
  uint64_t v39 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v38);
  return v39;
}

uint64_t sub_1ACB3C48C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[9];
  __swift_project_boxed_opaque_existential_1(a1 + 5, a1[8]);
  uint64_t v5 = sub_1ACE74EB8();
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v8;
  return result;
}

uint64_t sub_1ACB3C538()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1ACB3C580@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACB3C48C((void *)(v1 + 16), a1);
}

uint64_t sub_1ACB3C59C()
{
  return sub_1ACE763B8();
}

uint64_t sub_1ACB3C620()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACB3C694(uint64_t *a1)
{
  uint64_t v2 = sub_1ACE74DB8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  id v12 = objc_msgSend(self, sel_libraryDirectory);
  sub_1ACE74E98();

  v14[0] = v10;
  v14[1] = v11;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F276C0], v2);
  sub_1ACA4F4AC();
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1ACB3C884()
{
  uint64_t v0 = (void *)sub_1ACE74E18();
  id v1 = objc_msgSend(v0, sel_isPackagedMedia);

  return v1;
}

uint64_t sub_1ACB3C8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
  uint64_t v4 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, a1, v4);
  sub_1ACE75108();
  type metadata accessor for DownloadConsistency.Issue(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACB3C96C(uint64_t a1)
{
  return AVAssetsInLibraryIssueIdentifier.startIdentifyingIssues(for:)(a1);
}

ValueMetadata *type metadata accessor for AVAssetsInLibraryIssueIdentifier()
{
  return &type metadata for AVAssetsInLibraryIssueIdentifier;
}

uint64_t sub_1ACB3C994()
{
  return sub_1ACA51EA4(&qword_1EB76E090, &qword_1EB7731B8);
}

uint64_t MAPICategoriesProvider.__allocating_init(mediaRequestController:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1ACA3AABC(a1, v2 + 16);
  return v2;
}

uint64_t MAPICategoriesProvider.init(mediaRequestController:)(long long *a1)
{
  sub_1ACA3AABC(a1, v1 + 16);
  return v1;
}

uint64_t MAPICategoriesProvider.getAllCategories(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = 0;
  memset(v36, 0, sizeof(v36));
  char v38 = 4;
  char v35 = 5;
  char v34 = 1;
  char v33 = 4;
  char v32 = 1;
  char v31 = 1;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v28 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v11 = sub_1ACA35F90(v10);
  unint64_t v12 = sub_1ACA35FB0(v10);
  unint64_t v13 = sub_1ACA360BC(v10);
  unint64_t v14 = sub_1ACA360BC(v10);
  unint64_t v15 = sub_1ACA360DC(v10);
  *((void *)&v27 + 1) = sub_1ACA360FC(v10);
  *(void *)&long long v27 = v15;
  *(void *)&long long v26 = v10;
  *((void *)&v26 + 1) = v10;
  *(void *)&long long v25 = v14;
  *((void *)&v25 + 1) = v10;
  *(void *)&long long v24 = v10;
  *((void *)&v24 + 1) = v13;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v36, &v35, &v34, &v33, v28, v11, v12, (uint64_t)&unk_1F03805A0, (uint64_t)v8, v24, v25, v26, v10, &v32, 300, 0, v27, 0, 1,
    &v31,
    0,
    (uint64_t)v5,
    0,
    0,
    0,
    0,
    0,
    v10,
    0,
    0,
    2);
  uint64_t v16 = v2 + 2;
  uint64_t v17 = v2[5];
  uint64_t v18 = v2[6];
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F22B8);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v30;
  *(void *)(v20 + 16) = v29;
  *(void *)(v20 + 24) = v21;
  unint64_t v22 = sub_1ACB3CDF8();
  swift_retain();
  MediaRequestControllerProtocol.perform<A>(params:parsing:callback:)((uint64_t)v8, v19, (uint64_t)sub_1ACB3CDB4, v20, v17, v19, v18, v22);
  swift_release();
  return sub_1ACA39598((uint64_t)v8);
}

uint64_t MAPICategoriesProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t MAPICategoriesProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB3CD58(uint64_t a1, uint64_t a2)
{
  return MAPICategoriesProvider.getAllCategories(completion:)(a1, a2);
}

uint64_t sub_1ACB3CD7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB3CDB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t *))(v3 + 16);
  char v5 = *((unsigned char *)a3 + 8);
  uint64_t v7 = *a3;
  char v8 = v5;
  return v4(&v7);
}

unint64_t sub_1ACB3CDF8()
{
  unint64_t result = qword_1E99F22C0;
  if (!qword_1E99F22C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F22B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F22C0);
  }
  return result;
}

uint64_t type metadata accessor for MAPICategoriesProvider()
{
  return self;
}

uint64_t method lookup function for MAPICategoriesProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MAPICategoriesProvider);
}

uint64_t dispatch thunk of MAPICategoriesProvider.__allocating_init(mediaRequestController:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AssetMetadata.fetch<A>(source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, v16, a2, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  return sub_1ACB3D030((uint64_t)v14, (uint64_t)v10, a2, a3, a4);
}

uint64_t sub_1ACB3D030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for AssetSourceStep();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t AssetSourceStep.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AssetSourceStep.source.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t AssetSourceStep.publisher.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = *(void *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 24) = v7;
  *(void *)(v5 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(void *)(a1 + 40);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5 + v4, (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for EmitLifecycle();
  swift_getWitnessTable();
  return sub_1ACE75A38();
}

uint64_t sub_1ACB3D334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a6;
  uint64_t v11 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v28 - v15;
  v33[0] = a2;
  v33[1] = a3;
  _OWORD v33[2] = a4;
  v33[3] = a5;
  uint64_t v17 = type metadata accessor for AssetSourceStep();
  uint64_t v18 = a1 + *(int *)(v17 + 52);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 40))(a1, a3, a5);
  uint64_t WitnessTable = swift_getWitnessTable();
  double v20 = AssetProcessingStep.metadataTrace.getter(v17, WitnessTable, (uint64_t)v33);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v13, v18, a3, v20);
  swift_getDynamicType();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a3);
  uint64_t v21 = sub_1ACE77D48();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v31 = v21;
  unint64_t v32 = v23;
  sub_1ACE762C8();
  uint64_t v24 = v31;
  unint64_t v25 = v32;
  swift_getAssociatedConformanceWitness();
  char v26 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v33, (uint64_t)"FetchFromSource", 15, 2, 0, v24, v25, v26 & 1, v30, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  sub_1ACB3E38C((uint64_t)v33);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, AssociatedTypeWitness);
}

uint64_t sub_1ACB3D610()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for AssetSourceStep() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[15]);
  return swift_deallocObject();
}

uint64_t type metadata accessor for AssetSourceStep()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACB3D758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for AssetSourceStep() - 8);
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_1ACB3D334(v8, v3, v4, v5, v6, a1);
}

uint64_t sub_1ACB3D804(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_1ACB3D80C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ACB3D858()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACB3D928(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_1ACB3DA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_1ACB3DB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1ACB3DBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1ACB3DC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1ACB3DD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1ACB3DDC8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1ACB3DFC0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1ACB3E28CLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          unint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_1ACB3E2B4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for EmitLifecycle();
  swift_getWitnessTable();
  sub_1ACE75A48();
  return swift_getWitnessTable();
}

uint64_t sub_1ACB3E38C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772EA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t kMTCategoryEntityName.getter()
{
  return 0x6F6765746143544DLL;
}

uint64_t kCategoryName.getter()
{
  return 1701667182;
}

uint64_t kCategoryAdamID.getter()
{
  return 0x44496D616461;
}

uint64_t kCategoryInterest.getter()
{
  return 0x7473657265746E69;
}

uint64_t kCategoryPodcasts.getter()
{
  return 0x7374736163646F70;
}

unint64_t kCategoryInterestInterestValue.getter()
{
  return 0xD000000000000016;
}

id static MTCategory.createFetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v1 = (void *)sub_1ACE76178();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1ACB3E4E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  uint64_t v4 = sub_1ACE761B8();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1ACB3E53C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1ACB3E5A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v7 = sub_1ACE76178();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  [v6 *a5];
}

void sub_1ACB3E610(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, unint64_t *a4@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t *a6@<X8>)
{
  id v10 = [*a1 *a2];
  a3(0);
  sub_1ACB3F438(a4, a5);
  uint64_t v11 = sub_1ACE76988();

  *a6 = v11;
}

void sub_1ACB3E69C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t), SEL *a8)
{
  uint64_t v11 = *a2;
  a5(0);
  sub_1ACB3F438(a6, a7);
  id v12 = (id)sub_1ACE76978();
  objc_msgSend(v11, *a8, v12);
}

id MTCategory.artworkHeight.getter()
{
  return sub_1ACB3E750((SEL *)&selRef_artworkHeightNumber);
}

id MTCategory.artworkWidth.getter()
{
  return sub_1ACB3E750((SEL *)&selRef_artworkWidthNumber);
}

id sub_1ACB3E750(SEL *a1)
{
  id result = [v1 *a1];
  id v3 = result;
  if (result)
  {
    objc_msgSend(result, sel_doubleValue);
    uint64_t v5 = v4;

    return (id)v5;
  }
  return result;
}

id MTCategory.isFavorited.getter()
{
  id result = objc_msgSend(v0, sel_interest);
  if (result)
  {
    id v2 = result;
    objc_msgSend(result, sel_interestValue);
    double v4 = v3;

    return (id)(v4 == 1.0);
  }
  return result;
}

uint64_t MTCategory.followedShows.getter()
{
  id v1 = objc_msgSend(v0, sel_podcasts);
  sub_1ACB3E8C8();
  sub_1ACB3F438((unint64_t *)&qword_1E99F22C8, (void (*)(uint64_t))sub_1ACB3E8C8);
  uint64_t v2 = sub_1ACE76988();

  id v3 = v0;
  uint64_t v4 = sub_1ACB3EDFC(v2, v3);

  return v4;
}

unint64_t sub_1ACB3E8C8()
{
  unint64_t result = qword_1EB768F80;
  if (!qword_1EB768F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB768F80);
  }
  return result;
}

uint64_t MTCategory.followedShowsCount.getter()
{
  id v1 = objc_msgSend(v0, sel_podcasts);
  sub_1ACB3E8C8();
  sub_1ACB3F438((unint64_t *)&qword_1E99F22C8, (void (*)(uint64_t))sub_1ACB3E8C8);
  uint64_t v2 = sub_1ACE76988();

  id v3 = v0;
  uint64_t v4 = sub_1ACB3EDFC(v2, v3);

  if ((v4 & 0xC000000000000001) != 0) {
    uint64_t v5 = sub_1ACE77178();
  }
  else {
    uint64_t v5 = *(void *)(v4 + 16);
  }
  swift_release();
  return v5;
}

Swift::Void __swiftcall MTCategory.setArtworkHeightNumber(_:)(NSNumber a1)
{
  objc_msgSend(v1, sel_setArtworkHeightNumber_, a1.super.super.isa);
}

Swift::Void __swiftcall MTCategory.setArtworkWidthNumber(_:)(NSNumber a1)
{
  objc_msgSend(v1, sel_setArtworkWidthNumber_, a1.super.super.isa);
}

void sub_1ACB3EA04(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a3;
  uint64_t v22 = 0;
  int64_t v5 = 0;
  uint64_t v26 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  int64_t v23 = v9;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v5 << 6);
      goto LABEL_18;
    }
    BOOL v12 = __OFADD__(v5++, 1);
    if (v12)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v5 >= v9) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v5);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
LABEL_18:
    id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
    if (objc_msgSend(v15, sel_subscribed)
      && (id v16 = objc_msgSend(v15, sel_primaryCategory)) != 0)
    {
      int v17 = v16;
      type metadata accessor for MTCategory();
      id v18 = a4;
      id v19 = v17;
      LOBYTE(v17) = sub_1ACE76F68();

      int64_t v9 = v23;
      uint64_t v4 = a3;
      if (v17)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v22++, 1);
        if (v12) {
          goto LABEL_31;
        }
      }
    }
    else
    {
    }
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v9) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v5 + 2;
  if (v5 + 2 >= v9) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v5 + 3;
  if (v5 + 3 >= v9)
  {
LABEL_28:
    swift_retain();
    sub_1ACB85EC0(a1, a2, v22, v4);
    return;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v5 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v9) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_1ACB3EC48(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  unint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    int64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_1ACB3EA04((unint64_t *)v9, v6, a1, v10);
    uint64_t v12 = v11;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_1ACB3EA04((unint64_t *)v13, v6, a1, v14);
    uint64_t v12 = v15;
    swift_release();

    MEMORY[0x1AD11B340](v13, -1, -1);
  }
  return v12;
}

uint64_t sub_1ACB3EDFC(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_1ACB3EC48(a1, a2);
  }
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v21 = MEMORY[0x1E4FBC870];
  id v3 = a2;
  sub_1ACE77138();
  if (sub_1ACE771A8())
  {
    sub_1ACB3E8C8();
    do
    {
      swift_dynamicCast();
      if (!objc_msgSend(v20, sel_subscribed)) {
        goto LABEL_4;
      }
      id v4 = objc_msgSend(v20, sel_primaryCategory);
      if (!v4) {
        goto LABEL_4;
      }
      unsigned int v5 = v4;
      type metadata accessor for MTCategory();
      id v6 = v3;
      id v7 = v5;
      LOBYTE(v5) = sub_1ACE76F68();

      if (v5)
      {
        uint64_t v8 = v21;
        unint64_t v9 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v9)
        {
          sub_1ACBED044(v9 + 1);
          uint64_t v8 = v21;
        }
        uint64_t result = sub_1ACE76F58();
        uint64_t v11 = v8 + 56;
        uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v13 = result & ~v12;
        unint64_t v14 = v13 >> 6;
        if (((-1 << v13) & ~*(void *)(v8 + 56 + 8 * (v13 >> 6))) != 0)
        {
          unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v8 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v14 == v17;
            if (v14 == v17) {
              unint64_t v14 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v11 + 8 * v14);
          }
          while (v19 == -1);
          unint64_t v15 = __clz(__rbit64(~v19)) + (v14 << 6);
        }
        *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(void *)(*(void *)(v8 + 48) + 8 * v15) = v20;
        ++*(void *)(v8 + 16);
      }
      else
      {
LABEL_4:
      }
    }
    while (sub_1ACE771A8());
    uint64_t v2 = v21;
  }

  swift_release();
  return v2;
}

char *keypath_get_selector_adamID()
{
  return sel_adamID;
}

id sub_1ACB3F07C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_adamID);
  *a2 = result;
  return result;
}

id sub_1ACB3F0B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAdamID_, *a1);
}

char *keypath_get_selector_artworkPrimaryColor()
{
  return sel_artworkPrimaryColor;
}

void sub_1ACB3F0D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1ACB3F0F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_artworkTemplateURL()
{
  return sel_artworkTemplateURL;
}

void sub_1ACB3F11C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1ACB3F13C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_color()
{
  return sel_color;
}

void sub_1ACB3F168(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1ACB3F188(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_1ACB3F1B8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_1ACE76178();
  objc_msgSend(v2, sel_setName_, v3);
}

char *keypath_get_selector_url()
{
  return sel_url;
}

void sub_1ACB3F228(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1ACB3F248(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_interest()
{
  return sel_interest;
}

id sub_1ACB3F274@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_interest);
  *a2 = result;
  return result;
}

id sub_1ACB3F2B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInterest_, *a1);
}

char *keypath_get_selector_podcasts()
{
  return sel_podcasts;
}

void sub_1ACB3F2D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1ACB3F310(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_parent()
{
  return sel_parent;
}

id sub_1ACB3F35C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_parent);
  *a2 = result;
  return result;
}

id sub_1ACB3F398(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setParent_, *a1);
}

char *keypath_get_selector_children()
{
  return sel_children;
}

void sub_1ACB3F3B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1ACB3F3F8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1ACB3F438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const char *static FeedUpdatePhaseName.requestShowMetadata.getter()
{
  return "RequestShowMetadata";
}

const char *static FeedUpdatePhaseName.prepareForInitialEpisodesRequest.getter()
{
  return "PrepareForInitialEpisodesRequest";
}

const char *static FeedUpdatePhaseName.requestInitialEpisodes.getter()
{
  return "RequestInitialEpisodes";
}

const char *static FeedUpdatePhaseName.processShowMetadataAndInitialEpisodes.getter()
{
  return "ProcessShowMetadataAndInitialEpisodes";
}

const char *static FeedUpdatePhaseName.requestEpisodes.getter()
{
  return "RequestEpisodes";
}

const char *static FeedUpdatePhaseName.processEpisodes.getter()
{
  return "ProcessEpisodes";
}

const char *static FeedUpdatePhaseName.processingCompleted.getter()
{
  return "ProcessingCompleted";
}

ValueMetadata *type metadata accessor for FeedUpdatePhaseName()
{
  return &type metadata for FeedUpdatePhaseName;
}

uint64_t sub_1ACB3F528(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75F88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB4438C((unint64_t *)&unk_1EB772FC8, MEMORY[0x1E4F25200]);
  uint64_t v6 = sub_1ACE763A8();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_1ACE76398();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_1ACE843F0;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v13 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_1ACE761F8();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_1ACE843F0;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v23 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_1ACE761F8();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MediaStreamedAssetCache.sourceURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACB3F9E4(&OBJC_IVAR___PFMediaStreamedAssetCache_sourceURL, a1);
}

uint64_t MediaStreamedAssetCache.pathExtension.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_pathExtension);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaStreamedAssetCache.cacheLocation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACB3F9E4(&OBJC_IVAR___PFMediaStreamedAssetCache_cacheLocation, a1);
}

uint64_t sub_1ACB3F9E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t MediaStreamedAssetCache.purgeability.getter()
{
  return *(unsigned int *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_purgeability);
}

id MediaStreamedAssetCache.__allocating_init(sourceURL:)(char *a1)
{
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  uint64_t v8 = (void *)sub_1ACE74E18();
  id v9 = objc_msgSend(self, sel_streamedMediaAssetURL);
  sub_1ACE74E98();

  uint64_t v10 = (void *)sub_1ACE74E18();
  unint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  id v12 = objc_msgSend(v7, sel_initWithSourceURL_cacheLocation_purgeability_, v8, v10, 512);

  v11(a1, v3);
  return v12;
}

id MediaStreamedAssetCache.init(sourceURL:)(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_1ACE74E18();
  id v9 = objc_msgSend(self, sel_streamedMediaAssetURL);
  sub_1ACE74E98();

  uint64_t v10 = (void *)sub_1ACE74E18();
  unint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  id v12 = objc_msgSend(v2, sel_initWithSourceURL_cacheLocation_purgeability_, v8, v10, 512);

  v11(a1, v4);
  return v12;
}

id MediaStreamedAssetCache.__allocating_init(sourceURL:cacheLocation:purgeability:)(char *a1, char *a2, int a3)
{
  id v7 = objc_allocWithZone(v3);
  return MediaStreamedAssetCache.init(sourceURL:cacheLocation:purgeability:)(a1, a2, a3);
}

id MediaStreamedAssetCache.init(sourceURL:cacheLocation:purgeability:)(char *a1, char *a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v101) = a3;
  uint64_t v103 = a2;
  uint64_t v108 = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v89 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v89);
  uint64_t v92 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1ACE75F78();
  uint64_t v88 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v94 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1ACE75F88();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  unint64_t v85 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE76218();
  uint64_t v99 = *(void *)(v9 - 8);
  uint64_t v100 = v9;
  MEMORY[0x1F4188790](v9);
  char v98 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE74F28();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v90 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v91 = (char *)&v84 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  char v22 = (char *)&v84 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v102 = (char *)&v84 - v23;
  uint64_t v24 = v4;
  uint64_t v25 = sub_1ACE74DC8();
  uint64_t v27 = v26;
  uint64_t v105 = a1;
  *(void *)&long long v107 = sub_1ACE74DD8();
  *((void *)&v107 + 1) = v28;
  sub_1ACA4F4AC();
  sub_1ACE77088();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRetain();
    sub_1ACE74EF8();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v33(v22, (uint64_t)v105, v14);
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v14);
  uint64_t v97 = v31;
  if (v34 == 1)
  {
    uint64_t v35 = v102;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v102, v22, v32);
    sub_1ACA50E78((uint64_t)v13, &qword_1EB7731B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v14);
    uint64_t v35 = v102;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v102, v13, v32);
  }
  unint64_t v36 = &v24[OBJC_IVAR___PFMediaStreamedAssetCache_sourceURL];
  uint64_t v104 = v32;
  v33(&v24[OBJC_IVAR___PFMediaStreamedAssetCache_sourceURL], (uint64_t)v35, v32);
  uint64_t v37 = sub_1ACE74DC8();
  unint64_t v39 = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = HIBYTE(v39) & 0xF;
  if ((v39 & 0x2000000000000000) == 0) {
    uint64_t v40 = v37 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v93 = v36;
  if (v40)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1ACE74DC8();
    uint64_t v27 = v41;
  }
  uint64_t v42 = v24;
  uint64_t v43 = (uint64_t *)&v24[OBJC_IVAR___PFMediaStreamedAssetCache_pathExtension];
  *uint64_t v43 = v25;
  v43[1] = v27;
  uint64_t v44 = &v24[OBJC_IVAR___PFMediaStreamedAssetCache_cacheLocation];
  uint64_t v45 = &v24[OBJC_IVAR___PFMediaStreamedAssetCache_cacheLocation];
  uint64_t v47 = v103;
  uint64_t v46 = v104;
  v33(v45, (uint64_t)v103, v104);
  *(_DWORD *)&v42[OBJC_IVAR___PFMediaStreamedAssetCache_purgeability] = v101;
  sub_1ACE74DD8();
  uint64_t v48 = v98;
  sub_1ACE76208();
  uint64_t v49 = sub_1ACE761C8();
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v48, v100);
  if (v51 >> 60 == 15)
  {
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v52((uint64_t)v47, v46);
    v52((uint64_t)v105, v46);
    v52((uint64_t)v35, v46);
    v52((uint64_t)v93, v46);
    swift_bridgeObjectRelease();
    v52((uint64_t)v44, v46);

    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    uint64_t v54 = v42;
    sub_1ACB4438C(&qword_1EB772FC0, MEMORY[0x1E4F251D8]);
    uint64_t v56 = v94;
    uint64_t v55 = v95;
    sub_1ACE75F48();
    uint64_t v101 = v49;
    switch(v51 >> 62)
    {
      case 1uLL:
        if (v49 >> 32 < (int)v49) {
          __break(1u);
        }
        uint64_t v57 = v49;
        sub_1ACA3985C(v49, v51);
        sub_1ACB4368C((int)v49, v49 >> 32);
        goto LABEL_18;
      case 2uLL:
        uint64_t v57 = v49;
        uint64_t v58 = *(void *)(v49 + 16);
        uint64_t v59 = *(void *)(v49 + 24);
        sub_1ACA39848(v57, v51);
        swift_retain();
        swift_retain();
        sub_1ACB4368C(v58, v59);
        swift_release();
        swift_release();
LABEL_18:
        sub_1ACAB2EF0(v57, v51);
        goto LABEL_21;
      case 3uLL:
        *(void *)((char *)&v107 + 6) = 0;
        *(void *)&long long v107 = 0;
        goto LABEL_20;
      default:
        *(void *)&long long v107 = v49;
        WORD4(v107) = v51;
        BYTE10(v107) = BYTE2(v51);
        BYTE11(v107) = BYTE3(v51);
        BYTE12(v107) = BYTE4(v51);
        BYTE13(v107) = BYTE5(v51);
LABEL_20:
        sub_1ACE75F28();
        sub_1ACAB2EF0(v49, v51);
LABEL_21:
        uint64_t v60 = (uint64_t)v85;
        sub_1ACE75F38();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v56, v55);
        uint64_t v61 = sub_1ACB3F528(v60);
        uint64_t v100 = 0;
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v60, v87);
        *(void *)&long long v107 = v61;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
        sub_1ACA8B0C0();
        uint64_t v62 = sub_1ACE76138();
        uint64_t v64 = v63;
        swift_bridgeObjectRelease();
        uint64_t v65 = (uint64_t *)&v54[OBJC_IVAR___PFMediaStreamedAssetCache_sourceURLMD5];
        uint64_t *v65 = v62;
        v65[1] = v64;
        uint64_t v66 = (uint64_t)v92;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F22E0);
        uint64_t v67 = swift_allocObject();
        *(_DWORD *)(v67 + ((*(unsigned int *)(*(void *)v67 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
        sub_1ACB4376C(v66, v67 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v67 + 16));
        sub_1ACB437D0(v66);
        *(void *)&v54[OBJC_IVAR___PFMediaStreamedAssetCache_phase] = v67;

        v106.receiver = v54;
        v106.super_class = ObjectType;
        id v68 = objc_msgSendSuper2(&v106, sel_init);
        uint64_t v69 = self;
        id v53 = v68;
        id v70 = objc_msgSend(v69, sel_defaultManager);
        uint64_t v71 = v90;
        sub_1ACE74E38();
        uint64_t v72 = v91;
        sub_1ACE74E48();
        uint64_t v73 = *(void (**)(char *, uint64_t))(v97 + 8);
        uint64_t v74 = v71;
        uint64_t v75 = v104;
        v73(v74, v104);
        sub_1ACE74EC8();
        v73(v72, v75);
        LOBYTE(v107) = 0;
        uint64_t v76 = (void *)sub_1ACE76178();
        LODWORD(v6sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = objc_msgSend(v70, sel_fileExistsAtPath_isDirectory_, v76, &v107);
        swift_bridgeObjectRelease();

        if (v60)
        {
          MEMORY[0x1F4188790](v77);
          *(&v84 - 2) = (uint64_t)v53;
          uint64_t v79 = v78 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v78 + 16);
          uint64_t v80 = (os_unfair_lock_s *)(v78 + ((*(unsigned int *)(*(void *)v78 + 48) + 3) & 0x1FFFFFFFCLL));
          os_unfair_lock_lock(v80);
          sub_1ACB4382C(v79);
          os_unfair_lock_unlock(v80);
        }

        sub_1ACAB2EF0(v101, v51);
        uint64_t v81 = v102;
        uint64_t v82 = v104;
        v73(v103, v104);
        v73(v105, v82);
        v73(v81, v82);
        break;
    }
  }
  return v53;
}

uint64_t type metadata accessor for MediaStreamedAssetCache.StreamPhase(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F2308);
}

uint64_t MediaStreamedAssetCache.persistentFileURL()()
{
  uint64_t v0 = sub_1ACE74F28();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74E38();
  sub_1ACE74E48();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1ACB40CA8(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB437D0(a1);
  sub_1ACE74E38();
  sub_1ACE74E48();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t MediaStreamedAssetCache.cachedAssetURL()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
  uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_1ACB510E4(v7, (uint64_t)v5);
  os_unfair_lock_unlock(v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1ACE74F28();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v5, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    sub_1ACB437D0((uint64_t)v5);
    uint64_t v12 = sub_1ACE74F28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

void MediaStreamedAssetCache.streamCacheURL()(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1ACB43848(v4, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1ACB41284(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v46 = a3;
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v36 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB4376C(a1, (uint64_t)v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1ACB44338();
      swift_allocError();
      *uint64_t v21 = 0;
      swift_willThrow();
      sub_1ACB437D0((uint64_t)v19);
    }
    else
    {
      uint64_t v32 = v47;
      sub_1ACB43880();
      if (!v32)
      {
        sub_1ACB42AEC((uint64_t)v16);
        sub_1ACB437D0(a1);
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v16, v4);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v46, v16, v4);
      }
    }
  }
  else
  {
    uint64_t v44 = v8;
    uint64_t v45 = a1;
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v42(v14, v19, v4);
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1ACE754C8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB772ED0);
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v41 = v5 + 16;
    v40(v11, v14, v4);
    uint64_t v23 = sub_1ACE75498();
    os_log_type_t v24 = sub_1ACE76BE8();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v43 = v5;
    if (v25)
    {
      os_log_t v38 = v23;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v39 = v5 + 32;
      uint64_t v27 = (uint8_t *)v26;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v50 = v37;
      *(_DWORD *)uint64_t v27 = 136315138;
      unint64_t v36 = v27 + 4;
      uint64_t v28 = sub_1ACE74DA8();
      uint64_t v49 = sub_1ACA3189C(v28, v29, &v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v11, v4);
      uint64_t v23 = v38;
      _os_log_impl(&dword_1AC9D5000, v38, v24, "Attempting to start streaming to a cache location that's already actively streaming. Previously streaming to %s", v27, 0xCu);
      uint64_t v31 = v37;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v31, -1, -1);
      MEMORY[0x1AD11B340](v27, -1, -1);
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v11, v4);
    }

    uint64_t v34 = (uint64_t)v44;
    uint64_t v33 = v45;
    uint64_t v35 = v47;
    sub_1ACB43880();
    if (!v35)
    {
      sub_1ACB42AEC(v34);
      sub_1ACB437D0(v33);
      v40((char *)v33, (char *)v34, v4);
      swift_storeEnumTagMultiPayload();
      v42(v46, (char *)v34, v4);
    }
    v30(v14, v4);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MediaStreamedAssetCache.complete()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1ACB43864(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1ACB419D4(uint64_t a1, uint64_t a2)
{
  uint64_t v85 = a2;
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v78 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v78 - v12;
  uint64_t v14 = (void *)type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB4376C(a1, (uint64_t)v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      if (qword_1EB772EF0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1ACE754C8();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EB772ED0);
      uint64_t v19 = sub_1ACE75498();
      os_log_type_t v20 = sub_1ACE76BE8();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_1AC9D5000, v19, v20, "Calling complete on a stream that has already completed. This is not an error, but is unexpected.", v21, 2u);
        MEMORY[0x1AD11B340](v21, -1, -1);
      }

      return sub_1ACB437D0((uint64_t)v16);
    }
    else
    {
      sub_1ACB44338();
      swift_allocError();
      *uint64_t v55 = 1;
      return swift_willThrow();
    }
  }
  else
  {
    uint64_t v81 = a1;
    uint64_t v82 = v2;
    uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    uint64_t v84 = v13;
    uint64_t v79 = v23;
    uint64_t v80 = v5 + 32;
    v23((uint64_t)v13, v16, v4);
    id v24 = objc_msgSend(self, sel_defaultManager);
    uint64_t v25 = v85;
    sub_1ACE74E38();
    uint64_t v26 = v25;
    sub_1ACE74E48();
    uint64_t v83 = *(void (**)(char *, uint64_t))(v5 + 8);
    v83(v8, v4);
    uint64_t v27 = sub_1ACE74DC8();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0) {
      uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      sub_1ACE74EC8();
      uint64_t v31 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      unsigned int v32 = objc_msgSend(v24, sel_fileExistsAtPath_, v31);

      uint64_t v33 = v24;
      uint64_t v34 = v84;
      if (v32)
      {
        if (qword_1EB772EF0 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_1ACE754C8();
        __swift_project_value_buffer(v35, (uint64_t)qword_1EB772ED0);
        unint64_t v36 = sub_1ACE75498();
        os_log_type_t v37 = sub_1ACE76BC8();
        if (os_log_type_enabled(v36, v37))
        {
          os_log_t v38 = v33;
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v39 = 0;
          _os_log_impl(&dword_1AC9D5000, v36, v37, "Asset at URL was previously streamed. Overwriting with new data", v39, 2u);
          uint64_t v40 = v39;
          uint64_t v33 = v38;
          uint64_t v34 = v84;
          MEMORY[0x1AD11B340](v40, -1, -1);
        }

        uint64_t v41 = (void *)sub_1ACE74E18();
        *(void *)&long long v87 = 0;
        unsigned int v42 = objc_msgSend(v33, sel_removeItemAtURL_error_, v41, &v87);

        if (!v42)
        {
          id v64 = (id)v87;
          sub_1ACE74D78();

          swift_willThrow();
          uint64_t v65 = (uint64_t (*)(char *, uint64_t))v83;
          v83(v11, v4);
          return v65(v34, v4);
        }
        id v43 = (id)v87;
      }
      sub_1ACE74EC8();
      uint64_t v44 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v86 = 0;
      id v45 = objc_msgSend(v33, sel_attributesOfItemAtPath_error_, v44, &v86);

      uint64_t v46 = v34;
      uint64_t v47 = v33;
      id v48 = v86;
      if (!v45)
      {
        uint64_t v61 = v46;
        id v62 = v86;
        sub_1ACE74D78();

        swift_willThrow();
        uint64_t v63 = (uint64_t (*)(char *, uint64_t))v83;
        v83(v11, v4);
        return v63(v61, v4);
      }
      v78[1] = v14;
      type metadata accessor for FileAttributeKey(0);
      sub_1ACB4438C((unint64_t *)&unk_1EB76E168, type metadata accessor for FileAttributeKey);
      uint64_t v49 = sub_1ACE75FF8();
      id v50 = v48;

      if (*(void *)(v49 + 16))
      {
        id v51 = (id)*MEMORY[0x1E4F28390];
        unint64_t v52 = sub_1ACA662B0((uint64_t)v51);
        id v53 = v47;
        if (v54)
        {
          sub_1ACA33128(*(void *)(v49 + 56) + 32 * v52, (uint64_t)&v87);
        }
        else
        {
          long long v87 = 0u;
          long long v88 = 0u;
        }
      }
      else
      {
        long long v87 = 0u;
        long long v88 = 0u;
        id v53 = v47;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v88 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0 && v86)
        {
          uint64_t v66 = v84;
          uint64_t v67 = (void *)sub_1ACE74E18();
          id v68 = (void *)sub_1ACE74E18();
          *(void *)&long long v87 = 0;
          unsigned int v69 = objc_msgSend(v53, sel_moveItemAtURL_toURL_error_, v67, v68, &v87);
          v78[0] = v53;
          unsigned int v70 = v69;

          if (!v70)
          {
            id v75 = (id)v87;
            sub_1ACE74D78();

            swift_willThrow();
            uint64_t v76 = (uint64_t (*)(char *, uint64_t))v83;
            v83(v11, v4);
            return v76(v66, v4);
          }
          int v71 = *(_DWORD *)(v26 + OBJC_IVAR___PFMediaStreamedAssetCache_purgeability);
          id v72 = (id)v87;
          uint64_t v73 = v82;
          sub_1ACCA0F8C(v71);
          if (!v73)
          {

            uint64_t v77 = v81;
            sub_1ACB437D0(v81);
            v83(v84, v4);
            v79(v77, v11, v4);
            return swift_storeEnumTagMultiPayload();
          }
        }
        else
        {
        }
      }
      else
      {

        sub_1ACA50E78((uint64_t)&v87, qword_1EB7725E0);
      }
      uint64_t v74 = (uint64_t (*)(char *, uint64_t))v83;
      v83(v11, v4);
      return v74(v84, v4);
    }
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_1ACE754C8();
    __swift_project_value_buffer(v56, (uint64_t)qword_1EB772ED0);
    uint64_t v57 = sub_1ACE75498();
    os_log_type_t v58 = sub_1ACE76BE8();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl(&dword_1AC9D5000, v57, v58, "Asset at URL does not have a valid path extension. Skipping cache.", v59, 2u);
      MEMORY[0x1AD11B340](v59, -1, -1);
    }

    uint64_t v60 = (uint64_t (*)(char *, uint64_t))v83;
    v83(v11, v4);
    return v60(v84, v4);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MediaStreamedAssetCache.clear()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___PFMediaStreamedAssetCache_phase);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1ACB42480(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1ACB42480(uint64_t a1)
{
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB4376C(a1, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    id v10 = objc_msgSend(self, sel_defaultManager);
    sub_1ACE74EC8();
    uint64_t v11 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    unsigned int v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

    if (v12)
    {
      if (qword_1EB772EF0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1ACE754C8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EB772ED0);
      uint64_t v14 = sub_1ACE75498();
      os_log_type_t v15 = sub_1ACE76BC8();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        v22[1] = v1;
        uint64_t v17 = v16;
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_1AC9D5000, v14, v15, "Asset at URL was previously cached. Removing it.", v16, 2u);
        MEMORY[0x1AD11B340](v17, -1, -1);
      }

      uint64_t v18 = (void *)sub_1ACE74E18();
      v23[0] = 0;
      unsigned int v19 = objc_msgSend(v10, sel_removeItemAtURL_error_, v18, v23);

      if (v19)
      {
        id v20 = v23[0];

        sub_1ACB437D0(a1);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        id v21 = v23[0];
        sub_1ACE74D78();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    sub_1ACB437D0((uint64_t)v5);
  }
}

BOOL static MediaStreamedAssetCache.StreamCacheError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MediaStreamedAssetCache.StreamCacheError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t MediaStreamedAssetCache.StreamCacheError.hashValue.getter()
{
  return sub_1ACE77B78();
}

void sub_1ACB42AEC(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_1ACE75118();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v21 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v22 = (char *)&v21 - v15;
  id v16 = objc_msgSend(self, sel_defaultManager);
  id v17 = objc_msgSend(v16, sel_temporaryDirectory);
  sub_1ACE74E98();

  sub_1ACE74E28();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  sub_1ACB43880();
  if (v1)
  {
    v18(v11, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v11, v4);

    unsigned int v19 = v23;
    sub_1ACE75108();
    sub_1ACE750C8();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v25);
    id v20 = v22;
    sub_1ACE74E28();
    swift_bridgeObjectRelease();
    v18(v14, v4);
    sub_1ACE74E48();
    v18(v20, v4);
  }
}

void static MediaStreamedAssetCache.streamDirectory(with:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 80))(v9, v10);
  sub_1ACE74E28();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v6 + 8);
  v11(v8, v5);
  sub_1ACB43880();
  if (v2) {
    v11(a2, v5);
  }
}

id MediaStreamedAssetCache.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(void *)&v0[OBJC_IVAR___PFMediaStreamedAssetCache_phase];
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1ACB43054(v4);
  os_unfair_lock_unlock(v5);
  swift_release();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1ACB43054(uint64_t a1)
{
  v30[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB4376C(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_1ACB437D0((uint64_t)v4);
  }
  uint64_t v29 = v6;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id v10 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  uint64_t v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  v30[0] = 0;
  unsigned int v12 = objc_msgSend(v10, sel_removeItemAtPath_error_, v11, v30);

  if (v12)
  {
    id v13 = v30[0];
    sub_1ACB437D0(a1);
    swift_storeEnumTagMultiPayload();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB768C28);
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BE8();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v29;
    if (v17)
    {
      unsigned int v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v19 = 0;
      _os_log_impl(&dword_1AC9D5000, v15, v16, "Cleaned up active streaming pathway.", v19, 2u);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v5);
  }
  else
  {
    id v20 = v30[0];
    uint64_t v21 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1ACE754C8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB768C28);
    uint64_t v23 = sub_1ACE75498();
    os_log_type_t v24 = sub_1ACE76BE8();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = v29;
    if (v25)
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_1AC9D5000, v23, v24, "Unable to cleanup active streaming pathway.", v27, 2u);
      MEMORY[0x1AD11B340](v27, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v5);
  }
}

id MediaStreamedAssetCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MediaStreamedAssetCache.init()()
{
}

uint64_t sub_1ACB4368C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1ACE74B38();
  if (!result || (uint64_t result = sub_1ACE74B58(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1ACE74B48();
      sub_1ACE75F78();
      sub_1ACB4438C(&qword_1EB772FC0, MEMORY[0x1E4F251D8]);
      return sub_1ACE75F28();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACB4376C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB437D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACB4382C(uint64_t a1)
{
  return sub_1ACB40CA8(a1);
}

void sub_1ACB43848(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1ACB41284(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACB43864(uint64_t a1)
{
  return sub_1ACB419D4(a1, *(void *)(v1 + 16));
}

void sub_1ACB43880()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  LOBYTE(v13) = 1;
  uint64_t v1 = (void *)sub_1ACE76178();
  unsigned __int8 v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v13);
  swift_bridgeObjectRelease();

  if ((v2 & 1) == 0)
  {
    sub_1ACE74EC8();
    uint64_t v3 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    unsigned int v4 = objc_msgSend(v0, sel_fileExistsAtPath_, v3, v13, v14);

    if (v4)
    {
      uint64_t v5 = (void *)sub_1ACE74E18();
      id v13 = 0;
      unsigned int v6 = objc_msgSend(v0, sel_removeItemAtURL_error_, v5, &v13);

      id v7 = v13;
      if (!v6) {
        goto LABEL_7;
      }
      id v8 = v13;
    }
    uint64_t v9 = (void *)sub_1ACE74E18();
    id v13 = 0;
    unsigned int v10 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, &v13);

    id v7 = v13;
    if (v10)
    {
      id v11 = v13;
      goto LABEL_8;
    }
LABEL_7:
    id v12 = v7;
    sub_1ACE74D78();

    swift_willThrow();
  }
LABEL_8:
}

unint64_t sub_1ACB43A30()
{
  unint64_t result = qword_1E99F22F0;
  if (!qword_1E99F22F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F22F0);
  }
  return result;
}

uint64_t sub_1ACB43A84()
{
  return type metadata accessor for MediaStreamedAssetCache(0);
}

uint64_t type metadata accessor for MediaStreamedAssetCache(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F22F8);
}

uint64_t sub_1ACB43AAC()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MediaStreamedAssetCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaStreamedAssetCache);
}

uint64_t dispatch thunk of MediaStreamedAssetCache.__allocating_init(sourceURL:cacheLocation:purgeability:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for MediaStreamedAssetCache.StreamCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB43C5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaStreamedAssetCache.StreamCacheError()
{
  return &type metadata for MediaStreamedAssetCache.StreamCacheError;
}

uint64_t *sub_1ACB43C94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_1ACE74F28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1ACB43DE4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_1ACE74F28();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1ACB43E60(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1ACE74F28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1ACB43F6C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACB437D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1ACB44088(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1ACE74F28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1ACB44194(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACB437D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1ACB442B0()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1ACB44338()
{
  unint64_t result = qword_1E99F2318;
  if (!qword_1E99F2318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2318);
  }
  return result;
}

uint64_t sub_1ACB4438C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACB443D4(uint64_t a1)
{
  return sub_1ACB43864(a1);
}

void sub_1ACB443EC(uint64_t a1@<X0>, char *a2@<X8>)
{
}

uint64_t dispatch thunk of SubscriptionConfirmationSheetHandlerProtocol.presentSubscriptionConfirmation(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id ContentKeyRequest.__allocating_init(from:adamId:requestType:offlineRequest:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v9 = objc_allocWithZone(v5);
  unsigned int v10 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initFrom_adamId_requestType_offlineRequest_, a1, v10, a4, a5 & 1);

  return v11;
}

id ContentKeyRequest.init(from:adamId:requestType:offlineRequest:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v36 = a5;
  uint64_t v37 = a4;
  v35[1] = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE74F28();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_identifier))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
    uint64_t v15 = v39;
    os_log_type_t v16 = __swift_project_boxed_opaque_existential_1(v38, v39);
    *((void *)&v41 + 1) = v15;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1, v16, v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
  }
  sub_1ACB44A40((uint64_t)&v40, (uint64_t)v42);
  uint64_t v18 = v43;
  if (!v43)
  {
    sub_1ACA50E78((uint64_t)v42, &qword_1E99F2320);
    long long v44 = 0u;
    long long v45 = 0u;
    goto LABEL_9;
  }
  unsigned int v19 = __swift_project_boxed_opaque_existential_1(v42, v43);
  *((void *)&v45 + 1) = v18;
  id v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v20, v19, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  if (!*((void *)&v45 + 1))
  {
LABEL_9:
    sub_1ACA50E78((uint64_t)&v44, qword_1EB7725E0);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    uint64_t v46 = 0;
    uint64_t v47 = 0;
  }
  if (objc_msgSend(a1, sel_identifier))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
    uint64_t v21 = v39;
    uint64_t v22 = __swift_project_boxed_opaque_existential_1(v38, v39);
    *((void *)&v41 + 1) = v21;
    uint64_t v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v23, v22, v21);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
  }
  sub_1ACB44A40((uint64_t)&v40, (uint64_t)v42);
  uint64_t v24 = v43;
  if (!v43)
  {
    sub_1ACA50E78((uint64_t)v42, &qword_1E99F2320);
    long long v44 = 0u;
    long long v45 = 0u;
    goto LABEL_20;
  }
  BOOL v25 = __swift_project_boxed_opaque_existential_1(v42, v43);
  *((void *)&v45 + 1) = v24;
  uint64_t v26 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v26, v25, v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  if (!*((void *)&v45 + 1))
  {
LABEL_20:
    sub_1ACA50E78((uint64_t)&v44, qword_1EB7725E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_21:
    sub_1ACA50E78((uint64_t)v10, &qword_1EB7731B0);
    if (!v47) {
      goto LABEL_18;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    unsigned int v32 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v6, sel_initWithKeyIdentifier_adamId_requestType_offlineRequest_secureInvalidationDsid_, v32, v33, v37, v36 & 1, 0);

    swift_bridgeObjectRelease();
    return v31;
  }
  int v27 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v27 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v28 = sub_1ACE74DD8();
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v46 = v28;
  uint64_t v47 = v30;
  swift_bridgeObjectRelease();
  if (v47) {
    goto LABEL_22;
  }
LABEL_18:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1ACB44A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACB44B10(unint64_t a1, unsigned int (**a2)(void *, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A910);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (void *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  uint64_t v24 = *(void *)(v27 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v23 = (uint64_t)v22 - v11;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_1ACE77508())
  {
    v22[0] = a2;
    v22[1] = v3;
    unint64_t v25 = a1 & 0xC000000000000001;
    unint64_t v13 = MEMORY[0x1E4FBC860];
    a2 = (unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48);
    uint64_t v14 = 4;
    uint64_t v15 = (id *)a1;
    while (1)
    {
      uint64_t v3 = v12;
      os_log_type_t v16 = v25 ? (id *)MEMORY[0x1AD119490](v14 - 4, a1) : (id *)*(id *)(a1 + 8 * v14);
      a1 = (unint64_t)v16;
      uint64_t v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      sub_1ACB473D4(v16, v8);

      if ((*a2)(v8, 1, v27) == 1)
      {
        sub_1ACA50E78((uint64_t)v8, &qword_1EB76A910);
      }
      else
      {
        uint64_t v18 = v23;
        sub_1ACA50E14((uint64_t)v8, v23, &qword_1EB76A908);
        sub_1ACA50E14(v18, v26, &qword_1EB76A908);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_1ACA42D44(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v20 = *(void *)(v13 + 16);
        unint64_t v19 = *(void *)(v13 + 24);
        if (v20 >= v19 >> 1) {
          unint64_t v13 = sub_1ACA42D44(v19 > 1, v20 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v20 + 1;
        sub_1ACA50E14(v26, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, &qword_1EB76A908);
      }
      a1 = (unint64_t)v15;
      ++v14;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_release_n();
  return v13;
}

uint64_t sub_1ACB44E44(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1ACC82E60(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1ACC82E60(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(void *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

double sub_1ACB44F04@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1ACE75A88();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1ACB44F8C()
{
  return sub_1ACE75A98();
}

uint64_t sub_1ACB4501C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1ACE75A88();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACB4509C()
{
  return swift_endAccess();
}

uint64_t sub_1ACB45104(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770578);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770580);
  sub_1ACE75A78();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1ACB45278()
{
  return swift_endAccess();
}

uint64_t MediaSpaceCalculator.mediaPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t MediaSpaceCalculator.__allocating_init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  MediaSpaceCalculator.init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t MediaSpaceCalculator.init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v65 = a5;
  id v79 = a4;
  id v53 = a2;
  uint64_t v73 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v10 - 8);
  id v68 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE76CD8();
  uint64_t v76 = *(void *)(v12 - 8);
  uint64_t v77 = v12;
  MEMORY[0x1F4188790](v12);
  id v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE76E78();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)&v52 - v19;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770470);
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770398);
  uint64_t v58 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  unint64_t v52 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703E0);
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  char v54 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770450);
  uint64_t v69 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v59 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770440);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v70 = v26;
  uint64_t v71 = v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v63 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7702A0);
  uint64_t v78 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v66 = (char *)&v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_observerSink) = 0;
  uint64_t v30 = v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  uint64_t v72 = sub_1ACE74F28();
  uint64_t v74 = *(void *)(v72 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v30, a1, v72);
  swift_beginAccess();
  uint64_t v82 = 0;
  long long v80 = 0u;
  long long v81 = 0u;
  sub_1ACE75A58();
  swift_endAccess();
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_managedObjectContext) = a3;
  sub_1ACA3E158(a5, v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager);
  id v31 = v53;
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_workQueue) = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  swift_allocObject();
  id v60 = a3;
  id v32 = v31;
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_requestSubject) = sub_1ACE758B8();
  sub_1ACE76E88();
  sub_1ACE76E88();
  sub_1ACB4A6F8((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  sub_1ACE75BB8();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v15 + 8);
  v33(v18, v14);
  v33(v20, v14);
  sub_1ACA51EA4(&qword_1EB770468, &qword_1EB770470);
  uint64_t v34 = v52;
  uint64_t v35 = v55;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v35);
  *(void *)&long long v80 = *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_requestSubject);
  sub_1ACA51EA4(&qword_1EB770390, &qword_1EB770398);
  sub_1ACA51EA4(&qword_1EB76DE58, &qword_1EB76DE60);
  int v36 = v54;
  uint64_t v37 = v57;
  sub_1ACE75BA8();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v37);
  os_log_t v38 = v64;
  sub_1ACE76CB8();
  *(void *)&long long v80 = v32;
  uint64_t v39 = v32;
  uint64_t v40 = sub_1ACE76CA8();
  uint64_t v41 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v68, 1, 1, v40);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB7703D8, &qword_1EB7703E0);
  sub_1ACA93A6C();
  unsigned int v42 = v59;
  uint64_t v43 = v61;
  sub_1ACE75CB8();
  sub_1ACA50E78(v41, &qword_1EB7669C8);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v38, v77);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v43);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1ACB45F88;
  *(void *)(v44 + 24) = v6;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703D0);
  sub_1ACA51EA4(&qword_1EB770448, &qword_1EB770450);
  sub_1ACA51EA4(&qword_1EB7703C8, &qword_1EB7703D0);
  long long v45 = v63;
  uint64_t v46 = v67;
  sub_1ACE75D98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v46);
  sub_1ACA51EA4(&qword_1EB770438, &qword_1EB770440);
  uint64_t v47 = v66;
  uint64_t v48 = v70;
  sub_1ACE75AE8();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v48);
  swift_getKeyPath();
  *(void *)&long long v80 = v6;
  sub_1ACA51EA4(&qword_1EB770298, &qword_1EB7702A0);
  uint64_t v49 = v75;
  uint64_t v50 = sub_1ACE75D68();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v65);
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v72);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v49);
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_observerSink) = v50;
  swift_release();
  return v6;
}

void *MediaSpaceCalculator.MediaSpaceDistribution.init(volumeSpace:volumeAvailableCapacity:totalUsedSpace:autoDownloadSpace:manualDownloadSpace:)@<X0>(void *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = *a4;
  uint64_t v9 = *a5;
  *a6 = *result;
  a6[1] = v6;
  a6[2] = v7;
  a6[3] = v8;
  a6[4] = v9;
  return result;
}

uint64_t sub_1ACB45F8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB45FC4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

__n128 sub_1ACB45FEC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v2;
  *(unsigned char *)(a2 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v3;
  return result;
}

uint64_t sub_1ACB46008()
{
  return sub_1ACE75A28();
}

uint64_t sub_1ACB4607C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  long long v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A708);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A6D0);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770400);
  uint64_t v38 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v37 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1ACE754C8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB768C28);
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76BC8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1AC9D5000, v15, v16, "Attempting to recompute media storage distribution", v17, 2u);
    MEMORY[0x1AD11B340](v17, -1, -1);
  }

  uint64_t v18 = sub_1ACE74F28();
  swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v19, v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath, v18);
  unint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_managedObjectContext);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = sub_1ACB4A75C;
  unsigned char v21[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A760);
  swift_allocObject();
  swift_retain();
  id v22 = v20;
  uint64_t v23 = sub_1ACE75A18();
  id v41 = *(id *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_workQueue);
  id v24 = v41;
  uint64_t v42 = v23;
  uint64_t v25 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v5, 1, 1, v25);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76A758, &qword_1EB76A760);
  sub_1ACA93A6C();
  id v26 = v24;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  swift_release();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1ACB4A7C4;
  *(void *)(v27 + 24) = v2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A7D0);
  sub_1ACA51EA4(&qword_1EB76A700, &qword_1EB76A708);
  uint64_t v28 = v34;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v28);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F448);
  uint64_t v29 = v36;
  uint64_t v30 = v37;
  sub_1ACE756D8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770550);
  sub_1ACA51EA4(&qword_1EB7703F8, &qword_1EB770400);
  sub_1ACA51EA4(&qword_1EB770548, &qword_1EB770550);
  uint64_t v31 = v39;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v31);
  return swift_release();
}

void sub_1ACB466D8(uint64_t *a1@<X8>)
{
  id v3 = sub_1ACB4A008();
  sub_1ACA50D4C(0, &qword_1EB76E0F0);
  uint64_t v4 = sub_1ACE76EE8();

  if (!v1) {
    *a1 = v4;
  }
}

uint64_t sub_1ACB46750@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1ACE74C88();
  uint64_t v32 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = swift_projectBox();
  swift_beginAccess();
  sub_1ACE74E78();
  swift_endAccess();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  uint64_t v13 = (void *)*MEMORY[0x1E4F1C948];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C948];
  uint64_t v14 = (void *)*MEMORY[0x1E4F1C810];
  *(void *)(inited + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *MEMORY[0x1E4F1C810];
  id v15 = v13;
  id v16 = v14;
  sub_1ACA6CDF4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1ACE74DE8();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_bridgeObjectRelease();
  }
  v29[1] = v10;
  uint64_t v18 = v31;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1ACE74C58();
  if (v20) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v19;
  }
  if (v21 < 0) {
    goto LABEL_9;
  }
  uint64_t v22 = sub_1ACE74C68();
  uint64_t v7 = v18;
  if (v23)
  {
LABEL_10:
    uint64_t v24 = 0;
    uint64_t v25 = v32;
    goto LABEL_11;
  }
  uint64_t v24 = v22;
  uint64_t v25 = v32;
  if (v22 < 0)
  {
LABEL_9:
    sub_1ACE77488();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  sub_1ACB46AD8((uint64_t)&unk_1F03805C8, &v35);
  uint64_t v26 = v35;
  sub_1ACB46AD8((uint64_t)&unk_1F0380608, &v34);
  uint64_t v27 = v34;
  sub_1ACB46AD8((uint64_t)&unk_1F0380638, &v33);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v30);
  uint64_t v28 = v33;
  *(void *)uint64_t v7 = v21;
  *((void *)v7 + 1) = v24;
  *((void *)v7 + 2) = v26;
  *((void *)v7 + 3) = v27;
  *((void *)v7 + 4) = v28;
  unsigned char v7[40] = 0;
  return result;
}

uint64_t sub_1ACB46AD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_1ACB44E44(a1);
  uint64_t v4 = sub_1ACDF745C(v3);
  swift_bridgeObjectRelease();
  void v22[2] = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACB4A340(v5, (uint64_t (*)(uint64_t, uint64_t *))sub_1ACB4A830, (uint64_t)v22);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = v6 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  do
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v8 << 6);
    }
    else
    {
      int64_t v19 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_27;
      }
      if (v19 >= v14)
      {
LABEL_25:
        uint64_t result = swift_release();
        *a2 = v9;
        return result;
      }
      unint64_t v20 = *(void *)(v10 + 8 * v19);
      ++v8;
      if (!v20)
      {
        int64_t v8 = v19 + 1;
        if (v19 + 1 >= v14) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v10 + 8 * v8);
        if (!v20)
        {
          int64_t v8 = v19 + 2;
          if (v19 + 2 >= v14) {
            goto LABEL_25;
          }
          unint64_t v20 = *(void *)(v10 + 8 * v8);
          if (!v20)
          {
            int64_t v8 = v19 + 3;
            if (v19 + 3 >= v14) {
              goto LABEL_25;
            }
            unint64_t v20 = *(void *)(v10 + 8 * v8);
            if (!v20)
            {
              int64_t v8 = v19 + 4;
              if (v19 + 4 >= v14) {
                goto LABEL_25;
              }
              unint64_t v20 = *(void *)(v10 + 8 * v8);
              if (!v20)
              {
                int64_t v21 = v19 + 5;
                if (v21 >= v14) {
                  goto LABEL_25;
                }
                unint64_t v20 = *(void *)(v10 + 8 * v21);
                if (!v20)
                {
                  while (1)
                  {
                    int64_t v8 = v21 + 1;
                    if (__OFADD__(v21, 1)) {
                      goto LABEL_28;
                    }
                    if (v8 >= v14) {
                      goto LABEL_25;
                    }
                    unint64_t v20 = *(void *)(v10 + 8 * v8);
                    ++v21;
                    if (v20) {
                      goto LABEL_24;
                    }
                  }
                }
                int64_t v8 = v21;
              }
            }
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v20 - 1) & v20;
      unint64_t v16 = __clz(__rbit64(v20)) + (v8 << 6);
    }
    uint64_t v17 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
    BOOL v18 = __CFADD__(v9, v17);
    v9 += v17;
  }
  while (!v18);
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1ACB46CA8(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB768C28);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76BE8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(void *)&v13[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v10 = sub_1ACE76228();
    sub_1ACA3189C(v10, v11, (uint64_t *)v13);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v5, v6, "Encountered error while computing space distribution values: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v8, -1, -1);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  char v15 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F448);
  return sub_1ACE759C8();
}

uint64_t sub_1ACB46EAC(unint64_t a1)
{
  swift_retain();
  unint64_t v4 = sub_1ACB44B10(a1, (unsigned int (**)(void *, uint64_t, uint64_t))v1);
  uint64_t v5 = sub_1ACB49E4C(v4, (void (*)(void *__return_ptr, void, void))sub_1ACB4A740);
  swift_bridgeObjectRelease();
  if (v2) {
    return v1;
  }
  uint64_t v6 = v5[2];
  if (!v6)
  {
    uint64_t v1 = MEMORY[0x1E4FBC868];
LABEL_17:
    swift_bridgeObjectRelease();
    return v1;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = v5 + 5;
  uint64_t v1 = MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v9 = *(v7 - 1);
    uint64_t v8 = *v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_1ACA6A1FC(v9);
    uint64_t v13 = *(void *)(v1 + 16);
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v16 = v11;
    if (*(void *)(v1 + 24) >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1ACD07498();
      }
    }
    else
    {
      sub_1ACCFEAA8(v15, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = sub_1ACA6A1FC(v9);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_22;
      }
      unint64_t v12 = v17;
    }
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      *(void *)(v1 + 8 * (v12 >> 6) + 64) |= 1 << v12;
      uint64_t v19 = 8 * v12;
      *(void *)(*(void *)(v1 + 48) + v19) = v9;
      *(void *)(*(void *)(v1 + 56) + v19) = 0;
      uint64_t v20 = *(void *)(v1 + 16);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_21;
      }
      *(void *)(v1 + 16) = v22;
    }
    uint64_t v23 = *(void *)(v1 + 56);
    uint64_t v24 = *(void *)(v23 + 8 * v12);
    BOOL v25 = __CFADD__(v24, v8);
    uint64_t v26 = v24 + v8;
    if (v25) {
      goto LABEL_20;
    }
    v7 += 2;
    *(void *)(v23 + 8 * v12) = v26;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

void sub_1ACB47098(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACB477DC(a2, &v27);
  if (!v3)
  {
    if (v28 == 1)
    {
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(unsigned char *)(a3 + 16) = 1;
    }
    else
    {
      unint64_t v26 = v27;
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1ACE754C8();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EB768C28);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
      unint64_t v12 = sub_1ACE75498();
      os_log_type_t v13 = sub_1ACE76BC8();
      int v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v25 = a1;
        uint64_t v16 = v15;
        uint64_t v24 = swift_slowAlloc();
        unint64_t v27 = v24;
        *(_DWORD *)uint64_t v16 = 136315650;
        v22[1] = v16 + 4;
        sub_1ACB4A6F8((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
        int v23 = v14;
        uint64_t v17 = sub_1ACE777C8();
        uint64_t v29 = sub_1ACA3189C(v17, v18, (uint64_t *)&v27);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        *(_WORD *)(v16 + 12) = 2048;
        unint64_t v19 = v26;
        uint64_t v29 = v26 >> 20;
        sub_1ACE76FF8();
        *(_WORD *)(v16 + 22) = 2048;
        uint64_t v29 = v19;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v12, (os_log_type_t)v23, "Found downloaded file at %s with size: %llu MB (%lluB)", (uint8_t *)v16, 0x20u);
        uint64_t v20 = v24;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v20, -1, -1);
        uint64_t v21 = v16;
        a1 = v25;
        MEMORY[0x1AD11B340](v21, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

        unint64_t v19 = v26;
      }
      *(void *)a3 = a1;
      *(void *)(a3 + 8) = v19;
      *(unsigned char *)(a3 + 16) = 0;
    }
  }
}

uint64_t sub_1ACB473D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v26 = sub_1ACE761B8();
  *((void *)&v26 + 1) = v11;
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_1ACE77A28());
  swift_unknownObjectRelease();
  if (v12)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1ACA50E14((uint64_t)&v26, (uint64_t)v28, qword_1EB7725E0);
  if (!v29) {
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
  v23[0] = v24;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(void *)&long long v26 = sub_1ACE761B8();
  *((void *)&v26 + 1) = v13;
  swift_bridgeObjectRetain();
  id v14 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_1ACE77A28());
  swift_unknownObjectRelease();
  if (v14)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1ACA50E14((uint64_t)&v26, (uint64_t)v28, qword_1EB7725E0);
  if (!v29)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v16 = qword_1EB7725E0;
    uint64_t v17 = v28;
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v15 = v24;
  swift_bridgeObjectRelease();
  sub_1ACE74EF8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t v16 = &qword_1EB7731B0;
    uint64_t v17 = v6;
LABEL_17:
    sub_1ACA50E78((uint64_t)v17, v16);
    goto LABEL_18;
  }
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v10, v6, v7);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  uint64_t v22 = (char *)a2 + *(int *)(v21 + 48);
  *a2 = v15;
  v20(v22, v10, v7);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 0, 1, v21);
}

void sub_1ACB477DC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager), *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager + 24));
  uint64_t v9 = sub_1ACE74EC8();
  char v10 = (*(uint64_t (**)(uint64_t))(v8 + 32))(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    id v11 = objc_msgSend(self, sel_defaultManager);
    sub_1ACE74EC8();
    id v12 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    *(void *)&long long v35 = 0;
    id v13 = objc_msgSend(v11, sel_attributesOfItemAtPath_error_, v12, &v35);

    id v14 = (void *)v35;
    if (!v13)
    {
      id v29 = (id)v35;
      sub_1ACE74D78();

      swift_willThrow();
      return;
    }
    type metadata accessor for FileAttributeKey(0);
    sub_1ACB4A6F8((unint64_t *)&unk_1EB76E168, type metadata accessor for FileAttributeKey);
    uint64_t v15 = sub_1ACE75FF8();
    id v16 = v14;

    if (*(void *)(v15 + 16))
    {
      id v17 = (id)*MEMORY[0x1E4F28390];
      unint64_t v18 = sub_1ACA662B0((uint64_t)v17);
      if (v19)
      {
        sub_1ACA33128(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&v35);
      }
      else
      {
        long long v35 = 0u;
        long long v36 = 0u;
      }
    }
    else
    {
      long long v35 = 0u;
      long long v36 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v36 + 1))
    {
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
      if (swift_dynamicCast())
      {
        id v30 = v34;
        id v28 = objc_msgSend(v34, sel_unsignedLongLongValue);

        char v27 = 0;
        goto LABEL_20;
      }
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v35, qword_1EB7725E0);
    }
LABEL_19:
    id v28 = 0;
    char v27 = 1;
    goto LABEL_20;
  }
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB768C28);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76BE8();
  if (!os_log_type_enabled(v21, v22))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    goto LABEL_19;
  }
  int v23 = (uint8_t *)swift_slowAlloc();
  uint64_t v24 = swift_slowAlloc();
  *(void *)&long long v35 = v24;
  *(_DWORD *)int v23 = 136315138;
  uint64_t v32 = v23 + 4;
  sub_1ACB4A6F8((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
  uint64_t v25 = sub_1ACE777C8();
  id v34 = (id)sub_1ACA3189C(v25, v26, (uint64_t *)&v35);
  sub_1ACE76FF8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _os_log_impl(&dword_1AC9D5000, v21, v22, "Episode record references non-existing file: %s", v23, 0xCu);
  char v27 = 1;
  swift_arrayDestroy();
  MEMORY[0x1AD11B340](v24, -1, -1);
  MEMORY[0x1AD11B340](v23, -1, -1);

  id v28 = 0;
LABEL_20:
  uint64_t v31 = v33;
  *uint64_t v33 = v28;
  *((unsigned char *)v31 + 8) = v27;
}

uint64_t MediaSpaceCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator__mediaDistribution;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  uint64_t v4 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager);

  swift_release();
  swift_release();
  return v0;
}

uint64_t MediaSpaceCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator__mediaDistribution;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_mediaPath;
  uint64_t v4 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation20MediaSpaceCalculator_fileManager);

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACB47F20@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MediaSpaceCalculator();
  uint64_t result = sub_1ACE75868();
  *a1 = result;
  return result;
}

void MediaSpaceCalculator.MediaSpaceDistribution.volumeSpace.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void MediaSpaceCalculator.MediaSpaceDistribution.volumeAvailableCapacity.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
}

void MediaSpaceCalculator.MediaSpaceDistribution.totalUsedSpace.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

void MediaSpaceCalculator.MediaSpaceDistribution.autoDownloadSpace.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
}

void MediaSpaceCalculator.MediaSpaceDistribution.manualDownloadSpace.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
}

id MediaSpaceCalculator.MediaSpaceDistribution.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  sub_1ACE77268();
  sub_1ACE762C8();
  uint64_t v6 = self;
  id result = objc_msgSend(v6, sel_stringWithBytesize_, v2);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v8 = result;
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id result = objc_msgSend(v6, sel_stringWithBytesize_, v1);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = result;
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id result = objc_msgSend(v6, sel_stringWithBytesize_, v4);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  char v10 = result;
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id result = objc_msgSend(v6, sel_stringWithBytesize_, v3);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v11 = result;
  sub_1ACE761B8();

  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  id result = objc_msgSend(v6, sel_stringWithBytesize_, v5);
  if (result)
  {
    id v12 = result;
    sub_1ACE761B8();

    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    return 0;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ACB48244(char a1)
{
  unint64_t result = 0x7053656D756C6F76;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x6573556C61746F74;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACB48314()
{
  return sub_1ACB48244(*v0);
}

uint64_t sub_1ACB4831C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB4A4B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACB48344(uint64_t a1)
{
  unint64_t v2 = sub_1ACB48CE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB48380(uint64_t a1)
{
  unint64_t v2 = sub_1ACB48CE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MediaSpaceCalculator.MediaSpaceDistribution.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2328);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v18 = v1[2];
  uint64_t v19 = v8;
  uint64_t v10 = v1[3];
  uint64_t v16 = v1[4];
  uint64_t v17 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB48CE8();
  sub_1ACE77C78();
  uint64_t v21 = v9;
  char v20 = 0;
  sub_1ACB48D3C();
  sub_1ACE77788();
  if (!v2)
  {
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    uint64_t v13 = v16;
    uint64_t v21 = v19;
    char v20 = 1;
    sub_1ACE77788();
    uint64_t v21 = v12;
    char v20 = 2;
    sub_1ACE77788();
    uint64_t v21 = v11;
    char v20 = 3;
    sub_1ACE77788();
    uint64_t v21 = v13;
    char v20 = 4;
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MediaSpaceCalculator.MediaSpaceDistribution.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB48CE8();
  sub_1ACE77C48();
  if (!v2)
  {
    char v19 = 0;
    sub_1ACB48D90();
    sub_1ACE77698();
    uint64_t v9 = v20;
    char v19 = 1;
    sub_1ACE77698();
    uint64_t v18 = v9;
    uint64_t v10 = v20;
    char v19 = 2;
    sub_1ACE77698();
    uint64_t v17 = v10;
    uint64_t v11 = v20;
    char v19 = 3;
    sub_1ACE77698();
    uint64_t v16 = v20;
    char v19 = 4;
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v20;
    uint64_t v14 = v17;
    *a2 = v18;
    a2[1] = v14;
    uint64_t v15 = v16;
    a2[2] = v11;
    a2[3] = v15;
    a2[4] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACB488B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MediaSpaceCalculator.MediaSpaceDistribution.init(from:)(a1, a2);
}

uint64_t sub_1ACB488D0(void *a1)
{
  return MediaSpaceCalculator.MediaSpaceDistribution.encode(to:)(a1);
}

uint64_t MediaSpaceCalculator.makeAsyncIterator()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770510);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770578);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770580);
  sub_1ACE75A68();
  swift_endAccess();
  uint64_t v8 = sub_1ACA51EA4((unint64_t *)&qword_1EB770570, &qword_1EB770578);
  MEMORY[0x1AD117F30](v4, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACE75858();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1ACB48AE4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770510);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770578);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770580);
  sub_1ACE75A68();
  swift_endAccess();
  uint64_t v8 = sub_1ACA51EA4((unint64_t *)&qword_1EB770570, &qword_1EB770578);
  MEMORY[0x1AD117F30](v4, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACE75858();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_release();
}

unint64_t sub_1ACB48CE8()
{
  unint64_t result = qword_1E99F2330;
  if (!qword_1E99F2330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2330);
  }
  return result;
}

unint64_t sub_1ACB48D3C()
{
  unint64_t result = qword_1E99F2338;
  if (!qword_1E99F2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2338);
  }
  return result;
}

unint64_t sub_1ACB48D90()
{
  unint64_t result = qword_1E99F2348;
  if (!qword_1E99F2348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2348);
  }
  return result;
}

uint64_t sub_1ACB48DE4()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1ACB48DF0()
{
  return sub_1ACA51EA4(&qword_1EB770500, &qword_1EB770508);
}

uint64_t sub_1ACB48E34()
{
  return type metadata accessor for MediaSpaceCalculator();
}

uint64_t type metadata accessor for MediaSpaceCalculator()
{
  uint64_t result = qword_1EB76F480;
  if (!qword_1EB76F480) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACB48E88()
{
  sub_1ACB49018();
  if (v0 <= 0x3F)
  {
    sub_1ACE74F28();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for MediaSpaceCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaSpaceCalculator);
}

uint64_t dispatch thunk of MediaSpaceCalculator.mediaDistribution.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MediaSpaceCalculator.$mediaDistribution.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MediaSpaceCalculator.__allocating_init(mediaPath:calculationQueue:managedObjectContext:notificationCenter:fileManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of MediaSpaceCalculator.requestRefresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

void sub_1ACB49018()
{
  if (!qword_1EB770588)
  {
    unint64_t v0 = sub_1ACE75AA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB770588);
    }
  }
}

uint64_t getEnumTagSinglePayload for MediaSpaceCalculator.MediaSpaceDistribution(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MediaSpaceCalculator.MediaSpaceDistribution(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MediaSpaceCalculator.MediaSpaceDistribution()
{
  return &type metadata for MediaSpaceCalculator.MediaSpaceDistribution;
}

unsigned char *storeEnumTagSinglePayload for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB491A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys()
{
  return &type metadata for MediaSpaceCalculator.MediaSpaceDistribution.CodingKeys;
}

unint64_t sub_1ACB491DC()
{
  unint64_t result = qword_1E99F2350;
  if (!qword_1E99F2350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2350);
  }
  return result;
}

unint64_t sub_1ACB49234()
{
  unint64_t result = qword_1E99F2358;
  if (!qword_1E99F2358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2358);
  }
  return result;
}

unint64_t sub_1ACB4928C()
{
  unint64_t result = qword_1E99F2360;
  if (!qword_1E99F2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2360);
  }
  return result;
}

uint64_t sub_1ACB492E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CC8);
  uint64_t result = sub_1ACE77558();
  uint64_t v9 = result;
  uint64_t v31 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v31[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v31[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v31[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    uint64_t result = sub_1ACE77B08();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v19;
    *(void *)(*(void *)(v9 + 56) + v29) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1ACB49550(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8C8);
  uint64_t result = sub_1ACE77558();
  uint64_t v7 = result;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = result + 64;
  uint64_t v36 = v4;
  while (1)
  {
    if (v8)
    {
      uint64_t v37 = (v8 - 1) & v8;
      uint64_t v38 = v9;
      unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      uint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v12 >= a2) {
        return v7;
      }
      unint64_t v13 = a1[v12];
      uint64_t v14 = v9 + 1;
      if (!v13)
      {
        uint64_t v14 = v9 + 2;
        if (v9 + 2 >= a2) {
          return v7;
        }
        unint64_t v13 = a1[v14];
        if (!v13)
        {
          uint64_t v14 = v9 + 3;
          if (v9 + 3 >= a2) {
            return v7;
          }
          unint64_t v13 = a1[v14];
          if (!v13)
          {
            uint64_t v15 = v9 + 4;
            if (v9 + 4 >= a2) {
              return v7;
            }
            unint64_t v13 = a1[v15];
            if (!v13)
            {
              while (1)
              {
                uint64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= a2) {
                  return v7;
                }
                unint64_t v13 = a1[v14];
                ++v15;
                if (v13) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v9 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v37 = (v13 - 1) & v13;
      uint64_t v38 = v14;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    uint64_t v16 = *(void *)(v4 + 56);
    uint64_t v17 = *(void *)(*(void *)(v4 + 48) + 8 * v11);
    uint64_t v18 = (uint64_t *)(v16 + 40 * v11);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    uint64_t v23 = v18[4];
    sub_1ACE77B18();
    sub_1ACE77B58();
    uint64_t result = sub_1ACE77B78();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v10 + 8 * v26);
      }
      while (v31 == -1);
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(void *)(v10 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    *(void *)(*(void *)(v7 + 48) + 8 * v27) = v17;
    uint64_t v32 = (uint64_t *)(*(void *)(v7 + 56) + 40 * v27);
    uint64_t *v32 = v19;
    v32[1] = v20;
    id v32[2] = v21;
    v32[3] = v22;
    v32[4] = v23;
    ++*(void *)(v7 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = sub_1ACA50D88(v19, v20, v21);
    uint64_t v4 = v36;
    unint64_t v8 = v37;
    uint64_t v9 = v38;
    if (!v5) {
      return v7;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1ACB49840(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769028);
  unint64_t result = sub_1ACE77558();
  uint64_t v33 = (void *)result;
  if (a2 < 1) {
    unint64_t v7 = 0;
  }
  else {
    unint64_t v7 = *a1;
  }
  uint64_t v8 = 0;
  uint64_t v31 = v4;
  unint64_t v32 = result + 64;
  while (1)
  {
    uint64_t v44 = v5;
    if (v7)
    {
      uint64_t v34 = (v7 - 1) & v7;
      uint64_t v35 = v8;
      unint64_t v9 = __clz(__rbit64(v7)) | (v8 << 6);
    }
    else
    {
      uint64_t v10 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_30;
      }
      if (v10 >= a2) {
        return (unint64_t)v33;
      }
      unint64_t v11 = a1[v10];
      uint64_t v12 = v8 + 1;
      if (!v11)
      {
        uint64_t v12 = v8 + 2;
        if (v8 + 2 >= a2) {
          return (unint64_t)v33;
        }
        unint64_t v11 = a1[v12];
        if (!v11)
        {
          uint64_t v12 = v8 + 3;
          if (v8 + 3 >= a2) {
            return (unint64_t)v33;
          }
          unint64_t v11 = a1[v12];
          if (!v11)
          {
            uint64_t v13 = v8 + 4;
            if (v8 + 4 >= a2) {
              return (unint64_t)v33;
            }
            unint64_t v11 = a1[v13];
            if (!v11)
            {
              while (1)
              {
                uint64_t v12 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_31;
                }
                if (v12 >= a2) {
                  return (unint64_t)v33;
                }
                unint64_t v11 = a1[v12];
                ++v13;
                if (v11) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v12 = v8 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v34 = (v11 - 1) & v11;
      uint64_t v35 = v12;
      unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    uint64_t v14 = *(void *)(v4 + 56);
    uint64_t v15 = *(void *)(v4 + 48) + 96 * v9;
    char v36 = *(unsigned char *)(v15 + 8);
    char v37 = *(unsigned char *)(v15 + 9);
    char v38 = *(unsigned char *)(v15 + 10);
    char v39 = *(unsigned char *)(v15 + 11);
    char v40 = *(unsigned char *)(v15 + 12);
    char v41 = *(unsigned char *)(v15 + 13);
    uint64_t v18 = *(void *)(v15 + 16);
    uint64_t v17 = *(void *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    char v42 = *(unsigned char *)(v15 + 40);
    uint64_t v20 = *(void *)(v15 + 48);
    uint64_t v21 = *(void *)(v15 + 56);
    uint64_t v22 = *(void *)(v15 + 64);
    uint64_t v23 = *(void *)(v15 + 72);
    uint64_t v24 = *(void *)(v15 + 80);
    char v25 = *(unsigned char *)(v15 + 90);
    __int16 v26 = *(_WORD *)(v15 + 88);
    uint64_t v27 = *(void *)(v14 + 8 * v9);
    uint64_t v46 = *(void *)v15;
    uint64_t v16 = v46;
    char v47 = v36;
    char v48 = v37;
    char v49 = v38;
    char v50 = v39;
    char v51 = v40;
    char v52 = v41;
    uint64_t v53 = v18;
    uint64_t v54 = v17;
    uint64_t v55 = v19;
    char v56 = v42;
    uint64_t v57 = v20;
    uint64_t v58 = v21;
    uint64_t v59 = v22;
    uint64_t v60 = v23;
    uint64_t v61 = v24;
    char v43 = v25;
    char v63 = v25;
    __int16 v62 = v26;
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v20, v21, v22, v23, v24);
    swift_bridgeObjectRetain();
    EpisodeStateModel.hash(into:)((uint64_t)v45);
    sub_1ACE77B78();
    unint64_t result = sub_1ACE77118();
    *(void *)(v32 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v28 = v33[6] + 96 * result;
    *(void *)uint64_t v28 = v16;
    *(unsigned char *)(v28 + 8) = v36;
    *(unsigned char *)(v28 + 9) = v37;
    *(unsigned char *)(v28 + 1sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v38;
    *(unsigned char *)(v28 + 11) = v39;
    *(unsigned char *)(v28 + 12) = v40;
    *(unsigned char *)(v28 + 13) = v41;
    *(void *)(v28 + 16) = v18;
    *(void *)(v28 + 24) = v17;
    *(void *)(v28 + 32) = v19;
    *(unsigned char *)(v28 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v42;
    *(void *)(v28 + 48) = v20;
    *(void *)(v28 + 56) = v21;
    *(void *)(v28 + 64) = v22;
    *(void *)(v28 + 72) = v23;
    *(void *)(v28 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v24;
    *(unsigned char *)(v28 + 9sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v43;
    *(_WORD *)(v28 + 88) = v26;
    *(void *)(v33[7] + 8 * result) = v27;
    ++v33[2];
    --v5;
    if (__OFSUB__(v44, 1)) {
      break;
    }
    uint64_t v4 = v31;
    unint64_t v7 = v34;
    uint64_t v8 = v35;
    if (v44 == 1) {
      return (unint64_t)v33;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1ACB49BCC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2368);
  uint64_t result = sub_1ACE77558();
  uint64_t v9 = result;
  unint64_t v29 = a1;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v30) {
        return v9;
      }
      unint64_t v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v30) {
          return v9;
        }
        unint64_t v16 = v29[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v30) {
            return v9;
          }
          unint64_t v16 = v29[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v30) {
              return v9;
            }
            unint64_t v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v30) {
                  return v9;
                }
                unint64_t v16 = v29[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    char v19 = *(unsigned char *)(*(void *)(v4 + 56) + v14);
    sub_1ACE77B18();
    sub_1ACE77B58();
    uint64_t result = sub_1ACE77B78();
    uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v9 + 48) + 8 * v23) = v18;
    *(unsigned char *)(*(void *)(v9 + 56) + v23) = v19;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1ACB49E4C(uint64_t a1, void (*a2)(void *__return_ptr, void, void))
{
  void (*v16)(void *__return_ptr, void, void);

  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A908);
  unint64_t v7 = (void *)(a1
                + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)));
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 72);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v16 = a2;
  do
  {
    a2(&v14, *v7, (char *)v7 + *(int *)(v6 + 48));
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    if ((v15 & 1) == 0)
    {
      long long v13 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1ACA42C34(0, v9[2] + 1, 1, v9);
      }
      unint64_t v11 = v9[2];
      unint64_t v10 = v9[3];
      if (v11 >= v10 >> 1) {
        uint64_t v9 = sub_1ACA42C34((void *)(v10 > 1), v11 + 1, 1, v9);
      }
      void v9[2] = v11 + 1;
      *(_OWORD *)&v9[2 * v11 + 4] = v13;
      a2 = v16;
    }
    unint64_t v7 = (void *)((char *)v7 + v8);
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v9;
}

id sub_1ACB4A008()
{
  sub_1ACE761B8();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  id v3 = objc_msgSend(self, sel_predicateForDownloaded_excludeHidden_, 1, 0);
  objc_msgSend(v2, sel_setPredicate_, v3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769598);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84470;
  uint64_t v5 = sub_1ACE761B8();
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v7;
  uint64_t v8 = sub_1ACE761B8();
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 72) = v9;
  uint64_t v10 = sub_1ACE761B8();
  *(void *)(v4 + 12sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v6;
  *(void *)(v4 + 96) = v10;
  *(void *)(v4 + 104) = v11;
  uint64_t v12 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPropertiesToFetch_, v12);

  objc_msgSend(v2, sel_setResultType_, 2);
  return v2;
}

uint64_t sub_1ACB4A194(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t *))
{
  unint64_t v21 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v12) {
      return sub_1ACB492E0(v21, a2, v6, a3);
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v12) {
        return sub_1ACB492E0(v21, a2, v6, a3);
      }
      unint64_t v17 = *(void *)(v8 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v12) {
          return sub_1ACB492E0(v21, a2, v6, a3);
        }
        unint64_t v17 = *(void *)(v8 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    uint64_t v22 = *(void *)(*(void *)(a3 + 56) + 8 * v14);
    uint64_t result = a4(v15, &v22);
    if (result)
    {
      *(unint64_t *)((char *)v21 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
        return sub_1ACB492E0(v21, a2, v6, a3);
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v12) {
    return sub_1ACB492E0(v21, a2, v6, a3);
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v12) {
      return sub_1ACB492E0(v21, a2, v6, a3);
    }
    unint64_t v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1ACB4A340(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t *), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1ACB4A194((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1ACB4A194((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1ACB4A4B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7053656D756C6F76 && a2 == 0xEB00000000656361;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ACEC9940 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6573556C61746F74 && a2 == 0xEE00656361705364 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ACEC9960 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ACEC9980)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1ACB4A6F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1ACB4A740(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_1ACB4A75C(uint64_t *a1@<X8>)
{
}

uint64_t sub_1ACB4A778()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACB4A7B8(uint64_t a1, uint64_t a2)
{
  sub_1ACAC1B54(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1ACB4A7C4(unint64_t a1)
{
  return sub_1ACB46EAC(a1);
}

uint64_t sub_1ACB4A7DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACB4A814@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1ACB46750(a1, a2);
}

BOOL sub_1ACB4A830(uint64_t a1)
{
  return sub_1ACCEA5B8(a1, *(void *)(v1 + 16));
}

uint64_t Sequence.sorted<A, B>(by:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = Sequence.uniqued<A>(by:)(a2, a3, a5, a7);
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v26 = a2;
  uint64_t v13 = sub_1ACE76688();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACB4AF04, (uint64_t)v20, v13, TupleTypeMetadata2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
  swift_bridgeObjectRelease();
  uint64_t v27 = v17;
  sub_1ACE76688();
  swift_getWitnessTable();
  sub_1ACE76038();
  uint64_t v18 = sub_1ACE763D8();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1ACB4AA30(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  char v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1ACE76A88();
  if (!v20) {
    return sub_1ACE765F8();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_1ACE75FA8();
  uint64_t v35 = sub_1ACE77428();
  sub_1ACE773C8();
  char v41 = v19;
  uint64_t result = sub_1ACE76A78();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    char v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1ACE76AF8();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1ACE77408();
      sub_1ACE76AA8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t sub_1ACB4AE2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(*a2 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v5 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v5, a1, v4);
}

uint64_t sub_1ACB4AF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACB4AE2C(a1, *(void **)(v2 + 56), a2);
}

uint64_t sub_1ACB4AF2C(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v5 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return MEMORY[0x1AD118260](a1, v4, v3, AssociatedTypeWitness, v5);
}

uint64_t DownloadEnvironment.recordKeeper.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1, a1);
}

uint64_t DownloadEnvironment.fileStorage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1 + 40, a1);
}

id DownloadEnvironment.dispatchQueue.getter()
{
  return *(id *)(v0 + 80);
}

uint64_t DownloadEnvironment.init(recordKeeper:fileStorage:dispatchQueue:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1ACA3AABC(a1, a4);
  uint64_t result = sub_1ACA3AABC(a2, a4 + 40);
  *(void *)(a4 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = a3;
  return result;
}

id sub_1ACB4B038()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_privateQueueContext);

  uint64_t v2 = type metadata accessor for CoreDataDownloadPersistence();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  uint64_t v11 = v2;
  int64_t v12 = &protocol witness table for CoreDataDownloadPersistence;
  *(void *)&long long v10 = v3;
  id v4 = objc_msgSend(self, sel_defaultManager);
  unint64_t v8 = sub_1ACB4B438();
  uint64_t v9 = &protocol witness table for NSFileManager;
  *(void *)&long long v7 = v4;
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EB76E150;
  sub_1ACA3AABC(&v10, (uint64_t)&unk_1EB76B898);
  sub_1ACA3AABC(&v7, (uint64_t)&unk_1EB76B8C0);
  qword_1EB76B8E8 = (uint64_t)v6;
  return v6;
}

uint64_t static DownloadEnvironment.live.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB76B8F8 != -1) {
    swift_once();
  }
  return sub_1ACAFA130((uint64_t)&unk_1EB76B898, a1);
}

void destroy for DownloadEnvironment(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  uint64_t v2 = *(void **)(a1 + 80);
}

uint64_t initializeWithCopy for DownloadEnvironment(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  id v6 = *(void **)(a2 + 80);
  *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v6;
  id v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for DownloadEnvironment(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  long long v4 = (void *)a2[10];
  long long v5 = (void *)a1[10];
  a1[10] = (uint64_t)v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for DownloadEnvironment(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  id v6 = *(void **)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadEnvironment(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadEnvironment()
{
  return &type metadata for DownloadEnvironment;
}

unint64_t sub_1ACB4B438()
{
  unint64_t result = qword_1EB769588;
  if (!qword_1EB769588)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB769588);
  }
  return result;
}

uint64_t dispatch thunk of AssetSource.fetch(asset:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t EpisodeUserFilter.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v4 = *(void *)(a2 + 16);
      uint64_t v5 = *(unsigned __int8 *)(a2 + 24);
      sub_1ACE77B28();
      sub_1ACA63B70(v4, v5);
      EpisodeUserFilter.hash(into:)(a1, v4, v5);
      return sub_1ACA63830(v4, v5);
    }
    else
    {
      return sub_1ACE77B28();
    }
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
}

BOOL static EpisodeUserFilter.== infix(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1)
      {
        uint64_t v4 = *(void *)(a1 + 16);
        uint64_t v5 = *(void *)(a3 + 16);
        uint64_t v6 = *(unsigned __int8 *)(a1 + 24);
        uint64_t v7 = *(unsigned __int8 *)(a3 + 24);
        sub_1ACA63B70(v4, v6);
        sub_1ACA63B70(v5, v7);
        char v8 = static EpisodeUserFilter.== infix(_:_:)(v4, v6, v5, v7);
        sub_1ACA63830(v5, v7);
        sub_1ACA63830(v4, v6);
        return v8 & 1;
      }
      return 0;
    }
    switch(a1)
    {
      case 1:
        if (a4 != 2 || a3 != 1) {
          return 0;
        }
        break;
      case 2:
        if (a4 != 2 || a3 != 2) {
          return 0;
        }
        break;
      case 3:
        if (a4 != 2 || a3 != 3) {
          return 0;
        }
        break;
      case 4:
        if (a4 != 2 || a3 != 4) {
          return 0;
        }
        break;
      case 5:
        if (a4 != 2 || a3 != 5) {
          return 0;
        }
        break;
      default:
        if (a4 != 2 || a3) {
          return 0;
        }
        break;
    }
    return 1;
  }
  else
  {
    if (a4) {
      return 0;
    }
    return a1 == a3;
  }
}

uint64_t sub_1ACB4B728()
{
  return 0;
}

uint64_t sub_1ACB4B734(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C864();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4B770(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C864();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4B7AC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C768();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4B7E8(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C768();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4B824()
{
  uint64_t result = 0x6E6F73616573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F736970456C6C61;
      break;
    case 2:
      uint64_t result = 0x646579616C706E75;
      break;
    case 3:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 4:
      uint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 5:
      uint64_t result = 0x646579616C70;
      break;
    case 6:
      uint64_t result = 0x6269726373627573;
      break;
    case 7:
      uint64_t result = 0x657461647075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACB4B920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACB4E268(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACB4B948(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1ACB4B954(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C618();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4B990(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C618();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4B9CC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C7BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4BA08(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C7BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4BA44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1ACB4BA74(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C714();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4BAB0(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C714();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4BAEC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C8B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4BB28(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C8B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4BB64(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C6C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4BBA0(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C6C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4BBDC(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C810();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4BC18(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C810();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACB4BC54(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C66C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACB4BC90(uint64_t a1)
{
  unint64_t v2 = sub_1ACB4C66C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeUserFilter.encode(to:)(void *a1, uint64_t a2, int a3)
{
  int v58 = a3;
  uint64_t v59 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2370);
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v55 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2378);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x1F4188790](v6);
  char v52 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2380);
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x1F4188790](v8);
  char v49 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2388);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v46 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2390);
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v43 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2398);
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  char v40 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F23A0);
  uint64_t v39 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F23A8);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F23B0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v60 = v22;
  uint64_t v61 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACB4C618();
  sub_1ACE77C78();
  if ((_BYTE)v58)
  {
    if (v58 == 1)
    {
      uint64_t v26 = *(void *)(v59 + 16);
      char v27 = *(unsigned char *)(v59 + 24);
      LOBYTE(v62) = 7;
      sub_1ACA63B70(v26, v27);
      sub_1ACB4C66C();
      uint64_t v28 = v55;
      uint64_t v29 = v60;
      sub_1ACE776D8();
      uint64_t v62 = v26;
      char v63 = v27;
      sub_1ACAB2F04();
      uint64_t v30 = v57;
      sub_1ACE77788();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v30);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v25, v29);
      return sub_1ACA63830(v26, v27);
    }
    else
    {
      switch(v59)
      {
        case 1:
          LOBYTE(v62) = 2;
          sub_1ACB4C810();
          uint64_t v34 = v40;
          uint64_t v35 = v60;
          sub_1ACE776D8();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
          goto LABEL_13;
        case 2:
          LOBYTE(v62) = 3;
          sub_1ACB4C7BC();
          char v36 = v43;
          uint64_t v35 = v60;
          sub_1ACE776D8();
          uint64_t v38 = v44;
          uint64_t v37 = v45;
          goto LABEL_12;
        case 3:
          LOBYTE(v62) = 4;
          sub_1ACB4C768();
          char v36 = v46;
          uint64_t v35 = v60;
          sub_1ACE776D8();
          uint64_t v38 = v47;
          uint64_t v37 = v48;
          goto LABEL_12;
        case 4:
          LOBYTE(v62) = 5;
          sub_1ACB4C714();
          char v36 = v49;
          uint64_t v35 = v60;
          sub_1ACE776D8();
          uint64_t v38 = v50;
          uint64_t v37 = v51;
          goto LABEL_12;
        case 5:
          LOBYTE(v62) = 6;
          sub_1ACB4C6C0();
          char v36 = v52;
          uint64_t v35 = v60;
          sub_1ACE776D8();
          uint64_t v38 = v53;
          uint64_t v37 = v54;
LABEL_12:
          (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
LABEL_13:
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v25, v35);
          break;
        default:
          LOBYTE(v62) = 1;
          sub_1ACB4C864();
          uint64_t v33 = v60;
          sub_1ACE776D8();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v15);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v25, v33);
          break;
      }
    }
  }
  else
  {
    LOBYTE(v62) = 0;
    sub_1ACB4C8B8();
    uint64_t v32 = v60;
    sub_1ACE776D8();
    sub_1ACE77798();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v25, v32);
  }
  return result;
}

uint64_t EpisodeUserFilter.hashValue.getter(uint64_t a1, char a2)
{
  sub_1ACE77B18();
  EpisodeUserFilter.hash(into:)((uint64_t)v5, a1, a2);
  return sub_1ACE77B78();
}

uint64_t EpisodeUserFilter.init(from:)(void *a1)
{
  return sub_1ACB4E5C8(a1);
}

uint64_t sub_1ACB4C5BC()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1ACE77B18();
  EpisodeUserFilter.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1ACE77B78();
}

uint64_t sub_1ACB4C60C(uint64_t a1)
{
  return EpisodeUserFilter.hash(into:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

unint64_t sub_1ACB4C618()
{
  unint64_t result = qword_1E99F23B8;
  if (!qword_1E99F23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23B8);
  }
  return result;
}

unint64_t sub_1ACB4C66C()
{
  unint64_t result = qword_1E99F23C0;
  if (!qword_1E99F23C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23C0);
  }
  return result;
}

unint64_t sub_1ACB4C6C0()
{
  unint64_t result = qword_1E99F23C8;
  if (!qword_1E99F23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23C8);
  }
  return result;
}

unint64_t sub_1ACB4C714()
{
  unint64_t result = qword_1E99F23D0;
  if (!qword_1E99F23D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23D0);
  }
  return result;
}

unint64_t sub_1ACB4C768()
{
  unint64_t result = qword_1E99F23D8;
  if (!qword_1E99F23D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23D8);
  }
  return result;
}

unint64_t sub_1ACB4C7BC()
{
  unint64_t result = qword_1E99F23E0;
  if (!qword_1E99F23E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23E0);
  }
  return result;
}

unint64_t sub_1ACB4C810()
{
  unint64_t result = qword_1E99F23E8;
  if (!qword_1E99F23E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23E8);
  }
  return result;
}

unint64_t sub_1ACB4C864()
{
  unint64_t result = qword_1E99F23F0;
  if (!qword_1E99F23F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23F0);
  }
  return result;
}

unint64_t sub_1ACB4C8B8()
{
  unint64_t result = qword_1E99F23F8;
  if (!qword_1E99F23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F23F8);
  }
  return result;
}

uint64_t sub_1ACB4C90C()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1ACE77B18();
  EpisodeUserFilter.hash(into:)((uint64_t)v4, v1, v2);
  return sub_1ACE77B78();
}

uint64_t sub_1ACB4C958@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACB4E5C8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1ACB4C988(void *a1)
{
  return EpisodeUserFilter.encode(to:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_1ACB4C9A8(uint64_t a1, uint64_t a2)
{
  return static EpisodeUserFilter.== infix(_:_:)(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t EpisodeUserFilter.title.getter(uint64_t a1, char a2)
{
  uint64_t v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3)
  {
    switch(v2)
    {
      case 1:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 2:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 3:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 4:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 5:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      default:
        if (qword_1EB7730A8 != -1) {
LABEL_18:
        }
          swift_once();
        break;
    }
    return sub_1ACE74C48();
  }
  else
  {
    if (qword_1EB7730A8 != -1) {
      swift_once();
    }
    sub_1ACE74C48();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = MEMORY[0x1E4FBC1C8];
    *(_OWORD *)(v4 + 16) = xmmword_1ACE843F0;
    uint64_t v6 = MEMORY[0x1E4FBC240];
    *(void *)(v4 + 56) = v5;
    *(void *)(v4 + 64) = v6;
    *(void *)(v4 + 32) = v2;
    uint64_t v7 = sub_1ACE761F8();
    swift_bridgeObjectRelease();
    return v7;
  }
}

uint64_t EpisodeUserFilter.canonical.getter(uint64_t a1, char a2)
{
  uint64_t v2 = a1;
  if (a2 == 1)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(unsigned __int8 *)(a1 + 24);
    sub_1ACA63B70(v3, *(unsigned char *)(a1 + 24));
    uint64_t v2 = EpisodeUserFilter.canonical.getter(v3, v4);
    sub_1ACA63830(v3, v4);
  }
  else
  {
    sub_1ACA63B70(a1, a2);
  }
  return v2;
}

Swift::String __swiftcall EpisodeUserFilter.shelfTitle(hidesPlayedEpisodes:)(Swift::Bool hidesPlayedEpisodes)
{
  char v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = EpisodeUserFilter.canonical.getter(v1, v2);
  if (v7 != 2 || v6 != 0)
  {
    sub_1ACA63830(v6, v7);
LABEL_7:
    uint64_t v9 = EpisodeUserFilter.title.getter(v4, v3);
    goto LABEL_13;
  }
  if (hidesPlayedEpisodes) {
    goto LABEL_7;
  }
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE74C48();
LABEL_13:
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

uint64_t EpisodeUserFilter.emptyMessage.getter(uint64_t a1, char a2)
{
  uint64_t v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3)
  {
    switch(v2)
    {
      case 1:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 2:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 3:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 4:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      case 5:
        if (qword_1EB7730A8 != -1) {
          goto LABEL_18;
        }
        break;
      default:
        if (qword_1EB7730A8 != -1) {
LABEL_18:
        }
          swift_once();
        break;
    }
    return sub_1ACE74C48();
  }
  else
  {
    if (qword_1EB7730A8 != -1) {
      swift_once();
    }
    sub_1ACE74C48();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = MEMORY[0x1E4FBC1C8];
    *(_OWORD *)(v4 + 16) = xmmword_1ACE843F0;
    uint64_t v6 = MEMORY[0x1E4FBC240];
    *(void *)(v4 + 56) = v5;
    *(void *)(v4 + 64) = v6;
    *(void *)(v4 + 32) = v2;
    uint64_t v7 = sub_1ACE76188();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
}

unint64_t EpisodeUserFilter.symbolName.getter(uint64_t a1, char a2)
{
  unint64_t result = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3 == 2)
  {
    unint64_t v4 = result - 1;
    unint64_t result = 0;
    char v3 = 0;
    switch(v4)
    {
      case 0uLL:
        unint64_t result = 0x6162656C63726963;
        break;
      case 1uLL:
        unint64_t result = 0x6F642E776F727261;
        break;
      case 2uLL:
        unint64_t result = 0x6B72616D6B6F6F62;
        break;
      case 3uLL:
        unint64_t result = 0xD000000000000010;
        break;
      case 4uLL:
        return result;
      default:
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    sub_1ACA63830(result, v3);
    return 0;
  }
  return result;
}

uint64_t static EpisodeUserFilter.defaultFilter(seasonToShow:hidesPlayedEpisodes:)(uint64_t a1, char a2, char a3)
{
  if (a2) {
    return a3 & 1;
  }
  return result;
}

void *static EpisodeUserFilter.allAvailableFilters(seasonNumbers:hasBookmarkedEpisodes:hasPlayedEpisodes:hasSubscriberEpisodes:)(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v35 = a1;
  swift_bridgeObjectRetain();
  sub_1ACB4D900(&v35);
  uint64_t v8 = v35;
  uint64_t v9 = *(void *)(v35 + 16);
  if (v9)
  {
    unint64_t v4 = v35 + 24;
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    while (v9 <= *(void *)(v8 + 16))
    {
      uint64_t v11 = *(void *)(v4 + 8 * v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1ACA42D58(0, v10[2] + 1, 1, v10);
      }
      unint64_t v13 = v10[2];
      unint64_t v12 = v10[3];
      if (v13 >= v12 >> 1) {
        uint64_t v10 = sub_1ACA42D58((void *)(v12 > 1), v13 + 1, 1, v10);
      }
      void v10[2] = v13 + 1;
      uint64_t v14 = &v10[2 * v13];
      void v14[4] = v11;
      *((unsigned char *)v14 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 0;
      if (!--v9) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
LABEL_12:
  swift_release();
  int64_t v16 = v10[2];
  int64_t v17 = v16 + 3;
  if (__OFADD__(v16, 3))
  {
    __break(1u);
LABEL_39:
    uint64_t v10 = sub_1ACA42D58((void *)(v15 > 1), v16, 1, v10);
    unint64_t v15 = v10[3];
    unint64_t v19 = v15 >> 1;
    goto LABEL_20;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (unint64_t v15 = v10[3], v19 = v15 >> 1, (uint64_t)(v15 >> 1) < v17))
  {
    if (v16 <= v17) {
      int64_t v20 = v16 + 3;
    }
    else {
      int64_t v20 = v16;
    }
    uint64_t v10 = sub_1ACA42D58(isUniquelyReferenced_nonNull_native, v20, 1, v10);
    unint64_t v15 = v10[3];
    unint64_t v19 = v15 >> 1;
  }
  unint64_t v4 = v10[2];
  int64_t v16 = v4 + 1;
  if (v19 <= v4) {
    goto LABEL_39;
  }
LABEL_20:
  void v10[2] = v16;
  uint64_t v21 = &v10[2 * v4];
  unsigned char v21[4] = 0;
  *((unsigned char *)v21 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  unint64_t v22 = v4 + 2;
  if (v19 <= v16)
  {
    uint64_t v10 = sub_1ACA42D58((void *)(v15 > 1), v4 + 2, 1, v10);
    unint64_t v15 = v10[3];
    unint64_t v19 = v15 >> 1;
  }
  void v10[2] = v22;
  uint64_t v23 = &v10[2 * v16];
  v23[4] = 1;
  *((unsigned char *)v23 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  unint64_t v24 = v4 + 3;
  if (v19 <= v22) {
    uint64_t v10 = sub_1ACA42D58((void *)(v15 > 1), v4 + 3, 1, v10);
  }
  void v10[2] = v24;
  uint64_t v25 = &v10[2 * v22];
  v25[4] = 2;
  *((unsigned char *)v25 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  if ((a2 & 1) == 0)
  {
    unint64_t v27 = v4 + 3;
    if ((a3 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_30;
  }
  unint64_t v26 = v10[3];
  unint64_t v27 = v4 + 4;
  if (v24 >= v26 >> 1) {
    uint64_t v10 = sub_1ACA42D58((void *)(v26 > 1), v4 + 4, 1, v10);
  }
  void v10[2] = v27;
  uint64_t v28 = &v10[2 * v24];
  v28[4] = 3;
  *((unsigned char *)v28 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  if (a3)
  {
LABEL_30:
    unint64_t v29 = v10[3];
    if (v27 >= v29 >> 1) {
      uint64_t v10 = sub_1ACA42D58((void *)(v29 > 1), v27 + 1, 1, v10);
    }
    void v10[2] = v27 + 1;
    uint64_t v30 = &v10[2 * v27];
    v30[4] = 4;
    *((unsigned char *)v30 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  }
LABEL_33:
  if (a4)
  {
    unint64_t v32 = v10[2];
    unint64_t v31 = v10[3];
    if (v32 >= v31 >> 1) {
      uint64_t v10 = sub_1ACA42D58((void *)(v31 > 1), v32 + 1, 1, v10);
    }
    void v10[2] = v32 + 1;
    uint64_t v33 = &v10[2 * v32];
    v33[4] = 5;
    *((unsigned char *)v33 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = 2;
  }
  return v10;
}

BOOL _s18PodcastsFoundation17EpisodeUserFilterO10isSeasonalSbvg_0(uint64_t a1, char a2)
{
  uint64_t v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  char v4 = v3;
  if (v3) {
    sub_1ACA63830(v2, v3);
  }
  return v4 == 0;
}

id EpisodeUserFilter.basePredicate.getter(uint64_t a1, char a2)
{
  uint64_t v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3)
  {
    switch(v2)
    {
      case 1:
        id v4 = objc_msgSend(self, sel_predicateForVisuallyPlayed_, 0);
        break;
      case 2:
        id v4 = objc_msgSend(self, sel_predicateForDownloaded_excludeHidden_, 1, 1);
        break;
      case 3:
        id v4 = objc_msgSend(self, sel_predicateForAllBookmarkedEpisodes);
        break;
      case 4:
        id v4 = objc_msgSend(self, sel_predicateForVisuallyPlayed_, 1);
        break;
      case 5:
        id v4 = objc_msgSend(self, sel_predicateForSubscriptionOnly);
        break;
      default:
        id v4 = objc_msgSend(self, sel_truePredicate);
        break;
    }
  }
  else
  {
    id v4 = objc_msgSend(self, sel_predicateForSeasonNumber_, v2);
  }
  return v4;
}

uint64_t EpisodeUserFilter.supportsHidesPlayedEpisodes.getter(uint64_t a1, char a2)
{
  char v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  return (v3 == 0) | (0x2Cu >> v2) & 1;
}

BOOL EpisodeUserFilter.skipsTrailersDuringPlayback.getter(uint64_t a1, char a2)
{
  unint64_t v2 = EpisodeUserFilter.canonical.getter(a1, a2);
  if (v3) {
    BOOL v4 = v2 >= 2;
  }
  else {
    BOOL v4 = 0;
  }
  return !v4;
}

uint64_t EpisodeUserFilter.flipUpdateState.getter(uint64_t a1, char a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    char v4 = *(unsigned char *)(a1 + 24);
    sub_1ACA63B70(v3, v4);
    uint64_t v5 = EpisodeUserFilter.canonical.getter(v3, v4);
    sub_1ACA63830(v3, v4);
  }
  else
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(unsigned char *)(v5 + 24) = a2;
    sub_1ACA63B70(a1, a2);
  }
  return v5;
}

uint64_t sub_1ACB4D900(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1ACBE80C8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1ACB4D96C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1ACB4D96C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          id v86 = v11;
          long long v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1ACB4DFF8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v86 = sub_1ACBE8028((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1ACE76608();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      unint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1ACBE7A88(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1ACBE7A88((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    unint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          char v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        char v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1ACB4DFF8((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        unint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACB4DFF8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      unint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            unint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    unint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1ACBE7C4C(&v24, &v23, &v22);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACB4E268(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F73616573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F736970456C6C61 && a2 == 0xEB00000000736564 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646579616C706E75 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xEA00000000006465 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646579616C70 && a2 == 0xE600000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEA00000000007265 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657461647075 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1ACB4E5C8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24B0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  uint64_t v57 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v60 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24B8);
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v63 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24C0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v62 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24C8);
  uint64_t v51 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v61 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24D0);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x1F4188790](v11);
  BOOL v59 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24D8);
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v58 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24E0);
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F24E8);
  uint64_t v43 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1E99F24F0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1ACB4C618();
  uint64_t v26 = v65;
  sub_1ACE77C48();
  if (v26) {
    goto LABEL_13;
  }
  uint64_t v41 = v20;
  BOOL v42 = v17;
  unint64_t v28 = v61;
  unint64_t v27 = v62;
  unint64_t v29 = v63;
  uint64_t v65 = v22;
  uint64_t v30 = sub_1ACE776B8();
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v22 = sub_1ACE77328();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
    *uint64_t v33 = &type metadata for EpisodeUserFilter;
    sub_1ACE775E8();
    sub_1ACE77308();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v33, *MEMORY[0x1E4FBBA70], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
LABEL_13:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
    return v22;
  }
  switch(*(unsigned char *)(v30 + 32))
  {
    case 1:
      char v67 = 1;
      sub_1ACB4C864();
      uint64_t v34 = v42;
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      uint64_t v22 = 0;
      goto LABEL_13;
    case 2:
      char v68 = 2;
      sub_1ACB4C810();
      char v35 = v58;
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      uint64_t v22 = 1;
      goto LABEL_13;
    case 3:
      char v69 = 3;
      sub_1ACB4C7BC();
      char v36 = v59;
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      uint64_t v22 = 2;
      goto LABEL_13;
    case 4:
      char v70 = 4;
      sub_1ACB4C768();
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      uint64_t v22 = 3;
      goto LABEL_13;
    case 5:
      char v71 = 5;
      sub_1ACB4C714();
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      uint64_t v22 = 4;
      goto LABEL_13;
    case 6:
      char v72 = 6;
      sub_1ACB4C6C0();
      sub_1ACE775D8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      uint64_t v22 = 5;
      goto LABEL_13;
    case 7:
      char v73 = 7;
      sub_1ACB4C66C();
      uint64_t v37 = v60;
      sub_1ACE775D8();
      uint64_t v22 = swift_allocObject();
      sub_1ACAB2CF4();
      uint64_t v39 = v56;
      sub_1ACE77698();
      uint64_t v40 = v65;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v21);
      goto LABEL_13;
    default:
      char v66 = 0;
      sub_1ACB4C8B8();
      unint64_t v31 = v41;
      sub_1ACE775D8();
      uint64_t v22 = sub_1ACE776A8();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v18);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v21);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
      break;
  }
  return v22;
}

uint64_t sub_1ACB4F168()
{
  sub_1ACA63830(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1ACB4F1A8()
{
  unint64_t result = qword_1E99F2400;
  if (!qword_1E99F2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2400);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeUserFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1ACA63B70(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for EpisodeUserFilter(uint64_t a1)
{
  return sub_1ACA63830(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for EpisodeUserFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1ACA63B70(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1ACA63830(v5, v6);
  return a1;
}

uint64_t assignWithTake for EpisodeUserFilter(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1ACA63830(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Color(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Color(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACB4F374(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1ACB4F38C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter()
{
  return &type metadata for EpisodeUserFilter;
}

uint64_t getEnumTagSinglePayload for EpisodeUserFilter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EpisodeUserFilter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACB4F510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.CodingKeys()
{
  return &type metadata for EpisodeUserFilter.CodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.SeasonCodingKeys()
{
  return &type metadata for EpisodeUserFilter.SeasonCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.AllEpisodesCodingKeys()
{
  return &type metadata for EpisodeUserFilter.AllEpisodesCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.UnplayedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.UnplayedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.DownloadedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.DownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.BookmarkedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.BookmarkedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.PlayedCodingKeys()
{
  return &type metadata for EpisodeUserFilter.PlayedCodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.SubscriberCodingKeys()
{
  return &type metadata for EpisodeUserFilter.SubscriberCodingKeys;
}

unsigned char *_s18PodcastsFoundation17EpisodeUserFilterO16SeasonCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACB4F658);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeUserFilter.UpdateCodingKeys()
{
  return &type metadata for EpisodeUserFilter.UpdateCodingKeys;
}

unint64_t sub_1ACB4F694()
{
  unint64_t result = qword_1E99F2408;
  if (!qword_1E99F2408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2408);
  }
  return result;
}

unint64_t sub_1ACB4F6EC()
{
  unint64_t result = qword_1E99F2410;
  if (!qword_1E99F2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2410);
  }
  return result;
}

unint64_t sub_1ACB4F744()
{
  unint64_t result = qword_1E99F2418;
  if (!qword_1E99F2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2418);
  }
  return result;
}

unint64_t sub_1ACB4F79C()
{
  unint64_t result = qword_1E99F2420;
  if (!qword_1E99F2420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2420);
  }
  return result;
}

unint64_t sub_1ACB4F7F4()
{
  unint64_t result = qword_1E99F2428;
  if (!qword_1E99F2428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2428);
  }
  return result;
}

unint64_t sub_1ACB4F84C()
{
  unint64_t result = qword_1E99F2430;
  if (!qword_1E99F2430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2430);
  }
  return result;
}

unint64_t sub_1ACB4F8A4()
{
  unint64_t result = qword_1E99F2438;
  if (!qword_1E99F2438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2438);
  }
  return result;
}

unint64_t sub_1ACB4F8FC()
{
  unint64_t result = qword_1E99F2440;
  if (!qword_1E99F2440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2440);
  }
  return result;
}

unint64_t sub_1ACB4F954()
{
  unint64_t result = qword_1E99F2448;
  if (!qword_1E99F2448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2448);
  }
  return result;
}

unint64_t sub_1ACB4F9AC()
{
  unint64_t result = qword_1E99F2450;
  if (!qword_1E99F2450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2450);
  }
  return result;
}

unint64_t sub_1ACB4FA04()
{
  unint64_t result = qword_1E99F2458;
  if (!qword_1E99F2458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2458);
  }
  return result;
}

unint64_t sub_1ACB4FA5C()
{
  unint64_t result = qword_1E99F2460;
  if (!qword_1E99F2460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2460);
  }
  return result;
}

unint64_t sub_1ACB4FAB4()
{
  unint64_t result = qword_1E99F2468;
  if (!qword_1E99F2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2468);
  }
  return result;
}

unint64_t sub_1ACB4FB0C()
{
  unint64_t result = qword_1E99F2470;
  if (!qword_1E99F2470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2470);
  }
  return result;
}

unint64_t sub_1ACB4FB64()
{
  unint64_t result = qword_1E99F2478;
  if (!qword_1E99F2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2478);
  }
  return result;
}

unint64_t sub_1ACB4FBBC()
{
  unint64_t result = qword_1E99F2480;
  if (!qword_1E99F2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2480);
  }
  return result;
}

unint64_t sub_1ACB4FC14()
{
  unint64_t result = qword_1E99F2488;
  if (!qword_1E99F2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2488);
  }
  return result;
}

unint64_t sub_1ACB4FC6C()
{
  unint64_t result = qword_1E99F2490;
  if (!qword_1E99F2490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2490);
  }
  return result;
}

unint64_t sub_1ACB4FCC4()
{
  unint64_t result = qword_1E99F2498;
  if (!qword_1E99F2498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2498);
  }
  return result;
}

unint64_t sub_1ACB4FD1C()
{
  unint64_t result = qword_1E99F24A0;
  if (!qword_1E99F24A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F24A0);
  }
  return result;
}

unint64_t sub_1ACB4FD74()
{
  unint64_t result = qword_1E99F24A8;
  if (!qword_1E99F24A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F24A8);
  }
  return result;
}

uint64_t type metadata accessor for InMemoryStateCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACB4FDE8()
{
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  sub_1ACA798F8();
  uint64_t v0 = sub_1ACE76028();
  sub_1ACE75118();
  swift_getTupleTypeMetadata2();
  sub_1ACE76688();
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  sub_1ACE76028();
  return v0;
}

uint64_t sub_1ACB4FECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v82 = a5;
  uint64_t v75 = (void (*)(uint64_t, char *, uint64_t))sub_1ACE76FD8();
  uint64_t v8 = MEMORY[0x1F4188790](v75);
  uint64_t v74 = (void (*)(char *, unint64_t, uint64_t))((char *)&v70 - v9);
  uint64_t v77 = *(void *)(a4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v71 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v73 = (char *)&v70 - v13;
  MEMORY[0x1F4188790](v12);
  long long v80 = (char *)&v70 - v14;
  uint64_t v15 = sub_1ACE75118();
  uint64_t v83 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_1ACE76FD8();
  uint64_t v72 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v70 - v19;
  uint64_t v21 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v18);
  uint64_t v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v76 = (char *)&v70 - v25;
  uint64_t v81 = a1;
  uint64_t v84 = a1;
  uint64_t v26 = sub_1ACE76688();
  unint64_t v78 = sub_1ACA798F8();
  MEMORY[0x1AD118260](&v85, &v84, a3, &type metadata for AdamID, v26);
  if (!v85) {
    goto LABEL_4;
  }
  swift_getWitnessTable();
  sub_1ACE76128();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v17);
LABEL_4:
    uint64_t v27 = v81;
    uint64_t v28 = v79;
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1ACE754C8();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76BD8();
    BOOL v32 = os_log_type_enabled(v30, v31);
    unint64_t v33 = v78;
    if (v32)
    {
      uint64_t v34 = swift_slowAlloc();
      long long v80 = (char *)swift_slowAlloc();
      uint64_t v84 = v27;
      unint64_t v85 = v80;
      *(_DWORD *)uint64_t v34 = 136315394;
      sub_1ACA55E4C();
      uint64_t v35 = sub_1ACE770B8();
      uint64_t v84 = sub_1ACA3189C(v35, v36, (uint64_t *)&v85);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v84 = v27;
      uint64_t v37 = v83;
      MEMORY[0x1AD118260](&v84, v28, &type metadata for AdamID, v83, v33);
      uint64_t v38 = sub_1ACE76228();
      uint64_t v84 = sub_1ACA3189C(v38, v39, (uint64_t *)&v85);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v30, v31, "[StateCache] state for %s (consolidated) -> %s", (uint8_t *)v34, 0x16u);
      uint64_t v40 = v80;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v40, -1, -1);
      MEMORY[0x1AD11B340](v34, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v37 = v83;
    }
    unint64_t v85 = (char *)v27;
    return MEMORY[0x1AD118260](&v85, v28, &type metadata for AdamID, v37, v33);
  }
  uint64_t v42 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v43 = v76;
  uint64_t v44 = &v76[v42];
  unint64_t v78 = (unint64_t)&v76[v42];
  uint64_t v79 = v21;
  uint64_t v45 = &v20[v42];
  uint64_t v46 = *(void *)(v15 - 8);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v76, v20, v15);
  uint64_t v47 = v77;
  unint64_t v49 = v77 + 32;
  uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v77 + 32);
  uint64_t v75 = v48;
  uint64_t v50 = v44;
  uint64_t v51 = v83;
  v48((uint64_t)v50, v45, v83);
  uint64_t v52 = &v24[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v24, v43, v15);
  uint64_t v74 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
  v74(v52, v78, v51);
  unint64_t v78 = v49;
  v48((uint64_t)v80, v52, v51);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v15);
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_1ACE754C8();
  __swift_project_value_buffer(v53, (uint64_t)qword_1E99F2BF8);
  uint64_t v55 = v73;
  uint64_t v54 = (void (*)(char *, char *, uint64_t))v74;
  uint64_t v56 = v80;
  v74(v73, (unint64_t)v80, v51);
  uint64_t v57 = sub_1ACE75498();
  os_log_type_t v58 = sub_1ACE76BD8();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v72 = TupleTypeMetadata2;
    uint64_t v61 = v60;
    *(_DWORD *)uint64_t v59 = 136315394;
    uint64_t v84 = v81;
    unint64_t v85 = (char *)v60;
    sub_1ACA55E4C();
    uint64_t v62 = sub_1ACE770B8();
    uint64_t v84 = sub_1ACA3189C(v62, v63, (uint64_t *)&v85);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2080;
    v54(v71, v55, v83);
    uint64_t v64 = sub_1ACE76228();
    uint64_t v84 = sub_1ACA3189C(v64, v65, (uint64_t *)&v85);
    sub_1ACE76FF8();
    uint64_t v66 = v83;
    swift_bridgeObjectRelease();
    uint64_t v67 = v77;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v66);
    _os_log_impl(&dword_1AC9D5000, v57, v58, "[StateCache] state for %s (in-flight) -> %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v61, -1, -1);
    uint64_t v68 = v59;
    uint64_t v56 = v80;
    MEMORY[0x1AD11B340](v68, -1, -1);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v72);
  }
  else
  {
    uint64_t v66 = v51;

    uint64_t v67 = v77;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v51);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v76, TupleTypeMetadata2);
  }
  uint64_t v69 = v82;
  v75(v82, v56, v66);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v69, 0, 1, v66);
}

uint64_t sub_1ACB50838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1ACE75118();
  uint64_t v11 = *(void *)(a4 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v16 = *(void *)(v5 + 8);
  uint64_t v15 = v5 + 8;
  v41[0] = a1;
  uint64_t v17 = sub_1ACE76688();
  unint64_t v40 = sub_1ACA798F8();
  MEMORY[0x1AD118260](v43, v41, v16, &type metadata for AdamID, v17);
  uint64_t v18 = v43[0];
  if (!v43[0]) {
    uint64_t v18 = sub_1ACE765F8();
  }
  uint64_t v44 = v18;
  uint64_t v19 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v14, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v19, a2, v11);
  sub_1ACE76648();
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E99F2BF8);
  uint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76BD8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v43[0] = v37;
    *(_DWORD *)uint64_t v23 = 136315650;
    v41[0] = a1;
    sub_1ACA55E4C();
    uint64_t v39 = v15;
    uint64_t v24 = a1;
    uint64_t v38 = v17;
    uint64_t v25 = sub_1ACE770B8();
    v41[0] = sub_1ACA3189C(v25, v26, v43);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v41[0] = a1;
    uint64_t v27 = sub_1ACE770B8();
    v41[0] = sub_1ACA3189C(v27, v28, v43);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    swift_beginAccess();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = MEMORY[0x1AD118740](v29, TupleTypeMetadata2);
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = v30;
    a1 = v24;
    uint64_t v42 = sub_1ACA3189C(v33, v32, v43);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v21, v22, "[StateCache] %s appended in-flight update for adamID %s, new queue: %s", (uint8_t *)v23, 0x20u);
    uint64_t v34 = v37;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v23, -1, -1);
  }

  swift_beginAccess();
  v41[3] = a1;
  uint64_t v42 = v44;
  sub_1ACE76088();
  return sub_1ACE760B8();
}

void TranscriptParser.parse(ttmlData:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TranscriptModelBuilder()), sel_init);
  id v7 = objc_allocWithZone((Class)PFTTMLParser);
  sub_1ACA3985C(a1, a2);
  uint64_t v8 = (char *)v6;
  uint64_t v9 = (void *)sub_1ACE74F68();
  id v10 = objc_msgSend(v7, sel_initWithData_delegate_, v9, v8);

  sub_1ACA50850(a1, a2);
  id v27 = v10;
  objc_msgSend(v10, sel_parse);
  uint64_t v11 = *(os_unfair_lock_s **)&v8[OBJC_IVAR____TtC18PodcastsFoundation22TranscriptModelBuilder_lockedPhase];
  uint64_t v12 = (uint64_t)&v11[4];
  uint64_t v13 = v11 + 14;
  os_unfair_lock_lock(v11 + 14);
  sub_1ACB50E7C(v12, v23);
  if (v3)
  {
    os_unfair_lock_unlock(v13);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v13);
    uint64_t v14 = (void *)v23[0];
    uint64_t v15 = v23[1];
    unint64_t v17 = v24;
    uint64_t v16 = v25;
    uint64_t v18 = v26;
    if (v24 >> 62)
    {
      if (v24 >> 62 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();

        sub_1ACB50EC0(v14, v15, v17);
        *(void *)a3 = v14;
        *(void *)(a3 + 8) = v15;
        *(unsigned char *)(a3 + 16) = v17 & 1;
        *(void *)(a3 + 24) = a1;
        *(void *)(a3 + 32) = a2;
        *(void *)(a3 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v16;
        *(void *)(a3 + 48) = v18;
        sub_1ACA3985C(a1, a2);
        return;
      }
      sub_1ACB50F20();
      swift_allocError();
      *uint64_t v21 = 0;
    }
    else
    {
      sub_1ACB50F20();
      swift_allocError();
      void *v19 = v14;
      id v20 = v14;
    }
    swift_willThrow();
    sub_1ACB50EC0(v14, v15, v17);
  }
}

id sub_1ACB50E7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *a2 = *(void *)a1;
  a2[1] = v2;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v6;
  return sub_1ACB51110(v3, v2, v4);
}

void sub_1ACB50EC0(void *a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!(a3 >> 62))
  {
  }
}

unint64_t sub_1ACB50F20()
{
  unint64_t result = qword_1E99F2578;
  if (!qword_1E99F2578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2578);
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptParser()
{
  return &type metadata for TranscriptParser;
}

void *initializeBufferWithCopyOfBuffer for TTMLParserError(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for TTMLParserError(id *a1)
{
}

void **assignWithCopy for TTMLParserError(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for TTMLParserError(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTMLParserError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTMLParserError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTMLParserError()
{
  return &type metadata for TTMLParserError;
}

uint64_t sub_1ACB510E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACB4376C(a1, a2);
}

id sub_1ACB51110(id result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 1)
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  else if (!(a3 >> 62))
  {
    return result;
  }
  return result;
}

id DownloadStateReportCollector.__allocating_init(managedObjectContext:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  id v10 = &v9[OBJC_IVAR___PFDownloadsStateReportCollector_checker];
  *(void *)id v10 = a1;
  *((void *)v10 + 1) = a2;
  *((void *)v10 + 2) = a3;
  unsigned char v10[24] = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id DownloadStateReportCollector.init(managedObjectContext:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = &v4[OBJC_IVAR___PFDownloadsStateReportCollector_checker];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  *((void *)v5 + 2) = a3;
  v5[24] = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for DownloadStateReportCollector();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for DownloadStateReportCollector()
{
  return self;
}

uint64_t sub_1ACB512FC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)&v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker];
  uint64_t v5 = *(void *)&v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker + 8];
  uint64_t v7 = *(void *)&v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker + 16];
  char v8 = v2[OBJC_IVAR___PFDownloadsStateReportCollector_checker + 24];
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  void v9[3] = a2;
  v9[4] = v2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v7;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v10 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = v8;
  *(void *)(v10 + 48) = v11;
  *(void *)(v10 + 56) = sub_1ACB518D8;
  *(void *)(v10 + 64) = v9;
  v17[4] = sub_1ACB51AEC;
  v17[5] = v10;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  void v17[2] = sub_1ACA6DA9C;
  v17[3] = &block_descriptor_25;
  objc_super v12 = _Block_copy(v17);
  id v13 = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v14 = v13;
  swift_retain();
  uint64_t v15 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v12);
  _Block_release(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1ACB5149C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t))
{
  uint64_t v6 = sub_1ACE748E8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F5320);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v10 = type metadata accessor for DownloadStateReport();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  sub_1ACB51BF4(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1ACB51C5C((uint64_t)v9);
    if (a2)
    {
      swift_getErrorValue();
      sub_1ACE77A98();
    }
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    strcpy((char *)v22, "{ 'error': '");
    BYTE5(v22[1]) = 0;
    HIWORD(v22[1]) = -5120;
    sub_1ACE762C8();
    sub_1ACE762C8();
    sub_1ACE74928();
    swift_allocObject();
    sub_1ACE74918();
    sub_1ACE748D8();
    sub_1ACE748F8();
    uint64_t v18 = sub_1ACE74908();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    a3(v18, v20);
    return sub_1ACA50850(v18, v20);
  }
  else
  {
    sub_1ACB51CBC((uint64_t)v9, (uint64_t)v13);
    sub_1ACE74928();
    swift_allocObject();
    sub_1ACE74918();
    sub_1ACE748D8();
    sub_1ACE748F8();
    sub_1ACB51D20();
    uint64_t v14 = sub_1ACE74908();
    unint64_t v16 = v15;
    swift_release();
    a3(v14, v16);
    sub_1ACA50850(v14, v16);
    return sub_1ACB51D78((uint64_t)v13);
  }
}

uint64_t sub_1ACB51898()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACB518D8(uint64_t a1, uint64_t a2)
{
  return sub_1ACB5149C(a1, a2, *(void (**)(uint64_t, unint64_t))(v2 + 16));
}

id DownloadStateReportCollector.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DownloadStateReportCollector.init()()
{
}

id DownloadStateReportCollector.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadStateReportCollector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACB51A94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACB51AEC()
{
  return sub_1ACD2A7C4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(void *)(v0 + 48), *(void (**)(char *, void))(v0 + 56), *(void *)(v0 + 64));
}

uint64_t method lookup function for DownloadStateReportCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DownloadStateReportCollector);
}

uint64_t dispatch thunk of DownloadStateReportCollector.__allocating_init(managedObjectContext:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DownloadStateReportCollector.generateReport(completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t sub_1ACB51B64()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACB51B9C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1ACE74F68();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_1ACB51BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F5320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACB51C5C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F5320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACB51CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DownloadStateReport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACB51D20()
{
  unint64_t result = qword_1E99F2588;
  if (!qword_1E99F2588)
  {
    type metadata accessor for DownloadStateReport();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2588);
  }
  return result;
}

uint64_t sub_1ACB51D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadStateReport();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ScheduleFrequency.interval.getter(uint64_t a1)
{
  uint64_t v2 = sub_1ACE751E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE750A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  os_log_type_t v22 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v23 = sub_1ACE75208();
  uint64_t v15 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  unint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE751A8();
  if (a1)
  {
    uint64_t v24 = a1;
    uint64_t result = sub_1ACE77A18();
    __break(1u);
  }
  else
  {
    sub_1ACE75098();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F27BC0], v2);
    sub_1ACE751C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v23);
      return sub_1ACA3E034((uint64_t)v8);
    }
    else
    {
      unint64_t v19 = v22;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v22, v8, v9);
      sub_1ACE75058();
      sub_1ACE75058();
      unint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
      v20(v19, v9);
      v20(v14, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v23);
    }
  }
  return result;
}

uint64_t ScheduleFrequency.init(rawValue:)()
{
  return 0;
}

unint64_t sub_1ACB52198()
{
  unint64_t result = qword_1E99F2590;
  if (!qword_1E99F2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F2590);
  }
  return result;
}

void *sub_1ACB521EC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduleFrequency()
{
  return &type metadata for ScheduleFrequency;
}

id sub_1ACB52214()
{
  id result = sub_1ACB52234();
  qword_1EB76C918 = (uint64_t)result;
  return result;
}

id sub_1ACB52234()
{
  uint64_t v0 = sub_1ACE75208();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v26 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ACE8F1F0;
  sub_1ACE751D8();
  uint64_t v8 = sub_1ACE75168();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v9(v4, v6, v0);
  uint64_t v10 = (objc_class *)type metadata accessor for DayOfWeekSchedule();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR___PFDayOfWeekSchedule_dayOfWeek] = v8;
  v9(&v11[OBJC_IVAR___PFDayOfWeekSchedule_calendar], v4, v0);
  v30.receiver = v11;
  v30.super_class = v10;
  id v12 = objc_msgSendSuper2(&v30, sel_init);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v13(v6, v0);
  *(void *)(v7 + 32) = v12;
  id v14 = objc_allocWithZone((Class)type metadata accessor for MaximumFrequencySchedule());
  ScheduleFrequency.interval.getter(0);
  *(void *)(v7 + 4sub_1ACCE3320(0, (uint64_t)sub_1ACCA8A08, 0) = objc_msgSend(v14, sel_initWithInterval_);
  uint64_t v29 = v7;
  sub_1ACE76598();
  uint64_t v15 = v29;
  uint64_t v16 = (objc_class *)type metadata accessor for CompoundSchedule();
  unint64_t v17 = (char *)objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR___PFCompoundSchedule_type] = 0;
  *(void *)&v17[OBJC_IVAR___PFCompoundSchedule_children] = v15;
  v28.receiver = v17;
  v28.super_class = v16;
  id v18 = objc_msgSendSuper2(&v28, sel_init);
  unint64_t v19 = self;
  id v20 = v18;
  id v21 = objc_msgSend(v19, sel_standardUserDefaults);
  os_log_type_t v22 = (objc_class *)type metadata accessor for ScheduledOperationScheduler();
  uint64_t v23 = (char *)objc_allocWithZone(v22);
  *(void *)&v23[OBJC_IVAR___PFScheduledOperationScheduler_schedule] = v20;
  *(void *)&v23[OBJC_IVAR___PFScheduledOperationScheduler_storage] = v21;
  v27.receiver = v23;
  v27.super_class = v22;
  id v24 = objc_msgSendSuper2(&v27, sel_init);

  return v24;
}

uint64_t ScheduledOperationScheduler.__allocating_init(schedule:scheduleStorage:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACB525F4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ACB52CB8);
}

id static ScheduledOperationScheduler.weekly.getter()
{
  if (qword_1EB769550 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB76C918;
  return v0;
}

uint64_t ScheduledOperationScheduler.schedule.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ScheduledOperationScheduler.storage.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ScheduledOperationScheduler.init(schedule:scheduleStorage:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACB525F4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ACB52D24);
}

uint64_t sub_1ACB525F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = swift_getObjectType();
  return a3(a1, a2, v3, ObjectType, v7);
}

uint64_t sub_1ACB526EC(uint64_t a1, uint64_t a2, void (*a3)(void), void *a4)
{
  v31[1] = a4;
  unint64_t v32 = a3;
  uint64_t v7 = sub_1ACE750A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  id v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)v31 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v34 = a2;
  uint64_t v35 = (uint64_t)v31 - v18;
  unint64_t v19 = *(void **)(v4 + OBJC_IVAR___PFScheduledOperationScheduler_storage);
  uint64_t v33 = a1;
  id v20 = (void *)sub_1ACE76178();
  v31[0] = v19;
  id v21 = objc_msgSend(v19, sel_lastExecutionOf_, v20);

  if (v21)
  {
    sub_1ACE75078();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, 1, 1, v7);
  }
  uint64_t v22 = v35;
  sub_1ACA909B4((uint64_t)v17, v35);
  uint64_t v23 = *(void **)(v4 + OBJC_IVAR___PFScheduledOperationScheduler_schedule);
  sub_1ACE75088();
  id v24 = (void *)sub_1ACE75008();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v10, v7);
  sub_1ACA72A5C(v22, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = (void *)sub_1ACE75008();
    v25(v14, v7);
  }
  unsigned int v27 = objc_msgSend(v23, sel_shouldExecuteOn_previousExecution_, v24, v26);

  if (v27)
  {
    v32();
    objc_super v28 = (void *)sub_1ACE76178();
    sub_1ACE75088();
    uint64_t v29 = (void *)sub_1ACE75008();
    v25(v10, v7);
    objc_msgSend(v31[0], sel_recordExecutionOf_at_, v28, v29);
  }
  return sub_1ACA3E034(v35);
}

void ScheduledOperationScheduler.init()()
{
}

id ScheduledOperationScheduler.__deallocating_deinit()
{
  return sub_1ACB52C7C(type metadata accessor for ScheduledOperationScheduler);
}

unint64_t static ScheduledOperationConstants.reportStorageAnalyticsOperation.getter()
{
  return 0xD000000000000012;
}

id ScheduledOperationConstants.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ScheduledOperationConstants.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledOperationConstants();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ScheduledOperationConstants.__deallocating_deinit()
{
  return sub_1ACB52C7C(type metadata accessor for ScheduledOperationConstants);
}

id sub_1ACB52C7C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1ACB52CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (objc_class *)type metadata accessor for ScheduledOperationScheduler();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR___PFScheduledOperationScheduler_schedule] = a1;
  *(void *)&v5[OBJC_IVAR___PFScheduledOperationScheduler_storage] = a2;
  v7.receiver = v5;
  v7.super_class = v4;
  return objc_msgSendSuper2(&v7, sel_init);
}