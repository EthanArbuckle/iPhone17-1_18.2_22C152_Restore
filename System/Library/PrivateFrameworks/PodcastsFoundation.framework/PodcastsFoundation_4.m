uint64_t sub_1ACC84AE0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if (a3)
  {
    v6 = *((void *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        v7 = a2;
      }
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    v9 = *((void *)a4 + 2);
  }
  else {
    v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7694A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32) {
      v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E4FBC860];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84C40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D70);
    v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E4FBC860];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84DAC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACC866A0(a1, a2, a3, a4, &qword_1E99F4680, &qword_1E99F4688);
}

uint64_t sub_1ACC84DC0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACC866A0(a1, a2, a3, a4, &qword_1E99F46A8, &qword_1E99F46B0);
}

uint64_t sub_1ACC84DD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769178);
    v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC84F24(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC850B4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4748);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0E20);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC8525C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4720);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4728);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85404(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85594(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85700(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85880(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4708);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772970);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85A0C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    size_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  size_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85C4C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4700);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB7725E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85DD8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC85F80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4740);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC86108(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F46E8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC8628C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC864D4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = a4[3];
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = a4[2];
  if (v8 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (void *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v11 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v11 < a4 || v13 >= v14 + 24 * v9)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 24 * v9 || v13 >= v14 + 24 * v9)
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC86678(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACC866A0(a1, a2, a3, a4, &qword_1E99F46B8, &qword_1E99F46C0);
}

uint64_t sub_1ACC8668C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1ACC866A0(a1, a2, a3, a4, &qword_1E99F46C8, &qword_1E99F46D0);
}

uint64_t sub_1ACC866A0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11) {
      memmove(v13 + 4, a4 + 4, 24 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC8684C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4690);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC869A8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4698);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F46A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACC86B50(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACC86BB0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771C88);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC86C2C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F4600);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC86C9C(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return result;
  }
  uint64_t v6 = result + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1ACC87888(v6, (uint64_t)v29);
    long long v26 = v29[0];
    long long v27 = v29[1];
    uint64_t v28 = v30;
    sub_1ACA3AA44(&v31, v25);
    uint64_t v8 = *a3;
    unint64_t v10 = sub_1ACA65B48((uint64_t)&v26);
    uint64_t v11 = *(void *)(v8 + 16);
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (*(void *)(v8 + 24) >= v13)
    {
      if (a2)
      {
        if (v9) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1ACD06120();
        if (v14) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1ACCFCC2C(v13, a2 & 1);
      unint64_t v15 = sub_1ACA65B48((uint64_t)&v26);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_20;
      }
      unint64_t v10 = v15;
      if (v14)
      {
LABEL_3:
        sub_1ACA33128(*(void *)(*a3 + 56) + 32 * v10, (uint64_t)v24);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
        sub_1ACA6A0F8((uint64_t)&v26);
        int64_t v7 = (_OWORD *)(*(void *)(*a3 + 56) + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
        sub_1ACA3AA44(v24, v7);
        goto LABEL_4;
      }
    }
    size_t v17 = (void *)*a3;
    *(void *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    uint64_t v18 = v17[6] + 40 * v10;
    long long v19 = v26;
    long long v20 = v27;
    *(void *)(v18 + 32) = v28;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_1ACA3AA44(v25, (_OWORD *)(v17[7] + 32 * v10));
    uint64_t v21 = v17[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_19;
    }
    v17[2] = v23;
LABEL_4:
    v6 += 72;
    a2 = 1;
    if (!--v3) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACC86E90()
{
  return MEMORY[0x1E4FBB3C0];
}

uint64_t sub_1ACC86E9C()
{
  return MEMORY[0x1E4FBB5C0];
}

uint64_t sub_1ACC86EA8()
{
  return MEMORY[0x1E4FBB450];
}

unint64_t sub_1ACC86EB8()
{
  unint64_t result = qword_1E99F4620;
  if (!qword_1E99F4620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4620);
  }
  return result;
}

uint64_t sub_1ACC86F0C()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_1ACC86F1C()
{
  unint64_t result = qword_1E99F4628;
  if (!qword_1E99F4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4628);
  }
  return result;
}

uint64_t sub_1ACC86F70()
{
  return MEMORY[0x1E4FBBED8];
}

unint64_t sub_1ACC86F80()
{
  unint64_t result = qword_1E99F4630;
  if (!qword_1E99F4630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4630);
  }
  return result;
}

uint64_t sub_1ACC86FD4()
{
  return MEMORY[0x1E4FBB230];
}

uint64_t sub_1ACC86FE0()
{
  return MEMORY[0x1E4FBB228];
}

uint64_t destroy for AnyCodable(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 32);
  if (v1 >= 0x11) {
    unsigned int v1 = *(_DWORD *)result + 17;
  }
  if (v1 - 2 >= 0xC)
  {
    switch(v1)
    {
      case 1u:
      case 0xEu:
      case 0xFu:
        unint64_t result = swift_bridgeObjectRelease();
        break;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
        __break(1u);
        JUMPOUT(0x1ACC87078);
      case 0x10u:
        unint64_t result = __swift_destroy_boxed_opaque_existential_0(result);
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 >= 0x11) {
    unsigned int v3 = *(_DWORD *)a2 + 17;
  }
  switch(v3)
  {
    case 1u:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      char v5 = 1;
      goto LABEL_20;
    case 2u:
      *(void *)a1 = *(void *)a2;
      char v6 = 2;
      goto LABEL_22;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v6 = 3;
      goto LABEL_22;
    case 4u:
      *(_WORD *)a1 = *(_WORD *)a2;
      char v6 = 4;
      goto LABEL_22;
    case 5u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v6 = 5;
      goto LABEL_22;
    case 6u:
      *(void *)a1 = *(void *)a2;
      char v6 = 6;
      goto LABEL_22;
    case 7u:
      *(void *)a1 = *(void *)a2;
      char v6 = 7;
      goto LABEL_22;
    case 8u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v6 = 8;
      goto LABEL_22;
    case 9u:
      *(_WORD *)a1 = *(_WORD *)a2;
      char v6 = 9;
      goto LABEL_22;
    case 0xAu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v6 = 10;
      goto LABEL_22;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      char v6 = 11;
      goto LABEL_22;
    case 0xCu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      char v6 = 12;
      goto LABEL_22;
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      char v6 = 13;
      goto LABEL_22;
    case 0xEu:
      *(void *)a1 = *(void *)a2;
      char v5 = 14;
      goto LABEL_20;
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      char v5 = 15;
LABEL_20:
      *(unsigned char *)(a1 + 32) = v5;
      swift_bridgeObjectRetain();
      break;
    case 0x10u:
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v7;
      (**(void (***)(uint64_t))(v7 - 8))(a1);
      char v6 = 16;
LABEL_22:
      *(unsigned char *)(a1 + 32) = v6;
      break;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 32) = 0;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 0x11) {
      unsigned int v4 = *(_DWORD *)a1 + 17;
    }
    if (v4 - 2 >= 0xC)
    {
      switch(v4)
      {
        case 1u:
        case 0xEu:
        case 0xFu:
          swift_bridgeObjectRelease();
          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
          __break(1u);
          JUMPOUT(0x1ACC874C0);
        case 0x10u:
          __swift_destroy_boxed_opaque_existential_0(a1);
          break;
        default:
          break;
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 0x11) {
      unsigned int v5 = *(_DWORD *)a2 + 17;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v8 = 1;
        goto LABEL_20;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v7 = 2;
        goto LABEL_27;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v7 = 3;
        goto LABEL_27;
      case 4u:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v7 = 4;
        goto LABEL_27;
      case 5u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v7 = 5;
        goto LABEL_27;
      case 6u:
        *(void *)a1 = *(void *)a2;
        char v7 = 6;
        goto LABEL_27;
      case 7u:
        *(void *)a1 = *(void *)a2;
        char v7 = 7;
        goto LABEL_27;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v7 = 8;
        goto LABEL_27;
      case 9u:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v7 = 9;
        goto LABEL_27;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v7 = 10;
        goto LABEL_27;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        char v7 = 11;
        goto LABEL_27;
      case 0xCu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v7 = 12;
        goto LABEL_27;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        char v7 = 13;
        goto LABEL_27;
      case 0xEu:
        *(void *)a1 = *(void *)a2;
        char v8 = 14;
        goto LABEL_20;
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        char v8 = 15;
LABEL_20:
        *(unsigned char *)(a1 + 32) = v8;
        swift_bridgeObjectRetain();
        break;
      case 0x10u:
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v6;
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
        char v7 = 16;
LABEL_27:
        *(unsigned char *)(a1 + 32) = v7;
        break;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 32) = 0;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for AnyCodable(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 0x11) {
      unsigned int v4 = *(_DWORD *)a1 + 17;
    }
    if (v4 - 2 >= 0xC)
    {
      switch(v4)
      {
        case 1u:
        case 0xEu:
        case 0xFu:
          swift_bridgeObjectRelease();
          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
          __break(1u);
          JUMPOUT(0x1ACC87728);
        case 0x10u:
          __swift_destroy_boxed_opaque_existential_0(a1);
          break;
        default:
          break;
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 0x11) {
      unsigned int v5 = *(_DWORD *)a2 + 17;
    }
    switch(v5)
    {
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 3;
        break;
      case 4u:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v6 = 4;
        break;
      case 5u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 5;
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        char v6 = 6;
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        char v6 = 7;
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 8;
        break;
      case 9u:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v6 = 9;
        break;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 10;
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        char v6 = 11;
        break;
      case 0xCu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 12;
        break;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        char v6 = 13;
        break;
      case 0xEu:
        *(void *)a1 = *(void *)a2;
        char v6 = 14;
        break;
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        char v6 = 15;
        break;
      case 0x10u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        char v6 = 16;
        break;
      default:
        char v6 = 0;
        *(unsigned char *)a1 = *(unsigned char *)a2;
        break;
    }
    *(unsigned char *)(a1 + 32) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF0 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 240);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 0x11) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEF)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 240;
    if (a3 >= 0xF0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF0) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACC87838(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 0x11) {
    return (*(_DWORD *)a1 + 17);
  }
  return result;
}

uint64_t sub_1ACC87854(uint64_t result, unsigned int a2)
{
  if (a2 > 0x10)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 17;
    LOBYTE(a2) = 17;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable()
{
  return &type metadata for AnyCodable;
}

uint64_t sub_1ACC87888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC878FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3 = v2;
  unint64_t v5 = sub_1ACA65E48(a1);
  if (v6)
  {
    unint64_t v7 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    uint64_t v19 = *v3;
    *unsigned int v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACD08F7C();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_1ACE74898();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v7, v11);
    sub_1ACB1D418(v7, v9);
    *unsigned int v3 = v9;
    swift_bridgeObjectRelease();
    BOOL v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_1ACE74898();
    BOOL v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

id AssetBackgroundDelegate.__allocating_init(recordCache:resume:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_1ACC8E930(a1, a2, a3);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t AssetBackgroundDelegate.start(request:using:)(uint64_t a1, void *a2)
{
  v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4770);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4778);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F4780);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  size_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1ACE759C8();
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_1EB771BC0;
  id v37 = (id)qword_1EB771BC0;
  uint64_t v19 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_1ACA51E1C();
  sub_1ACA51EA4((unint64_t *)&unk_1E99F4790, &qword_1E99F4770);
  sub_1ACC8FB50((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  id v20 = v18;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v21 = swift_allocObject();
  uint64_t v23 = v35;
  BOOL v22 = v36;
  *(void *)(v21 + 16) = v35;
  *(void *)(v21 + 24) = v22;
  sub_1ACA51EA4(&qword_1E99F47A0, &qword_1E99F4778);
  id v24 = v23;
  id v25 = v22;
  uint64_t v26 = v34;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v26);
  sub_1ACA51EA4(&qword_1E99F47A8, (uint64_t *)&unk_1E99F4780);
  uint64_t v27 = v33;
  uint64_t v28 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v27);
  return v28;
}

uint64_t AssetBackgroundDelegate.activeNotifier(for:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(*MEMORY[0x1E4FBC8C8] & *v1);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771DC0);
  uint64_t v54 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D88);
  uint64_t v63 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  v56 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)v4[10];
  uint64_t v13 = v4[12];
  uint64_t v14 = v4[13];
  uint64_t v15 = v4[14];
  uint64_t v16 = v4[15];
  uint64_t v61 = v4[11];
  v62 = v12;
  id v65 = v12;
  uint64_t v66 = v61;
  uint64_t v59 = v14;
  uint64_t v60 = v13;
  uint64_t v67 = v13;
  uint64_t v68 = v14;
  uint64_t v57 = v15;
  uint64_t v69 = v15;
  uint64_t v70 = v16;
  uint64_t v55 = v16;
  uint64_t v17 = type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  uint64_t v18 = sub_1ACA51EA4(&qword_1EB771D80, &qword_1EB771D88);
  uint64_t v64 = v10;
  uint64_t v49 = v17;
  uint64_t v47 = v18;
  uint64_t v19 = (void *)sub_1ACE75598();
  uint64_t v53 = *(v19 - 1);
  MEMORY[0x1F4188790](v19);
  v51 = (char *)v45 - v20;
  uint64_t v21 = (void *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771D98);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t WitnessTable = swift_getWitnessTable();
  v52 = v19;
  id v65 = v19;
  uint64_t v66 = v22;
  uint64_t v48 = WitnessTable;
  uint64_t v67 = WitnessTable;
  uint64_t v68 = MEMORY[0x1E4FBC0F0];
  uint64_t v24 = sub_1ACE75608();
  uint64_t v25 = sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  uint64_t v26 = swift_getWitnessTable();
  v50 = v21;
  id v65 = v21;
  uint64_t v66 = v24;
  v45[1] = v25;
  uint64_t v67 = v25;
  uint64_t v68 = v26;
  uint64_t v27 = sub_1ACE75708();
  uint64_t v46 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  v29 = (char *)v45 - v28;
  id v65 = a1;
  sub_1ACE759C8();
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v30 = (void *)qword_1EB771BC0;
  id v65 = (id)qword_1EB771BC0;
  uint64_t v31 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v7, 1, 1, v31);
  sub_1ACA51E1C();
  sub_1ACA51EA4((unint64_t *)&unk_1EB771DB0, &qword_1EB771DC0);
  sub_1ACC8FB50((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  id v32 = v30;
  uint64_t v33 = v56;
  uint64_t v34 = v58;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v7, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v34);
  *(void *)(swift_allocObject() + 16) = v2;
  id v35 = v2;
  v36 = v51;
  uint64_t v37 = v64;
  sub_1ACE75AE8();
  swift_release();
  uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v33, v37);
  MEMORY[0x1F4188790](v38);
  uint64_t v39 = v61;
  v45[-6] = v62;
  v45[-5] = v39;
  uint64_t v40 = v59;
  v45[-4] = v60;
  v45[-3] = v40;
  uint64_t v41 = v55;
  v45[-2] = v57;
  v45[-1] = v41;
  swift_getKeyPath();
  sub_1ACE757D8();
  v42 = v52;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, void *))(v53 + 8))(v36, v42);
  swift_getWitnessTable();
  uint64_t v43 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v27);
  return v43;
}

id sub_1ACC88734()
{
  if (qword_1EB76E130 != -1) {
    swift_once();
  }
  v0 = (void *)qword_1EB76E120;
  qword_1EB771BC0 = qword_1EB76E120;
  return v0;
}

uint64_t AssetBackgroundDelegate.resume.getter()
{
  uint64_t v1 = *(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80));
  swift_retain();
  return v1;
}

uint64_t sub_1ACC887F0@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0x88));
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1ACADC690;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1ACA6DEC8(v4);
}

uint64_t sub_1ACC888AC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1ACC8FF50;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a2) + 0x88));
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1ACA6DEC8(v3);
  return sub_1ACA76F34(v8);
}

uint64_t AssetBackgroundDelegate.backgroundCompletion.getter()
{
  uint64_t v1 = (void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88));
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1ACA6DEC8(*v1);
  return v2;
}

id AssetBackgroundDelegate.init(recordCache:resume:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v3;
  id v6 = sub_1ACC8E68C(a1, a2, a3);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a1);
  return v6;
}

uint64_t sub_1ACC88AA4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x98));
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v7 = v2;
  uint64_t v5 = type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  MEMORY[0x1AD118260](&v7, v4, MEMORY[0x1E4FBB550], v5, MEMORY[0x1E4FBB560]);
  return swift_endAccess();
}

uint64_t sub_1ACC88B90()
{
  return swift_release();
}

void sub_1ACC88BFC(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v67 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = sub_1ACE753F8();
  uint64_t v66 = *(void *)(v69 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v69);
  id v65 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = &v52[-v12];
  uint64_t v13 = sub_1ACE74898();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v52[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = &v52[-v18];
  uint64_t v20 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0xA0));
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(*v20 + 16) && (unint64_t v22 = sub_1ACA66034(a1), (v23 & 1) != 0))
  {
    id v24 = *(id *)(*(void *)(v21 + 56) + 8 * v22);
    swift_endAccess();
  }
  else
  {
    id v62 = a3;
    swift_endAccess();
    if (qword_1EB771BE8 != -1) {
      swift_once();
    }
    uint64_t v61 = v17;
    uint64_t v64 = v9;
    uint64_t v25 = sub_1ACE75438();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB771BD0);
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v63 = a1;
    uint64_t v60 = v26;
    v26(v19, a1, v13);
    uint64_t v27 = v68;
    sub_1ACE753E8();
    uint64_t v28 = sub_1ACE75428();
    int v29 = sub_1ACE76E28();
    char v30 = sub_1ACE76FA8();
    uint64_t v59 = v14;
    if (v30)
    {
      uint64_t v55 = v14 + 16;
      uint64_t v31 = v66;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 16))(v65, v27, v69);
      uint64_t v32 = swift_slowAlloc();
      v56 = a2;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v54 = swift_slowAlloc();
      v71[0] = v54;
      int v53 = v29;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v34 = sub_1ACE74808();
      uint64_t v70 = sub_1ACA3189C(v34, v35, v71);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      v36 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      uint64_t v57 = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v58 = v36;
      v36((uint64_t)v19, v13);
      uint64_t v37 = v65;
      os_signpost_id_t v38 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v28, (os_signpost_type_t)v53, v38, "Start Asset Download", "%s", v33, 0xCu);
      uint64_t v39 = v54;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v39, -1, -1);
      MEMORY[0x1AD11B340](v33, -1, -1);

      uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
      uint64_t v41 = v69;
      v40(v68, v69);
      v40(v37, v41);
    }
    else
    {

      v42 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      uint64_t v57 = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v58 = v42;
      v42((uint64_t)v19, v13);
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v27, v69);
    }
    uint64_t v43 = v63;
    v44 = (void *)sub_1ACE74818();
    id v45 = objc_msgSend(v62, sel_downloadTaskWithRequest_, v44);

    uint64_t v47 = v60;
    uint64_t v46 = (uint64_t)v61;
    v60(v61, v43, v13);
    id v48 = objc_msgSend(v45, sel_taskIdentifier);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = *v20;
    *uint64_t v20 = 0x8000000000000000;
    sub_1ACD0EAA4((uint64_t)v48, v46, isUniquelyReferenced_nonNull_native);
    *uint64_t v20 = v70;
    swift_bridgeObjectRelease();
    v58(v46, v13);
    swift_endAccess();
    id v50 = objc_msgSend(v45, sel_taskIdentifier);
    uint64_t v51 = (uint64_t)v64;
    v47(v64, v43, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v51, 0, 1, v13);
    swift_beginAccess();
    sub_1ACC51440(v51, (uint64_t)v50);
    swift_endAccess();
    objc_msgSend(v45, sel_resume);
    id v24 = objc_msgSend(v45, sel_taskIdentifier);
  }
  *uint64_t v67 = v24;
}

uint64_t AssetBackgroundDelegate.set(backgroundCompletion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  v17[0] = qword_1EB771BC0;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1ACC8EA64;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_51;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v2;
  swift_retain();
  sub_1ACE75E08();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1ACC89548(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)((char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x88));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a2;
  v5[1] = a3;
  sub_1ACA76F34(v6);
  return swift_retain();
}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:didCreateTask:)(NSURLSession _, NSURLSessionTask didCreateTask)
{
}

uint64_t sub_1ACC895D4(void *a1, id a2)
{
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = (void *)(*MEMORY[0x1E4FBC8C8] & *a1);
  id v6 = objc_msgSend(a2, sel_taskIdentifier);
  uint64_t v7 = (void *)((char *)a1 + *(void *)((*v4 & *a1) + 0x98));
  swift_beginAccess();
  uint64_t v8 = *v7;
  id v25 = v6;
  uint64_t v9 = v5[11];
  uint64_t v10 = v5[12];
  uint64_t v11 = v5[13];
  uint64_t v12 = v5[14];
  uint64_t v13 = v5[15];
  id v19 = (id)v5[10];
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  uint64_t v23 = v12;
  uint64_t v24 = v13;
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  MEMORY[0x1AD118260](v26, &v25, v8, MEMORY[0x1E4FBB550]);
  if (v26[0])
  {
    swift_endAccess();
    uint64_t v14 = swift_retain();
    sub_1ACC90028(v14);
    uint64_t v20 = v9;
    uint64_t v21 = v10;
    uint64_t v22 = v11;
    uint64_t v23 = v12;
    uint64_t v24 = v13;
    type metadata accessor for AssetBackgroundDelegate.BackgroundDownloadError();
    swift_getWitnessTable();
    id v19 = (id)swift_allocError();
    sub_1ACE75888();
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  sub_1ACC8987C((uint64_t)objc_msgSend(a2, sel_taskIdentifier));
  id v15 = objc_msgSend(a2, sel_taskIdentifier);
  id v16 = objc_msgSend(a2, sel_taskIdentifier);
  sub_1ACC89B50((uint64_t *)&v19);
  v26[2] = sub_1ACC89D68((uint64_t)v16, (uint64_t)&v19);
  v26[3] = v17;
  v26[0] = v15;
  swift_beginAccess();
  sub_1ACE76088();
  sub_1ACE760B8();
  return swift_endAccess();
}

uint64_t sub_1ACC8987C(uint64_t a1)
{
  uint64_t v3 = (_OWORD *)(*MEMORY[0x1E4FBC8C8] & *v1);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE74898();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  swift_beginAccess();
  long long v11 = v3[6];
  v13[0] = v3[5];
  v13[1] = v11;
  v13[2] = v3[7];
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  sub_1ACE76088();
  sub_1ACE76018();
  swift_endAccess();
  sub_1ACC90028(*(uint64_t *)&v13[0]);
  swift_beginAccess();
  sub_1ACC878FC(a1, (uint64_t)v6);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1ACA50E78((uint64_t)v6, &qword_1EB771B08);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  swift_beginAccess();
  sub_1ACA697D4((uint64_t)v10);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ACC89B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB772EF0 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB772ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  char v11 = sub_1ACE76BC8();
  sub_1ACE75108();
  uint64_t v12 = sub_1ACE750C8();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = type metadata accessor for LoggerTrace(0);
  a1[3] = v15;
  a1[4] = (uint64_t)&protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  uint64_t *boxed_opaque_existential_1 = v12;
  boxed_opaque_existential_1[1] = v14;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))((char *)boxed_opaque_existential_1 + *(int *)(v15 + 20), v9, v6);
  *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v15 + 24)) = v11;
  return result;
}

uint64_t sub_1ACC89D68(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB771DA0);
  swift_allocObject();
  uint64_t v3 = sub_1ACE758B8();
  sub_1ACA3E158(a2, (uint64_t)v11);
  *(void *)&v12[0] = 0x203A4B534154;
  *((void *)&v12[0] + 1) = 0xE600000000000000;
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  long long v4 = v12[0];
  sub_1ACAAAFAC((uint64_t)v11, (uint64_t)v10);
  *(void *)&v7[0] = v3;
  sub_1ACAAAFAC((uint64_t)v10, (uint64_t)v7 + 8);
  *(void *)&long long v8 = "NETWORK: Download";
  *((void *)&v8 + 1) = 17;
  v9[0] = 2;
  v9[24] = 1;
  v12[0] = v4;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  long long v5 = v12[0];
  sub_1ACA50E78((uint64_t)v10, &qword_1EB772EA0);
  swift_release();
  *(_OWORD *)&v9[8] = v5;
  v9[25] = 0;
  v12[2] = v7[2];
  v12[3] = v8;
  v12[0] = v7[0];
  v12[1] = v7[1];
  v13[0] = *(_OWORD *)v9;
  *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)&v9[10];
  sub_1ACA50E78((uint64_t)v11, &qword_1EB772EA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F48A0);
  sub_1ACA51EA4(&qword_1E99F48A8, &qword_1E99F48A0);
  sub_1ACE75AD8();
  __swift_destroy_boxed_opaque_existential_0(a2);
  sub_1ACA50E78((uint64_t)v12, &qword_1E99F48A0);
  return v3;
}

void sub_1ACC89F48(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1ACC8EA70(v7);
}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:taskIsWaitingForConnectivity:)(NSURLSession _, NSURLSessionTask taskIsWaitingForConnectivity)
{
}

void sub_1ACC89FC8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1ACC8EE98(v7);
}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:downloadTask:didResumeAtOffset:expectedTotalBytes:)(NSURLSession _, NSURLSessionDownloadTask downloadTask, Swift::Int64 didResumeAtOffset, Swift::Int64 expectedTotalBytes)
{
}

void sub_1ACC8A048(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a1;
  sub_1ACC8F004(v11, a5, a6);
}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSession(_:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:)(NSURLSession _, NSURLSessionDownloadTask downloadTask, Swift::Int64 didWriteData, Swift::Int64 totalBytesWritten, Swift::Int64 totalBytesExpectedToWrite)
{
}

uint64_t sub_1ACC8A0E8(void *a1, void *a2, double a3)
{
  id v6 = (void *)MEMORY[0x1E4FBC8C8];
  id v7 = (_OWORD *)(*MEMORY[0x1E4FBC8C8] & *a1);
  uint64_t v8 = type metadata accessor for DownloadPhase();
  *(void *)&double v9 = MEMORY[0x1F4188790](v8).n128_u64[0];
  id v11 = (double *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = objc_msgSend(a2, sel_taskIdentifier, v9);
  uint64_t v13 = (void *)((char *)a1 + *(void *)((*v6 & *a1) + 0x98));
  swift_beginAccess();
  uint64_t v14 = *v13;
  id v20 = v12;
  long long v15 = v7[6];
  v19[0] = v7[5];
  v19[1] = v15;
  v19[2] = v7[7];
  uint64_t v16 = type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  MEMORY[0x1AD118260](&v21, &v20, v14, MEMORY[0x1E4FBB550], v16, MEMORY[0x1E4FBB560]);
  uint64_t v17 = v21;
  if (!v21) {
    return swift_endAccess();
  }
  swift_endAccess();
  *id v11 = a3;
  swift_storeEnumTagMultiPayload();
  sub_1ACE75898();
  sub_1ACC90028(v17);
  return sub_1ACC8FFCC((uint64_t)v11);
}

void sub_1ACC8A298(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  sub_1ACC8F4A0(v12, a6, a7);
}

Swift::Void __swiftcall AssetBackgroundDelegate.urlSessionDidFinishEvents(forBackgroundURLSession:)(NSURLSession forBackgroundURLSession)
{
  uint64_t v2 = v1;
  long long v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1ACE75E48();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB768C28);
  uint64_t v10 = forBackgroundURLSession.super.isa;
  id v11 = sub_1ACE75498();
  os_log_type_t v12 = sub_1ACE76BC8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v30 = v6;
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v36 = v14;
    *(_DWORD *)id v13 = 136315138;
    id v15 = [(objc_class *)v10 configuration];
    id v16 = objc_msgSend(v15, sel_identifier);

    if (v16)
    {
      uint64_t v17 = sub_1ACE761B8();
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v19 = 0;
    }
    uint64_t aBlock = v17;
    uint64_t v38 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
    uint64_t v20 = sub_1ACE76228();
    uint64_t aBlock = sub_1ACA3189C(v20, v21, &v36);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v11, v12, "Did finish events for background session: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v14, -1, -1);
    MEMORY[0x1AD11B340](v13, -1, -1);

    uint64_t v6 = v30;
    long long v4 = (void *)MEMORY[0x1E4FBC8C8];
  }
  else
  {
  }
  uint64_t v22 = qword_1EB771BC8;
  id v23 = *(id *)((char *)v2 + *(void *)((*v4 & *v2) + 0xB8));
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = *(_OWORD *)(v5 + 80);
  *(void *)(v25 + 32) = *(void *)(v5 + 96);
  *(_OWORD *)(v25 + 40) = *(_OWORD *)(v5 + 104);
  *(void *)(v25 + 56) = *(void *)(v5 + 120);
  *(void *)(v25 + 64) = v24;
  uint64_t v41 = sub_1ACC8F834;
  uint64_t v42 = v25;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v38 = 1107296256;
  uint64_t v39 = sub_1ACA6DA9C;
  uint64_t v40 = &block_descriptor_15_1;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v27 = v31;
  sub_1ACE75E08();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v28 = v33;
  sub_1ACE770E8();
  sub_1ACE76C68();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v6);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v34);
  swift_release();
  swift_release();
}

void sub_1ACC8A8C0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    long long v4 = (void (**)(void))((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x88));
    swift_beginAccess();
    uint64_t v5 = *v4;
    if (*v4)
    {
      sub_1ACA6DEC8((uint64_t)v5);

      v5();
      sub_1ACA76F34((uint64_t)v5);
    }
    else
    {
    }
  }
}

void sub_1ACC8A988(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  AssetBackgroundDelegate.urlSessionDidFinishEvents(forBackgroundURLSession:)((NSURLSession)v4);
}

void AssetBackgroundDelegate.urlSession(_:task:didCompleteWithError:)(void *a1, void *a2, void *a3)
{
  id v4 = v3;
  uint64_t v8 = (void *)sub_1ACE75DC8();
  uint64_t v9 = *(v8 - 1);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v51 = v16;
    uint64_t v52 = v14;
    uint64_t v54 = v13;
    id v56 = v8;
    id v17 = a3;
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1ACE754C8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB768C28);
    id v19 = a3;
    id v20 = a3;
    id v21 = a2;
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BC8();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v55 = v9;
    int v53 = v11;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      aBlock[0] = v50;
      *(_DWORD *)uint64_t v25 = 134218242;
      *(void *)&v59[0] = objc_msgSend(v21, sel_taskIdentifier);
      sub_1ACE76FF8();

      *(_WORD *)(v25 + 12) = 2080;
      *(void *)&v59[0] = a3;
      id v26 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
      uint64_t v27 = sub_1ACE76228();
      *(void *)&v59[0] = sub_1ACA3189C(v27, v28, aBlock);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v22, v23, "[%ld] Completed with error: %s", (uint8_t *)v25, 0x16u);
      uint64_t v29 = v50;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      MEMORY[0x1AD11B340](v25, -1, -1);
    }
    else
    {
    }
    id v34 = objc_msgSend(a1, sel_configuration);
    id v35 = objc_msgSend(v34, sel_identifier);

    if (v35)
    {
      uint64_t v36 = sub_1ACE761B8();
      uint64_t v38 = v37;
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v38 = 0;
    }
    id v39 = objc_msgSend(v21, sel_taskIdentifier);
    swift_getAssociatedTypeWitness();
    DownloadTaskIdentifier.init(session:identifier:)(v36, v38, (uint64_t)v39, v59);
    if (qword_1EB771BC8 != -1) {
      swift_once();
    }
    uint64_t v40 = swift_allocObject();
    long long v41 = v59[1];
    *(_OWORD *)(v40 + 40) = v59[0];
    *(void *)(v40 + 16) = v4;
    *(void *)(v40 + 24) = v21;
    *(void *)(v40 + 32) = a3;
    *(_OWORD *)(v40 + 56) = v41;
    *(void *)(v40 + 72) = v60;
    aBlock[4] = (uint64_t)sub_1ACC8F8A8;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1ACA6DA9C;
    aBlock[3] = (uint64_t)&block_descriptor_21_2;
    uint64_t v42 = _Block_copy(aBlock);
    id v43 = a3;
    id v44 = v21;
    id v45 = v4;
    sub_1ACC8F8B8((uint64_t)v59);
    uint64_t v46 = v51;
    sub_1ACE75E08();
    uint64_t v57 = MEMORY[0x1E4FBC860];
    sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    uint64_t v47 = v53;
    id v48 = v56;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v46, v47, v42);
    _Block_release(v42);
    sub_1ACC8F900((uint64_t)v59);

    (*(void (**)(char *, id))(v55 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v54);
    swift_release();
  }
  else
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1ACE754C8();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EB768C28);
    id v56 = a2;
    uint64_t v31 = sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76BC8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      aBlock[0] = (uint64_t)objc_msgSend(v56, sel_taskIdentifier);
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v31, v32, "[%ld] Completed without error", v33, 0xCu);
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    else
    {

      id v49 = v56;
    }
  }
}

uint64_t sub_1ACC8B16C(void *a1, void *a2, void *a3, long long *a4)
{
  id v73 = a3;
  v74 = a4;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v7 = *MEMORY[0x1E4FBC8C8] & *a1;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = ((char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v69 = (uint64_t)v66 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v7 + 88);
  id v17 = *(void **)(v7 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v19 = (void *)sub_1ACE76FD8();
  uint64_t v71 = *(v19 - 1);
  id v72 = v19;
  *(void *)&double v20 = MEMORY[0x1F4188790](v19).n128_u64[0];
  uint64_t v22 = (char *)v66 - v21;
  id v75 = a2;
  id v23 = objc_msgSend(a2, sel_taskIdentifier, v20);
  BOOL v24 = (void *)((char *)a1 + *(void *)((*v6 & *a1) + 0x98));
  swift_beginAccess();
  uint64_t v25 = *v24;
  id v79 = v23;
  *(void *)&long long v76 = v17;
  *((void *)&v76 + 1) = v16;
  long long v26 = *(_OWORD *)(v8 + 112);
  long long v77 = *(_OWORD *)(v8 + 96);
  long long v78 = v26;
  uint64_t v27 = type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  MEMORY[0x1AD118260](&v80, &v79, v25, MEMORY[0x1E4FBB550], v27, MEMORY[0x1E4FBB560]);
  if (v80)
  {
    uint64_t v71 = v16;
    id v72 = v17;
    unint64_t v28 = v74;
    swift_endAccess();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1ACE754C8();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB768C28);
    uint64_t v30 = v75;
    uint64_t v31 = sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76BC8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      *(void *)&long long v76 = [v30 taskIdentifier];
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v31, v32, "[%ld] Download completed while still foregrounded, notifying subject", v33, 0xCu);
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    else
    {

      uint64_t v31 = v30;
    }
    uint64_t v36 = v71;

    id v48 = v73;
    *(void *)&long long v76 = v73;
    id v49 = v73;
    sub_1ACE75888();
    swift_release();
    swift_release();

    id v37 = v72;
  }
  else
  {
    uint64_t v68 = v15;
    swift_endAccess();
    id v73 = a1;
    unint64_t v28 = v74;
    long long v34 = v74[1];
    long long v76 = *v74;
    long long v77 = v34;
    *(void *)&long long v78 = *((void *)v74 + 4);
    (*(void (**)(long long *, void *, uint64_t))(v16 + 24))(&v76, v17, v16);
    int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v22, 1, AssociatedTypeWitness);
    (*(void (**)(char *, id))(v71 + 8))(v22, v72);
    uint64_t v36 = v16;
    id v37 = v17;
    if (v35 == 1)
    {
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1ACE754C8();
      __swift_project_value_buffer(v38, (uint64_t)qword_1EB768C28);
      id v39 = v75;
      uint64_t v40 = sub_1ACE75498();
      int v41 = sub_1ACE76BE8();
      BOOL v42 = os_log_type_enabled(v40, (os_log_type_t)v41);
      id v43 = (char *)v70;
      if (v42)
      {
        v66[1] = v13;
        LODWORD(v71) = v41;
        uint64_t v44 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        *(void *)&long long v76 = v67;
        *(_DWORD *)uint64_t v44 = 134218242;
        id v81 = objc_msgSend(v39, sel_taskIdentifier);
        sub_1ACE76FF8();
        *(_WORD *)(v44 + 12) = 2080;
        id v72 = v39;
        id v45 = objc_msgSend(v39, sel_originalRequest);
        if (v45)
        {
          uint64_t v46 = v45;
          sub_1ACE74838();

          uint64_t v47 = sub_1ACE74898();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v43, 0, 1, v47);
        }
        else
        {
          uint64_t v47 = sub_1ACE74898();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v43, 1, 1, v47);
        }
        uint64_t v57 = (uint64_t)v43;
        uint64_t v58 = v69;
        sub_1ACC8FAE8(v57, v69);
        sub_1ACE74898();
        uint64_t v59 = v58;
        uint64_t v60 = *(void *)(v47 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v59, 1, v47) == 1)
        {
          sub_1ACA50E78(v59, &qword_1EB771B08);
          uint64_t v61 = sub_1ACE74F28();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v68, 1, 1, v61);
        }
        else
        {
          uint64_t v70 = v40;
          sub_1ACE74858();
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v47);
          uint64_t v40 = v70;
        }
        uint64_t v62 = sub_1ACE76228();
        id v81 = (id)sub_1ACA3189C(v62, v63, (uint64_t *)&v76);
        sub_1ACE76FF8();
        id v64 = v72;

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v40, (os_log_type_t)v71, "[%ld] Failed download task with no notification endpoint: %s)", (uint8_t *)v44, 0x16u);
        uint64_t v65 = v67;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v65, -1, -1);
        MEMORY[0x1AD11B340](v44, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_1ACE754C8();
      __swift_project_value_buffer(v52, (uint64_t)qword_1EB768C28);
      id v53 = v75;
      uint64_t v54 = sub_1ACE75498();
      os_log_type_t v55 = sub_1ACE76BC8();
      if (os_log_type_enabled(v54, v55))
      {
        id v72 = v37;
        id v56 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v56 = 134217984;
        *(void *)&long long v76 = objc_msgSend(v53, sel_taskIdentifier);
        id v37 = v72;
        sub_1ACE76FF8();

        _os_log_impl(&dword_1AC9D5000, v54, v55, "[%ld] Download completed with a background record, skipping due to error", v56, 0xCu);
        MEMORY[0x1AD11B340](v56, -1, -1);
      }
      else
      {
      }
    }
  }
  long long v50 = v28[1];
  long long v76 = *v28;
  long long v77 = v50;
  *(void *)&long long v78 = *((void *)v28 + 4);
  (*(void (**)(long long *, id, uint64_t))(v36 + 48))(&v76, v37, v36);
  return sub_1ACC8987C((uint64_t)objc_msgSend(v75, sel_taskIdentifier));
}

void sub_1ACC8BB50(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  id v11 = a5;
  AssetBackgroundDelegate.urlSession(_:task:didCompleteWithError:)(v8, v9, a5);
}

uint64_t AssetBackgroundDelegate.urlSession(_:downloadTask:didFinishDownloadingTo:)(void *a1, void *a2, char *a3)
{
  id v133 = a1;
  uint64_t v160 = *MEMORY[0x1E4F143B8];
  v149 = (void *)(*MEMORY[0x1E4FBC8C8] & *v3);
  uint64_t v142 = sub_1ACE75DC8();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  v139 = (char *)v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1ACE75E48();
  uint64_t v138 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  v137 = (char *)v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1ACE75118();
  uint64_t v128 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  v127 = (char *)v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v125 - v13;
  v147 = (void (*)(char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v147);
  v132 = (char *)v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v148 = (char *)v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v146 = (char *)v125 - v20;
  uint64_t v135 = v21;
  MEMORY[0x1F4188790](v22);
  BOOL v24 = (char *)v125 - v23;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v126 = sub_1ACE754C8();
  uint64_t v25 = __swift_project_value_buffer(v126, (uint64_t)qword_1EB768C28);
  long long v26 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  v129 = a3;
  v144 = v26;
  uint64_t v145 = v17 + 16;
  v26((uint64_t)v24, a3, v16);
  id v27 = a2;
  v125[1] = v25;
  unint64_t v28 = sub_1ACE75498();
  int v29 = sub_1ACE76BC8();
  BOOL v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
  id v150 = v27;
  uint64_t v143 = v17;
  if (v30)
  {
    LODWORD(v130) = v29;
    uint64_t v131 = v16;
    uint64_t v31 = swift_slowAlloc();
    v125[0] = swift_slowAlloc();
    id aBlock = (id)v125[0];
    *(_DWORD *)uint64_t v31 = 134218498;
    *(void *)&v158[0] = objc_msgSend(v27, sel_taskIdentifier);
    sub_1ACE76FF8();
    *(_WORD *)(v31 + 12) = 2080;
    id v32 = objc_msgSend(v27, sel_originalRequest);
    if (v32)
    {
      uint64_t v33 = v32;
      sub_1ACE74838();

      uint64_t v34 = sub_1ACE74898();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v11, 0, 1, v34);
    }
    else
    {
      uint64_t v34 = sub_1ACE74898();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v11, 1, 1, v34);
    }
    uint64_t v38 = v132;
    sub_1ACC8FAE8((uint64_t)v11, (uint64_t)v14);
    sub_1ACE74898();
    uint64_t v39 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v14, 1, v34) == 1)
    {
      sub_1ACA50E78((uint64_t)v14, &qword_1EB771B08);
      uint64_t v36 = v143;
      uint64_t v35 = v131;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v38, 1, 1, v131);
    }
    else
    {
      sub_1ACE74858();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v34);
      uint64_t v35 = v131;
      uint64_t v36 = v143;
    }
    id v40 = v150;
    uint64_t v41 = sub_1ACE76228();
    *(void *)&v158[0] = sub_1ACA3189C(v41, v42, (uint64_t *)&aBlock);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2080;
    sub_1ACC8FB50((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
    uint64_t v43 = sub_1ACE777C8();
    *(void *)&v158[0] = sub_1ACA3189C(v43, v44, (uint64_t *)&aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    v147 = *(void (**)(char *, uint64_t))(v36 + 8);
    v147(v24, v35);
    _os_log_impl(&dword_1AC9D5000, v28, (os_log_type_t)v130, "[%ld] Finished downloading %s: %s", (uint8_t *)v31, 0x20u);
    uint64_t v45 = v125[0];
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v45, -1, -1);
    MEMORY[0x1AD11B340](v31, -1, -1);

    id v37 = v40;
  }
  else
  {

    v147 = *(void (**)(char *, uint64_t))(v17 + 8);
    v147(v24, v16);

    uint64_t v35 = v16;
    uint64_t v36 = v17;
    id v37 = v27;
  }
  id v46 = objc_msgSend(v133, sel_configuration);
  id v47 = objc_msgSend(v46, sel_identifier);

  id v48 = v146;
  uint64_t v49 = v36;
  if (v47)
  {
    uint64_t v50 = sub_1ACE761B8();
    uint64_t v52 = v51;
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v52 = 0;
  }
  id v53 = objc_msgSend(v37, sel_taskIdentifier);
  uint64_t v54 = v149;
  os_log_type_t v55 = (char *)v149[10];
  id v133 = (id)v149[11];
  v132 = v55;
  swift_getAssociatedTypeWitness();
  uint64_t v56 = v54[15];
  uint64_t v131 = v54[14];
  uint64_t v130 = v56;
  DownloadTaskIdentifier.init(session:identifier:)(v50, v52, (uint64_t)v53, v158);
  id aBlock = 0;
  unint64_t v153 = 0xE000000000000000;
  uint64_t v57 = v127;
  sub_1ACE75108();
  uint64_t v58 = (void *)sub_1ACE750C8();
  unint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v57, v134);
  swift_bridgeObjectRelease();
  id aBlock = v58;
  unint64_t v153 = v60;
  sub_1ACE762C8();
  sub_1ACE74E08();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v61 = self;
  id v62 = objc_msgSend(v61, sel_defaultManager);
  id v63 = objc_msgSend(v62, sel_temporaryDirectory);

  id v64 = v148;
  sub_1ACE74E98();

  sub_1ACE74E38();
  swift_bridgeObjectRelease();
  uint64_t v65 = v49;
  uint64_t v134 = v49 + 8;
  v147(v64, v35);
  sub_1ACC8FB50(&qword_1EB770E98, MEMORY[0x1E4F276F0]);
  if ((sub_1ACE76168() & 1) == 0)
  {
    id v66 = objc_msgSend(v61, sel_defaultManager);
    uint64_t v67 = (void *)sub_1ACE74E18();
    uint64_t v68 = (void *)sub_1ACE74E18();
    id aBlock = 0;
    unsigned int v69 = objc_msgSend(v66, sel_copyItemAtURL_toURL_error_, v67, v68, &aBlock);

    if (!v69)
    {
      id v80 = aBlock;
      v74 = (void *)sub_1ACE74D78();

      id v75 = v150;
      goto LABEL_25;
    }
    id v70 = aBlock;
    uint64_t v65 = v49;
  }
  id v71 = objc_msgSend(v61, sel_defaultManager);
  sub_1ACE74EC8();
  id v72 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v73 = objc_msgSend(v71, sel_fileExistsAtPath_, v72);

  if (v73)
  {
    v74 = 0;
    goto LABEL_34;
  }
  id v75 = v150;
  long long v76 = v150;
  long long v77 = sub_1ACE75498();
  os_log_type_t v78 = sub_1ACE76BF8();
  if (os_log_type_enabled(v77, v78))
  {
    id v79 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v79 = 134217984;
    id aBlock = [v76 taskIdentifier];
    uint64_t v65 = v49;
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v77, v78, "[%ld] SOMETHING IS CRITICALLY WRONG, Moved file is missing", v79, 0xCu);
    MEMORY[0x1AD11B340](v79, -1, -1);
  }
  else
  {

    long long v77 = v76;
  }

  type metadata accessor for FileError();
  sub_1ACC8FB50((unint64_t *)&qword_1E99F47B0, (void (*)(uint64_t))type metadata accessor for FileError);
  v74 = (void *)swift_allocError();
  uint64_t v82 = v81;
  v144(v81, v48, v35);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v82, 0, 2, v35);
LABEL_25:
  swift_willThrow();
  if (qword_1EB772EF0 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v126, (uint64_t)qword_1EB772ED0);
  id v83 = v75;
  id v84 = v74;
  id v85 = v83;
  id v86 = v74;
  v87 = sub_1ACE75498();
  os_log_type_t v88 = sub_1ACE76BE8();
  uint64_t v89 = v35;
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v90 = swift_slowAlloc();
    v91 = (void *)swift_slowAlloc();
    id aBlock = v91;
    *(_DWORD *)uint64_t v90 = 134218242;
    id v92 = objc_msgSend(v85, sel_taskIdentifier);

    uint64_t v151 = (uint64_t)v92;
    sub_1ACE76FF8();

    *(_WORD *)(v90 + 12) = 2080;
    uint64_t v151 = (uint64_t)v74;
    id v93 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v94 = sub_1ACE76228();
    uint64_t v151 = sub_1ACA3189C(v94, v95, (uint64_t *)&aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v87, v88, "[%ld] Failed to copy asset from URLSession directory to tmp directory: %s", (uint8_t *)v90, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v91, -1, -1);
    MEMORY[0x1AD11B340](v90, -1, -1);
  }
  else
  {
  }
  id v96 = v74;
  id v97 = v74;
  v98 = sub_1ACE75498();
  os_log_type_t v99 = sub_1ACE76BE8();
  if (os_log_type_enabled(v98, v99))
  {
    v100 = (uint8_t *)swift_slowAlloc();
    v101 = (void *)swift_slowAlloc();
    id aBlock = v101;
    *(_DWORD *)v100 = 136315138;
    uint64_t v151 = (uint64_t)v74;
    id v102 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v103 = sub_1ACE76228();
    uint64_t v151 = sub_1ACA3189C(v103, v104, (uint64_t *)&aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v98, v99, "%s", v100, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v101, -1, -1);
    MEMORY[0x1AD11B340](v100, -1, -1);
  }
  else
  {
  }
  uint64_t v35 = v89;
  id v48 = v146;
  uint64_t v65 = v143;
LABEL_34:
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  v105 = v148;
  v144((uint64_t)v148, v48, v35);
  unint64_t v106 = (*(unsigned __int8 *)(v65 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v107 = (v135 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
  v108 = (char *)swift_allocObject();
  id v109 = v133;
  *((void *)v108 + 2) = v132;
  *((void *)v108 + 3) = v109;
  v110 = v149;
  id v111 = v150;
  *((void *)v108 + 4) = v149[12];
  uint64_t v112 = v131;
  *((void *)v108 + 5) = v110[13];
  *((void *)v108 + 6) = v112;
  uint64_t v113 = v65;
  v114 = v136;
  *((void *)v108 + 7) = v130;
  *((void *)v108 + 8) = v114;
  *((void *)v108 + 9) = v111;
  *((void *)v108 + 10) = v74;
  (*(void (**)(char *, char *, uint64_t))(v113 + 32))(&v108[v106], v105, v35);
  v115 = &v108[v107];
  long long v116 = v158[1];
  *(_OWORD *)v115 = v158[0];
  *((_OWORD *)v115 + 1) = v116;
  *((void *)v115 + 4) = v159;
  v156 = sub_1ACC8FA54;
  v157 = v108;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  unint64_t v153 = 1107296256;
  v154 = sub_1ACA6DA9C;
  v155 = &block_descriptor_27_2;
  v117 = _Block_copy(&aBlock);
  id v118 = v111;
  id v119 = v114;
  sub_1ACC8F8B8((uint64_t)v158);
  id v120 = v74;
  v121 = v137;
  sub_1ACE75E08();
  uint64_t v151 = MEMORY[0x1E4FBC860];
  sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  v122 = v139;
  uint64_t v123 = v142;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v121, v122, v117);
  _Block_release(v117);
  sub_1ACC8F900((uint64_t)v158);

  (*(void (**)(char *, uint64_t))(v141 + 8))(v122, v123);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v121, v140);
  v147(v48, v35);
  return swift_release();
}

void sub_1ACC8CEF8(void *a1, void *a2, void *a3, uint64_t a4, long long *a5)
{
  v136 = a5;
  id v132 = a3;
  uint64_t v133 = a4;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v8 = (void *)(*MEMORY[0x1E4FBC8C8] & *a1);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v9 - 8);
  v117 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v118 = (uint64_t)&v114 - v12;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v119);
  id v120 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v123 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771BF0);
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  v124 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for DownloadPhase();
  MEMORY[0x1F4188790](v128);
  v127 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v8[11];
  uint64_t v19 = v8[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v122 = sub_1ACE76FD8();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  v129 = (char *)&v114 - v21;
  uint64_t v130 = *(void *)(AssociatedTypeWitness - 8);
  *(void *)&double v23 = MEMORY[0x1F4188790](v22).n128_u64[0];
  uint64_t v25 = (char *)&v114 - v24;
  id v135 = a2;
  id v26 = objc_msgSend(a2, sel_taskIdentifier, v23);
  id v27 = (void *)((char *)a1 + *(void *)((*v7 & *a1) + 0x98));
  swift_beginAccess();
  uint64_t v28 = *v27;
  id v141 = v26;
  uint64_t v29 = v8[13];
  BOOL v30 = (char *)v8[14];
  uint64_t v31 = v8;
  id v32 = (void *)v8[12];
  uint64_t v33 = v31[15];
  *(void *)&long long v137 = v19;
  *((void *)&v137 + 1) = v18;
  *(void *)&long long v138 = v32;
  *((void *)&v138 + 1) = v29;
  v139 = v30;
  uint64_t v140 = v33;
  uint64_t v34 = type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  MEMORY[0x1AD118260](&v142, &v141, v28, MEMORY[0x1E4FBB550], v34, MEMORY[0x1E4FBB560]);
  uint64_t v35 = v142;
  uint64_t v131 = v18;
  uint64_t v134 = v19;
  if (!v142)
  {
    uint64_t v115 = v33;
    v127 = v30;
    uint64_t v128 = v29;
    id v132 = v32;
    long long v116 = v25;
    swift_endAccess();
    id v40 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v41 = a1;
    unint64_t v42 = v136;
    long long v43 = v136[1];
    long long v137 = *v136;
    long long v138 = v43;
    v139 = (char *)*((void *)v136 + 4);
    unint64_t v44 = v129;
    (*(void (**)(long long *, uint64_t, uint64_t))(v18 + 24))(&v137, v19, v18);
    uint64_t v45 = v130;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v44, 1, AssociatedTypeWitness) == 1)
    {
      id v46 = v42;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v44, v122);
      id v47 = v135;
      id v48 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_1ACE754C8();
      __swift_project_value_buffer(v49, (uint64_t)qword_1EB768C28);
      id v50 = v47;
      uint64_t v51 = sub_1ACE75498();
      os_log_type_t v52 = sub_1ACE76BE8();
      BOOL v53 = os_log_type_enabled(v51, v52);
      uint64_t v54 = v134;
      if (!v53)
      {

        uint64_t v84 = v131;
LABEL_36:
        id v67 = v135;
        goto LABEL_37;
      }
      uint64_t v55 = swift_slowAlloc();
      uint64_t v133 = swift_slowAlloc();
      *(void *)&long long v137 = v133;
      *(_DWORD *)uint64_t v55 = 134218242;
      id v143 = objc_msgSend(v50, sel_taskIdentifier);
      sub_1ACE76FF8();
      *(_WORD *)(v55 + 12) = 2080;
      id v56 = objc_msgSend(v50, sel_originalRequest);
      if (v56)
      {
        uint64_t v57 = v56;
        uint64_t v58 = (uint64_t)v117;
        sub_1ACE74838();

        uint64_t v59 = sub_1ACE74898();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
      }
      else
      {
        uint64_t v59 = sub_1ACE74898();
        uint64_t v58 = (uint64_t)v117;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v117, 1, 1, v59);
      }
      uint64_t v107 = v118;
      sub_1ACC8FAE8(v58, v118);
      sub_1ACE74898();
      uint64_t v108 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v107, 1, v59) == 1)
      {
        sub_1ACA50E78(v107, &qword_1EB771B08);
        uint64_t v109 = sub_1ACE74F28();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v120, 1, 1, v109);
      }
      else
      {
        sub_1ACE74858();
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v59);
      }
      uint64_t v110 = sub_1ACE76228();
      id v143 = (id)sub_1ACA3189C(v110, v111, (uint64_t *)&v137);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v51, v52, "[%ld] Completed download task with no notification endpoint: %s", (uint8_t *)v55, 0x16u);
      uint64_t v112 = v133;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v112, -1, -1);
      MEMORY[0x1AD11B340](v55, -1, -1);

      id v46 = v136;
      uint64_t v84 = v131;
      uint64_t v54 = v134;
    }
    else
    {
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      unsigned int v69 = v116;
      v129 = (char *)AssociatedTypeWitness;
      v68(v116, v44, AssociatedTypeWitness);
      id v70 = v135;
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_1ACE754C8();
      __swift_project_value_buffer(v71, (uint64_t)qword_1EB768C28);
      id v72 = v70;
      unsigned __int8 v73 = sub_1ACE75498();
      os_log_type_t v74 = sub_1ACE76BC8();
      id v75 = v41;
      if (os_log_type_enabled(v73, v74))
      {
        long long v76 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)long long v76 = 134217984;
        *(void *)&long long v137 = [v72 taskIdentifier];
        unsigned int v69 = v116;
        sub_1ACE76FF8();

        _os_log_impl(&dword_1AC9D5000, v73, v74, "[%ld] Download completed with a background record", v76, 0xCu);
        MEMORY[0x1AD11B340](v76, -1, -1);
      }
      else
      {

        unsigned __int8 v73 = v72;
      }
      id v85 = v124;

      dispatch_group_enter(*(dispatch_group_t *)((char *)v75 + *(void *)((*v40 & *v75) + 0xB8)));
      id v86 = [v72 taskIdentifier];
      *(void *)&long long v137 = (*(uint64_t (**)(char *, uint64_t))((char *)v75 + *(void *)((*v40 & *v75) + 0x80)))(v69, v133);
      v87 = v40;
      uint64_t v88 = (uint64_t)v123;
      if (qword_1EB771BC8 != -1) {
        swift_once();
      }
      uint64_t v89 = (void *)qword_1EB771BC0;
      id v143 = (id)qword_1EB771BC0;
      uint64_t v90 = sub_1ACE76CA8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v88, 1, 1, v90);
      id v91 = v89;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716D8);
      sub_1ACA51E1C();
      sub_1ACA51EA4(&qword_1EB7716D0, &qword_1EB7716D8);
      sub_1ACC8FB50((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
      sub_1ACE75CA8();
      sub_1ACA50E78(v88, &qword_1EB7669C8);

      swift_release();
      uint64_t v92 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v93 = (void *)swift_allocObject();
      uint64_t v94 = v134;
      uint64_t v84 = v131;
      id v95 = v132;
      v93[2] = v134;
      v93[3] = v84;
      uint64_t v96 = v128;
      v93[4] = v95;
      v93[5] = v96;
      uint64_t v97 = v115;
      v93[6] = v127;
      v93[7] = v97;
      v93[8] = v92;
      v93[9] = v72;
      sub_1ACA51EA4(&qword_1EB771698, &qword_1EB771BF0);
      v98 = v72;
      uint64_t v99 = v126;
      v100 = v85;
      uint64_t v101 = sub_1ACE75B88();
      swift_release();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v100, v99);
      id v102 = (id *)((char *)v75 + *(void *)((*v87 & *v75) + 0xB0));
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v143 = *v102;
      *id v102 = (id)0x8000000000000000;
      uint64_t v104 = (uint64_t)v86;
      uint64_t v54 = v94;
      sub_1ACD0EC40(v101, v104, isUniquelyReferenced_nonNull_native);
      *id v102 = v143;
      swift_bridgeObjectRelease();
      swift_endAccess();
      (*(void (**)(char *, char *))(v130 + 8))(v116, v129);
      id v46 = v136;
    }
    id v48 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
    goto LABEL_36;
  }
  uint64_t v36 = v136;
  swift_endAccess();
  id v37 = v132;
  if (v132)
  {
    *(void *)&long long v137 = v132;
    id v38 = v132;
    id v39 = v37;
    sub_1ACE75888();
    swift_release();
    swift_release();

    return;
  }
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_1ACE754C8();
  __swift_project_value_buffer(v60, (uint64_t)qword_1EB768C28);
  id v61 = v135;
  id v62 = v135;
  id v63 = sub_1ACE75498();
  os_log_type_t v64 = sub_1ACE76BC8();
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v115 = v35;
  if (v65)
  {
    id v66 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v66 = 134217984;
    *(void *)&long long v137 = [v62 taskIdentifier];
    id v67 = v135;
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v63, v64, "[%ld] Download completed while still foregrounded, notifying subject", v66, 0xCu);
    MEMORY[0x1AD11B340](v66, -1, -1);
  }
  else
  {

    id v63 = v62;
    id v67 = v61;
  }

  id v77 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  os_log_type_t v78 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned __int8 v79 = objc_msgSend(v77, sel_fileExistsAtPath_, v78);

  id v48 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
  if ((v79 & 1) == 0)
  {
    id v80 = v62;
    uint64_t v81 = sub_1ACE75498();
    os_log_type_t v82 = sub_1ACE76BF8();
    if (os_log_type_enabled(v81, v82))
    {
      id v83 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v83 = 134217984;
      *(void *)&long long v137 = [v80 taskIdentifier];
      id v67 = v135;
      id v48 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v81, v82, "[%ld] SOMETHING IS CRITICALLY WRONG, Moved file is missing in worker block", v83, 0xCu);
      MEMORY[0x1AD11B340](v83, -1, -1);
    }
    else
    {

      uint64_t v81 = v80;
    }
  }
  uint64_t v105 = sub_1ACE74F28();
  uint64_t v106 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(v127, v133, v105);
  swift_storeEnumTagMultiPayload();
  sub_1ACE75898();
  sub_1ACC8FFCC(v106);
  *(void *)&long long v137 = 0;
  sub_1ACE75888();
  swift_release();
  swift_release();
  id v46 = v36;
  uint64_t v84 = v131;
  uint64_t v54 = v134;
LABEL_37:
  long long v113 = v46[1];
  long long v137 = *v46;
  long long v138 = v113;
  v139 = (char *)*((void *)v46 + 4);
  (*(void (**)(long long *, uint64_t, uint64_t))(v84 + 48))(&v137, v54, v84);
  sub_1ACC8987C((uint64_t)[v67 v48[243]]);
}

uint64_t sub_1ACC8E0A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  id v5 = (void *)MEMORY[0x1AD11B470](v4);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(id *)((char *)v5 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v5) + 0xB8));

    dispatch_group_leave(v7);
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](v4);
  if (result)
  {
    uint64_t v9 = (void *)result;
    id v10 = objc_msgSend(a3, sel_taskIdentifier);
    swift_beginAccess();
    sub_1ACA698D8((uint64_t)v10);
    swift_endAccess();

    return swift_release();
  }
  return result;
}

uint64_t sub_1ACC8E1D0(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74E98();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  AssetBackgroundDelegate.urlSession(_:downloadTask:didFinishDownloadingTo:)(v11, v12, v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static AssetBackgroundDelegate.BackgroundDownloadError.== infix(_:_:)()
{
  return 1;
}

uint64_t AssetBackgroundDelegate.BackgroundDownloadError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t AssetBackgroundDelegate.BackgroundDownloadError.hashValue.getter()
{
  return sub_1ACE77B78();
}

id AssetBackgroundDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AssetBackgroundDelegate.init()()
{
}

void sub_1ACC8E420()
{
}

id AssetBackgroundDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1ACC8E4EC(char *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *(void *)a1;
  swift_release();
  sub_1ACA76F34(*(void *)&a1[*(void *)((*v2 & *(void *)a1) + 0x88)]);
  (*(void (**)(char *))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(&a1[*(void *)((*v2 & *(void *)a1)
                                                                                                 + 0x90)]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)&a1[*(void *)((*v2 & *(void *)a1) + 0xB8)];
}

id sub_1ACC8E68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v9 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  id v10 = &v3[*(void *)(v9 + 0x88)];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;
  id v11 = &v3[*(void *)((*v8 & *(void *)v3) + 0x80)];
  *(void *)id v11 = a2;
  *((void *)v11 + 1) = a3;
  uint64_t v12 = *(void *)(v9 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(&v3[*(void *)((*v8 & *(void *)v3) + 0x90)], a1, v12);
  uint64_t v13 = *(void *)(v9 + 120);
  uint64_t v14 = v3;
  swift_retain();
  uint64_t v18 = v12;
  long long v19 = *(_OWORD *)(v9 + 88);
  long long v20 = *(_OWORD *)(v9 + 104);
  uint64_t v21 = v13;
  type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord();
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  *(void *)&v14[*(void *)((*v8 & *(void *)v14) + 0x98)] = sub_1ACE76028();
  uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  *(void *)&v14[*(void *)((*v8 & *(void *)v14) + 0xA0)] = sub_1ACA36BE4(MEMORY[0x1E4FBC860]);
  *(void *)&v14[*(void *)((*v8 & *(void *)v14) + 0xA8)] = sub_1ACA3A158((uint64_t)v15);
  *(void *)&v14[*(void *)((*v8 & *(void *)v14) + 0xB0)] = sub_1ACA3A320(v15);
  *(void *)&v14[*(void *)((*v8 & *(void *)v14) + 0xB8)] = dispatch_group_create();

  v17.receiver = v14;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

id sub_1ACC8E930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return sub_1ACC8E68C(a1, a2, a3);
}

uint64_t sub_1ACC8E97C()
{
  return swift_deallocObject();
}

void sub_1ACC8E9BC(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1ACC88BFC(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t type metadata accessor for AssetBackgroundDelegate.DownloadNotificationRecord()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACC8E9DC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC8EA14(uint64_t *a1)
{
  return sub_1ACC88AA4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1ACC8EA1C()
{
  return sub_1ACC88B90();
}

uint64_t sub_1ACC8EA24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC8EA64()
{
  return sub_1ACC89548(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACC8EA70(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1ACE754C8();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB768C28);
  id v12 = a1;
  uint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76BC8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v21 = v10;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134217984;
    aBlock[0] = objc_msgSend(v12, sel_taskIdentifier);
    id v10 = v21;
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v13, v14, "Download task created with identifier: %ld", v15, 0xCu);
    MEMORY[0x1AD11B340](v15, -1, -1);
  }
  else
  {
  }
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = v12;
  aBlock[4] = sub_1ACC900C8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_60;
  objc_super v17 = _Block_copy(aBlock);
  id v18 = v12;
  id v19 = v2;
  sub_1ACE75E08();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v10, v7, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  return swift_release();
}

void sub_1ACC8EE98(void *a1)
{
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB768C28);
  id v6 = a1;
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76BC8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    objc_msgSend(v6, sel_taskIdentifier);
    sub_1ACE76FF8();

    _os_log_impl(&dword_1AC9D5000, v3, v4, "[%ld] Task is waiting for connectivity", v5, 0xCu);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1ACC8F004(void *a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v4 = v3;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1ACE754C8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB768C28);
  id v15 = a1;
  uint64_t v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76BC8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134218752;
    uint64_t v25 = v10;
    *(void *)&aBlock[0] = objc_msgSend(v15, sel_taskIdentifier);
    uint64_t v24 = v13;
    sub_1ACE76FF8();

    *(_WORD *)(v18 + 12) = 2050;
    *(void *)&aBlock[0] = a2;
    sub_1ACE76FF8();
    *(_WORD *)(v18 + 22) = 2050;
    *(void *)&aBlock[0] = a3;
    uint64_t v13 = v24;
    id v10 = v25;
    sub_1ACE76FF8();
    *(_WORD *)(v18 + 32) = 2048;
    aBlock[0] = (double)a2 / (double)a3;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v16, v17, "[%ld] Did resume downloading at offset %{public}lld, expected total bytes: %{public}lld: %f%%", (uint8_t *)v18, 0x2Au);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }
  else
  {
  }
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v4;
  *(void *)(v19 + 24) = v15;
  *(double *)(v19 + 32) = (double)a2 / (double)a3;
  *(void *)&aBlock[4] = sub_1ACC900F4;
  *(void *)&aBlock[5] = v19;
  *(void *)&aBlock[0] = MEMORY[0x1E4F143A8];
  *(void *)&aBlock[1] = 1107296256;
  *(void *)&aBlock[2] = sub_1ACA6DA9C;
  *(void *)&aBlock[3] = &block_descriptor_54_0;
  long long v20 = _Block_copy(aBlock);
  id v21 = v15;
  id v22 = v4;
  sub_1ACE75E08();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  return swift_release();
}

void sub_1ACC8F4A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    v20[0] = v13;
    if (qword_1EB771BC8 != -1) {
      swift_once();
    }
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v3;
    *(void *)(v16 + 24) = a1;
    *(double *)(v16 + 32) = (double)a2 / (double)a3 * 100.0;
    aBlock[4] = sub_1ACC900A8;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_48_1;
    os_log_type_t v17 = _Block_copy(aBlock);
    id v18 = v3;
    id v19 = a1;
    sub_1ACE75E08();
    v20[1] = MEMORY[0x1E4FBC860];
    sub_1ACC8FB50((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v15, v10, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, void))(v12 + 8))(v15, v20[0]);
    swift_release();
  }
}

uint64_t sub_1ACC8F7C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACC8F7FC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC8F834()
{
  sub_1ACC8A8C0(*(void *)(v0 + 64));
}

uint64_t sub_1ACC8F848()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC8F8A8()
{
  return sub_1ACC8B16C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), (long long *)(v0 + 40));
}

uint64_t sub_1ACC8F8B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACC8F900(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACC8F948()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC8FA54()
{
  uint64_t v1 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (void *)v0[8];
  os_log_type_t v4 = (void *)v0[9];
  uint64_t v5 = (void *)v0[10];
  id v6 = (long long *)((char *)v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACC8CEF8(v3, v4, v5, (uint64_t)v0 + v2, v6);
}

uint64_t sub_1ACC8FAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC8FB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1ACC8FB98()
{
}

uint64_t sub_1ACC8FBC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACC8FBEC()
{
  return 48;
}

__n128 sub_1ACC8FBF8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_1ACC8FC0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AssetBackgroundDelegate()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for AssetBackgroundDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetBackgroundDelegate);
}

uint64_t dispatch thunk of AssetBackgroundDelegate.__allocating_init(recordCache:resume:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

unsigned char *sub_1ACC8FD1C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACC8FDB8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for AssetBackgroundDelegate.BackgroundDownloadError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACC8FDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1ACC8FE04()
{
  swift_release();
  return swift_release();
}

void *sub_1ACC8FE40(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1ACC8FE78(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1ACC8FED8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1ACC8FF18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC8FF50()
{
  return sub_1ACD68224(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1ACC8FF58()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACC8FF98(uint64_t a1)
{
  return sub_1ACC8E0A4(a1, *(void *)(v1 + 64), *(void **)(v1 + 72));
}

uint64_t sub_1ACC8FFCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadPhase();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACC90028(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACC90068()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC900A8()
{
  return sub_1ACC8A0E8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1ACC900C8()
{
  return sub_1ACC895D4(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

Swift::Bool __swiftcall NSFileManager.fileExists(at:isDirectory:)(Swift::String at, Swift::Bool isDirectory)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  Swift::Bool v6 = isDirectory;
  uint64_t v3 = (void *)sub_1ACE76178();
  unsigned __int8 v4 = objc_msgSend(v2, sel_fileExistsAtPath_isDirectory_, v3, &v6);

  return v4;
}

id NSFileManager.createDirectory(url:createIntermediates:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1ACE74E18();
  v8[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, a2 & 1, 0, v8);

  if (v3) {
    return v8[0];
  }
  id v7 = v8[0];
  sub_1ACE74D78();

  return (id)swift_willThrow();
}

Swift::Bool __swiftcall NSFileManager.directoryExists(atPath:)(Swift::String atPath)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  char v5 = 0;
  uint64_t v2 = (void *)sub_1ACE76178();
  unsigned __int8 v3 = objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v5);

  return v3 & v5;
}

id sub_1ACC902E4(uint64_t a1, char a2)
{
  return NSFileManager.createDirectory(url:createIntermediates:)(a1, a2);
}

id sub_1ACC90308()
{
  return sub_1ACC9032C();
}

id sub_1ACC9032C()
{
  uint64_t v1 = v0;
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1ACE74E18();
  v5[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v5);

  if (v1) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_1ACE74D78();

  return (id)swift_willThrow();
}

id sub_1ACC903F0()
{
  return sub_1ACC90414();
}

id sub_1ACC90414()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1ACE76178();
  v5[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtPath_error_, v1, v5);

  if (v2) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_1ACE74D78();

  return (id)swift_willThrow();
}

id sub_1ACC904D0()
{
  uint64_t v1 = *v0;
  unsigned int v2 = (void *)sub_1ACE76178();
  id v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  return v3;
}

id sub_1ACC90518(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v4 = *v3;
  char v8 = a3;
  char v5 = (void *)sub_1ACE76178();
  id v6 = objc_msgSend(v4, sel_fileExistsAtPath_isDirectory_, v5, &v8);

  return v6;
}

uint64_t sub_1ACC9059C()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  char v4 = 0;
  unsigned int v2 = (void *)sub_1ACE76178();
  LOBYTE(v1) = objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v4);

  return (v1 & v4);
}

void *sub_1ACC90624()
{
  return sub_1ACC90648();
}

void *sub_1ACC90648()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1ACE76178();
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel_subpathsOfDirectoryAtPath_error_, v1, v7);

  id v3 = v7[0];
  if (v2)
  {
    uint64_t v1 = (void *)sub_1ACE76578();
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v1;
}

void *sub_1ACC90728(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1ACC9074C(a1, a2, a3);
}

void *sub_1ACC9074C(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = v3;
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  id v7 = (void *)sub_1ACE74E18();
  if (a2)
  {
    type metadata accessor for URLResourceKey(0);
    a2 = (void *)sub_1ACE76558();
  }
  v13[0] = 0;
  id v8 = objc_msgSend(v4, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v7, a2, a3, v13);

  id v9 = v13[0];
  if (v8)
  {
    sub_1ACE74F28();
    id v4 = (void *)sub_1ACE76578();
    id v10 = v9;
  }
  else
  {
    id v11 = v13[0];
    sub_1ACE74D78();

    swift_willThrow();
  }
  return v4;
}

id sub_1ACC90870()
{
  return sub_1ACC90894();
}

id sub_1ACC90894()
{
  uint64_t v1 = v0;
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = (void *)sub_1ACE74E18();
  id v3 = (void *)sub_1ACE74E18();
  v6[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_moveItemAtURL_toURL_error_, v2, v3, v6);

  if (v1) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_1ACE74D78();

  return (id)swift_willThrow();
}

void sub_1ACC90978()
{
  id v1 = objc_msgSend(*v0, sel_temporaryDirectory);
  sub_1ACE74E98();
}

void sub_1ACC909D8(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = sub_1ACE76CE8();
  uint64_t v5 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v12 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE76E98();
  MEMORY[0x1F4188790](v11);
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_10;
  }
  if (v7)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    unint64_t v10 = sub_1ACC92774();
    if (a2 < a1 || v7 < 0) {
      goto LABEL_11;
    }
    v8[0] = v2;
    unsigned int v9 = *MEMORY[0x1E4FBCC68];
    v8[1] = 0x80000001ACECE7D0;
    while (a2 != a1)
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_1ACE77268();
      sub_1ACE762C8();
      uint64_t v14 = a1;
      sub_1ACE777C8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x1E4FBC860];
      sub_1ACC927B4(&qword_1E99F48F0, MEMORY[0x1E4FBCCA0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F48F8);
      sub_1ACAC5D64(&qword_1E99F4900, &qword_1E99F48F8);
      sub_1ACE770E8();
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v12, v9, v13);
      sub_1ACE76EA8();
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      if (a2 == ++a1) {
        return;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t sub_1ACC90CD0()
{
  sub_1ACC909D8(0, 5);
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F48C0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  qword_1E99F48B0 = result;
  *(void *)algn_1E99F48B8 = v1;
  return result;
}

uint64_t DispatchWorkgroup.init(count:label:)@<X0>(uint64_t result@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1ACC92044(0, result, a2, a3);
    uint64_t v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F48C0);
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *a4 = result;
    a4[1] = v6;
  }
  return result;
}

uint64_t static DispatchWorkgroup.swiftConcurrency.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E99F00B0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1E99F48B8;
  *a1 = qword_1E99F48B0;
  a1[1] = v2;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t DispatchWorkgroup.schedulerRing.getter()
{
  return swift_retain();
}

uint64_t DispatchWorkgroup.workloops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DispatchWorkgroup.init(workloops:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F48C0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *a2 = result;
  a2[1] = a1;
  return result;
}

uint64_t DispatchWorkgroup.enqueue(perform:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1ACE75E48();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2[1];
  id v21 = *v2;
  id v22 = v11;
  uint64_t v12 = v21 + 4;
  uint64_t v13 = v21 + 6;
  os_unfair_lock_lock(v21 + 6);
  sub_1ACC922F0(v12, aBlock);
  os_unfair_lock_unlock(v13);
  uint64_t result = aBlock[0];
  if (((unint64_t)v11 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x1AD119490](aBlock[0], v11);
    goto LABEL_5;
  }
  if ((aBlock[0] & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (aBlock[0] < *(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)&v11[2 * aBlock[0] + 8]._os_unfair_lock_opaque;
LABEL_5:
    unint64_t v16 = v15;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = a2;
    aBlock[4] = sub_1ACB5C124;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_52;
    id v18 = _Block_copy(aBlock);
    swift_retain();
    sub_1ACE75E08();
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1ACC927B4((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v10, v7, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
    return swift_release();
  }
  __break(1u);
  return result;
}

void *sub_1ACC911B4@<X0>(void *result@<X0>, unint64_t a2@<X2>, void *a3@<X8>)
{
  id v3 = result;
  uint64_t v5 = *result;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v5 == v7) {
      goto LABEL_3;
    }
  }
  else if (v5 == *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v6 = 0;
LABEL_6:
    *id v3 = v6;
    *a3 = v5;
    return result;
  }
  uint64_t v6 = v5 + 1;
  if (!__OFADD__(v5, 1)) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t DispatchWorkgroup.runVerySlow<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return MEMORY[0x1F4188298](sub_1ACC91288, 0, 0);
}

{
  _OWORD *v4;
  uint64_t v5;

  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return MEMORY[0x1F4188298](sub_1ACC914EC, 0, 0);
}

uint64_t sub_1ACC91288()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *id v4 = v0;
  v4[1] = sub_1ACC91384;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v6, 0, 0, 0xD000000000000017, 0x80000001ACECE790, sub_1ACC92344, v2, v5);
}

uint64_t sub_1ACC91384()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACC1F9CC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACC914EC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *id v4 = v0;
  v4[1] = sub_1ACC915E8;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x1F41880D8](v6, 0, 0, 0xD000000000000017, 0x80000001ACECE790, sub_1ACC92378, v2, v5);
}

uint64_t sub_1ACC915E8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t DispatchWorkgroup.runThreadBlocking<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return MEMORY[0x1F4188298](sub_1ACC91724, 0, 0);
}

{
  _OWORD *v4;
  uint64_t v5;

  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *v4;
  return MEMORY[0x1F4188298](sub_1ACC91C98, 0, 0);
}

uint64_t sub_1ACC91724()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1ACC91820;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v6, 0, 0, 0xD00000000000001DLL, 0x80000001ACECE7B0, sub_1ACC923E0, v2, v5);
}

uint64_t sub_1ACC91820()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACC92800, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACC9195C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a4;
  uint64_t v23 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v13 = sub_1ACE76708();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v22 - v16, a1, v13, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v22;
  *((void *)v19 + 2) = a6;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  swift_retain();
  DispatchWorkgroup.enqueue(perform:)(v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1ACC91ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - v10;
  v12(v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  sub_1ACE76708();
  sub_1ACE766F8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, a4);
}

uint64_t sub_1ACC91C98()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1ACC927FC;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x1F41880D8](v6, 0, 0, 0xD00000000000001DLL, 0x80000001ACECE7B0, sub_1ACC92414, v2, v5);
}

uint64_t sub_1ACC91D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a4;
  uint64_t v23 = a8;
  uint64_t v13 = sub_1ACE76708();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v22 - v16, a1, v13, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v22;
  *((void *)v19 + 2) = a6;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  swift_retain();
  DispatchWorkgroup.enqueue(perform:)(v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1ACC91F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  v12(v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, a4);
  sub_1ACE76708();
  sub_1ACE766F8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, a4);
}

void sub_1ACC92044(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v16 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  __n128 v15 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE76E98();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_10;
  }
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v19 = a2;
    sub_1ACE773D8();
    uint64_t v11 = v19;
    unint64_t v14 = sub_1ACC92774();
    if (v11 < a1 || v10 < 0) {
      goto LABEL_11;
    }
    v12[1] = v4;
    unsigned int v13 = *MEMORY[0x1E4FBCC68];
    while (v11 != a1)
    {
      v17(a1);
      uint64_t v20 = MEMORY[0x1E4FBC860];
      sub_1ACC927B4(&qword_1E99F48F0, MEMORY[0x1E4FBCCA0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F48F8);
      sub_1ACAC5D64(&qword_1E99F4900, &qword_1E99F48F8);
      sub_1ACE770E8();
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v15, v13, v16);
      sub_1ACE76EA8();
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      uint64_t v11 = v19;
      if (v19 == ++a1) {
        return;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void *sub_1ACC922F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACC911B4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACC9230C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC92344(uint64_t a1)
{
  return sub_1ACC923AC(a1, (uint64_t)&unk_1F0393D88, (uint64_t)sub_1ACC9257C, sub_1ACC9195C);
}

uint64_t sub_1ACC92378(uint64_t a1)
{
  return sub_1ACC923AC(a1, (uint64_t)&unk_1F0393D60, (uint64_t)sub_1ACC92574, sub_1ACC91D94);
}

uint64_t sub_1ACC923AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, uint64_t, uint64_t))
{
  return a4(a1, v4[3], v4[4], v4[5], v4[6], v4[2], a2, a3);
}

uint64_t sub_1ACC923E0(uint64_t a1)
{
  return sub_1ACC923AC(a1, (uint64_t)&unk_1F0393D38, (uint64_t)sub_1ACC9257C, sub_1ACC9195C);
}

uint64_t sub_1ACC92414(uint64_t a1)
{
  return sub_1ACC923AC(a1, (uint64_t)&unk_1F0393D10, (uint64_t)sub_1ACC92574, sub_1ACC91D94);
}

uint64_t destroy for DispatchWorkgroup()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s18PodcastsFoundation17DispatchWorkgroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DispatchWorkgroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DispatchWorkgroup(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DispatchWorkgroup()
{
  return &type metadata for DispatchWorkgroup;
}

uint64_t sub_1ACC92584()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(sub_1ACE76708() - 8);
  return sub_1ACC91F0C(v0[3], v0[4], (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1);
}

uint64_t objectdestroy_11Tm_1()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v1 = sub_1ACE76708();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACC926F0()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t v2 = *(void *)(sub_1ACE76708() - 8);
  return sub_1ACC91ADC(v0[3], v0[4], (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1);
}

unint64_t sub_1ACC92774()
{
  unint64_t result = qword_1E99F48E8;
  if (!qword_1E99F48E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E99F48E8);
  }
  return result;
}

uint64_t sub_1ACC927B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of DownloadLibrary.downloadedAssets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of DownloadLibrary.remove(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ModifiableFormat.with(format:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1ACC92840(uint64_t a1)
{
  unint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(v1 + 40);
    int v5 = *(unsigned __int8 *)(v1 + 48);
    swift_beginAccess();
    sub_1ACA44774(v4, v5);
    sub_1ACC98158(a1, v1 + 56);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    MEMORY[0x1F4188790](v6);
    if (v5)
    {
      if (v5 != 1) {
        return;
      }
      sub_1ACC97824(v4, (void (*)(uint64_t))sub_1ACA44790);
    }
    else
    {
      uint64_t v7 = *(void (**)(uint64_t))(*(void *)v4 + 104);
      swift_retain();
      v7(a1);
      sub_1ACA447E4(v4, 0);
    }
    sub_1ACA447E4(v4, v5);
  }
  else
  {
    os_unfair_lock_unlock(v3);
  }
}

void sub_1ACC929D0(void *a1)
{
  v12[8] = a1;
  unint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    *(unsigned char *)(v1 + 24) = 0;
    swift_beginAccess();
    uint64_t v4 = *(void **)(v1 + 32);
    *(void *)(v1 + 32) = a1;
    id v5 = a1;
    sub_1ACAC8D64(v4);
    swift_beginAccess();
    uint64_t v6 = *(void *)(v1 + 40);
    int v7 = *(unsigned __int8 *)(v1 + 48);
    *(void *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 48) = 2;
    sub_1ACA44774(v6, v7);
    sub_1ACA447E4(v6, v7);
    os_unfair_lock_unlock(v3);
    MEMORY[0x1F4188790](v8);
    if (v7)
    {
      if (v7 != 1) {
        return;
      }
      sub_1ACC97824(v6, (void (*)(uint64_t))sub_1ACC986C8);
      uint64_t v9 = v6;
      char v10 = 1;
    }
    else
    {
      v12[0] = a1;
      uint64_t v11 = *(void (**)(void *))(*(void *)v6 + 112);
      swift_retain();
      v11(v12);
      sub_1ACA447E4(v6, 0);
      uint64_t v9 = v6;
      char v10 = 0;
    }
    sub_1ACA447E4(v9, v10);
  }
  else
  {
    os_unfair_lock_unlock(v3);
  }
}

uint64_t AssetReaderTimelineAligner.__allocating_init(catalog:cache:episodeID:logger:signposter:workQueue:elapsedTimeProvider:analyticsChannel:)(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_allocObject();
  uint64_t v17 = sub_1ACC97B14((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t AssetReaderTimelineAligner.init(catalog:cache:episodeID:logger:signposter:workQueue:elapsedTimeProvider:analyticsChannel:)(void *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = sub_1ACC97B14((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t AssetReaderTimelineAligner.align(asset:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4908);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_started);
  uint64_t v9 = (char *)&v8[4];
  uint64_t v10 = v8 + 5;
  os_unfair_lock_lock(v8 + 5);
  sub_1ACC28E68(v9, (BOOL *)v13);
  os_unfair_lock_unlock(v10);
  if (v13[0] == 1) {
    sub_1ACC93134(a1);
  }
  *(void *)unsigned int v13 = *(void *)(v2 + 32);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4918);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4920);
  sub_1ACA51EA4(&qword_1E99F4928, &qword_1E99F4918);
  sub_1ACE75AE8();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F4930, &qword_1E99F4908);
  uint64_t v11 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_1ACC92E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC9860C(a1, a2);
}

Swift::Void __swiftcall AssetReaderTimelineAligner.pauseReadingIfNeeded()()
{
}

Swift::Void __swiftcall AssetReaderTimelineAligner.resumeReadingIfNeeded()()
{
}

Swift::Void __swiftcall AssetReaderTimelineAligner.cancelReading()()
{
}

uint64_t AssetReaderTimelineAligner.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_logger;
  uint64_t v2 = sub_1ACE754C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  uint64_t v4 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACA8EF4C(v0 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider);
  return v0;
}

uint64_t AssetReaderTimelineAligner.__deallocating_deinit()
{
  AssetReaderTimelineAligner.deinit();
  return swift_deallocClassInstance();
}

void sub_1ACC93098()
{
}

uint64_t sub_1ACC930C0(void *a1)
{
  return AssetReaderTimelineAligner.align(asset:)(a1);
}

void sub_1ACC930E4()
{
}

void sub_1ACC9310C()
{
}

void sub_1ACC93134(void *a1)
{
  void (*v39)(uint64_t *__return_ptr, void **);
  void *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  NSObject *v55;
  os_signpost_type_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint8_t *v61;
  os_signpost_id_t v62;
  uint8_t *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  void *v81;
  NSObject *v82;
  os_signpost_type_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  const char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint8_t *v92;
  os_signpost_id_t v93;
  void (*v94)(char *, uint64_t);
  void v95[2];
  void *v96;
  unint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  void *v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  _UNKNOWN **v119;
  uint64_t v120;
  uint64_t v121;

  uint64_t v106 = sub_1ACE75448();
  uint64_t v103 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  v100 = (char *)v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v98 = (char *)v95 - v5;
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v104 = *(void *)(v6 - 8);
  uint64_t v105 = v6;
  MEMORY[0x1F4188790](v6);
  id v102 = (char *)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE753F8();
  uint64_t v112 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unsigned int v13 = (char *)v95 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v114 = (char *)v95 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v95 - v17;
  long long v113 = v1;
  uint64_t v19 = v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  sub_1ACE75428();
  sub_1ACE753C8();
  uint64_t v109 = v19;
  uint64_t v20 = sub_1ACE75428();
  os_signpost_type_t v21 = sub_1ACE76E18();
  char v22 = sub_1ACE76FA8();
  unint64_t v111 = v8;
  uint64_t v99 = v13;
  if (v22)
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    uint64_t v24 = a1;
    uint64_t v25 = v10;
    unint64_t v26 = (v112 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v27 = v114;
    v23(v114, v18, v8);
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    os_signpost_id_t v29 = sub_1ACE753D8();
    BOOL v30 = v23;
    unint64_t v31 = v26;
    uint64_t v10 = v25;
    a1 = v24;
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v20, v21, v29, "AlignmentReadCache", "", v28, 2u);
    id v32 = v28;
    uint64_t v8 = v111;
    MEMORY[0x1AD11B340](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v27, v8);
  }
  else
  {

    BOOL v30 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    unint64_t v31 = (v112 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v101 = v30;
  v30(v114, v18, v8);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v33 = sub_1ACE75468();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v112 + 8);
  v34(v18, v8);
  id v35 = a1;
  sub_1ACC97188(&v115);
  uint64_t v36 = v116;
  if (v116)
  {
    uint64_t v110 = v115;
  }
  else
  {
    uint64_t v110 = v35;
  }
  id v37 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
  char v38 = sub_1ACABCBA4(0xD00000000000001BLL, 0x80000001ACECE970, 1);

  uint64_t v112 = v33;
  uint64_t v108 = v34;
  if (v38)
  {
    if (v36)
    {
      id v39 = *(void (**)(uint64_t *__return_ptr, void **))(v113 + 40);
      uint64_t v97 = v31;
      id v40 = v110;
      uint64_t v115 = v110;
      long long v116 = v36;
      sub_1ACC98148(v110, v36, 0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v39(&v120, &v115);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_1ACC98138(v40, v36, 0);
      uint64_t v96 = (void *)v120;
      if (v120)
      {
        uint64_t v41 = v35;
        unint64_t v42 = sub_1ACE75498();
        long long v43 = sub_1ACE76C08();
        if (os_log_type_enabled(v42, v43))
        {
          unint64_t v44 = swift_slowAlloc();
          v100 = (char *)swift_slowAlloc();
          uint64_t v115 = v100;
          *(_DWORD *)unint64_t v44 = 141558275;
          id v120 = 1752392040;
          v95[1] = &v121;
          sub_1ACE76FF8();
          *(_WORD *)(v44 + 12) = 2081;
          uint64_t v45 = objc_msgSend(v41, sel_URL, v44 + 14);
          id v46 = v102;
          sub_1ACE74E98();

          sub_1ACC981C0((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
          id v47 = v105;
          id v48 = sub_1ACE777C8();
          id v50 = v49;
          (*(void (**)(char *, uint64_t))(v104 + 8))(v46, v47);
          id v120 = sub_1ACA3189C(v48, v50, (uint64_t *)&v115);
          sub_1ACE76FF8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AC9D5000, v42, v43, "Using in-memory alignment cache for asset: %{private,mask.hash}s", (uint8_t *)v44, 0x16u);
          uint64_t v51 = v100;
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v51, -1, -1);
          MEMORY[0x1AD11B340](v44, -1, -1);
        }
        else
        {
        }
        unsigned __int8 v79 = v106;
        id v80 = v99;
        uint64_t v81 = v96;
        uint64_t v118 = type metadata accessor for AssetReaderTimelineAlignment();
        uint64_t v119 = &protocol witness table for AssetReaderTimelineAlignment;
        uint64_t v115 = v81;
        swift_retain();
        sub_1ACC92840((uint64_t)&v115);
        sub_1ACA50E78((uint64_t)&v115, &qword_1E99F4978);
        os_log_type_t v82 = sub_1ACE75428();
        sub_1ACE75458();
        id v83 = sub_1ACE76E08();
        if (sub_1ACE76FA8())
        {
          swift_retain();
          uint64_t v84 = v98;
          sub_1ACE75488();
          id v85 = v84;
          swift_release();
          id v86 = v103;
          if ((*(unsigned int (**)(char *, uint64_t))(v103 + 88))(v85, v79) == *MEMORY[0x1E4FBD340])
          {
            v87 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v79);
            v87 = "HIT";
          }
          uint64_t v88 = v114;
          uint64_t v89 = v36;
          uint64_t v90 = v111;
          v101(v114, v80, v111);
          id v91 = v80;
          uint64_t v92 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v92 = 0;
          id v93 = sub_1ACE753D8();
          _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v82, v83, v93, "AlignmentReadCache", v87, v92, 2u);
          MEMORY[0x1AD11B340](v92, -1, -1);
          swift_release();

          sub_1ACC98138(v110, v89, 0);
          uint64_t v94 = v108;
          v108(v91, v90);
          swift_release();
          v94(v88, v90);
        }
        else
        {
          sub_1ACC98138(v110, v36, 0);

          swift_release();
          v108(v80, v111);
          swift_release();
        }
        return;
      }
    }
  }
  else
  {
    os_log_type_t v52 = sub_1ACE75498();
    BOOL v53 = sub_1ACE76C08();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_1AC9D5000, v52, v53, "Cache is disabled via debug settings. Visit pcast://debugmenu.", v54, 2u);
      MEMORY[0x1AD11B340](v54, -1, -1);
    }
  }
  uint64_t v107 = v36;
  uint64_t v55 = sub_1ACE75428();
  sub_1ACE75458();
  id v56 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    uint64_t v57 = v100;
    sub_1ACE75488();
    swift_release();
    uint64_t v58 = v103;
    uint64_t v59 = v106;
    if ((*(unsigned int (**)(char *, uint64_t))(v103 + 88))(v57, v106) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v60 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
      uint64_t v60 = "MISS";
    }
    v101(v114, v10, v111);
    id v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v61 = 0;
    id v62 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v55, v56, v62, "AlignmentReadCache", v60, v61, 2u);
    id v63 = v61;
    os_log_type_t v64 = v111;
    MEMORY[0x1AD11B340](v63, -1, -1);

    BOOL v65 = v108;
    v108(v10, v64);
    v65(v114, v64);
  }
  else
  {

    uint64_t v114 = v10;
    v108(v10, v111);
  }
  id v66 = v35;
  id v67 = sub_1ACE75498();
  uint64_t v68 = sub_1ACE76C08();
  if (os_log_type_enabled(v67, v68))
  {
    unsigned int v69 = swift_slowAlloc();
    id v70 = (void *)swift_slowAlloc();
    uint64_t v115 = v70;
    *(_DWORD *)unsigned int v69 = 141558275;
    id v120 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v69 + 12) = 2081;
    uint64_t v114 = (char *)(v69 + 14);
    uint64_t v71 = objc_msgSend(v66, sel_URL);
    id v72 = v102;
    sub_1ACE74E98();

    sub_1ACC981C0((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
    unsigned __int8 v73 = v105;
    os_log_type_t v74 = sub_1ACE777C8();
    long long v76 = v75;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v72, v73);
    id v120 = sub_1ACA3189C(v74, v76, (uint64_t *)&v115);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v67, v68, "Generating alignments for asset: %{private,mask.hash}s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v70, -1, -1);
    MEMORY[0x1AD11B340](v69, -1, -1);
  }
  else
  {
  }
  id v77 = v107;
  os_log_type_t v78 = v110;
  uint64_t v115 = v110;
  long long v116 = v107;
  v117 = v107 == 0;
  sub_1ACC93E38(v66, (uint64_t)&v115);
  swift_release();
  sub_1ACC98138(v78, v77, v77 == 0);
}

uint64_t sub_1ACC93E38(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v76 = v6;
  unsigned __int8 v79 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v7 - 8);
  id v75 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1ACE75438();
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v71 = v9;
  v87 = (char *)v69 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4990);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  id v72 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4998);
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v78 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v89 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE753F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v69 - v18;
  uint64_t v20 = *(void **)a2;
  uint64_t v85 = *(void *)(a2 + 8);
  id v86 = v20;
  int v84 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v91 = v2;
  unint64_t v21 = v2 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  sub_1ACE75428();
  sub_1ACE753C8();
  unint64_t v83 = v21;
  char v22 = sub_1ACE75428();
  os_signpost_type_t v23 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v24(v16, v19, v13);
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v82 = (uint64_t)a1;
    unint64_t v26 = v25;
    *(_WORD *)uint64_t v25 = 0;
    os_signpost_id_t v27 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v22, v23, v27, "AlignmentAssetRead", "", v26, 2u);
    uint64_t v28 = v26;
    a1 = (void *)v82;
    MEMORY[0x1AD11B340](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {

    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  }
  v24(v16, v19, v13);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v82 = sub_1ACE75468();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  uint64_t v29 = v91;
  sub_1ACC94874(a1);
  id v92 = *(id *)(v29 + 24);
  id v30 = v92;
  type metadata accessor for ShazamMatcher();
  sub_1ACC981C0(&qword_1E99F49A0, (void (*)(uint64_t))type metadata accessor for ShazamMatcher);
  swift_retain();
  sub_1ACE75878();
  swift_release();
  swift_release();
  id v92 = v30;
  uint64_t v31 = v90;
  v69[0] = *(void *)(v90 + 16);
  id v32 = v87;
  uint64_t v33 = v88;
  ((void (*)(char *, unint64_t, uint64_t))v69[0])(v87, v83, v88);
  uint64_t v34 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v35 = v31;
  v69[1] = v34 | 7;
  uint64_t v36 = (v34 + 16) & ~v34;
  uint64_t v70 = v36;
  unint64_t v37 = ((unint64_t)v71 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  uint64_t v71 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
  uint64_t v90 = v35 + 32;
  v71(v38 + v36, v32, v33);
  *(void *)(v38 + v37) = v82;
  unint64_t v39 = v37;
  sub_1ACC981C0(&qword_1E99F49A8, (void (*)(uint64_t))type metadata accessor for ShazamMatcher);
  swift_retain();
  swift_retain();
  id v40 = v72;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v41 = v91;
  id v92 = *(id *)(v91 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_workQueue);
  id v42 = v92;
  uint64_t v43 = sub_1ACE76CA8();
  uint64_t v44 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v75, 1, 1, v43);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F49B0, &qword_1E99F4990);
  sub_1ACA93A6C();
  id v45 = v42;
  uint64_t v46 = v74;
  sub_1ACE75CA8();
  sub_1ACA50E78(v44, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v40, v46);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = v41;
  swift_weakInit();
  uint64_t v49 = *(char **)(v41 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_analyticsChannel);
  uint64_t v74 = *(void *)(v41 + 32);
  id v75 = v49;
  id v50 = v87;
  uint64_t v51 = v88;
  ((void (*)(char *, unint64_t, uint64_t))v69[0])(v87, v83, v88);
  unint64_t v52 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v83 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  v71(v54 + v70, v50, v51);
  unint64_t v55 = v83;
  *(void *)(v54 + v39) = v82;
  uint64_t v56 = v74;
  *(void *)(v54 + v52) = v74;
  *(void *)(v54 + v53) = v47;
  unint64_t v57 = v54 + v55;
  uint64_t v58 = v85;
  *(void *)unint64_t v57 = v86;
  *(void *)(v57 + 8) = v58;
  *(unsigned char *)(v57 + 16) = v84;
  *(void *)(v54 + ((v53 + 39) & 0xFFFFFFFFFFFFFFF8)) = v49;
  uint64_t v60 = v79;
  uint64_t v59 = v80;
  uint64_t v61 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v48 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_logger, v81);
  unint64_t v62 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v63 = (v76 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v64 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(void *)(v64 + v63) = v56;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = sub_1ACC984CC;
  *(void *)(v65 + 24) = v64;
  swift_retain_n();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1ACC98148(v86, v85, v84);
  sub_1ACA51EA4(&qword_1E99F49B8, &qword_1E99F4998);
  uint64_t v66 = v78;
  id v67 = v89;
  sub_1ACE75B88();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v67, v66);
  swift_beginAccess();
  sub_1ACE75828();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1ACC94874(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F49D8);
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider;
  if (!MEMORY[0x1AD11B470](v1 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider, v5))goto LABEL_4; {
  uint64_t v9 = *(void *)(v8 + 8);
  }
  uint64_t ObjectType = swift_getObjectType();
  double v11 = COERCE_DOUBLE((*(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 8))(a1, ObjectType, v9));
  double v13 = v12;
  char v15 = v14;
  swift_unknownObjectRelease();
  if ((v15 & 1) != 0
    || (sub_1ACC960EC((uint64_t)v27, v11, v13),
        sub_1ACA50E14((uint64_t)v27, (uint64_t)&v29, &qword_1E99F49E0),
        (v33 & 1) != 0))
  {
LABEL_4:
    long long v16 = *(_OWORD *)(MEMORY[0x1E4F1FA30] + 16);
    long long v34 = *MEMORY[0x1E4F1FA30];
    long long v35 = v16;
    long long v36 = *(_OWORD *)(MEMORY[0x1E4F1FA30] + 32);
    return sub_1ACC9629C(a1, &v34, 0);
  }
  else
  {
    uint64_t v19 = v29;
    uint64_t v20 = v32;
    unsigned int v21 = v30;
    unsigned int v22 = v31;
    uint64_t v23 = sub_1ACE76F28();
    *(void *)&long long v34 = v19;
    *((void *)&v34 + 1) = __PAIR64__(v22, v21);
    *(void *)&long long v35 = v20;
    *((void *)&v35 + 1) = v23;
    *(void *)&long long v36 = v24;
    *((void *)&v36 + 1) = v25;
    sub_1ACE76B78();
    v26[1] = sub_1ACC9629C(a1, &v34, 2);
    v26[0] = sub_1ACC9629C(a1, v28, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F49E8);
    sub_1ACA51EA4(&qword_1E99F49F0, &qword_1E99F49E8);
    sub_1ACE75BF8();
    swift_release();
    swift_release();
    sub_1ACA51EA4(&qword_1E99F49F8, &qword_1E99F49D8);
    uint64_t v17 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v17;
}

uint64_t sub_1ACC94B58()
{
  uint64_t v0 = sub_1ACE75448();
  uint64_t v19 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE753F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_1ACE75428();
  sub_1ACE75458();
  os_signpost_type_t v11 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v12 = v19;
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v2, v0) == *MEMORY[0x1E4FBD340])
    {
      double v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v0);
      double v13 = "CANCELLED";
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    char v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v15 = 0;
    os_signpost_id_t v16 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v10, v11, v16, "AlignmentAssetRead", v13, v15, 2u);
    MEMORY[0x1AD11B340](v15, -1, -1);

    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v17)(v6, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

void sub_1ACC94E1C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, int a8, void *a9)
{
  int v66 = a8;
  unint64_t v67 = a7;
  unint64_t v65 = a6;
  id v70 = a9;
  uint64_t v71 = a4;
  uint64_t v11 = sub_1ACE75448();
  uint64_t v68 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  os_signpost_id_t v16 = (char *)&v64 - v15;
  uint64_t v17 = sub_1ACE753F8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  unsigned int v69 = (char *)&v64 - v22;
  MEMORY[0x1F4188790](v23);
  unint64_t v26 = (char *)&v64 - v25;
  os_signpost_id_t v27 = *a1;
  if (v27)
  {
    uint64_t v28 = v24;
    id v29 = v27;
    unsigned int v30 = sub_1ACE75428();
    sub_1ACE75458();
    os_signpost_type_t v31 = sub_1ACE76E08();
    if (sub_1ACE76FA8())
    {
      swift_retain();
      sub_1ACE75488();
      swift_release();
      uint64_t v32 = v68;
      if ((*(unsigned int (**)(char *, uint64_t))(v68 + 88))(v13, v11) == *MEMORY[0x1E4FBD340])
      {
        char v33 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v11);
        char v33 = "FAILED";
      }
      uint64_t v41 = v69;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v69, v20, v28);
      id v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v42 = 0;
      os_signpost_id_t v43 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v30, v31, v43, "AlignmentAssetRead", v33, v42, 2u);
      MEMORY[0x1AD11B340](v42, -1, -1);

      uint64_t v44 = *(void (**)(char *, uint64_t))(v18 + 8);
      v44(v20, v28);
      v44(v41, v28);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v28);
    }
    unint64_t v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v74 = 0xD000000000000020;
    unint64_t v75 = 0x80000001ACECE9B0;
    id v45 = (void *)sub_1ACE74D68();
    id v46 = objc_msgSend(v45, sel_code);

    id v73 = v46;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    id v47 = _s18PodcastsFoundation14AnalyticsEventC25transcriptAlignmentFailed6reasonACSS_tFZ_0();
    swift_bridgeObjectRelease();
    objc_msgSend(v70, sel_sendEvent_, v47);

    sub_1ACC98674();
    uint64_t v48 = (void *)swift_allocError();
    *uint64_t v49 = v27;
    id v50 = v27;
    sub_1ACC929D0(v48);

    goto LABEL_22;
  }
  uint64_t v64 = a5;
  unint64_t v34 = v65;
  uint64_t v35 = v24;
  long long v36 = sub_1ACE75428();
  sub_1ACE75458();
  os_signpost_type_t v37 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v38 = v68;
    if ((*(unsigned int (**)(char *, uint64_t))(v68 + 88))(v16, v11) == *MEMORY[0x1E4FBD340])
    {
      unint64_t v39 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v11);
      unint64_t v39 = "SUCCESS";
    }
    unint64_t v40 = v34;
    uint64_t v51 = v69;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v69, v26, v35);
    unint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v52 = 0;
    os_signpost_id_t v53 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v36, v37, v53, "AlignmentAssetRead", v39, v52, 2u);
    MEMORY[0x1AD11B340](v52, -1, -1);

    uint64_t v54 = *(void (**)(char *, uint64_t))(v18 + 8);
    v54(v26, v35);
    v54(v51, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v35);
    unint64_t v40 = v34;
  }
  uint64_t v55 = v71;
  uint64_t v56 = (os_unfair_lock_s *)(*(void *)(v71 + 16) + 16);
  os_unfair_lock_lock(v56);
  swift_beginAccess();
  sub_1ACC9860C(v55 + 56, (uint64_t)&v74);
  os_unfair_lock_unlock(v56);
  char v57 = v66;
  unint64_t v58 = v67;
  if (!v77)
  {
    sub_1ACA50E78((uint64_t)&v74, &qword_1E99F4978);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4920);
  uint64_t v59 = type metadata accessor for AssetReaderTimelineAlignment();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    id v61 = v70;
    id v62 = _s18PodcastsFoundation14AnalyticsEventC25transcriptAlignmentFailed6reasonACSS_tFZ_0();
    objc_msgSend(v61, sel_sendEvent_, v62);

    sub_1ACC98674();
    uint64_t v48 = (void *)swift_allocError();
    *unint64_t v63 = 0;
    sub_1ACC929D0(v48);
LABEL_22:

    return;
  }
  unint64_t v60 = v72;
  sub_1ACA85B7C();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    unint64_t v74 = v40;
    unint64_t v75 = v58;
    char v76 = v57 & 1;
    sub_1ACC95584(v60, (uint64_t)&v74);
    swift_release();
  }
  uint64_t v77 = v59;
  uint64_t v78 = &protocol witness table for AssetReaderTimelineAlignment;
  unint64_t v74 = v60;
  swift_retain();
  sub_1ACC92840((uint64_t)&v74);
  sub_1ACA50E78((uint64_t)&v74, &qword_1E99F4978);
  sub_1ACC929D0(0);
  swift_release();
}

void sub_1ACC95584(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v65 = a1;
  uint64_t v5 = sub_1ACE75448();
  uint64_t v63 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v62 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE753F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  double v13 = (char *)&v54 - v12;
  MEMORY[0x1F4188790](v14);
  os_signpost_id_t v16 = (char *)&v54 - v15;
  uint64_t v17 = *(void **)a2;
  uint64_t v18 = *(void *)(a2 + 8);
  if (*(unsigned char *)(a2 + 16))
  {
    id v19 = v17;
    sub_1ACC97188(&v68);
    sub_1ACC98138(v17, v18, 1);
    uint64_t v17 = v68;
    uint64_t v18 = v69;
    if (v69)
    {
LABEL_3:
      uint64_t v56 = v5;
      id v61 = v10;
      uint64_t v20 = (char *)v3 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
      sub_1ACE75428();
      sub_1ACE753C8();
      uint64_t v59 = v20;
      uint64_t v21 = sub_1ACE75428();
      os_signpost_type_t v22 = sub_1ACE76E18();
      char v23 = sub_1ACE76FA8();
      uint64_t v64 = v7;
      os_log_t v66 = v3;
      uint64_t v60 = (uint64_t)v17;
      if (v23)
      {
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        unint64_t v25 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v24(v13, v16, v7);
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v26 = 0;
        os_signpost_id_t v27 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v21, v22, v27, "AlignmentWriteCache", "", v26, 2u);
        uint64_t v28 = v26;
        uint64_t v7 = v64;
        MEMORY[0x1AD11B340](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else
      {

        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        unint64_t v25 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      }
      uint64_t v55 = v24;
      v24(v13, v16, v7);
      sub_1ACE75478();
      swift_allocObject();
      sub_1ACE75468();
      char v57 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v58 = v8 + 8;
      v57(v16, v7);
      Class isa = v66[7].isa;
      uint64_t v67 = v65;
      uint64_t v68 = (void *)v60;
      uint64_t v69 = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      ((void (*)(uint64_t *, void **))isa)(&v67, &v68);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      char v33 = sub_1ACE75428();
      unint64_t v34 = v61;
      sub_1ACE75458();
      os_signpost_type_t v35 = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        long long v36 = v13;
        unint64_t v65 = v25;
        os_signpost_type_t v37 = v55;
        swift_retain();
        uint64_t v38 = v62;
        sub_1ACE75488();
        swift_release();
        uint64_t v39 = v63;
        uint64_t v40 = v56;
        if ((*(unsigned int (**)(char *, uint64_t))(v63 + 88))(v38, v56) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v41 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
          uint64_t v41 = "SUCCESS";
        }
        uint64_t v42 = v64;
        v37(v36, v34, v64);
        os_signpost_id_t v43 = v34;
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        os_signpost_id_t v45 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v33, v35, v45, "AlignmentWriteCache", v41, v44, 2u);
        MEMORY[0x1AD11B340](v44, -1, -1);

        id v46 = v57;
        v57(v43, v42);
        v46(v36, v42);
      }
      else
      {

        v57(v34, v64);
      }
      os_log_t v47 = v66;
      swift_retain_n();
      uint64_t v48 = sub_1ACE75498();
      os_log_type_t v49 = sub_1ACE76C08();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 141558275;
        uint64_t v67 = 1752392040;
        uint64_t v68 = (void *)v51;
        sub_1ACE76FF8();
        *(_WORD *)(v50 + 12) = 2081;
        uint64_t v67 = (uint64_t)v47[13].isa;
        sub_1ACA55E4C();
        uint64_t v52 = sub_1ACE770B8();
        uint64_t v67 = sub_1ACA3189C(v52, v53, (uint64_t *)&v68);
        sub_1ACE76FF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v48, v49, "Writing alignment to disk for %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v51, -1, -1);
        MEMORY[0x1AD11B340](v50, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      swift_release();

      return;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_3;
    }
  }
  os_log_t v66 = (os_log_t)sub_1ACE75498();
  os_log_type_t v29 = sub_1ACE76BE8();
  if (os_log_type_enabled(v66, v29))
  {
    unsigned int v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v30 = 0;
    _os_log_impl(&dword_1AC9D5000, v66, v29, "Stream was never cached to disk. Skipping cache write.", v30, 2u);
    MEMORY[0x1AD11B340](v30, -1, -1);
  }
  os_log_t v31 = v66;
}

void sub_1ACC95CAC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)&double v11 = MEMORY[0x1F4188790](v9).n128_u64[0];
  double v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, sel_mediaItems, v11);
  sub_1ACA50D4C(0, &qword_1E99F49C0);
  unint64_t v15 = sub_1ACE76578();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    os_signpost_id_t v16 = (void *)sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  os_signpost_id_t v16 = *(void **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16) {
    goto LABEL_16;
  }
LABEL_3:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v17 = (id)MEMORY[0x1AD119490](0, v15);
  }
  else
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    id v17 = *(id *)(v15 + 32);
  }
  os_signpost_id_t v16 = v17;
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_signatureAlignments);
  if (v18)
  {
    id v19 = v18;
    sub_1ACA50D4C(0, &qword_1E99F49C8);
    a4 = sub_1ACE76578();

    uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a5 + 16) + 16);
    os_unfair_lock_lock(v20);
    swift_beginAccess();
    sub_1ACC9860C(a5 + 56, (uint64_t)v28);
    os_unfair_lock_unlock(v20);
    if (v29)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4920);
      uint64_t v21 = type metadata accessor for AssetReaderTimelineAlignment();
      if (swift_dynamicCast())
      {
        os_log_t v22 = v27[1];
LABEL_14:
        sub_1ACA84FE8(a4);
        swift_bridgeObjectRelease();
        type metadata accessor for AssetReaderTimelineAlignment();
        uint64_t v29 = v21;
        unsigned int v30 = &protocol witness table for AssetReaderTimelineAlignment;
        v28[0] = v22;
        swift_retain();
        sub_1ACC92840((uint64_t)v28);
        swift_release();

        sub_1ACA50E78((uint64_t)v28, &qword_1E99F4978);
        return;
      }
    }
    else
    {
      sub_1ACA50E78((uint64_t)v28, &qword_1E99F4978);
    }
    unint64_t v5 = sub_1ACA3A054(MEMORY[0x1E4FBC860]);
    if (qword_1E99EFEF0 == -1)
    {
LABEL_13:
      uint64_t v23 = __swift_project_value_buffer(v9, (uint64_t)qword_1E99F2C10);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v23, v9);
      uint64_t v21 = type metadata accessor for AssetReaderTimelineAlignment();
      swift_allocObject();
      os_log_t v22 = (os_log_t)sub_1ACA84ED4(v5, 0, 1, 3, 2000000000000000000, 0, (uint64_t)v13);
      goto LABEL_14;
    }
LABEL_24:
    swift_once();
    goto LABEL_13;
  }

LABEL_17:
  v27[0] = (os_log_t)sub_1ACE75498();
  os_log_type_t v24 = sub_1ACE76BE8();
  if (os_log_type_enabled(v27[0], v24))
  {
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v25 = 0;
    _os_log_impl(&dword_1AC9D5000, v27[0], v24, "Expected to receive signature alignments for a match.", v25, 2u);
    MEMORY[0x1AD11B340](v25, -1, -1);
  }
  os_log_t v26 = v27[0];
}

uint64_t sub_1ACC960EC@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  if (a2 >= 6.0)
  {
    if (a3 - a2 < 6.0)
    {
      id v14 = sub_1ACE75498();
      os_log_type_t v15 = sub_1ACE76C08();
      if (os_log_type_enabled(v14, v15))
      {
        os_signpost_id_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_signpost_id_t v16 = 0;
        _os_log_impl(&dword_1AC9D5000, v14, v15, "Adjusting match buffer start point since we're close to the end of the episode.", v16, 2u);
        MEMORY[0x1AD11B340](v16, -1, -1);
      }
    }
    uint64_t v8 = sub_1ACE76F38();
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    uint64_t result = sub_1ACE76F38();
  }
  else
  {
    unint64_t v5 = sub_1ACE75498();
    os_log_type_t v6 = sub_1ACE76C08();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1AC9D5000, v5, v6, "Playhead is near start of episode, reading from beginning", v7, 2u);
      MEMORY[0x1AD11B340](v7, -1, -1);
    }

    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t result = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = result;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(unsigned char *)(a1 + 48) = a2 < 6.0;
  return result;
}

uint64_t sub_1ACC9629C(void *a1, _OWORD *a2, int a3)
{
  int v35 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A00);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A08);
  uint64_t v13 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  os_log_type_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A10);
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  long long v36 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A18);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  os_signpost_type_t v37 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[0] = v3;
  uint64_t v18 = sub_1ACBF8C54(a1, a2);
  id v19 = *(void **)(v3 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_workQueue);
  id v42 = v19;
  uint64_t v43 = v18;
  uint64_t v20 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
  id v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A20);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  v33[1] = MEMORY[0x1E4F1AAE8];
  sub_1ACA51EA4(&qword_1E99F4A28, &qword_1E99F4A20);
  sub_1ACA93A6C();
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v8, &qword_1EB7669C8);

  swift_release();
  sub_1ACA51EA4(&qword_1E99F4A30, &qword_1E99F4A00);
  sub_1ACE75C58();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v22 = *(void *)(v33[0] + 24);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  LOBYTE(v10) = v35;
  *(unsigned char *)(v23 + 24) = v35;
  swift_retain();
  uint64_t v24 = sub_1ACC969CC(0x94049F30F7200000, 97, (uint64_t)sub_1ACC98768, v23);
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v34);
  uint64_t v43 = v24;
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = v10;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1ACC98784;
  *(void *)(v26 + 24) = v25;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A40);
  sub_1ACA51EA4(&qword_1E99F4A48, &qword_1E99F4A38);
  sub_1ACA51EA4(&qword_1E99F4A50, &qword_1E99F4A40);
  os_signpost_id_t v27 = v36;
  sub_1ACE75C78();
  swift_release();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F4A58, &qword_1E99F4A10);
  swift_retain();
  uint64_t v28 = v38;
  uint64_t v29 = v37;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v28);
  sub_1ACA51EA4(&qword_1E99F4A60, &qword_1E99F4A18);
  uint64_t v30 = v39;
  uint64_t v31 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v30);
  return v31;
}

void sub_1ACC96940(uint64_t a1, uint64_t a2, int a3)
{
  id v6 = objc_msgSend(*(id *)(a1 + 16), sel_signature);
  long long v5 = *(_OWORD *)(a1 + 40);
  v7[0] = *(_OWORD *)(a1 + 24);
  v7[1] = v5;
  id v7[2] = *(_OWORD *)(a1 + 56);
  sub_1ACAC6FE8(v6, (uint64_t *)v7, a3);
}

uint64_t sub_1ACC969CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A78);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A80);
  uint64_t v12 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SignatureGenerator();
  uint64_t v15 = swift_allocObject();
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F3BEC0]), sel_init);
  uint64_t v17 = MEMORY[0x1E4F1FA30];
  uint64_t v18 = *MEMORY[0x1E4F1FA30];
  uint64_t v19 = *(void *)(MEMORY[0x1E4F1FA30] + 40);
  *(void *)(v15 + 16) = v16;
  *(void *)(v15 + 24) = v18;
  *(void *)(v15 + 32) = *(void *)(v17 + 8);
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(v17 + 16);
  *(void *)(v15 + 56) = *(void *)(v17 + 32);
  *(void *)(v15 + 64) = v19;
  uint64_t v26 = v15;
  uint64_t v27 = 0;
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a1;
  v20[3] = a2;
  v20[4] = a3;
  v20[5] = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A88);
  sub_1ACA51EA4(&qword_1E99F4A90, &qword_1E99F4A08);
  sub_1ACE75B78();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A98);
  sub_1ACA51EA4(&qword_1E99F4AA0, &qword_1E99F4A78);
  sub_1ACE75AE8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1ACA51EA4(&qword_1E99F4AA8, &qword_1E99F4A80);
  uint64_t v21 = v25;
  uint64_t v22 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  return v22;
}

uint64_t sub_1ACC96D18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4A68);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = a1;
  type metadata accessor for SignatureGenerator();
  swift_retain();
  sub_1ACE759C8();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(unsigned char *)(v10 + 24) = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A50);
  sub_1ACA51EA4(&qword_1E99F4A70, &qword_1E99F4A68);
  sub_1ACE75B38();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1ACC96EC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3;
  uint64_t v5 = a4;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v23 = a4;
    swift_bridgeObjectRetain();
    uint64_t v9 = (CMTimeEpoch *)(a2 + 80);
    long long v26 = *(_OWORD *)(MEMORY[0x1E4F1FA30] + 16);
    long long v27 = *(_OWORD *)(MEMORY[0x1E4F1FA30] + 32);
    long long v25 = *MEMORY[0x1E4F1FA30];
    while (1)
    {
      uint64_t v10 = *(v9 - 1);
      CMTimeEpoch epoch = *v9;
      uint64_t v12 = *(v9 - 3);
      CMTimeValue value = *(v9 - 2);
      uint64_t v14 = *(v9 - 4);
      uint64_t v15 = (void *)*(v9 - 6);
      uint64_t v16 = *(v9 - 5);
      long long v17 = *(_OWORD *)(v6 + 40);
      long long v31 = *(_OWORD *)(v6 + 24);
      long long v32 = v17;
      long long v33 = *(_OWORD *)(v6 + 56);
      long long v35 = v26;
      long long v36 = v27;
      long long v34 = v25;
      id v18 = v15;
      if ((sub_1ACE76B48() & 1) == 0)
      {
        uint64_t v14 = *((void *)&v31 + 1);
        uint64_t v16 = v31;
        uint64_t v12 = v32;
        rhs.CMTimeEpoch epoch = epoch;
        lhs.CMTimeValue value = *((void *)&v32 + 1);
        *(_OWORD *)&lhs.timescale = v33;
        rhs.CMTimeValue value = value;
        *(void *)&rhs.timescale = v10;
        CMTimeAdd(&v28, &lhs, &rhs);
        CMTimeValue value = v28.value;
        uint64_t v10 = *(void *)&v28.timescale;
        CMTimeEpoch epoch = v28.epoch;
      }
      *(void *)(v6 + 24) = v16;
      *(void *)(v6 + 32) = v14;
      *(void *)(v6 + 40) = v12;
      *(void *)(v6 + 48) = value;
      *(void *)(v6 + 56) = v10;
      *(void *)(v6 + 64) = epoch;
      uint64_t v19 = *(void **)(v6 + 16);
      lhs.CMTimeValue value = 0;
      if (!objc_msgSend(v19, sel_appendBuffer_atTime_error_, v18, 0, &lhs, v23)) {
        break;
      }
      id v20 = (id)lhs.value;

      v9 += 7;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        char v4 = a3;
        uint64_t v5 = v23;
        goto LABEL_8;
      }
    }
    id v22 = (id)lhs.value;
    sub_1ACE74D78();

    swift_willThrow();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    id result = objc_msgSend(*(id *)(v6 + 16), sel_signature);
    *(void *)uint64_t v5 = result;
    *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 24);
    *(_OWORD *)(v5 + 24) = *(_OWORD *)(v6 + 40);
    *(_OWORD *)(v5 + 40) = *(_OWORD *)(v6 + 56);
    *(unsigned char *)(v5 + 56) = v4;
  }
  return result;
}

void sub_1ACC970F8()
{
  sub_1ACE758F8();
  uint64_t v0 = v2;
  if (v2)
  {
    uint64_t v2 = (void *)v3;
    uint64_t v3 = *(void *)v4;
    *(_OWORD *)char v4 = *(_OWORD *)&v4[8];
    *(void *)&v4[16] = v5;
    uint64_t v5 = v6;
    id v1 = v0;
    sub_1ACAC6FE8(v1, (uint64_t *)&v2, v7);
  }
}

uint64_t sub_1ACC97188@<X0>(void *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v46 = type metadata accessor for MediaStreamedAssetCache.StreamPhase(0);
  MEMORY[0x1F4188790](v46);
  uint64_t v47 = (uint64_t)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - v11;
  *(void *)&double v14 = MEMORY[0x1F4188790](v13).n128_u64[0];
  uint64_t v16 = (char *)&v42 - v15;
  long long v17 = v1;
  id v18 = objc_msgSend(v1, sel_URL, v14);
  sub_1ACE74E98();

  LOBYTE(v18) = sub_1ACE74D98();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v16, v6);
  if (v18)
  {
    id v20 = objc_msgSend(v17, sel_URL);
    sub_1ACE74E98();

    uint64_t result = AlignmentRequest.init(url:)((uint64_t)v16, &v49);
    uint64_t v22 = v50;
    uint64_t v23 = v48;
    *uint64_t v48 = v49;
    v23[1] = v22;
    return result;
  }
  uint64_t v43 = v9;
  uint64_t v44 = v7;
  os_signpost_id_t v45 = v5;
  id v24 = objc_msgSend(v17, sel_URL);
  sub_1ACE74E98();

  id v25 = objc_allocWithZone((Class)type metadata accessor for MediaStreamedAssetCache(0));
  long long v26 = (void *)sub_1ACE74E18();
  id v27 = objc_msgSend(self, sel_streamedMediaAssetURL);
  sub_1ACE74E98();

  CMTime v28 = (void *)sub_1ACE74E18();
  v19(v12, v6);
  uint64_t v29 = (char *)objc_msgSend(v25, sel_initWithSourceURL_cacheLocation_purgeability_, v26, v28, 512);

  v19(v16, v6);
  if (!v29)
  {
    uint64_t v37 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v6);
    uint64_t v39 = v48;
LABEL_10:
    uint64_t result = sub_1ACA50E78(v37, &qword_1EB7731B0);
    *uint64_t v39 = 0;
    v39[1] = 0;
    return result;
  }
  id v42 = (uint64_t (*)(char *, uint64_t))v19;
  uint64_t v30 = *(void *)&v29[OBJC_IVAR___PFMediaStreamedAssetCache_phase];
  uint64_t v31 = v30 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v30 + 16);
  long long v32 = (os_unfair_lock_s *)(v30 + ((*(unsigned int *)(*(void *)v30 + 48) + 3) & 0x1FFFFFFFCLL));
  long long v33 = v29;
  os_unfair_lock_lock(v32);
  uint64_t v34 = v47;
  sub_1ACB510E4(v31, v47);
  os_unfair_lock_unlock(v32);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = v44;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v37 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v45, v34, v6);
    uint64_t v38 = 0;
    uint64_t v39 = v48;
  }
  else
  {
    sub_1ACB437D0(v34);
    uint64_t v38 = 1;
    uint64_t v39 = v48;
    uint64_t v37 = (uint64_t)v45;
  }
  uint64_t v40 = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v37, v38, 1, v6);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v6) == 1)
  {

    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v40, v37, v6);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v16, v40, v6);
  AlignmentRequest.init(url:)((uint64_t)v16, &v49);

  uint64_t result = v42(v40, v6);
  uint64_t v41 = v50;
  *uint64_t v39 = v49;
  v39[1] = v41;
  return result;
}

uint64_t sub_1ACC97684@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void **)(*a1 + 16);
  swift_retain();
  objc_msgSend(v8, sel_duration);
  sub_1ACE77D18();
  if (sub_1ACE77CD8())
  {
    a3(v6);
    type metadata accessor for SignatureGenerator();
    uint64_t v9 = swift_allocObject();
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F3BEC0]), sel_init);
    uint64_t v11 = MEMORY[0x1E4F1FA30];
    uint64_t v12 = *MEMORY[0x1E4F1FA30];
    uint64_t v13 = *(void *)(MEMORY[0x1E4F1FA30] + 40);
    *(void *)(v9 + 16) = v10;
    *(void *)(v9 + 24) = v12;
    *(void *)(v9 + 32) = *(void *)(v11 + 8);
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v11 + 16);
    *(void *)(v9 + 56) = *(void *)(v11 + 32);
    *(void *)(v9 + 64) = v13;
    swift_release();
    uint64_t v6 = v9;
  }
  *a4 = v6;
  a4[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACC9779C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3) {
    uint64_t v4 = swift_retain();
  }
  else {
    uint64_t v4 = 0;
  }
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACC977EC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC97824(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77138();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4980);
    sub_1ACA51EA4(&qword_1E99F4988, &qword_1E99F4980);
    uint64_t result = sub_1ACE76A28();
    uint64_t v5 = v22;
    uint64_t v21 = v23;
    uint64_t v7 = v24;
    int64_t v8 = v25;
    unint64_t v9 = v26;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v8 = 0;
  }
  int64_t v20 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    int64_t v16 = v8;
    if ((v5 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1ACE771A8()) {
      return sub_1ACA50A70();
    }
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4980);
    swift_dynamicCast();
    uint64_t v15 = v27;
    swift_unknownObjectRelease();
    if (!v27) {
      return sub_1ACA50A70();
    }
LABEL_10:
    a2(v15);
    uint64_t result = swift_release();
    if (v3) {
      return sub_1ACA50A70();
    }
  }
  if (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_9:
    uint64_t v15 = *(void *)(*(void *)(v5 + 48) + 8 * v14);
    swift_retain();
    if (!v15) {
      return sub_1ACA50A70();
    }
    goto LABEL_10;
  }
  ++v8;
  if (!__OFADD__(v16, 1))
  {
    if (v8 >= v20) {
      return sub_1ACA50A70();
    }
    unint64_t v17 = *(void *)(v21 + 8 * v8);
    if (!v17)
    {
      int64_t v18 = v16 + 2;
      if (v16 + 2 >= v20) {
        return sub_1ACA50A70();
      }
      unint64_t v17 = *(void *)(v21 + 8 * v18);
      if (v17) {
        goto LABEL_22;
      }
      int64_t v18 = v16 + 3;
      if (v16 + 3 >= v20) {
        return sub_1ACA50A70();
      }
      unint64_t v17 = *(void *)(v21 + 8 * v18);
      if (v17) {
        goto LABEL_22;
      }
      int64_t v18 = v16 + 4;
      if (v16 + 4 >= v20) {
        return sub_1ACA50A70();
      }
      unint64_t v17 = *(void *)(v21 + 8 * v18);
      if (v17)
      {
LABEL_22:
        int64_t v8 = v18;
      }
      else
      {
        int64_t v8 = v16 + 5;
        if (v16 + 5 >= v20) {
          return sub_1ACA50A70();
        }
        unint64_t v17 = *(void *)(v21 + 8 * v8);
        if (!v17)
        {
          int64_t v19 = v16 + 6;
          while (v20 != v19)
          {
            unint64_t v17 = *(void *)(v21 + 8 * v19++);
            if (v17)
            {
              int64_t v8 = v19 - 1;
              goto LABEL_23;
            }
          }
          return sub_1ACA50A70();
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACC97B14(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v45 = a8;
  uint64_t v46 = a7;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v42 = a4;
  uint64_t v14 = sub_1ACE754C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *a2;
  long long v40 = a2[1];
  long long v41 = v18;
  long long v19 = a2[2];
  long long v38 = a2[3];
  long long v39 = v19;
  uint64_t v48 = 0;
  memset(v47, 0, sizeof(v47));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4918);
  uint64_t v20 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  *(void *)(v20 + 16) = v21;
  *(unsigned char *)(v20 + 24) = 1;
  *(_OWORD *)(v20 + 32) = xmmword_1ACE8BD70;
  *(unsigned char *)(v20 + 48) = 2;
  *(void *)(v20 + 96) = MEMORY[0x1E4FBC860];
  sub_1ACA50E14((uint64_t)v47, v20 + 56, &qword_1E99F4978);
  *(void *)(v10 + 32) = v20;
  uint64_t v22 = OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_started;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v23 = swift_allocObject();
  *(_DWORD *)(v23 + 20) = 0;
  *(unsigned char *)(v23 + 16) = 0;
  *(void *)(v10 + v22) = v23;
  *(void *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_subscriptions) = MEMORY[0x1E4FBC870];
  uint64_t v24 = v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider;
  *(void *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_elapsedTimeProvider + 8) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for AssetReader.StateController();
  int64_t v25 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4AB0);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 20) = 0;
  *(unsigned char *)(v26 + 16) = 0;
  v25[3] = 0;
  v25[4] = 0;
  _OWORD v25[2] = v26;
  if (qword_1E99EFEB0 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_1E99F2638;
  type metadata accessor for AssetReader();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 32) = 0u;
  *(_OWORD *)(v28 + 48) = 0u;
  *(_OWORD *)(v28 + 64) = 0u;
  *(unsigned char *)(v28 + 80) = 1;
  *(void *)(v28 + 88) = 0;
  *(void *)(v28 + 16) = v25;
  *(void *)(v28 + 24) = v27;
  *(void *)(v10 + 16) = v28;
  uint64_t v29 = qword_1E99EFEF0;
  id v30 = v27;
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v31 = __swift_project_value_buffer(v14, (uint64_t)qword_1E99F2C10);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v31, v14);
  if (qword_1E99EFEB8 != -1) {
    swift_once();
  }
  long long v32 = (void *)qword_1E99F2640;
  type metadata accessor for ShazamMatcher();
  swift_allocObject();
  id v33 = v32;
  uint64_t v34 = sub_1ACAC9660(a1, (uint64_t)v17, v33);

  *(void *)(v10 + 24) = v34;
  *(_OWORD *)(v10 + 40) = v41;
  *(_OWORD *)(v10 + 56) = v40;
  *(_OWORD *)(v10 + 72) = v39;
  *(_OWORD *)(v10 + 88) = v38;
  *(void *)(v10 + 104) = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_logger, v42, v14);
  uint64_t v35 = v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_signposter;
  uint64_t v36 = sub_1ACE75438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, v43, v36);
  *(void *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_workQueue) = v44;
  *(void *)(v24 + 8) = v45;
  swift_unknownObjectWeakAssign();
  *(void *)(v10 + OBJC_IVAR____TtC18PodcastsFoundation26AssetReaderTimelineAligner_analyticsChannel) = a9;
  return v10;
}

uint64_t dispatch thunk of ElapsedTimeProviding.timing(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACC97F64()
{
  return type metadata accessor for AssetReaderTimelineAligner();
}

uint64_t type metadata accessor for AssetReaderTimelineAligner()
{
  uint64_t result = qword_1E99F4968;
  if (!qword_1E99F4968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACC97FB8()
{
  uint64_t result = sub_1ACE754C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE75438();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for AssetReaderTimelineAligner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetReaderTimelineAligner);
}

uint64_t dispatch thunk of AssetReaderTimelineAligner.__allocating_init(catalog:cache:episodeID:logger:signposter:workQueue:elapsedTimeProvider:analyticsChannel:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t type metadata accessor for SignatureGenerator()
{
  return self;
}

void sub_1ACC98138(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_1ACC98148(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1ACC98158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACC981C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACC98208()
{
  return objectdestroyTm_16(MEMORY[0x1E4FBD330]);
}

uint64_t sub_1ACC98220()
{
  sub_1ACE75438();
  return sub_1ACC94B58();
}

uint64_t sub_1ACC982AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACC982E4()
{
  uint64_t v1 = sub_1ACE75438();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  sub_1ACC98138(*(void **)(v0 + v4), *(void *)(v0 + v4 + 8), *(unsigned char *)(v0 + v4 + 16));
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1ACC983E0(void **a1)
{
  uint64_t v3 = *(void *)(sub_1ACE75438() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1ACC94E1C(a1, v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v7), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(void **)(v1 + ((v7 + 39) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1ACC984B4()
{
  return objectdestroyTm_16(MEMORY[0x1E4FBD360]);
}

void sub_1ACC984CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1ACE754C8() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACC95CAC(a1, a2, a3, v3 + v8, v9);
}

uint64_t sub_1ACC98580()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC985B8(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t, _OWORD *, void))(v1 + 16);
  uint64_t v3 = *a1;
  long long v4 = *(_OWORD *)(a1 + 3);
  v6[0] = *(_OWORD *)(a1 + 1);
  v6[1] = v4;
  id v6[2] = *(_OWORD *)(a1 + 5);
  return v2(v3, v6, *((unsigned __int8 *)a1 + 56));
}

uint64_t sub_1ACC9860C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACC98674()
{
  unint64_t result = qword_1E99F49D0;
  if (!qword_1E99F49D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F49D0);
  }
  return result;
}

uint64_t sub_1ACC986C8(uint64_t a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  return (*(uint64_t (**)(uint64_t *))(*(void *)a1 + 112))(&v3);
}

uint64_t sub_1ACC98730()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC98768(uint64_t a1)
{
  sub_1ACC96940(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1ACC98774()
{
  return swift_deallocObject();
}

uint64_t sub_1ACC98784(uint64_t a1, uint64_t a2)
{
  return sub_1ACC96D18(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1ACC9878C(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_1ACC987BC()
{
}

uint64_t sub_1ACC987C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1ACC987FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACC96EC0(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_1ACC9881C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACC98854@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1ACC97684(a1, a2, *(void (**)(uint64_t))(v3 + 32), a3);
}

uint64_t dispatch thunk of DatabaseRepresentable.init(model:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static DatabaseRepresentable.databaseEntityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DatabaseRepresentable.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DatabaseRepresentable.objectID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DatabaseRepresentable.alignID(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of DatabaseRepresentable.alignID(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

id PodcastFeedDownloader.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PodcastFeedDownloader.init()()
{
  uint64_t v0 = (objc_class *)type metadata accessor for MediaRequestController();
  id v1 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  _OWORD v13[3] = v0;
  v13[4] = &protocol witness table for MediaRequestController;
  v13[0] = v1;
  uint64_t v2 = (objc_class *)type metadata accessor for PodcastFeedDownloader();
  id v3 = objc_allocWithZone(v2);
  uint64_t v4 = (uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController;
  sub_1ACA3E158((uint64_t)v13, (uint64_t)v3 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  id v8 = v1;
  id v9 = v3;
  v7(1, v5, v6);
  swift_endAccess();

  v12.receiver = v9;
  v12.super_class = v2;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t type metadata accessor for PodcastFeedDownloader()
{
  return self;
}

uint64_t sub_1ACC98AA4(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v52 = a7;
  uint64_t v50 = a6;
  int v48 = a5;
  int v51 = a4;
  uint64_t v47 = a2;
  uint64_t v45 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v46 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = 0;
  long long v58 = 0u;
  long long v59 = 0u;
  char v61 = 4;
  v53[0] = 1;
  char v57 = 1;
  char v56 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  long long v43 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &unk_1F0380D20;
  unint64_t v44 = sub_1ACA364C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v43;
  id v16 = objc_msgSend(a1, sel_description);
  uint64_t v17 = sub_1ACE761B8();
  uint64_t v19 = v18;

  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 40) = v19;
  char v55 = 1;
  char v54 = 1;
  uint64_t v20 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  swift_bridgeObjectRetain();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  unint64_t v22 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v23 = sub_1ACA35F90(v21);
  unint64_t v24 = sub_1ACA35FB0(v21);
  unint64_t v25 = sub_1ACA360BC(v21);
  unint64_t v26 = sub_1ACA360DC(v21);
  *((void *)&v42 + 1) = sub_1ACA360FC(v21);
  *(void *)&long long v42 = v26;
  *(void *)&long long v41 = v21;
  *((void *)&v41 + 1) = v21;
  *((void *)&v40 + 1) = v21;
  *((void *)&v39 + 1) = v25;
  *(void *)&long long v40 = v44;
  *(void *)&long long v39 = v21;
  uint64_t v27 = v46;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v58, v53, &v57, &v56, v22, v23, v24, v21, v46, v39, v40, v41, v15, &v55, 300, 0, v42, 0, 1,
    &v54,
    1,
    (uint64_t)v11,
    0,
    0,
    v48,
    0,
    0,
    v21,
    v47,
    a3,
    2);
  uint64_t v28 = v49;
  uint64_t v29 = (uint64_t)v49 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController;
  swift_beginAccess();
  sub_1ACA3E158(v29, (uint64_t)&v58);
  uint64_t v30 = *((void *)&v59 + 1);
  uint64_t v31 = v60;
  __swift_project_boxed_opaque_existential_1(&v58, *((uint64_t *)&v59 + 1));
  uint64_t v32 = swift_allocObject();
  id v33 = v45;
  uint64_t v34 = v50;
  *(void *)(v32 + 16) = v45;
  *(void *)(v32 + 24) = v34;
  *(void *)(v32 + 32) = v52;
  *(unsigned char *)(v32 + 40) = v51;
  *(void *)(v32 + 48) = v28;
  uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v31 + 40);
  id v36 = v33;
  swift_retain();
  id v37 = v28;
  v35(v27, sub_1ACC99D48, v32, v30, v31);
  swift_release();
  sub_1ACA39598(v27);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v58);
}

void sub_1ACC98EA4(unint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, void (*a7)(void, void, void, uint64_t), uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v126 = a7;
  v124 = a4;
  uint64_t v123 = a3;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v122 = (uint64_t)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_1ACE754C8();
  unint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v20 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v116 - v22;
  MEMORY[0x1F4188790](v24);
  unint64_t v26 = (char *)&v116 - v25;
  if (a5)
  {
    uint64_t v27 = a6;
    id v28 = a5;
    id v125 = a5;
    id v120 = (id)sub_1ACE74D68();
    id v29 = objc_msgSend(v120, sel_userInfo);
    uint64_t v30 = sub_1ACE75FF8();

    uint64_t v31 = sub_1ACE761B8();
    if (*(void *)(v30 + 16) && (uint64_t v33 = sub_1ACA657FC(v31, v32), (v34 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v30 + 56) + 32 * v33, (uint64_t)&aBlock);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v130 + 1))
      {
        a6 = v27;
        if (swift_dynamicCast())
        {
          uint64_t v35 = v133[0];
          if ((a9 & 1) != 0 && v133[0] == 404)
          {
            if (qword_1EB768FA0 != -1) {
              swift_once();
            }
            uint64_t v36 = v128;
            uint64_t v37 = __swift_project_value_buffer(v128, (uint64_t)qword_1EB768F88);
            swift_beginAccess();
            (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v23, v37, v36);
            id v38 = v27;
            long long v39 = sub_1ACE75498();
            os_log_type_t v40 = sub_1ACE76C08();
            int v41 = v40;
            if (os_log_type_enabled(v39, v40))
            {
              os_log_t v118 = v39;
              int v119 = v41;
              long long v42 = (uint8_t *)swift_slowAlloc();
              long long v43 = (void *)swift_slowAlloc();
              v117 = v42;
              *(_DWORD *)long long v42 = 138412290;
              long long v116 = v42 + 4;
              *(void *)&long long aBlock = v38;
              id v44 = v38;
              a6 = v27;
              sub_1ACE76FF8();
              *long long v43 = v38;

              os_log_t v45 = v118;
              uint64_t v46 = v117;
              _os_log_impl(&dword_1AC9D5000, v118, (os_log_type_t)v119, "Failed to fetch episodes for podcast %@ with 404. Allowing it since allowEpisodesTo404 == true", v117, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
              swift_arrayDestroy();
              MEMORY[0x1AD11B340](v43, -1, -1);
              MEMORY[0x1AD11B340](v46, -1, -1);
            }
            else
            {
            }
            (*(void (**)(char *, uint64_t))(v127 + 8))(v23, v128);
            goto LABEL_30;
          }
          if (v133[0] >= 400 && v133[0] != 429)
          {
            id v64 = objc_msgSend(self, sel_sharedInstance);
            id v65 = objc_msgSend(v64, sel_importContext);

            os_log_t v66 = (void *)swift_allocObject();
            void v66[2] = v65;
            v66[3] = v27;
            v66[4] = v35;
            uint64_t v131 = sub_1ACC9AED0;
            id v132 = v66;
            *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
            *((void *)&aBlock + 1) = 1107296256;
            *(void *)&long long v130 = sub_1ACA6DA9C;
            *((void *)&v130 + 1) = &block_descriptor_53;
            uint64_t v67 = _Block_copy(&aBlock);
            id v68 = v27;
            id v69 = v65;
            swift_release();
            objc_msgSend(v69, sel_performBlock_, v67);
            _Block_release(v67);
          }
          if (qword_1EB768FA0 != -1) {
            swift_once();
          }
          uint64_t v70 = v128;
          uint64_t v71 = __swift_project_value_buffer(v128, (uint64_t)qword_1EB768F88);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v20, v71, v70);
          id v47 = v125;
          id v72 = v125;
          id v73 = v27;
          id v74 = v47;
          id v75 = v73;
          char v76 = sub_1ACE75498();
          os_log_type_t v77 = sub_1ACE76BE8();
          int v78 = v77;
          v124 = v76;
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v79 = swift_slowAlloc();
            LODWORD(v123) = v78;
            uint64_t v80 = v79;
            uint64_t v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v80 = 138412546;
            v133[0] = (uint64_t)v75;
            id v82 = v75;
            sub_1ACE76FF8();
            *uint64_t v81 = v75;

            *(_WORD *)(v80 + 12) = 2112;
            uint64_t v83 = sub_1ACE74D68();
            v133[0] = v83;
            sub_1ACE76FF8();
            v81[1] = v83;

            _os_log_impl(&dword_1AC9D5000, v124, (os_log_type_t)v123, "Failed to fetch episodes for podcast %@ with parse error: %@", (uint8_t *)v80, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v81, -1, -1);
            MEMORY[0x1AD11B340](v80, -1, -1);
          }
          else
          {
          }
          uint64_t v109 = v126;
          id v61 = v120;

          (*(void (**)(char *, uint64_t))(v127 + 8))(v20, v128);
          sub_1ACC9AEDC();
          uint64_t v110 = swift_allocError();
          *unint64_t v111 = 0;
          v109(0, 0, 0, v110);
          uint64_t v63 = (void *)v110;
LABEL_20:

          return;
        }
LABEL_14:
        id v47 = v125;
        if (qword_1EB768FA0 != -1) {
          swift_once();
        }
        uint64_t v48 = v128;
        uint64_t v49 = __swift_project_value_buffer(v128, (uint64_t)qword_1EB768F88);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v26, v49, v48);
        id v50 = v47;
        id v51 = a6;
        id v52 = v47;
        id v53 = v51;
        char v54 = sub_1ACE75498();
        os_log_type_t v55 = sub_1ACE76BE8();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = swift_slowAlloc();
          char v57 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = 138412546;
          v133[0] = (uint64_t)v53;
          uint64_t v121 = a8;
          id v58 = v53;
          sub_1ACE76FF8();
          *char v57 = v53;

          *(_WORD *)(v56 + 12) = 2112;
          uint64_t v59 = sub_1ACE74D68();
          v133[0] = v59;
          id v47 = v125;
          sub_1ACE76FF8();
          v57[1] = v59;

          _os_log_impl(&dword_1AC9D5000, v54, v55, "Failed to fetch episodes for podcast %@ with error: %@", (uint8_t *)v56, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v57, -1, -1);
          MEMORY[0x1AD11B340](v56, -1, -1);
        }
        else
        {
        }
        uint64_t v60 = (void (*)(void, void, void, id))v126;
        id v61 = v120;

        (*(void (**)(char *, uint64_t))(v127 + 8))(v26, v128);
        id v62 = v47;
        v60(0, 0, 0, v47);
        uint64_t v63 = v47;
        goto LABEL_20;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v130 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1ACA65828((uint64_t)&aBlock);
    a6 = v27;
    goto LABEL_14;
  }
LABEL_30:
  uint64_t v121 = a8;
  uint64_t v128 = a10;
  if (a1 && (int v84 = (void *)sub_1ACC2BADC(a1)) != 0)
  {
    id v125 = v84;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v125 = (id)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 40) = &unk_1F0380D70;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = &unk_1F0380D98;
  unint64_t v127 = sub_1ACA364C4(inited);
  uint64_t v131 = 0;
  long long aBlock = 0u;
  long long v130 = 0u;
  LOBYTE(v132) = 4;
  LOBYTE(v133[0]) = 1;
  char v137 = 1;
  char v136 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1ACE843F0;
  id v87 = objc_msgSend(a6, sel_description);
  uint64_t v88 = sub_1ACE761B8();
  uint64_t v89 = a6;
  uint64_t v91 = v90;

  *(void *)(v86 + 32) = v88;
  *(void *)(v86 + 40) = v91;
  char v135 = 1;
  char v134 = 1;
  uint64_t v92 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v16, 1, 1, v92);
  uint64_t v93 = MEMORY[0x1E4FBC860];
  unint64_t v94 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v95 = sub_1ACA35F90(v93);
  unint64_t v96 = sub_1ACA35FB0(v93);
  unint64_t v97 = sub_1ACA360BC(v93);
  unint64_t v98 = sub_1ACA360DC(v93);
  *((void *)&v115 + 1) = sub_1ACA360FC(v93);
  *(void *)&long long v115 = v98;
  *((void *)&v114 + 1) = v93;
  *((void *)&v113 + 1) = v93;
  *(void *)&long long v114 = v93;
  *((void *)&v112 + 1) = v97;
  *(void *)&long long v113 = v127;
  *(void *)&long long v112 = v93;
  uint64_t v99 = v122;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&aBlock, (char *)v133, &v137, &v136, v94, v95, v96, (uint64_t)&unk_1F0380D48, v122, v112, v113, v114, v86, &v135, 0, 1, v115, 0, 1,
    &v134,
    0,
    (uint64_t)v16,
    0,
    0,
    0,
    0,
    0,
    v93,
    0,
    0,
    2);
  uint64_t v100 = v128 + OBJC_IVAR____TtC18PodcastsFoundation21PodcastFeedDownloader_mediaRequestController;
  swift_beginAccess();
  sub_1ACA3E158(v100, (uint64_t)&aBlock);
  uint64_t v101 = *((void *)&v130 + 1);
  id v102 = v131;
  __swift_project_boxed_opaque_existential_1(&aBlock, *((uint64_t *)&v130 + 1));
  uint64_t v103 = (void *)swift_allocObject();
  uint64_t v104 = v126;
  v103[2] = v89;
  v103[3] = v104;
  uint64_t v105 = v123;
  v103[4] = v121;
  v103[5] = v105;
  id v106 = v125;
  v103[6] = v124;
  v103[7] = v106;
  uint64_t v107 = (void (*)(uint64_t, void, void *, uint64_t, void (*)()))*((void *)v102 + 5);
  swift_bridgeObjectRetain();
  id v108 = v89;
  swift_retain();
  v107(v99, sub_1ACC9AE58, v103, v101, v102);
  swift_release();
  sub_1ACA39598(v99);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
}

uint64_t sub_1ACC99D00()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACC99D48(unint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5)
{
  sub_1ACC98EA4(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void (**)(void, void, void, uint64_t))(v5 + 24), *(void *)(v5 + 32), *(unsigned char *)(v5 + 40), *(void *)(v5 + 48));
}

void sub_1ACC99D80(void *a1, void *a2, NSObject *a3)
{
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_podcastForStoreId_, objc_msgSend(a2, sel_longLongValue, v8));
  if (v11)
  {
    uint64_t v27 = a3;
    uint64_t v12 = qword_1EB768FA0;
    id v28 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB768F88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
    uint64_t v14 = a2;
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BE8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412546;
      uint64_t v24 = v6;
      id v29 = v14;
      unint64_t v26 = a1;
      uint64_t v19 = v14;
      uint64_t v25 = v10;
      uint64_t v20 = v19;
      uint64_t v6 = v24;
      sub_1ACE76FF8();
      *uint64_t v18 = v14;

      *(_WORD *)(v17 + 12) = 2048;
      id v29 = v27;
      uint64_t v10 = v25;
      a1 = v26;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v15, v16, "Failed to fetch episodes for podcast %@ with status %lld. Incrementing consecutiveFeedFetchErrors count", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }
    else
    {

      uint64_t v15 = v14;
    }
    uint64_t v21 = v28;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v22 = (char *)objc_msgSend(v21, sel_consecutiveFeedFetchErrors);
    if (__OFADD__(v22, 1))
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v21, sel_setConsecutiveFeedFetchErrors_, v22 + 1);
      objc_msgSend(a1, sel_saveInCurrentBlock);
    }
  }
}

void sub_1ACC9A0A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, void *a6, void (*a7)(uint64_t, uint64_t, unint64_t, void *), uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  uint64_t v91 = a7;
  uint64_t v15 = sub_1ACE754C8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v80 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v80 - v22;
  uint64_t v24 = sub_1ACE76218();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v92 = v16;
  if (!a1)
  {
LABEL_28:
    if (a5)
    {
      id v53 = a5;
      if (qword_1EB768FA0 != -1) {
        swift_once();
      }
      uint64_t v54 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      os_log_type_t v55 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v90, v54, v15);
      uint64_t v56 = a6;
      char v57 = a5;
      id v58 = a5;
      uint64_t v59 = (uint8_t *)sub_1ACE75498();
      os_log_type_t v60 = sub_1ACE76BE8();
      if (os_log_type_enabled((os_log_t)v59, v60))
      {
        uint64_t v61 = swift_slowAlloc();
        id v62 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 138412546;
        id v87 = v59;
        unint64_t v94 = v56;
        uint64_t v89 = v15;
        uint64_t v63 = v56;
        sub_1ACE76FF8();
        void *v62 = v56;

        *(_WORD *)(v61 + 12) = 2112;
        uint64_t v64 = sub_1ACE74D68();
        unint64_t v94 = v64;
        uint64_t v15 = v89;
        uint64_t v16 = v92;
        sub_1ACE76FF8();
        v62[1] = v64;

        id v65 = (uint8_t *)v87;
        _os_log_impl(&dword_1AC9D5000, v87, v60, "Failed to fetch podcast %@ for feed updates with error: %@", (uint8_t *)v61, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v62, -1, -1);
        uint64_t v66 = v61;
        os_log_type_t v55 = v90;
        MEMORY[0x1AD11B340](v66, -1, -1);
      }
      else
      {
      }
      os_log_type_t v77 = (char *)v58;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v55, v15);
      goto LABEL_40;
    }
    uint64_t v90 = 0;
    if (qword_1EB768FA0 == -1)
    {
LABEL_34:
      uint64_t v67 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v20, v67, v15);
      id v68 = a6;
      id v69 = sub_1ACE75498();
      os_log_type_t v70 = sub_1ACE76BE8();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        id v72 = (void *)swift_slowAlloc();
        id v87 = v71;
        *(_DWORD *)uint64_t v71 = 138412290;
        unint64_t v94 = v68;
        id v73 = v68;
        uint64_t v89 = v15;
        id v74 = v73;
        uint64_t v16 = v92;
        sub_1ACE76FF8();
        *id v72 = v68;
        id v75 = v72;

        uint64_t v15 = v89;
        char v76 = v87;
        _os_log_impl(&dword_1AC9D5000, v69, v70, "Failed to fetch podcast %@ for feed updates with unknown error", (uint8_t *)v87, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v75, -1, -1);
        MEMORY[0x1AD11B340](v76, -1, -1);
      }
      else
      {

        id v69 = v68;
      }
      os_log_type_t v77 = v90;

      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
      sub_1ACC9AEDC();
      id v58 = (void *)swift_allocError();
      *int v78 = 1;
LABEL_40:
      uint64_t v79 = v77;
      v91(0, 0, 0, v58);

      return;
    }
LABEL_43:
    swift_once();
    goto LABEL_34;
  }
  uint64_t v16 = v15;
  uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(a1 >> 62))
  {
    uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_4;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  if (!sub_1ACE77508()) {
    goto LABEL_26;
  }
LABEL_4:
  uint64_t v88 = a8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v26 = (uint8_t *)MEMORY[0x1AD119490](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v26 = *(uint8_t **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27)
  {
    swift_unknownObjectRelease();
LABEL_27:
    uint64_t v15 = v16;
    uint64_t v16 = v92;
    goto LABEL_28;
  }
  uint64_t v28 = v27;
  id v87 = v26;
  uint64_t v90 = a5;
  if (a10) {
    uint64_t v29 = a9;
  }
  else {
    uint64_t v29 = 0;
  }
  if (a10) {
    unint64_t v30 = a10;
  }
  else {
    unint64_t v30 = 0xE000000000000000;
  }
  sub_1ACE74928();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1ACE74918();
  uint64_t v86 = v28;
  uint64_t v95 = v28;
  sub_1ACC9AF30();
  uint64_t v31 = sub_1ACE74908();
  unint64_t v33 = v32;
  swift_release();
  sub_1ACE76208();
  uint64_t v34 = sub_1ACE761D8();
  if (v35)
  {
    uint64_t v95 = v34;
    unint64_t v96 = v35;
    sub_1ACA4F4AC();
    uint64_t v36 = sub_1ACE77098();
    swift_bridgeObjectRelease();
    uint64_t v95 = v36;
    sub_1ACE777C8();
  }
  sub_1ACA50850(v31, v33);
  uint64_t v95 = v29;
  unint64_t v96 = v30;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v95;
  unint64_t v38 = v96;
  if (qword_1EB768FA0 != -1) {
    swift_once();
  }
  uint64_t v85 = a11;
  uint64_t v39 = v16;
  uint64_t v40 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB768F88);
  swift_beginAccess();
  uint64_t v41 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v23, v40, v39);
  id v42 = a6;
  swift_bridgeObjectRetain_n();
  id v43 = v42;
  id v44 = sub_1ACE75498();
  os_log_type_t v45 = sub_1ACE76C08();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v81 = (void *)swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v93 = (uint64_t)v43;
    unint64_t v94 = v83;
    *(_DWORD *)uint64_t v46 = 138412546;
    os_log_t v82 = v44;
    int v84 = v23;
    uint64_t v89 = v39;
    id v47 = v43;
    sub_1ACE76FF8();
    uint64_t v48 = v81;
    *uint64_t v81 = v43;

    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1ACA3189C(v37, v38, (uint64_t *)&v94);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    os_log_t v49 = v82;
    _os_log_impl(&dword_1AC9D5000, v82, v45, "Completed feed update of %@ with hash %s", (uint8_t *)v46, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v48, -1, -1);
    uint64_t v50 = v83;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v50, -1, -1);
    MEMORY[0x1AD11B340](v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v84, v89);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v39);
  }
  uint64_t v51 = v86;
  id v52 = (void *)(v86 + OBJC_IVAR___MTServerPodcast_episodes);
  swift_beginAccess();
  void *v52 = v85;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  v91(v51, v37, v38, v90);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
}

void sub_1ACC9AC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    double v8 = (void *)sub_1ACE76178();
    if (a4)
    {
LABEL_3:
      uint64_t v9 = sub_1ACE74D68();
      goto LABEL_6;
    }
  }
  else
  {
    double v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  id v10 = (id)v9;
  (*(void (**)(uint64_t, uint64_t, void *))(a5 + 16))(a5, a1, v8);
}

id PodcastFeedDownloader.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastFeedDownloader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PodcastFeedDownloader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastFeedDownloader);
}

uint64_t dispatch thunk of PodcastFeedDownloader.downloadPodcast(_:triggerBy:allowEpisodesTo404:isImplicitActionRequest:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1ACC9ADC8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACC9AE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1ACC9AC98(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1ACC9AE08()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACC9AE58(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  sub_1ACC9A0A4(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void (**)(uint64_t, uint64_t, unint64_t, void *))(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56));
}

uint64_t sub_1ACC9AE90()
{
  return swift_deallocObject();
}

void sub_1ACC9AED0()
{
  sub_1ACC99D80(*(void **)(v0 + 16), *(void **)(v0 + 24), *(NSObject **)(v0 + 32));
}

unint64_t sub_1ACC9AEDC()
{
  unint64_t result = qword_1E99F4AC0;
  if (!qword_1E99F4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AC0);
  }
  return result;
}

unint64_t sub_1ACC9AF30()
{
  unint64_t result = qword_1EB766E48;
  if (!qword_1EB766E48)
  {
    type metadata accessor for ServerPodcast();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB766E48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PodcastFeedDownloader.PodcastFeedDownloaderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACC9B054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastFeedDownloader.PodcastFeedDownloaderError()
{
  return &type metadata for PodcastFeedDownloader.PodcastFeedDownloaderError;
}

unint64_t sub_1ACC9B090()
{
  unint64_t result = qword_1E99F4AC8;
  if (!qword_1E99F4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AC8);
  }
  return result;
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDataSource.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDataSource.observedShowKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDataSource.observedEpisodeKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EpisodeOnlyProcessorDataSource.episodesPredicate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerShowEpisodeProcessorDataSource.showsPredicate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerShowEpisodeProcessorDataSource.predicate(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)@<X0>(long long *a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, uint64_t a13, char *a14, uint64_t a15, char a16, long long a17, uint64_t a18, char a19, char *a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  long long v45 = a1[1];
  long long v46 = *a1;
  uint64_t v32 = *((void *)a1 + 4);
  char v43 = *a2;
  char v44 = *((unsigned char *)a1 + 40);
  char v33 = *a3;
  char v34 = *a4;
  char v47 = *a14;
  char v48 = *a20;
  unint64_t v35 = (int *)type metadata accessor for MediaRequest.Params();
  uint64_t v36 = a9 + v35[26];
  uint64_t v37 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
  unint64_t v38 = (void *)(a9 + v35[27]);
  *unint64_t v38 = 0;
  v38[1] = 0;
  uint64_t v39 = (void *)(a9 + v35[29]);
  *uint64_t v39 = 0;
  v39[1] = 0;
  uint64_t v40 = (void *)(a9 + v35[31]);
  *uint64_t v40 = 0;
  v40[1] = 0;
  uint64_t v41 = v35[32];
  *(unsigned char *)(a9 + v41) = 2;
  *(_OWORD *)a9 = v46;
  *(_OWORD *)(a9 + 16) = v45;
  *(void *)(a9 + 32) = v32;
  *(unsigned char *)(a9 + 40) = v44;
  *(unsigned char *)(a9 + 41) = v43;
  *(unsigned char *)(a9 + 42) = v33;
  *(unsigned char *)(a9 + 43) = v34;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a10;
  *(_OWORD *)(a9 + 96) = a11;
  *(_OWORD *)(a9 + 112) = a12;
  *(void *)(a9 + 128) = a13;
  *(unsigned char *)(a9 + 136) = v47;
  *(void *)(a9 + 144) = a15;
  *(unsigned char *)(a9 + 152) = a16 & 1;
  *(_OWORD *)(a9 + 160) = a17;
  *(void *)(a9 + 176) = a18;
  *(unsigned char *)(a9 + 184) = a19 & 1;
  *(unsigned char *)(a9 + 185) = v48;
  *(unsigned char *)(a9 + 186) = a21;
  sub_1ACC9B45C(a22, v36);
  swift_bridgeObjectRelease();
  *unint64_t v38 = a23;
  v38[1] = a24;
  *(unsigned char *)(a9 + v35[28]) = a25;
  swift_bridgeObjectRelease();
  *uint64_t v39 = a26;
  v39[1] = a27;
  *(void *)(a9 + v35[30]) = a28;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v40 = a29;
  v40[1] = a30;
  *(unsigned char *)(a9 + v41) = a31;
  return result;
}

uint64_t type metadata accessor for MediaRequest.Params()
{
  uint64_t result = qword_1EB7722E0;
  if (!qword_1EB7722E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACC9B45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t MediaRequest.Params.init(recommendationsWith:contentTypes:displayKinds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v6 - 8);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  long long v33 = 0u;
  long long v34 = 0u;
  char v35 = 1;
  char v31 = 6;
  char v30 = 1;
  char v29 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  long long v24 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &unk_1F037CD70;
  unint64_t v10 = sub_1ACA364C4(inited);
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = v24;
  *(unsigned char *)(v11 + 32) = 1;
  *(void *)(v11 + 40) = &unk_1F037CD98;
  unint64_t v12 = sub_1ACA364C4(v11);
  char v28 = 1;
  char v27 = 0;
  uint64_t v13 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v16 = sub_1ACA35F90(v14);
  unint64_t v17 = sub_1ACA35FB0(v14);
  unint64_t v18 = sub_1ACA360DC(v14);
  *((void *)&v23 + 1) = sub_1ACA360FC(v14);
  *(void *)&long long v23 = v18;
  *(void *)&long long v22 = &unk_1F037CDC0;
  *((void *)&v22 + 1) = v25;
  *(void *)&long long v21 = v12;
  *((void *)&v21 + 1) = v14;
  *(void *)&long long v20 = v14;
  *((void *)&v20 + 1) = v10;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)&v32, &v31, &v30, &v29, v15, v16, v17, v14, v26, v20, v21, v22, v14, &v28, 0, 1, v23, 0, 1,
           &v27,
           0,
           (uint64_t)v8,
           0,
           0,
           0,
           0,
           0,
           a2,
           0,
           0,
           2);
}

unint64_t MediaRequest.ContentType.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7374736163646F70;
      break;
    case 4:
      unint64_t result = 0x697263736E617274;
      break;
    case 5:
      unint64_t result = 0x69726F6765746163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MediaRequest.RequestType.init(raw:)@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A928);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74B18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74AD8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t result = sub_1ACC9E024((uint64_t)v4);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    int64x2_t v13 = 0uLL;
    char v14 = -1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v10 = sub_1ACE74A98();
    uint64_t v11 = v15;
    uint64_t v16 = sub_1ACE74A48();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int64x2_t v13 = vdupq_n_s64(0x746567uLL);
    v13.i64[0] = v16;
    char v14 = 3;
    unint64_t v12 = 0xE300000000000000;
  }
  a1->i64[0] = v10;
  a1->i64[1] = v11;
  a1[1] = v13;
  a1[2].i64[0] = v12;
  a1[2].i8[8] = v14;
  return result;
}

PodcastsFoundation::MediaRequest::ContentType_optional __swiftcall MediaRequest.ContentType.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::MediaRequest::ContentType_optional)sub_1ACC9D8B4(v1);
}

uint64_t MediaRequest.Params.init(searchTerm:contentTypes:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v31 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  char v40 = 4;
  char v37 = 6;
  char v36 = 1;
  char v35 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769498);
  uint64_t inited = swift_initStackObject();
  long long v32 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 1;
  *(void *)(inited + 40) = &unk_1F0380B48;
  unint64_t v12 = sub_1ACA36AC8(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = v32;
  *(unsigned char *)(v13 + 32) = 0;
  *(void *)(v13 + 40) = &unk_1F0380B70;
  unint64_t v14 = sub_1ACA364C4(v13);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v32;
  *(unsigned char *)(v15 + 32) = 1;
  *(void *)(v15 + 40) = &unk_1F0380B98;
  unint64_t v16 = sub_1ACA364C4(v15);
  char v34 = 1;
  if (a5) {
    uint64_t v17 = 3;
  }
  else {
    uint64_t v17 = a4;
  }
  char v33 = 1;
  uint64_t v18 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  unint64_t v20 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v21 = sub_1ACA35FB0(v19);
  unint64_t v22 = sub_1ACA360DC(v19);
  *((void *)&v27 + 1) = sub_1ACA360FC(v19);
  *(void *)&long long v27 = v22;
  *((void *)&v26 + 1) = v19;
  *((void *)&v25 + 1) = v19;
  *(void *)&long long v26 = v19;
  *((void *)&v24 + 1) = v14;
  *(void *)&long long v25 = v16;
  *(void *)&long long v24 = v19;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v38, &v37, &v36, &v35, v20, v12, v21, v19, v31, v24, v25, v26, v19, &v34, v17, 0, v27, 0, 1,
           &v33,
           0,
           (uint64_t)v10,
           0,
           0,
           0,
           v30,
           v29,
           v28,
           0,
           0,
           2);
}

uint64_t MediaRequest.Params.requestType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v7 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_1ACB0F59C(v2, v3, v4, v5, v6, v7);
}

__n128 MediaRequest.Params.requestType.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  sub_1ACA39518(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  __n128 result = v5;
  *(_OWORD *)uint64_t v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 40) = v3;
  return result;
}

uint64_t (*MediaRequest.Params.requestType.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.requestContentType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *MediaRequest.Params.requestContentType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.requestContentType.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.viewType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 42);
}

unsigned char *MediaRequest.Params.viewType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 42) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.viewType.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.directFetch.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 43);
}

unsigned char *MediaRequest.Params.directFetch.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 43) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.directFetch.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.relationshipIncludes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.relationshipIncludes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.relationshipIncludes.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.relationshipRelates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.relationshipRelates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.relationshipRelates.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.relationshipLimit.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.relationshipLimit.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.relationshipLimit.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.include.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.include.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.include.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.omit.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.omit.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.omit.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.typedIncludes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.typedIncludes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.typedIncludes.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.typedExtends.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.typedExtends.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.typedExtends.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.fields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.fields.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.withTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.withTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.withTypes.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.displayKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.displayKinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.displayKinds.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.identifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.identifiers.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.fragment.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 136);
}

unsigned char *MediaRequest.Params.fragment.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 136) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.fragment.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.limit.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t MediaRequest.Params.limit.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 144) = result;
  *(unsigned char *)(v2 + 152) = a2 & 1;
  return result;
}

uint64_t (*MediaRequest.Params.limit.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.filters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 160) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.filters.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.meta.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.meta.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 168) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.meta.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.offset.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t MediaRequest.Params.offset.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 176) = result;
  *(unsigned char *)(v2 + 184) = a2 & 1;
  return result;
}

uint64_t (*MediaRequest.Params.offset.modify())()
{
  return nullsub_1;
}

void MediaRequest.Params.pageName.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 185);
}

unsigned char *MediaRequest.Params.pageName.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 185) = *result;
  return result;
}

uint64_t (*MediaRequest.Params.pageName.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.requestAllPages.getter()
{
  return *(unsigned __int8 *)(v0 + 186);
}

uint64_t MediaRequest.Params.requestAllPages.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 186) = result;
  return result;
}

uint64_t (*MediaRequest.Params.requestAllPages.modify())()
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.hostUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaRequest.Params() + 104);
  return sub_1ACA615AC(v3, a1);
}

uint64_t MediaRequest.Params.hostUrl.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaRequest.Params() + 104);
  return sub_1ACC9B45C(a1, v3);
}

uint64_t (*MediaRequest.Params.hostUrl.modify())(void)
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.countryCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 108));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaRequest.Params.countryCode.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for MediaRequest.Params() + 108));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaRequest.Params.countryCode.modify())(void)
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.isImplicitActionRequest.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 112));
}

uint64_t MediaRequest.Params.isImplicitActionRequest.setter(char a1)
{
  uint64_t result = type metadata accessor for MediaRequest.Params();
  *(unsigned char *)(v1 + *(int *)(result + 112)) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.isImplicitActionRequest.modify())(void)
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.searchTerm.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 116));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaRequest.Params.searchTerm.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for MediaRequest.Params() + 116));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaRequest.Params.searchTerm.modify())(void)
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.queryContentTypes.getter()
{
  type metadata accessor for MediaRequest.Params();
  return swift_bridgeObjectRetain();
}

uint64_t MediaRequest.Params.queryContentTypes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MediaRequest.Params() + 120);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.queryContentTypes.modify())(void)
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.triggerBy.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 124));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaRequest.Params.triggerBy.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for MediaRequest.Params() + 124));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaRequest.Params.triggerBy.modify())(void)
{
  return nullsub_1;
}

uint64_t MediaRequest.Params.includeEntitlementsOverride.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaRequest.Params() + 128));
}

uint64_t MediaRequest.Params.includeEntitlementsOverride.setter(char a1)
{
  uint64_t result = type metadata accessor for MediaRequest.Params();
  *(unsigned char *)(v1 + *(int *)(result + 128)) = a1;
  return result;
}

uint64_t (*MediaRequest.Params.includeEntitlementsOverride.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1ACC9C880(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF72AC(*a1, *a2);
}

uint64_t sub_1ACC9C88C()
{
  return sub_1ACAE59E8();
}

uint64_t sub_1ACC9C894()
{
  return sub_1ACBD5634();
}

uint64_t sub_1ACC9C89C()
{
  return sub_1ACD23AD0();
}

PodcastsFoundation::MediaRequest::ContentType_optional sub_1ACC9C8A4(Swift::String *a1)
{
  return MediaRequest.ContentType.init(rawValue:)(*a1);
}

unint64_t sub_1ACC9C8B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MediaRequest.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACC9C8D8()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACC9C938()
{
  return sub_1ACE764C8();
}

PodcastsFoundation::MediaRequest::HTTPMethod_optional __swiftcall MediaRequest.HTTPMethod.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t MediaRequest.HTTPMethod.rawValue.getter()
{
  uint64_t v1 = 1953722224;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574656C6564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7628135;
  }
}

uint64_t sub_1ACC9CA2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF74A4(*a1, *a2);
}

uint64_t sub_1ACC9CA38()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC9CAC8()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC9CB44()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::MediaRequest::HTTPMethod_optional sub_1ACC9CBD0(Swift::String *a1)
{
  return MediaRequest.HTTPMethod.init(rawValue:)(*a1);
}

void sub_1ACC9CBDC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1953722224;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6574656C6564;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 7628135;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t MediaRequest.ViewType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACC9DF58(a1);
}

uint64_t MediaRequest.ViewType.rawValue.getter()
{
  return 0x6970652D7478656ELL;
}

uint64_t sub_1ACC9CC58()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACC9CC7C()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACC9CCA0()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACC9CCC4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACC9CCD0(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

PodcastsFoundation::MediaRequest::IncludeExtendTypes_optional __swiftcall MediaRequest.IncludeExtendTypes.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  uint64_t v3 = sub_1ACE779E8();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      char v5 = 1;
      goto LABEL_7;
    case 2:
      char v5 = 2;
      goto LABEL_7;
    case 3:
      char v5 = 3;
      goto LABEL_7;
    case 4:
      char v5 = 4;
LABEL_7:
      char v6 = v5;
      break;
    case 5:
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    default:
      char v6 = 23;
      break;
  }
  *int v2 = v6;
  return result;
}

unint64_t MediaRequest.IncludeExtendTypes.rawValue.getter()
{
  unint64_t result = 0x7263736275537369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x72617262694C6E69;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
    case 0x10:
    case 0x11:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x7365646F73697065;
      break;
    case 8:
      unint64_t result = 0x74736163646F70;
      break;
    case 9:
      unint64_t result = 0x7374736163646F70;
      break;
    case 0xA:
      unint64_t result = 0x637365446C6C7566;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0x6C725564656566;
      break;
    case 0xD:
      unint64_t result = 0x6C656E6E616863;
      break;
    case 0xE:
      unint64_t result = 0x6C6C65737075;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x12:
      unint64_t result = 0x697263736E617274;
      break;
    case 0x13:
      unint64_t result = 0x74657070696E73;
      break;
    case 0x14:
      unint64_t result = 0x69726F6765746163;
      break;
    case 0x15:
      unint64_t result = 0x746E65726170;
      break;
    case 0x16:
      unint64_t result = 0x6E6572646C696863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC9D144(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF70D4(*a1, *a2);
}

uint64_t sub_1ACC9D150()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC9D1B8()
{
  MediaRequest.IncludeExtendTypes.rawValue.getter();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC9D21C()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::MediaRequest::IncludeExtendTypes_optional sub_1ACC9D280(Swift::String *a1)
{
  return MediaRequest.IncludeExtendTypes.init(rawValue:)(*a1);
}

unint64_t sub_1ACC9D28C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MediaRequest.IncludeExtendTypes.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t MediaRequest.URLFragment.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACC9DF58(a1);
}

uint64_t MediaRequest.URLFragment.rawValue.getter()
{
  return 7105633;
}

uint64_t sub_1ACC9D2D0()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACC9D2E0()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACC9D2F0()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACC9D300@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACC9D30C(void *a1@<X8>)
{
  *a1 = 7105633;
  a1[1] = 0xE300000000000000;
}

PodcastsFoundation::MediaRequest::Relationship_optional __swiftcall MediaRequest.Relationship.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

unint64_t MediaRequest.Relationship.rawValue.getter()
{
  unint64_t result = 0x7365646F73697065;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x2D74736163646F70;
      break;
    case 3:
      unint64_t result = 0x697263736E617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC9D424(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF70EC(*a1, *a2);
}

uint64_t sub_1ACC9D430()
{
  return sub_1ACAE5B04();
}

uint64_t sub_1ACC9D438()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC9D514()
{
  return sub_1ACD239E0();
}

PodcastsFoundation::MediaRequest::Relationship_optional sub_1ACC9D51C(Swift::String *a1)
{
  return MediaRequest.Relationship.init(rawValue:)(*a1);
}

void sub_1ACC9D528(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  unint64_t v3 = 0x7365646F73697065;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001ACEC3C70;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_3;
    case 2:
      *a1 = 0x2D74736163646F70;
      a1[1] = 0xEF736E6F73616573;
      break;
    case 3:
      *a1 = 0x697263736E617274;
      a1[1] = 0xEB00000000737470;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

PodcastsFoundation::MediaRequest::Filter_optional __swiftcall MediaRequest.Filter.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t MediaRequest.Filter.rawValue.getter()
{
  unint64_t result = 0x656C75646F6DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x6C725564656566;
      break;
    case 3:
      unint64_t result = 0x6449636E7973;
      break;
    case 4:
      unint64_t result = 0x4B79616C70736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC9D6E4(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF6C04(*a1, *a2);
}

uint64_t sub_1ACC9D6F0()
{
  return sub_1ACAE5BF8();
}

uint64_t sub_1ACC9D6F8()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC9D7D8()
{
  return sub_1ACD238EC();
}

PodcastsFoundation::MediaRequest::Filter_optional sub_1ACC9D7E0(Swift::String *a1)
{
  return MediaRequest.Filter.init(rawValue:)(*a1);
}

void sub_1ACC9D7EC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  unint64_t v3 = 0x656C75646F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001ACEC3EF0;
      unint64_t v3 = 0xD000000000000016;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6C725564656566;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x6449636E7973;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      strcpy((char *)a1, "displayKinds");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

PodcastsFoundation::MediaRequest::WithTypes_optional __swiftcall MediaRequest.WithTypes.init(rawValue:)(Swift::String rawValue)
{
  return (PodcastsFoundation::MediaRequest::WithTypes_optional)sub_1ACC9D8B4(v1);
}

uint64_t sub_1ACC9D8B4@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 6;
  if (v2 < 6) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t MediaRequest.WithTypes.rawValue.getter()
{
  uint64_t result = 0x63646F507377656ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D656C7469746E65;
      break;
    case 2:
      uint64_t result = 0x726566664F707061;
      break;
    case 3:
      uint64_t result = 0x697263736E617274;
      break;
    case 4:
      uint64_t result = 0x6E79536E61656C63;
      break;
    case 5:
      uint64_t result = 0x69726F6765746163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC9DA00(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF69AC(*a1, *a2);
}

uint64_t sub_1ACC9DA0C()
{
  return sub_1ACAE5CF0();
}

uint64_t sub_1ACC9DA14()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACC9DB38()
{
  return sub_1ACD237B4();
}

PodcastsFoundation::MediaRequest::WithTypes_optional sub_1ACC9DB40(Swift::String *a1)
{
  return MediaRequest.WithTypes.init(rawValue:)(*a1);
}

void sub_1ACC9DB4C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEC00000073747361;
  uint64_t v3 = 0x63646F507377656ELL;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x6D656C7469746E65;
      unint64_t v2 = 0xEC00000073746E65;
      goto LABEL_3;
    case 2:
      *a1 = 0x726566664F707061;
      a1[1] = 0xE900000000000073;
      return;
    case 3:
      unint64_t v4 = 0xEB00000000737470;
      uint64_t v5 = 0x63736E617274;
      goto LABEL_8;
    case 4:
      *a1 = 0x6E79536E61656C63;
      a1[1] = 0xE900000000000063;
      return;
    case 5:
      unint64_t v4 = 0xEA00000000007365;
      uint64_t v5 = 0x6F6765746163;
LABEL_8:
      *a1 = v5 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
      a1[1] = v4;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t MediaRequest.MediaRequestActionType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACC9DF58(a1);
}

uint64_t MediaRequest.MediaRequestActionType.rawValue.getter()
{
  return 0x746963696C706D69;
}

uint64_t sub_1ACC9DC70()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACC9DC88()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACC9DCA0()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACC9DCB8@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACC9DCC4(void *a1@<X8>)
{
  *a1 = 0x746963696C706D69;
  a1[1] = 0xE800000000000000;
}

PodcastsFoundation::MediaRequest::Field_optional __swiftcall MediaRequest.Field.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.CMTimeValue value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t MediaRequest.Field.rawValue.getter()
{
  unint64_t result = 0x657373416C6D7474;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656B6F546C6D7474;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x72617262694C6E69;
      break;
    case 7:
      unint64_t result = 1701667182;
      break;
    case 8:
      unint64_t result = 0x614E747369747261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACC9DE78(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF6DD0(*a1, *a2);
}

uint64_t sub_1ACC9DE84()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACC9DECC()
{
  return sub_1ACBD54C0();
}

uint64_t sub_1ACC9DED4()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::MediaRequest::Field_optional sub_1ACC9DF18(Swift::String *a1)
{
  return MediaRequest.Field.init(rawValue:)(*a1);
}

unint64_t sub_1ACC9DF24@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MediaRequest.Field.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t MediaRequest.PageName.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACC9DF58(a1);
}

uint64_t sub_1ACC9DF58@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t MediaRequest.PageName.rawValue.getter()
{
  return 1701670760;
}

uint64_t sub_1ACC9DFBC()
{
  return sub_1ACC25A20();
}

uint64_t sub_1ACC9DFCC()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACC9DFDC()
{
  return sub_1ACC25AA0();
}

uint64_t sub_1ACC9DFEC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ACBBA598(a1);
}

void sub_1ACC9DFF8(void *a1@<X8>)
{
  *a1 = 1701670760;
  a1[1] = 0xE400000000000000;
}

uint64_t MediaRequest.deinit()
{
  return v0;
}

uint64_t MediaRequest.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACC9E024(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A928);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s18PodcastsFoundation12MediaRequestC0D4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v62 = *(void *)(a1 + 16);
  uint64_t v63 = *(void *)(a1 + 32);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a2 + 40);
  switch(v5)
  {
    case 1u:
      if (v11 != 1) {
        goto LABEL_45;
      }
      uint64_t v22 = *(void *)(a1 + 8);
      char v23 = 1;
      uint64_t v59 = *(void *)(a2 + 24);
      sub_1ACB0F59C(*(void *)a2, *(void *)(a2 + 8), v9, v8, v10, 1u);
      sub_1ACB0F59C(v3, v22, v62, v4, v63, 1u);
      sub_1ACA39518(v3, v22, v62, v4, v63, 1u);
      sub_1ACA39518(v6, v7, v9, v59, v10, 1u);
      return v23 & 1;
    case 2u:
      if (v11 != 2) {
        goto LABEL_45;
      }
      if (v2)
      {
        if (v7)
        {
          if (v3 == v6 && v2 == v7)
          {
            uint64_t v24 = *(void *)(a1 + 8);
            char v23 = 1;
          }
          else
          {
            uint64_t v24 = *(void *)(a1 + 8);
            uint64_t v53 = *(void *)(a2 + 24);
            char v54 = sub_1ACE77848();
            uint64_t v8 = v53;
            char v23 = v54;
          }
          uint64_t v61 = v8;
          sub_1ACB0F59C(v6, v7, v9, v8, v10, 2u);
          sub_1ACB0F59C(v3, v24, v62, v4, v63, 2u);
          sub_1ACA39518(v3, v24, v62, v4, v63, 2u);
          sub_1ACA39518(v6, v7, v9, v61, v10, 2u);
          return v23 & 1;
        }
        uint64_t v50 = *(void *)(a2 + 16);
        uint64_t v51 = *(void *)(a1 + 8);
        uint64_t v40 = *(void *)(a2 + 32);
        uint64_t v52 = *(void *)(a2 + 24);
        sub_1ACB0F59C(*(void *)a2, 0, v50, v8, v40, 2u);
        sub_1ACB0F59C(v3, v51, v62, v4, v63, 2u);
        sub_1ACA39518(v3, v51, v62, v4, v63, 2u);
        uint64_t v33 = v6;
        uint64_t v34 = 0;
        uint64_t v35 = v50;
        uint64_t v36 = v52;
      }
      else
      {
        uint64_t v40 = *(void *)(a2 + 32);
        uint64_t v41 = *(void *)(a2 + 16);
        uint64_t v42 = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        sub_1ACB0F59C(v6, v7, v9, v42, v40, 2u);
        sub_1ACB0F59C(v3, 0, v62, v4, v63, 2u);
        sub_1ACA39518(v3, 0, v62, v4, v63, 2u);
        sub_1ACA39518(v6, v7, v41, v42, v40, 2u);
        if (!v7)
        {
          char v23 = 1;
          return v23 & 1;
        }
        sub_1ACA39518(v3, 0, v62, v4, v63, 2u);
        uint64_t v33 = v6;
        uint64_t v34 = v7;
        uint64_t v35 = v41;
        uint64_t v36 = v42;
      }
      uint64_t v37 = v40;
      unsigned __int8 v38 = 2;
      goto LABEL_46;
    case 3u:
      if (v11 != 3) {
        goto LABEL_45;
      }
      if (v3 != v6 || v2 != v7)
      {
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v26 = *(void *)(a2 + 24);
        char v27 = sub_1ACE77848();
        uint64_t v8 = v26;
        uint64_t v2 = v25;
        if ((v27 & 1) == 0) {
          goto LABEL_49;
        }
      }
      if (!v62)
      {
        if (!v9)
        {
          uint64_t v58 = 0;
          uint64_t v28 = v10;
          uint64_t v55 = v10;
          uint64_t v30 = v8;
          sub_1ACB0F59C(v6, v7, 0, v8, v55, 3u);
          sub_1ACB0F59C(v3, v2, 0, v4, v63, 3u);
          goto LABEL_56;
        }
LABEL_49:
        uint64_t v44 = v9;
        uint64_t v45 = v9;
        uint64_t v46 = v2;
        uint64_t v47 = v10;
        uint64_t v48 = v10;
        uint64_t v49 = v8;
        sub_1ACB0F59C(v6, v7, v45, v8, v48, 3u);
        sub_1ACB0F59C(v3, v46, v62, v4, v63, 3u);
        sub_1ACA39518(v3, v46, v62, v4, v63, 3u);
        uint64_t v33 = v6;
        uint64_t v34 = v7;
        uint64_t v35 = v44;
        uint64_t v36 = v49;
        uint64_t v37 = v47;
        unsigned __int8 v38 = 3;
        goto LABEL_46;
      }
      if (!v9) {
        goto LABEL_49;
      }
      uint64_t v28 = v10;
      uint64_t v29 = v10;
      uint64_t v30 = v8;
      sub_1ACB0F59C(v6, v7, v9, v8, v29, 3u);
      sub_1ACB0F59C(v3, v2, v62, v4, v63, 3u);
      swift_bridgeObjectRetain();
      uint64_t v31 = swift_bridgeObjectRetain();
      char v32 = sub_1ACA88458(v31, v9);
      swift_bridgeObjectRelease();
      uint64_t v58 = v9;
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        sub_1ACA39518(v3, v2, v62, v4, v63, 3u);
        uint64_t v33 = v6;
        uint64_t v34 = v7;
        uint64_t v35 = v9;
        uint64_t v36 = v30;
        uint64_t v37 = v28;
        unsigned __int8 v38 = 3;
        goto LABEL_46;
      }
LABEL_56:
      uint64_t v56 = v2;
      if (v4 == v30 && v63 == v28)
      {
        sub_1ACA39518(v3, v2, v62, v4, v63, 3u);
        uint64_t v16 = v6;
        uint64_t v17 = v7;
        uint64_t v18 = v58;
        uint64_t v19 = v4;
        uint64_t v20 = v63;
        unsigned __int8 v21 = 3;
LABEL_59:
        sub_1ACA39518(v16, v17, v18, v19, v20, v21);
        char v23 = 1;
        return v23 & 1;
      }
      char v57 = sub_1ACE77848();
      sub_1ACA39518(v3, v56, v62, v4, v63, 3u);
      sub_1ACA39518(v6, v7, v58, v30, v28, 3u);
      return v57 & 1;
    case 4u:
      if (v62 | v2 | v3 | v4 | v63)
      {
        uint64_t v39 = v62 | v2 | v4 | v63;
        if (v3 == 1 && !v39)
        {
          if (v11 == 4 && v6 == 1 && !(v9 | v7 | v8 | v10))
          {
            char v23 = 1;
            sub_1ACA39518(1, 0, 0, 0, v63, 4u);
            sub_1ACA39518(1, 0, 0, 0, v10, 4u);
            return v23 & 1;
          }
          goto LABEL_45;
        }
        if (v3 != 2 || v39)
        {
          if ((v3 != 3 || v39) && v11 == 4 && v6 == 4 && !(v9 | v7 | v8 | v10))
          {
            sub_1ACA39518(4, 0, 0, 0, v63, 4u);
            uint64_t v16 = 4;
            goto LABEL_44;
          }
        }
        else if (v11 == 4 && v6 == 2 && !(v9 | v7 | v8 | v10))
        {
          sub_1ACA39518(2, 0, 0, 0, v63, 4u);
          uint64_t v16 = 2;
          goto LABEL_44;
        }
      }
      else if (v11 == 4 && !(v9 | v7 | v6 | v8 | v10))
      {
        sub_1ACA39518(0, 0, 0, 0, v63, 4u);
        uint64_t v16 = 0;
LABEL_44:
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v20 = v10;
        unsigned __int8 v21 = 4;
        goto LABEL_59;
      }
LABEL_45:
      uint64_t v60 = *(void *)(a2 + 24);
      sub_1ACB0F59C(*(void *)a2, *(void *)(a2 + 8), v9, v8, v10, v11);
      sub_1ACB0F59C(v3, v2, v62, v4, v63, v5);
      sub_1ACA39518(v3, v2, v62, v4, v63, v5);
      uint64_t v33 = v6;
      uint64_t v34 = v7;
      uint64_t v36 = v60;
      uint64_t v35 = v9;
      uint64_t v37 = v10;
      unsigned __int8 v38 = v11;
LABEL_46:
      sub_1ACA39518(v33, v34, v35, v36, v37, v38);
      char v23 = 0;
      return v23 & 1;
    default:
      if (*(unsigned char *)(a2 + 40)) {
        goto LABEL_45;
      }
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = *(void *)(a2 + 32);
      uint64_t v15 = *(void *)(a2 + 24);
      sub_1ACB0F59C(*(void *)a2, *(void *)(a2 + 8), v12, v8, v14, 0);
      sub_1ACB0F59C(v3, v13, v62, v4, v63, 0);
      sub_1ACA39518(v3, v13, v62, v4, v63, 0);
      uint64_t v16 = v6;
      uint64_t v17 = v7;
      uint64_t v18 = v12;
      uint64_t v19 = v15;
      uint64_t v20 = v14;
      unsigned __int8 v21 = 0;
      goto LABEL_59;
  }
}

unint64_t sub_1ACC9E8E4()
{
  unint64_t result = qword_1EB7722D8;
  if (!qword_1EB7722D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7722D8);
  }
  return result;
}

unint64_t sub_1ACC9E93C()
{
  unint64_t result = qword_1E99F4AD0;
  if (!qword_1E99F4AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AD0);
  }
  return result;
}

unint64_t sub_1ACC9E994()
{
  unint64_t result = qword_1E99F4AD8;
  if (!qword_1E99F4AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AD8);
  }
  return result;
}

unint64_t sub_1ACC9E9EC()
{
  unint64_t result = qword_1E99F4AE0;
  if (!qword_1E99F4AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AE0);
  }
  return result;
}

unint64_t sub_1ACC9EA44()
{
  unint64_t result = qword_1E99F4AE8;
  if (!qword_1E99F4AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AE8);
  }
  return result;
}

unint64_t sub_1ACC9EA9C()
{
  unint64_t result = qword_1EB76A280[0];
  if (!qword_1EB76A280[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB76A280);
  }
  return result;
}

unint64_t sub_1ACC9EAF4()
{
  unint64_t result = qword_1E99F4AF0;
  if (!qword_1E99F4AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AF0);
  }
  return result;
}

unint64_t sub_1ACC9EB4C()
{
  unint64_t result = qword_1E99F4AF8;
  if (!qword_1E99F4AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4AF8);
  }
  return result;
}

unint64_t sub_1ACC9EBA4()
{
  unint64_t result = qword_1E99F4B00;
  if (!qword_1E99F4B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4B00);
  }
  return result;
}

unint64_t sub_1ACC9EBFC()
{
  unint64_t result = qword_1E99F4B08;
  if (!qword_1E99F4B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4B08);
  }
  return result;
}

unint64_t sub_1ACC9EC54()
{
  unint64_t result = qword_1E99F4B10;
  if (!qword_1E99F4B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4B10);
  }
  return result;
}

uint64_t type metadata accessor for MediaRequest()
{
  return self;
}

uint64_t method lookup function for MediaRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MediaRequest);
}

unint64_t initializeBufferWithCopyOfBuffer for MediaRequest.Params(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    unsigned __int8 v12 = *(unsigned char *)(a2 + 40);
    sub_1ACB0F59C(*(void *)a2, v8, v9, v10, v11, v12);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
    *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
    uint64_t v13 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v13;
    uint64_t v14 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v14;
    uint64_t v15 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v15;
    uint64_t v16 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v16;
    uint64_t v17 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v17;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    uint64_t v18 = *(void *)(a2 + 160);
    uint64_t v43 = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    uint64_t v19 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = v43;
    *(void *)(a1 + 176) = v19;
    *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
    uint64_t v20 = a3[26];
    __dst = (void *)(a1 + v20);
    unsigned __int8 v21 = (const void *)(a2 + v20);
    *(void *)(a1 + 160) = v18;
    uint64_t v22 = sub_1ACE74F28();
    uint64_t v41 = *(void *)(v22 - 8);
    uint64_t v42 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42(v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(__dst, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v25 = a3[27];
    uint64_t v26 = a3[28];
    char v27 = (void *)(a1 + v25);
    uint64_t v28 = (void *)(a2 + v25);
    uint64_t v29 = v28[1];
    *char v27 = *v28;
    v27[1] = v29;
    *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
    uint64_t v30 = a3[29];
    uint64_t v31 = a3[30];
    char v32 = (void *)(a1 + v30);
    uint64_t v33 = (void *)(a2 + v30);
    uint64_t v34 = v33[1];
    *char v32 = *v33;
    v32[1] = v34;
    *(void *)(a1 + v31) = *(void *)(a2 + v31);
    uint64_t v35 = a3[31];
    uint64_t v36 = a3[32];
    uint64_t v37 = (void *)(a1 + v35);
    unsigned __int8 v38 = (void *)(a2 + v35);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaRequest.Params(uint64_t a1, uint64_t a2)
{
  sub_1ACA39518(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F59C(*(void *)a2, v7, v8, v9, v10, v11);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v12;
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v14;
  uint64_t v15 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v15;
  uint64_t v16 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v17 = *(void *)(a2 + 160);
  uint64_t v41 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v18 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = v41;
  *(void *)(a1 + 176) = v18;
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  uint64_t v19 = a3[26];
  __dst = (void *)(a1 + v19);
  uint64_t v20 = (const void *)(a2 + v19);
  *(void *)(a1 + 160) = v17;
  uint64_t v21 = sub_1ACE74F28();
  uint64_t v39 = *(void *)(v21 - 8);
  uint64_t v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40(v20, 1, v21))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(__dst, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v23 = a3[27];
  uint64_t v24 = a3[28];
  uint64_t v25 = (void *)(a1 + v23);
  uint64_t v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v28 = a3[29];
  uint64_t v29 = a3[30];
  uint64_t v30 = (void *)(a1 + v28);
  uint64_t v31 = (void *)(a2 + v28);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v33 = a3[31];
  uint64_t v34 = a3[32];
  uint64_t v35 = (void *)(a1 + v33);
  uint64_t v36 = (void *)(a2 + v33);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F59C(*(void *)a2, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  unsigned __int8 v17 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v11;
  sub_1ACA39518(v12, v13, v14, v15, v16, v17);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v18 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v18;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v19;
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  uint64_t v20 = a3[26];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = sub_1ACE74F28();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v9) = v25(v21, 1, v23);
  int v26 = v25(v22, 1, v23);
  if (!v9)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  uint64_t v28 = a3[27];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  uint64_t v31 = a3[29];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[31];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  void *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  return a1;
}

uint64_t initializeWithTake for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  long long v9 = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  uint64_t v10 = a3[26];
  unsigned __int8 v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 160) = v9;
  uint64_t v13 = sub_1ACE74F28();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[28];
  *(_OWORD *)(a1 + a3[27]) = *(_OWORD *)(a2 + a3[27]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[30];
  *(_OWORD *)(a1 + a3[29]) = *(_OWORD *)(a2 + a3[29]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[32];
  *(_OWORD *)(a1 + a3[31]) = *(_OWORD *)(a2 + a3[31]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for MediaRequest.Params(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  sub_1ACA39518(v8, v9, v10, v11, v12, v14);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  uint64_t v15 = a3[26];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_1ACE74F28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  uint64_t v24 = a3[27];
  uint64_t v25 = (void *)(a1 + v24);
  int v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[29];
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[31];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  void *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaRequest.Params(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACC9FDAC);
}

uint64_t sub_1ACC9FDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 104);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MediaRequest.Params(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACC9FE74);
}

uint64_t sub_1ACC9FE74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 104);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1ACC9FF20()
{
  sub_1ACBD7EC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for MediaRequest.RequestType(uint64_t a1)
{
  return sub_1ACA39518(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for MediaRequest.RequestType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F59C(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for MediaRequest.RequestType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_1ACB0F59C(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1ACA39518(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for MediaRequest.RequestType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1ACA39518(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaRequest.RequestType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaRequest.RequestType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACCA0244(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1ACCA025C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.RequestType()
{
  return &type metadata for MediaRequest.RequestType;
}

ValueMetadata *type metadata accessor for MediaRequest.ContentType()
{
  return &type metadata for MediaRequest.ContentType;
}

unsigned char *storeEnumTagSinglePayload for MediaRequest.HTTPMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCA0374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.HTTPMethod()
{
  return &type metadata for MediaRequest.HTTPMethod;
}

ValueMetadata *type metadata accessor for MediaRequest.ViewType()
{
  return &type metadata for MediaRequest.ViewType;
}

uint64_t getEnumTagSinglePayload for MediaRequest.IncludeExtendTypes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MediaRequest.IncludeExtendTypes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCA051CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.IncludeExtendTypes()
{
  return &type metadata for MediaRequest.IncludeExtendTypes;
}

ValueMetadata *type metadata accessor for MediaRequest.URLFragment()
{
  return &type metadata for MediaRequest.URLFragment;
}

unsigned char *storeEnumTagSinglePayload for MediaRequest.Relationship(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCA0630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.Relationship()
{
  return &type metadata for MediaRequest.Relationship;
}

unsigned char *storeEnumTagSinglePayload for MediaRequest.Filter(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCA0734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.Filter()
{
  return &type metadata for MediaRequest.Filter;
}

unsigned char *_s18PodcastsFoundation12MediaRequestC11ContentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCA0838);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.WithTypes()
{
  return &type metadata for MediaRequest.WithTypes;
}

ValueMetadata *type metadata accessor for MediaRequest.MediaRequestActionType()
{
  return &type metadata for MediaRequest.MediaRequestActionType;
}

unsigned char *storeEnumTagSinglePayload for MediaRequest.Field(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCA094CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.Field()
{
  return &type metadata for MediaRequest.Field;
}

unsigned char *_s18PodcastsFoundation12MediaRequestC8ViewTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACCA0A20);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaRequest.PageName()
{
  return &type metadata for MediaRequest.PageName;
}

unint64_t sub_1ACCA0A58()
{
  unint64_t result = qword_1E99F4B18;
  if (!qword_1E99F4B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4B18);
  }
  return result;
}

uint64_t kMTInterestEntityName.getter()
{
  return 0x657265746E49544DLL;
}

uint64_t kInterestAdamID.getter()
{
  return 0x44496D616461;
}

uint64_t kInterestInterestValue.getter()
{
  return 0x7473657265746E69;
}

uint64_t kInterestLastUpdatedDate.getter()
{
  return 0x616470557473616CLL;
}

unint64_t kInterestUnknownSyncProperties.getter()
{
  return 0xD000000000000015;
}

uint64_t kInterestCategory.getter()
{
  return 0x79726F6765746163;
}

uint64_t kInterestChannel.getter()
{
  return 0x6C656E6E616863;
}

uint64_t kInterestPodcast.getter()
{
  return 0x74736163646F70;
}

id static MTInterest.createFetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1ACE76178();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id sub_1ACCA0BF4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_adamID);
  *a2 = result;
  return result;
}

id sub_1ACCA0C28(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAdamID_, *a1);
}

char *keypath_get_selector_interestValue()
{
  return sel_interestValue;
}

id sub_1ACCA0C48@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_interestValue);
  *a2 = v4;
  return result;
}

id sub_1ACCA0C7C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInterestValue_, *a1);
}

char *keypath_get_selector_lastUpdatedDate()
{
  return sel_lastUpdatedDate;
}

void sub_1ACCA0C9C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_lastUpdatedDate);
  sub_1ACE75078();
}

void sub_1ACCA0D00(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1ACE75008();
  objc_msgSend(v2, sel_setLastUpdatedDate_, v3);
}

char *keypath_get_selector_unknownSyncProperties()
{
  return sel_unknownSyncProperties;
}

void sub_1ACCA0D68(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_unknownSyncProperties);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1ACE74F88();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1ACCA0DD4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1ACE74F68();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setUnknownSyncProperties_);
}

char *keypath_get_selector_category()
{
  return sel_category;
}

id sub_1ACCA0E5C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_category);
  *a2 = result;
  return result;
}

id sub_1ACCA0E98(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategory_, *a1);
}

char *keypath_get_selector_podcast()
{
  return sel_podcast;
}

id sub_1ACCA0EB8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_podcast);
  *a2 = result;
  return result;
}

id sub_1ACCA0EF4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPodcast_, *a1);
}

char *keypath_get_selector_channel()
{
  return sel_channel;
}

id sub_1ACCA0F14@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_channel);
  *a2 = result;
  return result;
}

id sub_1ACCA0F50(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setChannel_, *a1);
}

void URL.markAsPurgeable(urgency:)(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    sub_1ACCA1214();
  }
  else {
    sub_1ACCA0F8C(a1);
  }
}

void sub_1ACCA0F8C(int a1)
{
  uint64_t v3 = v1;
  v19[11] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB76E0F8);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v9(v8, v3, v5);
  id v10 = sub_1ACD2A66C((uint64_t)v8);
  if (!v2)
  {
    unsigned __int8 v11 = v10;
    int v12 = objc_msgSend(v10, sel_fileDescriptor);
    if (a1 < 0)
    {
      sub_1ACE77488();
      __break(1u);
    }
    else
    {
      v19[0] = a1 | 0x10006u;
      int v13 = ffsctl(v12, 0xC0084A44uLL, v19, 0);
      if (v13)
      {
        Swift::Int32 v14 = v13;
        sub_1ACA50D4C(0, &qword_1EB771CC0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
        *(void *)(inited + 32) = sub_1ACE761B8();
        *(void *)(inited + 40) = v16;
        *(void *)(inited + 72) = v5;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
        v9((char *)boxed_opaque_existential_1, v3, v5);
        v20.value._rawValue = (void *)sub_1ACA3625C(inited);
        NSError.init(fsctlCode:userInfo:)(v18, v14, v20);
        swift_willThrow();
      }
      objc_msgSend(v11, sel_closeFile);
    }
  }
}

void sub_1ACCA1214()
{
  uint64_t v2 = v0;
  v17[11] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB76E0F8);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, v2, v3);
  id v8 = sub_1ACD2A66C((uint64_t)v6);
  if (!v1)
  {
    uint64_t v9 = v8;
    int v10 = objc_msgSend(v8, sel_fileDescriptor);
    v17[0] = 0;
    int v11 = ffsctl(v10, 0xC0084A44uLL, v17, 0);
    if (v11)
    {
      Swift::Int32 v12 = v11;
      sub_1ACA50D4C(0, &qword_1EB771CC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
      *(void *)(inited + 32) = sub_1ACE761B8();
      *(void *)(inited + 40) = v14;
      *(void *)(inited + 72) = v3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
      v7((char *)boxed_opaque_existential_1, v2, v3);
      v18.value._rawValue = (void *)sub_1ACA3625C(inited);
      NSError.init(fsctlCode:userInfo:)(v16, v12, v18);
      swift_willThrow();
    }
    objc_msgSend(v9, sel_closeFile);
  }
}

void __swiftcall NSError.init(fsctlCode:userInfo:)(NSError *__return_ptr retstr, Swift::Int32 fsctlCode, Swift::OpaquePointer_optional userInfo)
{
  unint64_t v4 = 0xD000000000000031;
  unint64_t v5 = 0x80000001ACECED50;
  switch(fsctlCode)
  {
    case 2:
      unint64_t v4 = 0xD00000000000001DLL;
      uint64_t v6 = "The named file does not exist";
      goto LABEL_12;
    case 5:
      unint64_t v4 = 0xD000000000000041;
      uint64_t v6 = "An I/O error occurred while reading or writing to the file system";
      goto LABEL_12;
    case 13:
      unint64_t v4 = 0xD00000000000003ELL;
      uint64_t v6 = "Search permission is denied for a component of the path prefix";
      goto LABEL_12;
    case 14:
      unint64_t v4 = 0xD000000000000029;
      uint64_t v6 = "Path or data points to an invalid address";
      goto LABEL_12;
    case 20:
      goto LABEL_4;
    case 22:
      unint64_t v4 = 0xD00000000000001BLL;
      uint64_t v6 = "Request or data is invalid.";
      goto LABEL_12;
    case 62:
      unint64_t v4 = 0xD000000000000045;
      uint64_t v6 = "Too many symbolic links were encountered in translating the pathname.";
      goto LABEL_12;
    case 63:
      unint64_t v4 = 0xD000000000000074;
      uint64_t v6 = "A component of the pathname exceeded the maximum allowed characters, or the path exceeded the total allowable length";
LABEL_12:
      unint64_t v5 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      if (!userInfo.value._rawValue) {
        goto LABEL_13;
      }
      goto LABEL_5;
    default:
      unint64_t v5 = 0x80000001ACECEB60;
      unint64_t v4 = 0xD00000000000001ALL;
LABEL_4:
      if (userInfo.value._rawValue) {
        goto LABEL_5;
      }
LABEL_13:
      sub_1ACA3625C(MEMORY[0x1E4FBC860]);
LABEL_5:
      uint64_t v7 = sub_1ACE761B8();
      uint64_t v9 = v8;
      uint64_t v16 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v15 = v4;
      *((void *)&v15 + 1) = v5;
      sub_1ACA3AA44(&v15, v14);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1ACD0D078(v14, v7, v9, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v12 = (id)*MEMORY[0x1E4F28798];
      int v13 = (void *)sub_1ACE75FC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v12, fsctlCode, v13);

      return;
  }
}

uint64_t URL.isPodcastsPurgeable(with:)(int a1)
{
  sub_1ACCA17E8();
  if (v1) {
    return v4;
  }
  if ((a1 & 0x80000000) == 0)
  {
    BOOL v4 = (v3 & a1) != 0;
    if ((v3 & 6) == 0) {
      return 0;
    }
    return v4;
  }
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

void sub_1ACCA17E8()
{
  uint64_t v2 = v0;
  v16[11] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = 65542;
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB76E0F8);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, v2, v3);
  id v8 = sub_1ACD2A66C((uint64_t)v6);
  if (!v1)
  {
    uint64_t v9 = v8;
    int v10 = ffsctl((int)objc_msgSend(v8, sel_fileDescriptor), *(unint64_t *)"GJ\b@", v16, 0);
    if (v10)
    {
      Swift::Int32 v11 = v10;
      sub_1ACA50D4C(0, &qword_1EB771CC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
      *(void *)(inited + 32) = sub_1ACE761B8();
      *(void *)(inited + 40) = v13;
      *(void *)(inited + 72) = v3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
      v7((char *)boxed_opaque_existential_1, v2, v3);
      v17.value._rawValue = (void *)sub_1ACA3625C(inited);
      NSError.init(fsctlCode:userInfo:)(v15, v11, v17);
      swift_willThrow();
    }
  }
}

uint64_t URL.isPodcastsPurgeable(with:flags:)(int a1, int a2)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else
  {
    return (a2 & 6) != 0 && (a1 & a2) != 0;
  }
  return result;
}

uint64_t URL.podcastsPurgeableLevel()()
{
  sub_1ACCA17E8();
  if (v0) {
    return v2;
  }
  uint64_t v3 = dword_1F0380EC0;
  if ((dword_1F0380EC0 & 0x80000000) == 0)
  {
    if ((v1 & 6) != 0 && (v1 & dword_1F0380EC0) != 0) {
      goto LABEL_8;
    }
    uint64_t v3 = dword_1F0380EC4;
    if ((dword_1F0380EC4 & 0x80000000) == 0)
    {
      if ((v1 & 6) != 0 && (v1 & dword_1F0380EC4) != 0)
      {
LABEL_8:
        unsigned __int8 v4 = 0;
        return v3 | ((unint64_t)v4 << 32);
      }
      uint64_t v3 = dword_1F0380EC8;
      if ((dword_1F0380EC8 & 0x80000000) == 0)
      {
        BOOL v5 = (v1 & dword_1F0380EC8) == 0 || (v1 & 6) == 0;
        unsigned __int8 v4 = v5;
        if (v5) {
          uint64_t v3 = 0;
        }
        return v3 | ((unint64_t)v4 << 32);
      }
    }
  }
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACCA1B58(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t))
{
  uint64_t v28 = a7;
  uint64_t v29 = a8;
  uint64_t v26 = a4;
  int v27 = a2;
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1ACE75E48();
  uint64_t v16 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  Swift::OpaquePointer_optional v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a3 + 16);
  if (result)
  {
    Swift::OpaquePointer_optional v20 = (void *)result;
    uint64_t v25 = a9;
    id v21 = objc_retain(*(id *)(result
                            + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue));

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v26;
    *(void *)(v22 + 24) = a5;
    *(void *)(v22 + 32) = a1;
    uint64_t v23 = v27 & 1;
    *(unsigned char *)(v22 + 40) = v23;
    aBlock[4] = v28;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = v29;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    v25(a1, v23);
    sub_1ACE75E08();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v18, v15, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v30);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DispatchingFairPlayEpisodeDataFetching()
{
  return self;
}

uint64_t sub_1ACCA1ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  uint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v7 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v8);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  Swift::Int32 v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a2;
  v11[4] = a3;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  swift_retain();
  v12(a1, sub_1ACCA2490, v11, v8, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACCA1FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v6);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  swift_retain();
  v10(sub_1ACCA2424, v9, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACCA20F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v6);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  swift_retain();
  v10(sub_1ACCA23B8, v9, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACCA2200(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 24);
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance), v6);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(v7 + 32);
  swift_retain();
  swift_retain();
  v10(sub_1ACCA2348, v9, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACCA230C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACCA2348(uint64_t a1, char a2)
{
  return sub_1ACCA1B58(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1F03947F8, (uint64_t)sub_1ACCA23B0, (uint64_t)&block_descriptor_54, (void (*)(uint64_t, uint64_t))sub_1ACB23084);
}

uint64_t sub_1ACCA23B8(uint64_t a1, char a2)
{
  return sub_1ACCA1B58(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1F0394870, (uint64_t)sub_1ACCA23B0, (uint64_t)&block_descriptor_17_3, (void (*)(uint64_t, uint64_t))sub_1ACB23084);
}

uint64_t sub_1ACCA2424(uint64_t a1, char a2)
{
  return sub_1ACCA1B58(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1F03948E8, (uint64_t)sub_1ACCA23B0, (uint64_t)&block_descriptor_27_3, (void (*)(uint64_t, uint64_t))sub_1ACB23084);
}

uint64_t sub_1ACCA2490(uint64_t a1, char a2)
{
  return sub_1ACCA1B58(a1, a2 & 1, v2[2], v2[3], v2[4], (uint64_t)&unk_1F0394960, (uint64_t)sub_1ACCA23B0, (uint64_t)&block_descriptor_37, (void (*)(uint64_t, uint64_t))sub_1ACCA256C);
}

uint64_t sub_1ACCA24F4()
{
  swift_release();
  sub_1ACB2E108(*(id *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1ACCA2538()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

id sub_1ACCA256C(id a1)
{
  return a1;
}

id AutoDownloadProcessorDownloader.capacityMonitor.getter()
{
  return *v0;
}

uint64_t AutoDownloadProcessorDownloader.reachability.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t AutoDownloadProcessorDownloader.downloader.getter()
{
  return swift_unknownObjectRetain();
}

id AutoDownloadProcessorDownloader.context.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t AutoDownloadProcessorDownloader.analyticsChannel.getter()
{
  return swift_unknownObjectRetain();
}

id AutoDownloadProcessorDownloader.workQueue.getter()
{
  return *(id *)(v0 + 40);
}

void *AutoDownloadProcessorDownloader.init(reachability:context:capacityMonitor:downloader:analyticsChannel:workQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  if (qword_1EB76E038 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1EB76E028;
  uint64_t v14 = unk_1EB76E030;
  uint64_t v16 = self;
  swift_bridgeObjectRetain();
  id v17 = objc_msgSend(v16, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BD00);
  uint64_t result = (void *)swift_allocObject();
  result[2] = v15;
  result[3] = v14;
  result[4] = 209715200;
  result[5] = v17;
  result[6] = &type metadata for Int64Transform;
  result[7] = &off_1F0383E80;
  *a7 = a3;
  a7[1] = a1;
  a7[2] = a4;
  a7[3] = a2;
  a7[4] = a5;
  a7[5] = a6;
  a7[6] = result;
  return result;
}

uint64_t AutoDownloadProcessorDownloader.didMatch(episodes:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DC90);
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DAB8);
  uint64_t v66 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v59 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB20);
  uint64_t v68 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v62 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DCF8);
  uint64_t v70 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v63 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D9F0);
  uint64_t v76 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v64 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB38);
  uint64_t v78 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v71 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD10);
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  id v72 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA08);
  uint64_t v83 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  id v73 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D900);
  uint64_t v84 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  id v75 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = v1[2];
  long long v95 = v1[1];
  long long v96 = v16;
  long long v94 = *v1;
  uint64_t v97 = *((void *)v1 + 6);
  id v17 = (void *)v16;
  Swift::OpaquePointer_optional v18 = (objc_class *)type metadata accessor for AnalyticsEvent();
  uint64_t v19 = (char *)objc_allocWithZone(v18);
  *(void *)&v19[OBJC_IVAR___PFAnalyticsEvent_name] = @"com.apple.podcasts.downloads.settings.global.retention-policy";
  Swift::OpaquePointer_optional v20 = (id (**)())&v19[OBJC_IVAR___PFAnalyticsEvent_payloadGenerator];
  *Swift::OpaquePointer_optional v20 = sub_1ACDD8678;
  v20[1] = 0;
  v93.receiver = v19;
  v93.super_class = v18;
  id v21 = @"com.apple.podcasts.downloads.settings.global.retention-policy";
  id v22 = objc_msgSendSuper2(&v93, sel_init);
  objc_msgSend(v17, sel_sendEvent_, v22);

  uint64_t v23 = swift_allocObject();
  long long v24 = v95;
  *(_OWORD *)(v23 + 16) = v94;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = v96;
  *(void *)(v23 + 64) = v97;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DFB8);
  swift_allocObject();
  sub_1ACCA4F30((uint64_t)&v94);
  uint64_t v25 = (void *)sub_1ACE75A18();
  uint64_t v26 = (void *)*((void *)&v96 + 1);
  id v91 = (id)*((void *)&v96 + 1);
  id v92 = v25;
  uint64_t v89 = sub_1ACE76CA8();
  uint64_t v27 = *(void *)(v89 - 8);
  uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v90 = v27 + 56;
  v88(v5, 1, 1, v89);
  uint64_t v86 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DFA8, &qword_1EB76DFB8);
  unint64_t v87 = sub_1ACA93A6C();
  id v28 = v26;
  uint64_t v58 = v5;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  swift_release();
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DDF8);
  uint64_t v85 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DC80, (uint64_t *)&unk_1EB76DC90);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DDE8, &qword_1EB76DDF8);
  uint64_t v29 = v59;
  uint64_t v30 = v60;
  sub_1ACE75D98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v30);
  uint64_t v31 = swift_allocObject();
  long long v32 = v95;
  *(_OWORD *)(v31 + 16) = v94;
  *(_OWORD *)(v31 + 32) = v32;
  *(_OWORD *)(v31 + 48) = v96;
  *(void *)(v31 + 64) = v97;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1ACCA4FEC;
  *(void *)(v33 + 24) = v31;
  sub_1ACCA4F30((uint64_t)&v94);
  sub_1ACE757D8();
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DFF0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DAA8, &qword_1EB76DAB8);
  uint64_t v61 = sub_1ACA51EA4((unint64_t *)&unk_1EB76DFE0, &qword_1EB76DFF0);
  uint64_t v34 = v62;
  uint64_t v35 = v65;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v29, v35);
  id v92 = v28;
  uint64_t v36 = (uint64_t)v58;
  v88(v58, 1, 1, v89);
  sub_1ACA51EA4(&qword_1EB76DB18, &qword_1EB76DB20);
  id v37 = v28;
  uint64_t v38 = v63;
  uint64_t v39 = v67;
  sub_1ACE75CA8();
  sub_1ACA50E78(v36, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v39);
  sub_1ACA51EA4(&qword_1EB76DCF0, &qword_1EB76DCF8);
  uint64_t v40 = v64;
  uint64_t v41 = v69;
  sub_1ACE75C08();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v41);
  uint64_t v42 = swift_allocObject();
  long long v43 = v95;
  *(_OWORD *)(v42 + 16) = v94;
  *(_OWORD *)(v42 + 32) = v43;
  *(_OWORD *)(v42 + 48) = v96;
  *(void *)(v42 + 64) = v97;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1ACCA505C;
  *(void *)(v44 + 24) = v42;
  sub_1ACCA4F30((uint64_t)&v94);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76D9E0, &qword_1EB76D9F0);
  uint64_t v45 = v71;
  uint64_t v46 = v74;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v46);
  id v92 = v37;
  v88((char *)v36, 1, 1, v89);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DB28, &qword_1EB76DB38);
  id v47 = v37;
  uint64_t v48 = v72;
  uint64_t v49 = v77;
  sub_1ACE75CA8();
  sub_1ACA50E78(v36, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v49);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DD00, &qword_1EB76DD10);
  uint64_t v50 = v73;
  uint64_t v51 = v79;
  sub_1ACE75C08();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v51);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76D9F8, &qword_1EB76DA08);
  uint64_t v52 = v75;
  uint64_t v53 = v81;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v53);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76D8F0, &qword_1EB76D900);
  uint64_t v54 = v82;
  uint64_t v55 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v54);
  return v55;
}

uint64_t sub_1ACCA34D4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEE0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DED8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    v16[1] = a2;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
    sub_1ACE759C8();
    sub_1ACA51EA4((unint64_t *)&unk_1EB76DEC8, &qword_1EB76DED8);
    uint64_t v14 = sub_1ACE75AD8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
    sub_1ACE759D8();
    sub_1ACA51EA4(&qword_1EB76A750, &qword_1EB76DEE0);
    uint64_t v14 = sub_1ACE75AD8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  *a3 = v14;
  return result;
}

uint64_t sub_1ACCA3728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v4 + 64) = *(void *)(a2 + 48);
  *(void *)(v4 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DFF0);
  swift_allocObject();
  sub_1ACCA4F30(a2);
  swift_bridgeObjectRetain();
  return sub_1ACE75A18();
}

void sub_1ACCA37C8()
{
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1ACE754C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB768C28);
  swift_bridgeObjectRetain_n();
  int v1 = sub_1ACE75498();
  os_log_type_t v2 = sub_1ACE76BE8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE76998();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v5, v7, &v8);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v1, v2, "Failed to start downloads for episodes: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v4, -1, -1);
    MEMORY[0x1AD11B340](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1ACCA39A0(void (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = a2;
  uint64_t v14 = *(void *)a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1ACCA55D8;
  *(void *)(v15 + 24) = v12;
  long long v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(a3 + 32);
  *(void *)(v15 + 80) = *(void *)(a3 + 48);
  if (*(void *)(v14 + OBJC_IVAR___MTDeviceCapacityMonitor_vfsSource))
  {
    id v17 = (os_unfair_lock_s **)(v14 + OBJC_IVAR___MTDeviceCapacityMonitor____capacityLevel);
    swift_beginAccess();
    Swift::OpaquePointer_optional v18 = *v17;
    uint64_t v19 = *v17 + 4;
    swift_retain();
    sub_1ACCA4F30(a3);
    swift_retain();
    sub_1ACCA4F30(a3);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v18 + 6);
    sub_1ACA30C84(v19, &aBlock);
    os_unfair_lock_unlock(v18 + 6);
    uint64_t v20 = aBlock;
    swift_release();
    long long v21 = *(_OWORD *)(a3 + 16);
    long long aBlock = *(_OWORD *)a3;
    long long v37 = v21;
    long long v38 = *(_OWORD *)(a3 + 32);
    uint64_t v39 = *(void *)(a3 + 48);
    LOBYTE(aBlock) = sub_1ACCA3EAC(v20) & 1;
    LOWORD(aBlock) = aBlock;
    a1(&aBlock);
  }
  else
  {
    uint64_t v33 = *(void *)(v14 + OBJC_IVAR___MTDeviceCapacityMonitor_diskAccessQueue);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v32 = v22;
    v23[2] = v22;
    v23[3] = sub_1ACCA5688;
    v23[4] = v15;
    *(void *)&long long v38 = sub_1ACCA5760;
    *((void *)&v38 + 1) = v23;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v37 = sub_1ACA6DA9C;
    *((void *)&v37 + 1) = &block_descriptor_59;
    uint64_t v30 = _Block_copy(&aBlock);
    uint64_t v31 = v13;
    swift_retain();
    sub_1ACCA4F30(a3);
    swift_retain();
    sub_1ACCA4F30(a3);
    swift_retain();
    swift_retain();
    swift_retain();
    long long v24 = v11;
    sub_1ACE75E08();
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1ACCA5590((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    uint64_t v29 = v9;
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    uint64_t v25 = v34;
    sub_1ACE770E8();
    uint64_t v26 = v30;
    MEMORY[0x1AD118ED0](0, v24, v25, v30);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v29);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACCA551C(a3);
}

uint64_t sub_1ACCA3EAC(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 8);
  id v4 = objc_msgSend(self, sel_processInfo);
  unsigned int v5 = objc_msgSend(v4, sel_isLowPowerModeEnabled);

  if (v5)
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB768C28);
    uint64_t v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BC8();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_19;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "Skipping autodownloads - Low Power Mode";
LABEL_18:
    _os_log_impl(&dword_1AC9D5000, v7, v8, v10, v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
LABEL_19:

    return 0;
  }
  if (a1)
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB768C28);
    uint64_t v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BC8();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_19;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "Skipping autodownloads - Device is out of storage";
    goto LABEL_18;
  }
  if (!objc_msgSend(v3, sel_isReachable))
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1ACE754C8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB768C28);
    uint64_t v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BC8();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_19;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "Skipping autodownloads - network unreachable";
    goto LABEL_18;
  }
  if (objc_msgSend(v3, sel_isReachableViaCellular)) {
    return (uint64_t)objc_msgSend(v3, sel_isPodcastsCellularDownloadsEnabled);
  }
  else {
    return 1;
  }
}

uint64_t sub_1ACCA4134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  swift_retain();
  *(void *)(v9 + 16) = sub_1ACCA430C();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1ACD0AA78(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void **)(a3 + 24);
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a3 + 32);
  *(void *)(v14 + 64) = *(void *)(a3 + 48);
  *(void *)(v14 + 72) = v12;
  *(void *)(v14 + 80) = a4;
  *(void *)(v14 + 88) = sub_1ACCA53B8;
  *(void *)(v14 + 96) = v8;
  *(void *)(v14 + 104) = v9;
  *(void *)(v14 + 112) = v10;
  aBlock[4] = sub_1ACCA5508;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_44_2;
  long long v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_1ACCA4F30(a3);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v16);
  _Block_release(v16);
  swift_release();
  return swift_release();
}

id sub_1ACCA430C()
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1ACE74F28();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_sharedDocumentsDirectory);
  sub_1ACE74E98();

  sub_1ACE74EC8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v5 = objc_msgSend(self, sel_defaultManager);
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  *(void *)&long long v33 = 0;
  id v7 = objc_msgSend(v5, sel_attributesOfFileSystemForPath_error_, v6, &v33);

  uint64_t v8 = (void *)v33;
  if (!v7)
  {
    id v14 = (id)v33;
    long long v15 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1ACE754C8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB768C28);
    id v17 = sub_1ACE75498();
    os_log_type_t v18 = sub_1ACE76BE8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1AC9D5000, v17, v18, "Unable to compute free space, autodownload system will not download anything", v19, 2u);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }

    id v20 = v15;
    id v21 = v15;
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      long long v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(void *)&long long v33 = v25;
      *(_DWORD *)long long v24 = 136315138;
      id v32 = v15;
      id v26 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
      uint64_t v27 = sub_1ACE76228();
      id v32 = (id)sub_1ACA3189C(v27, v28, (uint64_t *)&v33);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v22, v23, "%s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_1ACCA5590((unint64_t *)&unk_1EB76E168, type metadata accessor for FileAttributeKey);
  uint64_t v9 = sub_1ACE75FF8();
  id v10 = v8;

  if (*(void *)(v9 + 16))
  {
    id v11 = (id)*MEMORY[0x1E4F283A0];
    unint64_t v12 = sub_1ACA662B0((uint64_t)v11);
    if (v13)
    {
      sub_1ACA33128(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v33);
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
    }
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v34 + 1))
  {
    sub_1ACA50E78((uint64_t)&v33, qword_1EB7725E0);
    return 0;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v29 = v32;
  id v30 = objc_msgSend(v32, sel_longLongValue);

  return v30;
}

void sub_1ACCA4820(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void), uint64_t a5, void *a6)
{
  uint64_t v9 = *(void **)(a1 + 24);
  id v10 = (void *)sub_1ACE76558();
  id v11 = objc_msgSend(v9, sel_episodesForUuids_, v10);

  if (!v11)
  {
    if (qword_1EB768C48 == -1)
    {
LABEL_6:
      uint64_t v15 = sub_1ACE754C8();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EB768C28);
      swift_bridgeObjectRetain_n();
      uint64_t v16 = sub_1ACE75498();
      os_log_type_t v17 = sub_1ACE76BE8();
      if (os_log_type_enabled(v16, v17))
      {
        os_log_type_t v18 = a4;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        v46[0] = v20;
        *(_DWORD *)uint64_t v19 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1ACE76998();
        unint64_t v23 = v22;
        swift_bridgeObjectRelease();
        v45[5] = sub_1ACA3189C(v21, v23, v46);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v16, v17, "Unable to retreive episodes for identifiers: %s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v20, -1, -1);
        long long v24 = v19;
        a4 = v18;
        MEMORY[0x1AD11B340](v24, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a4(MEMORY[0x1E4FBC870], 0);
      return;
    }
LABEL_40:
    swift_once();
    goto LABEL_6;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v12 = sub_1ACE76578();

  sub_1ACCA4F30(a1);
  uint64_t v13 = sub_1ACDFDC94();
  sub_1ACCA551C(a1);
  if (v13 <= 0)
  {
    uint64_t v14 = 209715200;
    if (v12 < 0) {
      goto LABEL_36;
    }
  }
  else
  {
    sub_1ACCA4F30(a1);
    uint64_t v14 = sub_1ACDFDC94();
    sub_1ACCA551C(a1);
    if (v12 < 0) {
      goto LABEL_36;
    }
  }
  if ((v12 & 0x4000000000000000) == 0)
  {
    uint64_t v25 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25) {
      goto LABEL_37;
    }
    goto LABEL_11;
  }
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_11:
    if (v25 >= 1)
    {
      uint64_t v42 = a4;
      a6 += 2;
      a4 = (void (*)(void, void))(v12 & 0xC000000000000001);
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v26 = 0;
      uint64_t v43 = v14;
      unint64_t v44 = v12 & 0xC000000000000001;
      while (1)
      {
        if (a4) {
          id v27 = (id)MEMORY[0x1AD119490](v26, v12);
        }
        else {
          id v27 = *(id *)(v12 + 8 * v26 + 32);
        }
        unint64_t v28 = v27;
        uint64_t v29 = *a6;
        id v30 = objc_msgSend(v27, sel_byteSize, v42);
        if (__OFSUB__(v29, v30))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v14 < v29 - (uint64_t)v30 && (id v31 = objc_msgSend(v28, sel_uuid)) != 0)
        {
          id v32 = v31;
          uint64_t v33 = v12;
          uint64_t v34 = sub_1ACE761B8();
          uint64_t v36 = v35;

          id v37 = objc_msgSend(v28, sel_podcast);
          if (v37)
          {
            long long v38 = v37;
            if (objc_msgSend(v37, sel_hidden)
              || (objc_msgSend(v38, sel_isAuthenticatedDark) & 1) != 0)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              unsigned int v39 = objc_msgSend(v38, sel_isPastAutodownloadOrEpisodeLimitDark);

              if (v39)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_beginAccess();
                sub_1ACD3007C(v45, v34, v36);
                swift_endAccess();
                swift_bridgeObjectRelease();
                id v40 = objc_msgSend(v28, sel_byteSize);

                if (__OFSUB__(*a6, v40))
                {
                  __break(1u);
                  return;
                }
                *a6 -= v40;
              }
              uint64_t v14 = v43;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v12 = v33;
          a4 = (void (*)(void, void))v44;
        }
        else
        {
        }
        if (v25 == ++v26)
        {
          swift_bridgeObjectRelease();
          a4 = v42;
          goto LABEL_38;
        }
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_37:
  swift_bridgeObjectRelease();
LABEL_38:
  swift_beginAccess();
  uint64_t v41 = swift_bridgeObjectRetain();
  a4(v41, 0);
  swift_bridgeObjectRelease();
}

void sub_1ACCA4D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  id v7 = *(void **)(a3 + 16);
  swift_retain();
  uint64_t v8 = (void *)sub_1ACE76978();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1ACCA53B8;
  *(void *)(v9 + 24) = v6;
  v11[4] = sub_1ACCA53BC;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACCA4EA8;
  v11[3] = &block_descriptor_55;
  id v10 = _Block_copy(v11);
  swift_release();
  objc_msgSend(v7, sel_addEpisodeAutoDownloads_completion_, v8, v10);
  _Block_release(v10);
}

uint64_t sub_1ACCA4EA8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_1ACE76988();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCA4F28(void (*a1)(long long *), uint64_t a2)
{
  return sub_1ACCA39A0(a1, a2, v2 + 16);
}

uint64_t sub_1ACCA4F30(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = *(id *)a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v5 = v2;
  swift_unknownObjectRetain();
  id v6 = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1ACCA4FA8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCA4FE0@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACCA34D4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1ACCA4FEC(uint64_t a1)
{
  return sub_1ACCA3728(a1, v1 + 16);
}

uint64_t sub_1ACCA5024@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACCA505C(uint64_t a1)
{
  return sub_1ACCA3728(a1, v1 + 16);
}

uint64_t sub_1ACCA5094()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t destroy for AutoDownloadProcessorDownloader(id *a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_release();
}

void *initializeWithCopy for AutoDownloadProcessorDownloader(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = *(void **)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  a1[6] = *(void *)(a2 + 48);
  id v7 = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = v5;
  swift_unknownObjectRetain();
  id v9 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AutoDownloadProcessorDownloader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v10 = *(void **)(a2 + 40);
  id v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v10;
  id v12 = v10;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AutoDownloadProcessorDownloader(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  swift_unknownObjectRelease();
  id v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadProcessorDownloader(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadProcessorDownloader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadProcessorDownloader()
{
  return &type metadata for AutoDownloadProcessorDownloader;
}

void sub_1ACCA53AC(uint64_t a1, uint64_t a2)
{
  sub_1ACCA4D68(a1, a2, v2 + 16);
}

uint64_t sub_1ACCA53BC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, 0);
}

uint64_t objectdestroy_18Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCA545C(uint64_t a1, uint64_t a2)
{
  return sub_1ACCA4134(a1, a2, v2 + 16, *(void *)(v2 + 72));
}

uint64_t sub_1ACCA5468()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCA5478()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACCA5508()
{
  sub_1ACCA4820(v0 + 16, *(void *)(v0 + 72), *(void *)(v0 + 80), *(void (**)(void, void))(v0 + 88), *(void *)(v0 + 96), *(void **)(v0 + 104));
}

uint64_t sub_1ACCA551C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 40);
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_1ACCA5590(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACCA55D8(__int16 a1)
{
  uint64_t v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  __int16 v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_1ACCA5618()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCA5688(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 16);
  char v3 = sub_1ACCA3EAC(a1);
  return v2(v3 & 1);
}

uint64_t sub_1ACCA56E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACCA5720()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCA5760()
{
  return sub_1ACE6C8FC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1ACCA5794(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x1AD119490](v8, v4);
LABEL_9:
        id v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          unint64_t v4 = v15;
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_1ACE77508();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1ACCA5940(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    id v6 = (uint64_t (*)(uint64_t *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    while (v7 < *(void *)(a3 + 16))
    {
      uint64_t v11 = *(void *)(a3 + 8 * v7 + 32);
      uint64_t v12 = v11;
      uint64_t result = v6(&v12);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v13 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1ACC82F08(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v13;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          uint64_t result = sub_1ACC82F08(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v13;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(void *)(v8 + 8 * v10 + 32) = v11;
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void *PurchaseController.__allocating_init(uiDelegate:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  unint64_t v4 = sub_1ACCAF27C(a1);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t PurchaseController.getStateFromMediaAPI(condition:)(char *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = sub_1ACE75E48();
  uint64_t v8 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  unint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(unsigned char *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = ObjectType;
  aBlock[4] = sub_1ACCAFD78;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_56;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v1;
  sub_1ACE75E08();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v10, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v16[0]);
  return swift_release();
}

uint64_t PurchaseControllerProtocol.productRecentlyPurchasedPublisher(adamId:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a4;
  uint64_t v24 = a3;
  uint64_t v28 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4B38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4B40);
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4B48);
  uint64_t v27 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4B50);
  __n128 v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 || !v28 || v28 == 1000000000000)
  {
    char v29 = 0;
    sub_1ACE759C8();
    sub_1ACA51EA4(&qword_1E99F4B58, &qword_1E99F4B38);
    uint64_t v20 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v22 = v16;
    (*(void (**)(uint64_t, __n128))(v25 + 8))(v24, v17);
    *(void *)(swift_allocObject() + 16) = v28;
    sub_1ACA51EA4(&qword_1E99F4B60, &qword_1E99F4B40);
    sub_1ACE75B58();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    sub_1ACA51EA4(&qword_1E99F4B68, &qword_1E99F4B48);
    sub_1ACE75D28();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
    sub_1ACA51EA4((unint64_t *)&unk_1E99F4B70, &qword_1E99F4B50);
    uint64_t v20 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v15);
  }
  return v20;
}

uint64_t sub_1ACCA6268@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1ACA55E4C();
  uint64_t v4 = sub_1ACE770B8();
  LOBYTE(v3) = sub_1ACCEA330(v4, v5, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 & 1;
  return result;
}

uint64_t sub_1ACCA62D8(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1ACE76FD8();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return sub_1ACCA64B4((uint64_t)v5);
}

uint64_t sub_1ACCA63C4@<X0>(uint64_t a1@<X8>)
{
  __n128 v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x70);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1ACE76FD8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ACCA64B4(uint64_t a1)
{
  __n128 v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x70);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1ACE76FD8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1ACCA65AC())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACCA6624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  swift_beginAccess();
  return sub_1ACA3AAD4(v3, a1, &qword_1EB76D340);
}

uint64_t sub_1ACCA669C(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  swift_beginAccess();
  sub_1ACCAFDA0(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1ACCA6714())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACCA6790()
{
  return sub_1ACE75A58();
}

uint64_t sub_1ACCA67D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1ACE75A88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1ACCA689C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1ACE75A98();
}

uint64_t sub_1ACCA6960()
{
  return swift_endAccess();
}

uint64_t sub_1ACCA69E0(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x88)) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCA6A14()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90));
}

uint64_t sub_1ACCA6A40(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90)) = result;
  return result;
}

id sub_1ACCA6A6C()
{
  id v1 = *(void **)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0));
  uint64_t v2 = (void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98));
  swift_beginAccess();
  return objc_msgSend(v1, sel_setDownloadManager_, *v2);
}

uint64_t sub_1ACCA6AFC()
{
  sub_1ACCAFE08();
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACCA6B24(uint64_t a1)
{
  sub_1ACCAFE6C(a1);
  return swift_unknownObjectRelease();
}

id (*sub_1ACCA6B5C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1ACCA6BD8;
}

id sub_1ACCA6BD8(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1ACCA6A6C();
  }
  return result;
}

uint64_t sub_1ACCA6C0C()
{
  uint64_t v1 = (os_unfair_lock_s **)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8));
  swift_beginAccess();
  uint64_t v2 = *v1 + 4;
  uint64_t v3 = *v1 + 5;
  os_unfair_lock_lock(v3);
  sub_1ACAF7884(v2);
  os_unfair_lock_unlock(v3);
  return swift_endAccess();
}

id sub_1ACCA6CB8()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_privateQueueContext);

  return v1;
}

void *PurchaseController.init(uiDelegate:)(uint64_t a1)
{
  uint64_t v2 = sub_1ACCAF27C(a1);
  swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

void sub_1ACCA6DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1AD11B470](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    char v5 = 0;
    PurchaseController.getStateFromMediaAPI(condition:)(&v5);
  }
}

id PurchaseController.__deallocating_deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for PurchaseController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1ACCA6EF4(void *a1)
{
  id v1 = a1;
  return PurchaseController.__deallocating_deinit();
}

uint64_t sub_1ACCA6F1C(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  swift_bridgeObjectRelease();

  objc_super v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x70);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1ACE76FD8();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1ACA50E78((uint64_t)a1 + *(void *)((*v2 & *a1) + 0x78), &qword_1EB76D340);
  char v5 = (char *)a1 + *(void *)((*v2 & *a1) + 0x80);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772570);
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1ACCA720C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v45 = a8;
  uint64_t v43 = a7;
  uint64_t v46 = a6;
  uint64_t v48 = a4;
  uint64_t v44 = a3;
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1ACE75E48();
  uint64_t v51 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v50 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE754C8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *a5;
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v52 = a1;
  uint64_t v42 = a9;
  uint64_t v21 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, v17);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76C08();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v39 = v13;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v40 = v12;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = v26;
    long long v38 = v15;
    *(_DWORD *)uint64_t v25 = 136315138;
    swift_bridgeObjectRetain();
    v55[0] = sub_1ACA3189C(v52, a2, aBlock);
    uint64_t v13 = v39;
    uint64_t v15 = v38;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v22, v23, "Scheduling purchase task for buyParams %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v26, -1, -1);
    uint64_t v27 = v25;
    uint64_t v12 = v40;
    MEMORY[0x1AD11B340](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v28 = v52;
  char v29 = v49;
  uint64_t v52 = *(void *)((char *)v29 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v29) + 0x68));
  sub_1ACA3AAD4(v43, (uint64_t)v55, qword_1EB7725E0);
  id v30 = (void *)swift_allocObject();
  v30[2] = v29;
  v30[3] = v28;
  uint64_t v31 = v44;
  v30[4] = a2;
  v30[5] = v31;
  uint64_t v32 = v41;
  v30[6] = v48;
  v30[7] = v32;
  v30[8] = v46;
  sub_1ACA50E14((uint64_t)v55, (uint64_t)(v30 + 9), qword_1EB7725E0);
  uint64_t v33 = v42;
  v30[13] = v45;
  v30[14] = v33;
  aBlock[4] = (uint64_t)sub_1ACCAFF74;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_9_1;
  uint64_t v34 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v35 = v29;
  swift_bridgeObjectRetain();
  uint64_t v36 = v50;
  sub_1ACE75E08();
  uint64_t v53 = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v36, v15, v34);
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v47);
  return swift_release();
}

uint64_t sub_1ACCA7820(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v31 = a9;
  uint64_t v32 = a10;
  uint64_t v12 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v17 = *(void *)(v16 + 88);
  swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v12, v17);
  sub_1ACCA63C4((uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 40))(v20, v12, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23, v12);
  uint64_t v39 = a6;
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v31;
  uint64_t v26 = v32;
  _OWORD v24[2] = a1;
  v24[3] = v25;
  v24[4] = v26;
  v24[5] = v21;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t (*)(void *), void *, uint64_t, uint64_t))(v17 + 64);
  uint64_t v28 = a1;
  swift_retain();
  swift_retain();
  v27(v33, v34, v35, v36, &v39, v37, v38, sub_1ACCB0AF0, v24, v12, v17);
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1ACCA7AC0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x68));
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a1;
  aBlock[4] = sub_1ACCB0B6C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_67_1;
  uint64_t v17 = _Block_copy(aBlock);
  uint64_t v18 = a2;
  swift_retain();
  id v19 = a1;
  sub_1ACE75E08();
  v21[1] = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1ACCA7DC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v18 = a2;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = 0;
  PurchaseController.getStateFromMediaAPI(condition:)((char *)aBlock);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v13 = (void *)sub_1ACE76CF8();
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v18;
  v14[3] = a3;
  v14[4] = a4;
  aBlock[4] = sub_1ACA5645C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_73_1;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a4;
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_1ACCA80CC()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68));
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_1ACCAFFE8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_15_2;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v0;
  sub_1ACE75E08();
  v13[1] = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1ACCA83A8(void *a1)
{
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Resetting all subs to not subscribed state", v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1ACCA8598(MEMORY[0x1E4FBC860]);
  uint64_t result = swift_bridgeObjectRelease();
  *((unsigned char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x90)) = 1;
  return result;
}

uint64_t sub_1ACCA8598(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v28 = v8 + 16;
  sub_1ACE761B8();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v10 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  id v12 = objc_msgSend(self, sel_predicateWithValue_, 1);
  objc_msgSend(v11, sel_setPredicate_, v12);

  id v13 = sub_1ACCA6CB8();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = *(void *)(v4 + 80);
  v15[3] = *(void *)(v4 + 88);
  v15[4] = v14;
  v15[5] = v26;
  v15[6] = v11;
  v15[7] = v8;
  v15[8] = ObjectType;
  aBlock[4] = sub_1ACCB0AC4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_58;
  id v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  uint64_t v17 = v11;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWaitWithSave_, v16);
  _Block_release(v16);

  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v19 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v7, v18, v5);
  uint64_t v20 = sub_1ACE75498();
  os_log_type_t v21 = sub_1ACE76C08();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1AC9D5000, v20, v21, "Finished updating subscriptions.", v22, 2u);
    MEMORY[0x1AD11B340](v22, -1, -1);
    uint64_t v23 = v17;
  }
  else
  {
    uint64_t v23 = v20;
    uint64_t v20 = v17;
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  swift_beginAccess();
  uint64_t v24 = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v24;
}

void sub_1ACCA89A8(int a1)
{
}

void sub_1ACCA8A08(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    if (qword_1EB76D630 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1ACE754C8();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB76D610);
    oslog = sub_1ACE75498();
    os_log_type_t v2 = sub_1ACE76C08();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1AC9D5000, oslog, v2, "No music subscription information fetched. Not saving in memory.", v3, 2u);
      MEMORY[0x1AD11B340](v3, -1, -1);
    }
  }
}

uint64_t sub_1ACCA8B08()
{
  uint64_t v0 = sub_1ACE754C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76C08();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1AC9D5000, v5, v6, "Getting channel subscription state from MAPI after updating all feeds.", v7, 2u);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  HIBYTE(v9) = 1;
  return PurchaseController.getStateFromMediaAPI(condition:)((char *)&v9 + 7);
}

void sub_1ACCA8CCC(void *a1)
{
  id v1 = a1;
  sub_1ACCA8B08();
}

void sub_1ACCA8D14()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE754C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v21 - v7;
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, v9, v2);
  id v11 = sub_1ACE75498();
  os_log_type_t v12 = sub_1ACE76C08();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    v21[1] = v1;
    uint64_t v14 = v5;
    uint64_t v15 = v13;
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_1AC9D5000, v11, v12, "Got entitlementsDidChange notification", v13, 2u);
    id v16 = v15;
    uint64_t v5 = v14;
    MEMORY[0x1AD11B340](v16, -1, -1);
  }

  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v8, v2);
  sub_1ACCA6C0C();
  v10(v5, v9, v2);
  uint64_t v18 = sub_1ACE75498();
  os_log_type_t v19 = sub_1ACE76C08();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1AC9D5000, v18, v19, "Set receivedEntitlementsNotification to true", v20, 2u);
    MEMORY[0x1AD11B340](v20, -1, -1);
  }

  v17(v5, v2);
  char v22 = 0;
  PurchaseController.getStateFromMediaAPI(condition:)(&v22);
  sub_1ACCE3320(1, (uint64_t)sub_1ACCA8A08, 0);
}

void sub_1ACCA8FFC(void *a1)
{
  id v1 = a1;
  sub_1ACCA8D14();
}

id PurchaseController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PurchaseController.init()()
{
}

void sub_1ACCA90B8()
{
}

uint64_t sub_1ACCA90FC()
{
  return sub_1ACCA678C();
}

uint64_t sub_1ACCA9120(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1ACCA720C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

BOOL static PurchaseController.RefreshCondition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PurchaseController.RefreshCondition.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t PurchaseController.RefreshCondition.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCA91EC()
{
  return sub_1ACE77B78();
}

void sub_1ACCA9228(void *a1, char a2, uint64_t a3)
{
  uint64_t v66 = a3;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *a1;
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v12 = (char *)&v57 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v57 - v14;
  id v16 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v17 = objc_msgSend(v16, sel_ams_activeiTunesAccount);

  if (v17)
  {
    if ((objc_msgSend(self, sel_acknowledgementNeededForPrivacyIdentifier_, @"com.apple.onboarding.podcasts") & 1) == 0)
    {
      if (a2)
      {
        uint64_t v23 = *(void *)(v5 + 80);
        uint64_t v64 = *(void *)(v5 + 88);
        uint64_t v65 = v23;
        uint64_t v24 = swift_allocObject();
        uint64_t v63 = v24;
        *(void *)(v24 + 16) = MEMORY[0x1E4FBC860];
        uint64_t v25 = v24 + 16;
        if (qword_1EB772290 != -1) {
          swift_once();
        }
        uint64_t v26 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
        swift_beginAccess();
        uint64_t v27 = v7;
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
        uint64_t v59 = v7 + 16;
        uint64_t v60 = v26;
        uint64_t v58 = v28;
        v28(v15, v26, v6);
        char v29 = sub_1ACE75498();
        os_log_type_t v30 = sub_1ACE76C08();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = v25;
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl(&dword_1AC9D5000, v29, v30, "Fetching all channels for personalization.", v32, 2u);
          uint64_t v33 = v32;
          uint64_t v25 = v31;
          uint64_t v27 = v7;
          MEMORY[0x1AD11B340](v33, -1, -1);
        }
        uint64_t v62 = v25;

        uint64_t v34 = *(void (**)(char *, uint64_t))(v27 + 8);
        uint64_t v61 = v27 + 8;
        uint64_t v57 = v34;
        v34(v15, v6);
        sub_1ACE761B8();
        id v35 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
        uint64_t v36 = (void *)sub_1ACE76178();
        swift_bridgeObjectRelease();
        id v37 = objc_msgSend(v35, sel_initWithEntityName_, v36);

        id v38 = objc_msgSend(self, sel_predicateWithValue_, 1);
        objc_msgSend(v37, sel_setPredicate_, v38);

        uint64_t v39 = v66;
        id v40 = sub_1ACCA6CB8();
        uint64_t v41 = (void *)swift_allocObject();
        uint64_t v42 = v64;
        v41[2] = v65;
        v41[3] = v42;
        v41[4] = v37;
        v41[5] = v25;
        v41[6] = v39;
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_1ACCB0BF0;
        *(void *)(v43 + 24) = v41;
        uint64_t v71 = sub_1ACADC690;
        id v72 = (void *)v43;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v68 = 1107296256;
        uint64_t v69 = sub_1ACC525DC;
        uint64_t v70 = &block_descriptor_85_0;
        uint64_t v44 = _Block_copy(&aBlock);
        id v45 = v37;
        swift_retain();
        swift_release();
        objc_msgSend(v40, sel_performBlockAndWait_, v44);

        _Block_release(v44);
        LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v39)
        {
          __break(1u);
        }
        else if (*(void *)(*(void *)v62 + 16))
        {
          v58(v12, v60, v6);
          uint64_t v46 = sub_1ACE75498();
          os_log_type_t v47 = sub_1ACE76C08();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v48 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v48 = 0;
            _os_log_impl(&dword_1AC9D5000, v46, v47, "Retrieving personalized polling interval.", v48, 2u);
            MEMORY[0x1AD11B340](v48, -1, -1);
          }

          v57(v12, v6);
          id v49 = objc_msgSend(self, sel_sharedInstance);
          id v50 = objc_msgSend(v49, sel_personalizedChannelPollingInterval);

          id v51 = objc_msgSend(v50, sel_asyncValuePromiseOnQueue_, *(void *)((char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x68)));
          uint64_t v52 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v53 = (void *)swift_allocObject();
          uint64_t v55 = v63;
          uint64_t v54 = v64;
          v53[2] = v65;
          v53[3] = v54;
          v53[4] = v55;
          v53[5] = v52;
          uint64_t v71 = sub_1ACCB0C50;
          id v72 = v53;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v68 = 1107296256;
          uint64_t v69 = sub_1ACCE320C;
          uint64_t v70 = &block_descriptor_92;
          uint64_t v56 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v51, sel_addFinishBlock_, v56);
          _Block_release(v56);
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
        }
      }
      else
      {
        sub_1ACCA9A64();
      }
    }
  }
  else
  {
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    uint64_t v19 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
    uint64_t v20 = sub_1ACE75498();
    os_log_type_t v21 = sub_1ACE76C08();
    if (os_log_type_enabled(v20, v21))
    {
      char v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v22 = 0;
      _os_log_impl(&dword_1AC9D5000, v20, v21, "Resetting subscription cache since user is not signed in.", v22, 2u);
      MEMORY[0x1AD11B340](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
    sub_1ACCA80CC();
  }
}

uint64_t sub_1ACCA9A64()
{
  uint64_t v0 = sub_1ACE754C8();
  uint64_t v53 = *(void (***)(char *, uint64_t, uint64_t))(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v52 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MediaRequest.Params();
  uint64_t v54 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v56 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v49 - v8;
  *(void *)uint64_t v63 = 1;
  memset(&v63[8], 0, 32);
  v63[40] = 4;
  v58[0] = 3;
  char v62 = 1;
  char v61 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 40) = &unk_1F0380F48;
  unint64_t v51 = sub_1ACA364C4(inited);
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE84820;
  *(unsigned char *)(v11 + 32) = 3;
  *(void *)(v11 + 40) = &unk_1F0380F70;
  *(unsigned char *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = &unk_1F0380F98;
  unint64_t v12 = sub_1ACA364C4(v11);
  char v60 = 1;
  char v59 = 1;
  uint64_t v13 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v16 = sub_1ACA35F90(v14);
  unint64_t v17 = sub_1ACA35FB0(v14);
  unint64_t v18 = sub_1ACA360DC(v14);
  *((void *)&v48 + 1) = sub_1ACA360FC(v14);
  *(void *)&long long v48 = v18;
  *(void *)&long long v47 = v14;
  *((void *)&v47 + 1) = v14;
  *(void *)&long long v46 = v12;
  *((void *)&v46 + 1) = v14;
  *(void *)&long long v45 = v14;
  *((void *)&v45 + 1) = v51;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)((long long *)v63, v58, &v62, &v61, v15, v16, v17, v14, (uint64_t)v9, v45, v46, v47, v14, &v60, 30, 0, v48, 0, 1,
    &v59,
    0,
    (uint64_t)v4,
    0,
    0,
    0,
    0,
    0,
    v14,
    0,
    0,
    2);
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v20 = v53;
  os_log_type_t v21 = v52;
  v53[2](v52, v19, v0);
  char v22 = sub_1ACE75498();
  os_log_type_t v23 = sub_1ACE76C08();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_1AC9D5000, v22, v23, "Getting state from MediaAPI for user's entitlements.", v24, 2u);
    MEMORY[0x1AD11B340](v24, -1, -1);
  }

  ((void (*)(char *, uint64_t))v20[1])(v21, v0);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaRequestController()), sel_init);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v57;
  *(void *)(v25 + 16) = v57;
  uint64_t v27 = v25;
  uint64_t v52 = (char *)v25;
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v29 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v29 + 2) = v28;
  *((void *)v29 + 3) = sub_1ACCB0C5C;
  *((void *)v29 + 4) = v27;
  sub_1ACE77B88();
  id v50 = v9;
  uint64_t v30 = v56;
  sub_1ACA394B0((uint64_t)v9, v56);
  unint64_t v31 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v32 = (v55 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  sub_1ACA56190(v30, v35 + v31);
  *(void *)(v35 + v32) = MEMORY[0x1E4FBC860];
  unint64_t v36 = v35 + v33;
  *(void *)(v36 + 64) = v65;
  long long v37 = v64;
  *(_OWORD *)(v36 + 32) = *(_OWORD *)&v63[32];
  *(_OWORD *)(v36 + 48) = v37;
  long long v38 = *(_OWORD *)&v63[16];
  *(_OWORD *)unint64_t v36 = *(_OWORD *)v63;
  *(_OWORD *)(v36 + 16) = v38;
  uint64_t v39 = v53;
  *(void *)(v35 + v34) = v53;
  id v40 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  *id v40 = sub_1ACA394A4;
  v40[1] = v29;
  id v41 = v26;
  swift_retain();
  swift_retain();
  uint64_t v42 = v39;
  swift_retain();
  uint64_t v43 = (uint64_t)v50;
  sub_1ACB0443C((uint64_t)v50, 0, (uint64_t)sub_1ACA3ABF0, v35);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACA39598(v43);
}

uint64_t sub_1ACCAA104(uint64_t a1, void *a2)
{
  id v3 = sub_1ACCA6CB8();
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F70);
  unint64_t v4 = sub_1ACE76EE8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC82F08(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v15;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1AD119490](v7, v4);
    }
    else {
      id v9 = *(id *)(v4 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    objc_msgSend(v9, sel_lastPersonalizedRequestDate, v15);
    uint64_t v12 = v11;

    uint64_t v15 = v8;
    unint64_t v14 = *(void *)(v8 + 16);
    unint64_t v13 = *(void *)(v8 + 24);
    if (v14 >= v13 >> 1) {
      sub_1ACC82F08(v13 > 1, v14 + 1, 1);
    }
    ++v7;
    *(void *)(v8 + 16) = v14 + 1;
    *(void *)(v8 + 8 * v14 + 32) = v12;
  }
  while (v5 != v7);
  swift_bridgeObjectRelease();
LABEL_14:
  *a2 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCAA2DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v83 = a4;
  uint64_t v86 = a3;
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v89 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v74 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v84 = (char *)&v74 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v85 = (char *)&v74 - v15;
  uint64_t v16 = sub_1ACE750A8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  char v22 = (char *)&v74 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (uint8_t *)&v74 - v24;
  if (a1)
  {
    id v26 = a1;
    sub_1ACE75098();
    id v80 = v26;
    objc_msgSend(v26, sel_doubleValue);
    sub_1ACE74FF8();
    unint64_t v87 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v88 = (void *)(v17 + 8);
    v87(v22, v16);
    uint64_t v27 = v16;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v79 = (uint64_t *)(v86 + 16);
    uint64_t v28 = v6;
    uint64_t v29 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    uint64_t v30 = v89;
    unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    unint64_t v32 = v85;
    uint64_t v78 = v29;
    uint64_t v77 = v89 + 16;
    uint64_t v76 = v31;
    v31(v85, v29, v28);
    unint64_t v33 = *(void (**)(char *, uint8_t *, uint64_t))(v17 + 16);
    uint64_t v82 = v25;
    unint64_t v34 = v25;
    uint64_t v35 = v32;
    v33(v19, v34, v16);
    unint64_t v36 = sub_1ACE75498();
    uint64_t v37 = v28;
    os_log_type_t v38 = sub_1ACE76C08();
    BOOL v39 = os_log_type_enabled(v36, v38);
    uint64_t v81 = v27;
    if (v39)
    {
      uint64_t v75 = v28;
      id v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      id v92 = v41;
      *(_DWORD *)id v40 = 136315138;
      uint64_t v74 = v40 + 4;
      sub_1ACCB0FD0((unint64_t *)&qword_1EB76A950, MEMORY[0x1E4F27928]);
      uint64_t v42 = sub_1ACE777C8();
      uint64_t v91 = sub_1ACA3189C(v42, v43, (uint64_t *)&v92);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      v87(v19, v27);
      _os_log_impl(&dword_1AC9D5000, v36, v38, "Updating channels if any were updated before %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v41, -1, -1);
      MEMORY[0x1AD11B340](v40, -1, -1);

      uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
      uint64_t v45 = v75;
      v44(v35, v75);
    }
    else
    {
      v87(v19, v27);

      uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
      v44(v35, v37);
      uint64_t v45 = v37;
    }
    uint64_t v55 = v79;
    uint64_t v56 = swift_beginAccess();
    uint64_t v57 = *v55;
    MEMORY[0x1F4188790](v56);
    uint64_t v58 = v82;
    *(&v74 - 2) = v82;
    swift_bridgeObjectRetain();
    uint64_t v59 = *(void *)(sub_1ACCA5940((uint64_t)sub_1ACCB0F4C, (uint64_t)(&v74 - 4), v57) + 16);
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v60 = v83 + 16;
      swift_beginAccess();
      uint64_t v61 = MEMORY[0x1AD11B470](v60);
      if (v61)
      {
        char v62 = (void *)v61;
        sub_1ACCA9A64();
      }
      else
      {
      }
    }
    else
    {
      v76(v84, v78, v45);
      uint64_t v63 = v86;
      swift_retain();
      long long v64 = sub_1ACE75498();
      uint64_t v65 = sub_1ACE76C08();
      if (os_log_type_enabled(v64, (os_log_type_t)v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v66 = 134217984;
        swift_beginAccess();
        uint64_t v90 = *(void *)(*(void *)(v63 + 16) + 16);
        uint64_t v58 = v82;
        sub_1ACE76FF8();
        swift_release();
        _os_log_impl(&dword_1AC9D5000, v64, (os_log_type_t)v65, "Defer MAPI update, all %ld channels were updated recently", v66, 0xCu);
        MEMORY[0x1AD11B340](v66, -1, -1);
      }
      else
      {

        swift_release();
      }

      v44(v84, v45);
    }
    return ((uint64_t (*)(uint8_t *, uint64_t))v87)(v58, v81);
  }
  else if (a2)
  {
    long long v46 = (void *)sub_1ACE74D68();
    uint64_t v47 = v6;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v8, v48, v6);
    uint64_t v49 = v46;
    id v50 = sub_1ACE75498();
    os_log_type_t v51 = sub_1ACE76BE8();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 138412290;
      id v92 = v49;
      uint64_t v53 = v49;
      sub_1ACE76FF8();
      uint64_t v54 = v88;
      *uint64_t v88 = v49;

      _os_log_impl(&dword_1AC9D5000, v50, v51, "Error getting subs TTL from bag: %@", v52, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v54, -1, -1);
      MEMORY[0x1AD11B340](v52, -1, -1);
    }
    else
    {

      id v50 = v49;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v8, v47);
  }
  else
  {
    uint64_t v67 = v6;
    if (qword_1EB772290 != -1) {
      swift_once();
    }
    uint64_t v68 = __swift_project_value_buffer(v6, (uint64_t)qword_1EB766B88);
    swift_beginAccess();
    uint64_t v69 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v11, v68, v67);
    uint64_t v70 = sub_1ACE75498();
    os_log_type_t v71 = sub_1ACE76BE8();
    if (os_log_type_enabled(v70, v71))
    {
      id v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v72 = 0;
      _os_log_impl(&dword_1AC9D5000, v70, v71, "Error getting subs TTL from bag", v72, 2u);
      MEMORY[0x1AD11B340](v72, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v11, v67);
  }
}

BOOL sub_1ACCAAC9C(double *a1)
{
  double v1 = *a1;
  sub_1ACE74FB8();
  return v1 < v2;
}

uint64_t sub_1ACCAACDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE75E48();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = *(void *)((char *)a6 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a6) + 0x68));
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a5;
  v17[3] = a6;
  v17[4] = a1;
  aBlock[4] = sub_1ACCB0F20;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_112_0;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a5;
  swift_bridgeObjectRetain();
  uint64_t v20 = a6;
  sub_1ACE75E08();
  v22[1] = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_1ACCAAFD8(void *a1, uint64_t (*a2)(char *, uint64_t), unint64_t a3)
{
  v195 = a2;
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v191 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v202 = (char *)&v179 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v189 = (uint64_t (*)(char *, uint64_t))((char *)&v179 - v8);
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v179 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v179 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v179 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v179 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v179 - v23;
  if (a1)
  {
    v205[2] = (uint64_t)a1;
    id v25 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if ((swift_dynamicCast() & 1) == 0 || LOBYTE(v203[0]) != 1)
    {
      id v41 = a1;
      if (qword_1EB772290 != -1) {
        swift_once();
      }
      uint64_t v42 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB766B88);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v24, v42, v9);
      id v43 = a1;
      id v44 = a1;
      uint64_t v45 = sub_1ACE75498();
      os_log_type_t v46 = sub_1ACE76BE8();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v190 = v9;
        uint64_t v48 = (uint8_t *)v47;
        uint64_t v49 = swift_slowAlloc();
        v203[0] = v49;
        *(_DWORD *)uint64_t v48 = 136315138;
        swift_getErrorValue();
        uint64_t v50 = sub_1ACE77A98();
        v205[0] = sub_1ACA3189C(v50, v51, v203);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v45, v46, "Getting channels failed with error %s", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v49, -1, -1);
        MEMORY[0x1AD11B340](v48, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v24, v190);
      }
      else
      {

        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v24, v9);
      }
    }
  }
  uint64_t v183 = v5;
  sub_1ACCA6C0C();
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v186 = v26;
  uint64_t v185 = v10 + 16;
  v184 = v27;
  v27(v21, v26, v9);
  uint64_t v28 = sub_1ACE75498();
  os_log_type_t v29 = sub_1ACE76C08();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v190 = v9;
  if (v30)
  {
    unint64_t v31 = a3;
    unint64_t v32 = v18;
    unint64_t v33 = v12;
    unint64_t v34 = v15;
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_1AC9D5000, v28, v29, "Set receivedEntitlementsNotification to false", v35, 2u);
    unint64_t v36 = v35;
    uint64_t v15 = v34;
    uint64_t v12 = v33;
    uint64_t v18 = v32;
    a3 = v31;
    uint64_t v9 = v190;
    MEMORY[0x1AD11B340](v36, -1, -1);
  }

  os_log_type_t v38 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v37 = v10 + 8;
  v187 = v38;
  v38(v21, v9);
  if (a3 && (uint64_t v39 = sub_1ACC2BAAC(a3)) != 0)
  {
    unint64_t v40 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v40 = MEMORY[0x1E4FBC860];
  }
  uint64_t v188 = v37;
  v201 = v15;
  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v54 = MEMORY[0x1E4FBC860];
  if (v53)
  {
    v203[0] = MEMORY[0x1E4FBC860];
    if (v53 < 1)
    {
      __break(1u);
      goto LABEL_152;
    }
    if ((v40 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v53; ++i)
      {
        int v56 = *(unsigned __int8 *)(*(void *)(MEMORY[0x1AD119490](i, v40)
                                             + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                                 + 74);
        if (v56 == 2 || (v56 & 1) == 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
        }
      }
    }
    else
    {
      uint64_t v69 = 0;
      uint64_t v70 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
      do
      {
        os_log_type_t v71 = *(char **)(v40 + 8 * v69 + 32);
        if (*(unsigned char *)(*(void *)&v71[v70] + 74))
        {
          id v72 = v71;
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          uint64_t v70 = OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes;
        }
        ++v69;
      }
      while (v53 != v69);
    }
  }
  else
  {
    if (!a1)
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = v9;
      v184(v18, v186, v9);
      uint64_t v74 = sub_1ACE75498();
      os_log_type_t v75 = sub_1ACE76BE8();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v76 = 0;
        _os_log_impl(&dword_1AC9D5000, v74, v75, "Failed to cast to channel objects", v76, 2u);
        MEMORY[0x1AD11B340](v76, -1, -1);
      }

      return v187(v18, v73);
    }
    v203[0] = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = v203[0];
  uint64_t v200 = v203[0];
  if (v203[0] < 0 || (v203[0] & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v58 = sub_1ACE77508();
    if (v58) {
      goto LABEL_33;
    }
LABEL_51:
    swift_release();
    uint64_t v60 = MEMORY[0x1E4FBC860];
    goto LABEL_52;
  }
  uint64_t v58 = *(void *)(v203[0] + 16);
  swift_retain();
  if (!v58) {
    goto LABEL_51;
  }
LABEL_33:
  v203[0] = v54;
  sub_1ACC82D44(0, v58 & ~(v58 >> 63), 0);
  if (v58 < 0) {
    goto LABEL_153;
  }
  uint64_t v59 = 0;
  uint64_t v60 = v203[0];
  unint64_t v61 = v57 & 0xC000000000000001;
  do
  {
    if (v61) {
      char v62 = (char *)MEMORY[0x1AD119490](v59, v57);
    }
    else {
      char v62 = (char *)*(id *)(v57 + 8 * v59 + 32);
    }
    uint64_t v63 = v62;
    uint64_t v65 = *(void *)&v62[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    uint64_t v64 = *(void *)&v62[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    v203[0] = v60;
    unint64_t v67 = *(void *)(v60 + 16);
    unint64_t v66 = *(void *)(v60 + 24);
    if (v67 >= v66 >> 1)
    {
      sub_1ACC82D44(v66 > 1, v67 + 1, 1);
      uint64_t v60 = v203[0];
    }
    ++v59;
    *(void *)(v60 + 16) = v67 + 1;
    uint64_t v68 = v60 + 16 * v67;
    *(void *)(v68 + 32) = v65;
    *(void *)(v68 + 40) = v64;
    uint64_t v57 = v200;
  }
  while (v58 != v59);
  swift_release();
LABEL_52:
  uint64_t v77 = (uint64_t)v201;
  uint64_t v78 = sub_1ACB02BC0(v60);
  swift_bridgeObjectRelease();
  v184((char *)v77, v186, v9);
  swift_bridgeObjectRetain_n();
  uint64_t v79 = sub_1ACE75498();
  os_log_type_t v80 = sub_1ACE76C08();
  BOOL v81 = os_log_type_enabled(v79, v80);
  v181 = v12;
  uint64_t v180 = v78;
  if (v81)
  {
    uint64_t v82 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    v203[0] = v83;
    *(_DWORD *)uint64_t v82 = 141558275;
    v205[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v82 + 12) = 2081;
    v205[0] = v78;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
    sub_1ACA51EA4(&qword_1EB772258, &qword_1EB772580);
    sub_1ACA4F4AC();
    uint64_t v84 = sub_1ACE76498();
    v205[0] = sub_1ACA3189C(v84, v85, v203);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v79, v80, "Got purchased channels %{private,mask.hash}s from MAPI", (uint8_t *)v82, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v83, -1, -1);
    MEMORY[0x1AD11B340](v82, -1, -1);

    uint64_t v86 = (uint64_t)v201;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v86 = v77;
  }
  v187((char *)v86, v9);
  uint64_t v87 = v191;
  uint64_t v88 = v202;
  sub_1ACE75098();
  uint64_t v89 = v189;
  sub_1ACE74FF8();
  uint64_t v91 = *(uint64_t (**)(char *, uint64_t))(v87 + 8);
  uint64_t v90 = v87 + 8;
  v179 = v91;
  uint64_t v92 = v91(v88, v183);
  MEMORY[0x1F4188790](v92);
  objc_super v93 = v195;
  *(&v179 - 2) = v89;
  *(&v179 - 1) = v93;
  unint64_t v94 = v200;
  swift_retain();
  unint64_t v95 = sub_1ACCA5794((uint64_t (*)(id *))sub_1ACCB0F2C, (uint64_t)(&v179 - 4), v94);
  int64_t v96 = v95;
  int64_t v97 = v95 >> 62;
  if (v95 >> 62) {
    goto LABEL_150;
  }
  uint64_t v98 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_57:
  uint64_t v99 = MEMORY[0x1E4FBC860];
  v202 = (char *)v96;
  if (v98)
  {
    v203[0] = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v98 & ~(v98 >> 63), 0);
    if (v98 < 0) {
      goto LABEL_154;
    }
    uint64_t v100 = 0;
    uint64_t v99 = v203[0];
    unint64_t v101 = v96 & 0xC000000000000001;
    do
    {
      if (v101) {
        id v102 = (char *)MEMORY[0x1AD119490](v100, v96);
      }
      else {
        id v102 = (char *)*(id *)(v96 + 8 * v100 + 32);
      }
      uint64_t v103 = v102;
      uint64_t v105 = *(void *)&v102[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
      uint64_t v104 = *(void *)&v102[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
      swift_bridgeObjectRetain();

      v203[0] = v99;
      unint64_t v107 = *(void *)(v99 + 16);
      unint64_t v106 = *(void *)(v99 + 24);
      if (v107 >= v106 >> 1)
      {
        sub_1ACC82D44(v106 > 1, v107 + 1, 1);
        uint64_t v99 = v203[0];
      }
      ++v100;
      *(void *)(v99 + 16) = v107 + 1;
      uint64_t v108 = v99 + 16 * v107;
      *(void *)(v108 + 32) = v105;
      *(void *)(v108 + 40) = v104;
      int64_t v96 = (int64_t)v202;
    }
    while (v98 != v100);
  }
  uint64_t v182 = sub_1ACB02BC0(v99);
  swift_bridgeObjectRelease();
  if (v97)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v109 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v109 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v191 = v90;
  if (v109)
  {
    uint64_t v110 = 0;
    int64_t v97 = v96 & 0xC000000000000001;
    uint64_t v111 = MEMORY[0x1E4FBC868];
    int64_t v192 = v96 + 32;
    uint64_t v194 = v109;
    unint64_t v193 = v96 & 0xC000000000000001;
    while (1)
    {
      if (v97) {
        long long v112 = (char *)MEMORY[0x1AD119490](v110, v96);
      }
      else {
        long long v112 = (char *)*(id *)(v192 + 8 * v110);
      }
      long long v113 = v112;
      BOOL v114 = __OFADD__(v110++, 1);
      if (v114)
      {
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        swift_bridgeObjectRetain();
        uint64_t v98 = sub_1ACE77508();
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      uint64_t v115 = *(void *)&v112[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
      uint64_t v116 = *(void *)&v112[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
      uint64_t v117 = *(void *)&v112[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_relationships];
      if (!v117 || (uint64_t v118 = *(void *)(v117 + 16)) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v130 = sub_1ACA657FC(v115, v116);
        if (v131)
        {
          uint64_t v132 = v130;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v205[0] = v111;
          uint64_t v90 = v111;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1ACD06B78();
            uint64_t v90 = v205[0];
          }
          swift_bridgeObjectRelease();
          sub_1ACB1B6A4(v132, v90);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v90 = v111;
        }
        goto LABEL_72;
      }
      uint64_t v199 = *(void *)&v112[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
      int v119 = (unint64_t *)(v118 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
      swift_beginAccess();
      unint64_t v120 = *v119;
      if (v120 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v90 = sub_1ACE77508();
      }
      else
      {
        uint64_t v90 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v197 = v110;
      uint64_t v198 = v111;
      v196 = v113;
      v201 = (char *)v116;
      if (v90)
      {
        if (v90 < 1) {
          goto LABEL_148;
        }
        uint64_t v121 = 0;
        uint64_t v122 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v120 & 0xC000000000000001) != 0)
          {
            uint64_t v123 = MEMORY[0x1AD119490](v121++, v120);
            int64_t v97 = *(void *)(v123 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
            int64_t v124 = *(void *)(v123 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8);
            swift_bridgeObjectRetain();
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v125 = *(void *)(v120 + 32 + 8 * v121++);
            uint64_t v126 = (int64_t *)(v125 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id);
            int64_t v97 = *v126;
            int64_t v124 = v126[1];
            swift_bridgeObjectRetain();
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v122 = sub_1ACA41EA0(0, v122[2] + 1, 1, v122);
          }
          unint64_t v128 = v122[2];
          unint64_t v127 = v122[3];
          int64_t v96 = v128 + 1;
          if (v128 >= v127 >> 1) {
            uint64_t v122 = sub_1ACA41EA0((void *)(v127 > 1), v128 + 1, 1, v122);
          }
          v122[2] = v96;
          v129 = &v122[2 * v128];
          v129[4] = v97;
          v129[5] = v124;
        }
        while (v121 != v90);
      }
      else
      {
        uint64_t v122 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease_n();
      uint64_t v134 = v198;
      uint64_t v90 = swift_isUniquelyReferenced_nonNull_native();
      v205[0] = v134;
      unint64_t v136 = sub_1ACA657FC(v199, (uint64_t)v201);
      uint64_t v137 = *(void *)(v134 + 16);
      BOOL v138 = (v135 & 1) == 0;
      uint64_t v139 = v137 + v138;
      if (__OFADD__(v137, v138)) {
        goto LABEL_147;
      }
      char v140 = v135;
      if (*(void *)(v134 + 24) >= v139)
      {
        if (v90)
        {
          uint64_t v90 = v205[0];
          if ((v135 & 1) == 0) {
            goto LABEL_108;
          }
        }
        else
        {
          sub_1ACD06B78();
          uint64_t v90 = v205[0];
          if ((v140 & 1) == 0) {
            goto LABEL_108;
          }
        }
      }
      else
      {
        sub_1ACCFDE20(v139, v90);
        uint64_t v141 = sub_1ACA657FC(v199, (uint64_t)v201);
        if ((v140 & 1) != (v142 & 1)) {
          goto LABEL_155;
        }
        unint64_t v136 = v141;
        uint64_t v90 = v205[0];
        if ((v140 & 1) == 0)
        {
LABEL_108:
          *(void *)(v90 + 8 * (v136 >> 6) + 64) |= 1 << v136;
          v144 = (void *)(*(void *)(v90 + 48) + 16 * v136);
          uint64_t v145 = (uint64_t)v201;
          void *v144 = v199;
          v144[1] = v145;
          *(void *)(*(void *)(v90 + 56) + 8 * v136) = v122;
          uint64_t v146 = *(void *)(v90 + 16);
          BOOL v114 = __OFADD__(v146, 1);
          uint64_t v147 = v146 + 1;
          if (v114) {
            goto LABEL_149;
          }
          *(void *)(v90 + 16) = v147;
          swift_bridgeObjectRetain();
          goto LABEL_110;
        }
      }
      uint64_t v143 = *(void *)(v90 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v143 + 8 * v136) = v122;
LABEL_110:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v96 = (int64_t)v202;
      uint64_t v109 = v194;
      uint64_t v110 = v197;
      int64_t v97 = v193;
      long long v113 = v196;
LABEL_72:
      swift_bridgeObjectRelease();

      uint64_t v111 = v90;
      if (v110 == v109) {
        goto LABEL_112;
      }
    }
  }
  uint64_t v90 = MEMORY[0x1E4FBC868];
LABEL_112:
  swift_bridgeObjectRelease_n();
  uint64_t v148 = v90 + 64;
  uint64_t v149 = 1 << *(unsigned char *)(v90 + 32);
  uint64_t v150 = -1;
  if (v149 < 64) {
    uint64_t v150 = ~(-1 << v149);
  }
  uint64_t v151 = v150 & *(void *)(v90 + 64);
  int64_t v96 = (unint64_t)(v149 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v97 = 0;
  for (uint64_t j = MEMORY[0x1E4FBC860]; ; uint64_t j = v205[0])
  {
    if (v151)
    {
      v151 &= v151 - 1;
      goto LABEL_116;
    }
    int64_t v154 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      goto LABEL_146;
    }
    if (v154 >= v96)
    {
LABEL_136:
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v157 = sub_1ACB02BC0(j);
      swift_bridgeObjectRelease();
      v158 = (void *)MEMORY[0x1E4FBC8C8];
      uint64_t v159 = v180;
      if ((*((unsigned char *)v195 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v195) + 0x90)) & 1) == 0)
      {
        uint64_t v160 = v195;
        *(void *)((char *)v195 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v195) + 0x88)) = v180;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((unsigned char *)v160 + *(void *)((*v158 & *(void *)v160) + 0x90)) = 1;
      }
      v161 = v181;
      uint64_t v162 = v190;
      v184(v181, v186, v190);
      uint64_t v163 = v182;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v164 = sub_1ACE75498();
      os_log_type_t v165 = sub_1ACE76C08();
      if (os_log_type_enabled(v164, v165))
      {
        uint64_t v166 = swift_slowAlloc();
        uint64_t v167 = swift_slowAlloc();
        v202 = (char *)v167;
        *(_DWORD *)uint64_t v166 = 141558787;
        uint64_t v204 = 1752392040;
        v205[0] = v167;
        sub_1ACE76FF8();
        *(_WORD *)(v166 + 12) = 2081;
        uint64_t v204 = v163;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
        sub_1ACA51EA4(&qword_1EB772258, &qword_1EB772580);
        sub_1ACA4F4AC();
        uint64_t v168 = sub_1ACE76498();
        uint64_t v204 = sub_1ACA3189C(v168, v169, v205);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v166 + 22) = 2160;
        uint64_t v204 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v166 + 32) = 2081;
        uint64_t v204 = v157;
        v158 = (void *)MEMORY[0x1E4FBC8C8];
        uint64_t v170 = sub_1ACE76498();
        uint64_t v204 = sub_1ACA3189C(v170, v171, v205);
        uint64_t v159 = v180;
        uint64_t v163 = v182;
        sub_1ACE76FF8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v164, v165, "Got recently purchased channels %{private,mask.hash}s and purchased shows %{private,mask.hash}s from MAPI", (uint8_t *)v166, 0x2Au);
        v172 = v202;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v172, -1, -1);
        MEMORY[0x1AD11B340](v166, -1, -1);

        v173 = v181;
        uint64_t v174 = v190;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v173 = v161;
        uint64_t v174 = v162;
      }
      v187(v173, v174);
      unint64_t v175 = v200;
      sub_1ACB82050(v157, v163);
      sub_1ACCA689C();
      uint64_t v176 = sub_1ACCA8598(v175);
      if (objc_msgSend(self, sel_isRunningOnInternalOS))
      {
        v177 = *(void **)((char *)v195 + *(void *)((*v158 & *(void *)v195) + 0xC8));
        v178 = (void *)sub_1ACE76178();
        LOBYTE(v177) = objc_msgSend(v177, sel_BOOLForKey_, v178);

        if (v177) {
          uint64_t v176 = v159;
        }
      }
      swift_bridgeObjectRelease();
      PurchaseController.displaySubscriptionConfirmationSheetIfNeeded(for:channelObjects:)(v176, v175);
      swift_bridgeObjectRelease();
      swift_release();
      return v179((char *)v189, v183);
    }
    uint64_t v155 = *(void *)(v148 + 8 * v154);
    ++v97;
    if (!v155)
    {
      int64_t v97 = v154 + 1;
      if (v154 + 1 >= v96) {
        goto LABEL_136;
      }
      uint64_t v155 = *(void *)(v148 + 8 * v97);
      if (!v155)
      {
        int64_t v97 = v154 + 2;
        if (v154 + 2 >= v96) {
          goto LABEL_136;
        }
        uint64_t v155 = *(void *)(v148 + 8 * v97);
        if (!v155)
        {
          int64_t v97 = v154 + 3;
          if (v154 + 3 >= v96) {
            goto LABEL_136;
          }
          uint64_t v155 = *(void *)(v148 + 8 * v97);
          if (!v155)
          {
            int64_t v97 = v154 + 4;
            if (v154 + 4 >= v96) {
              goto LABEL_136;
            }
            uint64_t v155 = *(void *)(v148 + 8 * v97);
            if (!v155) {
              break;
            }
          }
        }
      }
    }
LABEL_135:
    uint64_t v151 = (v155 - 1) & v155;
LABEL_116:
    v205[0] = j;
    swift_bridgeObjectRetain();
    uint64_t v153 = swift_bridgeObjectRetain();
    sub_1ACA6FB30(v153);
    swift_bridgeObjectRelease();
  }
  int64_t v156 = v154 + 5;
  if (v156 >= v96) {
    goto LABEL_136;
  }
  uint64_t v155 = *(void *)(v148 + 8 * v156);
  if (v155)
  {
    int64_t v97 = v156;
    goto LABEL_135;
  }
  while (1)
  {
    int64_t v97 = v156 + 1;
    if (__OFADD__(v156, 1)) {
      break;
    }
    if (v97 >= v96) {
      goto LABEL_136;
    }
    uint64_t v155 = *(void *)(v148 + 8 * v97);
    ++v156;
    if (v155) {
      goto LABEL_135;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACCAC7B4(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_1ACB24550((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1ACE74FD8();
    sub_1ACA50E78((uint64_t)v7, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  char v13 = sub_1ACE75018();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13)
  {
    char v14 = 1;
  }
  else if (*((unsigned char *)a3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a3) + 0x90)) == 1)
  {
    uint64_t v15 = *(void *)((char *)a3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a3) + 0x88));
    uint64_t v16 = *(void *)(v12 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id);
    uint64_t v17 = *(void *)(v12 + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v18 = sub_1ACCEA330(v16, v17, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = v18 ^ 1;
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t PurchaseController.displaySubscriptionConfirmationSheetIfNeeded(for:channelObjects:)(uint64_t a1, unint64_t a2)
{
  uint64_t v73 = a1;
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v76 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1ACE75E48();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v74 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE754C8();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v82 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v70 - v9;
  aBlock[0] = MEMORY[0x1E4FBC860];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    if (!v11) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_21;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      switch(*(unsigned char *)(*(void *)(MEMORY[0x1AD119490](i, a2)
                                    + OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes)
                        + 176))
      {
        case 1:
        case 2:
          char v13 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0) {
            goto LABEL_6;
          }
          goto LABEL_11;
        case 3:
LABEL_6:
          swift_unknownObjectRelease();
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_11:
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          break;
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      uint64_t v16 = *(char **)(a2 + 8 * j + 32);
      switch(*(unsigned char *)(*(void *)&v16[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 176))
      {
        case 1:
        case 2:
          char v17 = sub_1ACE77848();
          char v18 = v16;
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_14;
          }

          break;
        case 3:
          continue;
        default:
          uint64_t v15 = v16;
          swift_bridgeObjectRelease();
LABEL_14:
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          break;
      }
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v19 = aBlock[0];
  os_log_type_t v80 = v10;
  if ((aBlock[0] & 0x8000000000000000) == 0 && (aBlock[0] & 0x4000000000000000) == 0)
  {
    uint64_t v20 = *(void *)(aBlock[0] + 16);
    if (v20) {
      goto LABEL_24;
    }
LABEL_34:
    swift_release();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1ACE77508();
  swift_release();
  if (!v20) {
    goto LABEL_34;
  }
LABEL_24:
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
  {
LABEL_49:
    __break(1u);
    JUMPOUT(0x1ACCAD62CLL);
  }
  uint64_t v21 = 0;
  uint64_t v22 = aBlock[0];
  do
  {
    if ((v19 & 0xC000000000000001) != 0) {
      uint64_t v23 = (char *)MEMORY[0x1AD119490](v21, v19);
    }
    else {
      uint64_t v23 = (char *)*(id *)(v19 + 8 * v21 + 32);
    }
    uint64_t v24 = v23;
    uint64_t v26 = *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
    uint64_t v25 = *(void *)&v23[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
    swift_bridgeObjectRetain();

    aBlock[0] = v22;
    unint64_t v28 = *(void *)(v22 + 16);
    unint64_t v27 = *(void *)(v22 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1ACC82D44(v27 > 1, v28 + 1, 1);
      uint64_t v22 = aBlock[0];
    }
    ++v21;
    *(void *)(v22 + 16) = v28 + 1;
    uint64_t v29 = v22 + 16 * v28;
    *(void *)(v29 + 32) = v26;
    *(void *)(v29 + 40) = v25;
  }
  while (v20 != v21);
  swift_release();
  uint64_t v10 = v80;
LABEL_35:
  uint64_t v30 = sub_1ACB02BC0(v22);
  swift_bridgeObjectRelease();
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v31 = v84;
  uint64_t v32 = __swift_project_value_buffer(v84, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  uint64_t v33 = v83;
  id v72 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v72(v10, v32, v31);
  swift_bridgeObjectRetain_n();
  unint64_t v34 = sub_1ACE75498();
  os_log_type_t v35 = sub_1ACE76C08();
  unint64_t v36 = &unk_1ACE8B000;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v71 = v38;
    *(_DWORD *)uint64_t v37 = 141558275;
    uint64_t v85 = 1752392040;
    aBlock[0] = v38;
    sub_1ACE76FF8();
    *(_WORD *)(v37 + 12) = 2081;
    uint64_t v70 = v37 + 14;
    swift_bridgeObjectRetain();
    uint64_t v39 = v32;
    uint64_t v40 = sub_1ACE76998();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v40;
    uint64_t v32 = v39;
    uint64_t v85 = sub_1ACA3189C(v43, v42, aBlock);
    unint64_t v36 = (void *)&unk_1ACE8B000;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v34, v35, "User's Entitlements IAP/1p Id's: %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
    uint64_t v44 = v71;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v44, -1, -1);
    MEMORY[0x1AD11B340](v37, -1, -1);

    uint64_t v45 = *(void (**)(char *, uint64_t))(v83 + 8);
    v45(v80, v31);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v45 = *(void (**)(char *, uint64_t))(v33 + 8);
    v45(v10, v31);
  }
  unsigned int v46 = objc_msgSend(self, sel_isRunningOnInternalOS);
  uint64_t v47 = v82;
  if (v46
    && (uint64_t v48 = *(void **)((char *)v81 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v81) + 0xC8)),
        uint64_t v49 = (void *)sub_1ACE76178(),
        LODWORD(v48) = objc_msgSend(v48, sel_BOOLForKey_, v49),
        v49,
        v48))
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = v73;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v51 = v73;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1ACCAEA4C(v30, v51);
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = v84;
  v72(v47, v32, v84);
  swift_bridgeObjectRetain_n();
  uint64_t v53 = sub_1ACE75498();
  os_log_type_t v54 = sub_1ACE76C08();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    os_log_type_t v80 = (char *)v45;
    uint64_t v57 = v56;
    *(_DWORD *)uint64_t v55 = v36[333];
    uint64_t v85 = 1752392040;
    aBlock[0] = v56;
    sub_1ACE76FF8();
    *(_WORD *)(v55 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1ACE76998();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1ACA3189C(v58, v60, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v53, v54, "Showing all newly subscribed 1p/IAP subscriptions in the confirmation sheet: %{private,mask.hash}s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v57, -1, -1);
    MEMORY[0x1AD11B340](v55, -1, -1);

    ((void (*)(char *, uint64_t))v80)(v82, v84);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v45(v47, v52);
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  unint64_t v61 = (void *)sub_1ACE76CF8();
  uint64_t v62 = swift_allocObject();
  uint64_t v63 = v81;
  *(void *)(v62 + 16) = v81;
  *(void *)(v62 + 24) = v50;
  aBlock[4] = (uint64_t)sub_1ACCB0060;
  aBlock[5] = v62;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_21_3;
  uint64_t v64 = _Block_copy(aBlock);
  id v65 = v63;
  swift_release();
  unint64_t v66 = v74;
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  unint64_t v67 = v76;
  uint64_t v68 = v79;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v66, v67, v64);
  _Block_release(v64);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v67, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v66, v77);
}

uint64_t sub_1ACCAD64C(uint64_t a1, uint64_t a2)
{
  sub_1ACCA6624((uint64_t)v9);
  if (!v10) {
    return sub_1ACA50E78((uint64_t)v9, &qword_1EB76D340);
  }
  sub_1ACA3E158((uint64_t)v9, (uint64_t)v6);
  sub_1ACA50E78((uint64_t)v9, &qword_1EB76D340);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a2, v3, v4);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t sub_1ACCAD6FC(uint64_t a1, unint64_t a2, void (**a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  int64_t v124 = a3;
  uint64_t v125 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v109 = (uint64_t)&v102 - v12;
  uint64_t v126 = sub_1ACE750A8();
  unint64_t v112 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v123 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE754C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v110 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v120 = (char *)&v102 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v102 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t)&v102 - v23;
  swift_beginAccess();
  uint64_t v25 = MEMORY[0x1AD11B470](a1 + 16);
  if (!v25)
  {
    if (qword_1EB772290 == -1)
    {
LABEL_18:
      uint64_t v42 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB766B88);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v24, v42, v14);
      os_log_type_t v43 = sub_1ACE76BE8();
      uint64_t v44 = sub_1ACE75498();
      if (os_log_type_enabled(v44, v43))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl(&dword_1AC9D5000, v44, v43, "Could not unwrap self in PurchaseController. Cannot update subscriptions.", v45, 2u);
        MEMORY[0x1AD11B340](v45, -1, -1);
      }

      return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v24, v14);
    }
LABEL_80:
    swift_once();
    goto LABEL_18;
  }
  uint64_t v26 = (char *)v25;
  if (qword_1EB772290 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB766B88);
  swift_beginAccess();
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v117 = v27;
  uint64_t v116 = v15 + 16;
  uint64_t v115 = v28;
  v28(v21, v27, v14);
  uint64_t v29 = sub_1ACE75498();
  os_log_type_t v30 = sub_1ACE76C08();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_1AC9D5000, v29, v30, "Updating subscribed channels from server objects.", v31, 2u);
    MEMORY[0x1AD11B340](v31, -1, -1);
  }

  uint64_t v32 = *(void (**)(char *, uint64_t))(v15 + 8);
  v15 += 8;
  uint64_t v118 = v15;
  BOOL v114 = v32;
  v32(v21, v14);
  uint64_t v105 = v14;
  unint64_t v127 = a2;
  int v119 = v26;
  uint64_t v104 = v10;
  uint64_t v111 = a4;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1ACE77508();
    if (!v24) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v24) {
      goto LABEL_22;
    }
  }
  uint64_t v33 = self;
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_80;
  }
  unint64_t v34 = (void *)v33;
  uint64_t v35 = 0;
  unint64_t v36 = v127 & 0xC000000000000001;
  do
  {
    if (v36) {
      id v38 = (id)MEMORY[0x1AD119490](v35, v127);
    }
    else {
      id v38 = *(id *)(v127 + 8 * v35 + 32);
    }
    ++v35;
    id v39 = v38;
    id v40 = sub_1ACCA6CB8();
    id v41 = objc_msgSend(v34, sel_createOrFindChannelFromFeedChannelItem_personalizedRequest_context_, v39, 1, v40);

    sub_1ACB24864(&v128);
    switch((char)v128)
    {
      case 4:
        uint64_t v37 = 0;
        break;
      default:
        uint64_t v37 = (void *)sub_1ACE76178();
        swift_bridgeObjectRelease();
        break;
    }
    objc_msgSend(v41, sel_setSubscriptionOfferAppType_, v37);
  }
  while (v24 != v35);
LABEL_22:
  unint64_t v47 = v127;
  swift_bridgeObjectRelease();
  id v48 = sub_1ACCA6CB8();
  sub_1ACA50D4C(0, (unint64_t *)&unk_1EB768F70);
  uint64_t v49 = 0;
  uint64_t v50 = sub_1ACE76EE8();
  uint64_t v51 = MEMORY[0x1E4FBC860];
  unint64_t v52 = v50;
  uint64_t v53 = v119;

  uint64_t v128 = v51;
  if (v52 >> 62) {
    goto LABEL_78;
  }
  uint64_t v54 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_24:
  uint64_t v55 = v105;
  unint64_t v121 = v52;
  if (v54)
  {
    if (v54 < 1)
    {
      __break(1u);
      JUMPOUT(0x1ACCAE668);
    }
    uint64_t v56 = 0;
    unint64_t v57 = v52 & 0xC000000000000001;
    do
    {
      if (v57) {
        id v58 = (id)MEMORY[0x1AD119490](v56, v52);
      }
      else {
        id v58 = *(id *)(v52 + 8 * v56 + 32);
      }
      unint64_t v59 = v58;
      if (objc_msgSend(v58, sel_subscriptionActive, v102))
      {
        sub_1ACE773A8();
        sub_1ACE773E8();
        unint64_t v52 = v121;
        sub_1ACE773F8();
        sub_1ACE773B8();
      }
      else
      {
      }
      ++v56;
    }
    while (v54 != v56);
    swift_bridgeObjectRelease();
    v60._rawValue = (void *)v128;
  }
  else
  {
    swift_bridgeObjectRelease();
    v60._rawValue = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v61 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v113 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v53) + 0xC0);
  swift_retain();
  InterestRepository.unsafeFavoriteExistingEntitledChannelsIfNeeded(entitledChannels:)(v60);
  swift_release();
  swift_release();
  if (v54)
  {
    uint64_t v122 = (void *)v54;
    uint64_t v108 = v111 + 16;
    uint64_t v63 = *v61 & *v53;
    unint64_t v64 = v52 & 0xC000000000000001;
    int64_t v124 = (void (**)(char *, uint64_t))(v112 + 8);
    id v102 = &v129;
    unint64_t v107 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
    uint64_t v111 = *(void *)(v63 + 160);
    uint64_t v103 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
    uint64_t v65 = 4;
    *(void *)&long long v62 = 141558275;
    long long v106 = v62;
    unint64_t v112 = v52 & 0xC000000000000001;
    while (1)
    {
      if (v64) {
        id v66 = (id)MEMORY[0x1AD119490](v65 - 4, v52);
      }
      else {
        id v66 = *(id *)(v52 + 8 * v65);
      }
      unint64_t v67 = v66;
      uint64_t v53 = (void *)(v65 - 3);
      if (__OFADD__(v65 - 4, 1))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1ACE77508();
        goto LABEL_24;
      }
      uint64_t v68 = v123;
      sub_1ACE75098();
      sub_1ACE74FB8();
      double v70 = v69;
      uint64_t v71 = *v124;
      (*v124)(v68, v126);
      objc_msgSend(v67, sel_setLastPersonalizedRequestDate_, v70, v102);
      swift_bridgeObjectRetain();
      id v72 = v67;
      unint64_t v73 = sub_1ACCAF0B8(v47, v72);
      swift_bridgeObjectRelease();

      if (v73 >> 62)
      {
        if (!sub_1ACE77508())
        {
LABEL_66:
          swift_bridgeObjectRelease();
          if (objc_msgSend(v72, sel_subscriptionActive))
          {
            v115(v110, v117, v55);
            int64_t v96 = v72;
            int64_t v97 = sub_1ACE75498();
            os_log_type_t v98 = sub_1ACE76C08();
            if (os_log_type_enabled(v97, v98))
            {
              uint64_t v99 = swift_slowAlloc();
              *(_DWORD *)uint64_t v99 = v106;
              *(void *)(v99 + 4) = 1752392040;
              *(_WORD *)(v99 + 12) = 2049;
              *(void *)(v99 + 14) = [v96 storeId];

              _os_log_impl(&dword_1AC9D5000, v97, v98, "Setting channel %{private,mask.hash}lld to not subscribed", (uint8_t *)v99, 0x16u);
              uint64_t v100 = v99;
              unint64_t v52 = v121;
              MEMORY[0x1AD11B340](v100, -1, -1);
            }
            else
            {

              int64_t v97 = v96;
            }
            unint64_t v64 = v112;

            v114(v110, v55);
            objc_msgSend(*(id *)&v119[v111], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v96, 0, 0.0);
            swift_retain();
            uint64_t v101 = (uint64_t)[v96 storeId];
            InterestRepository.unfavoriteInterest(forAdamID:)(v101 & ~(v101 >> 63));

            swift_release();
          }
          else
          {
          }
          goto LABEL_40;
        }
      }
      else if (!*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_66;
      }
      uint64_t v125 = v49;
      if ((v73 & 0xC000000000000001) != 0)
      {
        uint64_t v74 = (char *)MEMORY[0x1AD119490](0, v73);
      }
      else
      {
        if (!*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_77;
        }
        uint64_t v74 = (char *)*(id *)(v73 + 32);
      }
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      if (!objc_msgSend(v72, sel_subscriptionActive)) {
        break;
      }

      unint64_t v47 = v127;
LABEL_39:
      uint64_t v49 = v125;
LABEL_40:
      ++v65;
      if (v53 == v122)
      {

        return swift_bridgeObjectRelease();
      }
    }
    v115(v120, v117, v55);
    uint64_t v76 = v72;
    uint64_t v77 = sub_1ACE75498();
    os_log_type_t v78 = sub_1ACE76C08();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = v106;
      uint64_t v128 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v79 + 12) = 2049;
      uint64_t v128 = (uint64_t)[v76 storeId];
      uint64_t v55 = v105;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v77, v78, "Setting channel %{private,mask.hash}lld to subscribed", (uint8_t *)v79, 0x16u);
      uint64_t v80 = v79;
      unint64_t v52 = v121;
      MEMORY[0x1AD11B340](v80, -1, -1);
    }
    else
    {

      uint64_t v77 = v76;
    }

    v114(v120, v55);
    if (*(void *)(*(void *)&v75[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_attributes] + 88))
    {
      if (qword_1EB76E118 != -1) {
        swift_once();
      }
      BOOL v81 = (void *)qword_1EB76E110;
      uint64_t v82 = (void *)sub_1ACE76178();
      id v83 = objc_msgSend(v81, sel_dateFromString_, v82);

      if (v83)
      {
        uint64_t v84 = (uint64_t)v104;
        sub_1ACE75078();

        uint64_t v85 = 0;
      }
      else
      {
        uint64_t v85 = 1;
        uint64_t v84 = (uint64_t)v104;
      }
      uint64_t v87 = v126;
      (*v107)(v84, v85, 1, v126);
      uint64_t v86 = v109;
      sub_1ACA50E14(v84, v109, (uint64_t *)&unk_1EB773140);
      int v88 = (*v103)(v86, 1, v87);
      unint64_t v52 = v121;
      if (v88 != 1)
      {
        sub_1ACE74FB8();
        double v89 = v90;
        v71((char *)v86, v126);
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v86 = v109;
      (*v107)(v109, 1, 1, v126);
    }
    sub_1ACA50E78(v86, (uint64_t *)&unk_1EB773140);
    double v89 = 0.0;
LABEL_64:
    objc_msgSend(*(id *)&v119[v111], sel_unsafeHandleSubscriptionChangeForChannel_subscriptionBecameActive_subscriptionEnabledDate_, v76, 1, v89);
    swift_retain();
    uint64_t v91 = (uint64_t)[v76 storeId];
    InterestRepository.favoriteInterest(forAdamID:force:)(v91 & ~(v91 >> 63), 0);
    swift_release();
    uint64_t v92 = (uint64_t)[v76 storeId];
    uint64_t v128 = v92 & ~(v92 >> 63);
    sub_1ACA55E4C();
    uint64_t v93 = sub_1ACE770B8();
    uint64_t v95 = v94;
    swift_beginAccess();
    sub_1ACD3007C(&v130, v93, v95);
    swift_endAccess();

    swift_bridgeObjectRelease();
    unint64_t v47 = v127;
    unint64_t v64 = v112;
    goto LABEL_39;
  }

  return swift_bridgeObjectRelease();
}

uint64_t MockPurchaseController.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  sub_1ACE75A58();
  return v0;
}

uint64_t MockPurchaseController.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772570);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MockPurchaseController__recentlyEntitledProducts;
  v7[1] = MEMORY[0x1E4FBC870];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  sub_1ACE75A58();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t sub_1ACCAE7F0()
{
  return swift_endAccess();
}

uint64_t sub_1ACCAE854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8(0);
}

uint64_t MockPurchaseController.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MockPurchaseController__recentlyEntitledProducts;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MockPurchaseController.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation22MockPurchaseController__recentlyEntitledProducts;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1ACCAE98C()
{
  return swift_endAccess();
}

uint64_t sub_1ACCAE9F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACCA67D8();
  *a1 = result;
  return result;
}

uint64_t sub_1ACCAEA20()
{
  return sub_1ACCA689C();
}

uint64_t sub_1ACCAEA4C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1ACCAEBD4((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1ACCAEBD4((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1AD11B340](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1ACCAEBD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  Swift::OpaquePointer v60 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v61 = 0;
    int64_t v6 = 0;
    uint64_t v57 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v58 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_77;
          }
          if (v13 >= v58) {
            goto LABEL_75;
          }
          unint64_t v14 = *(void *)(v57 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v13 + 1;
            if (v13 + 1 >= v58) {
              goto LABEL_75;
            }
            unint64_t v14 = *(void *)(v57 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v13 + 2;
              if (v16 >= v58) {
                goto LABEL_75;
              }
              unint64_t v14 = *(void *)(v57 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_78;
                  }
                  if (v15 >= v58) {
                    goto LABEL_75;
                  }
                  unint64_t v14 = *(void *)(v57 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v15 = v16;
            }
          }
LABEL_20:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1ACE77B18();
        swift_bridgeObjectRetain();
        sub_1ACE76108();
        uint64_t v20 = sub_1ACE77B78();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1ACE77848() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1ACE77848() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_36;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_36:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v60[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_79;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v59 = a3 + 56;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  uint64_t v61 = 0;
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_59;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v41 >= v63) {
      goto LABEL_75;
    }
    unint64_t v42 = *(void *)(v59 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_75;
      }
      unint64_t v42 = *(void *)(v59 + 8 * v34);
      if (!v42) {
        break;
      }
    }
LABEL_58:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_59:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    uint64_t v47 = sub_1ACE77B78();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1ACE77848() & 1) != 0)
    {
LABEL_72:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v60 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_75:
        swift_retain();
        return sub_1ACB86490(v60, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1ACE77848() & 1) != 0) {
          goto LABEL_72;
        }
      }
LABEL_44:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 2;
  if (v43 >= v63) {
    goto LABEL_75;
  }
  unint64_t v42 = *(void *)(v59 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_58;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_75;
    }
    unint64_t v42 = *(void *)(v59 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_58;
    }
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1ACCAF0B8(unint64_t a1, void *a2)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = (char *)MEMORY[0x1AD119490](v4, a1);
LABEL_9:
        int64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_21;
        }
        uint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id];
        uint64_t v8 = *(void *)&v5[OBJC_IVAR____TtC18PodcastsFoundation13ServerChannel_id + 8];
        objc_msgSend(a2, sel_storeId);
        if (v9 == sub_1ACE777C8() && v8 == v10)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          goto LABEL_5;
        }
        char v12 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_17;
        }

LABEL_5:
        ++v4;
        if (v7 == v3) {
          return v15;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v3 = sub_1ACE77508();
      if (!v3) {
        return MEMORY[0x1E4FBC860];
      }
    }
    uint64_t v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void *sub_1ACCAF27C(uint64_t a1)
{
  uint64_t v63 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v58 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v3 = v58;
  uint64_t v4 = sub_1ACE76E78();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v65 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772570);
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  MEMORY[0x1F4188790](v6);
  Swift::OpaquePointer v60 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1ACE76CE8();
  uint64_t v8 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v12 - 8);
  *(void *)((char *)v1 + *(void *)(v3 + 96)) = MEMORY[0x1E4FBC870];
  uint64_t v57 = *(void *)((*v2 & *v1) + 0x68);
  v56[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  int64_t v13 = v1;
  sub_1ACE75E08();
  uint64_t v69 = MEMORY[0x1E4FBC860];
  sub_1ACCB0FD0((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCC58], v59);
  unint64_t v14 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)((char *)v1 + v57) = sub_1ACE76D28();
  uint64_t v15 = (char *)v13 + *(void *)((*v14 & *v13) + 0x70);
  uint64_t v16 = *(void *)(v58 + 88);
  uint64_t v17 = *(void *)(v58 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v15, 1, 1, AssociatedTypeWitness);
  uint64_t v19 = (char *)v13 + *(void *)((*v14 & *v13) + 0x78);
  *(_OWORD *)uint64_t v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((void *)v19 + 4) = 0;
  uint64_t v20 = (char *)v13 + *(void *)((*v14 & *v13) + 0x80);
  uint64_t v21 = MEMORY[0x1E4FBC870];
  uint64_t v69 = MEMORY[0x1E4FBC870];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  unint64_t v22 = v60;
  sub_1ACE75A58();
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v20, v22, v62);
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0x88)) = v21;
  *((unsigned char *)v13 + *(void *)((*v14 & *v13) + 0x90)) = 0;
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0x98)) = 0;
  uint64_t v23 = *(void *)((*v14 & *v13) + 0xA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 20) = 0;
  *(unsigned char *)(v24 + 16) = 0;
  *(void *)((char *)v13 + v23) = v24;
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0xB8)) = 0;
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0xD0)) = 0;
  swift_beginAccess();
  uint64_t v25 = sub_1ACE76FD8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v15, v63, v25);
  swift_endAccess();
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0xC8)) = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  id v26 = sub_1ACCA6CB8();
  type metadata accessor for InterestStore();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  if (qword_1EB7693C0 != -1) {
    swift_once();
  }
  uint64_t v28 = (void *)qword_1EB7693B0;
  type metadata accessor for InterestRepository();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(void *)(v29 + 24) = v28;
  id v30 = objc_allocWithZone((Class)MTSubscriptionChangeHandler);
  id v31 = v28;
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0xA0)) = objc_msgSend(v30, sel_init);
  id v32 = objc_msgSend(self, sel_sharedInstance);
  id v33 = objc_msgSend(self, sel_ams_sharedAccountStore);
  int64_t v34 = (char *)objc_allocWithZone((Class)type metadata accessor for MusicSubscriptionInfoSyncUtil());
  id v35 = sub_1ACAF716C(v32, v33, v34);

  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0xB0)) = v35;
  *(void *)((char *)v13 + *(void *)((*v14 & *v13) + 0xC0)) = v29;
  swift_retain();

  uint64_t v36 = (objc_class *)type metadata accessor for PurchaseController();
  v68.receiver = v13;
  v68.super_class = v36;
  id v37 = objc_msgSendSuper2(&v68, sel_init);
  uint64_t v38 = self;
  id v39 = v37;
  id v40 = objc_msgSend(v38, sel_defaultCenter);
  int64_t v41 = v39;
  unint64_t v42 = (void *)sub_1ACE76178();
  objc_msgSend(v40, sel_addObserver_selector_name_object_, v41, sel_didFinishUpdatingFeeds, v42, 0);

  sub_1ACA50D4C(0, &qword_1E99F4C90);
  int64_t v43 = *(void **)((char *)v41 + *(void *)((*v14 & *v41) + 0x68));
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v45 = v41;
  id v46 = v43;
  id v47 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithDelegate_onQueue_, v45, v46);

  uint64_t v48 = *(void *)((*v14 & *v45) + 0xB8);
  unint64_t v49 = *(void **)((char *)v45 + v48);
  *(void *)((char *)v45 + v48) = v47;

  id v50 = objc_msgSend(v38, sel_defaultCenter);
  uint64_t v51 = v65;
  sub_1ACE76E88();

  uint64_t v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v53 = (void *)swift_allocObject();
  v53[2] = v17;
  v53[3] = v16;
  v53[4] = v52;
  sub_1ACCB0FD0((unint64_t *)&qword_1EB768EF8, MEMORY[0x1E4F27FC8]);
  uint64_t v54 = v67;
  sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v51, v54);
  swift_beginAccess();
  sub_1ACE75828();
  swift_endAccess();
  swift_release();
  swift_release();

  return v45;
}

uint64_t sub_1ACCAFD40()
{
  return swift_deallocObject();
}

void sub_1ACCAFD78()
{
  sub_1ACCA9228(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACCAFD88()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCAFD98@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1ACCA6268(a1, a2);
}

uint64_t sub_1ACCAFDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACCAFE08()
{
  uint64_t v1 = (char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98);
  swift_beginAccess();
  return *(void *)v1;
}

id sub_1ACCAFE6C(uint64_t a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x98));
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return sub_1ACCA6A6C();
}

uint64_t type metadata accessor for PurchaseController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACCAFF0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCAFF74()
{
  return sub_1ACCA7820(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v0 + 72, *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_1ACCAFFB0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCAFFE8()
{
  return sub_1ACCA83A8(*(void **)(v0 + 16));
}

void sub_1ACCAFFF0()
{
}

uint64_t sub_1ACCB0020()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0060()
{
  return sub_1ACCAD64C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1ACCB0068()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACCB0084@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACCA63C4(a1);
}

uint64_t sub_1ACCB00AC()
{
  return 16;
}

__n128 sub_1ACCB00B8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACCB00C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACCA6624(a1);
}

uint64_t sub_1ACCB00E8(uint64_t a1)
{
  sub_1ACA3AAD4(a1, (uint64_t)v2, &qword_1EB76D340);
  return sub_1ACCA669C((uint64_t)v2);
}

uint64_t sub_1ACCB012C()
{
  return 16;
}

__n128 sub_1ACCB0138(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACCB0144@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1ACCAFE08();
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACCB0180()
{
  uint64_t v0 = swift_unknownObjectRetain();
  sub_1ACCAFE6C(v0);
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACCB01C4()
{
  return 16;
}

__n128 sub_1ACCB01D0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of PurchaseControllerProtocol.recentlyEntitledProductsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PurchaseControllerProtocol.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 16))();
}

void sub_1ACCB0214()
{
  swift_getAssociatedTypeWitness();
  sub_1ACE76FD8();
  if (v0 <= 0x3F)
  {
    sub_1ACCB06CC();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for PurchaseController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PurchaseController);
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PurchaseController.uiDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of PurchaseController.subscriptionConfirmatonHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of PurchaseController.recentlyEntitledProductsPublisher.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PurchaseController.downloadManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of PurchaseController.__allocating_init(uiDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 472))();
}

uint64_t dispatch thunk of PurchaseController.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of PurchaseController.resetSubscriptionsCache()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of PurchaseController.syncMusicSubscriptionInformation(shouldForce:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of PurchaseController.entitlementsDidChange()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

void sub_1ACCB06CC()
{
  if (!qword_1EB772578)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB772580);
    unint64_t v0 = sub_1ACE75AA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB772578);
    }
  }
}

unsigned char *sub_1ACCB0728(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCB07F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for PurchaseController.RefreshCondition()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACCB0834()
{
  return type metadata accessor for MockPurchaseController();
}

uint64_t type metadata accessor for MockPurchaseController()
{
  uint64_t result = qword_1E99F4C78;
  if (!qword_1E99F4C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACCB0888()
{
  sub_1ACCB06CC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MockPurchaseController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockPurchaseController);
}

uint64_t dispatch thunk of MockPurchaseController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MockPurchaseController.recentlyEntitledProductsPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of MockPurchaseController.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1ACCB0994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACCA67D8();
  *a1 = result;
  return result;
}

uint64_t sub_1ACCB09C0()
{
  return sub_1ACCA689C();
}

uint64_t sub_1ACCB09EC()
{
  return 16;
}

__n128 sub_1ACCB09F8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1ACCB0A04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0A3C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0A74()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0AC4()
{
  return sub_1ACCAD6FC(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void (***)(char *, uint64_t))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1ACCB0AD8()
{
  return objectdestroy_60Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACCB0AF0(void *a1)
{
  return sub_1ACCA7AC0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACCB0AFC()
{
  return objectdestroy_60Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t objectdestroy_60Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1ACCB0B6C()
{
  return sub_1ACCA7DC0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1ACCB0B78()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACCB0BB8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB0BF0()
{
  return sub_1ACCAA104(*(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1ACCB0C00()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB0C10()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0C50(void *a1, uint64_t a2)
{
  return sub_1ACCAA2DC(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1ACCB0C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACCAACDC(a1, a2, a3, a4, a5, *(void **)(v5 + 16));
}

uint64_t sub_1ACCB0C64()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0CA4()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0ED8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCB0F20()
{
  return sub_1ACCAAFD8(*(void **)(v0 + 16), *(uint64_t (**)(char *, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACCB0F2C(uint64_t *a1)
{
  return sub_1ACCAC7B4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24)) & 1;
}

BOOL sub_1ACCB0F4C(double *a1)
{
  double v1 = *a1;
  sub_1ACE74FB8();
  return v1 < v2;
}

uint64_t sub_1ACCB0F8C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACCB0FC4(uint64_t a1)
{
  sub_1ACCA6DDC(a1, *(void *)(v1 + 32));
}

uint64_t sub_1ACCB0FD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACCB104C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82E60(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1AD119490](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_persistentID);

      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_1ACC82E60(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACCB11B0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC82E20(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v16;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1AD119490](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_assetURL);
      if (v8)
      {
        unint64_t v9 = v8;
        uint64_t v10 = sub_1ACE761B8();
        uint64_t v12 = v11;
      }
      else
      {

        uint64_t v10 = 0;
        uint64_t v12 = 0;
      }
      unint64_t v14 = *(void *)(v16 + 16);
      unint64_t v13 = *(void *)(v16 + 24);
      if (v14 >= v13 >> 1) {
        sub_1ACC82E20(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      *(void *)(v16 + 16) = v14 + 1;
      uint64_t v15 = v16 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1ACCB1340()
{
  qword_1EB76E1B8 = (uint64_t)&unk_1F0380FC0;
}

uint64_t sub_1ACCB1354()
{
  if (qword_1EB76E1C8 != -1) {
    swift_once();
  }
  off_1EB76E1A8 = (_UNKNOWN *)qword_1EB76E1B8;
  return swift_bridgeObjectRetain();
}

uint64_t static MTPodcastEpisodeLimit.allGlobalSettingsCases.getter()
{
  return sub_1ACB1A88C(&qword_1EB76E1B0);
}

uint64_t sub_1ACCB13DC()
{
  if (qword_1EB76E1C8 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t result = sub_1ACA70814(v0);
  qword_1E99F4C98 = (uint64_t)&unk_1F0381038;
  return result;
}

uint64_t static MTPodcastEpisodeLimit.allShowSettingsCases.getter()
{
  return sub_1ACB1A88C(&qword_1E99F00B8);
}

uint64_t static MTPodcastEpisodeLimit.defaultOption.getter()
{
  return 4;
}

Swift::String __swiftcall MTPodcastEpisodeLimit.title(for:)(PodcastsFoundation::AutoDownloadSettingPresentationStyle a1)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)a1;
  if (v1 <= 4294967294)
  {
    switch(v1)
    {
      case 0:
        if (qword_1EB7730A8 == -1) {
          goto LABEL_41;
        }
        goto LABEL_42;
      case 1:
        if (*(unsigned char *)a1)
        {
          if (v3 == 1)
          {
            if (qword_1EB7730A8 != -1) {
              goto LABEL_42;
            }
          }
          else if (qword_1EB7730A8 != -1)
          {
            goto LABEL_42;
          }
        }
        else if (qword_1EB7730A8 != -1)
        {
          goto LABEL_42;
        }
        break;
      case 2:
        char v26 = *(unsigned char *)a1;
        uint64_t v12 = &v26;
        uint64_t v13 = 2;
        goto LABEL_29;
      case 3:
        char v27 = *(unsigned char *)a1;
        uint64_t v12 = &v27;
        uint64_t v13 = 3;
        goto LABEL_29;
      case 4:
        char v28 = *(unsigned char *)a1;
        uint64_t v12 = &v28;
        uint64_t v13 = 5;
        goto LABEL_29;
      case 5:
        char v29 = *(unsigned char *)a1;
        uint64_t v12 = &v29;
        uint64_t v13 = 10;
LABEL_29:
        uint64_t v10 = sub_1ACCB5CAC(v12, v13);
        goto LABEL_48;
      case 6:
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1ACE843F0;
        uint64_t v20 = MEMORY[0x1E4FBB5C8];
        *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v14 + 64) = v20;
        uint64_t v16 = 24;
        goto LABEL_36;
      case 7:
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v17 = swift_allocObject();
        uint64_t v18 = MEMORY[0x1E4FBB550];
        *(_OWORD *)(v17 + 16) = xmmword_1ACE843F0;
        uint64_t v19 = MEMORY[0x1E4FBB5C8];
        *(void *)(v17 + 56) = v18;
        *(void *)(v17 + 64) = v19;
        *(void *)(v17 + 32) = 7;
        goto LABEL_37;
      case 8:
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1ACE843F0;
        uint64_t v21 = MEMORY[0x1E4FBB5C8];
        *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v14 + 64) = v21;
        uint64_t v16 = 14;
        goto LABEL_36;
      case 9:
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1ACE843F0;
        uint64_t v15 = MEMORY[0x1E4FBB5C8];
        *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v14 + 64) = v15;
        uint64_t v16 = 30;
LABEL_36:
        *(void *)(v14 + 32) = v16;
LABEL_37:
        uint64_t v22 = sub_1ACE76188();
        uint64_t v24 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v22;
        uint64_t v11 = v24;
        goto LABEL_48;
      default:
        goto LABEL_46;
    }
    goto LABEL_41;
  }
  if (v1 == 0xFFFFFFFFLL)
  {
    if (qword_1EB7730A8 == -1) {
      goto LABEL_41;
    }
    goto LABEL_42;
  }
  if (v1 != 0x100000001)
  {
    if (v1 != 0x100000000)
    {
LABEL_46:
      type metadata accessor for MTPodcastEpisodeLimit(0);
      uint64_t v31 = v2;
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACCB1C4CLL);
    }
    if (qword_1EB7730A8 == -1) {
      goto LABEL_41;
    }
LABEL_42:
    swift_once();
LABEL_41:
    uint64_t v10 = sub_1ACE74C48();
    goto LABEL_48;
  }
  id v4 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
  objc_msgSend(v4, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");

  char v30 = v3;
  Swift::String v5 = MTPodcastEpisodeLimit.title(for:)((PodcastsFoundation::AutoDownloadSettingPresentationStyle)&v30);
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  sub_1ACE74C48();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ACE843F0;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1ACADC3A8();
  *(Swift::String *)(v6 + 32) = v5;
  uint64_t v7 = sub_1ACE76188();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v7;
  uint64_t v11 = v9;
LABEL_48:
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

void MTPodcastEpisodeLimit.countValue(in:completionHandler:)(void *a1, void (*a2)(uint64_t, uint64_t, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = 0;
  uint64_t v8 = 1;
  if (a4 > 4294967294)
  {
    if (a4 != 0xFFFFFFFFLL)
    {
      if (a4 == 0x100000001)
      {
        id v10 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
        id v11 = objc_msgSend(v10, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");

        if (v11 == (id)0x100000001)
        {
          if (qword_1EB768C48 != -1) {
            swift_once();
          }
          uint64_t v12 = sub_1ACE754C8();
          __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C28);
          uint64_t v13 = sub_1ACE75498();
          os_log_type_t v14 = sub_1ACE76BE8();
          if (os_log_type_enabled(v13, v14))
          {
            uint64_t v15 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v15 = 0;
            _os_log_impl(&dword_1AC9D5000, v13, v14, "Episode global default set as global default, which is unresolvable.", v15, 2u);
            MEMORY[0x1AD11B340](v15, -1, -1);
          }

          sub_1ACCB5E98();
          uint64_t v16 = (void *)swift_allocError();
          uint64_t v8 = 1;
          a2(0, 1, v16);

          uint64_t v7 = 0;
        }
        else
        {
          MTPodcastEpisodeLimit.countValue(in:completionHandler:)(a1, a2, a3, v11);
          uint64_t v7 = 0;
          uint64_t v8 = 1;
        }
      }
      else
      {
        if (a4 != 0x100000000)
        {
LABEL_23:
          type metadata accessor for MTPodcastEpisodeLimit(0);
          v23[0] = a4;
          sub_1ACE77A18();
          __break(1u);
          JUMPOUT(0x1ACCB200CLL);
        }
        uint64_t v7 = 0;
        uint64_t v8 = 0;
      }
    }
LABEL_22:
    a2(v7, v8, 0);
  }
  else
  {
    unint64_t v9 = &selRef_predicateForEpisodesPublishedToday;
    switch(a4)
    {
      case 0:
        goto LABEL_22;
      case 1:
      case 2:
      case 3:
        uint64_t v8 = 0;
        uint64_t v7 = a4;
        goto LABEL_22;
      case 4:
        uint64_t v8 = 0;
        uint64_t v7 = 5;
        goto LABEL_22;
      case 5:
        uint64_t v8 = 0;
        uint64_t v7 = 10;
        goto LABEL_22;
      case 6:
        goto LABEL_19;
      case 7:
        unint64_t v9 = &selRef_predicateForEpisodesPublishedThisWeek;
        goto LABEL_19;
      case 8:
        unint64_t v9 = &selRef_predicateForEpisodesPublishedLastTwoWeeks;
        goto LABEL_19;
      case 9:
        unint64_t v9 = &selRef_predicateForEpisodesPublishedThisMonth;
LABEL_19:
        uint64_t v7 = (uint64_t)[self *v9];
        if (!v7) {
          goto LABEL_22;
        }
        uint64_t v17 = (void *)v7;
        uint64_t v18 = (void *)swift_allocObject();
        v18[2] = v17;
        v18[3] = a2;
        v18[4] = a3;
        v18[5] = a1;
        v23[4] = sub_1ACCB5EF0;
        v23[5] = v18;
        v23[0] = MEMORY[0x1E4F143A8];
        v23[1] = 1107296256;
        v23[2] = sub_1ACA6DA9C;
        v23[3] = &block_descriptor_57;
        uint64_t v19 = _Block_copy(v23);
        id v20 = v17;
        swift_retain();
        id v21 = a1;
        swift_release();
        objc_msgSend(v21, sel_performBlock_, v19);
        _Block_release(v19);

        break;
      default:
        goto LABEL_23;
    }
  }
}

void MTPodcastEpisodeLimit.countEpisodes(matching:in:completionHandler:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = a1;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a2;
  _OWORD v12[4] = sub_1ACCB6C1C;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1ACA6DA9C;
  v12[3] = &block_descriptor_7_0;
  unint64_t v9 = _Block_copy(v12);
  id v10 = a1;
  swift_retain();
  id v11 = a2;
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v9);
  _Block_release(v9);
}

void sub_1ACCB2134(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1ACA6DC4C();
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v7, sel_setPredicate_, a1);
  v12[0] = 0;
  unint64_t v8 = (unint64_t)objc_msgSend(a4, sel_countForFetchRequest_error_, v7, v12);
  id v9 = v12[0];
  if (v12[0])
  {
    id v10 = v12[0];
    swift_willThrow();
    id v11 = v10;
    ((void (*)(void, uint64_t, id))a2)(0, 1, v9);

LABEL_5:
    return;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    a2();
    goto LABEL_5;
  }
  sub_1ACE77488();
  __break(1u);
}

uint64_t MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(void *a1)
{
  id v1 = a1;
  while (v1 == (id)0x100000001)
  {
    id v2 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
    id v1 = objc_msgSend(v2, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");
  }
  if ((unint64_t)v1 < 0xA || v1 == (id)0xFFFFFFFFLL) {
    return 1;
  }
  if (v1 == (id)0x100000000) {
    return 0;
  }
  type metadata accessor for MTPodcastEpisodeLimit(0);
  uint64_t result = sub_1ACE77A18();
  __break(1u);
  return result;
}

BOOL sub_1ACCB2380(char *a1)
{
  id v1 = a1;
  while (v1 == (char *)0x100000001)
  {
    id v2 = objc_msgSend(self, sel__applePodcastsFoundationSettingsUserDefaults);
    id v1 = (char *)objc_msgSend(v2, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");
  }
  return (unint64_t)(v1 - 1) < 5;
}

id MTPodcastEpisodeLimit.excludedAutomaticallyDownloadedEpisodesFetchRequest.getter(uint64_t a1)
{
  id v1 = objc_msgSend(self, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a1, 0);
  sub_1ACE761B8();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  int v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  objc_msgSend(v4, sel_setPredicate_, v1);
  return v4;
}

uint64_t MTPodcastEpisodeLimit.numberOfExcludedAutomaticallyDownloadedEpisodes.getter(uint64_t a1)
{
  if ((objc_msgSend(self, sel_isPodcastsApp) & 1) == 0
    && !objc_msgSend(self, sel_canExtensionOpenDatabase))
  {
    return 0;
  }
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_mainOrPrivateContext);

  uint64_t v11 = 0;
  id v4 = (void *)swift_allocObject();
  v4[2] = &v11;
  v4[3] = v3;
  v4[4] = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1ACCB5F38;
  *(void *)(v5 + 24) = v4;
  aBlock[4] = sub_1ACADC690;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_16_1;
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performBlockAndWait_, v6);

  _Block_release(v6);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v7 & 1) == 0)
  {
    uint64_t v9 = v11;
    swift_release();
    return v9;
  }
  __break(1u);
  return result;
}

void sub_1ACCB26DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_msgSend(self, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a3, 0);
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  objc_msgSend(v7, sel_setPredicate_, v4);
  sub_1ACA6DC4C();
  uint64_t v8 = sub_1ACE76ED8();

  *a1 = v8;
}

uint64_t MTPodcastEpisodeLimit.numberOfExcludedAutomaticallyDownloadedEpisodes()(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1ACE76EC8();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACCB2A70, 0, 0);
}

uint64_t sub_1ACCB2A70()
{
  if ((objc_msgSend(self, sel_isPodcastsApp) & 1) != 0
    || objc_msgSend(self, sel_canExtensionOpenDatabase))
  {
    uint64_t v2 = v0[5];
    uint64_t v1 = v0[6];
    uint64_t v4 = v0[3];
    uint64_t v3 = v0[4];
    id v5 = objc_msgSend(self, sel_sharedInstance);
    id v6 = objc_msgSend(v5, sel_mainOrPrivateContext);
    v0[7] = v6;

    uint64_t v7 = swift_allocObject();
    v0[8] = v7;
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = v4;
    (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
    v6;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[9] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1ACCB2C68;
    uint64_t v9 = v0[6];
    uint64_t v10 = MEMORY[0x1E4FBB550];
    return MEMORY[0x1F40D7080](v0 + 2, v9, sub_1ACCB5F8C, v7, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11(0);
  }
}

uint64_t sub_1ACCB2C68()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[4];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
    id v6 = sub_1ACCB2EE8;
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    id v6 = sub_1ACCB2E1C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1ACCB2E1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1 < 0) {
    return sub_1ACE77488();
  }
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1ACCB2EE8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1ACCB2F54(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a1, 0);
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  objc_msgSend(v7, sel_setPredicate_, v4);
  sub_1ACA6DC4C();
  uint64_t v8 = sub_1ACE76ED8();

  if (!v2) {
    *a2 = v8;
  }
}

uint64_t MTPodcastEpisodeLimit.objectIDsForAutomaticallyDownloadedEpisodesExcludedByGlobalSettings.getter(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, a1, 0);
  sub_1ACE761B8();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  objc_msgSend(v5, sel_setPredicate_, v2);
  uint64_t v6 = sub_1ACCB3150(v5, a1);

  return v6;
}

uint64_t sub_1ACCB3150(void *a1, uint64_t a2)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if ((objc_msgSend(self, sel_isPodcastsApp) & 1) == 0
    && !objc_msgSend(self, sel_canExtensionOpenDatabase))
  {
    uint64_t v13 = 0;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    goto LABEL_6;
  }
  id v4 = objc_msgSend(self, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_mainOrPrivateContext);

  uint64_t v6 = (void *)swift_allocObject();
  id v6[2] = v5;
  void v6[3] = a1;
  v6[4] = &v16;
  v6[5] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1ACCB6C00;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_83_2;
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = v5;
  id v10 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v13 = sub_1ACCB6C00;
    uint64_t v14 = v16;
LABEL_6:
    sub_1ACA76F34((uint64_t)v13);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t MTPodcastEpisodeLimit.persistentIDsForAutoDownloadEpisodesExcludedByGlobalLimit(in:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1ACE76EC8();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACCB342C, 0, 0);
}

uint64_t sub_1ACCB342C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  id v4 = (void *)v0[3];
  id v5 = objc_msgSend(self, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, v0[4], 0);
  sub_1ACE761B8();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v7 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);
  v0[8] = v8;

  objc_msgSend(v8, sel_setPredicate_, v5);
  uint64_t v9 = swift_allocObject();
  v0[9] = v9;
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  id v10 = v4;
  id v11 = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[10] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4CB8);
  *uint64_t v12 = v0;
  v12[1] = sub_1ACCB3618;
  uint64_t v14 = v0[7];
  return MEMORY[0x1F40D7080](v0 + 2, v14, sub_1ACCB5FE8, v9, v13);
}

uint64_t sub_1ACCB3618()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1ACCB6C3C;
  }
  else {
    id v5 = sub_1ACCB6C20;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

unint64_t sub_1ACCB37AC@<X0>(void *a1@<X8>)
{
  sub_1ACA6DC4C();
  unint64_t result = sub_1ACE76EE8();
  if (!v1)
  {
    uint64_t v4 = sub_1ACCB104C(result);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v8 = *(void *)(v4 + 8 * v6 + 32);
        if ((v8 & 0x8000000000000000) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v7 = sub_1ACA43AB8(0, v7[2] + 1, 1, v7);
          }
          unint64_t v10 = v7[2];
          unint64_t v9 = v7[3];
          if (v10 >= v9 >> 1) {
            uint64_t v7 = sub_1ACA43AB8((void *)(v9 > 1), v10 + 1, 1, v7);
          }
          void v7[2] = v10 + 1;
          v7[v10 + 4] = v8;
        }
        ++v6;
      }
      while (v5 != v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    }
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = v7;
  }
  return result;
}

uint64_t MTPodcastEpisodeLimit.assetURLsForAutoDownloadEpisodesExcludedByGlobalLimit(in:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1ACE76EC8();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACCB39C0, 0, 0);
}

uint64_t sub_1ACCB39C0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = (void *)v0[3];
  id v5 = objc_msgSend(self, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings_excludeHidden_, v0[4], 0);
  sub_1ACE761B8();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v7 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);
  v0[8] = v8;

  objc_msgSend(v8, sel_setPredicate_, v5);
  uint64_t v9 = swift_allocObject();
  v0[9] = v9;
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  id v10 = v4;
  id v11 = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[10] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E050);
  *uint64_t v12 = v0;
  v12[1] = sub_1ACCB3BAC;
  uint64_t v14 = v0[7];
  return MEMORY[0x1F40D7080](v0 + 2, v14, sub_1ACCB6004, v9, v13);
}

uint64_t sub_1ACCB3BAC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1ACCB3DB4;
  }
  else {
    id v5 = sub_1ACCB3D40;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1ACCB3D40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1ACCB3DB4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1ACCB3E20@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v25 - v11;
  sub_1ACA6DC4C();
  unint64_t result = sub_1ACE76EE8();
  if (!v1)
  {
    char v29 = v9;
    uint64_t v14 = sub_1ACCB11B0(result);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      char v26 = a1;
      char v27 = v12;
      v25[1] = 0;
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(v7 + 32);
      uint64_t v28 = v7;
      char v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      swift_bridgeObjectRetain();
      v25[0] = v14;
      uint64_t v17 = (void *)(v14 + 40);
      unint64_t v18 = MEMORY[0x1E4FBC860];
      uint64_t v19 = v29;
      while (1)
      {
        if (*v17)
        {
          swift_bridgeObjectRetain();
          sub_1ACE74EF8();
          swift_bridgeObjectRelease();
          if ((*v31)(v5, 1, v6) != 1)
          {
            id v20 = *v16;
            id v21 = v27;
            (*v16)(v27, v5, v6);
            v20(v19, v21, v6);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v18 = sub_1ACA42368(0, *(void *)(v18 + 16) + 1, 1, v18);
            }
            unint64_t v23 = *(void *)(v18 + 16);
            unint64_t v22 = *(void *)(v18 + 24);
            if (v23 >= v22 >> 1) {
              unint64_t v18 = sub_1ACA42368(v22 > 1, v23 + 1, 1, v18);
            }
            *(void *)(v18 + 16) = v23 + 1;
            unint64_t v24 = v18
                + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))
                + *(void *)(v28 + 72) * v23;
            uint64_t v19 = v29;
            v20((char *)v24, v29, v6);
            goto LABEL_6;
          }
        }
        else
        {
          (*v30)(v5, 1, 1, v6);
        }
        sub_1ACA7FA64((uint64_t)v5);
LABEL_6:
        v17 += 2;
        if (!--v15)
        {
          swift_bridgeObjectRelease();
          a1 = v26;
          goto LABEL_16;
        }
      }
    }
    unint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_16:
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = v18;
  }
  return result;
}

uint64_t MTPodcastEpisodeLimit.objectIDsForAutomaticallyDownloadedEpisodesExcludedByShowSettings(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = MTPodcastEpisodeLimit.excludedAutomaticallyDownloadedEpisodesFetchRequest(uuid:)(a1, a2, a3);
  uint64_t v5 = sub_1ACCB3150(v4, a3);

  return v5;
}

id MTPodcastEpisodeLimit.excludedAutomaticallyDownloadedEpisodesFetchRequest(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings_excludeHidden_, a3, 0);
  uint64_t v6 = (void *)sub_1ACE76178();
  id v7 = objc_msgSend(v4, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v6);

  id v8 = objc_msgSend(v5, sel_AND_, v7);
  sub_1ACE761B8();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v10 = v8;
  uint64_t v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithEntityName_, v11);

  objc_msgSend(v12, sel_setPredicate_, v10);
  return v12;
}

uint64_t sub_1ACCB42E8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1ACA6DC4C();
  unint64_t v4 = sub_1ACE76EE8();
  unint64_t v5 = v4;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_15;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1AD119490](i, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * i + 32);
    }
    id v10 = v9;
    id v11 = objc_msgSend(v9, sel_objectID);

    if (v11)
    {
      MEMORY[0x1AD118700]();
      if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1ACE765C8();
      }
      sub_1ACE76628();
      sub_1ACE76598();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v13;
LABEL_16:
  swift_bridgeObjectRelease();
  *a3 = v12;
  return swift_bridgeObjectRelease();
}

Swift::Int __swiftcall MTPodcastEpisodeLimit.numberOfExcludedDownloadedEpisodes(from:)(Swift::String from)
{
  uint64_t v2 = v1;
  object = from._object;
  uint64_t countAndFlagsBits = from._countAndFlagsBits;
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_mainOrPrivateContext);

  if (os_feature_enabled_serial_sort_auto_downloads())
  {
    id v7 = 0;
    uint64_t v8 = v2;
LABEL_11:
    uint64_t v15 = self;
    id v16 = objc_msgSend(v15, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings_excludeHidden_, v8, 0);
    uint64_t v17 = (void *)sub_1ACE76178();
    id v18 = objc_msgSend(v15, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v17);

    id v19 = objc_msgSend(v16, sel_AND_, v18);
    Swift::Int v20 = sub_1ACCB49DC((uint64_t)v19, v2);

    sub_1ACA76F34((uint64_t)v7);
    return v20;
  }
  char v22 = 0;
  id v9 = (void *)swift_allocObject();
  v9[2] = v6;
  v9[3] = countAndFlagsBits;
  v9[4] = object;
  v9[5] = &v22;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1ACCB6028;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_41_1;
  id v11 = _Block_copy(aBlock);
  id v12 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);
  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  Swift::Int result = swift_release();
  if ((v11 & 1) == 0)
  {
    if (v22) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = 0x100000001;
    }
    if (v2 == 0x100000001) {
      uint64_t v8 = v14;
    }
    else {
      uint64_t v8 = v2;
    }
    id v7 = sub_1ACCB6028;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1ACCB4954(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  id v6 = (void *)sub_1ACE76178();
  id v7 = objc_msgSend(a1, sel_podcastForUuid_, v6);

  if (v7)
  {
    unsigned __int8 v8 = objc_msgSend(v7, sel_isSerialShowTypeInFeed);
  }
  else
  {
    unsigned __int8 v8 = 0;
  }
  *a4 = v8;
}

uint64_t sub_1ACCB49DC(uint64_t a1, uint64_t a2)
{
  sub_1ACE761B8();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  objc_msgSend(v6, sel_setPredicate_, a1);
  id v7 = objc_msgSend(self, sel_sharedInstance);
  id v8 = objc_msgSend(v7, sel_mainOrPrivateContext);

  uint64_t v17 = 0;
  id v9 = (void *)swift_allocObject();
  v9[2] = &v17;
  v9[3] = v8;
  v9[4] = v6;
  v9[5] = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1ACCB6BA4;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_73_2;
  id v11 = _Block_copy(aBlock);
  id v12 = v8;
  id v13 = v6;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t MTPodcastEpisodeLimit.numberOfExcludedDownloadedEpisodes(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  id v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *id v7 = v3;
  v7[1] = sub_1ACCB4CBC;
  return sub_1ACCB5144(a1, a2, a3);
}

uint64_t sub_1ACCB4CBC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    return MEMORY[0x1F4188298](sub_1ACCB4E08, 0, 0);
  }
}

uint64_t sub_1ACCB4E08()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings_excludeHidden_, v1, 0);
  v0[6] = v3;
  uint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(v2, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v4);
  v0[7] = v5;

  id v6 = objc_msgSend(v3, sel_AND_, v5);
  v0[8] = v6;
  id v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *id v7 = v0;
  v7[1] = sub_1ACCB4F38;
  return sub_1ACCB6044((uint64_t)v6);
}

uint64_t sub_1ACCB4F38(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1ACCB50D4;
  }
  else
  {

    *(void *)(v4 + 88) = a1;
    id v5 = sub_1ACCB5068;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1ACCB5068()
{
  uint64_t v1 = *(void **)(v0 + 48);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 88);
  return v2(v3);
}

uint64_t sub_1ACCB50D4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 48);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1ACCB5144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_1ACE76EC8();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACCB5208, 0, 0);
}

uint64_t sub_1ACCB5208()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  id v2 = objc_msgSend(v1, sel_mainOrPrivateContext);
  v0[8] = v2;

  if (os_feature_enabled_serial_sort_auto_downloads())
  {

    uint64_t v3 = v0[4];
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(v3);
  }
  else
  {
    uint64_t v7 = v0[6];
    uint64_t v6 = v0[7];
    uint64_t v8 = v0[5];
    uint64_t v10 = v0[2];
    uint64_t v9 = v0[3];
    id v11 = (void *)swift_allocObject();
    v0[9] = v11;
    v11[2] = v2;
    v11[3] = v10;
    v11[4] = v9;
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x1E4F1BD78], v8);
    v2;
    swift_bridgeObjectRetain();
    id v12 = (void *)swift_task_alloc();
    v0[10] = v12;
    *id v12 = v0;
    v12[1] = sub_1ACCB53EC;
    uint64_t v13 = v0[7];
    uint64_t v14 = MEMORY[0x1E4FBB390];
    return MEMORY[0x1F40D7080](v0 + 11, v13, sub_1ACCB6B44, v11, v14);
  }
}

uint64_t sub_1ACCB53EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1ACCB5560, 0, 0);
}

uint64_t sub_1ACCB5560()
{
  uint64_t v1 = *(void *)(v0 + 32);

  if (v1 == 0x100000001)
  {
    if (*(unsigned char *)(v0 + 88)) {
      uint64_t v2 = 0;
    }
    else {
      uint64_t v2 = 0x100000001;
    }
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 32);
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

void sub_1ACCB55F4(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(a1, sel_podcastForUuid_, v4);

  if (v5)
  {
    unsigned __int8 v6 = objc_msgSend(v5, sel_isSerialShowTypeInFeed);
  }
  else
  {
    unsigned __int8 v6 = 0;
  }
  *a2 = v6;
}

uint64_t sub_1ACCB5684(uint64_t *a1)
{
  sub_1ACA6DC4C();
  uint64_t result = sub_1ACE76ED8();
  *a1 = result;
  return result;
}

uint64_t sub_1ACCB58B0@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACA6DC4C();
  uint64_t result = sub_1ACE76ED8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t MTPodcast.currentEpisodeLimitAllowsAutomaticDownloads.getter()
{
  id v1 = objc_msgSend(v0, sel_episodeLimit);
  return MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(v1);
}

id MTPodcast.currentEpisodeLimitIsNextNEpisodes.getter()
{
  id result = objc_msgSend(v0, sel_isSerialShowTypeInFeed);
  if (result)
  {
    uint64_t v2 = (char *)objc_msgSend(v0, sel_episodeLimit);
    return (id)sub_1ACCB2380(v2);
  }
  return result;
}

id PodcastEpisodeLimitHelper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PodcastEpisodeLimitHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastEpisodeLimitHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PodcastEpisodeLimitHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastEpisodeLimitHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static AutoDownloadSettingPresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AutoDownloadSettingPresentationStyle.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t AutoDownloadSettingPresentationStyle.hashValue.getter()
{
  return sub_1ACE77B78();
}

void *static MTPodcastEpisodeLimit.allCases.getter()
{
  return &unk_1F0380C68;
}

void sub_1ACCB5BEC(void *a1@<X8>)
{
  *a1 = &unk_1F0380C68;
}

uint64_t sub_1ACCB5BFC()
{
  return sub_1ACE76538();
}

uint64_t sub_1ACCB5C5C()
{
  return sub_1ACE764F8();
}

uint64_t sub_1ACCB5CAC(unsigned char *a1, uint64_t a2)
{
  if (!*a1)
  {
    if (qword_1EB7730A8 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*a1 == 1)
  {
    if (qword_1EB7730A8 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EB7730A8 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  sub_1ACE74C48();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v3 + 16) = xmmword_1ACE843F0;
  uint64_t v5 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = a2;
  uint64_t v6 = sub_1ACE76188();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1ACCB5E98()
{
  unint64_t result = qword_1E99F4CA0;
  if (!qword_1E99F4CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4CA0);
  }
  return result;
}

void sub_1ACCB5EF0()
{
  sub_1ACCB2134(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1ACCB5F00()
{
  return swift_deallocObject();
}

void sub_1ACCB5F38()
{
  sub_1ACCB26DC(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACCB5F44()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB5F54()
{
  return swift_deallocObject();
}

void sub_1ACCB5F8C(uint64_t *a1@<X8>)
{
  sub_1ACCB2F54(*(void *)(v1 + 24), a1);
}

uint64_t sub_1ACCB5FA8()
{
  return swift_deallocObject();
}

unint64_t sub_1ACCB5FE8@<X0>(void *a1@<X8>)
{
  return sub_1ACCB37AC(a1);
}

unint64_t sub_1ACCB6004@<X0>(unint64_t *a1@<X8>)
{
  return sub_1ACCB3E20(a1);
}

uint64_t sub_1ACCB6020()
{
  return objectdestroy_33Tm();
}

void sub_1ACCB6028()
{
  sub_1ACCB4954(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 **)(v0 + 40));
}

uint64_t sub_1ACCB6034()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB6044(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1ACE76EC8();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACCB6104, 0, 0);
}

uint64_t sub_1ACCB6104()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_mainOrPrivateContext);
  v0[7] = v6;

  sub_1ACE761B8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v8 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);
  v0[8] = v9;

  objc_msgSend(v9, sel_setPredicate_, v4);
  uint64_t v10 = swift_allocObject();
  v0[9] = v10;
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4F1BD78], v3);
  v6;
  id v11 = v9;
  id v12 = (void *)swift_task_alloc();
  v0[10] = v12;
  *id v12 = v0;
  v12[1] = sub_1ACCB62FC;
  uint64_t v13 = v0[6];
  uint64_t v14 = MEMORY[0x1E4FBB550];
  return MEMORY[0x1F40D7080](v0 + 2, v13, sub_1ACCB6AD4, v10, v14);
}

uint64_t sub_1ACCB62FC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[4];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
    id v6 = sub_1ACCB6580;
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    id v6 = sub_1ACCB64B0;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1ACCB64B0()
{
  uint64_t v1 = *(void **)(v0 + 56);

  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 < 0) {
    return sub_1ACE77488();
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1ACCB6580()
{
  uint64_t v1 = *(void **)(v0 + 56);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id _s18PodcastsFoundation25PodcastEpisodeLimitHelperC15allGlobalLimitsSo5NSSetCvgZ_0()
{
  if (qword_1EB76E1B0 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB76E1A8;
  uint64_t v1 = *((void *)off_1EB76E1A8 + 2);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    unint64_t v9 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACE773D8();
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = v3 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v0[v3 + 4]);
      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      uint64_t v3 = v4;
    }
    while (v1 != v4);
    unint64_t v2 = v9;
    swift_bridgeObjectRelease();
  }
  sub_1ACA4E894(v2);
  swift_bridgeObjectRelease();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
  id v6 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithArray_, v6);

  return v7;
}

uint64_t type metadata accessor for PodcastEpisodeLimitHelper()
{
  return self;
}

unint64_t sub_1ACCB6798()
{
  unint64_t result = qword_1E99F4CE0;
  if (!qword_1E99F4CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4CE0);
  }
  return result;
}

unint64_t sub_1ACCB67F0()
{
  unint64_t result = qword_1E99F4CE8;
  if (!qword_1E99F4CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F4CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4CE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AutoDownloadSettingPresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCB6918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadSettingPresentationStyle()
{
  return &type metadata for AutoDownloadSettingPresentationStyle;
}

unsigned char *storeEnumTagSinglePayload for MTPodcastEpisodeLimitResolutionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACCB69ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MTPodcastEpisodeLimitResolutionError()
{
  return &type metadata for MTPodcastEpisodeLimitResolutionError;
}

unint64_t sub_1ACCB6A28()
{
  unint64_t result = qword_1E99F4CF8;
  if (!qword_1E99F4CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4CF8);
  }
  return result;
}

unint64_t sub_1ACCB6A7C()
{
  unint64_t result = qword_1EB7706E0;
  if (!qword_1EB7706E0)
  {
    type metadata accessor for MTPodcastEpisodeLimit(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7706E0);
  }
  return result;
}

uint64_t sub_1ACCB6AD4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACCB58B0(a1);
}

uint64_t sub_1ACCB6AF0()
{
  return objectdestroy_33Tm();
}

uint64_t objectdestroy_33Tm()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACCB6B44(unsigned __int8 *a1@<X8>)
{
  sub_1ACCB55F4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1ACCB6B64()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB6BA4()
{
  return sub_1ACCB5684(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1ACCB6BB0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB6BC0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCB6C00()
{
  return sub_1ACCB42E8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1ACCB6C0C()
{
  return swift_deallocObject();
}

uint64_t static OS_dispatch_source.memoryPressurePublisher()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4D00);
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  MEMORY[0x1F4188790](v0);
  unint64_t v24 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1ACE75E48();
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE76D88();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE76D78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F4D08);
  swift_allocObject();
  uint64_t v12 = sub_1ACE75938();
  sub_1ACCB7174();
  sub_1ACE76D68();
  if (qword_1EB76E148 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1ACE76D98();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_getObjectType();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v12;
  aBlock[4] = sub_1ACCB736C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_58;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1ACE75E08();
  sub_1ACCB7378();
  sub_1ACE76DB8();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  swift_release();
  swift_release();
  sub_1ACE76DF8();
  aBlock[0] = v12;
  *(void *)(swift_allocObject() + 16) = v13;
  sub_1ACA51EA4(&qword_1E99F4D78, (uint64_t *)&unk_1E99F4D08);
  swift_unknownObjectRetain_n();
  uint64_t v17 = v24;
  sub_1ACE75AF8();
  swift_unknownObjectRelease();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F4D80, &qword_1E99F4D00);
  uint64_t v18 = v26;
  uint64_t v19 = sub_1ACE75AD8();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v18);
  return v19;
}

unint64_t sub_1ACCB7174()
{
  unint64_t result = qword_1EB772720;
  if (!qword_1EB772720)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB772720);
  }
  return result;
}

uint64_t sub_1ACCB71B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACCB71EC(uint64_t a1)
{
  uint64_t v2 = sub_1ACE76D88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a1 + 16);
  if (result)
  {
    swift_getObjectType();
    if (sub_1ACE76DA8())
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      sub_1ACE76F18();
      sub_1ACE758E8();
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_1ACCB732C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB736C()
{
  return sub_1ACCB71EC(*(void *)(v0 + 16));
}

uint64_t sub_1ACCB7378()
{
  return sub_1ACE770E8();
}

uint64_t sub_1ACCB7424()
{
  swift_getObjectType();
  uint64_t result = sub_1ACE76DA8();
  if ((result & 1) == 0) {
    return sub_1ACE76DE8();
  }
  return result;
}

uint64_t sub_1ACCB745C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCB7494()
{
  return sub_1ACCB7424();
}

id sub_1ACCB749C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PodcastRequestManager()), sel_init);
  qword_1E99F4D88 = (uint64_t)result;
  return result;
}

id PodcastRequestManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static PodcastRequestManager.sharedInstance.getter()
{
  if (qword_1E99F00C0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E99F4D88;
  return v0;
}

uint64_t sub_1ACCB75B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v52 = a3;
  uint64_t v48 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v49 = *(void *)(v50 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (uint64_t)&v44 - v10;
  *(void *)&long long v60 = 0;
  long long v58 = 0u;
  long long v59 = 0u;
  BYTE8(v60) = 4;
  char v57 = 1;
  char v56 = 1;
  char v55 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE843F0;
  uint64_t v54 = a1;
  *(void *)(v11 + 32) = sub_1ACE777C8();
  *(void *)(v11 + 40) = v12;
  LOBYTE(v54) = 1;
  char v53 = 1;
  uint64_t v13 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v16 = sub_1ACA35F90(v14);
  unint64_t v17 = sub_1ACA35FB0(v14);
  unint64_t v18 = sub_1ACA360BC(v14);
  unint64_t v19 = sub_1ACA360BC(v14);
  unint64_t v20 = sub_1ACA360DC(v14);
  *((void *)&v43 + 1) = sub_1ACA360FC(v14);
  *(void *)&long long v43 = v20;
  *((void *)&v42 + 1) = v14;
  *((void *)&v41 + 1) = v14;
  *(void *)&long long v42 = v14;
  *((void *)&v40 + 1) = v18;
  *(void *)&long long v41 = v19;
  *(void *)&long long v40 = v14;
  uint64_t v21 = v51;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v58, &v57, &v56, &v55, v15, v16, v17, v14, v51, v40, v41, v42, v11, (char *)&v54, 0, 1, v43, 0, 1,
    &v53,
    0,
    (uint64_t)v6,
    0,
    0,
    0,
    0,
    0,
    v14,
    0,
    0,
    2);
  id v46 = *(char **)&v46[OBJC_IVAR____TtC18PodcastsFoundation21PodcastRequestManager_mediaRequestController];
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v48;
  void v22[2] = v45;
  v22[3] = v23;
  v22[4] = v52;
  uint64_t v24 = swift_allocObject();
  uint64_t v48 = v24;
  swift_unknownObjectWeakInit();
  uint64_t v25 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, void *))swift_allocObject();
  *((void *)v25 + 2) = v24;
  *((void *)v25 + 3) = sub_1ACCB7FD0;
  *((void *)v25 + 4) = v22;
  sub_1ACE77B88();
  uint64_t v26 = v47;
  sub_1ACA394B0(v21, v47);
  unint64_t v27 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v28 = (v49 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  sub_1ACA56190(v26, v31 + v27);
  *(void *)(v31 + v28) = v14;
  unint64_t v32 = v31 + v29;
  *(void *)(v32 + 64) = v62;
  long long v33 = v61;
  *(_OWORD *)(v32 + 32) = v60;
  *(_OWORD *)(v32 + 48) = v33;
  long long v34 = v59;
  *(_OWORD *)unint64_t v32 = v58;
  *(_OWORD *)(v32 + 16) = v34;
  id v35 = v46;
  *(void *)(v31 + v30) = v46;
  uint64_t v36 = (uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, void *))(v31 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8));
  objc_class *v36 = sub_1ACA394A4;
  v36[1] = v25;
  id v37 = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v38 = v51;
  sub_1ACB0443C(v51, 0, (uint64_t)sub_1ACA39594, v31);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACA39598(v38);
}

uint64_t sub_1ACCB7A5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  uint64_t v38 = a7;
  uint64_t v10 = sub_1ACE754C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v35 - v15;
  if (!a1)
  {
LABEL_18:
    if (a5)
    {
      id v23 = a5;
      if (qword_1EB768FA0 != -1) {
        swift_once();
      }
      uint64_t v24 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      uint64_t v37 = v11;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24, v10);
      id v25 = a5;
      uint64_t v26 = sub_1ACE75498();
      os_log_type_t v27 = sub_1ACE76BE8();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 134218242;
        uint64_t v39 = a6;
        sub_1ACE76FF8();
        *(_WORD *)(v28 + 12) = 2112;
        uint64_t v29 = sub_1ACE74D68();
        uint64_t v39 = v29;
        sub_1ACE76FF8();
        unint64_t v30 = v36;
        void *v36 = v29;

        _os_log_impl(&dword_1AC9D5000, v26, v27, "Failed to fetch episodes for podcast %lld with error: %@", (uint8_t *)v28, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v30, -1, -1);
        MEMORY[0x1AD11B340](v28, -1, -1);
      }
      else
      {
      }
      unint64_t v16 = v13;
      uint64_t v11 = v37;
LABEL_29:
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      return v38(0, 0);
    }
    if (qword_1EB768FA0 == -1)
    {
LABEL_24:
      uint64_t v31 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v31, v10);
      unint64_t v32 = sub_1ACE75498();
      os_log_type_t v33 = sub_1ACE76BE8();
      if (os_log_type_enabled(v32, v33))
      {
        long long v34 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)long long v34 = 134217984;
        uint64_t v39 = a6;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v32, v33, "Failed to fetch episodes for podcast %lld with unknown error", v34, 0xCu);
        MEMORY[0x1AD11B340](v34, -1, -1);
      }

      goto LABEL_29;
    }
LABEL_32:
    swift_once();
    goto LABEL_24;
  }
  uint64_t v17 = v11;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1ACE77508();
  if (!v11) {
    goto LABEL_16;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AD119490](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcast();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
LABEL_17:
    uint64_t v11 = v17;
    goto LABEL_18;
  }
  uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes);
  if (v19)
  {
    uint64_t v20 = *(void *)(v19 + 56);
    uint64_t v21 = *(void *)(v19 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  v38(v20, v21);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCB7F98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB7FD0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACCB7A5C(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v5 + 24));
}

uint64_t sub_1ACCB7FDC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACCB80B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    a2 = sub_1ACE76178();
  }
  id v4 = (id)a2;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

uint64_t sub_1ACCB810C(void *a1, uint64_t a2, uint64_t a3)
{
  id v55 = a1;
  uint64_t v56 = a3;
  uint64_t v51 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MediaRequest.Params();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (uint64_t)&v48 - v10;
  *(void *)&long long v64 = 0;
  long long v62 = 0u;
  long long v63 = 0u;
  BYTE8(v64) = 4;
  char v61 = 0;
  char v60 = 1;
  char v59 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ACE843F0;
  id v12 = objc_msgSend(a1, sel_description);
  uint64_t v13 = sub_1ACE761B8();
  uint64_t v15 = v14;

  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  char v58 = 1;
  char v57 = 1;
  uint64_t v16 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  unint64_t v18 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v19 = sub_1ACA35F90(v17);
  unint64_t v20 = sub_1ACA35FB0(v17);
  unint64_t v21 = sub_1ACA360BC(v17);
  unint64_t v22 = sub_1ACA360BC(v17);
  unint64_t v23 = sub_1ACA360DC(v17);
  *((void *)&v47 + 1) = sub_1ACA360FC(v17);
  *(void *)&long long v47 = v23;
  *((void *)&v46 + 1) = v17;
  *((void *)&v45 + 1) = v17;
  *(void *)&long long v46 = v17;
  *((void *)&v44 + 1) = v21;
  *(void *)&long long v45 = v22;
  *(void *)&long long v44 = v17;
  uint64_t v24 = v54;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v62, &v61, &v60, &v59, v18, v19, v20, (uint64_t)&unk_1F0381060, v54, v44, v45, v46, v11, &v58, 0, 1, v47, 0, 1,
    &v57,
    0,
    (uint64_t)v6,
    0,
    0,
    0,
    0,
    0,
    v17,
    0,
    0,
    2);
  uint64_t v49 = *(char **)&v49[OBJC_IVAR____TtC18PodcastsFoundation21PodcastRequestManager_mediaRequestController];
  id v25 = (void *)swift_allocObject();
  uint64_t v26 = v51;
  void v25[2] = v55;
  v25[3] = v26;
  v25[4] = v56;
  uint64_t v27 = swift_allocObject();
  uint64_t v51 = v27;
  swift_unknownObjectWeakInit();
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v27;
  void v28[3] = sub_1ACCB8D54;
  v28[4] = v25;
  sub_1ACE77B88();
  uint64_t v29 = v50;
  sub_1ACA394B0(v24, v50);
  unint64_t v30 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v31 = (v52 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  sub_1ACA56190(v29, v34 + v30);
  *(void *)(v34 + v31) = v17;
  unint64_t v35 = v34 + v32;
  *(void *)(v35 + 64) = v66;
  long long v36 = v65;
  *(_OWORD *)(v35 + 32) = v64;
  *(_OWORD *)(v35 + 48) = v36;
  long long v37 = v63;
  *(_OWORD *)unint64_t v35 = v62;
  *(_OWORD *)(v35 + 16) = v37;
  uint64_t v38 = v49;
  *(void *)(v34 + v33) = v49;
  uint64_t v39 = (void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v39 = sub_1ACA3ACF4;
  v39[1] = v28;
  id v40 = v38;
  id v41 = v55;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v42 = v54;
  sub_1ACB0443C(v54, 0, (uint64_t)sub_1ACA39594, v34);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1ACA39598(v42);
}

uint64_t sub_1ACCB85CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t), char *a8)
{
  long long v62 = a7;
  uint64_t v12 = sub_1ACE754C8();
  uint64_t v13 = *(char **)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v58 - v17;
  if (!a1)
  {
LABEL_24:
    if (a5)
    {
      id v36 = a5;
      if (qword_1EB768FA0 != -1) {
        swift_once();
      }
      uint64_t v37 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      char v61 = v13;
      (*((void (**)(char *, uint64_t, uint64_t))v13 + 2))(v15, v37, v12);
      uint64_t v38 = a6;
      id v39 = a5;
      id v40 = a5;
      id v41 = sub_1ACE75498();
      os_log_type_t v42 = sub_1ACE76BE8();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        long long v44 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 138412546;
        char v59 = v15;
        uint64_t v60 = v12;
        long long v63 = v38;
        long long v45 = v38;
        os_log_t v58 = v41;
        long long v46 = v45;
        sub_1ACE76FF8();
        void *v44 = v38;

        *(_WORD *)(v43 + 12) = 2112;
        uint64_t v47 = sub_1ACE74D68();
        long long v63 = v47;
        uint64_t v12 = v60;
        sub_1ACE76FF8();
        v44[1] = v47;

        os_log_t v48 = v58;
        _os_log_impl(&dword_1AC9D5000, v58, v42, "Failed to fetch podcast from episode ADAM ID %@ with error: %@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v44, -1, -1);
        MEMORY[0x1AD11B340](v43, -1, -1);

        unint64_t v18 = v59;
      }
      else
      {

        unint64_t v18 = v15;
      }
      uint64_t v13 = v61;
      goto LABEL_36;
    }
    if (qword_1EB768FA0 == -1)
    {
LABEL_31:
      uint64_t v49 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB768F88);
      swift_beginAccess();
      (*((void (**)(char *, uint64_t, uint64_t))v13 + 2))(v18, v49, v12);
      uint64_t v50 = a6;
      uint64_t v51 = sub_1ACE75498();
      os_log_type_t v52 = sub_1ACE76BE8();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v60 = v12;
        uint64_t v53 = swift_slowAlloc();
        char v61 = a8;
        uint64_t v54 = (uint8_t *)v53;
        char v59 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 138412290;
        long long v63 = v50;
        id v55 = v13;
        uint64_t v56 = v50;
        uint64_t v12 = v60;
        sub_1ACE76FF8();
        char v57 = v59;
        *(void *)char v59 = v50;

        uint64_t v13 = v55;
        _os_log_impl(&dword_1AC9D5000, v51, v52, "Failed to fetch podcast from episode ADAM ID %@ with unknown error", v54, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v57, -1, -1);
        MEMORY[0x1AD11B340](v54, -1, -1);
      }
      else
      {

        uint64_t v51 = v50;
      }

LABEL_36:
      (*((void (**)(char *, uint64_t))v13 + 1))(v18, v12);
      return v62(0, 0, 0, 0);
    }
LABEL_39:
    swift_once();
    goto LABEL_31;
  }
  unint64_t v19 = a8;
  a8 = v15;
  if (!(a1 >> 62))
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v15 = a8;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  if (!sub_1ACE77508()) {
    goto LABEL_21;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AD119490](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for ServerPodcastEpisode();
  uint64_t v21 = swift_dynamicCastClass();
  if (!v21
    || (unint64_t v22 = (void *)(v21 + OBJC_IVAR___MTServerPodcastEpisode_relationships), swift_beginAccess(), !*v22)
    || (unint64_t v23 = (void *)(*v22 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast),
        swift_beginAccess(),
        !*v23))
  {
    swift_unknownObjectRelease();
LABEL_23:
    a8 = v19;
    goto LABEL_24;
  }
  uint64_t v24 = v13;
  id v25 = (unint64_t *)(*v23 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
  swift_beginAccess();
  unint64_t v26 = *v25;
  if (!(v26 >> 62))
  {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v27) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1ACE77508();
  if (!result)
  {
LABEL_41:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v24;
    goto LABEL_22;
  }
LABEL_12:
  if ((v26 & 0xC000000000000001) != 0)
  {
    uint64_t v29 = (char *)MEMORY[0x1AD119490](0, v26);
  }
  else
  {
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = (char *)*(id *)(v26 + 32);
  }
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id];
  uint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_id + 8];
  uint64_t v33 = *(void *)&v30[OBJC_IVAR____TtC18PodcastsFoundation17ServerPodcastBase_attributes];
  if (v33)
  {
    uint64_t v35 = *(void *)(v33 + 56);
    uint64_t v34 = *(void *)(v33 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v34 = 0;
  }
  swift_bridgeObjectRetain();
  v62(v31, v32, v35, v34);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCB8D14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCB8D54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1ACCB85CC(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24), *(char **)(v5 + 32));
}

void sub_1ACCB8E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v7 = (void *)sub_1ACE76178();
    if (a4)
    {
LABEL_3:
      uint64_t v8 = sub_1ACE76178();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  id v9 = (id)v8;
  (*(void (**)(uint64_t, void *))(a5 + 16))(a5, v7);
}

id PodcastRequestManager.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC18PodcastsFoundation21PodcastRequestManager_mediaRequestController;
  id v2 = objc_allocWithZone((Class)type metadata accessor for MediaRequestController());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PodcastRequestManager();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for PodcastRequestManager()
{
  return self;
}

id PodcastRequestManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastRequestManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PodcastRequestManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastRequestManager);
}

uint64_t dispatch thunk of PodcastRequestManager.updatePodcast(storeId:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PodcastRequestManager.updatePodcast(episodeAdamId:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1ACCB908C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACCB90C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1ACCB8E08(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1ACCB90CC(uint64_t a1, uint64_t a2)
{
  sub_1ACCB80B0(a1, a2, *(void *)(v2 + 16));
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.strategies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.init(strategies:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t PrioritizedDownloadConsistencyResolutionStrategy.resolution(for:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACCB9134(a1, v3, (uint64_t)v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1ACCB9134(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DownloadConsistency.Issue(0);
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v22 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D968);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2[2])
  {
    uint64_t v16 = a2[7];
    uint64_t v15 = a2[8];
    __swift_project_boxed_opaque_existential_1(a2 + 4, v16);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(a1, v16, v15);
    sub_1ACB7ACAC(a1, (uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v17 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v23;
    sub_1ACB7AD14((uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
    *(void *)(v18 + ((v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD58);
    sub_1ACA51EA4(&qword_1EB76DD50, &qword_1EB76DD58);
    sub_1ACE75B98();
    swift_release();
    swift_release();
    sub_1ACA51EA4(&qword_1EB76D960, &qword_1EB76D968);
    uint64_t v19 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    sub_1ACCB9C58();
    uint64_t v24 = swift_allocError();
    type metadata accessor for DownloadConsistency.IssueResolution(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    sub_1ACE75978();
    sub_1ACA51EA4(&qword_1E99F4DA0, &qword_1EB76DEA0);
    uint64_t v19 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v19;
}

void sub_1ACCB9510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v31 = a3;
  uint64_t v32 = a6;
  uint64_t v33 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEA0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DownloadConsistency.Issue(0);
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D968);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5 >> 1 == a4)
  {
    sub_1ACCB9C58();
    v35[0] = swift_allocError();
    type metadata accessor for DownloadConsistency.IssueResolution(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    sub_1ACE75978();
    sub_1ACA51EA4(&qword_1E99F4DA0, &qword_1EB76DEA0);
    sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else if ((uint64_t)(a5 >> 1) <= a4)
  {
    __break(1u);
  }
  else
  {
    unint64_t v28 = a5;
    uint64_t v29 = v17;
    uint64_t v20 = v31;
    sub_1ACA3E158(v31 + 40 * a4, (uint64_t)v35);
    uint64_t v22 = v36;
    uint64_t v21 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(a1, v22, v21);
    sub_1ACB7ACAC(a1, (uint64_t)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    unint64_t v24 = (v14 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v32;
    sub_1ACB7AD14((uint64_t)v15, v25 + v23);
    unint64_t v26 = (void *)(v25 + v24);
    *unint64_t v26 = v33;
    v26[1] = v20;
    unint64_t v27 = v28;
    void v26[2] = a4;
    v26[3] = v27;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD58);
    sub_1ACA51EA4(&qword_1EB76DD50, &qword_1EB76DD58);
    sub_1ACE75B98();
    swift_release();
    swift_release();
    sub_1ACA51EA4(&qword_1EB76D960, &qword_1EB76D968);
    sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  }
}

uint64_t sub_1ACCB9934(uint64_t a1)
{
  return sub_1ACCB9134(a1, (void *)*v1, *v1);
}

ValueMetadata *type metadata accessor for PrioritizedDownloadConsistencyResolutionStrategy()
{
  return &type metadata for PrioritizedDownloadConsistencyResolutionStrategy;
}

uint64_t sub_1ACCB9950@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X3>, void *a4@<X8>)
{
  uint64_t v7 = *a3;
  uint64_t v8 = *(void *)(*a3 + 16);
  BOOL v9 = v8 != 0;
  unint64_t v10 = (2 * v8) | 1;
  swift_bridgeObjectRetain();
  sub_1ACCB9510(a2, v7, v7 + 32, v9, v10, a1);
  uint64_t v12 = v11;
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v12;
  return result;
}

uint64_t sub_1ACCB99E0()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
    unint64_t v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCB9BA8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1ACCB9950(v5, v1 + v4, v6, a1);
}

unint64_t sub_1ACCB9C58()
{
  unint64_t result = qword_1E99F4D98;
  if (!qword_1E99F4D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4D98);
  }
  return result;
}

uint64_t sub_1ACCB9CAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
    unint64_t v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980) + 48);
    uint64_t v7 = sub_1ACE74F28();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v4 = sub_1ACE75118();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2898);
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCB9E74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for DownloadConsistency.Issue(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t result = sub_1ACCB9F10(*(void *)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + v5 + 16), *(void *)(v1 + v5 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_1ACCB9F10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int64_t v6 = a6 >> 1;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v11 = result;
  uint64_t v12 = a5;
  if (a6 >> 1 == a5) {
    goto LABEL_6;
  }
  uint64_t v12 = a5 + 1;
  if (!__OFADD__(a5, 1))
  {
    if (v6 >= v12)
    {
      if (v12 >= a5)
      {
LABEL_6:
        if (v6 >= a5)
        {
          swift_unknownObjectRetain();
          uint64_t v13 = sub_1ACCB9510(a2, a3, a4, v12, a6, v11);
          swift_unknownObjectRelease();
          return v13;
        }
        goto LABEL_11;
      }
LABEL_10:
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_1ACCB9FCC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id static DispatchingFairPlayInvalidationManaging.invalidationManager(_:callback:)(uint64_t a1, void *a2)
{
  unint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance] = a1;
  *(void *)&v5[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  swift_unknownObjectRetain();
  id v6 = a2;
  return objc_msgSendSuper2(&v8, sel_init);
}

void DispatchingFairPlayInvalidationManaging.invalidateFairPlayKey(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  BOOL v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1ACCBA2A4;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACCB9FCC;
  v11[3] = &block_descriptor_59;
  unint64_t v10 = _Block_copy(v11);
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v7, sel_invalidateFairPlayKeyFor_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1ACCBA268()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACCBA2A4(void *a1)
{
  return sub_1ACCBAE34(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F0395DC0, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_66);
}

void DispatchingFairPlayInvalidationManaging.markKeyForInvalidation(at:shouldRemove:)(uint64_t a1, char a2)
{
  id v4 = *(void **)(v2 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  id v5 = (id)sub_1ACE74E18();
  objc_msgSend(v4, sel_markKeyForInvalidationAt_shouldRemove_, v5, a2 & 1);
}

void DispatchingFairPlayInvalidationManaging.markAllFairPlayKeysForInvalidation(shouldRemove:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  BOOL v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1ACCBA668;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACCB9FCC;
  v11[3] = &block_descriptor_10_1;
  unint64_t v10 = _Block_copy(v11);
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v7, sel_markAllFairPlayKeysForInvalidationWithShouldRemove_completion_, a1 & 1, v10);
  _Block_release(v10);
}

uint64_t sub_1ACCBA668(void *a1)
{
  return sub_1ACCBAE34(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F0395D70, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_60_0);
}

void DispatchingFairPlayInvalidationManaging.removeKey(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  BOOL v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1ACCBAB90;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACCB9FCC;
  v11[3] = &block_descriptor_17_4;
  unint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_removeKeyFor_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1ACCBA890(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a2 + 16);
  if (result)
  {
    uint64_t v16 = (void *)result;
    id v17 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue);

    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a3;
    v18[3] = a4;
    v18[4] = a1;
    aBlock[4] = sub_1ACA5645C;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_54_1;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    id v20 = a1;
    sub_1ACE75E08();
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v14, v11, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACCBAB50()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCBAB90(void *a1)
{
  return sub_1ACCBA890(a1, v1[2], v1[3], v1[4]);
}

id DispatchingFairPlayInvalidationManaging.removeKey(for:)(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance), sel_removeKeyFor_, a1);
  return v2;
}

void DispatchingFairPlayInvalidationManaging.removalAllFairPlayKeys(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  v10[4] = sub_1ACCBB0F8;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1ACCB9FCC;
  v10[3] = &block_descriptor_24_4;
  uint64_t v9 = _Block_copy(v10);
  sub_1ACA6DEC8(a1);
  swift_release();
  objc_msgSend(v6, sel_removalAllFairPlayKeysWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_1ACCBAE34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v29 = a1;
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE75E48();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a2 + 16);
  if (result)
  {
    uint64_t v19 = (void *)result;
    id v20 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue);
    uint64_t v26 = v14;
    id v21 = v20;

    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = a3;
    v22[3] = a4;
    uint64_t v23 = v29;
    v22[4] = v29;
    aBlock[4] = v27;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = v28;
    unint64_t v24 = _Block_copy(aBlock);
    sub_1ACA6DEC8(a3);
    id v25 = v23;
    sub_1ACE75E08();
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v17, v13, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACCBB0F8(void *a1)
{
  return sub_1ACCBAE34(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F0395CD0, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_48_2);
}

id DispatchingFairPlayInvalidationManaging.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DispatchingFairPlayInvalidationManaging.init()()
{
}

id DispatchingFairPlayInvalidationManaging.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FairPlayInvalidationManaging.receive(on:)(void *a1)
{
  uint64_t v3 = (objc_class *)type metadata accessor for DispatchingFairPlayInvalidationManaging();
  id v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance] = v1;
  *(void *)&v4[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue] = a1;
  v7.receiver = v4;
  v7.super_class = v3;
  id v5 = a1;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for DispatchingFairPlayInvalidationManaging()
{
  return self;
}

uint64_t method lookup function for DispatchingFairPlayInvalidationManaging(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DispatchingFairPlayInvalidationManaging);
}

uint64_t sub_1ACCBB3C0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACCBB400()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACCBB448()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(*(void *)(v0 + 32));
  }
  return result;
}

uint64_t static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  swift_bridgeObjectRetain();
  sub_1ACCBB794(a4);
  unint64_t v7 = sub_1ACA4F4AC();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACCBB794(a3);
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_1ACE77068();
    swift_bridgeObjectRelease();
  }
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
  uint64_t v10 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithString_, v10, v8, v7, v7, v7);

  if (v11)
  {
    sub_1ACE74E98();

    uint64_t v12 = sub_1ACE74F28();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1ACE74F28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_1ACCBB794(double a1)
{
  if (a1 > 9.22337204e18 || a1 < -9.22337204e18) {
    return 0;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (a1 < 9.22337204e18) {
    return sub_1ACE777C8();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t static ArtworkFormatter.formatArtworkUrl(url:for:cropCode:fileExtension:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  sub_1ACE74DD8();
  static ArtworkFormatter.formatArtworkUrl(string:for:cropCode:fileExtension:)(a1, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

id ArtworkFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ArtworkFormatter.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for ArtworkFormatter()
{
  return self;
}

id ArtworkFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

PodcastsFoundation::HTTPStatusCode_optional __swiftcall HTTPStatusCode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 500) {
    char v2 = 2;
  }
  else {
    char v2 = 3;
  }
  if (rawValue == 400) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (rawValue == 200) {
    char v3 = 0;
  }
  *id v1 = v3;
  return (PodcastsFoundation::HTTPStatusCode_optional)rawValue;
}

uint64_t HTTPStatusCode.rawValue.getter()
{
  return qword_1ACE9B9B8[*v0];
}

BOOL sub_1ACCBBDC8(char *a1, char *a2)
{
  return qword_1ACE9B9B8[*a1] == qword_1ACE9B9B8[*a2];
}

unint64_t sub_1ACCBBDF0()
{
  unint64_t result = qword_1E99F4DB8;
  if (!qword_1E99F4DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4DB8);
  }
  return result;
}

uint64_t sub_1ACCBBE44()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCBBE94()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACCBBECC()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::HTTPStatusCode_optional sub_1ACCBBF18(Swift::Int *a1)
{
  return HTTPStatusCode.init(rawValue:)(*a1);
}

void sub_1ACCBBF20(void *a1@<X8>)
{
  *a1 = qword_1ACE9B9B8[*v1];
}

unsigned char *storeEnumTagSinglePayload for HTTPStatusCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCBC004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPStatusCode()
{
  return &type metadata for HTTPStatusCode;
}

uint64_t MetricsImpressionsQueue.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsImpressionsQueue.debugDescription.getter()
{
  return 0xD000000000000023;
}

unint64_t sub_1ACCBC114()
{
  return MetricsImpressionsQueue.debugDescription.getter();
}

uint64_t MetricsImpressionsQueue.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsImpressionsQueue.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsImpressionsQueue.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsImpressionsQueue.dataMetrics.getter()
{
  return 0x74656D2D61746164;
}

unint64_t sub_1ACCBC2D4()
{
  unint64_t result = qword_1E99F4DC0;
  if (!qword_1E99F4DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4DC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsImpressionsQueue()
{
  return &type metadata for MetricsImpressionsQueue;
}

uint64_t MediaCacheDeleteProcessorDataSource.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaCacheDeleteProcessorDataSource.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MediaCacheDeleteProcessorDataSource.name.modify())()
{
  return nullsub_1;
}

uint64_t MediaCacheDeleteProcessorDataSource.observedShowKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaCacheDeleteProcessorDataSource.observedEpisodeKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaCacheDeleteProcessorDataSource.observedEpisodeKeys.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MediaCacheDeleteProcessorDataSource.observedEpisodeKeys.modify())()
{
  return nullsub_1;
}

uint64_t MediaCacheDeleteProcessorDataSource.init(userDefaults:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84470;
  *(void *)(v4 + 32) = sub_1ACE761B8();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = sub_1ACE761B8();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = sub_1ACE761B8();
  *(void *)(v4 + 72) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ACE84470;
  *(void *)(v8 + 32) = sub_1ACE761B8();
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = sub_1ACE761B8();
  *(void *)(v8 + 56) = v10;
  uint64_t result = sub_1ACE761B8();
  *(void *)(v8 + 64) = result;
  *(void *)(v8 + 72) = v12;
  *a2 = 0xD000000000000023;
  a2[1] = 0x80000001ACE9BB50;
  a2[2] = v4;
  a2[3] = v8;
  a2[4] = a1;
  return result;
}

void __swiftcall MediaCacheDeleteProcessorDataSource.episodesPredicate()(NSPredicate *__return_ptr retstr)
{
  uint64_t v2 = sub_1ACE75208();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + 32);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v11 = objc_msgSend(v10, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");
  sub_1ACE75088();
  sub_1ACE751D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v12 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
  *(void *)(v12 + 40) = sub_1ACDF6920((uint64_t)v11);
  v14[1] = v12;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  uint64_t v13 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ACCBC7A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACCBC7B0()
{
  return swift_bridgeObjectRetain();
}

void destroy for MediaCacheDeleteProcessorDataSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for MediaCacheDeleteProcessorDataSource(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for MediaCacheDeleteProcessorDataSource(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for MediaCacheDeleteProcessorDataSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for MediaCacheDeleteProcessorDataSource()
{
  return &type metadata for MediaCacheDeleteProcessorDataSource;
}

uint64_t CacheDeleteNotifications.paths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CacheDeleteNotifications.__allocating_init(paths:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return CacheDeleteNotifications.init(paths:)(a1);
}

uint64_t CacheDeleteNotifications.init(paths:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770640);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770618);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v31 - v14;
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_paths] = a1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770608);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  uint64_t v34 = v15;
  type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  uint64_t v18 = v1;
  v31[1] = a1;
  swift_bridgeObjectRetain();
  sub_1ACE76848();
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v18[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_stream], v9, v33);
  sub_1ACA3AAD4((uint64_t)v15, (uint64_t)v12, &qword_1EB770618);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v18[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_continuation], v12, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
    uint64_t v20 = swift_allocObject();
    *(_DWORD *)(v20 + 20) = 0;
    *(unsigned char *)(v20 + 16) = 0;
    *(void *)&v18[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_completedCheck] = v20;

    id v21 = (objc_class *)type metadata accessor for CacheDeleteNotifications(0);
    v35.receiver = v18;
    v35.super_class = v21;
    id v22 = objc_msgSendSuper2(&v35, sel_init);
    uint64_t v23 = qword_1EB76E148;
    unint64_t v24 = (char *)v22;
    if (v23 != -1) {
      swift_once();
    }
    id v25 = (void *)qword_1EB76E138;
    id v26 = objc_allocWithZone((Class)CacheDeleteNotificationObserver);
    sub_1ACE74F28();
    id v27 = v25;
    uint64_t v28 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v26, sel_initWithDelegate_observedPaths_notificationQueue_, v24, v28, v27);

    uint64_t v30 = *(void **)&v24[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer];
    *(void *)&v24[OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer] = v29;

    sub_1ACA50E78((uint64_t)v15, &qword_1EB770618);
    return (uint64_t)v24;
  }
  return result;
}

uint64_t sub_1ACCBCDE0(uint64_t a1, uint64_t a2)
{
  sub_1ACA50E78(a2, &qword_1EB770618);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770608);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, v4);
}

uint64_t sub_1ACCBCEB0(uint64_t a1)
{
  return sub_1ACCBCDE0(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB76F6D8);
}

uint64_t type metadata accessor for CacheDeleteNotifications(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB76F778);
}

uint64_t sub_1ACCBCEF8()
{
  uint64_t v1 = v0;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB768C28);
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76BE8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1AC9D5000, v3, v4, "Starting observer", v5, 2u);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }

  id v6 = *(void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_observer);
  if (v6)
  {
    id v7 = v6;
    if ((objc_msgSend(v7, sel_beginObserving) & 1) == 0)
    {
      uint64_t v8 = sub_1ACE75498();
      os_log_type_t v9 = sub_1ACE76BE8();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_1AC9D5000, v8, v9, "Unable to start observing cache delete notifications! Features that rely upon these notifications may not work.", v10, 2u);
        MEMORY[0x1AD11B340](v10, -1, -1);
      }

      uint64_t v11 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_completedCheck);
      uint64_t v12 = v11 + 4;
      uint64_t v13 = v11 + 5;
      os_unfair_lock_lock(v11 + 5);
      sub_1ACBB3288(v12);
      os_unfair_lock_unlock(v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770608);
      sub_1ACE76828();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770640);
  return sub_1ACE76838();
}

uint64_t sub_1ACCBD0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACCBE050(a2, a3, a4);
}

uint64_t sub_1ACCBD25C()
{
  uint64_t v0 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EE88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770608);
  sub_1ACE76818();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_1ACCBD578(uint64_t a1, uint64_t a2)
{
  return (_s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_1ACCBD5A4(uint64_t a1, uint64_t a2)
{
  return (_s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_1ACCBD5C4(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(a2, a1);
}

id CacheDeleteNotifications.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CacheDeleteNotifications.init()()
{
}

id CacheDeleteNotifications.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CacheDeleteNotifications(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1ACCBD790()
{
  id v1 = *v0;
  sub_1ACCBCEF8();
}

uint64_t _s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4E48);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v15[*(int *)(v16 + 56)];
  sub_1ACCBF23C(a1, (uint64_t)v15);
  sub_1ACCBF23C(a2, (uint64_t)v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  if (v19(v15, 1, v18) != 1)
  {
    uint64_t v37 = v6;
    uint64_t v38 = v9;
    sub_1ACCBF23C((uint64_t)v15, (uint64_t)v12);
    uint64_t v21 = *((void *)v12 + 1);
    uint64_t v36 = *(void *)v12;
    uint64_t v22 = *(int *)(v18 + 48);
    uint64_t v23 = &v12[v22];
    if (v19(v17, 1, v18) != 1)
    {
      uint64_t v25 = *(void *)v17;
      uint64_t v24 = *((void *)v17 + 1);
      id v26 = &v17[v22];
      id v27 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v27(v38, v23, v4);
      uint64_t v28 = v37;
      v27(v37, v26, v4);
      if (v36 == v25 && v21 == v24)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v32 = v38;
        uint64_t v31 = v39;
      }
      else
      {
        char v30 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = v38;
        uint64_t v31 = v39;
        if ((v30 & 1) == 0)
        {
          uint64_t v33 = *(void (**)(char *, uint64_t))(v39 + 8);
          v33(v28, v4);
          v33(v32, v4);
          sub_1ACCBF2A0((uint64_t)v15);
          goto LABEL_7;
        }
      }
      char v20 = sub_1ACE75068();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      v34(v28, v4);
      v34(v32, v4);
      sub_1ACCBF2A0((uint64_t)v15);
      return v20 & 1;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(&v12[v22], v4);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_1ACA50E78((uint64_t)v15, &qword_1E99F4E48);
LABEL_7:
    char v20 = 0;
    return v20 & 1;
  }
  if (v19(v17, 1, v18) != 1) {
    goto LABEL_6;
  }
  sub_1ACCBF2A0((uint64_t)v15);
  char v20 = 1;
  return v20 & 1;
}

uint64_t _s18PodcastsFoundation24CacheDeleteNotificationsC0cD5EventO1loiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_t v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (char *)&v46 - v8;
  uint64_t v9 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v46 - v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4E48);
  MEMORY[0x1F4188790](v18 - 8);
  char v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = &v20[*(int *)(v21 + 56)];
  uint64_t v52 = a1;
  sub_1ACCBF23C(a1, (uint64_t)v20);
  uint64_t v53 = a2;
  sub_1ACCBF23C(a2, (uint64_t)v22);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  if (v24(v20, 1, v23) == 1)
  {
    if (v24(v22, 1, v23) == 1) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v50 = v5;
    uint64_t v51 = v4;
    sub_1ACCBF23C((uint64_t)v20, (uint64_t)v17);
    uint64_t v25 = v17[1];
    uint64_t v47 = *v17;
    uint64_t v26 = *(int *)(v23 + 48);
    id v27 = (char *)v17 + v26;
    if (v24(v22, 1, v23) != 1)
    {
      uint64_t v32 = *(void *)v22;
      uint64_t v33 = *((void *)v22 + 1);
      uint64_t v34 = &v22[v26];
      objc_super v35 = v49;
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      uint64_t v37 = v27;
      uint64_t v38 = v51;
      v36(v49, v37, v51);
      uint64_t v39 = v48;
      v36(v48, v34, v38);
      BOOL v40 = v47 == v32 && v25 == v33;
      if (v40 || (sub_1ACE77848() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (sub_1ACE75068())
        {
          uint64_t v41 = v51;
          os_log_type_t v42 = *(void (**)(char *, uint64_t))(v50 + 8);
          v42(v39, v51);
          v42(v35, v41);
LABEL_18:
          sub_1ACCBF2A0((uint64_t)v20);
          char v31 = 0;
          return v31 & 1;
        }
        char v31 = sub_1ACE75028();
      }
      else
      {
        char v31 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v43 = v51;
      long long v44 = *(void (**)(char *, uint64_t))(v50 + 8);
      v44(v39, v51);
      v44(v35, v43);
      sub_1ACCBF2A0((uint64_t)v20);
      return v31 & 1;
    }
    uint64_t v28 = v50;
    uint64_t v4 = v51;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v51);
    uint64_t v5 = v28;
    swift_bridgeObjectRelease();
  }
  sub_1ACCBF23C(v52, (uint64_t)v14);
  unint64_t v29 = 1;
  if (v24(v14, 1, v23) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(&v14[*(int *)(v23 + 48)], v4);
    unint64_t v29 = 0;
  }
  sub_1ACCBF23C(v53, (uint64_t)v11);
  unint64_t v30 = 1;
  if (v24(v11, 1, v23) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(&v11[*(int *)(v23 + 48)], v4);
    unint64_t v30 = 0;
  }
  char v31 = v29 < v30;
  sub_1ACA50E78((uint64_t)v20, &qword_1E99F4E48);
  return v31 & 1;
}

uint64_t sub_1ACCBE050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770608);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EE88);
  uint64_t v28 = *(void *)(v17 - 8);
  uint64_t v29 = v17;
  __n128 v18 = MEMORY[0x1F4188790](v17);
  id v27 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, v4 + OBJC_IVAR____TtC18PodcastsFoundation24CacheDeleteNotifications_continuation, v13, v18);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v21 = (char *)v12 + *(int *)(v20 + 48);
  *uint64_t v12 = a1;
  v12[1] = a2;
  sub_1ACA3AAD4(v26, (uint64_t)v9, (uint64_t *)&unk_1EB773140);
  uint64_t v22 = sub_1ACE750A8();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1ACE75088();
    sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v21, v9, v22);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 0, 1, v20);
  uint64_t v24 = v27;
  sub_1ACE76818();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v24, v29);
}

unint64_t sub_1ACCBE3B0()
{
  unint64_t result = qword_1E99F4DD0;
  if (!qword_1E99F4DD0)
  {
    type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4DD0);
  }
  return result;
}

unint64_t sub_1ACCBE40C()
{
  unint64_t result = qword_1E99F4DD8;
  if (!qword_1E99F4DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F4DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4DD8);
  }
  return result;
}

uint64_t sub_1ACCBE468()
{
  return type metadata accessor for CacheDeleteNotifications(0);
}

void sub_1ACCBE470()
{
  sub_1ACCBE660(319, &qword_1EB770648, MEMORY[0x1E4FBD060]);
  if (v0 <= 0x3F)
  {
    sub_1ACCBE660(319, &qword_1EB770610, MEMORY[0x1E4FBD038]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for CacheDeleteNotifications(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CacheDeleteNotifications);
}

uint64_t dispatch thunk of CacheDeleteNotifications.__allocating_init(paths:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CacheDeleteNotifications.makeAsyncIterator()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CacheDeleteNotifications.cacheDelete(_:didIdentifyCacheDeletedPath:deletedAt:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CacheDeleteNotifications.cacheDeleteObserverBecameSynchronized(withFileSystem:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

void sub_1ACCBE660(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(255);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CacheDeleteNotifications.CacheDeleteEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(v7 + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1ACE750A8();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for CacheDeleteNotifications.CacheDeleteEvent(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 48);
    uint64_t v5 = sub_1ACE750A8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *initializeWithCopy for CacheDeleteNotifications.CacheDeleteEvent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = *(int *)(v6 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1ACE750A8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for CacheDeleteNotifications.CacheDeleteEvent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(int *)(v6 + 48);
      __n128 v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_1ACE750A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
      return a1;
    }
    sub_1ACA50E78((uint64_t)a1, (uint64_t *)&unk_1EB7705A0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v11 = *(int *)(v6 + 48);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1ACE750A8();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

_OWORD *initializeWithTake for CacheDeleteNotifications.CacheDeleteEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 48);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1ACE750A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for CacheDeleteNotifications.CacheDeleteEvent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(int *)(v6 + 48);
      __n128 v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_1ACE750A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
      return a1;
    }
    sub_1ACA50E78((uint64_t)a1, (uint64_t *)&unk_1EB7705A0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v11 = *(int *)(v6 + 48);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CacheDeleteNotifications.CacheDeleteEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACCBEFC0);
}

uint64_t sub_1ACCBEFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CacheDeleteNotifications.CacheDeleteEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACCBF044);
}

uint64_t sub_1ACCBF044(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1ACCBF0C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1ACCBF134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_1ACCBF1A8()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1ACCBF23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACCBF2A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CacheDeleteNotifications.CacheDeleteEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACCBF2FC()
{
  if (*v0 > 1u) {
    return 1;
  }
  uint64_t v1 = *(void *)(*((void *)v0 + 7) + 16);
  sub_1ACCC2BC8((uint64_t)v0, (uint64_t)v3);
  if (v1) {
    uint64_t v1 = *(void *)(v4 + 24) != 0;
  }
  sub_1ACCC2C00((uint64_t)v3);
  return v1;
}

void sub_1ACCBF368(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v63 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1ACE75E48();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  int v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75EC8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACCC2BC8(v3, (uint64_t)v69);
  uint64_t v15 = v70;
  void *v14 = v70;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  sub_1ACCC2C00((uint64_t)v69);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (sub_1ACCBF2FC())
  {
    uint64_t v59 = a2;
    if (qword_1EB76D4A0 == -1)
    {
LABEL_4:
      uint64_t v60 = a1;
      uint64_t v17 = sub_1ACE754C8();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D488);
      sub_1ACCC2BC8(v3, (uint64_t)v67);
      sub_1ACCC2BC8(v3, (uint64_t)aBlock);
      __n128 v18 = sub_1ACE75498();
      os_log_type_t v19 = sub_1ACE76C08();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v58 = v6;
        uint64_t v20 = swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        uint64_t v65 = v57;
        *(_DWORD *)uint64_t v20 = 141558531;
        uint64_t v64 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v20 + 12) = 2081;
        uint64_t v21 = *(void **)(*((void *)&v67[0] + 1) + 24);
        if (v21)
        {
          id v22 = objc_msgSend(v21, sel_description);
          uint64_t v23 = sub_1ACE761B8();
          unint64_t v25 = v24;
        }
        else
        {
          uint64_t v23 = 0x6974636120726F66;
          unint64_t v25 = 0xEF72657375206576;
        }
        uint64_t v64 = sub_1ACA3189C(v23, v25, &v65);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACCC2C00((uint64_t)v67);
        *(_WORD *)(v20 + 22) = 2080;
        unint64_t v36 = 0x80000001ACECF370;
        unint64_t v37 = 0xD000000000000011;
        if (LOBYTE(aBlock[0]) != 1)
        {
          unint64_t v37 = 0xD000000000000013;
          unint64_t v36 = 0x80000001ACECF350;
        }
        if (LOBYTE(aBlock[0])) {
          uint64_t v38 = v37;
        }
        else {
          uint64_t v38 = 0x20646F70656D6F48;
        }
        if (LOBYTE(aBlock[0])) {
          unint64_t v39 = v36;
        }
        else {
          unint64_t v39 = 0xEF7972616D697250;
        }
        uint64_t v64 = sub_1ACA3189C(v38, v39, &v65);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACCC2C00((uint64_t)aBlock);
        _os_log_impl(&dword_1AC9D5000, v18, v19, "Account %{private,mask.hash}s: Starting donation job with donation type: %s", (uint8_t *)v20, 0x20u);
        uint64_t v40 = v57;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v40, -1, -1);
        MEMORY[0x1AD11B340](v20, -1, -1);

        uint64_t v6 = v58;
      }
      else
      {
        sub_1ACCC2C00((uint64_t)v67);
        sub_1ACCC2C00((uint64_t)aBlock);
      }
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = 0;
      dispatch_group_t v42 = dispatch_group_create();
      MEMORY[0x1F4188790](v42);
      *(&v56 - 4) = v43;
      *(&v56 - 3) = v3;
      *(&v56 - 2) = v41;
      sub_1ACCC10F8((void (*)(void, void))sub_1ACCC2C40, (uint64_t)(&v56 - 6));
      sub_1ACCC2BC8(v3, (uint64_t)v67);
      uint64_t v44 = swift_allocObject();
      long long v45 = v67[3];
      *(_OWORD *)(v44 + 48) = v67[2];
      *(_OWORD *)(v44 + 64) = v45;
      uint64_t v46 = v68;
      long long v47 = v67[1];
      *(_OWORD *)(v44 + 16) = v67[0];
      *(_OWORD *)(v44 + 32) = v47;
      *(void *)(v44 + 80) = v46;
      *(void *)(v44 + 88) = v41;
      uint64_t v48 = v59;
      *(void *)(v44 + 96) = v60;
      *(void *)(v44 + 104) = v48;
      aBlock[4] = sub_1ACCC2CAC;
      aBlock[5] = v44;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1ACA6DA9C;
      aBlock[3] = &block_descriptor_60;
      uint64_t v49 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1ACE75E08();
      uint64_t v65 = MEMORY[0x1E4FBC860];
      sub_1ACA55D24();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACA55D7C();
      sub_1ACE770E8();
      sub_1ACE76C68();

      _Block_release(v49);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v62);
      swift_release();
      swift_release();
      return;
    }
LABEL_37:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1ACE754C8();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB76D488);
  sub_1ACCC2BC8(v3, (uint64_t)v67);
  sub_1ACCC2BC8(v3, (uint64_t)aBlock);
  id v27 = sub_1ACE75498();
  os_log_type_t v28 = sub_1ACE76BE8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v65 = v30;
    *(_DWORD *)uint64_t v29 = 141558531;
    uint64_t v64 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v29 + 12) = 2081;
    char v31 = *(void **)(*((void *)&v67[0] + 1) + 24);
    uint64_t v60 = a1;
    if (v31)
    {
      id v32 = objc_msgSend(v31, sel_description);
      uint64_t v33 = sub_1ACE761B8();
      unint64_t v35 = v34;
    }
    else
    {
      uint64_t v33 = 0x6974636120726F66;
      unint64_t v35 = 0xEF72657375206576;
    }
    uint64_t v64 = sub_1ACA3189C(v33, v35, &v65);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)v67);
    *(_WORD *)(v29 + 22) = 2080;
    unint64_t v50 = 0x80000001ACECF370;
    unint64_t v51 = 0xD000000000000011;
    if (LOBYTE(aBlock[0]) != 1)
    {
      unint64_t v51 = 0xD000000000000013;
      unint64_t v50 = 0x80000001ACECF350;
    }
    if (LOBYTE(aBlock[0])) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0x20646F70656D6F48;
    }
    if (LOBYTE(aBlock[0])) {
      unint64_t v53 = v50;
    }
    else {
      unint64_t v53 = 0xEF7972616D697250;
    }
    uint64_t v64 = sub_1ACA3189C(v52, v53, &v65);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)aBlock);
    _os_log_impl(&dword_1AC9D5000, v27, v28, "Account %{private,mask.hash}s: Invalid configuration for donationType: %s.", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v30, -1, -1);
    MEMORY[0x1AD11B340](v29, -1, -1);

    a1 = v60;
  }
  else
  {
    sub_1ACCC2C00((uint64_t)v67);
    sub_1ACCC2C00((uint64_t)aBlock);
  }
  sub_1ACB6BF74();
  uint64_t v54 = (void *)swift_allocError();
  *(void *)uint64_t v55 = 2;
  *(unsigned char *)(v55 + 8) = 1;
  a1();
}

uint64_t sub_1ACCBFDB0(uint64_t a1, unint64_t a2, dispatch_group_t group, uint64_t a4, uint64_t a5)
{
  dispatch_group_enter(group);
  sub_1ACCC2BC8(a4, (uint64_t)v27);
  sub_1ACCC2BC8((uint64_t)v27, (uint64_t)v26);
  uint64_t v10 = swift_allocObject();
  long long v11 = v27[1];
  long long v12 = v27[3];
  *(_OWORD *)(v10 + 48) = v27[2];
  *(_OWORD *)(v10 + 64) = v12;
  uint64_t v13 = v28;
  *(_OWORD *)(v10 + 16) = v27[0];
  *(_OWORD *)(v10 + 32) = v11;
  *(void *)(v10 + 80) = v13;
  *(void *)(v10 + 88) = a5;
  *(void *)(v10 + 96) = group;
  *(void *)(v10 + 104) = a1;
  *(void *)(v10 + 112) = a2;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v14 = group;
  id v15 = sub_1ACE41AB0(a1, a2);
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1ACCC2D24;
    *(void *)(v17 + 24) = v10;
    unint64_t v24 = sub_1ACCC2DCC;
    uint64_t v25 = v17;
    *(void *)&long long v22 = MEMORY[0x1E4F143A8];
    *((void *)&v22 + 1) = 1107296256;
    *(void *)&long long v23 = sub_1ACAA3910;
    *((void *)&v23 + 1) = &block_descriptor_12_2;
    __n128 v18 = _Block_copy(&v22);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_donateWithOptions_usingStream_, 0, v18);

    _Block_release(v18);
  }
  else
  {
    sub_1ACB6BF74();
    long long v22 = 0u;
    long long v23 = 0u;
    unint64_t v24 = 0;
    os_log_type_t v19 = (void *)swift_allocError();
    *(void *)uint64_t v20 = 4;
    *(unsigned char *)(v20 + 8) = 1;
    sub_1ACCBFFF0((uint64_t)&v22, v19, (uint64_t)v26, a5, v14, a1, a2);

    sub_1ACCC2D34((uint64_t)&v22);
  }
  swift_release();
  sub_1ACCC2C00((uint64_t)v26);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1ACCBFFF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a6;
  uint64_t v28 = a5;
  uint64_t v12 = sub_1ACE75DC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1ACE75E48();
  uint64_t v16 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  __n128 v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(a3 + 64);
  sub_1ACCC2BC8(a3, (uint64_t)v35);
  sub_1ACCC2DD4(a1, (uint64_t)v34);
  uint64_t v19 = swift_allocObject();
  long long v20 = v35[0];
  *(_OWORD *)(v19 + 40) = v35[1];
  long long v21 = v35[3];
  *(_OWORD *)(v19 + 56) = v35[2];
  *(_OWORD *)(v19 + 72) = v21;
  *(void *)(v19 + 16) = a2;
  uint64_t v22 = v36;
  *(_OWORD *)(v19 + 24) = v20;
  *(void *)(v19 + 88) = v22;
  *(void *)(v19 + 96) = a4;
  long long v23 = v28;
  *(void *)(v19 + 104) = v28;
  sub_1ACCC2EBC((uint64_t)v34, v19 + 112);
  *(void *)(v19 + 152) = v29;
  *(void *)(v19 + 160) = a7;
  aBlock[4] = sub_1ACCC2F24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_18_2;
  unint64_t v24 = _Block_copy(aBlock);
  id v25 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  id v26 = v23;
  sub_1ACE75E08();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v18, v15, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v31);
  return swift_release();
}

void sub_1ACCC0300(void *a1, NSObject *a2, uint64_t a3, NSObject *a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  long long v11 = (void *)(a3 + 16);
  if (a1)
  {
    id v13 = a1;
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D488);
    sub_1ACCC2BC8((uint64_t)a2, (uint64_t)&v45);
    id v15 = a1;
    id v16 = a1;
    a2 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76BE8();
    if (os_log_type_enabled(a2, v17))
    {
      dispatch_group_t v42 = a4;
      uint64_t v7 = swift_slowAlloc();
      __n128 v18 = (void *)swift_slowAlloc();
      unint64_t v8 = swift_slowAlloc();
      v50[0] = v8;
      *(_DWORD *)uint64_t v7 = 141558531;
      uint64_t v44 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v7 + 12) = 2081;
      uint64_t v19 = *(void **)(*((void *)&v45 + 1) + 24);
      if (v19)
      {
        id v20 = objc_msgSend(v19, sel_description);
        uint64_t v21 = sub_1ACE761B8();
        unint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = 0x6974636120726F66;
        unint64_t v23 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v21, v23, v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACCC2C00((uint64_t)&v45);
      *(_WORD *)(v7 + 22) = 2112;
      uint64_t v44 = sub_1ACE74D68();
      sub_1ACE76FF8();
      *__n128 v18 = v44;

      _os_log_impl(&dword_1AC9D5000, a2, v17, "Account %{private,mask.hash}s: Could not donate to Siri with error: %@", (uint8_t *)v7, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v8, -1, -1);
      MEMORY[0x1AD11B340](v7, -1, -1);

      a4 = v42;
    }
    else
    {
      sub_1ACCC2C00((uint64_t)&v45);
    }
    swift_beginAccess();
    if (!__OFADD__(*v11, 1))
    {
      ++*v11;
      dispatch_group_leave(a4);

      return;
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = a7;
    unint64_t v8 = a6;
    sub_1ACCC2DD4(a5, (uint64_t)&v45);
    if (*((void *)&v46 + 1))
    {
      sub_1ACA3AABC(&v45, (uint64_t)v50);
      sub_1ACCC2BC8((uint64_t)a2, (uint64_t)&v45);
      uint64_t v25 = swift_allocObject();
      long long v26 = v48;
      *(_OWORD *)(v25 + 48) = v47;
      *(_OWORD *)(v25 + 64) = v26;
      uint64_t v27 = v49;
      long long v28 = v46;
      *(_OWORD *)(v25 + 16) = v45;
      *(_OWORD *)(v25 + 32) = v28;
      *(void *)(v25 + 80) = v27;
      *(void *)(v25 + 88) = a3;
      *(void *)(v25 + 96) = a4;
      swift_retain();
      uint64_t v29 = a4;
      sub_1ACCC0CBC((uint64_t)v50, v8, v7, (uint64_t)sub_1ACCC2F9C, v25);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      return;
    }
    sub_1ACCC2D34((uint64_t)&v45);
    if (qword_1EB76D4A0 == -1) {
      goto LABEL_11;
    }
  }
  swift_once();
LABEL_11:
  uint64_t v30 = sub_1ACE754C8();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EB76D488);
  sub_1ACCC2BC8((uint64_t)a2, (uint64_t)&v45);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_1ACE75498();
  os_log_type_t v32 = sub_1ACE76BE8();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v43 = a4;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v44 = v34;
    *(_DWORD *)uint64_t v33 = 141558787;
    v50[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v33 + 12) = 2081;
    unint64_t v35 = *(void **)(*((void *)&v45 + 1) + 24);
    if (v35)
    {
      id v36 = objc_msgSend(v35, sel_description);
      uint64_t v37 = sub_1ACE761B8();
      unint64_t v39 = v38;
    }
    else
    {
      uint64_t v37 = 0x6974636120726F66;
      unint64_t v39 = 0xEF72657375206576;
    }
    v50[0] = sub_1ACA3189C(v37, v39, &v44);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)&v45);
    *(_WORD *)(v33 + 22) = 2160;
    v50[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v33 + 32) = 2081;
    v50[0] = v8;
    v50[1] = v7;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
    uint64_t v40 = sub_1ACE76228();
    v50[0] = sub_1ACA3189C(v40, v41, &v44);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v31, v32, "Account %{private,mask.hash}s: Could not stream donation for userID %{private,mask.hash}s because there is no stream.", (uint8_t *)v33, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v33, -1, -1);

    a4 = v43;
  }
  else
  {
    sub_1ACCC2C00((uint64_t)&v45);

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  if (__OFADD__(*v11, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v11;
    dispatch_group_leave(a4);
  }
}

void sub_1ACCC0998(void *a1, uint64_t a2, uint64_t a3, dispatch_group_t group)
{
  if (!a1) {
    goto LABEL_12;
  }
  id v8 = a1;
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)(a3 + 16);
  uint64_t v10 = sub_1ACE754C8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D488);
  sub_1ACCC2BC8(a2, (uint64_t)v26);
  id v11 = a1;
  id v12 = a1;
  id v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76BE8();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v23 = group;
    uint64_t v15 = swift_slowAlloc();
    id v16 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 141558531;
    uint64_t v25 = v22;
    sub_1ACE76FF8();
    *(_WORD *)(v15 + 12) = 2081;
    os_log_type_t v17 = *(void **)(v27 + 24);
    if (v17)
    {
      id v18 = objc_msgSend(v17, sel_description);
      uint64_t v19 = sub_1ACE761B8();
      unint64_t v21 = v20;
    }
    else
    {
      unint64_t v21 = 0xEF72657375206576;
      uint64_t v19 = 0x6974636120726F66;
    }
    sub_1ACA3189C(v19, v21, &v25);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)v26);
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v24 = sub_1ACE74D68();
    sub_1ACE76FF8();
    *id v16 = v24;

    _os_log_impl(&dword_1AC9D5000, v13, v14, "Account %{private,mask.hash}s: Could not fetch and donate podcasts and stations with error: %@", (uint8_t *)v15, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v22, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);

    group = v23;
  }
  else
  {

    sub_1ACCC2C00((uint64_t)v26);
  }
  swift_beginAccess();
  if (!__OFADD__(*v9, 1))
  {
    ++*v9;
LABEL_12:
    dispatch_group_leave(group);
    return;
  }
  __break(1u);
}

uint64_t sub_1ACCC0CBC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v40 = a4;
  uint64_t v11 = sub_1ACE75EC8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACCC2BC8(v5, (uint64_t)v44);
  uint64_t v15 = v45;
  void *v14 = v45;
  id v16 = *(void (**)(void))(v12 + 104);
  unsigned int v37 = *MEMORY[0x1E4FBCBF0];
  id v36 = (void (*)(void *, void, uint64_t))v16;
  v16(v14);
  id v17 = v15;
  LOBYTE(v15) = sub_1ACE75EF8();
  unint64_t v38 = *(void (**)(void *, uint64_t))(v12 + 8);
  uint64_t v39 = v12 + 8;
  v38(v14, v11);
  uint64_t result = sub_1ACCC2C00((uint64_t)v44);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v19 = v11;
  uint64_t v20 = *(void *)(v6 + 8);
  sub_1ACCC2BC8(v6, (uint64_t)v44);
  sub_1ACA3E158(a1, (uint64_t)v43);
  sub_1ACCC2BC8((uint64_t)v44, (uint64_t)v42);
  sub_1ACA3E158((uint64_t)v43, (uint64_t)v41);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v40;
  *(void *)(v21 + 24) = a5;
  long long v22 = v44[3];
  *(_OWORD *)(v21 + 64) = v44[2];
  *(_OWORD *)(v21 + 80) = v22;
  *(void *)(v21 + 96) = v45;
  long long v23 = v44[1];
  *(_OWORD *)(v21 + 32) = v44[0];
  *(_OWORD *)(v21 + 48) = v23;
  sub_1ACA3AABC(v43, v21 + 104);
  unint64_t v35 = a2;
  *(void *)(v21 + 144) = a2;
  *(void *)(v21 + 152) = a3;
  uint64_t v24 = v20;
  uint64_t v25 = *(void **)(v20 + 80);
  void *v14 = v25;
  uint64_t v26 = v19;
  v36(v14, v37, v19);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v27 = v25;
  LOBYTE(v19) = sub_1ACE75EF8();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v38)(v14, v26);
  if ((v19 & 1) == 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  unint64_t v28 = *(void *)(v24 + 88);
  if (v28)
  {
    unint64_t v29 = *(void *)(v24 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACCC18B4(v28, v29, v41, v35, a3, v40, a5);
    sub_1ACB6BEB4(v28);
    swift_release();
    swift_release();
  }
  else
  {
    int v30 = *(unsigned __int8 *)(v24 + 16);
    if (os_feature_enabled_disable_homepod_station_donation()) {
      BOOL v31 = v30 == 2;
    }
    else {
      BOOL v31 = v30 != 1;
    }
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = (void *)swift_allocObject();
    void v33[2] = v32;
    v33[3] = sub_1ACCC3010;
    v33[4] = v21;
    swift_retain();
    swift_retain();
    if (v31) {
      sub_1ACB681A0((uint64_t)sub_1ACCC3098, (uint64_t)v33);
    }
    else {
      sub_1ACB68B08((uint64_t)sub_1ACCC3084, (uint64_t)v33);
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1ACCC2C00((uint64_t)v42);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCC10F8(void (*a1)(void, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a1;
  uint64_t v5 = sub_1ACE75EC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ACCC2BC8(v3, (uint64_t)v42);
  uint64_t v9 = v43;
  *id v8 = v43;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
  id v10 = v9;
  char v11 = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_1ACCC2C00((uint64_t)v42);
  if (v11)
  {
    if (*(unsigned char *)v3 == 2)
    {
      return ((uint64_t (*)(void, void))v33)(0, 0);
    }
    else
    {
      uint64_t result = *(void *)(v3 + 56);
      uint64_t v13 = *(void *)(result + 16);
      os_log_type_t v14 = v33;
      if (v13)
      {
        uint64_t v32 = swift_bridgeObjectRetain();
        uint64_t v15 = (unint64_t *)(v32 + 40);
        id v16 = &unk_1EB76D000;
        *(void *)&long long v17 = 141558531;
        long long v35 = v17;
        uint64_t v34 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v37 = a2;
        uint64_t v36 = v3;
        do
        {
          unint64_t v19 = *v15;
          uint64_t v38 = *(v15 - 1);
          uint64_t v20 = v16[148];
          swift_bridgeObjectRetain();
          if (v20 != -1) {
            swift_once();
          }
          uint64_t v21 = sub_1ACE754C8();
          __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D488);
          sub_1ACCC2BC8(v3, (uint64_t)v40);
          swift_bridgeObjectRetain_n();
          long long v22 = sub_1ACE75498();
          os_log_type_t v23 = sub_1ACE76C08();
          if (os_log_type_enabled(v22, v23))
          {
            uint64_t v24 = swift_slowAlloc();
            uint64_t v25 = swift_slowAlloc();
            uint64_t v39 = v25;
            *(_DWORD *)uint64_t v24 = v35;
            *(void *)(v24 + 4) = 1752392040;
            *(_WORD *)(v24 + 12) = 2081;
            uint64_t v26 = *(void **)(v41 + 24);
            if (v26)
            {
              id v27 = objc_msgSend(v26, sel_description);
              uint64_t v28 = sub_1ACE761B8();
              unint64_t v30 = v29;

              os_log_type_t v14 = v33;
            }
            else
            {
              unint64_t v30 = 0xEF72657375206576;
              uint64_t v28 = 0x6974636120726F66;
            }
            *(void *)(v24 + 14) = sub_1ACA3189C(v28, v30, &v39);
            swift_bridgeObjectRelease();
            sub_1ACCC2C00((uint64_t)v40);
            *(_WORD *)(v24 + 22) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v18 = v38;
            *(void *)(v24 + 24) = sub_1ACA3189C(v38, v19, &v39);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1AC9D5000, v22, v23, "Account %{private,mask.hash}s: Starting Donation for siri shared user id: %s", (uint8_t *)v24, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v25, -1, -1);
            MEMORY[0x1AD11B340](v24, -1, -1);

            uint64_t v3 = v36;
            id v16 = (void *)&unk_1EB76D000;
          }
          else
          {
            sub_1ACCC2C00((uint64_t)v40);

            swift_bridgeObjectRelease_n();
            uint64_t v18 = v38;
          }
          v15 += 2;
          v14(v18, v19);
          swift_bridgeObjectRelease();
          --v13;
        }
        while (v13);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1ACCC1508(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D488);
  sub_1ACCC2BC8(a1, (uint64_t)v23);
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v21 = a3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 141558275;
    uint64_t v22 = v10;
    sub_1ACE76FF8();
    *(_WORD *)(v9 + 12) = 2081;
    char v11 = *(void **)(v24 + 24);
    if (v11)
    {
      id v12 = objc_msgSend(v11, sel_description);
      uint64_t v13 = sub_1ACE761B8();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xEF72657375206576;
      uint64_t v13 = 0x6974636120726F66;
    }
    sub_1ACA3189C(v13, v15, &v22);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)v23);
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Account %{private,mask.hash}s: Finished siri donation for all ids.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);

    a3 = v21;
  }
  else
  {
    sub_1ACCC2C00((uint64_t)v23);
  }
  id v16 = (uint64_t *)(a2 + 16);
  if (*(unsigned char *)a1 == 2)
  {
    swift_beginAccess();
    if (*v16 < 1) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (v17 == *(void *)(*(void *)(a1 + 56) + 16))
  {
LABEL_13:
    sub_1ACB6BF74();
    uint64_t v18 = (void *)swift_allocError();
    *(void *)uint64_t v19 = 0;
    *(unsigned char *)(v19 + 8) = 1;
LABEL_16:
    a3();

    return;
  }
  if (v17 >= 1)
  {
    sub_1ACB6BF74();
    uint64_t v18 = (void *)swift_allocError();
    *(void *)uint64_t v20 = v17;
    *(unsigned char *)(v20 + 8) = 0;
    goto LABEL_16;
  }
LABEL_17:
  ((void (*)(void))a3)(0);
}

void sub_1ACCC1814(id a1, unint64_t a2, char a3, void (*a4)(id), uint64_t a5, int a6, void *a7, unint64_t a8, uint64_t a9)
{
  if (a3)
  {
    id v12 = a1;
    a4(a1);
    sub_1ACCC3114(a1, a2, 1);
  }
  else
  {
    sub_1ACCC18B4((unint64_t)a1, a2, a7, a8, a9, (uint64_t)a4, a5);
  }
}

uint64_t sub_1ACCC18B4(unint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v66 = a7;
  uint64_t v65 = a6;
  double v70 = a3;
  unint64_t v69 = a2;
  uint64_t v12 = sub_1ACE75EC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = v8;
  sub_1ACCC2BC8(v8, (uint64_t)v75);
  id v16 = v76;
  *unint64_t v15 = v76;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  id v17 = v16;
  LOBYTE(v16) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  sub_1ACCC2C00((uint64_t)v75);
  if ((v16 & 1) == 0) {
    goto LABEL_43;
  }
  unint64_t v63 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v64 = a4;
    uint64_t v67 = a5;
    if (v18)
    {
      unint64_t v19 = a1 & 0xC000000000000001;
      uint64_t v20 = 4;
      unint64_t v21 = a1;
      while (1)
      {
        id v22 = v19 ? (id)MEMORY[0x1AD119490](v20 - 4, a1) : *(id *)(a1 + 8 * v20);
        os_log_type_t v23 = v22;
        a1 = v20 - 3;
        if (__OFADD__(v20 - 4, 1)) {
          break;
        }
        a5 = v70[3];
        a4 = v70[4];
        __swift_project_boxed_opaque_existential_1(v70, a5);
        (*(void (**)(void *, uint64_t, unint64_t))(a4 + 8))(v23, a5, a4);

        ++v20;
        BOOL v24 = a1 == v18;
        a1 = v21;
        if (v24) {
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_42;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1ACE754C8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB76D488);
    sub_1ACCC2BC8(v68, (uint64_t)v73);
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76C08();
    BOOL v28 = os_log_type_enabled(v26, v27);
    unint64_t v29 = v69;
    if (v28)
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v71 = v62;
      *(_DWORD *)uint64_t v30 = 141558531;
      uint64_t v72 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v30 + 12) = 2081;
      uint64_t v31 = *(void **)(*((void *)&v73[0] + 1) + 24);
      if (v31)
      {
        id v32 = objc_msgSend(v31, sel_description);
        uint64_t v33 = sub_1ACE761B8();
        a4 = v34;
      }
      else
      {
        uint64_t v33 = 0x6974636120726F66;
        a4 = 0xEF72657375206576;
      }
      uint64_t v72 = sub_1ACA3189C(v33, a4, &v71);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACCC2C00((uint64_t)v73);
      *(_WORD *)(v30 + 22) = 2048;
      if (v63)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1ACE77508();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v29 = v69;
      swift_bridgeObjectRelease();
      uint64_t v72 = v35;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v26, v27, "Account %{private,mask.hash}s: Registered %ld podcast KVItems.", (uint8_t *)v30, 0x20u);
      a5 = v62;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](a5, -1, -1);
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1ACCC2C00((uint64_t)v73);

      swift_bridgeObjectRelease();
    }
    unint64_t v63 = v29 >> 62;
    if (!(v29 >> 62))
    {
      uint64_t v36 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v36) {
        break;
      }
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    unint64_t v29 = v69;
    uint64_t v36 = sub_1ACE77508();
    if (!v36) {
      break;
    }
LABEL_25:
    unint64_t v37 = v29 & 0xC000000000000001;
    uint64_t v38 = 4;
    while (1)
    {
      id v39 = v37 ? (id)MEMORY[0x1AD119490](v38 - 4, v29) : *(id *)(v29 + 8 * v38);
      uint64_t v40 = v39;
      a1 = v38 - 3;
      if (__OFADD__(v38 - 4, 1)) {
        break;
      }
      a5 = v70[3];
      a4 = v70[4];
      __swift_project_boxed_opaque_existential_1(v70, a5);
      (*(void (**)(void *, uint64_t, unint64_t))(a4 + 8))(v40, a5, a4);

      ++v38;
      unint64_t v29 = v69;
      if (a1 == v36) {
        goto LABEL_31;
      }
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1ACE77508();
  }
LABEL_31:
  swift_bridgeObjectRelease();
  sub_1ACCC2BC8(v68, (uint64_t)v73);
  swift_bridgeObjectRetain_n();
  uint64_t v41 = sub_1ACE75498();
  os_log_type_t v42 = sub_1ACE76C08();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v71 = v44;
    *(_DWORD *)uint64_t v43 = 141558531;
    uint64_t v72 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v43 + 12) = 2081;
    long long v45 = *(void **)(*((void *)&v73[0] + 1) + 24);
    uint64_t v46 = v67;
    if (v45)
    {
      id v47 = objc_msgSend(v45, sel_description);
      uint64_t v48 = sub_1ACE761B8();
      unint64_t v50 = v49;
    }
    else
    {
      uint64_t v48 = 0x6974636120726F66;
      unint64_t v50 = 0xEF72657375206576;
    }
    uint64_t v72 = sub_1ACA3189C(v48, v50, &v71);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)v73);
    *(_WORD *)(v43 + 22) = 2048;
    if (v63)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1ACE77508();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v51 = v64;
    swift_bridgeObjectRelease();
    uint64_t v72 = v52;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v41, v42, "Account %{private,mask.hash}s: Registered %ld station KVItems.", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v44, -1, -1);
    MEMORY[0x1AD11B340](v43, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1ACCC2C00((uint64_t)v73);

    swift_bridgeObjectRelease();
    uint64_t v46 = v67;
    unint64_t v51 = v64;
  }
  uint64_t v53 = v70[3];
  uint64_t v54 = v70[4];
  __swift_project_boxed_opaque_existential_1(v70, v53);
  sub_1ACCC2BC8(v68, (uint64_t)v73);
  uint64_t v55 = swift_allocObject();
  long long v56 = v73[3];
  *(_OWORD *)(v55 + 48) = v73[2];
  *(_OWORD *)(v55 + 64) = v56;
  uint64_t v57 = v74;
  long long v58 = v73[1];
  *(_OWORD *)(v55 + 16) = v73[0];
  *(_OWORD *)(v55 + 32) = v58;
  *(void *)(v55 + 80) = v57;
  *(void *)(v55 + 88) = v51;
  uint64_t v59 = v65;
  *(void *)(v55 + 96) = v46;
  *(void *)(v55 + 104) = v59;
  *(void *)(v55 + 112) = v66;
  uint64_t v60 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v54 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v60(sub_1ACCC3104, v55, v53, v54);
  return swift_release();
}

void sub_1ACCC2558(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (a1)
  {
    id v8 = a1;
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D488);
    sub_1ACCC2BC8(a2, (uint64_t)v41);
    swift_bridgeObjectRetain();
    id v10 = a1;
    swift_bridgeObjectRetain();
    id v11 = a1;
    uint64_t v12 = sub_1ACE75498();
    os_log_type_t v13 = sub_1ACE76BE8();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v37 = a5;
      uint64_t v14 = swift_slowAlloc();
      unint64_t v15 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v40 = v36;
      *(_DWORD *)uint64_t v14 = 141559043;
      sub_1ACE76FF8();
      *(_WORD *)(v14 + 12) = 2081;
      id v16 = *(void **)(v42 + 24);
      if (v16)
      {
        id v17 = objc_msgSend(v16, sel_description);
        uint64_t v18 = sub_1ACE761B8();
        unint64_t v20 = v19;
      }
      else
      {
        uint64_t v18 = 0x6974636120726F66;
        unint64_t v20 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v18, v20, &v40);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACCC2C00((uint64_t)v41);
      *(_WORD *)(v14 + 22) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v14 + 32) = 2081;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
      uint64_t v31 = sub_1ACE76228();
      sub_1ACA3189C(v31, v32, &v40);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 42) = 2112;
      uint64_t v39 = sub_1ACE74D68();
      sub_1ACE76FF8();
      *unint64_t v15 = v39;

      _os_log_impl(&dword_1AC9D5000, v12, v13, "Account %{private,mask.hash}s: Could not stream donation for userId %{private,mask.hash}s with error: %@", (uint8_t *)v14, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v36, -1, -1);
      MEMORY[0x1AD11B340](v14, -1, -1);

      a5 = v37;
    }
    else
    {
      sub_1ACCC2C00((uint64_t)v41);
      swift_bridgeObjectRelease_n();
    }
    id v33 = a1;
    a5(a1);
  }
  else
  {
    if (qword_1EB76D4A0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D488);
    sub_1ACCC2BC8(a2, (uint64_t)v41);
    swift_bridgeObjectRetain_n();
    id v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76C08();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v38 = a5;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v40 = v25;
      *(_DWORD *)uint64_t v24 = 141558787;
      sub_1ACE76FF8();
      *(_WORD *)(v24 + 12) = 2081;
      uint64_t v26 = *(void **)(v42 + 24);
      if (v26)
      {
        id v27 = objc_msgSend(v26, sel_description);
        uint64_t v28 = sub_1ACE761B8();
        unint64_t v30 = v29;
      }
      else
      {
        uint64_t v28 = 0x6974636120726F66;
        unint64_t v30 = 0xEF72657375206576;
      }
      sub_1ACA3189C(v28, v30, &v40);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACCC2C00((uint64_t)v41);
      *(_WORD *)(v24 + 22) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v24 + 32) = 2081;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
      uint64_t v34 = sub_1ACE76228();
      sub_1ACA3189C(v34, v35, &v40);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v22, v23, "Account %{private,mask.hash}s: Finished streaming donation for userId %{private,mask.hash}s.", (uint8_t *)v24, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);

      a5 = v38;
    }
    else
    {
      sub_1ACCC2C00((uint64_t)v41);

      swift_bridgeObjectRelease_n();
    }
    a5(0);
  }
}

uint64_t sub_1ACCC2BC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACCC2C00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACCC2C30()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCC2C40(uint64_t a1, unint64_t a2)
{
  return sub_1ACCBFDB0(a1, a2, *(dispatch_group_t *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1ACCC2C4C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACCC2CAC()
{
  sub_1ACCC1508(v0 + 16, *(void *)(v0 + 88), *(void (**)(void))(v0 + 96));
}

uint64_t sub_1ACCC2CBC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCC2D24(uint64_t a1, void *a2)
{
  return sub_1ACCBFFF0(a1, a2, v2 + 16, *(void *)(v2 + 88), *(void **)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112));
}

uint64_t sub_1ACCC2D34(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76AC18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACCC2D94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCC2DCC(void *a1, uint64_t a2)
{
  return sub_1ACE41600(a1, a2, *(void (**)(long long *, uint64_t))(v2 + 16));
}

uint64_t sub_1ACCC2DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76AC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACCC2E3C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + 136)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 112);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACCC2EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76AC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ACCC2F24()
{
  sub_1ACCC0300(*(void **)(v0 + 16), (v0 + 24), *(void *)(v0 + 96), *(NSObject **)(v0 + 104), v0 + 112, *(void *)(v0 + 152), *(void *)(v0 + 160));
}

uint64_t sub_1ACCC2F3C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACCC2F9C(void *a1)
{
  sub_1ACCC0998(a1, v1 + 16, *(void *)(v1 + 88), *(dispatch_group_t *)(v1 + 96));
}

uint64_t sub_1ACCC2FA8()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACCC3010(void *a1, unint64_t a2, char a3)
{
  sub_1ACCC1814(a1, a2, a3 & 1, *(void (**)(id))(v3 + 16), *(void *)(v3 + 24), v3 + 32, (void *)(v3 + 104), *(void *)(v3 + 144), *(void *)(v3 + 152));
}

uint64_t sub_1ACCC3048()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1ACCC3084(void *a1, char a2)
{
  sub_1ACB683DC(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void *, uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1ACCC3098(uint64_t a1, uint64_t a2)
{
  return sub_1ACB680CC(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t, uint64_t, void))(v2 + 24));
}

uint64_t sub_1ACCC30A4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACCC3104(void *a1)
{
  sub_1ACCC2558(a1, v1 + 16, *(void *)(v1 + 88), *(void *)(v1 + 96), *(void (**)(void))(v1 + 104));
}

void sub_1ACCC3114(void *a1, uint64_t a2, char a3)
{
  if (a3)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void _s11DonationJobVwxx(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t _s11DonationJobVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 16, v4, v6);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  id v10 = v9;
  return a1;
}

uint64_t _s11DonationJobVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 64);
  long long v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  return a1;
}

uint64_t _s11DonationJobVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  return a1;
}

ValueMetadata *_s11DonationJobVMa()
{
  return &_s11DonationJobVN;
}

uint64_t DonationService.persona.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACCC336C(v1, a1);
}

uint64_t sub_1ACCC336C(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 DonationService.init(persona:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  return result;
}

uint64_t DonationService.donate(podcasts:)(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = v1;
  return MEMORY[0x1F4188298](sub_1ACCC3404, 0, 0);
}

uint64_t sub_1ACCC3404()
{
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB76D488);
  sub_1ACCC4954(v1, v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76C08();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 192);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218240;
    *(void *)(v0 + 184) = *(void *)(v6 + 16);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    *(void *)(v0 + 128) = 0;
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 168) = &type metadata for Persona.CurrentUserExecutionStrategy;
    *(void *)(v0 + 176) = &off_1F0384AB8;
    uint64_t v8 = *(void *)(v0 + 24);
    swift_bridgeObjectRelease();
    if (v8)
    {
      int v9 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      int v9 = 1;
    }
    sub_1ACCC4A6C(v0 + 128);
    sub_1ACCC498C(v0 + 16);
    *(_DWORD *)(v0 + 232) = v9;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v3, v4, "DonationService: Donating %ld podcast entities to Cascade, isCurrentPersona: %{BOOL}d.", (uint8_t *)v7, 0x12u);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
    sub_1ACCC498C(v0 + 16);
    swift_bridgeObjectRelease();
  }

  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 200);
  sub_1ACCC336C(v10, v0 + 72);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 208) = v12;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = *(void *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), *(void *)(v0 + 112));
  id v16 = (uint64_t (*)(void))(*(void *)(v13 + 8) + **(int **)(v13 + 8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v14;
  void *v14 = v0;
  v14[1] = sub_1ACCC36FC;
  return v16();
}

uint64_t sub_1ACCC36FC()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACCC3880;
  }
  else {
    uint64_t v2 = sub_1ACCC3810;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACCC3810()
{
  sub_1ACCC4A6C(v0 + 72);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACCC3880()
{
  sub_1ACCC4A6C(v0 + 72);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACCC38F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1ACCC3910, 0, 0);
}

uint64_t sub_1ACCC3910()
{
  uint64_t v1 = sub_1ACA4EAFC(v0[3]);
  v0[4] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACCC39C8;
  v2[16] = v1;
  return MEMORY[0x1F4188298](sub_1ACCC3BF8, 0, 0);
}

uint64_t sub_1ACCC39C8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACCC3B04, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACCC3B04()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACCC3B68(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return MEMORY[0x1F4188298](sub_1ACCC3BF8, 0, 0);
}

uint64_t sub_1ACCC3BF8()
{
  uint64_t v1 = self;
  sub_1ACCC4CA8();
  uint64_t v2 = sub_1ACE76558();
  v0[17] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1ACCC3D60;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1ACA4CC9C;
  v0[13] = &block_descriptor_2;
  v0[14] = v3;
  objc_msgSend(v1, sel_fullSetDonationWithItemType_descriptors_completion_, 42184, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1ACCC3D60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1ACCC4278;
  }
  else {
    uint64_t v2 = sub_1ACCC3E9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACCC3E9C()
{
  uint64_t v1 = *(NSObject **)(v0 + 120);

  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void **)(v0 + 80);
  uint64_t v3 = sub_1ACE754C8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB76D488);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACE75498();
  os_log_type_t v5 = sub_1ACE76C08();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 128);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    *(void *)(v0 + 80) = *(void *)(v7 + 16);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v4, v5, "DonationService: Begin registering %ld podcast entities.", v8, 0xCu);
    MEMORY[0x1AD11B340](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (void *)(v9 + 32);
    swift_bridgeObjectRetain();
    uint64_t v29 = v10;
    while (1)
    {
      uint64_t v12 = v11[3];
      uint64_t v13 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
      *uint64_t v2 = 0;
      unsigned int v15 = [v1 registerItem:v14 error:v0 + 80];
      id v16 = *v2;
      if (!v15) {
        break;
      }
      id v17 = v16;

      v11 += 5;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v29;
        goto LABEL_11;
      }
    }
    id v26 = v16;
    swift_bridgeObjectRelease();
    sub_1ACE74D78();

    swift_willThrow();
  }
  else
  {
LABEL_11:
    *uint64_t v2 = 0;
    unsigned int v18 = [v1 finish:v0 + 80];
    unint64_t v19 = *v2;
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      id v20 = v19;
      uint64_t v21 = sub_1ACE75498();
      os_log_type_t v22 = sub_1ACE76C08();
      if (os_log_type_enabled(v21, v22))
      {
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v23 = 134217984;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 80) = v10;
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v21, v22, "DonationService: Finished registering %ld podcast entities.", v23, 0xCu);
        MEMORY[0x1AD11B340](v23, -1, -1);
        uint64_t v24 = v21;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        uint64_t v24 = v1;
        uint64_t v1 = v21;
      }

      id v27 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_19;
    }
    id v25 = v19;
    sub_1ACE74D78();

    swift_willThrow();
  }

  id v27 = *(uint64_t (**)(void))(v0 + 8);
LABEL_19:
  return v27();
}

uint64_t sub_1ACCC4278()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t DonationService.donate(stations:)(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = v1;
  return MEMORY[0x1F4188298](sub_1ACCC4334, 0, 0);
}

uint64_t sub_1ACCC4334()
{
  if (qword_1EB76D4A0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB76D488);
  sub_1ACCC4954(v1, v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76C08();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 192);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218240;
    *(void *)(v0 + 184) = *(void *)(v6 + 16);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    *(void *)(v0 + 128) = 0;
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 168) = &type metadata for Persona.CurrentUserExecutionStrategy;
    *(void *)(v0 + 176) = &off_1F0384AB8;
    uint64_t v8 = *(void *)(v0 + 24);
    swift_bridgeObjectRelease();
    if (v8)
    {
      int v9 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      int v9 = 1;
    }
    sub_1ACCC4A6C(v0 + 128);
    sub_1ACCC498C(v0 + 16);
    *(_DWORD *)(v0 + 232) = v9;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v3, v4, "DonationService: Donating %ld station entities to Cascade, isCurrentPersona: %{BOOL}d.", (uint8_t *)v7, 0x12u);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  else
  {
    sub_1ACCC498C(v0 + 16);
    swift_bridgeObjectRelease();
  }

  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 200);
  sub_1ACCC336C(v10, v0 + 72);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 208) = v12;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = *(void *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), *(void *)(v0 + 112));
  id v16 = (uint64_t (*)(void))(*(void *)(v13 + 8) + **(int **)(v13 + 8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v14;
  void *v14 = v0;
  v14[1] = sub_1ACCC462C;
  return v16();
}

uint64_t sub_1ACCC462C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACCC4CEC;
  }
  else {
    uint64_t v2 = sub_1ACCC4CE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACCC4740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1ACCC4760, 0, 0);
}

uint64_t sub_1ACCC4760()
{
  uint64_t v1 = sub_1ACA4EC58(v0[3]);
  v0[4] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1ACCC4818;
  v2[16] = v1;
  return MEMORY[0x1F4188298](sub_1ACCC3BF8, 0, 0);
}

uint64_t sub_1ACCC4818()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1ACCC4CF0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1ACCC4954(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACCC498C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACCC49C0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1ACA50B84;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1ACCC3910, 0, 0);
}

uint64_t sub_1ACCC4A6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACCC4AC0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1ACA51034;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1ACCC4760, 0, 0);
}

ValueMetadata *type metadata accessor for DonationService()
{
  return &type metadata for DonationService;
}

unsigned char *storeEnumTagSinglePayload for DonationService.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACCC4C18);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DonationService.Error()
{
  return &type metadata for DonationService.Error;
}

unint64_t sub_1ACCC4C54()
{
  unint64_t result = qword_1E99F4E80;
  if (!qword_1E99F4E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E99F4E80);
  }
  return result;
}

unint64_t sub_1ACCC4CA8()
{
  unint64_t result = qword_1E99F4E90;
  if (!qword_1E99F4E90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E99F4E90);
  }
  return result;
}

PodcastsFoundation::DeviceCapabilities __swiftcall DeviceCapabilities.init(rawValue:)(PodcastsFoundation::DeviceCapabilities rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t DeviceCapabilities.rawValue.getter()
{
  return *(void *)v0;
}

void *sub_1ACCC4D04@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1ACCC4D18@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1ACCC4D2C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1ACCC4D58@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1ACCC4D7C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1ACCC4D90@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1ACCC4DA4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1ACCC4DB8()
{
  return *v0 == 0;
}

uint64_t sub_1ACCC4DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1ACCC4DE0(void *result)
{
  *v1 &= ~*result;
  return result;
}

void static DeviceCapabilities.cellularRadio.getter(void *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_1ACCC4E08()
{
  unint64_t result = qword_1E99F4E98;
  if (!qword_1E99F4E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4E98);
  }
  return result;
}

unint64_t sub_1ACCC4E60()
{
  unint64_t result = qword_1E99F4EA0;
  if (!qword_1E99F4EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4EA0);
  }
  return result;
}

unint64_t sub_1ACCC4EB8()
{
  unint64_t result = qword_1E99F4EA8;
  if (!qword_1E99F4EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4EA8);
  }
  return result;
}

unint64_t sub_1ACCC4F10()
{
  unint64_t result = qword_1E99F4EB0;
  if (!qword_1E99F4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4EB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceCapabilities()
{
  return &type metadata for DeviceCapabilities;
}

double sub_1ACCC4F80@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

BOOL sub_1ACCC4F8C(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACCC4FA0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCC4FEC()
{
  return sub_1ACE77B58();
}

uint64_t sub_1ACCC5020()
{
  return sub_1ACE77B78();
}

double static InterestValue.suggestLess.getter()
{
  return -1.0;
}

double static InterestValue.neutral.getter()
{
  return 0.0;
}

double static InterestValue.favorited.getter()
{
  return 1.0;
}

unint64_t sub_1ACCC5084()
{
  unint64_t result = qword_1E99F4EB8;
  if (!qword_1E99F4EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4EB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InterestValue()
{
  return &type metadata for InterestValue;
}

uint64_t sub_1ACCC50E8()
{
  uint64_t v0 = sub_1ACE754C8();
  __swift_allocate_value_buffer(v0, qword_1EB785968);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB785968);
  return sub_1ACE754A8();
}

id sub_1ACCC5168()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DeferredLaunchTaskCoordinator()), sel_init);
  qword_1EB76CB90 = (uint64_t)result;
  return result;
}

id DeferredLaunchTaskCoordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static DeferredLaunchTaskCoordinator.shared.getter()
{
  if (qword_1EB76CBA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB76CB90;
  return v0;
}

id DeferredLaunchTaskCoordinator.init()()
{
  uint64_t v1 = sub_1ACE76CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v14 = OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue;
  v13[4] = sub_1ACA51E1C();
  uint64_t v7 = v0;
  sub_1ACE75E28();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  void v13[2] = sub_1ACA8F6D8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  v13[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  _OWORD v13[3] = sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  uint64_t v8 = *MEMORY[0x1E4FBCC58];
  uint64_t v9 = v2 + 104;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13[0] = v9;
  v10(v4, v8, v1);
  *(void *)(v13[5] + v14) = sub_1ACE76D28();
  uint64_t v14 = OBJC_IVAR___PFDeferredLaunchTaskCoordinator__workQueue;
  sub_1ACE75E28();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1ACE770E8();
  v10(v4, v8, v1);
  *(void *)&v7[v14] = sub_1ACE76D28();
  *(void *)&v7[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__tasks] = MEMORY[0x1E4FBC860];
  v7[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring] = 1;
  v7[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled] = 0;

  uint64_t v11 = (objc_class *)type metadata accessor for DeferredLaunchTaskCoordinator();
  v15.receiver = v7;
  v15.super_class = v11;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for DeferredLaunchTaskCoordinator()
{
  return self;
}

double static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.getter()
{
  return *(double *)&qword_1E99F4EC0;
}

uint64_t static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.setter(double a1)
{
  uint64_t result = swift_beginAccess();
  qword_1E99F4EC0 = *(void *)&a1;
  return result;
}

uint64_t (*static DeferredLaunchTaskCoordinator.defaultDeferralDeadline.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACCC5714(double a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v35 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E48();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v34 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E88();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v31 - v13;
  if (qword_1EB76CBA8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1ACE754C8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB785968);
  uint64_t v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76BC8();
  if (os_log_type_enabled(v16, v17))
  {
    unsigned int v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unsigned int v18 = 134349056;
    *(double *)uint64_t aBlock = a1;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v16, v17, "Scheduling %{public}f second timeout for deferred launch tasks.", v18, 0xCu);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }

  sub_1ACE75E78();
  v31[0] = v14;
  MEMORY[0x1AD1180A0](v11, a1);
  unint64_t v19 = *(void (**)(void, uint64_t))(v9 + 8);
  v31[1] = v9 + 8;
  unint64_t v32 = v19;
  uint64_t v20 = v8;
  v19(v11, v8);
  uint64_t v21 = *(void **)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v24 + v23, v11, v8);
  *(void *)(v24 + ((v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_1ACCC5F40;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_61;
  id v25 = _Block_copy(aBlock);
  id v26 = v21;
  swift_retain();
  id v27 = v34;
  sub_1ACE75E08();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v28 = v35;
  uint64_t v29 = v39;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v27, v28, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v37);
  v32(v31[0], v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACCC5C58()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACCC5C90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1AD11B470](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (*(unsigned char *)(v4 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled) == 1)
    {
      if (qword_1EB76CBA8 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_1ACE754C8();
      __swift_project_value_buffer(v6, (uint64_t)qword_1EB785968);
      uint64_t v7 = sub_1ACE75498();
      os_log_type_t v8 = sub_1ACE76BE8();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        uint64_t v11 = v10;
        *(_DWORD *)uint64_t v9 = 136446210;
        sub_1ACA3189C(0xD000000000000020, 0x80000001ACECF4D0, &v11);
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v7, v8, "%{public}s called twice. Ignoring the second call.", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v10, -1, -1);
        MEMORY[0x1AD11B340](v9, -1, -1);
      }
    }
    else
    {
      *(unsigned char *)(v4 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled) = 1;
      sub_1ACCC7448(a2);
    }
  }
}

uint64_t sub_1ACCC5E68()
{
  uint64_t v1 = sub_1ACE75E88();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1ACCC5F40()
{
  uint64_t v1 = *(void *)(sub_1ACE75E88() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_1ACCC5C90(v2, v3);
}

uint64_t sub_1ACCC6028()
{
  return sub_1ACCC5714(*(double *)&qword_1E99F4EC0);
}

uint64_t sub_1ACCC60D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a3;
  uint64_t v29 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v32 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75E48();
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v30 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue;
  if (!a1) {
    goto LABEL_4;
  }
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  sub_1ACA51E1C();
  id v14 = v13;
  id v15 = a1;
  char v16 = sub_1ACE76F68();

  if (v16)
  {
    __break(1u);
LABEL_4:
    id v15 = *(id *)(v4 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__workQueue);
  }
  os_log_type_t v17 = *(void **)(v4 + v12);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v29;
  v19[2] = v18;
  _OWORD v19[3] = v20;
  uint64_t v28 = v8;
  uint64_t v29 = v10;
  v19[4] = v33;
  v19[5] = v15;
  v19[6] = ObjectType;
  aBlock[4] = sub_1ACCC79C8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_10_2;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain_n();
  id v22 = a1;
  id v23 = v17;
  swift_retain();
  id v27 = v15;
  uint64_t v24 = v30;
  sub_1ACE75E08();
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  id v25 = v32;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v24, v25, v21);
  _Block_release(v21);

  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v7);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v29);
  swift_release();
  return swift_release();
}

void sub_1ACCC6484(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1AD11B470](v7);
  if (v8)
  {
    uint64_t v9 = (unsigned char *)v8;
    if ((*(unsigned char *)(v8 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__timeoutScheduled) & 1) == 0)
    {
      if (qword_1EB76CBA8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1ACE754C8();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EB785968);
      uint64_t v11 = sub_1ACE75498();
      os_log_type_t v12 = sub_1ACE76BE8();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_1AC9D5000, v11, v12, "Launch task deferred without deferral timer. The task may never run.", v13, 2u);
        MEMORY[0x1AD11B340](v13, -1, -1);
      }
    }
    if (v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring] == 1)
    {
      id v14 = (void **)&v9[OBJC_IVAR___PFDeferredLaunchTaskCoordinator__tasks];
      swift_beginAccess();
      id v15 = *v14;
      swift_retain();
      id v16 = a4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char *v14 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v15 = sub_1ACA43BD0(0, v15[2] + 1, 1, v15);
        char *v14 = v15;
      }
      unint64_t v19 = v15[2];
      unint64_t v18 = v15[3];
      if (v19 >= v18 >> 1)
      {
        id v15 = sub_1ACA43BD0((void *)(v18 > 1), v19 + 1, 1, v15);
        char *v14 = v15;
      }
      v15[2] = v19 + 1;
      uint64_t v20 = &v15[3 * v19];
      v20[4] = a2;
      v20[5] = a3;
      v20[6] = v16;
      swift_endAccess();
    }
    else
    {
      if (qword_1EB76CBA8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1ACE754C8();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EB785968);
      id v22 = sub_1ACE75498();
      os_log_type_t v23 = sub_1ACE76BC8();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_1AC9D5000, v22, v23, "Task deferred after launch tasks have already started. Scheduling it immediately.", v24, 2u);
        MEMORY[0x1AD11B340](v24, -1, -1);
      }

      sub_1ACCC7000(a2, a3, a4);
    }
  }
}

uint64_t sub_1ACCC67F0(uint64_t a1, uint64_t a2)
{
  return sub_1ACCC60D4(0, a1, a2);
}

uint64_t sub_1ACCC6890()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76CBA8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB785968);
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BC8();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl(&dword_1AC9D5000, v10, v11, "Attempting to run deferred tasks.", v12, 2u);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }

  uint64_t v13 = *(void **)(v1 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = ObjectType;
  aBlock[4] = sub_1ACCC7A10;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_17_5;
  id v16 = _Block_copy(aBlock);
  id v17 = v13;
  swift_retain();
  sub_1ACE75E08();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v5, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  swift_release();
  return swift_release();
}

void sub_1ACCC6C40(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    if (*(unsigned char *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring))
    {
      *(unsigned char *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring) = 0;
      uint64_t v4 = (uint8_t *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__tasks);
      swift_beginAccess();
      uint64_t v22 = *(void *)(*(void *)v4 + 16);
      if (qword_1EB76CBA8 != -1) {
        goto LABEL_21;
      }
      while (1)
      {
        uint64_t v5 = sub_1ACE754C8();
        __swift_project_value_buffer(v5, (uint64_t)qword_1EB785968);
        uint64_t v6 = sub_1ACE75498();
        os_log_type_t v7 = sub_1ACE76BC8();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v8 = 134349056;
          sub_1ACE76FF8();
          _os_log_impl(&dword_1AC9D5000, v6, v7, "Starting %{public}ld tasks.", v8, 0xCu);
          MEMORY[0x1AD11B340](v8, -1, -1);
        }

        uint64_t v23 = 0;
        uint64_t v9 = *(void *)v4;
        uint64_t v10 = *(void *)(*(void *)v4 + 16);
        if (!v10) {
          break;
        }
        swift_bridgeObjectRetain();
        swift_beginAccess();
        os_log_type_t v11 = (void **)(v9 + 48);
        while (1)
        {
          uint64_t v13 = (uint64_t)*(v11 - 2);
          uint64_t v12 = (uint64_t)*(v11 - 1);
          uint64_t v14 = *v11;
          swift_retain();
          id v15 = v14;
          id v16 = sub_1ACE75498();
          os_log_type_t v17 = sub_1ACE76BC8();
          if (os_log_type_enabled(v16, v17))
          {
            uint64_t v4 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v4 = 134349312;
            *(void *)(v4 + 4) = v23;
            *((_WORD *)v4 + 6) = 2050;
            *(void *)(v4 + 14) = v22;
            _os_log_impl(&dword_1AC9D5000, v16, v17, "Starting %{public}ld of %{public}ld tasks.", v4, 0x16u);
            MEMORY[0x1AD11B340](v4, -1, -1);
          }

          sub_1ACCC7000(v13, v12, v15);
          if (__OFADD__(v23, 1)) {
            break;
          }
          ++v23;

          swift_release();
          v11 += 3;
          if (!--v10)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        __break(1u);
LABEL_21:
        swift_once();
      }
    }
    else
    {
      if (qword_1EB76CBA8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1ACE754C8();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EB785968);
      uint64_t v19 = sub_1ACE75498();
      os_log_type_t v20 = sub_1ACE76BC8();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_1AC9D5000, v19, v20, "Tasks have already run. Nothing to do here.", v21, 2u);
        MEMORY[0x1AD11B340](v21, -1, -1);
      }
    }
LABEL_18:
  }
}

uint64_t sub_1ACCC7000(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75DC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v17[0] - 8);
  MEMORY[0x1F4188790](v17[0]);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = ObjectType;
  aBlock[4] = sub_1ACCC7CC4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_46;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  a3;
  sub_1ACE75E08();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void))(v11 + 8))(v13, v17[0]);
  return swift_release();
}

void sub_1ACCC72C8(void (*a1)(void))
{
  if (qword_1EB76CBA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB785968);
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76BD8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1AC9D5000, v3, v4, "Starting task.", v5, 2u);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }

  a1();
  oslog = sub_1ACE75498();
  os_log_type_t v6 = sub_1ACE76BD8();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1AC9D5000, oslog, v6, "Finishing task.", v7, 2u);
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
}

uint64_t sub_1ACCC7448(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v18 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1ACE75E48();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__adminQueue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = ObjectType;
  aBlock[4] = sub_1ACCC7C7C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_40;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v10;
  swift_retain();
  sub_1ACE75E08();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118E40](v18, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  swift_release();
  return swift_release();
}

void sub_1ACCC7748(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1AD11B470](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    if (*(unsigned char *)(v2 + OBJC_IVAR___PFDeferredLaunchTaskCoordinator__deferring) == 1)
    {
      if (qword_1EB76CBA8 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1ACE754C8();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EB785968);
      uint64_t v5 = sub_1ACE75498();
      os_log_type_t v6 = sub_1ACE76BE8();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_1AC9D5000, v5, v6, "Launch task deferral timed out. Starting tasks.", v7, 2u);
        MEMORY[0x1AD11B340](v7, -1, -1);
      }

      sub_1ACCC6890();
    }
  }
}

id DeferredLaunchTaskCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeferredLaunchTaskCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACCC7900(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1ACCC7928(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1ACE76FF8();
  *a1 = v5;
  return result;
}

uint64_t sub_1ACCC7980()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACCC79C8()
{
  sub_1ACCC6484(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1ACCC79D8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACCC7A10()
{
  sub_1ACCC6C40(*(void *)(v0 + 16));
}

uint64_t method lookup function for DeferredLaunchTaskCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeferredLaunchTaskCoordinator);
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.scheduleDeferralDeadline(after:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.scheduleDefaultDeferralDeadline()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.deferred(on:perform:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.deferWork(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DeferredLaunchTaskCoordinator.stopDeferring()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

void destroy for DeferredLaunchTaskCoordinator._DeferredTask(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + 16);
}

void *_s18PodcastsFoundation29DeferredLaunchTaskCoordinatorC13_DeferredTaskVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for DeferredLaunchTaskCoordinator._DeferredTask(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  id v5 = (void *)a2[2];
  os_log_type_t v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  return a1;
}

uint64_t assignWithTake for DeferredLaunchTaskCoordinator._DeferredTask(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for DeferredLaunchTaskCoordinator._DeferredTask()
{
  return &type metadata for DeferredLaunchTaskCoordinator._DeferredTask;
}

void sub_1ACCC7C7C()
{
  sub_1ACCC7748(*(void *)(v0 + 16));
}

uint64_t sub_1ACCC7C84()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1ACCC7CC4()
{
  sub_1ACCC72C8(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1ACCC7CD0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

PodcastsFoundation::ContentRating_optional __swiftcall ContentRating.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.CMTimeValue value = PodcastsFoundation_ContentRating_explicit;
  }
  else {
    v2.CMTimeValue value = PodcastsFoundation_ContentRating_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t ContentRating.rawValue.getter(char a1)
{
  if (a1) {
    return 0x746963696C707865;
  }
  else {
    return 0x6E61656C63;
  }
}

uint64_t sub_1ACCC7D9C(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x746963696C707865;
  }
  else {
    uint64_t v3 = 0x6E61656C63;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x746963696C707865;
  }
  else {
    uint64_t v5 = 0x6E61656C63;
  }
  if (*a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1ACCC7E48()
{
  unint64_t result = qword_1E99F4EF0;
  if (!qword_1E99F4EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4EF0);
  }
  return result;
}

uint64_t sub_1ACCC7E9C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCC7F1C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCC7F88()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCC8004@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACCC8064(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E61656C63;
  if (*v1) {
    uint64_t v2 = 0x746963696C707865;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACCC80A0()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACCC8100()
{
  return sub_1ACE764C8();
}

unsigned char *storeEnumTagSinglePayload for ContentRating(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCC821CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentRating()
{
  return &type metadata for ContentRating;
}

unint64_t sub_1ACCC8254()
{
  unint64_t result = qword_1EB76AC20[0];
  if (!qword_1EB76AC20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB76AC20);
  }
  return result;
}

uint64_t sub_1ACCC82A8@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  id v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  os_log_type_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t CacheAssetProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v29 = v4;
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 56);
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = *(void *)(a1 + 64);
  v39[0] = AssociatedTypeWitness;
  v39[1] = v4;
  v39[2] = AssociatedConformanceWitness;
  v39[3] = v13;
  uint64_t v32 = type metadata accessor for Publishers.CachedAssetPublisher();
  uint64_t v35 = *(void *)(v32 - 8);
  __n128 v14 = MEMORY[0x1F4188790](v32);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v31 = (char *)&v28 - v15;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 48))(v8, v7, v14);
  uint64_t v17 = v2 + *(int *)(a1 + 76);
  uint64_t v18 = v29;
  Publisher.cache<A>(location:cache:overwrite:alwaysAttemptRefresh:)(v2 + *(int *)(a1 + 80), v17, *(unsigned __int8 *)(v2 + *(int *)(a1 + 84)), 0, AssociatedTypeWitness, v29, AssociatedConformanceWitness, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, AssociatedTypeWitness);
  uint64_t WitnessTable = swift_getWitnessTable();
  double v20 = AssetProcessingStep.metadataTrace.getter(a1, WitnessTable, (uint64_t)v39);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v34 + 16))(v33, v17, v18, v20);
  uint64_t v37 = sub_1ACE76228();
  unint64_t v38 = v21;
  sub_1ACE762C8();
  uint64_t v22 = v37;
  unint64_t v23 = v38;
  uint64_t v24 = v32;
  swift_getWitnessTable();
  char v25 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  uint64_t v26 = v31;
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)v39, (uint64_t)"Cache", 5, 2, 0, v22, v23, v25 & 1, v36, v24);
  swift_bridgeObjectRelease();
  sub_1ACB3E38C((uint64_t)v39);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v26, v24);
}

uint64_t sub_1ACCC88E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a8, a1, a6);
  __n128 v14 = (int *)type metadata accessor for CacheAssetProcessingStep();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a8 + v14[20], a4, a5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8 + v14[19], a2, a7);
  *(unsigned char *)(a8 + v14[21]) = a3;
  return result;
}

uint64_t AssetProcessingStep<>.cache<A>(_:format:overwrite:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v52 = a7;
  uint64_t v53 = a8;
  uint64_t v49 = a1;
  uint64_t v50 = a6;
  int v48 = a3;
  uint64_t v44 = a2;
  uint64_t v47 = a9;
  uint64_t v51 = a10;
  uint64_t v42 = a11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = sub_1ACE76FD8();
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = (uint64_t)&v38 - v16;
  uint64_t v41 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v46 = (char *)&v38 - v18;
  uint64_t v19 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v28 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = *(void (**)(__n128))(v23 + 16);
  uint64_t v43 = (uint64_t)&v38 - v30;
  v29(v28);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  long long v45 = v22;
  v31(v22, v49, a5);
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v49 = a5;
  uint64_t v57 = v50;
  uint64_t v58 = v52;
  uint64_t v59 = v53;
  uint64_t v60 = v51;
  uint64_t v61 = v42;
  uint64_t v62 = v12;
  swift_getAssociatedTypeWitness();
  sub_1ACE76FD8();
  uint64_t v32 = v40;
  sub_1ACCC82A8((void (*)(char *, char *))sub_1ACCC9054, (uint64_t)v54, MEMORY[0x1E4FBC248], AssociatedTypeWitness, v33, v40);
  uint64_t v34 = v12;
  uint64_t v35 = v41;
  ((void (*)(char *, uint64_t, uint64_t))v29)(v26, v34, a4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v36 = (uint64_t)v46;
    (*(void (**)(uint64_t, uint64_t))(v50 + 40))(a4, v50);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, a4);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v32, v39);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, a4);
    uint64_t v36 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v46, v32, AssociatedTypeWitness);
  }
  return sub_1ACCC88E0(v43, (uint64_t)v45, v48 & 1, v36, AssociatedTypeWitness, a4, v49, v47);
}

uint64_t sub_1ACCC8EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v14 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v18 - v15;
  (*(void (**)(uint64_t, uint64_t, __n128))(a5 + 40))(a3, a5, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a9 + 16))(a1, AssociatedTypeWitness, a9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, AssociatedTypeWitness);
}

uint64_t CacheAssetProcessingStep.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 80));
}

uint64_t CacheAssetProcessingStep.overwrite.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_1ACCC9054(uint64_t a1)
{
  return sub_1ACCC8EC8(a1, v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1ACCC908C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACCC90AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ACCC9108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

uint64_t sub_1ACCC9110()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1ACCC9228(uint64_t *a1, uint64_t *a2, void *a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3[3] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[4] - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = (v5 + v7) & ~v7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(void *)(a3[2] - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v10 + v12;
  uint64_t v14 = *(void *)(v11 + 64);
  unint64_t v15 = v14 + ((v10 + v12 + v9) & ~v12) + 1;
  uint64_t v16 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v11 + 80));
  if (v16 <= 7
    && v15 <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) == 0)
  {
    uint64_t v20 = ~v7;
    uint64_t v21 = ~v12;
    uint64_t v27 = a3[4];
    uint64_t v28 = a3[2];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    unint64_t v23 = ((unint64_t)v3 + v8) & v20;
    unint64_t v24 = ((unint64_t)a2 + v8) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v23, v24, v27);
    unint64_t v25 = (v24 + v13) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v23 + v13) & v21, v25, v28);
    *(unsigned char *)(((v23 + v13) & v21) + v14) = *(unsigned char *)(v25 + v14);
  }
  else
  {
    uint64_t v19 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1ACCC9440(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[3] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[4] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(a2[2] - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + *(void *)(v7 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return v10(v11);
}

uint64_t sub_1ACCC9528(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[3] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[4] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[2] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 48) + v18) = *(unsigned char *)(*(void *)(v15 + 48) + v19);
  return a1;
}

uint64_t sub_1ACCC963C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[3] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[4] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[2] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 40) + v18) = *(unsigned char *)(*(void *)(v15 + 40) + v19);
  return a1;
}

uint64_t sub_1ACCC9750(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[3] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[4] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[2] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 32) + v18) = *(unsigned char *)(*(void *)(v15 + 32) + v19);
  return a1;
}

uint64_t sub_1ACCC9864(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[3] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[4] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[2] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 24) + v18) = *(unsigned char *)(*(void *)(v15 + 24) + v19);
  return a1;
}

uint64_t sub_1ACCC9978(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[3] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a3[4] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = a3[2];
  uint64_t v10 = *(void *)(v9 - 8);
  if (v8 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v12 = *(unsigned int *)(v10 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(void *)(*(void *)(a3[4] - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v10 + 64);
  if (v12 <= v11) {
    unsigned int v17 = v11;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v10 + 84);
  }
  if (v17 <= 0xFE) {
    unsigned int v17 = 254;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(*(void *)(a3[3] - 8) + 64) + v13;
  int v19 = a2 - v17;
  if (a2 > v17)
  {
    uint64_t v20 = v16 + ((v14 + v15 + (v18 & ~v13)) & ~v15) + 1;
    char v21 = 8 * v20;
    if (v20 > 3) {
      goto LABEL_12;
    }
    unsigned int v23 = ((v19 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      int v22 = *(_DWORD *)((char *)a1 + v20);
      if (!v22) {
        goto LABEL_29;
      }
      goto LABEL_19;
    }
    if (v23 > 0xFF)
    {
      int v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!*(unsigned __int16 *)((char *)a1 + v20)) {
        goto LABEL_29;
      }
      goto LABEL_19;
    }
    if (v23 >= 2)
    {
LABEL_12:
      int v22 = *((unsigned __int8 *)a1 + v20);
      if (!*((unsigned char *)a1 + v20)) {
        goto LABEL_29;
      }
LABEL_19:
      int v24 = (v22 - 1) << v21;
      if (v20 > 3) {
        int v24 = 0;
      }
      if (v16 + ((v14 + v15 + (v18 & ~v13)) & ~v15) == -1)
      {
        int v26 = 0;
      }
      else
      {
        if (v20 <= 3) {
          int v25 = v16 + ((v14 + v15 + (v18 & ~v13)) & ~v15) + 1;
        }
        else {
          int v25 = 4;
        }
        switch(v25)
        {
          case 2:
            int v26 = *a1;
            break;
          case 3:
            int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v26 = *(_DWORD *)a1;
            break;
          default:
            int v26 = *(unsigned __int8 *)a1;
            break;
        }
      }
      int v34 = v17 + (v26 | v24);
      return (v34 + 1);
    }
  }
LABEL_29:
  if (v6 == v17)
  {
    uint64_t v27 = *(uint64_t (**)(void))(v5 + 48);
    return v27();
  }
  unint64_t v29 = ((unint64_t)a1 + v18) & ~v13;
  if (v8 == v17)
  {
    uint64_t v30 = *(uint64_t (**)(unint64_t))(v7 + 48);
    return v30(v29);
  }
  unint64_t v31 = (v29 + v14 + v15) & ~v15;
  if (v12 != v17)
  {
    unsigned int v33 = *(unsigned __int8 *)(v31 + v16);
    if (v33 < 2) {
      return 0;
    }
    int v34 = (v33 + 2147483646) & 0x7FFFFFFF;
    return (v34 + 1);
  }
  uint64_t v32 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  return v32(v31, v12, v9);
}

void sub_1ACCC9C7C(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4[4] - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(a4[2] - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(*(void *)(a4[4] - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = *(void *)(v11 + 64);
  if (v12 <= v10) {
    unsigned int v17 = v10;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  if (v17 <= 0xFE) {
    unsigned int v17 = 254;
  }
  uint64_t v18 = *(void *)(*(void *)(a4[3] - 8) + 64) + v13;
  size_t v19 = v16 + ((v14 + v15 + (v18 & ~v13)) & ~v15) + 1;
  BOOL v20 = a3 >= v17;
  unsigned int v21 = a3 - v17;
  if (v21 != 0 && v20)
  {
    if (v19 <= 3)
    {
      unsigned int v26 = ((v21 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
      if (HIWORD(v26))
      {
        int v22 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v26 > 1;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  else
  {
    int v22 = 0;
  }
  if (v17 < a2)
  {
    unsigned int v23 = ~v17 + a2;
    if (v19 < 4)
    {
      int v24 = (v23 >> (8 * v19)) + 1;
      if (v19)
      {
        int v27 = v23 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v27;
          a1[2] = BYTE2(v27);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v27;
        }
        else
        {
          *a1 = v27;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v19] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v24;
        return;
      case 3:
        goto LABEL_52;
      case 4:
        *(_DWORD *)&a1[v19] = v24;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v13;
  switch(v22)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_52:
      __break(1u);
      JUMPOUT(0x1ACCCA024);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v7 == v17)
      {
        uint64_t v28 = *(void (**)(char *))(v6 + 56);
        unint64_t v29 = a1;
LABEL_32:
        v28(v29);
        return;
      }
      unint64_t v30 = (unint64_t)&a1[v18] & v25;
      if (v9 == v17)
      {
        unint64_t v31 = *(void (**)(unint64_t))(v8 + 56);
        v31(v30);
      }
      else
      {
        unint64_t v29 = (char *)((v30 + v14 + v15) & ~v15);
        if (v12 == v17)
        {
          uint64_t v28 = *(void (**)(char *))(v11 + 56);
          goto LABEL_32;
        }
        v29[v16] = a2 + 1;
      }
      return;
  }
}

uint64_t type metadata accessor for CacheAssetProcessingStep()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACCCA064()
{
  return swift_getWitnessTable();
}

uint64_t DownloadPhase.hash(into:)()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadPhase();
  MEMORY[0x1F4188790](v5);
  unsigned int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACAA5464(v0, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      sub_1ACE77B28();
      sub_1ACCCA728(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
      sub_1ACE760F8();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      return sub_1ACE77B28();
    }
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
}

uint64_t type metadata accessor for DownloadPhase()
{
  uint64_t result = qword_1EB771B18;
  if (!qword_1EB771B18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DownloadPhase.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCCA3AC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCCA3F0()
{
  return sub_1ACE77B78();
}

uint64_t _s18PodcastsFoundation13DownloadPhaseO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DownloadPhase();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)&v23 - v12);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F4F00);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (double *)&v16[*(int *)(v17 + 56)];
  sub_1ACAA5464(a1, (uint64_t)v16);
  sub_1ACAA5464(a2, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1ACAA5464((uint64_t)v16, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload())
    {
      char v20 = *v13 == *v18;
      goto LABEL_7;
    }
LABEL_11:
    sub_1ACCCABC8((uint64_t)v16);
    char v20 = 0;
    return v20 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1ACC8FFCC((uint64_t)v16);
      char v20 = 1;
      return v20 & 1;
    }
    goto LABEL_11;
  }
  sub_1ACAA5464((uint64_t)v16, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_11;
  }
  (*(void (**)(char *, double *, uint64_t))(v5 + 32))(v7, v18, v4);
  char v20 = MEMORY[0x1AD117040](v10, v7);
  unsigned int v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v7, v4);
  v21(v10, v4);
LABEL_7:
  sub_1ACC8FFCC((uint64_t)v16);
  return v20 & 1;
}

uint64_t sub_1ACCCA6E0()
{
  return sub_1ACCCA728(&qword_1E99F4EF8, (void (*)(uint64_t))type metadata accessor for DownloadPhase);
}

uint64_t sub_1ACCCA728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DownloadPhase(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1ACE74F28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for DownloadPhase(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1ACE74F28();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for DownloadPhase(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1ACE74F28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for DownloadPhase(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACC8FFCC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *assignWithTake for DownloadPhase(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACC8FFCC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1ACE74F28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1ACCCAB30()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1ACCCABC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F4F00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ACCCAC28(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8 = a2;
  uint64_t v9 = *(void (**)(void *, unint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v10 = v8;
    uint64_t v8 = (void *)sub_1ACE74F88();
    unint64_t v12 = v11;

    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_retain();
  unint64_t v12 = 0xF000000000000000;
  if (a3) {
LABEL_3:
  }
    a3 = sub_1ACE75FF8();
LABEL_4:
  id v13 = a4;
  id v14 = a5;
  v9(v8, v12, a3, a4, a5);

  swift_bridgeObjectRelease();
  sub_1ACAB2EF0((uint64_t)v8, v12);
  return swift_release();
}

id sub_1ACCCAD38()
{
  uint64_t v1 = OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionService____lazy_storage___urlRequestService;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionService____lazy_storage___urlRequestService);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionService____lazy_storage___urlRequestService);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)IMURLRequestService), sel_initWithConcurrentOperationCount_requestEncodingType_, 1, 0);
    objc_msgSend(v3, sel_setUrlSessionDelegate_, v0);
    objc_msgSend(v3, sel_setPersonalizeRequests_, 1);
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v5 = v2;
  return v3;
}

uint64_t PushSubscriptionService.registerPushToken(for:)(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &type metadata for Podcasts;
  unint64_t v18 = sub_1ACA56248();
  LOBYTE(aBlock[0]) = 59;
  char v10 = sub_1ACE75298();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  if (v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionRequest_endpointURL, v2);
    sub_1ACE74848();
    sub_1ACAE4288();
    sub_1ACE74878();
    sub_1ACE747E8();
    sub_1ACE761B8();
    sub_1ACE74888();
    swift_bridgeObjectRelease();
    id v12 = sub_1ACCCAD38();
    id v13 = (void *)sub_1ACE74818();
    unint64_t v18 = (unint64_t)sub_1ACCCB290;
    uint64_t v19 = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACCCAC28;
    uint64_t v17 = (ValueMetadata *)&block_descriptor_62;
    id v14 = _Block_copy(aBlock);
    objc_msgSend(v12, sel_performDataRequest_callback_, v13, v14);
    _Block_release(v14);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

void sub_1ACCCB290(int a1, int a2, int a3, int a4, id a5)
{
  if (a5)
  {
    id v6 = a5;
    if (qword_1EB76A608 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1ACE754C8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB76A5F0);
    id v8 = a5;
    id v9 = a5;
    oslog = sub_1ACE75498();
    os_log_type_t v10 = sub_1ACE76BE8();
    if (os_log_type_enabled(oslog, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      id v12 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v11 = 138412290;
      id v13 = a5;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_1ACE76FF8();
      *id v12 = v18;

      _os_log_impl(&dword_1AC9D5000, oslog, v10, "Error registering push token %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v12, -1, -1);
      MEMORY[0x1AD11B340](v11, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_1EB76A608 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB76A5F0);
    oslog = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76C08();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1AC9D5000, oslog, v15, "Successfully registered token", v16, 2u);
      MEMORY[0x1AD11B340](v16, -1, -1);
    }
  }
}

id PushSubscriptionService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id PushSubscriptionService.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC18PodcastsFoundation23PushSubscriptionService____lazy_storage___urlRequestService] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id PushSubscriptionService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PushSubscriptionService()
{
  return self;
}

const char *static FeedUpdateEvent.evaluation_scheduled.getter()
{
  return "EvaluationScheduled";
}

const char *static FeedUpdateEvent.prepareForUpdate_scheduled.getter()
{
  return "PrepareForFeedUpdateScheduled";
}

ValueMetadata *type metadata accessor for FeedUpdateEvent()
{
  return &type metadata for FeedUpdateEvent;
}

uint64_t sub_1ACCCB6A4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        id v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        id v6 = (unsigned __int8 *)sub_1ACE77388();
      }
      uint64_t v7 = (uint64_t)sub_1ACCCF4C4(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        os_log_type_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_1ACCCEEC8(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1ACCCF4C4);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

char *sub_1ACCCB908(char *result)
{
  objc_super v2 = result;
  if (!result) {
    return (char *)v2;
  }
  uint64_t v3 = *(char **)&result[OBJC_IVAR___MTContentKeyResponse_request];
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)&v3[OBJC_IVAR___MTContentKeyRequest_adamId];
  unint64_t v5 = *(void *)&v3[OBJC_IVAR___MTContentKeyRequest_adamId + 8];
  uint64_t v6 = HIBYTE(v5) & 0xF;
  uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!((v5 & 0x2000000000000000) != 0 ? HIBYTE(v5) & 0xF : v4 & 0xFFFFFFFFFFFFLL)) {
    return 0;
  }
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v35 = v3;
    id v36 = v2;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACCCEEC8(v4, v5, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1ACCCF4C4);
    char v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      goto LABEL_47;
    }
LABEL_55:

    return 0;
  }
  if ((v5 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0) {
      char v9 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      char v9 = (unsigned __int8 *)sub_1ACE77388();
    }
    uint64_t v10 = (uint64_t)sub_1ACCCF4C4(v9, v7, 10);
    LOBYTE(v4) = v11 & 1;
LABEL_46:
    uint64_t v21 = v3;
    id v22 = v2;
    if ((v4 & 1) == 0)
    {
LABEL_47:
      uint64_t v23 = swift_allocObject();
      *(unsigned char *)(v23 + 16) = 1;
      id v24 = objc_msgSend(self, sel_sharedInstance);
      id v25 = objc_msgSend(v24, sel_mainOrPrivateContext);

      unsigned int v26 = (void *)swift_allocObject();
      void v26[2] = v1;
      v26[3] = v10;
      v26[4] = v25;
      void v26[5] = v2;
      v26[6] = v23;
      v26[7] = v3;
      uint64_t v43 = sub_1ACCCF028;
      uint64_t v44 = v26;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v40 = 1107296256;
      uint64_t v41 = sub_1ACA6DA9C;
      uint64_t v42 = &block_descriptor_63;
      int v27 = _Block_copy(&aBlock);
      uint64_t v28 = v3;
      id v29 = v2;
      id v30 = v1;
      id v31 = v25;
      swift_retain();
      swift_release();
      objc_msgSend(v31, sel_performBlockAndWaitWithSave_, v27);

      _Block_release(v27);
      swift_beginAccess();
      objc_super v2 = (void *)*(unsigned __int8 *)(v23 + 16);
      swift_release();
      return (char *)v2;
    }
    goto LABEL_55;
  }
  uint64_t aBlock = *(void *)&v3[OBJC_IVAR___MTContentKeyRequest_adamId];
  uint64_t v40 = v5 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v6) {
      goto LABEL_60;
    }
    if (v6 == 1 || (BYTE1(v4) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v10 = (BYTE1(v4) - 48);
    if (v6 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v10 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
      uint64_t v12 = v6 - 3;
      if (v12)
      {
        uint64_t v13 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            goto LABEL_33;
          }
          uint64_t v15 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            goto LABEL_33;
          }
          uint64_t v10 = v15 + v14;
          if (__OFADD__(v15, v14)) {
            goto LABEL_33;
          }
          LOBYTE(v4) = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    LOBYTE(v4) = 0;
    goto LABEL_46;
  }
  if (v4 != 45)
  {
    if (!v6 || (v4 - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v10 = (v4 - 48);
    if (v6 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v10 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
      uint64_t v16 = v6 - 2;
      if (v16)
      {
        uint64_t v17 = (unsigned __int8 *)&aBlock + 2;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            goto LABEL_33;
          }
          uint64_t v19 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            goto LABEL_33;
          }
          uint64_t v10 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            goto LABEL_33;
          }
          LOBYTE(v4) = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_46;
          }
        }
      }
    }
    goto LABEL_45;
  }
  if (v6)
  {
    if (v6 != 1 && (BYTE1(v4) - 48) <= 9u)
    {
      if (v6 == 2)
      {
        LOBYTE(v4) = 0;
        uint64_t v10 = -(uint64_t)(BYTE1(v4) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(v4) - 48) <= 9u)
      {
        uint64_t v10 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
        uint64_t v20 = v6 - 3;
        if (!v20) {
          goto LABEL_45;
        }
        uint64_t v32 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          unsigned int v33 = *v32 - 48;
          if (v33 > 9) {
            break;
          }
          uint64_t v34 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            break;
          }
          uint64_t v10 = v34 - v33;
          if (__OFSUB__(v34, v33)) {
            break;
          }
          LOBYTE(v4) = 0;
          ++v32;
          if (!--v20) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    uint64_t v10 = 0;
    LOBYTE(v4) = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_1ACCCBDA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v12 - 8);
  unsigned int v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE750A8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unsigned int v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v49 = a2;
  sub_1ACCCFC2C(a2, a3);
  if (!v22)
  {
    id v23 = objc_msgSend(self, sel_insertNewObjectForEntityForName_inManagedObjectContext_, @"MTOfflineKeyData", a3);
    self;
    uint64_t v22 = swift_dynamicCastObjCClassUnconditional();
  }
  id v24 = (void *)v22;
  sub_1ACA72A5C(a4 + OBJC_IVAR___MTContentKeyResponse_renewalDate, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1ACA3E034((uint64_t)v14);
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    id v25 = (unsigned char *)(v46 + 16);
    uint64_t v26 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    uint64_t v27 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v11, v26, v9);
    uint64_t v28 = sub_1ACE75498();
    os_log_type_t v29 = sub_1ACE76BE8();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v30 = 134217984;
      uint64_t v50 = v49;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v28, v29, "Failed to save offline key data! Renewal date is required %lld", v30, 0xCu);
      MEMORY[0x1AD11B340](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
    uint64_t result = swift_beginAccess();
    *id v25 = 0;
  }
  else
  {
    uint64_t v32 = v21;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    uint64_t v33 = v47;
    uint64_t v34 = (void *)sub_1ACE76178();
    objc_msgSend(v24, sel_setKeyUri_, v34);

    objc_msgSend(v24, sel_setStoreTrackId_, v49);
    uint64_t v35 = (uint64_t *)(a4 + OBJC_IVAR___MTContentKeyResponse_keyData);
    swift_beginAccess();
    id v36 = 0;
    unint64_t v37 = v35[1];
    if (v37 >> 60 != 15)
    {
      uint64_t v38 = *v35;
      sub_1ACA3985C(v38, v37);
      id v36 = (void *)sub_1ACE74F68();
      sub_1ACAB2EF0(v38, v37);
    }
    objc_msgSend(v24, sel_setData_, v36, v46);

    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v33 + OBJC_IVAR___MTContentKeyRequest_requestDate, v15);
    sub_1ACE74FB8();
    double v40 = v39;
    uint64_t v41 = *(void (**)(char *, uint64_t))(v16 + 8);
    v41(v18, v15);
    objc_msgSend(v24, sel_setLastRenewedDate_, v40);
    sub_1ACE74FB8();
    objc_msgSend(v24, sel_setExpirationDate_);
    id v42 = objc_msgSend(self, sel_ams_sharedAccountStore);
    id v43 = objc_msgSend(v42, sel_ams_activeiTunesAccount);

    if (v43)
    {
      id v44 = objc_msgSend(v43, sel_ams_DSID);

      if (v44)
      {
        id v45 = objc_msgSend(v44, sel_longLongValue);

        objc_msgSend(v24, sel_setSecureInvalidationDsid_, v45);
      }
    }

    return ((uint64_t (*)(char *, uint64_t))v41)(v32, v15);
  }
  return result;
}

void sub_1ACCCC3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v37 = a2;
  uint64_t v38 = a7;
  unint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v35 = a3;
  uint64_t v36 = a1;
  uint64_t v40 = a10;
  uint64_t v41 = a8;
  uint64_t v39 = a9;
  uint64_t v13 = sub_1ACE750A8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(self, sel_sharedInstance);
  id v18 = objc_msgSend(v17, sel_privateQueueContext);
  id v32 = v18;

  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a6, v13);
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v20 = (v15 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v35;
  *((void *)v21 + 2) = v10;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = v18;
  uint64_t v23 = v34;
  *((void *)v21 + 5) = v34;
  *((void *)v21 + 6) = a5;
  uint64_t v24 = v37;
  *((void *)v21 + 7) = v36;
  *((void *)v21 + 8) = v24;
  *((void *)v21 + 9) = v38;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v19], v16, v13);
  id v25 = v41;
  *(void *)&v21[v20] = v41;
  uint64_t v26 = &v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v27 = v40;
  *(void *)uint64_t v26 = v39;
  *((void *)v26 + 1) = v27;
  aBlock[4] = sub_1ACCCF14C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_9_2;
  uint64_t v28 = _Block_copy(aBlock);
  id v29 = v10;
  id v30 = v32;
  sub_1ACA3985C(v23, v33);
  swift_bridgeObjectRetain();
  id v31 = v25;
  swift_retain();
  swift_release();
  objc_msgSend(v30, sel_performBlock_, v28);
  _Block_release(v28);
}

uint64_t sub_1ACCCC658(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v32 = a12;
  uint64_t v30 = a8;
  uint64_t v31 = a11;
  uint64_t v34 = a10;
  v29[1] = a7;
  _OWORD v29[2] = a9;
  uint64_t v14 = sub_1ACE75DC8();
  uint64_t v35 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1ACE75E48();
  uint64_t v17 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACCCFC2C(a2, a3);
  if (!v20)
  {
    id v21 = objc_msgSend(self, sel_insertNewObjectForEntityForName_inManagedObjectContext_, @"MTOfflineKeyData", a3);
    self;
    uint64_t v20 = swift_dynamicCastObjCClassUnconditional();
  }
  uint64_t v22 = (void *)v20;
  uint64_t v23 = (void *)sub_1ACE74F68();
  objc_msgSend(v22, sel_setData_, v23);

  uint64_t v24 = (void *)sub_1ACE76178();
  objc_msgSend(v22, sel_setKeyUri_, v24);

  objc_msgSend(v22, sel_setStoreTrackId_, a2);
  objc_msgSend(v22, sel_setSecureInvalidationDsid_, v30);
  sub_1ACE74FB8();
  objc_msgSend(v22, sel_setExpirationDate_);
  LOBYTE(v24) = objc_msgSend(a3, sel_saveInCurrentBlock);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v32;
  *(void *)(v25 + 16) = v31;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = (_BYTE)v24;
  aBlock[4] = sub_1ACCD03B4;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  void aBlock[3] = &block_descriptor_77_1;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1ACA55D24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v19, v16, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v33);
  return swift_release();
}

void sub_1ACCCCBD4(uint64_t a1)
{
  if (a1)
  {
    objc_super v2 = *(char **)(a1 + OBJC_IVAR___MTContentKeyResponse_request);
    if (v2)
    {
      uint64_t v4 = *(void *)&v2[OBJC_IVAR___MTContentKeyRequest_adamId];
      unint64_t v3 = *(void *)&v2[OBJC_IVAR___MTContentKeyRequest_adamId + 8];
      uint64_t v5 = HIBYTE(v3) & 0xF;
      uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
      if ((v3 & 0x2000000000000000) != 0 ? HIBYTE(v3) & 0xF : v4 & 0xFFFFFFFFFFFFLL)
      {
        if ((v3 & 0x1000000000000000) != 0)
        {
          uint64_t v30 = v2;
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_1ACCCEEC8(v4, v3, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1ACCCF4C4);
          char v32 = v31;
          swift_bridgeObjectRelease();
          if (v32) {
            goto LABEL_48;
          }
          goto LABEL_47;
        }
        if ((v3 & 0x2000000000000000) == 0)
        {
          if ((v4 & 0x1000000000000000) != 0) {
            char v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            char v8 = (unsigned __int8 *)sub_1ACE77388();
          }
          uint64_t v9 = (uint64_t)sub_1ACCCF4C4(v8, v6, 10);
          LOBYTE(v4) = v10 & 1;
LABEL_46:
          uint64_t v20 = v2;
          if (v4)
          {
LABEL_48:

            return;
          }
LABEL_47:
          id v21 = objc_msgSend(self, sel_sharedInstance);
          id v22 = objc_msgSend(v21, sel_mainOrPrivateContext);

          uint64_t v23 = (void *)swift_allocObject();
          v23[2] = v1;
          void v23[3] = v9;
          v23[4] = v22;
          uint64_t v37 = sub_1ACCCF23C;
          uint64_t v38 = v23;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v34 = 1107296256;
          uint64_t v35 = sub_1ACA6DA9C;
          uint64_t v36 = &block_descriptor_15_3;
          uint64_t v24 = _Block_copy(&aBlock);
          id v25 = v1;
          uint64_t v26 = (char *)v22;
          swift_release();
          objc_msgSend(v26, sel_performBlockAndWaitWithSave_, v24);
          _Block_release(v24);

          objc_super v2 = v26;
          goto LABEL_48;
        }
        uint64_t aBlock = *(void *)&v2[OBJC_IVAR___MTContentKeyRequest_adamId];
        uint64_t v34 = v3 & 0xFFFFFFFFFFFFFFLL;
        if (v4 == 43)
        {
          if (!v5) {
            goto LABEL_60;
          }
          if (v5 == 1 || (BYTE1(v4) - 48) > 9u) {
            goto LABEL_33;
          }
          uint64_t v9 = (BYTE1(v4) - 48);
          if (v5 != 2)
          {
            if ((BYTE2(v4) - 48) > 9u) {
              goto LABEL_33;
            }
            uint64_t v9 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            uint64_t v11 = v5 - 3;
            if (v11)
            {
              uint64_t v12 = (unsigned __int8 *)&aBlock + 3;
              while (1)
              {
                unsigned int v13 = *v12 - 48;
                if (v13 > 9) {
                  goto LABEL_33;
                }
                uint64_t v14 = 10 * v9;
                if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
                  goto LABEL_33;
                }
                uint64_t v9 = v14 + v13;
                if (__OFADD__(v14, v13)) {
                  goto LABEL_33;
                }
                LOBYTE(v4) = 0;
                ++v12;
                if (!--v11) {
                  goto LABEL_46;
                }
              }
            }
          }
        }
        else
        {
          if (v4 == 45)
          {
            if (v5)
            {
              if (v5 != 1 && (BYTE1(v4) - 48) <= 9u)
              {
                if (v5 == 2)
                {
                  LOBYTE(v4) = 0;
                  uint64_t v9 = -(uint64_t)(BYTE1(v4) - 48);
                  goto LABEL_46;
                }
                if ((BYTE2(v4) - 48) <= 9u)
                {
                  uint64_t v9 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
                  uint64_t v19 = v5 - 3;
                  if (!v19) {
                    goto LABEL_45;
                  }
                  uint64_t v27 = (unsigned __int8 *)&aBlock + 3;
                  while (1)
                  {
                    unsigned int v28 = *v27 - 48;
                    if (v28 > 9) {
                      break;
                    }
                    uint64_t v29 = 10 * v9;
                    if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
                      break;
                    }
                    uint64_t v9 = v29 - v28;
                    if (__OFSUB__(v29, v28)) {
                      break;
                    }
                    LOBYTE(v4) = 0;
                    ++v27;
                    if (!--v19) {
                      goto LABEL_46;
                    }
                  }
                }
              }
LABEL_33:
              uint64_t v9 = 0;
              LOBYTE(v4) = 1;
              goto LABEL_46;
            }
            __break(1u);
LABEL_60:
            __break(1u);
            return;
          }
          if (!v5 || (v4 - 48) > 9u) {
            goto LABEL_33;
          }
          uint64_t v9 = (v4 - 48);
          if (v5 != 1)
          {
            if ((BYTE1(v4) - 48) > 9u) {
              goto LABEL_33;
            }
            uint64_t v9 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
            uint64_t v15 = v5 - 2;
            if (v15)
            {
              uint64_t v16 = (unsigned __int8 *)&aBlock + 2;
              while (1)
              {
                unsigned int v17 = *v16 - 48;
                if (v17 > 9) {
                  goto LABEL_33;
                }
                uint64_t v18 = 10 * v9;
                if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
                  goto LABEL_33;
                }
                uint64_t v9 = v18 + v17;
                if (__OFADD__(v18, v17)) {
                  goto LABEL_33;
                }
                LOBYTE(v4) = 0;
                ++v16;
                if (!--v15) {
                  goto LABEL_46;
                }
              }
            }
          }
        }
LABEL_45:
        LOBYTE(v4) = 0;
        goto LABEL_46;
      }
    }
  }
}

void sub_1ACCCD058(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_sharedInstance);
  id v4 = objc_msgSend(v3, sel_privateQueueContext);

  uint64_t v5 = (void *)swift_allocObject();
  id v5[2] = v1;
  v5[3] = a1;
  void v5[4] = v4;
  v9[4] = sub_1ACCD03FC;
  v9[5] = v5;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1ACA6DA9C;
  v9[3] = &block_descriptor_22_1;
  uint64_t v6 = _Block_copy(v9);
  id v7 = v1;
  id v8 = v4;
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWaitWithSave_, v6);
  _Block_release(v6);
}

unint64_t sub_1ACCCD1D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75E48();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE761B8();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v12 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  sub_1ACA50D4C(0, &qword_1EB772598);
  unint64_t result = sub_1ACE76EE8();
  unint64_t v15 = result;
  uint64_t v27 = v10;
  uint64_t v28 = v7;
  id v30 = v13;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1ACE77508();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = v4;
  if (!v16)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    unsigned __int8 v21 = objc_msgSend(a1, sel_saveInCurrentBlock);
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
    id v22 = (void *)sub_1ACE76CF8();
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v31;
    *(void *)(v23 + 16) = v32;
    *(void *)(v23 + 24) = v24;
    *(unsigned char *)(v23 + 32) = v21;
    aBlock[4] = sub_1ACCD03B4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    void aBlock[3] = &block_descriptor_71_0;
    id v25 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v26 = v27;
    sub_1ACE75E08();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1ACA55D24();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v26, v6, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v26, v28);
  }
  if (v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x1AD119490](i, v15);
      }
      else {
        id v19 = *(id *)(v15 + 8 * i + 32);
      }
      uint64_t v20 = v19;
      objc_msgSend(a1, sel_deleteObject_, v19, v27);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1ACCCD824(NSObject *a1)
{
  uint64_t v3 = sub_1ACE754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v10 = *(uint64_t *)((char *)&a1->isa + OBJC_IVAR___MTContentKeyRequest_adamId);
    unint64_t v11 = *(unint64_t *)((char *)&a1[1].isa + OBJC_IVAR___MTContentKeyRequest_adamId);
    uint64_t v12 = HIBYTE(v11) & 0xF;
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
    if ((v11 & 0x2000000000000000) != 0 ? HIBYTE(v11) & 0xF : v10 & 0xFFFFFFFFFFFFLL)
    {
      if ((v11 & 0x1000000000000000) != 0)
      {
        uint64_t v55 = a1;
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1ACCCEEC8(v10, v11, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1ACCCF4C4);
        char v57 = v56;
        swift_bridgeObjectRelease();
        if ((v57 & 1) == 0) {
          goto LABEL_46;
        }
LABEL_63:

        return;
      }
      if ((v11 & 0x2000000000000000) == 0)
      {
        if ((v10 & 0x1000000000000000) == 0) {
          goto LABEL_66;
        }
        for (uint64_t i = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32); ; uint64_t i = (unsigned __int8 *)sub_1ACE77388())
        {
          uint64_t v16 = (uint64_t)sub_1ACCCF4C4(i, v13, 10);
          LOBYTE(v10) = v17 & 1;
LABEL_45:
          uint64_t v27 = a1;
          if (v10) {
            break;
          }
LABEL_46:
          uint64_t v62 = v4;
          long long v60 = xmmword_1ACE91EF0;
          long long v73 = xmmword_1ACE91EF0;
          uint64_t v71 = 0;
          char v72 = 1;
          id v28 = objc_msgSend(self, sel_sharedInstance);
          id v29 = objc_msgSend(v28, sel_mainOrPrivateContext);

          id v30 = (void *)swift_allocObject();
          v30[2] = isEscapingClosureAtFileLocation;
          v30[3] = v16;
          Class v61 = (Class)v16;
          v30[4] = v29;
          v30[5] = &v73;
          v30[6] = &v71;
          uint64_t v4 = swift_allocObject();
          *(void *)(v4 + 16) = sub_1ACCD0004;
          *(void *)(v4 + 24) = v30;
          unint64_t v69 = sub_1ACADC690;
          uint64_t v70 = v4;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v66 = 1107296256;
          uint64_t v67 = sub_1ACC525DC;
          uint64_t v68 = &block_descriptor_31;
          uint64_t v31 = _Block_copy(&aBlock);
          id v32 = (id)isEscapingClosureAtFileLocation;
          uint64_t v33 = v29;
          swift_retain();
          swift_release();
          [v33 performBlockAndWait:v31];
          _Block_release(v31);
          uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            unint64_t v34 = *((void *)&v73 + 1);
            if (*((void *)&v73 + 1) >> 60 == 15 || (v72 & 1) != 0)
            {
              if (qword_1EB768FD8 != -1) {
                swift_once();
              }
              uint64_t v35 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB768FB8);
              swift_beginAccess();
              uint64_t v36 = v62;
              (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v6, v35, v3);
              uint64_t v37 = sub_1ACE75498();
              os_log_type_t v38 = sub_1ACE76C08();
              if (os_log_type_enabled(v37, v38))
              {
                uint64_t v39 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v39 = 134217984;
                Class v64 = v61;
                sub_1ACE76FF8();
                _os_log_impl(&dword_1AC9D5000, v37, v38, "Offline key data not present for episode %lld", v39, 0xCu);
                MEMORY[0x1AD11B340](v39, -1, -1);
                uint64_t v40 = v33;
                uint64_t v33 = a1;
              }
              else
              {
                uint64_t v40 = v37;
                uint64_t v37 = a1;
              }

              (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v3);
              sub_1ACAB2EF0(v73, *((unint64_t *)&v73 + 1));
              swift_release();
            }
            else
            {
              uint64_t v41 = v73;
              uint64_t v62 = v73;
              uint64_t v59 = a1;
              sub_1ACA39848(v41, v34);
              sub_1ACE74FA8();
              uint64_t v42 = sub_1ACE750A8();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v9, 0, 1, v42);
              Class v61 = (Class)type metadata accessor for ContentKeyResponse(0);
              id v43 = (char *)objc_allocWithZone(v61);
              id v44 = (void **)&v43[OBJC_IVAR___MTContentKeyResponse_error];
              *(void *)&v43[OBJC_IVAR___MTContentKeyResponse_error] = 0;
              id v45 = (uint64_t *)&v43[OBJC_IVAR___MTContentKeyResponse_keyData];
              *(_OWORD *)&v43[OBJC_IVAR___MTContentKeyResponse_keyData] = v60;
              *(void *)&v43[OBJC_IVAR___MTContentKeyResponse_request] = a1;
              swift_beginAccess();
              uint64_t v47 = *v45;
              unint64_t v46 = v45[1];
              uint64_t v48 = v62;
              *id v45 = v62;
              v45[1] = v34;
              *(void *)&long long v60 = v59;
              sub_1ACA39848(v48, v34);
              uint64_t v49 = v43;
              sub_1ACAB2EF0(v47, v46);
              sub_1ACA72A5C((uint64_t)v9, (uint64_t)&v49[OBJC_IVAR___MTContentKeyResponse_renewalDate]);
              swift_beginAccess();
              uint64_t v50 = *v44;
              void *v44 = 0;

              v63.receiver = v49;
              v63.super_class = v61;
              [&v63 init];
              sub_1ACA3E034((uint64_t)v9);
              uint64_t v51 = (void *)v60;

              sub_1ACAB2EF0(v62, v34);
              sub_1ACAB2EF0(v73, *((unint64_t *)&v73 + 1));
              swift_release();
            }
            return;
          }
          __break(1u);
LABEL_66:
          ;
        }
        goto LABEL_63;
      }
      uint64_t aBlock = *(uint64_t *)((char *)&a1->isa + OBJC_IVAR___MTContentKeyRequest_adamId);
      uint64_t v66 = v11 & 0xFFFFFFFFFFFFFFLL;
      if (v10 == 43)
      {
        if (!v12) {
          goto LABEL_68;
        }
        if (v12 == 1 || (BYTE1(v10) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v16 = (BYTE1(v10) - 48);
        if (v12 != 2)
        {
          if ((BYTE2(v10) - 48) > 9u) {
            goto LABEL_32;
          }
          uint64_t v16 = 10 * (BYTE1(v10) - 48) + (BYTE2(v10) - 48);
          uint64_t v18 = v12 - 3;
          if (v18)
          {
            id v19 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              unsigned int v20 = *v19 - 48;
              if (v20 > 9) {
                goto LABEL_32;
              }
              uint64_t v21 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                goto LABEL_32;
              }
              uint64_t v16 = v21 + v20;
              if (__OFADD__(v21, v20)) {
                goto LABEL_32;
              }
              LOBYTE(v10) = 0;
              ++v19;
              if (!--v18) {
                goto LABEL_45;
              }
            }
          }
        }
      }
      else
      {
        if (v10 == 45)
        {
          if (v12)
          {
            if (v12 != 1 && (BYTE1(v10) - 48) <= 9u)
            {
              if (v12 == 2)
              {
                LOBYTE(v10) = 0;
                uint64_t v16 = -(uint64_t)(BYTE1(v10) - 48);
                goto LABEL_45;
              }
              if ((BYTE2(v10) - 48) <= 9u)
              {
                uint64_t v16 = -10 * (BYTE1(v10) - 48) - (BYTE2(v10) - 48);
                uint64_t v26 = v12 - 3;
                if (!v26) {
                  goto LABEL_44;
                }
                uint64_t v52 = (unsigned __int8 *)&aBlock + 3;
                while (1)
                {
                  unsigned int v53 = *v52 - 48;
                  if (v53 > 9) {
                    break;
                  }
                  uint64_t v54 = 10 * v16;
                  if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                    break;
                  }
                  uint64_t v16 = v54 - v53;
                  if (__OFSUB__(v54, v53)) {
                    break;
                  }
                  LOBYTE(v10) = 0;
                  ++v52;
                  if (!--v26) {
                    goto LABEL_45;
                  }
                }
              }
            }
LABEL_32:
            uint64_t v16 = 0;
            LOBYTE(v10) = 1;
            goto LABEL_45;
          }
          __break(1u);
LABEL_68:
          __break(1u);
          return;
        }
        if (!v12 || (v10 - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v16 = (v10 - 48);
        if (v12 != 1)
        {
          if ((BYTE1(v10) - 48) > 9u) {
            goto LABEL_32;
          }
          uint64_t v16 = 10 * (v10 - 48) + (BYTE1(v10) - 48);
          uint64_t v22 = v12 - 2;
          if (v22)
          {
            uint64_t v23 = (unsigned __int8 *)&aBlock + 2;
            while (1)
            {
              unsigned int v24 = *v23 - 48;
              if (v24 > 9) {
                goto LABEL_32;
              }
              uint64_t v25 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                goto LABEL_32;
              }
              uint64_t v16 = v25 + v24;
              if (__OFADD__(v25, v24)) {
                goto LABEL_32;
              }
              LOBYTE(v10) = 0;
              ++v23;
              if (!--v22) {
                goto LABEL_45;
              }
            }
          }
        }
      }
LABEL_44:
      LOBYTE(v10) = 0;
      goto LABEL_45;
    }
  }
}

void sub_1ACCCE0BC(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = sub_1ACE754C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACCCFC2C(a2, a3);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = objc_msgSend(v13, sel_data);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_1ACE74F88();
      unint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 0;
      unint64_t v19 = 0xF000000000000000;
    }
    uint64_t v24 = *a4;
    unint64_t v25 = a4[1];
    *a4 = v17;
    a4[1] = v19;
    sub_1ACAB2EF0(v24, v25);
    objc_msgSend(v14, sel_expirationDate);
    uint64_t v27 = v26;

    *(void *)a5 = v27;
    *(unsigned char *)(a5 + 8) = 0;
  }
  else
  {
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
    uint64_t v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134217984;
      uint64_t v28 = a2;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v21, v22, "Failed to retrieve offline key data, no key data found for storeTrackId %lld", v23, 0xCu);
      MEMORY[0x1AD11B340](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1ACCCE388(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel_sharedInstance);
  id v4 = objc_msgSend(v3, sel_mainOrPrivateContext);

  unsigned __int8 v13 = 0;
  uint64_t v5 = (void *)swift_allocObject();
  id v5[2] = &v13;
  v5[3] = v1;
  void v5[4] = a1;
  v5[5] = v4;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1ACCD0064;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  void aBlock[3] = &block_descriptor_41_2;
  uint64_t v7 = _Block_copy(aBlock);
  id v8 = v1;
  id v9 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

void sub_1ACCCE578(uint64_t a1, char a2)
{
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_mainOrPrivateContext);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = v6;
  *(unsigned char *)(v7 + 40) = a2;
  v11[4] = sub_1ACCD00FC;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1ACA6DA9C;
  v11[3] = &block_descriptor_47;
  id v8 = _Block_copy(v11);
  id v9 = v2;
  id v10 = v6;
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWaitWithSave_, v8);
  _Block_release(v8);
}

void sub_1ACCCE6B0(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACCCFC2C(a2, a3);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v12, sel_setPendingDeletion_, a4 & 1);
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76C08();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      id v21 = v12;
      uint64_t v22 = a2;
      uint64_t v18 = v17;
      uint64_t v23 = v17;
      *(_DWORD *)uint64_t v16 = 134218242;
      sub_1ACE76FF8();
      *(_WORD *)(v16 + 12) = 2080;
      if (a4) {
        uint64_t v19 = 1702195828;
      }
      else {
        uint64_t v19 = 0x65736C6166;
      }
      if (a4) {
        unint64_t v20 = 0xE400000000000000;
      }
      else {
        unint64_t v20 = 0xE500000000000000;
      }
      uint64_t v22 = sub_1ACA3189C(v19, v20, &v23);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v14, v15, "Key data for storeTrackId %lld set to pendingDeletion %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      MEMORY[0x1AD11B340](v16, -1, -1);

      id v12 = v21;
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1ACCCE9CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - v10;
  sub_1ACCCFC2C(a2, a3);
  if (v12)
  {
    uint64_t v13 = v12;
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
    os_log_type_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76C08();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134217984;
      uint64_t v22 = a2;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v15, v16, "Removed offline key data for storeTrackId %lld", v17, 0xCu);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(a3, sel_deleteObject_, v13);
  }
  else
  {
    if (qword_1EB768FD8 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB768FB8);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v18, v5);
    uint64_t v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76C08();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v21 = 134217984;
      uint64_t v22 = a2;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v19, v20, "Failed to remove offline key data, no key data found for %lld", v21, 0xCu);
      MEMORY[0x1AD11B340](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

id CoreDataKeyRequestStorage.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CoreDataKeyRequestStorage.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataKeyRequestStorage();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CoreDataKeyRequestStorage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataKeyRequestStorage();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_1ACCCEE00(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772730);
  id v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unsigned __int8 *sub_1ACCCEE68(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1ACCCF248(a1, a2, a3);
}

unsigned __int8 *sub_1ACCCEE80(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACCCF4C4(a1, a2, a3);
}

uint64_t sub_1ACCCEE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACCCEEC8(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1ACCCF248);
}

uint64_t sub_1ACCCEEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ACCCEEC8(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1ACCCF4C4);
}

uint64_t sub_1ACCCEEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACE76378();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1ACCCF740();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_1ACE77388();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1ACCCEFC0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCCEFD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCCF028()
{
  return sub_1ACCCBDA0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1ACCCF038()
{
  uint64_t v1 = sub_1ACE750A8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  sub_1ACA50850(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCCF14C()
{
  uint64_t v1 = *(void *)(sub_1ACE750A8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ACCCC658(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1ACCCF1FC()
{
  return swift_deallocObject();
}

void sub_1ACCCF23C()
{
  sub_1ACCCE9CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

unsigned __int8 *sub_1ACCCF248(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  os_log_type_t v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1ACCCF4C4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1ACCCF740()
{
  unint64_t v0 = sub_1ACE76388();
  uint64_t v4 = sub_1ACCCF7C0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1ACCCF7C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1ACCCF918(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1ACCCEE00(v9, 0);
      unint64_t v12 = sub_1ACCCFA18((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1ACE77388();
LABEL_4:
        JUMPOUT(0x1AD118420);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1AD118420](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AD118420]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1ACCCF918(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1ACD594BC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1ACD594BC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1ACCCFA18(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1ACD594BC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1ACE76328();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1ACE77388();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1ACD594BC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1ACE762F8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_1ACCCFC2C(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, a1);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84820;
  uint64_t v5 = sub_1ACE761B8();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1ACADC3A8();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  *(void *)(v4 + 104) = sub_1ACBDF258();
  *(void *)(v4 + 72) = v3;
  uint64_t v8 = @"MTOfflineKeyData";
  id v9 = v3;
  unint64_t v10 = (void *)sub_1ACE76B88();
  uint64_t v11 = (void *)sub_1ACE76558();
  id v12 = objc_msgSend(a2, sel_objectsInEntity_predicate_sortDescriptors_, v8, v10, v11);

  if (!v12) {
    goto LABEL_11;
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v13 = sub_1ACE76578();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    return;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v14 = (id)MEMORY[0x1AD119490](0, v13);
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v14 = *(id *)(v13 + 32);
  }
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  self;
  if (!swift_dynamicCastObjCClass()) {
}
  }

void sub_1ACCCFE94(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_sharedInstance);
  id v5 = objc_msgSend(v4, sel_privateQueueContext);

  uint64_t v6 = (void *)swift_allocObject();
  id v6[2] = v5;
  void v6[3] = a1;
  v6[4] = a2;
  v9[4] = sub_1ACCD0370;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1ACA6DA9C;
  v9[3] = &block_descriptor_65;
  uint64_t v7 = _Block_copy(v9);
  id v8 = v5;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v7);
  _Block_release(v7);
}

uint64_t sub_1ACCCFFC4()
{
  return swift_deallocObject();
}

void sub_1ACCD0004()
{
  sub_1ACCCE0BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t **)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1ACCD0014()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCD0024()
{
  return swift_deallocObject();
}

void sub_1ACCD0064()
{
  unint64_t v1 = *(BOOL **)(v0 + 16);
  sub_1ACCCFC2C(*(void *)(v0 + 32), *(void **)(v0 + 40));
  id v3 = v2;
  if (v2) {

  }
  *unint64_t v1 = v3 != 0;
}

uint64_t sub_1ACCD00AC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCD00BC()
{
  return swift_deallocObject();
}

void sub_1ACCD00FC()
{
  sub_1ACCCE6B0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t type metadata accessor for CoreDataKeyRequestStorage()
{
  return self;
}

uint64_t method lookup function for CoreDataKeyRequestStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreDataKeyRequestStorage);
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.saveKeyData(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.saveKeyData(keyIdentifier:storeTrackID:keyData:renewalDate:dsid:responseQueue:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.removeKeyData(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.removeAllKeyData(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.retrieveKeyData(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.keyExistsInStorage(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CoreDataKeyRequestStorage.markOfflineKey(for:pendingDeletion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t sub_1ACCD02F0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACCD0328(char a1)
{
  return sub_1ACDD96A4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACCD0330()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ACCD0370()
{
  return sub_1ACCCD1D8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACCD037C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Publisher.nullifyFirstIf<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a1;
  uint64_t v33 = a3;
  uint64_t v34 = a5;
  uint64_t v41 = a2;
  uint64_t v6 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  id v9 = (void *)((char *)v32 - v8);
  uint64_t v10 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)v32 - v12;
  uint64_t v14 = sub_1ACE75688();
  uint64_t v39 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v32 - v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  v32[1] = v6;
  uint64_t v17 = sub_1ACE75678();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v36 = v17;
  uint64_t v37 = v18;
  __n128 v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v32 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(a4 - 8) + 56))(v13, 1, 1, a4, v19);
  uint64_t v22 = (char *)v9 + *(int *)(TupleTypeMetadata2 + 48);
  *id v9 = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v22, v13, v6);
  unint64_t v23 = (void *)swift_allocObject();
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  v23[2] = v33;
  void v23[3] = a4;
  v23[4] = v24;
  uint64_t v26 = v24;
  sub_1ACE75B78();
  swift_release();
  (*(void (**)(void *, uint64_t))(v38 + 8))(v9, TupleTypeMetadata2);
  unint64_t v27 = (void *)swift_allocObject();
  os_log_t v27[2] = v25;
  v27[3] = a4;
  uint64_t v28 = v40;
  _OWORD v27[4] = v26;
  v27[5] = v28;
  v27[6] = v41;
  swift_retain();
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v14);
  uint64_t v29 = v36;
  swift_getWitnessTable();
  uint64_t v30 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v29);
  return v30;
}

uint64_t sub_1ACCD0834@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1ACE76FD8();
  BOOL v7 = __OFADD__(*a1, 1);
  uint64_t v8 = *a1 + 1;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = result;
    uint64_t v10 = (char *)a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    *a3 = v8;
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    return v11(v10, a2, v9);
  }
  return result;
}

uint64_t sub_1ACCD08E8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCD08F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1ACCD0834(a1, a2, a3);
}

uint64_t sub_1ACCD0904@<X0>(char *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v30[1] = a3;
  unint64_t v31 = a2;
  uint64_t v34 = a5;
  uint64_t v32 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  v30[0] = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v7;
  uint64_t v8 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v30 - v16;
  uint64_t v19 = *(int *)(v18 + 56);
  uint64_t v21 = v20 + v19;
  uint64_t v22 = *(void *)a1;
  unint64_t v23 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v10 + 16);
  v23(v20 + v19, &a1[v19], v8, v15);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  v24(v17, v21, v8);
  if (v22 == 1)
  {
    ((void (*)(char *, char *, uint64_t))v23)(v13, v17, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, v33) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
    }
    else
    {
      uint64_t v26 = v32;
      uint64_t v25 = v33;
      uint64_t v27 = v30[0];
      (*(void (**)(void, char *, uint64_t))(v32 + 32))(v30[0], v13, v33);
      char v28 = v31(v27);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v8);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v34, 1, 1, v33);
      }
    }
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(v34, v17, v8);
}

uint64_t sub_1ACCD0C14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCD0C4C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCD0904(a1, *(uint64_t (**)(uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 24), a2);
}

char *Array<A>.firstEligibleSmartPlayEpisode()(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1ACE77508())
  {
    if ((a1 & 0xC000000000000001) == 0)
    {
      uint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_26;
        }
        uint64_t v6 = *(char **)(a1 + 8 * v9 + 32);
        if (!*(void *)(*(void *)&v6[OBJC_IVAR___MTServerPodcastEpisode_attributes] + 168)) {
          break;
        }
        uint64_t v11 = v6;
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1ACE775B8();
        swift_bridgeObjectRelease();
        if (v12 != 1 && v12 != 2) {
          goto LABEL_23;
        }
        char v13 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        if (v13)
        {
          swift_bridgeObjectRelease();
          return v11;
        }

        ++v9;
        if (v10 == v2)
        {
LABEL_19:
          uint64_t result = (char *)swift_bridgeObjectRelease();
          if ((a1 & 0xC000000000000001) == 0)
          {
            if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              return (char *)*(id *)(a1 + 32);
            }
            __break(1u);
            return result;
          }
          swift_bridgeObjectRetain();
          uint64_t v6 = (char *)MEMORY[0x1AD119490](0, a1);
LABEL_30:
          swift_bridgeObjectRelease();
          return v6;
        }
      }
      __n128 v15 = v6;
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = MEMORY[0x1AD119490](v3, a1);
      uint64_t v5 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        break;
      }
      uint64_t v6 = (char *)v4;
      if (!*(void *)(*(void *)(v4 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 168)) {
        goto LABEL_23;
      }
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1ACE775B8();
      swift_bridgeObjectRelease();
      if (v7 != 1 && v7 != 2) {
        goto LABEL_23;
      }
      char v8 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_30;
      }
      swift_unknownObjectRelease();
      ++v3;
      if (v5 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Bool __swiftcall ServerPodcastEpisode.isEligibleSmartPlayEpisode()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = *(void **)(v1 + 168);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 160);
    swift_bridgeObjectRetain();
    v4._uint64_t countAndFlagsBits = v3;
    v4._object = v2;
    PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v4);
    char v5 = 1;
    switch(v7)
    {
      case 1:
      case 2:
        char v5 = sub_1ACE77848();
        break;
      default:
        break;
    }
  }
  else
  {
    char v5 = 1;
  }
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t DisplayType.rawValue.getter(char a1)
{
  if (!a1) {
    return 1701147238;
  }
  if (a1 == 1) {
    return 1684627824;
  }
  return 0x646972627968;
}

uint64_t sub_1ACCD1068(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1684627824;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646972627968;
    unint64_t v4 = 0xE600000000000000;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 1701147238;
  }
  if (v2) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  uint64_t v8 = 1684627824;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x646972627968;
    unint64_t v3 = 0xE600000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 1701147238;
  }
  if (*a2) {
    unint64_t v10 = v3;
  }
  else {
    unint64_t v10 = 0xE400000000000000;
  }
  if (v6 == v9 && v7 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1ACCD114C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation11DisplayTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1ACCD117C()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACCD11DC()
{
  return sub_1ACE764C8();
}

uint64_t _s18PodcastsFoundation11DisplayTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACCD127C()
{
  unint64_t result = qword_1E99F4F18;
  if (!qword_1E99F4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F18);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCD139CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayType()
{
  return &type metadata for DisplayType;
}

unint64_t sub_1ACCD13D4()
{
  unint64_t result = qword_1EB76A258;
  if (!qword_1EB76A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A258);
  }
  return result;
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForGroupedStation(orderedBy:)(int a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  switch(a1)
  {
    case 0:
      return _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE33sortDescriptorsForManualShowOrderSaySo16NSSortDescriptorCGyFZ_0();
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1ACE84830;
      sub_1ACE761B8();
      id v4 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v5 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 0);
      goto LABEL_7;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1ACE84830;
      sub_1ACE761B8();
      id v7 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v5 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v7, sel_initWithKey_ascending_, v5, 1);
LABEL_7:
      id v8 = v6;

      *(void *)(v3 + 32) = v8;
      sub_1ACE76598();
      return v3;
    case 4:
      char v9 = 1;
      goto LABEL_10;
    case 5:
      char v9 = 0;
LABEL_10:
      uint64_t result = _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE27sortDescriptorsForShowTitle9ascendingSaySo16NSSortDescriptorCGSb_tFZ_0(v9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForDatePublishedOfNewestEpisode()()
{
  return sub_1ACCD1638((uint64_t)kLatestEpisodeAvailabilityDate, 0);
}

uint64_t static MTPodcastPlaylistSettings.sortDescriptorsForAscendingDatePublishedOfOldestEpisode()()
{
  return sub_1ACCD1638((uint64_t)&kEarliestEpisodeAvailabilityDate, 1);
}

uint64_t sub_1ACCD1638(uint64_t a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ACE84830;
  sub_1ACE761B8();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, a2 & 1);

  *(void *)(v3 + 32) = v6;
  sub_1ACE76598();
  return v3;
}

uint64_t _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE33sortDescriptorsForManualShowOrderSaySo16NSSortDescriptorCGyFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84830;
  uint64_t v6 = sub_1ACE761B8();
  uint64_t v7 = v1;
  sub_1ACE762C8();
  sub_1ACE761B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, 0, v6, v7);

  *(void *)(v0 + 32) = v4;
  sub_1ACE76598();
  return v0;
}

uint64_t _sSo25MTPodcastPlaylistSettingsC18PodcastsFoundationE27sortDescriptorsForShowTitle9ascendingSaySo16NSSortDescriptorCGSb_tFZ_0(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE84830;
  uint64_t v8 = sub_1ACE761B8();
  uint64_t v9 = v3;
  sub_1ACE762C8();
  sub_1ACE761B8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithKey_ascending_selector_, v5, a1 & 1, sel_localizedStandardCompare_, v8, v9);

  *(void *)(v2 + 32) = v6;
  sub_1ACE76598();
  return v2;
}

id ServerSyncResponse.Episode.fullEpisode.getter()
{
  uint64_t v1 = v0[6];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (void *)v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v8 = *v0;
  uint64_t v7 = v0[1];
  uint64_t v18 = (objc_class *)type metadata accessor for ServerPodcastEpisode();
  uint64_t v9 = (char *)objc_allocWithZone(v18);
  unint64_t v10 = (void **)&v9[OBJC_IVAR___MTServerPodcastEpisode_relationships];
  *(void *)&v9[OBJC_IVAR___MTServerPodcastEpisode_relationships] = 0;
  char v11 = &v9[OBJC_IVAR___MTServerPodcastEpisode_id];
  *(void *)char v11 = v8;
  *((void *)v11 + 1) = v7;
  uint64_t v12 = &v9[OBJC_IVAR___MTServerPodcastEpisode_type];
  *(void *)uint64_t v12 = v6;
  *((void *)v12 + 1) = v5;
  char v13 = &v9[OBJC_IVAR___MTServerPodcastEpisode_href];
  *(void *)char v13 = v3;
  *((void *)v13 + 1) = v4;
  *(void *)&v9[OBJC_IVAR___MTServerPodcastEpisode_attributes] = v1;
  swift_beginAccess();
  uint64_t v14 = *v10;
  char *v10 = v2;
  swift_retain_n();
  id v15 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  v19.receiver = v9;
  v19.super_class = v18;
  id v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_release();

  return v16;
}

uint64_t ServerSyncResponse.Episode.isDeleted.getter()
{
  return ((*(unsigned char *)(v0 + 64) & 0xFE) != 2) & *(unsigned char *)(v0 + 64);
}

uint64_t ServerSyncResponse.Meta.nextSyncToken.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Meta.startWithBootstrap.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ServerSyncResponse.Meta.reset.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ServerSyncResponse.Meta.reason.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall ServerSyncResponse.Meta.init(nextSyncToken:reset:reason:startWithBootstrap:)(PodcastsFoundation::ServerSyncResponse::Meta *__return_ptr retstr, Swift::String_optional nextSyncToken, Swift::Bool_optional reset, Swift::String_optional reason, Swift::Bool_optional startWithBootstrap)
{
  retstr->nextSyncToken = nextSyncToken;
  retstr->startWithBootstrap = startWithBootstrap;
  retstr->reset = reset;
  retstr->reason = reason;
}

unint64_t sub_1ACCD1B0C()
{
  unint64_t result = 0x636E79537478656ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x7465736572;
      break;
    case 3:
      unint64_t result = 0x6E6F73616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACCD1BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACCD4C04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACCD1BCC(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD3784();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACCD1C08(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD3784();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerSyncResponse.Meta.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4F20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(unsigned __int8 *)(v1 + 16);
  int v11 = *(unsigned __int8 *)(v1 + 17);
  uint64_t v7 = *(void *)(v1 + 24);
  v10[0] = *(void *)(v1 + 32);
  v10[1] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD3784();
  sub_1ACE77C78();
  char v17 = 0;
  uint64_t v8 = v12;
  sub_1ACE776E8();
  if (!v8)
  {
    char v16 = 1;
    sub_1ACE776F8();
    char v15 = 2;
    sub_1ACE776F8();
    char v14 = 3;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerSyncResponse.Meta.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E420);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD3784();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v23 = 0;
  uint64_t v9 = sub_1ACE775F8();
  uint64_t v11 = v10;
  char v22 = 1;
  swift_bridgeObjectRetain();
  int v19 = sub_1ACE77608();
  char v21 = 2;
  int v18 = sub_1ACE77608();
  char v20 = 3;
  uint64_t v12 = sub_1ACE775F8();
  uint64_t v15 = v14;
  char v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v17 = v12;
  v16(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v19;
  *(unsigned char *)(a2 + 17) = v18;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCD208C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerSyncResponse.Meta.init(from:)(a1, a2);
}

uint64_t sub_1ACCD20A4(void *a1)
{
  return ServerSyncResponse.Meta.encode(to:)(a1);
}

uint64_t ServerSyncResponse.Episode.Meta.deleted.getter()
{
  return *v0;
}

uint64_t sub_1ACCD20C4()
{
  return 0x646574656C6564;
}

uint64_t sub_1ACCD20DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x646574656C6564 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACCD2174(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD37D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACCD21B0(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD37D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerSyncResponse.Episode.Meta.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4F28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD37D8();
  sub_1ACE77C78();
  sub_1ACE776F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ServerSyncResponse.Episode.Meta.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4F38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD37D8();
  sub_1ACE77C48();
  if (!v2)
  {
    char v9 = sub_1ACE77608();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1ACCD2470@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ServerSyncResponse.Episode.Meta.init(from:)(a1, a2);
}

uint64_t sub_1ACCD2488(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4F28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD37D8();
  sub_1ACE77C78();
  sub_1ACE776F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ServerSyncResponse.Episode.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Episode.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Episode.href.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.Episode.attributes.getter()
{
  return swift_retain();
}

void *ServerSyncResponse.Episode.relationships.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void ServerSyncResponse.Episode.meta.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

uint64_t ServerSyncResponse.Episode.init(id:type:href:attributes:relationships:meta:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10)
{
  char v10 = *a10;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = v10;
  return result;
}

uint64_t sub_1ACCD26A8()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 1717924456;
      break;
    case 3:
      uint64_t result = 0x7475626972747461;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    case 5:
      uint64_t result = 1635018093;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACCD275C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACCD4DCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACCD2784(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD382C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACCD27C0(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD382C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerSyncResponse.Episode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4F40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v21 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v18 = *(void *)(v1 + 40);
  uint64_t v19 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v16 = *(void *)(v1 + 56);
  uint64_t v17 = v9;
  int v15 = *(unsigned __int8 *)(v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD382C();
  sub_1ACE77C78();
  LOBYTE(v24) = 0;
  uint64_t v10 = v22;
  sub_1ACE77748();
  if (!v10)
  {
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    LOBYTE(v24) = 1;
    sub_1ACE77748();
    LOBYTE(v24) = 2;
    sub_1ACE77748();
    uint64_t v24 = v11;
    char v23 = 3;
    type metadata accessor for PodcastEpisodeAttributes(0);
    sub_1ACCD38D4(&qword_1E99F4F48, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes);
    sub_1ACE77728();
    uint64_t v24 = v12;
    char v23 = 4;
    type metadata accessor for PodcastEpisodeRelationships();
    sub_1ACCD38D4(&qword_1E99F4F50, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships);
    sub_1ACE77728();
    LOBYTE(v24) = v15;
    char v23 = 5;
    sub_1ACCD3880();
    sub_1ACE77728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void ServerSyncResponse.Episode.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E428);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD382C();
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v34) = 0;
    uint64_t v9 = sub_1ACE77658();
    uint64_t v11 = v10;
    LOBYTE(v34) = 1;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1ACE77658();
    uint64_t v30 = v9;
    LOBYTE(v34) = 2;
    uint64_t v32 = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1ACE77658();
    uint64_t v31 = v14;
    uint64_t v27 = v13;
    type metadata accessor for PodcastEpisodeAttributes(0);
    char v33 = 3;
    sub_1ACCD38D4(&qword_1EB767EB8, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeAttributes);
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    sub_1ACE77638();
    uint64_t v15 = (uint64_t)v34;
    type metadata accessor for PodcastEpisodeRelationships();
    char v33 = 4;
    sub_1ACCD38D4(qword_1EB768160, (void (*)(uint64_t))type metadata accessor for PodcastEpisodeRelationships);
    swift_retain();
    sub_1ACE77638();
    uint64_t v26 = v15;
    uint64_t v16 = v34;
    char v33 = 5;
    sub_1ACCD391C();
    uint64_t v25 = v16;
    id v17 = v16;
    sub_1ACE77638();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v18 = (char)v34;
    *(void *)a2 = v30;
    *(void *)(a2 + 8) = v11;
    uint64_t v19 = v32;
    *(void *)(a2 + 16) = v29;
    *(void *)(a2 + 24) = v19;
    uint64_t v20 = v26;
    uint64_t v21 = v17;
    uint64_t v22 = v31;
    *(void *)(a2 + 32) = v27;
    *(void *)(a2 + 40) = v22;
    char v23 = v25;
    *(void *)(a2 + 48) = v20;
    *(void *)(a2 + 56) = v23;
    *(unsigned char *)(a2 + 64) = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1ACCD3024(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1ACCD303C(void *a1)
{
  return ServerSyncResponse.Episode.encode(to:)(a1);
}

uint64_t ServerSyncResponse.next.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerSyncResponse.meta.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  __int16 v3 = *(_WORD *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ServerSyncResponse.data.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 ServerSyncResponse.init(next:meta:data:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int16 v5 = *(_WORD *)(a3 + 16);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a3;
  *(_WORD *)(a5 + 32) = v5;
  __n128 result = *(__n128 *)(a3 + 24);
  *(__n128 *)(a5 + 40) = result;
  *(void *)(a5 + 56) = a4;
  return result;
}

uint64_t sub_1ACCD30FC()
{
  return *(void *)&aNext_2[8 * *v0];
}

uint64_t sub_1ACCD3114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACCD5038(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACCD313C(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD3970();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACCD3178(uint64_t a1)
{
  unint64_t v2 = sub_1ACCD3970();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ServerSyncResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4F60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v7;
  int v25 = *(unsigned __int8 *)(v1 + 32);
  int v15 = *(unsigned __int8 *)(v1 + 33);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v14 = v8;
  uint64_t v12 = *(void *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD3970();
  sub_1ACE77C78();
  LOBYTE(v19) = 0;
  uint64_t v9 = v18;
  sub_1ACE776E8();
  if (!v9)
  {
    uint64_t v19 = v17;
    uint64_t v20 = v16;
    char v21 = v25;
    char v22 = v15;
    uint64_t v10 = v12;
    uint64_t v23 = v14;
    uint64_t v24 = v13;
    char v26 = 1;
    sub_1ACCD39C4();
    sub_1ACE77788();
    uint64_t v19 = v10;
    char v26 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E058);
    sub_1ACCD3AC0(&qword_1E99F4F70, (void (*)(void))sub_1ACCD3A18);
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ServerSyncResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E418);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACCD3970();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v25) = 0;
  uint64_t v9 = sub_1ACE775F8();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v32 = 1;
  sub_1ACCD3A6C();
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  uint64_t v12 = v26;
  uint64_t v20 = v25;
  int v31 = v27;
  int v19 = v28;
  uint64_t v13 = v30;
  uint64_t v18 = v29;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E058);
  char v32 = 2;
  sub_1ACCD3AC0(&qword_1EB76E060, (void (*)(void))sub_1ACCD3B30);
  uint64_t v23 = v12;
  swift_bridgeObjectRetain();
  uint64_t v22 = v13;
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v23;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v31;
  *(unsigned char *)(a2 + 33) = v19;
  uint64_t v16 = v22;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v14;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCD3754@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ServerSyncResponse.init(from:)(a1, a2);
}

uint64_t sub_1ACCD376C(void *a1)
{
  return ServerSyncResponse.encode(to:)(a1);
}

unint64_t sub_1ACCD3784()
{
  unint64_t result = qword_1EB76B710;
  if (!qword_1EB76B710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B710);
  }
  return result;
}

unint64_t sub_1ACCD37D8()
{
  unint64_t result = qword_1E99F4F30;
  if (!qword_1E99F4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F30);
  }
  return result;
}

unint64_t sub_1ACCD382C()
{
  unint64_t result = qword_1EB76B730;
  if (!qword_1EB76B730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B730);
  }
  return result;
}

unint64_t sub_1ACCD3880()
{
  unint64_t result = qword_1E99F4F58;
  if (!qword_1E99F4F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F58);
  }
  return result;
}

uint64_t sub_1ACCD38D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACCD391C()
{
  unint64_t result = qword_1EB76B748;
  if (!qword_1EB76B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B748);
  }
  return result;
}

unint64_t sub_1ACCD3970()
{
  unint64_t result = qword_1EB76B6F8;
  if (!qword_1EB76B6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B6F8);
  }
  return result;
}

unint64_t sub_1ACCD39C4()
{
  unint64_t result = qword_1E99F4F68;
  if (!qword_1E99F4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F68);
  }
  return result;
}

unint64_t sub_1ACCD3A18()
{
  unint64_t result = qword_1E99F4F78;
  if (!qword_1E99F4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F78);
  }
  return result;
}

unint64_t sub_1ACCD3A6C()
{
  unint64_t result = qword_1EB76B728;
  if (!qword_1EB76B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B728);
  }
  return result;
}

uint64_t sub_1ACCD3AC0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB76E058);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACCD3B30()
{
  unint64_t result = qword_1EB76B750;
  if (!qword_1EB76B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B750);
  }
  return result;
}

uint64_t destroy for ServerSyncResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerSyncResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServerSyncResponse()
{
  return &type metadata for ServerSyncResponse;
}

uint64_t destroy for ServerSyncResponse.Meta()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerSyncResponse.Meta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerSyncResponse.Meta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerSyncResponse.Meta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse.Meta(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Meta(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Meta()
{
  return &type metadata for ServerSyncResponse.Meta;
}

void destroy for ServerSyncResponse.Episode(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for ServerSyncResponse.Episode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v7 = v6;
  return a1;
}

uint64_t assignWithCopy for ServerSyncResponse.Episode(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 56);
  uint64_t v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for ServerSyncResponse.Episode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  id v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse.Episode(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerSyncResponse.Episode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode()
{
  return &type metadata for ServerSyncResponse.Episode;
}

uint64_t getEnumTagSinglePayload for ServerSyncResponse.Episode.Meta(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *storeEnumTagSinglePayload for ServerSyncResponse.Episode.Meta(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCD43CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode.Meta()
{
  return &type metadata for ServerSyncResponse.Episode.Meta;
}

unsigned char *storeEnumTagSinglePayload for ServerSyncResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCD44D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.CodingKeys()
{
  return &type metadata for ServerSyncResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServerSyncResponse.Episode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCD45D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode.CodingKeys()
{
  return &type metadata for ServerSyncResponse.Episode.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServerSyncResponse.Episode.Meta.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACCD46A8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Episode.Meta.CodingKeys()
{
  return &type metadata for ServerSyncResponse.Episode.Meta.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ServerSyncResponse.Meta.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCD47ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSyncResponse.Meta.CodingKeys()
{
  return &type metadata for ServerSyncResponse.Meta.CodingKeys;
}

unint64_t sub_1ACCD47E8()
{
  unint64_t result = qword_1E99F4F80;
  if (!qword_1E99F4F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F80);
  }
  return result;
}

unint64_t sub_1ACCD4840()
{
  unint64_t result = qword_1E99F4F88;
  if (!qword_1E99F4F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F88);
  }
  return result;
}

unint64_t sub_1ACCD4898()
{
  unint64_t result = qword_1E99F4F90;
  if (!qword_1E99F4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F90);
  }
  return result;
}

unint64_t sub_1ACCD48F0()
{
  unint64_t result = qword_1E99F4F98;
  if (!qword_1E99F4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4F98);
  }
  return result;
}

unint64_t sub_1ACCD4948()
{
  unint64_t result = qword_1EB76B708;
  if (!qword_1EB76B708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B708);
  }
  return result;
}

unint64_t sub_1ACCD49A0()
{
  unint64_t result = qword_1EB76B700;
  if (!qword_1EB76B700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B700);
  }
  return result;
}

unint64_t sub_1ACCD49F8()
{
  unint64_t result = qword_1EB76B740;
  if (!qword_1EB76B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B740);
  }
  return result;
}

unint64_t sub_1ACCD4A50()
{
  unint64_t result = qword_1EB76B738;
  if (!qword_1EB76B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B738);
  }
  return result;
}

unint64_t sub_1ACCD4AA8()
{
  unint64_t result = qword_1E99F4FA0;
  if (!qword_1E99F4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4FA0);
  }
  return result;
}

unint64_t sub_1ACCD4B00()
{
  unint64_t result = qword_1E99F4FA8;
  if (!qword_1E99F4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4FA8);
  }
  return result;
}

unint64_t sub_1ACCD4B58()
{
  unint64_t result = qword_1EB76B720;
  if (!qword_1EB76B720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B720);
  }
  return result;
}

unint64_t sub_1ACCD4BB0()
{
  unint64_t result = qword_1EB76B718;
  if (!qword_1EB76B718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76B718);
  }
  return result;
}

uint64_t sub_1ACCD4C04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E79537478656ELL && a2 == 0xED00006E656B6F54;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ACECF590 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7465736572 && a2 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1ACCD4DCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1717924456 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1ACCD5038(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047342 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *OAuthCancellationSession.__allocating_init(oAuthAdamID:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)swift_allocObject();
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EB76E150;
  v4[3] = a2;
  v4[4] = v5;
  v4[2] = a1;
  id v6 = v5;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  v4[5] = a1;
  v4[6] = a2;
  return v4;
}

void *OAuthCancellationSession.init(oAuthAdamID:)(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  if (qword_1EB76E160 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_1EB76E150;
  v3[3] = a2;
  v3[4] = v6;
  v3[2] = a1;
  id v7 = v6;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  v3[5] = a1;
  v3[6] = a2;
  return v3;
}

uint64_t OAuthCancellationSession.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OAuthCancellationSession.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OAuthCancellationSession()
{
  return self;
}

uint64_t method lookup function for OAuthCancellationSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OAuthCancellationSession);
}

uint64_t dispatch thunk of OAuthCancellationSession.__allocating_init(oAuthAdamID:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t MetricsPageContext.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsPageContext.debugDescription.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ACCD5490()
{
  return MetricsPageContext.debugDescription.getter();
}

uint64_t MetricsPageContext.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsPageContext.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsPageContext.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsPageContext.bookmarks.getter()
{
  return 0x6B72616D6B6F6F42;
}

uint64_t static MetricsPageContext.browse.getter()
{
  return 0x6573776F7242;
}

uint64_t static MetricsPageContext.categories.getter()
{
  return 0x69726F6765746143;
}

uint64_t static MetricsPageContext.channels.getter()
{
  return 0x736C656E6E616843;
}

uint64_t static MetricsPageContext.downloaded.getter()
{
  return 0x64616F6C6E776F44;
}

uint64_t static MetricsPageContext.home.getter()
{
  return 1701670728;
}

uint64_t static MetricsPageContext.latestEpisodes.getter()
{
  return 0x704574736574614CLL;
}

uint64_t static MetricsPageContext.library.getter()
{
  return 0x7972617262694CLL;
}

uint64_t static MetricsPageContext.listen.getter()
{
  return 0x6E657473694CLL;
}

uint64_t static MetricsPageContext.nowPlaying.getter()
{
  return 0x6979616C50776F4ELL;
}

uint64_t static MetricsPageContext.recentlyUpdated.getter()
{
  return 0x796C746E65636552;
}

uint64_t static MetricsPageContext.search.getter()
{
  return 0x686372616553;
}

uint64_t static MetricsPageContext.shows.getter()
{
  return 0x73776F6853;
}

uint64_t static MetricsPageContext.station.getter()
{
  return 0x6E6F6974617453;
}

uint64_t static MetricsPageContext.topCharts.getter()
{
  return 0x6F546E7265646F4DLL;
}

unint64_t sub_1ACCD57B4()
{
  unint64_t result = qword_1E99F4FB0;
  if (!qword_1E99F4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4FB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsPageContext()
{
  return &type metadata for MetricsPageContext;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.resolvedContext(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = *(void *)(v2 + 88);
  long long v9 = *(_OWORD *)(v2 + 72);
  v16[0] = *(_OWORD *)(v2 + 56);
  v16[1] = v9;
  v17[0] = v16[0];
  v17[1] = v9;
  uint64_t v18 = v8;
  sub_1ACCD90A8(v2, (uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1ACCD9110((uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  uint64_t v12 = (void *)(v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = a1;
  v12[1] = a2;
  uint64_t v13 = *(void **)&v16[0];
  swift_bridgeObjectRetain();
  swift_retain();
  id v14 = v13;
  swift_bridgeObjectRetain();
  sub_1ACBD98A0((uint64_t)v17, (void (*)(id *))sub_1ACBD4860, v11);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext()
{
  uint64_t result = qword_1EB7732F0;
  if (!qword_1EB7732F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL static PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.trackIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.contentItemIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.privateListening.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.siriAssetInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void *PodcastsMediaLibrary.PlaybackQueueContext.sharedAccount.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.userContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  long long v3 = *(_OWORD *)(v1 + 56);
  long long v4 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  uint64_t v5 = (void *)v3;
  swift_bridgeObjectRetain();
  id v6 = v5;
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.intent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 44), a1, &qword_1E99F4FB8);
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.restorableSnapshot.getter()
{
  type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.initialItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 56), a1, &qword_1EB76EFA0);
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.initialItemPlayheadOverride.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() + 60));
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.sourceEvent.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.mediaQueryIdentifiers.getter()
{
  type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  return swift_bridgeObjectRetain();
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.mediaQueryInitialIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() + 72));
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.previousMediaIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext() + 76);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  unsigned __int8 v8 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  return sub_1ACA63B84(v4, v5, v6, v7, v8);
}

double PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:)@<D0>(void *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v11 = 0;
  return PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:sourceEvent:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &v11);
}

double PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:sourceEvent:)@<D0>(void *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11)
{
  char v38 = *a11;
  uint64_t v17 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v18 = v17[13];
  type metadata accessor for AccountResolver();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v21 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v19 + v22) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a9 + v18) = v19;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 16) = a2;
  swift_bridgeObjectRetain();
  id v23 = a3;
  if (!a3) {
    id v23 = sub_1ACCD8990(a1);
  }
  *(void *)(a9 + 56) = v23;
  *(void *)(a9 + 64) = a6;
  *(void *)(a9 + 72) = a7;
  *(void *)(a9 + 80) = a4;
  *(void *)(a9 + 88) = a5;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = 0;
  uint64_t v24 = a9 + v17[11];
  uint64_t v25 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(void *)(a9 + 24) = a8;
  *(void *)(a9 + 32) = a10;
  uint64_t v26 = a9 + v17[14];
  uint64_t v27 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  id v28 = a3;
  uint64_t v29 = sub_1ACCD8CEC((uint64_t)a1);
  swift_bridgeObjectRelease();
  *(void *)(a9 + 8) = v29;
  *(unsigned char *)(a9 + v17[16]) = v38;
  uint64_t v30 = a9 + v17[15];
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;

  uint64_t v31 = MEMORY[0x1E4FBC860];
  *(void *)(a9 + v17[12]) = MEMORY[0x1E4FBC860];
  *(void *)(a9 + v17[17]) = v31;
  uint64_t v32 = a9 + v17[18];
  *(void *)uint64_t v32 = 0;
  *(unsigned char *)(v32 + 8) = 1;
  uint64_t v33 = a9 + v17[19];
  double result = 0.0;
  *(_OWORD *)uint64_t v33 = 0u;
  *(_OWORD *)(v33 + 16) = 0u;
  *(unsigned char *)(v33 + 32) = -1;
  return result;
}

double PodcastsMediaLibrary.PlaybackQueueContext.init(trackIdentifiers:privateListening:enqueuerDSID:sharedUserId:requesterUserId:siriAssetInfo:sourceEvent:initialItemPlayheadOverride:)@<D0>(void *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12, char a13)
{
  char v40 = *a11;
  uint64_t v19 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v20 = v19[13];
  type metadata accessor for AccountResolver();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v23 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v21 + v24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a9 + v20) = v21;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 16) = a2;
  swift_bridgeObjectRetain();
  id v25 = a3;
  if (!a3) {
    id v25 = sub_1ACCD8990(a1);
  }
  *(void *)(a9 + 56) = v25;
  *(void *)(a9 + 64) = a6;
  *(void *)(a9 + 72) = a7;
  *(void *)(a9 + 80) = a4;
  *(void *)(a9 + 88) = a5;
  *(void *)(a9 + 40) = 0;
  *(void *)(a9 + 48) = 0;
  uint64_t v26 = a9 + v19[11];
  uint64_t v27 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(void *)(a9 + 24) = a8;
  *(void *)(a9 + 32) = a10;
  uint64_t v28 = a9 + v19[14];
  uint64_t v29 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  id v30 = a3;
  uint64_t v31 = sub_1ACCD8CEC((uint64_t)a1);
  swift_bridgeObjectRelease();
  *(void *)(a9 + 8) = v31;
  *(unsigned char *)(a9 + v19[16]) = v40;

  uint64_t v32 = MEMORY[0x1E4FBC860];
  *(void *)(a9 + v19[12]) = MEMORY[0x1E4FBC860];
  uint64_t v33 = a9 + v19[15];
  *(void *)uint64_t v33 = a12;
  *(unsigned char *)(v33 + 8) = a13 & 1;
  *(void *)(a9 + v19[17]) = v32;
  uint64_t v34 = a9 + v19[18];
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  uint64_t v35 = a9 + v19[19];
  double result = 0.0;
  *(_OWORD *)uint64_t v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;
  *(unsigned char *)(v35 + 32) = -1;
  return result;
}

double PodcastsMediaLibrary.PlaybackQueueContext.init(restorableSnapshot:privateListening:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v7 = v6[13];
  type metadata accessor for AccountResolver();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v10 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v8 + v11) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a3 + v7) = v8;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)a3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a3 + 16) = a2;
  *(void *)(a3 + v6[12]) = a1;
  *(void *)(a3 + 88) = 0;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  uint64_t v13 = a3 + v6[11];
  uint64_t v14 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  uint64_t v15 = a3 + v6[14];
  uint64_t v16 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)(a3 + 8) = sub_1ACA36394(v12);
  *(unsigned char *)(a3 + v6[16]) = 2;
  uint64_t v17 = a3 + v6[15];
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  *(void *)(a3 + v6[17]) = v12;
  uint64_t v18 = a3 + v6[18];
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  uint64_t v19 = a3 + v6[19];
  double result = 0.0;
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(unsigned char *)(v19 + 32) = -1;
  return result;
}

__n128 sub_1ACCD6458@<Q0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, __n128 *a17)
{
  long long v38 = a5[1];
  long long v39 = *a5;
  uint64_t v22 = *((void *)a5 + 4);
  char v43 = *a10;
  __n128 v47 = *a17;
  unint64_t v45 = a17[1].n128_u64[1];
  unint64_t v46 = a17[1].n128_u64[0];
  unsigned __int8 v44 = a17[2].n128_u8[0];
  uint64_t v23 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v24 = v23[13];
  type metadata accessor for AccountResolver();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v25 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v27 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  uint64_t v28 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v25 + v28) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a9 + v24) = v25;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 16) = a2;
  *(_OWORD *)(a9 + 56) = v39;
  *(_OWORD *)(a9 + 72) = v38;
  *(void *)(a9 + 88) = v22;
  *(void *)(a9 + 24) = a6;
  *(void *)(a9 + 32) = a7;
  *(void *)(a9 + 40) = a3;
  *(void *)(a9 + 48) = a4;
  sub_1ACA3AAD4(a8, a9 + v23[11], &qword_1E99F4FB8);
  uint64_t v29 = a9 + v23[14];
  uint64_t v30 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  id v31 = a4;
  swift_bridgeObjectRetain();
  id v32 = a3;
  uint64_t v33 = sub_1ACCD8CEC(a1);
  swift_bridgeObjectRelease();

  sub_1ACA50E78(a8, &qword_1E99F4FB8);
  *(void *)(a9 + 8) = v33;
  *(unsigned char *)(a9 + v23[16]) = v43;
  *(void *)(a9 + v23[12]) = a13;
  uint64_t v34 = a9 + v23[15];
  *(void *)uint64_t v34 = a11;
  *(unsigned char *)(v34 + 8) = a12 & 1;
  *(void *)(a9 + v23[17]) = a14;
  uint64_t v35 = a9 + v23[18];
  *(void *)uint64_t v35 = a15;
  *(unsigned char *)(v35 + 8) = a16 & 1;
  uint64_t v36 = (__n128 *)(a9 + v23[19]);
  __n128 result = v47;
  __n128 *v36 = v47;
  v36[1].n128_u64[0] = v46;
  v36[1].n128_u64[1] = v45;
  v36[2].n128_u8[0] = v44;
  return result;
}

double PodcastsMediaLibrary.PlaybackQueueContext.init(intent:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v27[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v5 = v4[13];
  type metadata accessor for AccountResolver();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v8 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v6 + v9) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a2 + v5) = v6;
  id v10 = objc_msgSend(self, sel_sharedAccountStore);
  v27[0] = 0;
  id v11 = objc_msgSend(v10, sel_activeStoreAccountWithError_, v27);

  id v12 = v27[0];
  if (!v11)
  {
    uint64_t v13 = v12;
    uint64_t v14 = (void *)sub_1ACE74D78();

    swift_willThrow();
    id v11 = 0;
  }
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 24) = 0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 8) = sub_1ACA36394(v15);
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v16 = type metadata accessor for PlaybackIntent(0);
  sub_1ACA3AAD4(a1 + *(int *)(v16 + 24), a2 + v4[14], &qword_1EB76EFA0);
  uint64_t v17 = a2 + v4[11];
  sub_1ACCD90A8(a1, v17, type metadata accessor for PlaybackIntent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v17, 0, 1, v16);
  *(unsigned char *)(a2 + v4[16]) = 0;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1ACB7D6F0(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20) {
    uint64_t v21 = *(void *)(v19 + 32);
  }
  else {
    uint64_t v21 = 0;
  }
  BOOL v22 = v20 == 0;
  swift_bridgeObjectRelease();
  uint64_t v23 = a2 + v4[15];
  *(void *)uint64_t v23 = v21;
  *(unsigned char *)(v23 + 8) = v22;
  *(void *)(a2 + v4[12]) = v15;
  sub_1ACCDE908(a1, type metadata accessor for PlaybackIntent);
  *(void *)(a2 + v4[17]) = v15;
  uint64_t v24 = a2 + v4[18];
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  uint64_t v25 = a2 + v4[19];
  double result = 0.0;
  *(_OWORD *)uint64_t v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(unsigned char *)(v25 + 32) = -1;
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.init(intent:sourceEvent:previousMediaIdentifier:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  v35[1] = *(id *)MEMORY[0x1E4F143B8];
  char v6 = *a2;
  uint64_t v7 = a3[2];
  uint64_t v33 = a3[1];
  uint64_t v34 = *a3;
  uint64_t v32 = a3[3];
  char v31 = *((unsigned char *)a3 + 32);
  uint64_t v8 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v9 = v8[13];
  type metadata accessor for AccountResolver();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v10 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v12 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v10 + v13) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a4 + v9) = v10;
  id v14 = objc_msgSend(self, sel_sharedAccountStore);
  v35[0] = 0;
  id v15 = objc_msgSend(v14, sel_activeStoreAccountWithError_, v35);

  id v16 = v35[0];
  if (!v15)
  {
    uint64_t v17 = v16;
    uint64_t v18 = (void *)sub_1ACE74D78();

    swift_willThrow();
    id v15 = 0;
  }
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = v15;
  *(void *)(a4 + 24) = 0;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)a4 = MEMORY[0x1E4FBC860];
  *(void *)(a4 + 8) = sub_1ACA36394(v19);
  *(unsigned char *)(a4 + 16) = 0;
  uint64_t v20 = type metadata accessor for PlaybackIntent(0);
  sub_1ACA3AAD4(a1 + *(int *)(v20 + 24), a4 + v8[14], &qword_1EB76EFA0);
  uint64_t v21 = a4 + v8[11];
  sub_1ACCD90A8(a1, v21, type metadata accessor for PlaybackIntent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v21, 0, 1, v20);
  *(unsigned char *)(a4 + v8[16]) = v6;
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1ACB7D6F0(v22);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24) {
    uint64_t v25 = *(void *)(v23 + 32);
  }
  else {
    uint64_t v25 = 0;
  }
  BOOL v26 = v24 == 0;
  swift_bridgeObjectRelease();
  uint64_t v27 = a4 + v8[15];
  *(void *)uint64_t v27 = v25;
  *(unsigned char *)(v27 + 8) = v26;
  *(void *)(a4 + v8[12]) = v19;
  uint64_t result = sub_1ACCDE908(a1, type metadata accessor for PlaybackIntent);
  *(void *)(a4 + v8[17]) = v19;
  uint64_t v29 = a4 + v8[18];
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  uint64_t v30 = a4 + v8[19];
  *(void *)uint64_t v30 = v34;
  *(void *)(v30 + 8) = v33;
  *(void *)(v30 + 16) = v7;
  *(void *)(v30 + 24) = v32;
  *(unsigned char *)(v30 + 32) = v31;
  return result;
}

double PodcastsMediaLibrary.PlaybackQueueContext.init(mediaQueryIdentifiers:initialIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  v28[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v9 = v8[13];
  type metadata accessor for AccountResolver();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v10 + OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver____lazy_storage___signpostID;
  uint64_t v12 = sub_1ACE753F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = OBJC_IVAR____TtC18PodcastsFoundation15AccountResolver_multiUserConnection;
  *(void *)(v10 + v13) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4E8]), sel_init);
  *(void *)(a4 + v9) = v10;
  id v14 = objc_msgSend(self, sel_sharedAccountStore);
  v28[0] = 0;
  id v15 = objc_msgSend(v14, sel_activeStoreAccountWithError_, v28);

  id v16 = v28[0];
  if (!v15)
  {
    uint64_t v17 = v16;
    uint64_t v18 = (void *)sub_1ACE74D78();

    swift_willThrow();
    id v15 = 0;
  }
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = v15;
  *(void *)(a4 + 24) = 0;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)a4 = MEMORY[0x1E4FBC860];
  *(void *)(a4 + 8) = sub_1ACA36394(v19);
  *(unsigned char *)(a4 + 16) = 0;
  uint64_t v20 = a4 + v8[14];
  uint64_t v21 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = a4 + v8[11];
  uint64_t v23 = type metadata accessor for PlaybackIntent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(unsigned char *)(a4 + v8[16]) = 0;
  uint64_t v24 = a4 + v8[15];
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  *(void *)(a4 + v8[12]) = v19;
  *(void *)(a4 + v8[17]) = a1;
  uint64_t v25 = a4 + v8[18];
  *(void *)uint64_t v25 = a2;
  *(unsigned char *)(v25 + 8) = a3 & 1;
  uint64_t v26 = a4 + v8[19];
  double result = 0.0;
  *(_OWORD *)uint64_t v26 = 0u;
  *(_OWORD *)(v26 + 16) = 0u;
  *(unsigned char *)(v26 + 32) = -1;
  return result;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.shouldSyncPlaybackPosition.getter()
{
  uint64_t v1 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 40);
  sub_1ACCD90A8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  if (v4) {
    char v5 = v3[16] ^ 1;
  }
  else {
    char v5 = 0;
  }
  sub_1ACCDE908((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  return v5 & 1;
}

void *PodcastsMediaLibrary.PlaybackQueueContext.accountForPlaybackPosition.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t sub_1ACCD70C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v71 = a4;
  char v72 = a3;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F3428);
  MEMORY[0x1F4188790](v69);
  uint64_t v70 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v73 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)a1;
  uint64_t v12 = *(void **)(a1 + 8);
  uint64_t v14 = *(unsigned __int8 *)(a1 + 16);
  int v68 = *(unsigned __int8 *)(a1 + 17);
  if (v68)
  {
    uint64_t v66 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1ACBDC0AC(v13);
    if (qword_1E99EFF10 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1ACE754C8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E99F2C40);
    sub_1ACBDC0AC(v13);
    sub_1ACBDC0AC(v13);
    id v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76C08();
    BOOL v18 = os_log_type_enabled(v16, v17);
    Class v64 = v13;
    uint64_t v65 = v12;
    unsigned int v63 = v14;
    if (v18)
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      uint64_t v62 = v19 + 4;
      sub_1ACCE2230();
      swift_allocError();
      *uint64_t v20 = v13;
      sub_1ACBDC0AC(v13);
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v79 = v21;
      sub_1ACE76FF8();
      uint64_t v22 = v67;
      *uint64_t v67 = v21;
      sub_1ACCE21E4(v13, v12, v14, 1);
      sub_1ACCE21E4(v13, v12, v14, 1);
      _os_log_impl(&dword_1AC9D5000, v16, v17, "Error resolving PlaybackQueueContext: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v22, -1, -1);
      MEMORY[0x1AD11B340](v19, -1, -1);
    }
    else
    {
      sub_1ACCE21E4(v13, v12, v14, 1);
      sub_1ACCE21E4(v13, v12, v14, 1);
    }

    uint64_t v67 = *(void **)a2;
    LODWORD(v62) = *(unsigned __int8 *)(a2 + 16);
    uint64_t v58 = *(void **)(a2 + 88);
    long long v54 = *(_OWORD *)(a2 + 56);
    long long v55 = *(_OWORD *)(a2 + 72);
    long long v79 = v54;
    long long v80 = v55;
    uint64_t v81 = (uint64_t)v58;
    uint64_t v35 = a2 + v9[11];
    uint64_t v36 = *(void *)(a2 + 32);
    uint64_t v61 = *(void *)(a2 + 24);
    sub_1ACA3AAD4(v35, v73, &qword_1E99F4FB8);
    uint64_t v37 = v9[15];
    char v78 = *(unsigned char *)(a2 + v9[16]);
    uint64_t v60 = *(void *)(a2 + v37);
    uint64_t v38 = *(void *)(a2 + v9[12]);
    uint64_t v39 = v9[18];
    uint64_t v40 = *(void *)(a2 + v9[17]);
    int v59 = *(unsigned __int8 *)(a2 + v37 + 8);
    uint64_t v57 = *(void *)(a2 + v39);
    LODWORD(v56) = *(unsigned __int8 *)(a2 + v39 + 8);
    uint64_t v41 = a2 + v9[19];
    uint64_t v43 = *(void *)(v41 + 8);
    uint64_t v44 = *(void *)(v41 + 16);
    uint64_t v45 = *(void *)(v41 + 24);
    unsigned __int8 v46 = *(unsigned char *)(v41 + 32);
    v74.n128_u64[0] = *(void *)v41;
    uint64_t v42 = v74.n128_u64[0];
    v74.n128_u64[1] = v43;
    uint64_t v75 = v44;
    uint64_t v76 = v45;
    __n128 v47 = (void *)v54;
    unsigned __int8 v77 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v48 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA63B84(v42, v43, v44, v45, v46);
    uint64_t v11 = v66;
    sub_1ACCD6458((uint64_t)v67, (char)v62, 0, 0, &v79, v61, v36, v73, (uint64_t)v66, &v78, v60, v59, v38, v40, v57, v56, &v74);
    uint64_t v13 = v64;
    uint64_t v12 = v65;
    uint64_t v14 = v63;
  }
  else
  {
    uint64_t v58 = *(void **)a2;
    uint64_t v61 = *(void *)(a2 + 88);
    long long v51 = *(_OWORD *)(a2 + 56);
    long long v52 = *(_OWORD *)(a2 + 72);
    long long v79 = v51;
    long long v80 = v52;
    uint64_t v81 = v61;
    uint64_t v23 = *(void *)(a2 + 32);
    uint64_t v67 = *(void **)(a2 + 24);
    uint64_t v57 = v23;
    sub_1ACA3AAD4(a2 + v9[11], v73, &qword_1E99F4FB8);
    uint64_t v24 = v9[15];
    char v78 = *(unsigned char *)(a2 + v9[16]);
    uint64_t v66 = *(char **)(a2 + v24);
    LODWORD(v62) = *(unsigned __int8 *)(a2 + v24 + 8);
    uint64_t v25 = *(void *)(a2 + v9[12]);
    uint64_t v26 = *(void *)(a2 + v9[17]);
    uint64_t v27 = a2 + v9[18];
    uint64_t v60 = *(void *)v27;
    int v59 = *(unsigned __int8 *)(v27 + 8);
    uint64_t v28 = a2 + v9[19];
    uint64_t v29 = *(void *)(v28 + 8);
    unint64_t v56 = *(void *)v28;
    *(void *)&long long v55 = *(void *)(v28 + 16);
    *(void *)&long long v54 = *(void *)(v28 + 24);
    int v53 = *(unsigned __int8 *)(v28 + 32);
    v74.n128_u64[0] = v56;
    v74.n128_u64[1] = v29;
    uint64_t v75 = v55;
    uint64_t v76 = v54;
    unsigned __int8 v77 = v53;
    sub_1ACCE2198(v13, v12, v14, 0);
    uint64_t v30 = (void *)v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = (uint64_t)v58;
    swift_bridgeObjectRetain();
    id v32 = v13;
    id v33 = v12;
    id v34 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA63B84(v56, v29, v55, v54, v53);
    sub_1ACCD6458(v31, v14 & 1, v13, v12, &v79, (uint64_t)v67, v57, v73, (uint64_t)v11, &v78, (uint64_t)v66, (char)v62, v25, v26, v60, v59, &v74);
  }
  uint64_t v49 = v70;
  sub_1ACCD90A8((uint64_t)v11, v70, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  swift_storeEnumTagMultiPayload();
  v72(v49);
  sub_1ACCE21E4(v13, v12, v14, v68);
  sub_1ACA50E78(v49, &qword_1E99F3428);
  return sub_1ACCDE908((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
}

uint64_t sub_1ACCD783C()
{
  uint64_t v1 = (int *)type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (id *)(v0 + ((v2 + 16) & ~v2));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)v3 + v1[11];
  uint64_t v5 = type metadata accessor for PlaybackIntent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1ACA63688(*(void *)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((void *)v4 + 3), v4[32]);
    if (v4[120] != 2) {
      sub_1ACA63738(*((void *)v4 + 5), *((void *)v4 + 6), *((void *)v4 + 7), *((void *)v4 + 8), *((void *)v4 + 9), *((void *)v4 + 10), *((void *)v4 + 11), *((void *)v4 + 12), v4[104]);
    }
    uint64_t v6 = &v4[*(int *)(v5 + 24)];
    uint64_t v7 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = &v6[v7[12]];
      uint64_t v8 = sub_1ACE74F28();
      uint64_t v9 = (unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
      uint64_t v28 = *(void *)(v8 - 8);
      uint64_t v29 = *v9;
      if (!(*v9)(v31, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v8);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = &v6[v7[16]];
      if (!v29(v10, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v11 = &v6[v7[20]];
      uint64_t v12 = sub_1ACE750A8();
      uint64_t v13 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = &v6[v7[36]];
      if (!v29(v14, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v15 = (char *)v3 + v1[14];
  id v16 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v16 - 1) + 48))(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v17 = &v15[v16[12]];
    uint64_t v18 = sub_1ACE74F28();
    uint64_t v30 = *(void *)(v18 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (!v19(v17, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v18);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = &v15[v16[16]];
    if (!v19(v20, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v18);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v21 = &v15[v16[20]];
    uint64_t v22 = sub_1ACE750A8();
    uint64_t v23 = *(void *)(v22 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = &v15[v16[36]];
    if (!v19(v24, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v18);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = (char *)v3 + v1[19];
  int v26 = v25[32];
  if (v26 != 255) {
    sub_1ACA63688(*(void *)v25, *((void *)v25 + 1), *((void *)v25 + 2), *((void *)v25 + 3), v26);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t static PodcastsMediaLibrary.PlaybackQueueContext.supportsTrackIdentifier(trackIdentifier:)(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  URLTrackIdentifier.init(string:)(v4);
  if (!v5)
  {
    LOBYTE(a1) = v7 != 0;
    if (v7) {
      swift_bridgeObjectRelease();
    }
  }
  return a1 & 1;
}

uint64_t PodcastsMediaLibrary.PlaybackQueueContext.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v79[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for PlaybackIntent(0);
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v79[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&long long v97 = type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext();
  MEMORY[0x1F4188790](v97);
  int64_t v96 = &v79[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v79[-v12];
  MEMORY[0x1F4188790](v14);
  id v16 = &v79[-v15];
  if (qword_1E99EFF10 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1ACE754C8();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1E99F2C40);
  sub_1ACCD90A8(v2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  uint64_t v95 = v18;
  uint64_t v19 = sub_1ACE75498();
  os_log_type_t v20 = sub_1ACE76C08();
  if (os_log_type_enabled(v19, v20))
  {
    double v90 = v9;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v91 = v2;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v92 = a1;
    uint64_t v24 = v23;
    *(void *)&long long v98 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_1ACCD90A8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    uint64_t v25 = sub_1ACE76228();
    *(void *)&long long v112 = sub_1ACA3189C(v25, v26, (uint64_t *)&v98);
    uint64_t v9 = v90;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACCDE908((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    _os_log_impl(&dword_1AC9D5000, v19, v20, "􀒖 Creating request from context: %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    a1 = v92;
    MEMORY[0x1AD11B340](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v2 = v91;
    MEMORY[0x1AD11B340](v28, -1, -1);
  }
  else
  {
    sub_1ACCDE908((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
  }

  uint64_t v29 = (uint64_t)v96;
  if (*(void *)(*(void *)v2 + 16))
  {
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76C08();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v32 = 0;
      _os_log_impl(&dword_1AC9D5000, v30, v31, "􀒖 Using track identifiers", v32, 2u);
      MEMORY[0x1AD11B340](v32, -1, -1);
    }

    sub_1ACCD90A8(v2, v29, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
    sub_1ACB5C498(*(void **)v29, (uint64_t)&v112);
    char v33 = v115;
    if (v115 != 255)
    {
      uint64_t v35 = v113;
      uint64_t v34 = v114;
      long long v97 = v112;
      uint64_t v36 = *(void *)(v29 + 32);
      uint64_t v37 = *(void **)(v29 + 40);
      uint64_t v38 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain();
      id v39 = v37;
      sub_1ACCDE908(v29, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
      long long v98 = v97;
      uint64_t v99 = v35;
      uint64_t v100 = v34;
      char v101 = v33;
      *(void *)&long long v102 = v37;
      *((void *)&v102 + 1) = v38;
      v103[0] = v36;
      memset(&v103[1], 0, 80);
      char v105 = 0;
      __int16 v104 = 2;
      uint64_t v106 = 0;
      uint64_t v107 = 0;
      __int16 v108 = 2;
      long long v110 = 0u;
      long long v109 = 0u;
      char v111 = -1;
      nullsub_1(&v98);
      return sub_1ACABEE1C((uint64_t)&v98, a1);
    }
    sub_1ACCDE908(v29, (uint64_t (*)(void))type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext);
LABEL_17:
    sub_1ACA62728((uint64_t)&v98);
    return sub_1ACABEE1C((uint64_t)&v98, a1);
  }
  uint64_t v40 = (int *)v97;
  sub_1ACA3AAD4(v2 + *(int *)(v97 + 44), (uint64_t)v6, &qword_1E99F4FB8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v93 + 48))(v6, 1, v94) == 1)
  {
    sub_1ACA50E78((uint64_t)v6, &qword_1E99F4FB8);
    uint64_t v41 = v40[12];
    if (*(void *)(*(void *)(v2 + v41) + 16))
    {
      uint64_t v42 = sub_1ACE75498();
      os_log_type_t v43 = sub_1ACE76C08();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl(&dword_1AC9D5000, v42, v43, "􀒖 Using restorable snapshot", v44, 2u);
        MEMORY[0x1AD11B340](v44, -1, -1);
      }

      long long v98 = *(unint64_t *)(v2 + v41);
      uint64_t v99 = 0;
      uint64_t v100 = 0;
      char v101 = 5;
      long long v45 = 0uLL;
      long long v102 = 0u;
      memset(v103, 0, sizeof(v103));
      char v105 = 0;
      __int16 v104 = 2;
      uint64_t v106 = 0;
      uint64_t v107 = 0;
      __int16 v108 = 2;
      long long v110 = 0u;
      unsigned __int8 v46 = (char *)&v90 + 1;
    }
    else
    {
      uint64_t v72 = v40[17];
      if (!*(void *)(*(void *)(v2 + v72) + 16)) {
        goto LABEL_17;
      }
      uint64_t v73 = sub_1ACE75498();
      os_log_type_t v74 = sub_1ACE76C08();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v75 = 0;
        _os_log_impl(&dword_1AC9D5000, v73, v74, "􀒖 Using identifiers from media query", v75, 2u);
        MEMORY[0x1AD11B340](v75, -1, -1);
      }

      uint64_t v76 = v2 + v40[18];
      uint64_t v77 = *(void *)v76;
      uint64_t v78 = *(unsigned __int8 *)(v76 + 8);
      *(void *)&long long v98 = *(void *)(v2 + v72);
      *((void *)&v98 + 1) = v77;
      uint64_t v99 = v78;
      uint64_t v100 = 0;
      char v101 = 6;
      long long v45 = 0uLL;
      long long v102 = 0u;
      memset(v103, 0, sizeof(v103));
      char v105 = 0;
      __int16 v104 = 2;
      uint64_t v106 = 0;
      uint64_t v107 = 0;
      __int16 v108 = 2;
      long long v109 = 0u;
      unsigned __int8 v46 = (char *)&v92 + 1;
    }
    *(_OWORD *)(v46 + 255) = v45;
    char v111 = -1;
    nullsub_1(&v98);
    sub_1ACABEE1C((uint64_t)&v98, a1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v91 = v2;
    uint64_t v92 = a1;
    sub_1ACCD9110((uint64_t)v6, (uint64_t)v9, type metadata accessor for PlaybackIntent);
    id v48 = sub_1ACE75498();
    os_log_type_t v49 = sub_1ACE76C08();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_1AC9D5000, v48, v49, "􀒖 Using intent", v50, 2u);
      MEMORY[0x1AD11B340](v50, -1, -1);
    }

    uint64_t v51 = *((void *)v9 + 1);
    uint64_t v93 = *(void *)v9;
    uint64_t v52 = *((void *)v9 + 3);
    uint64_t v89 = *((void *)v9 + 2);
    double v90 = (unsigned char *)v51;
    uint64_t v88 = v52;
    uint64_t v53 = *((void *)v9 + 5);
    uint64_t v85 = *((void *)v9 + 6);
    uint64_t v54 = v85;
    uint64_t v86 = v53;
    uint64_t v55 = *((void *)v9 + 7);
    uint64_t v56 = *((void *)v9 + 8);
    uint64_t v58 = *((void *)v9 + 10);
    uint64_t v83 = *((void *)v9 + 9);
    uint64_t v57 = v83;
    uint64_t v84 = v56;
    uint64_t v59 = *((void *)v9 + 11);
    uint64_t v60 = *((void *)v9 + 13);
    uint64_t v81 = *((void *)v9 + 12);
    uint64_t v82 = v59;
    uint64_t v94 = *((void *)v9 + 14);
    uint64_t v61 = v94;
    LODWORD(v95) = v9[122];
    LODWORD(v96) = *((unsigned __int16 *)v9 + 60);
    unsigned int v80 = v96 | (v95 << 16);
    unsigned __int8 v62 = v9[32];
    int v87 = v62;
    sub_1ACA639E4(v93, v51, v89, v52, v62);
    char v63 = v56;
    uint64_t v64 = v57;
    uint64_t v65 = v81;
    uint64_t v66 = v82;
    sub_1ACA63A5C(v53, v54, v55, v63, v64, v58, v82, v81, v60, v61, v80);
    sub_1ACCDE908((uint64_t)v9, type metadata accessor for PlaybackIntent);
    uint64_t v67 = v91 + *(int *)(v97 + 76);
    uint64_t v68 = *(void *)v67;
    uint64_t v69 = *(void *)(v67 + 8);
    uint64_t v70 = *(void *)(v67 + 16);
    uint64_t v71 = *(void *)(v67 + 24);
    *(void *)&long long v98 = v93;
    *((void *)&v98 + 1) = v90;
    uint64_t v99 = v89;
    uint64_t v100 = v88;
    char v101 = v87;
    long long v102 = 0uLL;
    v103[0] = 0;
    v103[1] = v86;
    v103[2] = v85;
    v103[3] = v55;
    v103[4] = v84;
    v103[5] = v83;
    v103[6] = v58;
    v103[7] = v66;
    v103[8] = v65;
    v103[9] = v60;
    v103[10] = v94;
    char v105 = v95;
    __int16 v104 = (__int16)v96;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    LOBYTE(v55) = *(unsigned char *)(v67 + 32);
    __int16 v108 = 2;
    *(void *)&long long v109 = v68;
    *((void *)&v109 + 1) = v69;
    *(void *)&long long v110 = v70;
    *((void *)&v110 + 1) = v71;
    char v111 = v55;
    nullsub_1(&v98);
    sub_1ACABEE1C((uint64_t)&v98, v92);
    return sub_1ACA63B84(v68, v69, v70, v71, v55);
  }
}

id sub_1ACCD8990(void *a1)
{
  if (!a1[2]) {
    return 0;
  }
  uint64_t v1 = a1[4];
  uint64_t v2 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v2;
  URLTrackIdentifier.init(string:)(v3);
  if (v4)
  {

    return 0;
  }
  if (!v31[0]) {
    return 0;
  }
  if (!*(void *)(v31[0] + 16)) {
    goto LABEL_17;
  }
  unint64_t v5 = sub_1ACA66344(0x10u);
  if ((v6 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v7 = (uint64_t *)(*(void *)(v31[0] + 56) + 16 * v5);
  uint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  swift_bridgeObjectRetain();
  id result = (id)swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  uint64_t v11 = HIBYTE(v8) & 0xF;
  uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!((v8 & 0x2000000000000000) != 0 ? HIBYTE(v8) & 0xF : v9 & 0xFFFFFFFFFFFFLL))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    uint64_t v15 = sub_1ACCCEEB0(v9, v8, 10);
    char v17 = v30;
    goto LABEL_53;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0) {
      uint64_t v14 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v14 = (unsigned __int8 *)sub_1ACE77388();
    }
    uint64_t v15 = (uint64_t)sub_1ACCCEE80(v14, v12, 10);
    char v17 = v16 & 1;
    goto LABEL_53;
  }
  v31[0] = v9;
  v31[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (v9 == 43)
  {
    if (!v11)
    {
LABEL_65:
      __break(1u);
      return result;
    }
    if (v11 == 1 || (BYTE1(v9) - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v15 = (BYTE1(v9) - 48);
    if (v11 != 2)
    {
      if ((BYTE2(v9) - 48) > 9u) {
        goto LABEL_40;
      }
      uint64_t v15 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
      uint64_t v18 = v11 - 3;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v31 + 3;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_40;
          }
          uint64_t v21 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            goto LABEL_40;
          }
          uint64_t v15 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_40;
          }
          char v17 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    char v17 = 0;
    goto LABEL_53;
  }
  if (v9 != 45)
  {
    if (!v11 || (v9 - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v15 = (v9 - 48);
    if (v11 != 1)
    {
      if ((BYTE1(v9) - 48) > 9u) {
        goto LABEL_40;
      }
      uint64_t v15 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
      uint64_t v22 = v11 - 2;
      if (v22)
      {
        uint64_t v23 = (unsigned __int8 *)v31 + 2;
        while (1)
        {
          unsigned int v24 = *v23 - 48;
          if (v24 > 9) {
            goto LABEL_40;
          }
          uint64_t v25 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
            goto LABEL_40;
          }
          uint64_t v15 = v25 + v24;
          if (__OFADD__(v25, v24)) {
            goto LABEL_40;
          }
          char v17 = 0;
          ++v23;
          if (!--v22) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_52;
  }
  if (!v11)
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v11 == 1 || (BYTE1(v9) - 48) > 9u) {
    goto LABEL_40;
  }
  if (v11 != 2)
  {
    if ((BYTE2(v9) - 48) <= 9u)
    {
      uint64_t v15 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
      uint64_t v26 = v11 - 3;
      if (!v26) {
        goto LABEL_52;
      }
      uint64_t v27 = (unsigned __int8 *)v31 + 3;
      while (1)
      {
        unsigned int v28 = *v27 - 48;
        if (v28 > 9) {
          break;
        }
        uint64_t v29 = 10 * v15;
        if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63) {
          break;
        }
        uint64_t v15 = v29 - v28;
        if (__OFSUB__(v29, v28)) {
          break;
        }
        char v17 = 0;
        ++v27;
        if (!--v26) {
          goto LABEL_53;
        }
      }
    }
LABEL_40:
    uint64_t v15 = 0;
    char v17 = 1;
    goto LABEL_53;
  }
  char v17 = 0;
  uint64_t v15 = -(uint64_t)(BYTE1(v9) - 48);
LABEL_53:
  swift_bridgeObjectRelease();
  if (v17) {
    return 0;
  }
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v15);
}

uint64_t sub_1ACCD8CEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (void **)(swift_bridgeObjectRetain() + 40);
    Swift::String v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v5 = (uint64_t)*(v2 - 1);
      uint64_t v4 = *v2;
      swift_bridgeObjectRetain_n();
      v6._uint64_t countAndFlagsBits = v5;
      v6._object = v4;
      URLTrackIdentifier.init(string:)(v6);
      if (v7)
      {

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v44)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v3 = sub_1ACA430F0(0, v3[2] + 1, 1, v3);
          }
          unint64_t v9 = v3[2];
          unint64_t v8 = v3[3];
          if (v9 >= v8 >> 1) {
            Swift::String v3 = sub_1ACA430F0((void *)(v8 > 1), v9 + 1, 1, v3);
          }
          v3[2] = v9 + 1;
          uint64_t v10 = &v3[2 * v9];
          v10[4] = v44;
          *((unsigned char *)v10 + 40) = v46;
        }
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v11 = v3[2];
    if (v11) {
      goto LABEL_13;
    }
LABEL_41:
    uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
LABEL_42:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  Swift::String v3 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v11) {
    goto LABEL_41;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v13 = 4;
  while (1)
  {
    uint64_t v14 = v3[v13];
    if (!*(void *)(v14 + 16)) {
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1ACA66344(3u);
    if (v16)
    {
      char v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
      uint64_t v18 = v17[1];
      if (v18)
      {
        if (*(void *)(v14 + 16)) {
          break;
        }
      }
    }
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    v13 += 2;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
  uint64_t v19 = *v17;
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1ACA66344(7u);
  if ((v21 & 1) == 0 || (v22 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v20), (uint64_t v23 = v22[1]) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v24 = *v22;
  if (v12[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA657FC(v19, v18);
    if (v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    uint64_t v42 = v24;
    uint64_t v43 = v23;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = *v22;
    uint64_t v43 = v22[1];
    swift_bridgeObjectRetain();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v45 = v12;
  unint64_t v27 = sub_1ACA657FC(v19, v18);
  uint64_t v29 = v12[2];
  BOOL v30 = (v28 & 1) == 0;
  BOOL v31 = __OFADD__(v29, v30);
  uint64_t v32 = v29 + v30;
  if (!v31)
  {
    char v33 = v28;
    if (v12[3] >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v40 = v27;
        sub_1ACD06660();
        unint64_t v27 = v40;
      }
    }
    else
    {
      sub_1ACCFD548(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_1ACA657FC(v19, v18);
      if ((v33 & 1) != (v34 & 1)) {
        goto LABEL_45;
      }
    }
    uint64_t v12 = v45;
    if (v33)
    {
      uint64_t v35 = (void *)(v45[7] + 16 * v27);
      swift_bridgeObjectRelease();
      void *v35 = v42;
      v35[1] = v43;
    }
    else
    {
      v45[(v27 >> 6) + 8] |= 1 << v27;
      uint64_t v36 = (uint64_t *)(v45[6] + 16 * v27);
      uint64_t *v36 = v19;
      v36[1] = v18;
      uint64_t v37 = (void *)(v45[7] + 16 * v27);
      *uint64_t v37 = v42;
      v37[1] = v43;
      uint64_t v38 = v45[2];
      BOOL v31 = __OFADD__(v38, 1);
      uint64_t v39 = v38 + 1;
      if (v31) {
        goto LABEL_44;
      }
      void v45[2] = v39;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACCD90A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACCD9110(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1ACCD917C()
{
  unint64_t result = qword_1E99F4FC0;
  if (!qword_1E99F4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4FC0);
  }
  return result;
}

uint64_t _s20PlaybackQueueContextVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v18 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v5;
    Swift::String v6 = (void *)a2[5];
    uint64_t v7 = (void *)a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    unint64_t v9 = (void *)a2[7];
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v8;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a3[11];
    v223 = (void *)(a1 + v11);
    v220 = (uint64_t *)((char *)a2 + v11);
    *(void *)(a1 + 88) = a2[11];
    uint64_t v12 = (int *)type metadata accessor for PlaybackIntent(0);
    v213 = (void *)*((void *)v12 - 1);
    v217 = (unsigned int (*)(void *, uint64_t, int *))v213[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v6;
    id v14 = v7;
    id v15 = v9;
    char v16 = v220;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v217(v220, 1, v12))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
      memcpy(v223, v220, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *v220;
      uint64_t v20 = v220[1];
      uint64_t v21 = v220[2];
      uint64_t v22 = v220[3];
      unsigned __int8 v23 = *((unsigned char *)v220 + 32);
      sub_1ACA639E4(*v220, v20, v21, v22, v23);
      void *v223 = v19;
      v223[1] = v20;
      v223[2] = v21;
      v223[3] = v22;
      *((unsigned char *)v223 + 32) = v23;
      if (*((unsigned char *)v220 + 120) == 2)
      {
        uint64_t v24 = v223;
        long long v25 = *(_OWORD *)(v220 + 11);
        *(_OWORD *)(v223 + 9) = *(_OWORD *)(v220 + 9);
        *(_OWORD *)(v223 + 11) = v25;
        *(_OWORD *)(v223 + 13) = *(_OWORD *)(v220 + 13);
        *(_DWORD *)((char *)v223 + 119) = *(_DWORD *)((char *)v220 + 119);
        long long v26 = *(_OWORD *)(v220 + 7);
        *(_OWORD *)(v223 + 5) = *(_OWORD *)(v220 + 5);
        *(_OWORD *)(v223 + 7) = v26;
      }
      else
      {
        uint64_t v27 = v220[5];
        uint64_t v28 = v220[6];
        uint64_t v29 = v220[7];
        uint64_t v30 = v220[8];
        uint64_t v32 = v220[9];
        uint64_t v31 = v220[10];
        v218 = v12;
        uint64_t v33 = v220[11];
        uint64_t v34 = v220[12];
        char v35 = *((unsigned char *)v220 + 104);
        sub_1ACA63A78(v27, v28, v29, v30, v32, v31, v33, v34, v35);
        v223[5] = v27;
        uint64_t v24 = v223;
        v223[6] = v28;
        v223[7] = v29;
        v223[8] = v30;
        v223[9] = v32;
        v223[10] = v31;
        v223[11] = v33;
        v223[12] = v34;
        uint64_t v12 = v218;
        *((unsigned char *)v223 + 104) = v35;
        char v16 = v220;
        *((unsigned char *)v223 + 105) = *((unsigned char *)v220 + 105);
        v223[14] = v220[14];
        *((unsigned char *)v223 + 120) = *((unsigned char *)v220 + 120);
        *(_WORD *)((char *)v223 + 121) = *(_WORD *)((char *)v220 + 121);
      }
      uint64_t v36 = v213;
      uint64_t v37 = v12[6];
      uint64_t v38 = (void *)((char *)v24 + v37);
      uint64_t v39 = (void *)((char *)v16 + v37);
      unint64_t v40 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      uint64_t v41 = *((void *)v40 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v41 + 48))(v39, 1, v40))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v204 = v41;
        v219 = v12;
        uint64_t v43 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v43;
        uint64_t v44 = v39[3];
        long long v38[2] = v39[2];
        v38[3] = v44;
        uint64_t v45 = v39[5];
        v38[4] = v39[4];
        v38[5] = v45;
        v38[6] = v39[6];
        *((unsigned char *)v38 + 56) = *((unsigned char *)v39 + 56);
        uint64_t v46 = v39[8];
        *((unsigned char *)v38 + 72) = *((unsigned char *)v39 + 72);
        v38[8] = v46;
        uint64_t v47 = v39[11];
        v38[10] = v39[10];
        v38[11] = v47;
        uint64_t v48 = v39[13];
        v38[12] = v39[12];
        v38[13] = v48;
        uint64_t v49 = v39[15];
        v38[14] = v39[14];
        v38[15] = v49;
        uint64_t v50 = v40[12];
        __dst = (char *)v38 + v50;
        v205 = (char *)v39 + v50;
        uint64_t v51 = sub_1ACE74F28();
        uint64_t v211 = *(void *)(v51 - 8);
        uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v52(v205, 1, v51))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(__dst, v205, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v211 + 16))(__dst, v205, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(__dst, 0, 1, v51);
        }
        uint64_t v54 = v40[13];
        uint64_t v55 = (void *)((char *)v38 + v54);
        uint64_t v56 = (void *)((char *)v39 + v54);
        uint64_t v57 = v56[1];
        *uint64_t v55 = *v56;
        v55[1] = v57;
        *(void *)((char *)v38 + v40[14]) = *(void *)((char *)v39 + v40[14]);
        uint64_t v58 = v40[15];
        uint64_t v59 = (char *)v38 + v58;
        uint64_t v60 = (char *)v39 + v58;
        *(void *)uint64_t v59 = *(void *)v60;
        v59[8] = v60[8];
        uint64_t v61 = v40[16];
        unsigned __int8 v62 = (char *)v38 + v61;
        char v63 = (char *)v39 + v61;
        swift_bridgeObjectRetain();
        uint64_t v209 = v51;
        v207 = v52;
        if (v52(v63, 1, v51))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v62, v63, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(v62, 0, 1, v51);
        }
        uint64_t v65 = v40[17];
        uint64_t v66 = (void *)((char *)v38 + v65);
        uint64_t v67 = (void *)((char *)v39 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        *(void *)((char *)v38 + v40[18]) = *(void *)((char *)v39 + v40[18]);
        *((unsigned char *)v38 + v40[19]) = *((unsigned char *)v39 + v40[19]);
        uint64_t v69 = v40[20];
        v206 = (char *)v38 + v69;
        uint64_t v70 = (char *)v39 + v69;
        uint64_t v71 = sub_1ACE750A8();
        uint64_t v72 = *(void *)(v71 - 8);
        uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v73(v70, 1, v71))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v206, v70, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v206, v70, v71);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v206, 0, 1, v71);
        }
        uint64_t v36 = v213;
        uint64_t v75 = v40[21];
        uint64_t v76 = (void *)((char *)v38 + v75);
        uint64_t v77 = (void *)((char *)v39 + v75);
        uint64_t v78 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v78;
        *((unsigned char *)v38 + v40[22]) = *((unsigned char *)v39 + v40[22]);
        *((unsigned char *)v38 + v40[23]) = *((unsigned char *)v39 + v40[23]);
        *((unsigned char *)v38 + v40[24]) = *((unsigned char *)v39 + v40[24]);
        *((unsigned char *)v38 + v40[25]) = *((unsigned char *)v39 + v40[25]);
        *((unsigned char *)v38 + v40[26]) = *((unsigned char *)v39 + v40[26]);
        *((unsigned char *)v38 + v40[27]) = *((unsigned char *)v39 + v40[27]);
        *((unsigned char *)v38 + v40[28]) = *((unsigned char *)v39 + v40[28]);
        *(void *)((char *)v38 + v40[29]) = *(void *)((char *)v39 + v40[29]);
        *(void *)((char *)v38 + v40[30]) = *(void *)((char *)v39 + v40[30]);
        *((unsigned char *)v38 + v40[31]) = *((unsigned char *)v39 + v40[31]);
        uint64_t v79 = v40[32];
        unsigned int v80 = (void *)((char *)v38 + v79);
        uint64_t v81 = (void *)((char *)v39 + v79);
        uint64_t v82 = v81[1];
        *unsigned int v80 = *v81;
        v80[1] = v82;
        *(void *)((char *)v38 + v40[33]) = *(void *)((char *)v39 + v40[33]);
        uint64_t v83 = v40[34];
        uint64_t v84 = (void *)((char *)v38 + v83);
        uint64_t v85 = (void *)((char *)v39 + v83);
        uint64_t v86 = v85[1];
        *uint64_t v84 = *v85;
        v84[1] = v86;
        uint64_t v87 = v40[35];
        uint64_t v88 = (void *)((char *)v38 + v87);
        uint64_t v89 = (void *)((char *)v39 + v87);
        uint64_t v90 = v89[1];
        *uint64_t v88 = *v89;
        v88[1] = v90;
        uint64_t v91 = v40[36];
        v214 = (char *)v38 + v91;
        uint64_t v92 = (char *)v39 + v91;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v207(v92, 1, v209))
        {
          uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v214, v92, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v214, v92, v209);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(v214, 0, 1, v209);
        }
        uint64_t v12 = v219;
        uint64_t v94 = v40[37];
        uint64_t v95 = (void *)((char *)v38 + v94);
        int64_t v96 = (void *)((char *)v39 + v94);
        uint64_t v97 = v96[1];
        *uint64_t v95 = *v96;
        v95[1] = v97;
        uint64_t v98 = v40[38];
        uint64_t v99 = (void *)((char *)v38 + v98);
        uint64_t v100 = (void *)((char *)v39 + v98);
        uint64_t v101 = v100[1];
        *uint64_t v99 = *v100;
        v99[1] = v101;
        *((unsigned char *)v38 + v40[39]) = *((unsigned char *)v39 + v40[39]);
        *((unsigned char *)v38 + v40[40]) = *((unsigned char *)v39 + v40[40]);
        *((unsigned char *)v38 + v40[41]) = *((unsigned char *)v39 + v40[41]);
        *((unsigned char *)v38 + v40[42]) = *((unsigned char *)v39 + v40[42]);
        *((unsigned char *)v38 + v40[43]) = *((unsigned char *)v39 + v40[43]);
        *((unsigned char *)v38 + v40[44]) = *((unsigned char *)v39 + v40[44]);
        *((unsigned char *)v38 + v40[45]) = *((unsigned char *)v39 + v40[45]);
        uint64_t v102 = v40[46];
        uint64_t v103 = (void *)((char *)v38 + v102);
        __int16 v104 = (void *)((char *)v39 + v102);
        uint64_t v105 = v104[1];
        *uint64_t v103 = *v104;
        v103[1] = v105;
        uint64_t v106 = *(void (**)(void *, void, uint64_t, int *))(v204 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106(v38, 0, 1, v40);
        char v16 = v220;
        uint64_t v24 = v223;
      }
      *(void *)((char *)v24 + v12[7]) = *(void *)((char *)v16 + v12[7]);
      uint64_t v107 = v12[8];
      __int16 v108 = (void *)((char *)v24 + v107);
      long long v109 = (void *)((char *)v16 + v107);
      uint64_t v110 = v109[1];
      void *v108 = *v109;
      v108[1] = v110;
      char v111 = (void (*)(void *, void, uint64_t, int *))v36[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111(v24, 0, 1, v12);
    }
    uint64_t v18 = a1;
    long long v112 = a2;
    uint64_t v113 = a3[13];
    *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)(a1 + v113) = *(uint64_t *)((char *)a2 + v113);
    uint64_t v114 = a3[14];
    unsigned __int8 v115 = (void *)(a1 + v114);
    uint64_t v116 = (uint64_t *)((char *)a2 + v114);
    uint64_t v117 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v118 = *((void *)v117 - 1);
    int v119 = *(unsigned int (**)(void *, uint64_t, int *))(v118 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v119(v116, 1, v117))
    {
      uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v115, v116, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      uint64_t v212 = v118;
      uint64_t v121 = v116[1];
      void *v115 = *v116;
      v115[1] = v121;
      uint64_t v122 = v116[3];
      v115[2] = v116[2];
      v115[3] = v122;
      uint64_t v123 = v116[5];
      v115[4] = v116[4];
      v115[5] = v123;
      v115[6] = v116[6];
      *((unsigned char *)v115 + 56) = *((unsigned char *)v116 + 56);
      uint64_t v124 = v116[8];
      *((unsigned char *)v115 + 72) = *((unsigned char *)v116 + 72);
      v115[8] = v124;
      uint64_t v125 = v116[11];
      v115[10] = v116[10];
      v115[11] = v125;
      uint64_t v126 = v116[13];
      v115[12] = v116[12];
      v115[13] = v126;
      uint64_t v127 = v116[15];
      v115[14] = v116[14];
      v115[15] = v127;
      uint64_t v128 = v117[12];
      v208 = (char *)v115 + v128;
      v215 = (char *)v116 + v128;
      uint64_t v129 = sub_1ACE74F28();
      uint64_t v224 = *(void *)(v129 - 8);
      uint64_t v130 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v130(v215, 1, v129))
      {
        uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v208, v215, *(void *)(*(void *)(v131 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v208, v215, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v208, 0, 1, v129);
      }
      uint64_t v132 = v117[13];
      uint64_t v133 = (void *)((char *)v115 + v132);
      uint64_t v134 = (void *)((char *)v116 + v132);
      uint64_t v135 = v134[1];
      *uint64_t v133 = *v134;
      v133[1] = v135;
      *(void *)((char *)v115 + v117[14]) = *(void *)((char *)v116 + v117[14]);
      uint64_t v136 = v117[15];
      uint64_t v137 = (char *)v115 + v136;
      BOOL v138 = (char *)v116 + v136;
      *(void *)uint64_t v137 = *(void *)v138;
      v137[8] = v138[8];
      uint64_t v139 = v117[16];
      char v140 = (char *)v115 + v139;
      uint64_t v141 = (char *)v116 + v139;
      swift_bridgeObjectRetain();
      uint64_t v210 = v129;
      if (v130(v141, 1, v129))
      {
        uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v140, v141, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v140, 0, 1, v129);
      }
      uint64_t v143 = v117[17];
      v144 = (void *)((char *)v115 + v143);
      uint64_t v145 = (void *)((char *)v116 + v143);
      uint64_t v146 = v145[1];
      void *v144 = *v145;
      v144[1] = v146;
      *(void *)((char *)v115 + v117[18]) = *(void *)((char *)v116 + v117[18]);
      *((unsigned char *)v115 + v117[19]) = *((unsigned char *)v116 + v117[19]);
      uint64_t v147 = v117[20];
      v216 = (char *)v115 + v147;
      uint64_t v148 = (char *)v116 + v147;
      uint64_t v149 = sub_1ACE750A8();
      uint64_t v150 = *(void *)(v149 - 8);
      uint64_t v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v151(v148, 1, v149))
      {
        uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(v216, v148, *(void *)(*(void *)(v152 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v216, v148, v149);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v216, 0, 1, v149);
      }
      uint64_t v153 = v117[21];
      int64_t v154 = (void *)((char *)v115 + v153);
      uint64_t v155 = (void *)((char *)v116 + v153);
      uint64_t v156 = v155[1];
      *int64_t v154 = *v155;
      v154[1] = v156;
      *((unsigned char *)v115 + v117[22]) = *((unsigned char *)v116 + v117[22]);
      *((unsigned char *)v115 + v117[23]) = *((unsigned char *)v116 + v117[23]);
      *((unsigned char *)v115 + v117[24]) = *((unsigned char *)v116 + v117[24]);
      *((unsigned char *)v115 + v117[25]) = *((unsigned char *)v116 + v117[25]);
      *((unsigned char *)v115 + v117[26]) = *((unsigned char *)v116 + v117[26]);
      *((unsigned char *)v115 + v117[27]) = *((unsigned char *)v116 + v117[27]);
      *((unsigned char *)v115 + v117[28]) = *((unsigned char *)v116 + v117[28]);
      *(void *)((char *)v115 + v117[29]) = *(void *)((char *)v116 + v117[29]);
      *(void *)((char *)v115 + v117[30]) = *(void *)((char *)v116 + v117[30]);
      *((unsigned char *)v115 + v117[31]) = *((unsigned char *)v116 + v117[31]);
      uint64_t v157 = v117[32];
      v158 = (void *)((char *)v115 + v157);
      uint64_t v159 = (void *)((char *)v116 + v157);
      uint64_t v160 = v159[1];
      void *v158 = *v159;
      v158[1] = v160;
      *(void *)((char *)v115 + v117[33]) = *(void *)((char *)v116 + v117[33]);
      uint64_t v161 = v117[34];
      uint64_t v162 = (void *)((char *)v115 + v161);
      uint64_t v163 = (void *)((char *)v116 + v161);
      uint64_t v164 = v163[1];
      *uint64_t v162 = *v163;
      v162[1] = v164;
      uint64_t v165 = v117[35];
      uint64_t v166 = (void *)((char *)v115 + v165);
      uint64_t v167 = (void *)((char *)v116 + v165);
      uint64_t v168 = v167[1];
      *uint64_t v166 = *v167;
      v166[1] = v168;
      uint64_t v169 = v117[36];
      uint64_t v170 = (char *)v115 + v169;
      unint64_t v171 = (char *)v116 + v169;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v130(v171, 1, v210))
      {
        uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v170, v171, v210);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v170, 0, 1, v210);
      }
      uint64_t v173 = v117[37];
      uint64_t v174 = (void *)((char *)v115 + v173);
      unint64_t v175 = (void *)((char *)v116 + v173);
      uint64_t v176 = v175[1];
      *uint64_t v174 = *v175;
      v174[1] = v176;
      uint64_t v177 = v117[38];
      v178 = (void *)((char *)v115 + v177);
      v179 = (void *)((char *)v116 + v177);
      uint64_t v180 = v179[1];
      void *v178 = *v179;
      v178[1] = v180;
      *((unsigned char *)v115 + v117[39]) = *((unsigned char *)v116 + v117[39]);
      *((unsigned char *)v115 + v117[40]) = *((unsigned char *)v116 + v117[40]);
      *((unsigned char *)v115 + v117[41]) = *((unsigned char *)v116 + v117[41]);
      *((unsigned char *)v115 + v117[42]) = *((unsigned char *)v116 + v117[42]);
      *((unsigned char *)v115 + v117[43]) = *((unsigned char *)v116 + v117[43]);
      *((unsigned char *)v115 + v117[44]) = *((unsigned char *)v116 + v117[44]);
      *((unsigned char *)v115 + v117[45]) = *((unsigned char *)v116 + v117[45]);
      uint64_t v181 = v117[46];
      uint64_t v182 = (void *)((char *)v115 + v181);
      uint64_t v183 = (void *)((char *)v116 + v181);
      uint64_t v184 = v183[1];
      *uint64_t v182 = *v183;
      v182[1] = v184;
      uint64_t v185 = *(void (**)(void *, void, uint64_t, int *))(v212 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v185(v115, 0, 1, v117);
      uint64_t v18 = a1;
      long long v112 = a2;
    }
    uint64_t v186 = a3[15];
    uint64_t v187 = a3[16];
    uint64_t v188 = v18 + v186;
    uint64_t v189 = (uint64_t)v112 + v186;
    *(void *)uint64_t v188 = *(void *)v189;
    *(unsigned char *)(v188 + 8) = *(unsigned char *)(v189 + 8);
    *(unsigned char *)(v18 + v187) = *((unsigned char *)v112 + v187);
    uint64_t v190 = a3[18];
    *(void *)(v18 + a3[17]) = *(uint64_t *)((char *)v112 + a3[17]);
    uint64_t v191 = v18 + v190;
    uint64_t v192 = (uint64_t)v112 + v190;
    *(void *)uint64_t v191 = *(void *)v192;
    *(unsigned char *)(v191 + 8) = *(unsigned char *)(v192 + 8);
    uint64_t v193 = a3[19];
    uint64_t v194 = v18 + v193;
    uint64_t v195 = (uint64_t)v112 + v193;
    int v196 = *((unsigned __int8 *)v112 + v193 + 32);
    swift_bridgeObjectRetain();
    if (v196 == 255)
    {
      long long v201 = *(_OWORD *)(v195 + 16);
      *(_OWORD *)uint64_t v194 = *(_OWORD *)v195;
      *(_OWORD *)(v194 + 16) = v201;
      *(unsigned char *)(v194 + 32) = *(unsigned char *)(v195 + 32);
    }
    else
    {
      uint64_t v197 = *(void *)v195;
      uint64_t v198 = *(void *)(v195 + 8);
      uint64_t v199 = *(void *)(v195 + 16);
      uint64_t v200 = *(void *)(v195 + 24);
      sub_1ACA639E4(v197, v198, v199, v200, v196);
      *(void *)uint64_t v194 = v197;
      *(void *)(v194 + 8) = v198;
      *(void *)(v194 + 16) = v199;
      *(void *)(v194 + 24) = v200;
      *(unsigned char *)(v194 + 32) = v196;
    }
  }
  return v18;
}

uint64_t _s20PlaybackQueueContextVwxx(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[11];
  uint64_t v5 = type metadata accessor for PlaybackIntent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1ACA63688(*(void *)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((void *)v4 + 3), v4[32]);
    if (v4[120] != 2) {
      sub_1ACA63738(*((void *)v4 + 5), *((void *)v4 + 6), *((void *)v4 + 7), *((void *)v4 + 8), *((void *)v4 + 9), *((void *)v4 + 10), *((void *)v4 + 11), *((void *)v4 + 12), v4[104]);
    }
    Swift::String v6 = &v4[*(int *)(v5 + 24)];
    uint64_t v7 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = &v6[v7[12]];
      uint64_t v9 = sub_1ACE74F28();
      uint64_t v35 = *(void *)(v9 - 8);
      uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      if (!v10(v8, 1, v9)) {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      uint64_t v11 = &v6[v7[16]];
      if (!v10(v11, 1, v9)) {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
      }
      uint64_t v34 = v9;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v12 = &v6[v7[20]];
      uint64_t v13 = sub_1ACE750A8();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v15 = &v6[v7[36]];
      if (!v10(v15, 1, v34)) {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v34);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  char v16 = (char *)a1 + a2[14];
  uint64_t v17 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v17 - 1) + 48))(v16, 1, v17))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = &v16[v17[12]];
    uint64_t v19 = sub_1ACE74F28();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (!v21(v18, 1, v19)) {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = &v16[v17[16]];
    if (!v21(v22, 1, v19)) {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
    uint64_t v36 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    unsigned __int8 v23 = &v16[v17[20]];
    uint64_t v24 = sub_1ACE750A8();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v26 = &v16[v17[36]];
    if (!v21(v26, 1, v19)) {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v19);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = (char *)a1 + a2[19];
  int v29 = v28[32];
  if (v29 != 255)
  {
    uint64_t v30 = *(void *)v28;
    uint64_t v31 = *((void *)v28 + 1);
    uint64_t v32 = *((void *)v28 + 2);
    uint64_t v33 = *((void *)v28 + 3);
    return sub_1ACA63688(v30, v31, v32, v33, v29);
  }
  return result;
}

uint64_t _s20PlaybackQueueContextVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  Swift::String v6 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  uint64_t v8 = *(void **)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v7;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a3[11];
  v222 = (void *)(a1 + v10);
  v219 = (void *)(a2 + v10);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v11 = (int *)type metadata accessor for PlaybackIntent(0);
  v213 = (void *)*((void *)v11 - 1);
  v216 = (unsigned int (*)(void *, uint64_t, int *))v213[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v6;
  id v13 = v5;
  uint64_t v14 = v219;
  id v15 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v216(v219, 1, v11))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
    memcpy(v222, v219, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = *v219;
    uint64_t v18 = v219[1];
    uint64_t v19 = v219[2];
    uint64_t v20 = v219[3];
    unsigned __int8 v21 = *((unsigned char *)v219 + 32);
    sub_1ACA639E4(*v219, v18, v19, v20, v21);
    void *v222 = v17;
    v222[1] = v18;
    v222[2] = v19;
    v222[3] = v20;
    *((unsigned char *)v222 + 32) = v21;
    if (*((unsigned char *)v219 + 120) == 2)
    {
      uint64_t v22 = v222;
      long long v23 = *(_OWORD *)(v219 + 11);
      *(_OWORD *)(v222 + 9) = *(_OWORD *)(v219 + 9);
      *(_OWORD *)(v222 + 11) = v23;
      *(_OWORD *)(v222 + 13) = *(_OWORD *)(v219 + 13);
      *(_DWORD *)((char *)v222 + 119) = *(_DWORD *)((char *)v219 + 119);
      long long v24 = *(_OWORD *)(v219 + 7);
      *(_OWORD *)(v222 + 5) = *(_OWORD *)(v219 + 5);
      *(_OWORD *)(v222 + 7) = v24;
    }
    else
    {
      uint64_t v25 = v219[5];
      uint64_t v26 = v219[6];
      uint64_t v27 = v219[7];
      uint64_t v28 = v219[8];
      uint64_t v30 = v219[9];
      uint64_t v29 = v219[10];
      v217 = v11;
      uint64_t v31 = v219[11];
      uint64_t v32 = v219[12];
      char v33 = *((unsigned char *)v219 + 104);
      sub_1ACA63A78(v25, v26, v27, v28, v30, v29, v31, v32, v33);
      v222[5] = v25;
      uint64_t v22 = v222;
      v222[6] = v26;
      v222[7] = v27;
      v222[8] = v28;
      v222[9] = v30;
      v222[10] = v29;
      v222[11] = v31;
      uint64_t v11 = v217;
      v222[12] = v32;
      *((unsigned char *)v222 + 104) = v33;
      uint64_t v14 = v219;
      *((unsigned char *)v222 + 105) = *((unsigned char *)v219 + 105);
      v222[14] = v219[14];
      *((unsigned char *)v222 + 120) = *((unsigned char *)v219 + 120);
      *(_WORD *)((char *)v222 + 121) = *(_WORD *)((char *)v219 + 121);
    }
    uint64_t v34 = v213;
    uint64_t v35 = v11[6];
    uint64_t v36 = (void *)((char *)v22 + v35);
    uint64_t v37 = (void *)((char *)v14 + v35);
    uint64_t v38 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v39 = *((void *)v38 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v206 = v39;
      v218 = v11;
      uint64_t v41 = v37[1];
      void *v36 = *v37;
      v36[1] = v41;
      uint64_t v42 = v37[3];
      v36[2] = v37[2];
      v36[3] = v42;
      uint64_t v43 = v37[5];
      v36[4] = v37[4];
      v36[5] = v43;
      v36[6] = v37[6];
      *((unsigned char *)v36 + 56) = *((unsigned char *)v37 + 56);
      uint64_t v44 = v37[8];
      *((unsigned char *)v36 + 72) = *((unsigned char *)v37 + 72);
      v36[8] = v44;
      uint64_t v45 = v37[11];
      v36[10] = v37[10];
      v36[11] = v45;
      uint64_t v46 = v37[13];
      v36[12] = v37[12];
      v36[13] = v46;
      uint64_t v47 = v37[15];
      v36[14] = v37[14];
      v36[15] = v47;
      uint64_t v48 = v38[12];
      __dst = (char *)v36 + v48;
      v202 = (char *)v37 + v48;
      uint64_t v49 = sub_1ACE74F28();
      uint64_t v207 = *(void *)(v49 - 8);
      uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v209 = v50;
      if (v50(v202, 1, v49))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v202, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v207 + 16))(__dst, v202, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(__dst, 0, 1, v49);
      }
      uint64_t v52 = v38[13];
      uint64_t v53 = (void *)((char *)v36 + v52);
      uint64_t v54 = (void *)((char *)v37 + v52);
      uint64_t v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      *(void *)((char *)v36 + v38[14]) = *(void *)((char *)v37 + v38[14]);
      uint64_t v56 = v38[15];
      uint64_t v57 = (char *)v36 + v56;
      uint64_t v58 = (char *)v37 + v56;
      *(void *)uint64_t v57 = *(void *)v58;
      v57[8] = v58[8];
      uint64_t v59 = v38[16];
      uint64_t v60 = (char *)v36 + v59;
      uint64_t v61 = (char *)v37 + v59;
      swift_bridgeObjectRetain();
      uint64_t v205 = v49;
      if (v50(v61, 1, v49))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v60, v61, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v60, 0, 1, v49);
      }
      uint64_t v63 = v38[17];
      uint64_t v64 = (void *)((char *)v36 + v63);
      uint64_t v65 = (void *)((char *)v37 + v63);
      uint64_t v66 = v65[1];
      *uint64_t v64 = *v65;
      v64[1] = v66;
      *(void *)((char *)v36 + v38[18]) = *(void *)((char *)v37 + v38[18]);
      *((unsigned char *)v36 + v38[19]) = *((unsigned char *)v37 + v38[19]);
      uint64_t v67 = v38[20];
      __dsta = (char *)v36 + v67;
      uint64_t v68 = (char *)v37 + v67;
      uint64_t v69 = sub_1ACE750A8();
      uint64_t v70 = *(void *)(v69 - 8);
      uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v71(v68, 1, v69))
      {
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(__dsta, v68, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dsta, v68, v69);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(__dsta, 0, 1, v69);
      }
      uint64_t v34 = v213;
      uint64_t v73 = v38[21];
      uint64_t v74 = (void *)((char *)v36 + v73);
      uint64_t v75 = (void *)((char *)v37 + v73);
      uint64_t v76 = v75[1];
      void *v74 = *v75;
      v74[1] = v76;
      *((unsigned char *)v36 + v38[22]) = *((unsigned char *)v37 + v38[22]);
      *((unsigned char *)v36 + v38[23]) = *((unsigned char *)v37 + v38[23]);
      *((unsigned char *)v36 + v38[24]) = *((unsigned char *)v37 + v38[24]);
      *((unsigned char *)v36 + v38[25]) = *((unsigned char *)v37 + v38[25]);
      *((unsigned char *)v36 + v38[26]) = *((unsigned char *)v37 + v38[26]);
      *((unsigned char *)v36 + v38[27]) = *((unsigned char *)v37 + v38[27]);
      *((unsigned char *)v36 + v38[28]) = *((unsigned char *)v37 + v38[28]);
      *(void *)((char *)v36 + v38[29]) = *(void *)((char *)v37 + v38[29]);
      *(void *)((char *)v36 + v38[30]) = *(void *)((char *)v37 + v38[30]);
      *((unsigned char *)v36 + v38[31]) = *((unsigned char *)v37 + v38[31]);
      uint64_t v77 = v38[32];
      uint64_t v78 = (void *)((char *)v36 + v77);
      uint64_t v79 = (void *)((char *)v37 + v77);
      uint64_t v80 = v79[1];
      *uint64_t v78 = *v79;
      v78[1] = v80;
      *(void *)((char *)v36 + v38[33]) = *(void *)((char *)v37 + v38[33]);
      uint64_t v81 = v38[34];
      uint64_t v82 = (void *)((char *)v36 + v81);
      uint64_t v83 = (void *)((char *)v37 + v81);
      uint64_t v84 = v83[1];
      *uint64_t v82 = *v83;
      v82[1] = v84;
      uint64_t v85 = v38[35];
      uint64_t v86 = (void *)((char *)v36 + v85);
      uint64_t v87 = (void *)((char *)v37 + v85);
      uint64_t v88 = v87[1];
      *uint64_t v86 = *v87;
      v86[1] = v88;
      uint64_t v89 = v38[36];
      v214 = (char *)v36 + v89;
      uint64_t v90 = (char *)v37 + v89;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v209(v90, 1, v205))
      {
        uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v214, v90, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v214, v90, v205);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v214, 0, 1, v205);
      }
      uint64_t v92 = v38[37];
      uint64_t v93 = (void *)((char *)v36 + v92);
      uint64_t v94 = (void *)((char *)v37 + v92);
      uint64_t v95 = v94[1];
      *uint64_t v93 = *v94;
      v93[1] = v95;
      uint64_t v96 = v38[38];
      uint64_t v97 = (void *)((char *)v36 + v96);
      uint64_t v98 = (void *)((char *)v37 + v96);
      uint64_t v99 = v98[1];
      *uint64_t v97 = *v98;
      v97[1] = v99;
      *((unsigned char *)v36 + v38[39]) = *((unsigned char *)v37 + v38[39]);
      *((unsigned char *)v36 + v38[40]) = *((unsigned char *)v37 + v38[40]);
      *((unsigned char *)v36 + v38[41]) = *((unsigned char *)v37 + v38[41]);
      *((unsigned char *)v36 + v38[42]) = *((unsigned char *)v37 + v38[42]);
      *((unsigned char *)v36 + v38[43]) = *((unsigned char *)v37 + v38[43]);
      *((unsigned char *)v36 + v38[44]) = *((unsigned char *)v37 + v38[44]);
      *((unsigned char *)v36 + v38[45]) = *((unsigned char *)v37 + v38[45]);
      uint64_t v100 = v38[46];
      uint64_t v101 = (void *)((char *)v36 + v100);
      uint64_t v102 = (void *)((char *)v37 + v100);
      uint64_t v103 = v102[1];
      void *v101 = *v102;
      v101[1] = v103;
      __int16 v104 = *(void (**)(void *, void, uint64_t, int *))(v206 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v104(v36, 0, 1, v38);
      uint64_t v11 = v218;
      uint64_t v14 = v219;
      uint64_t v22 = v222;
    }
    *(void *)((char *)v22 + v11[7]) = *(void *)((char *)v14 + v11[7]);
    uint64_t v105 = v11[8];
    uint64_t v106 = (void *)((char *)v22 + v105);
    uint64_t v107 = (void *)((char *)v14 + v105);
    uint64_t v108 = v107[1];
    *uint64_t v106 = *v107;
    v106[1] = v108;
    long long v109 = (void (*)(void *, void, uint64_t, int *))v34[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v109(v22, 0, 1, v11);
  }
  uint64_t v111 = a2;
  uint64_t v110 = a1;
  uint64_t v112 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v112) = *(void *)(a2 + v112);
  uint64_t v113 = a3[14];
  uint64_t v114 = (void *)(a1 + v113);
  unsigned __int8 v115 = (void *)(a2 + v113);
  uint64_t v116 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v117 = (void *)*((void *)v116 - 1);
  uint64_t v118 = (unsigned int (*)(void *, uint64_t, int *))v117[6];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v118(v115, 1, v116))
  {
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v114, v115, *(void *)(*(void *)(v119 - 8) + 64));
  }
  else
  {
    v215 = v117;
    uint64_t v120 = v115[1];
    void *v114 = *v115;
    v114[1] = v120;
    uint64_t v121 = v115[3];
    v114[2] = v115[2];
    v114[3] = v121;
    uint64_t v122 = v115[5];
    v114[4] = v115[4];
    v114[5] = v122;
    v114[6] = v115[6];
    *((unsigned char *)v114 + 56) = *((unsigned char *)v115 + 56);
    uint64_t v123 = v115[8];
    *((unsigned char *)v114 + 72) = *((unsigned char *)v115 + 72);
    v114[8] = v123;
    uint64_t v124 = v115[11];
    v114[10] = v115[10];
    v114[11] = v124;
    uint64_t v125 = v115[13];
    v114[12] = v115[12];
    v114[13] = v125;
    uint64_t v126 = v115[15];
    v114[14] = v115[14];
    v114[15] = v126;
    uint64_t v127 = v116[12];
    v208 = (char *)v115 + v127;
    uint64_t v210 = (char *)v114 + v127;
    uint64_t v128 = sub_1ACE74F28();
    uint64_t v223 = *(void *)(v128 - 8);
    uint64_t v129 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v223 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v129(v208, 1, v128))
    {
      uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v210, v208, *(void *)(*(void *)(v130 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v223 + 16))(v210, v208, v128);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v210, 0, 1, v128);
    }
    uint64_t v131 = v116[13];
    uint64_t v132 = (void *)((char *)v114 + v131);
    uint64_t v133 = (void *)((char *)v115 + v131);
    uint64_t v134 = v133[1];
    void *v132 = *v133;
    v132[1] = v134;
    *(void *)((char *)v114 + v116[14]) = *(void *)((char *)v115 + v116[14]);
    uint64_t v135 = v116[15];
    uint64_t v136 = (char *)v114 + v135;
    uint64_t v137 = (char *)v115 + v135;
    *(void *)uint64_t v136 = *(void *)v137;
    v136[8] = v137[8];
    uint64_t v138 = v116[16];
    uint64_t v139 = (char *)v114 + v138;
    char v140 = (char *)v115 + v138;
    swift_bridgeObjectRetain();
    uint64_t v212 = v128;
    if (v129(v140, 1, v128))
    {
      uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v223 + 16))(v139, v140, v128);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v139, 0, 1, v128);
    }
    uint64_t v142 = v116[17];
    uint64_t v143 = (void *)((char *)v114 + v142);
    v144 = (void *)((char *)v115 + v142);
    uint64_t v145 = v144[1];
    *uint64_t v143 = *v144;
    v143[1] = v145;
    *(void *)((char *)v114 + v116[18]) = *(void *)((char *)v115 + v116[18]);
    *((unsigned char *)v114 + v116[19]) = *((unsigned char *)v115 + v116[19]);
    uint64_t v146 = v116[20];
    uint64_t v211 = (char *)v114 + v146;
    uint64_t v147 = (char *)v115 + v146;
    uint64_t v148 = sub_1ACE750A8();
    uint64_t v149 = *(void *)(v148 - 8);
    uint64_t v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v150(v147, 1, v148))
    {
      uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v211, v147, *(void *)(*(void *)(v151 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v211, v147, v148);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v211, 0, 1, v148);
    }
    uint64_t v152 = v116[21];
    uint64_t v153 = (void *)((char *)v114 + v152);
    int64_t v154 = (void *)((char *)v115 + v152);
    uint64_t v155 = v154[1];
    *uint64_t v153 = *v154;
    v153[1] = v155;
    *((unsigned char *)v114 + v116[22]) = *((unsigned char *)v115 + v116[22]);
    *((unsigned char *)v114 + v116[23]) = *((unsigned char *)v115 + v116[23]);
    *((unsigned char *)v114 + v116[24]) = *((unsigned char *)v115 + v116[24]);
    *((unsigned char *)v114 + v116[25]) = *((unsigned char *)v115 + v116[25]);
    *((unsigned char *)v114 + v116[26]) = *((unsigned char *)v115 + v116[26]);
    *((unsigned char *)v114 + v116[27]) = *((unsigned char *)v115 + v116[27]);
    *((unsigned char *)v114 + v116[28]) = *((unsigned char *)v115 + v116[28]);
    *(void *)((char *)v114 + v116[29]) = *(void *)((char *)v115 + v116[29]);
    *(void *)((char *)v114 + v116[30]) = *(void *)((char *)v115 + v116[30]);
    *((unsigned char *)v114 + v116[31]) = *((unsigned char *)v115 + v116[31]);
    uint64_t v156 = v116[32];
    uint64_t v157 = (void *)((char *)v114 + v156);
    v158 = (void *)((char *)v115 + v156);
    uint64_t v159 = v158[1];
    void *v157 = *v158;
    v157[1] = v159;
    *(void *)((char *)v114 + v116[33]) = *(void *)((char *)v115 + v116[33]);
    uint64_t v160 = v116[34];
    uint64_t v161 = (void *)((char *)v114 + v160);
    uint64_t v162 = (void *)((char *)v115 + v160);
    uint64_t v163 = v162[1];
    void *v161 = *v162;
    v161[1] = v163;
    uint64_t v164 = v116[35];
    uint64_t v165 = (void *)((char *)v114 + v164);
    uint64_t v166 = (void *)((char *)v115 + v164);
    uint64_t v167 = v166[1];
    *uint64_t v165 = *v166;
    v165[1] = v167;
    uint64_t v168 = v116[36];
    uint64_t v169 = (char *)v114 + v168;
    uint64_t v170 = (char *)v115 + v168;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v129(v170, 1, v212))
    {
      uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v223 + 16))(v169, v170, v212);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v169, 0, 1, v212);
    }
    uint64_t v110 = a1;
    uint64_t v172 = v116[37];
    uint64_t v173 = (void *)((char *)v114 + v172);
    uint64_t v174 = (void *)((char *)v115 + v172);
    uint64_t v175 = v174[1];
    void *v173 = *v174;
    v173[1] = v175;
    uint64_t v176 = v116[38];
    uint64_t v177 = (void *)((char *)v114 + v176);
    v178 = (void *)((char *)v115 + v176);
    uint64_t v179 = v178[1];
    void *v177 = *v178;
    v177[1] = v179;
    *((unsigned char *)v114 + v116[39]) = *((unsigned char *)v115 + v116[39]);
    *((unsigned char *)v114 + v116[40]) = *((unsigned char *)v115 + v116[40]);
    *((unsigned char *)v114 + v116[41]) = *((unsigned char *)v115 + v116[41]);
    *((unsigned char *)v114 + v116[42]) = *((unsigned char *)v115 + v116[42]);
    *((unsigned char *)v114 + v116[43]) = *((unsigned char *)v115 + v116[43]);
    *((unsigned char *)v114 + v116[44]) = *((unsigned char *)v115 + v116[44]);
    *((unsigned char *)v114 + v116[45]) = *((unsigned char *)v115 + v116[45]);
    uint64_t v180 = v116[46];
    uint64_t v181 = (void *)((char *)v114 + v180);
    uint64_t v182 = (void *)((char *)v115 + v180);
    uint64_t v183 = v182[1];
    void *v181 = *v182;
    v181[1] = v183;
    uint64_t v184 = (void (*)(void *, void, uint64_t, int *))v215[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v184(v114, 0, 1, v116);
    uint64_t v111 = a2;
  }
  uint64_t v185 = a3[15];
  uint64_t v186 = a3[16];
  uint64_t v187 = v110 + v185;
  uint64_t v188 = v111 + v185;
  *(void *)uint64_t v187 = *(void *)v188;
  *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
  *(unsigned char *)(v110 + v186) = *(unsigned char *)(v111 + v186);
  uint64_t v189 = a3[18];
  *(void *)(v110 + a3[17]) = *(void *)(v111 + a3[17]);
  uint64_t v190 = v110 + v189;
  uint64_t v191 = v111 + v189;
  *(void *)uint64_t v190 = *(void *)v191;
  *(unsigned char *)(v190 + 8) = *(unsigned char *)(v191 + 8);
  uint64_t v192 = a3[19];
  uint64_t v193 = v110 + v192;
  uint64_t v194 = v111 + v192;
  int v195 = *(unsigned __int8 *)(v111 + v192 + 32);
  swift_bridgeObjectRetain();
  if (v195 == 255)
  {
    long long v200 = *(_OWORD *)(v194 + 16);
    *(_OWORD *)uint64_t v193 = *(_OWORD *)v194;
    *(_OWORD *)(v193 + 16) = v200;
    *(unsigned char *)(v193 + 32) = *(unsigned char *)(v194 + 32);
  }
  else
  {
    uint64_t v196 = *(void *)v194;
    uint64_t v197 = *(void *)(v194 + 8);
    uint64_t v198 = *(void *)(v194 + 16);
    uint64_t v199 = *(void *)(v194 + 24);
    sub_1ACA639E4(v196, v197, v198, v199, v195);
    *(void *)uint64_t v193 = v196;
    *(void *)(v193 + 8) = v197;
    *(void *)(v193 + 16) = v198;
    *(void *)(v193 + 24) = v199;
    *(unsigned char *)(v193 + 32) = v195;
  }
  return v110;
}

void *_s20PlaybackQueueContextVwca(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[1] = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 16) = *((unsigned char *)v4 + 16);
  v5[3] = v4[3];
  void v5[4] = v4[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Swift::String v6 = (void *)v5[5];
  uint64_t v7 = (void *)v4[5];
  v5[5] = v7;
  id v8 = v7;

  uint64_t v9 = (void *)v5[6];
  uint64_t v10 = (void *)v4[6];
  v5[6] = v10;
  id v11 = v10;

  id v12 = (void *)v5[7];
  id v13 = (void *)v4[7];
  v5[7] = v13;
  id v14 = v13;

  v5[8] = v4[8];
  v5[9] = v4[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[10] = v4[10];
  v5[11] = v4[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[11];
  uint64_t v16 = (uint64_t)v5 + v15;
  uint64_t v17 = (char *)v4 + v15;
  uint64_t v18 = type metadata accessor for PlaybackIntent(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20((uint64_t)v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1ACCDE908(v16, type metadata accessor for PlaybackIntent);
      goto LABEL_7;
    }
    uint64_t v469 = v18;
    v473 = a3;
    v477 = v4;
    uint64_t v33 = *(void *)v17;
    uint64_t v34 = *((void *)v17 + 1);
    uint64_t v35 = *((void *)v17 + 2);
    uint64_t v36 = *((void *)v17 + 3);
    unsigned __int8 v37 = v17[32];
    sub_1ACA639E4(*(void *)v17, v34, v35, v36, v37);
    uint64_t v38 = *(void *)v16;
    uint64_t v39 = *(void *)(v16 + 8);
    uint64_t v40 = *(void *)(v16 + 16);
    uint64_t v41 = *(void *)(v16 + 24);
    *(void *)uint64_t v16 = v33;
    *(void *)(v16 + 8) = v34;
    *(void *)(v16 + 16) = v35;
    *(void *)(v16 + 24) = v36;
    unsigned __int8 v42 = *(unsigned char *)(v16 + 32);
    *(unsigned char *)(v16 + 32) = v37;
    sub_1ACA63688(v38, v39, v40, v41, v42);
    uint64_t v43 = (_OWORD *)(v16 + 40);
    uint64_t v44 = v17;
    uint64_t v45 = v17 + 40;
    v460 = v44;
    int v46 = v44[120];
    if (*(unsigned char *)(v16 + 120) == 2)
    {
      if (v46 == 2)
      {
        long long v47 = *((_OWORD *)v45 + 1);
        *uint64_t v43 = *(_OWORD *)v45;
        *(_OWORD *)(v16 + 56) = v47;
        long long v48 = *((_OWORD *)v45 + 2);
        long long v49 = *((_OWORD *)v45 + 3);
        long long v50 = *((_OWORD *)v45 + 4);
        *(_DWORD *)(v16 + 119) = *(_DWORD *)(v45 + 79);
        *(_OWORD *)(v16 + 88) = v49;
        *(_OWORD *)(v16 + 104) = v50;
        *(_OWORD *)(v16 + 72) = v48;
LABEL_18:
        uint64_t v76 = v460;
        goto LABEL_22;
      }
      uint64_t v77 = v460;
      uint64_t v78 = *((void *)v460 + 5);
      uint64_t v79 = *((void *)v460 + 6);
      uint64_t v80 = *((void *)v460 + 7);
      uint64_t v81 = *((void *)v460 + 8);
      uint64_t v83 = *((void *)v460 + 9);
      uint64_t v82 = *((void *)v460 + 10);
      uint64_t v463 = *((void *)v460 + 11);
      __srcc = (void *)*((void *)v460 + 12);
      char v84 = v460[104];
      sub_1ACA63A78(v78, v79, v80, v81, v83, v82, v463, (uint64_t)__srcc, v84);
      *(void *)(v16 + 40) = v78;
      *(void *)(v16 + 48) = v79;
      *(void *)(v16 + 56) = v80;
      *(void *)(v16 + 64) = v81;
      *(void *)(v16 + 72) = v83;
      *(void *)(v16 + 80) = v82;
      *(void *)(v16 + 88) = v463;
      *(void *)(v16 + 96) = __srcc;
      *(unsigned char *)(v16 + 104) = v84;
      uint64_t v76 = v460;
    }
    else
    {
      if (v46 == 2)
      {
        sub_1ACABF6C4(v16 + 40);
        long long v72 = *((_OWORD *)v45 + 1);
        *uint64_t v43 = *(_OWORD *)v45;
        *(_OWORD *)(v16 + 56) = v72;
        long long v74 = *((_OWORD *)v45 + 3);
        long long v73 = *((_OWORD *)v45 + 4);
        long long v75 = *((_OWORD *)v45 + 2);
        *(_DWORD *)(v16 + 119) = *(_DWORD *)(v45 + 79);
        *(_OWORD *)(v16 + 88) = v74;
        *(_OWORD *)(v16 + 104) = v73;
        *(_OWORD *)(v16 + 72) = v75;
        goto LABEL_18;
      }
      uint64_t v77 = v460;
      uint64_t v85 = *((void *)v460 + 5);
      uint64_t v86 = *((void *)v460 + 6);
      uint64_t v87 = *((void *)v460 + 7);
      uint64_t v88 = *((void *)v460 + 8);
      uint64_t v90 = *((void *)v460 + 9);
      uint64_t v89 = *((void *)v460 + 10);
      uint64_t v464 = *((void *)v460 + 11);
      __srcd = (void *)*((void *)v460 + 12);
      char v91 = v460[104];
      sub_1ACA63A78(v85, v86, v87, v88, v90, v89, v464, (uint64_t)__srcd, v91);
      uint64_t v92 = *(void *)(v16 + 40);
      uint64_t v93 = *(void *)(v16 + 48);
      uint64_t v94 = *(void *)(v16 + 56);
      uint64_t v95 = *(void *)(v16 + 64);
      uint64_t v96 = *(void *)(v16 + 72);
      uint64_t v97 = *(void *)(v16 + 80);
      uint64_t v98 = *(void *)(v16 + 88);
      uint64_t v99 = *(void *)(v16 + 96);
      char v100 = *(unsigned char *)(v16 + 104);
      *(void *)(v16 + 40) = v85;
      *(void *)(v16 + 48) = v86;
      *(void *)(v16 + 56) = v87;
      *(void *)(v16 + 64) = v88;
      *(void *)(v16 + 72) = v90;
      *(void *)(v16 + 80) = v89;
      *(void *)(v16 + 88) = v464;
      *(void *)(v16 + 96) = __srcd;
      *(unsigned char *)(v16 + 104) = v91;
      uint64_t v76 = v460;
      sub_1ACA63738(v92, v93, v94, v95, v96, v97, v98, v99, v100);
    }
    *(unsigned char *)(v16 + 105) = v77[105];
    *(void *)(v16 + 112) = *((void *)v77 + 14);
    *(unsigned char *)(v16 + 120) = v77[120];
    *(unsigned char *)(v16 + 121) = v77[121];
    *(unsigned char *)(v16 + 122) = v77[122];
LABEL_22:
    uint64_t v101 = v469;
    uint64_t v102 = *(int *)(v469 + 24);
    uint64_t v103 = v16 + v102;
    __int16 v104 = &v76[v102];
    uint64_t v105 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v465 = *((void *)v105 - 1);
    uint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v465 + 48);
    int v107 = v106(v103, 1, v105);
    int v108 = v106((uint64_t)v104, 1, v105);
    if (v107)
    {
      if (!v108)
      {
        *(void *)uint64_t v103 = *(void *)v104;
        *(void *)(v103 + 8) = *((void *)v104 + 1);
        *(void *)(v103 + 16) = *((void *)v104 + 2);
        *(void *)(v103 + 24) = *((void *)v104 + 3);
        *(void *)(v103 + 32) = *((void *)v104 + 4);
        *(void *)(v103 + 40) = *((void *)v104 + 5);
        uint64_t v109 = *((void *)v104 + 6);
        *(unsigned char *)(v103 + 56) = v104[56];
        *(void *)(v103 + 48) = v109;
        uint64_t v110 = *((void *)v104 + 8);
        *(unsigned char *)(v103 + 72) = v104[72];
        *(void *)(v103 + 64) = v110;
        *(void *)(v103 + 80) = *((void *)v104 + 10);
        *(void *)(v103 + 88) = *((void *)v104 + 11);
        *(void *)(v103 + 96) = *((void *)v104 + 12);
        *(void *)(v103 + 104) = *((void *)v104 + 13);
        *(void *)(v103 + 112) = *((void *)v104 + 14);
        *(void *)(v103 + 120) = *((void *)v104 + 15);
        uint64_t v111 = v105[12];
        v433 = (void *)(v103 + v111);
        v429 = &v104[v111];
        uint64_t v112 = sub_1ACE74F28();
        __src = *(void **)(v112 - 8);
        uint64_t v113 = (unsigned int (*)(char *, uint64_t, void *))__src[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v449 = v113;
        if (v113(v429, 1, (void *)v112))
        {
          uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v433, v429, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          ((void (*)(void *, char *, uint64_t))__src[2])(v433, v429, v112);
          ((void (*)(void *, void, uint64_t, uint64_t))__src[7])(v433, 0, 1, v112);
        }
        uint64_t v174 = v105[13];
        uint64_t v175 = (void *)(v103 + v174);
        uint64_t v176 = &v104[v174];
        *uint64_t v175 = *(void *)v176;
        v175[1] = *((void *)v176 + 1);
        *(void *)(v103 + v105[14]) = *(void *)&v104[v105[14]];
        uint64_t v177 = v105[15];
        uint64_t v178 = v103 + v177;
        uint64_t v179 = &v104[v177];
        uint64_t v180 = *(void *)v179;
        *(unsigned char *)(v178 + 8) = v179[8];
        *(void *)uint64_t v178 = v180;
        uint64_t v181 = v105[16];
        uint64_t v182 = (void *)(v103 + v181);
        uint64_t v183 = &v104[v181];
        swift_bridgeObjectRetain();
        __dstc = (void *)v112;
        if (v113(v183, 1, (void *)v112))
        {
          uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
        }
        else
        {
          ((void (*)(void *, char *, uint64_t))__src[2])(v182, v183, v112);
          ((void (*)(void *, void, uint64_t, uint64_t))__src[7])(v182, 0, 1, v112);
        }
        uint64_t v185 = v105[17];
        uint64_t v186 = (void *)(v103 + v185);
        uint64_t v187 = &v104[v185];
        *uint64_t v186 = *(void *)v187;
        v186[1] = *((void *)v187 + 1);
        *(void *)(v103 + v105[18]) = *(void *)&v104[v105[18]];
        *(unsigned char *)(v103 + v105[19]) = v104[v105[19]];
        uint64_t v188 = v105[20];
        v435 = (void *)(v103 + v188);
        uint64_t v189 = &v104[v188];
        uint64_t v190 = sub_1ACE750A8();
        uint64_t v191 = *(void *)(v190 - 8);
        uint64_t v192 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48);
        uint64_t v193 = v190;
        swift_bridgeObjectRetain();
        swift_retain();
        if (v192(v189, 1, v193))
        {
          uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(v435, v189, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v191 + 16))(v435, v189, v193);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v191 + 56))(v435, 0, 1, v193);
        }
        uint64_t v195 = v105[21];
        uint64_t v196 = (void *)(v103 + v195);
        uint64_t v197 = &v104[v195];
        void *v196 = *(void *)v197;
        v196[1] = *((void *)v197 + 1);
        *(unsigned char *)(v103 + v105[22]) = v104[v105[22]];
        *(unsigned char *)(v103 + v105[23]) = v104[v105[23]];
        *(unsigned char *)(v103 + v105[24]) = v104[v105[24]];
        *(unsigned char *)(v103 + v105[25]) = v104[v105[25]];
        *(unsigned char *)(v103 + v105[26]) = v104[v105[26]];
        *(unsigned char *)(v103 + v105[27]) = v104[v105[27]];
        *(unsigned char *)(v103 + v105[28]) = v104[v105[28]];
        *(void *)(v103 + v105[29]) = *(void *)&v104[v105[29]];
        *(void *)(v103 + v105[30]) = *(void *)&v104[v105[30]];
        *(unsigned char *)(v103 + v105[31]) = v104[v105[31]];
        uint64_t v198 = v105[32];
        uint64_t v199 = (void *)(v103 + v198);
        long long v200 = &v104[v198];
        *uint64_t v199 = *(void *)v200;
        v199[1] = *((void *)v200 + 1);
        *(void *)(v103 + v105[33]) = *(void *)&v104[v105[33]];
        uint64_t v201 = v105[34];
        v202 = (void *)(v103 + v201);
        v203 = &v104[v201];
        void *v202 = *(void *)v203;
        v202[1] = *((void *)v203 + 1);
        uint64_t v204 = v105[35];
        uint64_t v205 = (void *)(v103 + v204);
        uint64_t v206 = &v104[v204];
        void *v205 = *(void *)v206;
        v205[1] = *((void *)v206 + 1);
        uint64_t v207 = v105[36];
        v436 = (void *)(v103 + v207);
        v208 = &v104[v207];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v449(v208, 1, __dstc))
        {
          uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
          memcpy(v436, v208, *(void *)(*(void *)(v209 - 8) + 64));
        }
        else
        {
          ((void (*)(void *, char *, void *))__src[2])(v436, v208, __dstc);
          ((void (*)(void *, void, uint64_t, void *))__src[7])(v436, 0, 1, __dstc);
        }
        uint64_t v101 = v469;
        uint64_t v210 = v105[37];
        uint64_t v211 = (void *)(v103 + v210);
        uint64_t v212 = &v104[v210];
        *uint64_t v211 = *(void *)v212;
        v211[1] = *((void *)v212 + 1);
        uint64_t v213 = v105[38];
        v214 = (void *)(v103 + v213);
        v215 = &v104[v213];
        void *v214 = *(void *)v215;
        v214[1] = *((void *)v215 + 1);
        *(unsigned char *)(v103 + v105[39]) = v104[v105[39]];
        *(unsigned char *)(v103 + v105[40]) = v104[v105[40]];
        *(unsigned char *)(v103 + v105[41]) = v104[v105[41]];
        *(unsigned char *)(v103 + v105[42]) = v104[v105[42]];
        *(unsigned char *)(v103 + v105[43]) = v104[v105[43]];
        *(unsigned char *)(v103 + v105[44]) = v104[v105[44]];
        *(unsigned char *)(v103 + v105[45]) = v104[v105[45]];
        uint64_t v216 = v105[46];
        v217 = (void *)(v103 + v216);
        v218 = &v104[v216];
        void *v217 = *(void *)v218;
        v217[1] = *((void *)v218 + 1);
        v219 = *(void (**)(uint64_t, void, uint64_t, int *))(v465 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v219(v103, 0, 1, v105);
        a3 = v473;
        uint64_t v4 = v477;
        uint64_t v76 = v460;
        goto LABEL_85;
      }
      goto LABEL_28;
    }
    if (v108)
    {
      sub_1ACCDE908(v103, type metadata accessor for PodcastsMediaLibrary.MediaItem);
LABEL_28:
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy((void *)v103, v104, *(void *)(*(void *)(v115 - 8) + 64));
      a3 = v473;
      uint64_t v4 = v477;
LABEL_85:
      *(void *)(v16 + *(int *)(v101 + 28)) = *(void *)&v76[*(int *)(v101 + 28)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v272 = *(int *)(v101 + 32);
      v273 = (void *)(v16 + v272);
      v274 = &v76[v272];
      void *v273 = *(void *)v274;
      v273[1] = *((void *)v274 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
    *(void *)uint64_t v103 = *(void *)v104;
    *(void *)(v103 + 8) = *((void *)v104 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + 16) = *((void *)v104 + 2);
    *(void *)(v103 + 24) = *((void *)v104 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + 32) = *((void *)v104 + 4);
    *(void *)(v103 + 40) = *((void *)v104 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v164 = *((void *)v104 + 6);
    *(unsigned char *)(v103 + 56) = v104[56];
    *(void *)(v103 + 48) = v164;
    uint64_t v165 = *((void *)v104 + 8);
    *(unsigned char *)(v103 + 72) = v104[72];
    *(void *)(v103 + 64) = v165;
    *(void *)(v103 + 80) = *((void *)v104 + 10);
    *(void *)(v103 + 88) = *((void *)v104 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + 96) = *((void *)v104 + 12);
    *(void *)(v103 + 104) = *((void *)v104 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + 112) = *((void *)v104 + 14);
    *(void *)(v103 + 120) = *((void *)v104 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v166 = v105[12];
    uint64_t v167 = (void *)(v103 + v166);
    uint64_t v168 = &v104[v166];
    uint64_t v169 = sub_1ACE74F28();
    uint64_t v450 = *(void *)(v169 - 8);
    uint64_t v170 = *(uint64_t (**)(void))(v450 + 48);
    v434 = v167;
    LODWORD(v167) = ((uint64_t (*)(void *, uint64_t, uint64_t))v170)(v167, 1, v169);
    v466 = v170;
    int v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v170)(v168, 1, v169);
    if (v167)
    {
      if (v171)
      {
        size_t v172 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v173 = v434;
LABEL_57:
        memcpy(v173, v168, v172);
        goto LABEL_60;
      }
      (*(void (**)(void *, char *, uint64_t))(v450 + 16))(v434, v168, v169);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v450 + 56))(v434, 0, 1, v169);
    }
    else
    {
      if (v171)
      {
        (*(void (**)(void *, uint64_t))(v450 + 8))(v434, v169);
        size_t v172 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v173 = v434;
        goto LABEL_57;
      }
      (*(void (**)(void *, char *, uint64_t))(v450 + 24))(v434, v168, v169);
    }
LABEL_60:
    uint64_t v220 = v105[13];
    v221 = (void *)(v103 + v220);
    v222 = &v104[v220];
    void *v221 = *(void *)v222;
    v221[1] = *((void *)v222 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + v105[14]) = *(void *)&v104[v105[14]];
    uint64_t v223 = v105[15];
    uint64_t v224 = v103 + v223;
    v225 = &v104[v223];
    char v226 = v225[8];
    *(void *)uint64_t v224 = *(void *)v225;
    *(unsigned char *)(v224 + 8) = v226;
    uint64_t v227 = v105[16];
    v228 = &v104[v227];
    v437 = (void *)(v103 + v227);
    int v229 = v170();
    int v230 = ((uint64_t (*)(char *, uint64_t, uint64_t))v170)(v228, 1, v169);
    uint64_t v447 = v169;
    if (v229)
    {
      if (v230)
      {
        size_t v231 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        v232 = v437;
LABEL_65:
        memcpy(v232, v228, v231);
        goto LABEL_68;
      }
      (*(void (**)(void *, char *, uint64_t))(v450 + 16))(v437, v228, v169);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v450 + 56))(v437, 0, 1, v169);
    }
    else
    {
      if (v230)
      {
        (*(void (**)(void *, uint64_t))(v450 + 8))(v437, v169);
        size_t v231 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        v232 = v437;
        goto LABEL_65;
      }
      (*(void (**)(void *, char *, uint64_t))(v450 + 24))(v437, v228, v169);
    }
LABEL_68:
    uint64_t v233 = v105[17];
    v234 = (void *)(v103 + v233);
    v235 = &v104[v233];
    void *v234 = *(void *)v235;
    v234[1] = *((void *)v235 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + v105[18]) = *(void *)&v104[v105[18]];
    swift_retain();
    swift_release();
    *(unsigned char *)(v103 + v105[19]) = v104[v105[19]];
    uint64_t v236 = v105[20];
    v237 = (void *)(v103 + v236);
    v238 = &v104[v236];
    uint64_t v239 = sub_1ACE750A8();
    uint64_t v240 = *(void *)(v239 - 8);
    v241 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v240 + 48);
    v438 = v237;
    LODWORD(v237) = v241(v237, 1, v239);
    int v242 = v241(v238, 1, v239);
    if (v237)
    {
      if (v242)
      {
        size_t v243 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                         + 64);
        v244 = v438;
LABEL_73:
        memcpy(v244, v238, v243);
        goto LABEL_76;
      }
      (*(void (**)(void *, char *, uint64_t))(v240 + 16))(v438, v238, v239);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v240 + 56))(v438, 0, 1, v239);
    }
    else
    {
      if (v242)
      {
        (*(void (**)(void *, uint64_t))(v240 + 8))(v438, v239);
        size_t v243 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                         + 64);
        v244 = v438;
        goto LABEL_73;
      }
      (*(void (**)(void *, char *, uint64_t))(v240 + 24))(v438, v238, v239);
    }
LABEL_76:
    uint64_t v245 = v105[21];
    v246 = (void *)(v103 + v245);
    v247 = &v104[v245];
    void *v246 = *(void *)v247;
    v246[1] = *((void *)v247 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v103 + v105[22]) = v104[v105[22]];
    *(unsigned char *)(v103 + v105[23]) = v104[v105[23]];
    *(unsigned char *)(v103 + v105[24]) = v104[v105[24]];
    *(unsigned char *)(v103 + v105[25]) = v104[v105[25]];
    *(unsigned char *)(v103 + v105[26]) = v104[v105[26]];
    *(unsigned char *)(v103 + v105[27]) = v104[v105[27]];
    *(unsigned char *)(v103 + v105[28]) = v104[v105[28]];
    *(void *)(v103 + v105[29]) = *(void *)&v104[v105[29]];
    *(void *)(v103 + v105[30]) = *(void *)&v104[v105[30]];
    *(unsigned char *)(v103 + v105[31]) = v104[v105[31]];
    uint64_t v248 = v105[32];
    v249 = (void *)(v103 + v248);
    v250 = &v104[v248];
    void *v249 = *(void *)v250;
    v249[1] = *((void *)v250 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v103 + v105[33]) = *(void *)&v104[v105[33]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v251 = v105[34];
    v252 = (void *)(v103 + v251);
    v253 = &v104[v251];
    void *v252 = *(void *)v253;
    v252[1] = *((void *)v253 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v254 = v105[35];
    v255 = (void *)(v103 + v254);
    v256 = &v104[v254];
    void *v255 = *(void *)v256;
    v255[1] = *((void *)v256 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v257 = v105[36];
    v258 = &v104[v257];
    v439 = (void *)(v103 + v257);
    int v259 = v466();
    int v260 = ((uint64_t (*)(char *, uint64_t, uint64_t))v466)(v258, 1, v447);
    uint64_t v76 = v460;
    if (v259)
    {
      if (!v260)
      {
        (*(void (**)(void *, char *, uint64_t))(v450 + 16))(v439, v258, v447);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v450 + 56))(v439, 0, 1, v447);
        goto LABEL_84;
      }
      size_t v261 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      v262 = v439;
    }
    else
    {
      if (!v260)
      {
        (*(void (**)(void *, char *, uint64_t))(v450 + 24))(v439, v258, v447);
        goto LABEL_84;
      }
      (*(void (**)(void *, uint64_t))(v450 + 8))(v439, v447);
      size_t v261 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      v262 = v439;
    }
    memcpy(v262, v258, v261);
LABEL_84:
    uint64_t v263 = v105[37];
    v264 = (void *)(v103 + v263);
    v265 = &v104[v263];
    void *v264 = *(void *)v265;
    v264[1] = *((void *)v265 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v266 = v105[38];
    v267 = (void *)(v103 + v266);
    v268 = &v104[v266];
    void *v267 = *(void *)v268;
    v267[1] = *((void *)v268 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v103 + v105[39]) = v104[v105[39]];
    *(unsigned char *)(v103 + v105[40]) = v104[v105[40]];
    *(unsigned char *)(v103 + v105[41]) = v104[v105[41]];
    *(unsigned char *)(v103 + v105[42]) = v104[v105[42]];
    *(unsigned char *)(v103 + v105[43]) = v104[v105[43]];
    *(unsigned char *)(v103 + v105[44]) = v104[v105[44]];
    *(unsigned char *)(v103 + v105[45]) = v104[v105[45]];
    uint64_t v269 = v105[46];
    v270 = (void *)(v103 + v269);
    v271 = &v104[v269];
    void *v270 = *(void *)v271;
    v270[1] = *((void *)v271 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a3 = v473;
    uint64_t v4 = v477;
    uint64_t v101 = v469;
    goto LABEL_85;
  }
  if (v22)
  {
LABEL_7:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
    memcpy((void *)v16, v17, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_86;
  }
  uint64_t v462 = v19;
  uint64_t v468 = v18;
  v472 = a3;
  v476 = v4;
  uint64_t v23 = *(void *)v17;
  uint64_t v24 = *((void *)v17 + 1);
  uint64_t v25 = *((void *)v17 + 2);
  uint64_t v26 = *((void *)v17 + 3);
  unsigned __int8 v27 = v17[32];
  sub_1ACA639E4(*(void *)v17, v24, v25, v26, v27);
  *(void *)uint64_t v16 = v23;
  *(void *)(v16 + 8) = v24;
  *(void *)(v16 + 16) = v25;
  *(void *)(v16 + 24) = v26;
  *(unsigned char *)(v16 + 32) = v27;
  if (v17[120] == 2)
  {
    long long v28 = *(_OWORD *)(v17 + 56);
    *(_OWORD *)(v16 + 40) = *(_OWORD *)(v17 + 40);
    *(_OWORD *)(v16 + 56) = v28;
    long long v29 = *(_OWORD *)(v17 + 72);
    long long v30 = *(_OWORD *)(v17 + 88);
    long long v31 = *(_OWORD *)(v17 + 104);
    *(_DWORD *)(v16 + 119) = *(_DWORD *)(v17 + 119);
    *(_OWORD *)(v16 + 88) = v30;
    *(_OWORD *)(v16 + 104) = v31;
    *(_OWORD *)(v16 + 72) = v29;
  }
  else
  {
    uint64_t v51 = *((void *)v17 + 5);
    uint64_t v52 = *((void *)v17 + 6);
    uint64_t v53 = *((void *)v17 + 7);
    uint64_t v54 = *((void *)v17 + 8);
    uint64_t v56 = *((void *)v17 + 9);
    uint64_t v55 = *((void *)v17 + 10);
    uint64_t v57 = *((void *)v17 + 12);
    uint64_t v448 = *((void *)v17 + 11);
    char __srcb = v17[104];
    sub_1ACA63A78(v51, v52, v53, v54, v56, v55, v448, v57, __srcb);
    *(void *)(v16 + 40) = v51;
    *(void *)(v16 + 48) = v52;
    *(void *)(v16 + 56) = v53;
    *(void *)(v16 + 64) = v54;
    *(void *)(v16 + 72) = v56;
    *(void *)(v16 + 80) = v55;
    *(void *)(v16 + 88) = v448;
    *(void *)(v16 + 96) = v57;
    *(unsigned char *)(v16 + 104) = __srcb;
    *(unsigned char *)(v16 + 105) = v17[105];
    *(void *)(v16 + 112) = *((void *)v17 + 14);
    *(unsigned char *)(v16 + 120) = v17[120];
    *(unsigned char *)(v16 + 121) = v17[121];
    *(unsigned char *)(v16 + 122) = v17[122];
  }
  uint64_t v58 = v468;
  uint64_t v59 = *(int *)(v468 + 24);
  uint64_t v60 = (void *)(v16 + v59);
  uint64_t v61 = &v17[v59];
  uint64_t v62 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v63 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v62 - 1);
  uint64_t v64 = v462;
  if (((unsigned int (**)(char *, uint64_t, int *))v63)[6](v61, 1, v62))
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
    a3 = v472;
    uint64_t v4 = v476;
  }
  else
  {
    v432 = v63;
    *uint64_t v60 = *(void *)v61;
    uint64_t v457 = v16;
    v60[1] = *((void *)v61 + 1);
    v60[2] = *((void *)v61 + 2);
    v60[3] = *((void *)v61 + 3);
    v60[4] = *((void *)v61 + 4);
    v60[5] = *((void *)v61 + 5);
    uint64_t v66 = *((void *)v61 + 6);
    *((unsigned char *)v60 + 56) = v61[56];
    v60[6] = v66;
    uint64_t v67 = *((void *)v61 + 8);
    *((unsigned char *)v60 + 72) = v61[72];
    v60[8] = v67;
    v60[10] = *((void *)v61 + 10);
    v60[11] = *((void *)v61 + 11);
    v60[12] = *((void *)v61 + 12);
    v60[13] = *((void *)v61 + 13);
    v60[14] = *((void *)v61 + 14);
    v60[15] = *((void *)v61 + 15);
    uint64_t v68 = v62[12];
    __dst = (char *)v60 + v68;
    v428 = &v61[v68];
    uint64_t v69 = sub_1ACE74F28();
    uint64_t v446 = *(void *)(v69 - 8);
    uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v446 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v70(v428, 1, v69))
    {
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v428, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v446 + 16))(__dst, v428, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v446 + 56))(__dst, 0, 1, v69);
    }
    uint64_t v116 = v62[13];
    uint64_t v117 = (void *)((char *)v60 + v116);
    uint64_t v118 = &v61[v116];
    void *v117 = *(void *)v118;
    v117[1] = *((void *)v118 + 1);
    *(void *)((char *)v60 + v62[14]) = *(void *)&v61[v62[14]];
    uint64_t v119 = v62[15];
    uint64_t v120 = (char *)v60 + v119;
    uint64_t v121 = &v61[v119];
    uint64_t v122 = *(void *)v121;
    v120[8] = v121[8];
    *(void *)uint64_t v120 = v122;
    uint64_t v123 = v62[16];
    uint64_t v124 = (char *)v60 + v123;
    uint64_t v125 = &v61[v123];
    swift_bridgeObjectRetain();
    v461 = v17;
    if (v70(v125, 1, v69))
    {
      uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v446 + 16))(v124, v125, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v446 + 56))(v124, 0, 1, v69);
    }
    uint64_t v127 = v62[17];
    uint64_t v128 = (void *)((char *)v60 + v127);
    uint64_t v129 = &v61[v127];
    *uint64_t v128 = *(void *)v129;
    v128[1] = *((void *)v129 + 1);
    *(void *)((char *)v60 + v62[18]) = *(void *)&v61[v62[18]];
    *((unsigned char *)v60 + v62[19]) = v61[v62[19]];
    uint64_t v130 = v62[20];
    __dsta = (char *)v60 + v130;
    v430 = &v61[v130];
    uint64_t v131 = sub_1ACE750A8();
    uint64_t v132 = *(void *)(v131 - 8);
    uint64_t v133 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v133(v430, 1, v131))
    {
      uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dsta, v430, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(__dsta, v430, v131);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(__dsta, 0, 1, v131);
    }
    uint64_t v135 = v62[21];
    uint64_t v136 = (void *)((char *)v60 + v135);
    uint64_t v137 = &v61[v135];
    void *v136 = *(void *)v137;
    v136[1] = *((void *)v137 + 1);
    *((unsigned char *)v60 + v62[22]) = v61[v62[22]];
    *((unsigned char *)v60 + v62[23]) = v61[v62[23]];
    *((unsigned char *)v60 + v62[24]) = v61[v62[24]];
    *((unsigned char *)v60 + v62[25]) = v61[v62[25]];
    *((unsigned char *)v60 + v62[26]) = v61[v62[26]];
    *((unsigned char *)v60 + v62[27]) = v61[v62[27]];
    *((unsigned char *)v60 + v62[28]) = v61[v62[28]];
    *(void *)((char *)v60 + v62[29]) = *(void *)&v61[v62[29]];
    *(void *)((char *)v60 + v62[30]) = *(void *)&v61[v62[30]];
    *((unsigned char *)v60 + v62[31]) = v61[v62[31]];
    uint64_t v138 = v62[32];
    uint64_t v139 = (void *)((char *)v60 + v138);
    char v140 = &v61[v138];
    void *v139 = *(void *)v140;
    v139[1] = *((void *)v140 + 1);
    *(void *)((char *)v60 + v62[33]) = *(void *)&v61[v62[33]];
    uint64_t v141 = v62[34];
    uint64_t v142 = (void *)((char *)v60 + v141);
    uint64_t v143 = &v61[v141];
    *uint64_t v142 = *(void *)v143;
    v142[1] = *((void *)v143 + 1);
    uint64_t v144 = v62[35];
    uint64_t v145 = (void *)((char *)v60 + v144);
    uint64_t v146 = &v61[v144];
    *uint64_t v145 = *(void *)v146;
    v145[1] = *((void *)v146 + 1);
    uint64_t v147 = v62[36];
    __dstb = (char *)v60 + v147;
    uint64_t v148 = &v61[v147];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v70(v148, 1, v69))
    {
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dstb, v148, *(void *)(*(void *)(v149 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v446 + 16))(__dstb, v148, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v446 + 56))(__dstb, 0, 1, v69);
    }
    uint64_t v16 = v457;
    uint64_t v58 = v468;
    uint64_t v64 = v462;
    uint64_t v150 = v62[37];
    uint64_t v151 = (void *)((char *)v60 + v150);
    uint64_t v152 = &v61[v150];
    *uint64_t v151 = *(void *)v152;
    v151[1] = *((void *)v152 + 1);
    uint64_t v153 = v62[38];
    int64_t v154 = (void *)((char *)v60 + v153);
    uint64_t v155 = &v61[v153];
    *int64_t v154 = *(void *)v155;
    v154[1] = *((void *)v155 + 1);
    *((unsigned char *)v60 + v62[39]) = v61[v62[39]];
    *((unsigned char *)v60 + v62[40]) = v61[v62[40]];
    *((unsigned char *)v60 + v62[41]) = v61[v62[41]];
    *((unsigned char *)v60 + v62[42]) = v61[v62[42]];
    *((unsigned char *)v60 + v62[43]) = v61[v62[43]];
    *((unsigned char *)v60 + v62[44]) = v61[v62[44]];
    *((unsigned char *)v60 + v62[45]) = v61[v62[45]];
    uint64_t v156 = v62[46];
    uint64_t v157 = (void *)((char *)v60 + v156);
    v158 = &v61[v156];
    void *v157 = *(void *)v158;
    v157[1] = *((void *)v158 + 1);
    uint64_t v159 = (void (*)(void *, void, uint64_t, int *))v432[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v159(v60, 0, 1, v62);
    a3 = v472;
    uint64_t v4 = v476;
    uint64_t v17 = v461;
  }
  *(void *)(v16 + *(int *)(v58 + 28)) = *(void *)&v17[*(int *)(v58 + 28)];
  uint64_t v160 = *(int *)(v58 + 32);
  uint64_t v161 = (void *)(v16 + v160);
  uint64_t v162 = &v17[v160];
  void *v161 = *(void *)v162;
  v161[1] = *((void *)v162 + 1);
  uint64_t v163 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v163(v16, 0, 1, v58);
LABEL_86:
  *(void *)((char *)v5 + a3[12]) = *(void *)((char *)v4 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + a3[13]) = *(void *)((char *)v4 + a3[13]);
  swift_retain();
  swift_release();
  uint64_t v275 = a3[14];
  uint64_t v276 = (uint64_t)v5 + v275;
  v277 = (char *)v4 + v275;
  v278 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v279 = (void *)*((void *)v278 - 1);
  v280 = (uint64_t (*)(uint64_t, uint64_t, int *))v279[6];
  int v281 = v280(v276, 1, v278);
  int v282 = v280((uint64_t)v277, 1, v278);
  if (!v281)
  {
    if (v282)
    {
      sub_1ACCDE908(v276, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_92;
    }
    v475 = a3;
    v479 = v4;
    *(void *)uint64_t v276 = *(void *)v277;
    *(void *)(v276 + 8) = *((void *)v277 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v276 + 16) = *((void *)v277 + 2);
    *(void *)(v276 + 24) = *((void *)v277 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v276 + 32) = *((void *)v277 + 4);
    *(void *)(v276 + 40) = *((void *)v277 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v290 = *((void *)v277 + 6);
    *(unsigned char *)(v276 + 56) = v277[56];
    *(void *)(v276 + 48) = v290;
    uint64_t v291 = *((void *)v277 + 8);
    *(unsigned char *)(v276 + 72) = v277[72];
    *(void *)(v276 + 64) = v291;
    *(void *)(v276 + 80) = *((void *)v277 + 10);
    *(void *)(v276 + 88) = *((void *)v277 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v276 + 96) = *((void *)v277 + 12);
    *(void *)(v276 + 104) = *((void *)v277 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v276 + 112) = *((void *)v277 + 14);
    *(void *)(v276 + 120) = *((void *)v277 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v292 = v278[12];
    v293 = (void *)(v276 + v292);
    v294 = &v277[v292];
    uint64_t v295 = sub_1ACE74F28();
    uint64_t v467 = *(void *)(v295 - 8);
    v296 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v467 + 48);
    int v297 = v296(v293, 1, v295);
    v471 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v296;
    int v298 = v296(v294, 1, v295);
    if (v297)
    {
      if (!v298)
      {
        (*(void (**)(void *, char *, uint64_t))(v467 + 16))(v293, v294, v295);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v467 + 56))(v293, 0, 1, v295);
        goto LABEL_110;
      }
    }
    else
    {
      if (!v298)
      {
        (*(void (**)(void *, char *, uint64_t))(v467 + 24))(v293, v294, v295);
LABEL_110:
        uint64_t v346 = v278[13];
        v347 = (void *)(v276 + v346);
        v348 = &v277[v346];
        void *v347 = *(void *)v348;
        v347[1] = *((void *)v348 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v276 + v278[14]) = *(void *)&v277[v278[14]];
        uint64_t v349 = v278[15];
        uint64_t v350 = v276 + v349;
        v351 = &v277[v349];
        char v352 = v351[8];
        *(void *)uint64_t v350 = *(void *)v351;
        *(unsigned char *)(v350 + 8) = v352;
        uint64_t v353 = v278[16];
        v354 = (void *)(v276 + v353);
        v355 = &v277[v353];
        int v356 = v296((void *)(v276 + v353), 1, v295);
        int v357 = v296(v355, 1, v295);
        if (v356)
        {
          if (!v357)
          {
            (*(void (**)(void *, char *, uint64_t))(v467 + 16))(v354, v355, v295);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v467 + 56))(v354, 0, 1, v295);
            goto LABEL_116;
          }
        }
        else
        {
          if (!v357)
          {
            (*(void (**)(void *, char *, uint64_t))(v467 + 24))(v354, v355, v295);
LABEL_116:
            uint64_t v359 = v278[17];
            v360 = (void *)(v276 + v359);
            v361 = &v277[v359];
            void *v360 = *(void *)v361;
            v360[1] = *((void *)v361 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v276 + v278[18]) = *(void *)&v277[v278[18]];
            swift_retain();
            swift_release();
            *(unsigned char *)(v276 + v278[19]) = v277[v278[19]];
            uint64_t v362 = v278[20];
            v363 = (void *)(v276 + v362);
            v364 = &v277[v362];
            uint64_t v365 = sub_1ACE750A8();
            uint64_t v366 = *(void *)(v365 - 8);
            v367 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v366 + 48);
            v451 = v363;
            LODWORD(v363) = v367(v363, 1, v365);
            int v368 = v367(v364, 1, v365);
            if (v363)
            {
              if (v368)
              {
                size_t v369 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140)
                                             - 8)
                                 + 64);
                v370 = v451;
LABEL_121:
                memcpy(v370, v364, v369);
                goto LABEL_126;
              }
              (*(void (**)(void *, char *, uint64_t))(v366 + 16))(v451, v364, v365);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v366 + 56))(v451, 0, 1, v365);
            }
            else
            {
              if (v368)
              {
                (*(void (**)(void *, uint64_t))(v366 + 8))(v451, v365);
                size_t v369 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140)
                                             - 8)
                                 + 64);
                v370 = v451;
                goto LABEL_121;
              }
              (*(void (**)(void *, char *, uint64_t))(v366 + 24))(v451, v364, v365);
            }
LABEL_126:
            uint64_t v371 = v278[21];
            v372 = (void *)(v276 + v371);
            v373 = &v277[v371];
            void *v372 = *(void *)v373;
            v372[1] = *((void *)v373 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v276 + v278[22]) = v277[v278[22]];
            *(unsigned char *)(v276 + v278[23]) = v277[v278[23]];
            *(unsigned char *)(v276 + v278[24]) = v277[v278[24]];
            *(unsigned char *)(v276 + v278[25]) = v277[v278[25]];
            *(unsigned char *)(v276 + v278[26]) = v277[v278[26]];
            *(unsigned char *)(v276 + v278[27]) = v277[v278[27]];
            *(unsigned char *)(v276 + v278[28]) = v277[v278[28]];
            *(void *)(v276 + v278[29]) = *(void *)&v277[v278[29]];
            *(void *)(v276 + v278[30]) = *(void *)&v277[v278[30]];
            *(unsigned char *)(v276 + v278[31]) = v277[v278[31]];
            uint64_t v374 = v278[32];
            v375 = (void *)(v276 + v374);
            v376 = &v277[v374];
            void *v375 = *(void *)v376;
            v375[1] = *((void *)v376 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v276 + v278[33]) = *(void *)&v277[v278[33]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v377 = v278[34];
            v378 = (void *)(v276 + v377);
            v379 = &v277[v377];
            void *v378 = *(void *)v379;
            v378[1] = *((void *)v379 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v380 = v278[35];
            v381 = (void *)(v276 + v380);
            v382 = &v277[v380];
            void *v381 = *(void *)v382;
            v381[1] = *((void *)v382 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v383 = v278[36];
            v384 = (void *)(v276 + v383);
            v385 = &v277[v383];
            int v386 = v471(v276 + v383, 1, v295);
            int v387 = v471((uint64_t)v385, 1, v295);
            if (v386)
            {
              if (!v387)
              {
                (*(void (**)(void *, char *, uint64_t))(v467 + 16))(v384, v385, v295);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v467 + 56))(v384, 0, 1, v295);
LABEL_132:
                a3 = v475;
                uint64_t v4 = v479;
                uint64_t v389 = v278[37];
                v390 = (void *)(v276 + v389);
                v391 = &v277[v389];
                void *v390 = *(void *)v391;
                v390[1] = *((void *)v391 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v392 = v278[38];
                v393 = (void *)(v276 + v392);
                v394 = &v277[v392];
                void *v393 = *(void *)v394;
                v393[1] = *((void *)v394 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(unsigned char *)(v276 + v278[39]) = v277[v278[39]];
                *(unsigned char *)(v276 + v278[40]) = v277[v278[40]];
                *(unsigned char *)(v276 + v278[41]) = v277[v278[41]];
                *(unsigned char *)(v276 + v278[42]) = v277[v278[42]];
                *(unsigned char *)(v276 + v278[43]) = v277[v278[43]];
                *(unsigned char *)(v276 + v278[44]) = v277[v278[44]];
                *(unsigned char *)(v276 + v278[45]) = v277[v278[45]];
                uint64_t v395 = v278[46];
                v396 = (void *)(v276 + v395);
                v397 = &v277[v395];
                void *v396 = *(void *)v397;
                v396[1] = *((void *)v397 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_133;
              }
            }
            else
            {
              if (!v387)
              {
                (*(void (**)(void *, char *, uint64_t))(v467 + 24))(v384, v385, v295);
                goto LABEL_132;
              }
              (*(void (**)(void *, uint64_t))(v467 + 8))(v384, v295);
            }
            uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
            memcpy(v384, v385, *(void *)(*(void *)(v388 - 8) + 64));
            goto LABEL_132;
          }
          (*(void (**)(void *, uint64_t))(v467 + 8))(v354, v295);
        }
        uint64_t v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v354, v355, *(void *)(*(void *)(v358 - 8) + 64));
        goto LABEL_116;
      }
      (*(void (**)(void *, uint64_t))(v467 + 8))(v293, v295);
    }
    uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v293, v294, *(void *)(*(void *)(v345 - 8) + 64));
    goto LABEL_110;
  }
  if (v282)
  {
LABEL_92:
    uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy((void *)v276, v277, *(void *)(*(void *)(v289 - 8) + 64));
    goto LABEL_133;
  }
  v440 = v279;
  v474 = a3;
  v478 = v4;
  *(void *)uint64_t v276 = *(void *)v277;
  *(void *)(v276 + 8) = *((void *)v277 + 1);
  *(void *)(v276 + 16) = *((void *)v277 + 2);
  *(void *)(v276 + 24) = *((void *)v277 + 3);
  *(void *)(v276 + 32) = *((void *)v277 + 4);
  *(void *)(v276 + 40) = *((void *)v277 + 5);
  uint64_t v283 = *((void *)v277 + 6);
  *(unsigned char *)(v276 + 56) = v277[56];
  *(void *)(v276 + 48) = v283;
  uint64_t v284 = *((void *)v277 + 8);
  *(unsigned char *)(v276 + 72) = v277[72];
  *(void *)(v276 + 64) = v284;
  *(void *)(v276 + 80) = *((void *)v277 + 10);
  *(void *)(v276 + 88) = *((void *)v277 + 11);
  *(void *)(v276 + 96) = *((void *)v277 + 12);
  *(void *)(v276 + 104) = *((void *)v277 + 13);
  *(void *)(v276 + 112) = *((void *)v277 + 14);
  *(void *)(v276 + 120) = *((void *)v277 + 15);
  uint64_t v285 = v278[12];
  v431 = (void *)(v276 + v285);
  __dstd = &v277[v285];
  uint64_t v286 = sub_1ACE74F28();
  uint64_t v470 = *(void *)(v286 - 8);
  v287 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v470 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v287(__dstd, 1, v286))
  {
    uint64_t v288 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v431, __dstd, *(void *)(*(void *)(v288 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v470 + 16))(v431, __dstd, v286);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v470 + 56))(v431, 0, 1, v286);
  }
  uint64_t v299 = v278[13];
  v300 = (void *)(v276 + v299);
  v301 = &v277[v299];
  void *v300 = *(void *)v301;
  v300[1] = *((void *)v301 + 1);
  *(void *)(v276 + v278[14]) = *(void *)&v277[v278[14]];
  uint64_t v302 = v278[15];
  uint64_t v303 = v276 + v302;
  v304 = &v277[v302];
  uint64_t v305 = *(void *)v304;
  *(unsigned char *)(v303 + 8) = v304[8];
  *(void *)uint64_t v303 = v305;
  uint64_t v306 = v278[16];
  v307 = (void *)(v276 + v306);
  v308 = &v277[v306];
  swift_bridgeObjectRetain();
  v459 = v5;
  v458 = v287;
  if (v287(v308, 1, v286))
  {
    uint64_t v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v307, v308, *(void *)(*(void *)(v309 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v470 + 16))(v307, v308, v286);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v470 + 56))(v307, 0, 1, v286);
  }
  uint64_t v310 = v278[17];
  v311 = (void *)(v276 + v310);
  v312 = &v277[v310];
  void *v311 = *(void *)v312;
  v311[1] = *((void *)v312 + 1);
  *(void *)(v276 + v278[18]) = *(void *)&v277[v278[18]];
  *(unsigned char *)(v276 + v278[19]) = v277[v278[19]];
  uint64_t v313 = v278[20];
  __srca = (void *)(v276 + v313);
  v314 = &v277[v313];
  uint64_t v315 = sub_1ACE750A8();
  uint64_t v316 = *(void *)(v315 - 8);
  v317 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v316 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v317(v314, 1, v315))
  {
    uint64_t v318 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(__srca, v314, *(void *)(*(void *)(v318 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v316 + 16))(__srca, v314, v315);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v316 + 56))(__srca, 0, 1, v315);
  }
  uint64_t v319 = v278[21];
  v320 = (void *)(v276 + v319);
  v321 = &v277[v319];
  void *v320 = *(void *)v321;
  v320[1] = *((void *)v321 + 1);
  *(unsigned char *)(v276 + v278[22]) = v277[v278[22]];
  *(unsigned char *)(v276 + v278[23]) = v277[v278[23]];
  *(unsigned char *)(v276 + v278[24]) = v277[v278[24]];
  *(unsigned char *)(v276 + v278[25]) = v277[v278[25]];
  *(unsigned char *)(v276 + v278[26]) = v277[v278[26]];
  *(unsigned char *)(v276 + v278[27]) = v277[v278[27]];
  *(unsigned char *)(v276 + v278[28]) = v277[v278[28]];
  *(void *)(v276 + v278[29]) = *(void *)&v277[v278[29]];
  *(void *)(v276 + v278[30]) = *(void *)&v277[v278[30]];
  *(unsigned char *)(v276 + v278[31]) = v277[v278[31]];
  uint64_t v322 = v278[32];
  v323 = (void *)(v276 + v322);
  v324 = &v277[v322];
  void *v323 = *(void *)v324;
  v323[1] = *((void *)v324 + 1);
  *(void *)(v276 + v278[33]) = *(void *)&v277[v278[33]];
  uint64_t v325 = v278[34];
  v326 = (void *)(v276 + v325);
  v327 = &v277[v325];
  void *v326 = *(void *)v327;
  v326[1] = *((void *)v327 + 1);
  uint64_t v328 = v278[35];
  v329 = (void *)(v276 + v328);
  v330 = &v277[v328];
  void *v329 = *(void *)v330;
  v329[1] = *((void *)v330 + 1);
  uint64_t v331 = v278[36];
  v332 = (void *)(v276 + v331);
  v333 = &v277[v331];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v458(v333, 1, v286))
  {
    uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v332, v333, *(void *)(*(void *)(v334 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v470 + 16))(v332, v333, v286);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v470 + 56))(v332, 0, 1, v286);
  }
  a3 = v474;
  uint64_t v4 = v478;
  uint64_t v335 = v278[37];
  v336 = (void *)(v276 + v335);
  v337 = &v277[v335];
  void *v336 = *(void *)v337;
  v336[1] = *((void *)v337 + 1);
  uint64_t v338 = v278[38];
  v339 = (void *)(v276 + v338);
  v340 = &v277[v338];
  void *v339 = *(void *)v340;
  v339[1] = *((void *)v340 + 1);
  *(unsigned char *)(v276 + v278[39]) = v277[v278[39]];
  *(unsigned char *)(v276 + v278[40]) = v277[v278[40]];
  *(unsigned char *)(v276 + v278[41]) = v277[v278[41]];
  *(unsigned char *)(v276 + v278[42]) = v277[v278[42]];
  *(unsigned char *)(v276 + v278[43]) = v277[v278[43]];
  *(unsigned char *)(v276 + v278[44]) = v277[v278[44]];
  *(unsigned char *)(v276 + v278[45]) = v277[v278[45]];
  uint64_t v341 = v278[46];
  v342 = (void *)(v276 + v341);
  v343 = &v277[v341];
  void *v342 = *(void *)v343;
  v342[1] = *((void *)v343 + 1);
  v344 = (void (*)(uint64_t, void, uint64_t, int *))v440[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v344(v276, 0, 1, v278);
  uint64_t v5 = v459;
LABEL_133:
  uint64_t v398 = a3[15];
  v399 = (char *)v5 + v398;
  v400 = (char *)v4 + v398;
  uint64_t v401 = *(void *)v400;
  v399[8] = v400[8];
  *(void *)v399 = v401;
  *((unsigned char *)v5 + a3[16]) = *((unsigned char *)v4 + a3[16]);
  *(void *)((char *)v5 + a3[17]) = *(void *)((char *)v4 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v402 = a3[18];
  v403 = (char *)v5 + v402;
  v404 = (char *)v4 + v402;
  uint64_t v405 = *(void *)v404;
  v403[8] = v404[8];
  *(void *)v403 = v405;
  uint64_t v406 = a3[19];
  uint64_t v407 = (uint64_t)v5 + v406;
  v408 = (char *)v4 + v406;
  int v409 = *((unsigned __int8 *)v4 + v406 + 32);
  if (*((unsigned __int8 *)v5 + v406 + 32) == 255)
  {
    if (v409 == 255)
    {
      long long v425 = *(_OWORD *)v408;
      long long v426 = *((_OWORD *)v408 + 1);
      *(unsigned char *)(v407 + 32) = v408[32];
      *(_OWORD *)uint64_t v407 = v425;
      *(_OWORD *)(v407 + 16) = v426;
    }
    else
    {
      uint64_t v419 = *(void *)v408;
      uint64_t v420 = *((void *)v408 + 1);
      uint64_t v421 = *((void *)v408 + 2);
      uint64_t v422 = *((void *)v408 + 3);
      sub_1ACA639E4(v419, v420, v421, v422, v409);
      *(void *)uint64_t v407 = v419;
      *(void *)(v407 + 8) = v420;
      *(void *)(v407 + 16) = v421;
      *(void *)(v407 + 24) = v422;
      *(unsigned char *)(v407 + 32) = v409;
    }
  }
  else if (v409 == 255)
  {
    sub_1ACABF718(v407);
    char v423 = v408[32];
    long long v424 = *((_OWORD *)v408 + 1);
    *(_OWORD *)uint64_t v407 = *(_OWORD *)v408;
    *(_OWORD *)(v407 + 16) = v424;
    *(unsigned char *)(v407 + 32) = v423;
  }
  else
  {
    uint64_t v410 = *(void *)v408;
    uint64_t v411 = *((void *)v408 + 1);
    uint64_t v412 = *((void *)v408 + 2);
    uint64_t v413 = *((void *)v408 + 3);
    sub_1ACA639E4(v410, v411, v412, v413, v409);
    uint64_t v414 = *(void *)v407;
    uint64_t v415 = *(void *)(v407 + 8);
    uint64_t v416 = *(void *)(v407 + 16);
    uint64_t v417 = *(void *)(v407 + 24);
    *(void *)uint64_t v407 = v410;
    *(void *)(v407 + 8) = v411;
    *(void *)(v407 + 16) = v412;
    *(void *)(v407 + 24) = v413;
    unsigned __int8 v418 = *(unsigned char *)(v407 + 32);
    *(unsigned char *)(v407 + 32) = v409;
    sub_1ACA63688(v414, v415, v416, v417, v418);
  }
  return v5;
}

uint64_t sub_1ACCDE908(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s20PlaybackQueueContextVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = a3[11];
  id v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v10 = type metadata accessor for PlaybackIntent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    *id v8 = *v9;
    v8[1] = v13;
    *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_DWORD *)((char *)v8 + 119) = *(_DWORD *)((char *)v9 + 119);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
    uint64_t v103 = v10;
    uint64_t v14 = *(int *)(v10 + 24);
    uint64_t v15 = (_OWORD *)((char *)v8 + v14);
    uint64_t v16 = (_OWORD *)((char *)v9 + v14);
    uint64_t v17 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v90 = v18;
      uint64_t v91 = v11;
      long long v20 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v20;
      v15[2] = v16[2];
      *((void *)v15 + 6) = *((void *)v16 + 6);
      *((unsigned char *)v15 + 56) = *((unsigned char *)v16 + 56);
      *((void *)v15 + 8) = *((void *)v16 + 8);
      *((unsigned char *)v15 + 72) = *((unsigned char *)v16 + 72);
      long long v21 = v16[6];
      v15[5] = v16[5];
      v15[6] = v21;
      v15[7] = v16[7];
      uint64_t v22 = v17[12];
      __dst = (char *)v15 + v22;
      uint64_t v23 = (char *)v16 + v22;
      uint64_t v24 = sub_1ACE74F28();
      uint64_t v25 = *(void *)(v24 - 8);
      __src = v23;
      uint64_t v26 = v23;
      uint64_t v27 = v24;
      char v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      uint64_t v98 = v25;
      if (v100(v26, 1, v24))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, __src, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v25 + 32))(__dst, __src, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v27);
      }
      *(_OWORD *)((char *)v15 + v17[13]) = *(_OWORD *)((char *)v16 + v17[13]);
      *(void *)((char *)v15 + v17[14]) = *(void *)((char *)v16 + v17[14]);
      uint64_t v29 = v17[15];
      long long v30 = (char *)v15 + v29;
      long long v31 = (char *)v16 + v29;
      v30[8] = v31[8];
      *(void *)long long v30 = *(void *)v31;
      uint64_t v32 = v17[16];
      __dsta = (char *)v15 + v32;
      uint64_t v33 = (char *)v16 + v32;
      uint64_t v89 = v27;
      if (v100((char *)v16 + v32, 1, v27))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dsta, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v98 + 32))(__dsta, v33, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v27);
      }
      *(_OWORD *)((char *)v15 + v17[17]) = *(_OWORD *)((char *)v16 + v17[17]);
      *(void *)((char *)v15 + v17[18]) = *(void *)((char *)v16 + v17[18]);
      *((unsigned char *)v15 + v17[19]) = *((unsigned char *)v16 + v17[19]);
      uint64_t v35 = v17[20];
      __dstb = (char *)v15 + v35;
      uint64_t v36 = (char *)v16 + v35;
      uint64_t v37 = sub_1ACE750A8();
      uint64_t v87 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v36, 1, v37))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(__dstb, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 32))(__dstb, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(__dstb, 0, 1, v37);
      }
      *(_OWORD *)((char *)v15 + v17[21]) = *(_OWORD *)((char *)v16 + v17[21]);
      *((unsigned char *)v15 + v17[22]) = *((unsigned char *)v16 + v17[22]);
      *((unsigned char *)v15 + v17[23]) = *((unsigned char *)v16 + v17[23]);
      *((unsigned char *)v15 + v17[24]) = *((unsigned char *)v16 + v17[24]);
      *((unsigned char *)v15 + v17[25]) = *((unsigned char *)v16 + v17[25]);
      *((unsigned char *)v15 + v17[26]) = *((unsigned char *)v16 + v17[26]);
      *((unsigned char *)v15 + v17[27]) = *((unsigned char *)v16 + v17[27]);
      *((unsigned char *)v15 + v17[28]) = *((unsigned char *)v16 + v17[28]);
      *(void *)((char *)v15 + v17[29]) = *(void *)((char *)v16 + v17[29]);
      *(void *)((char *)v15 + v17[30]) = *(void *)((char *)v16 + v17[30]);
      *((unsigned char *)v15 + v17[31]) = *((unsigned char *)v16 + v17[31]);
      *(_OWORD *)((char *)v15 + v17[32]) = *(_OWORD *)((char *)v16 + v17[32]);
      *(void *)((char *)v15 + v17[33]) = *(void *)((char *)v16 + v17[33]);
      *(_OWORD *)((char *)v15 + v17[34]) = *(_OWORD *)((char *)v16 + v17[34]);
      *(_OWORD *)((char *)v15 + v17[35]) = *(_OWORD *)((char *)v16 + v17[35]);
      uint64_t v39 = v17[36];
      __dstc = (char *)v15 + v39;
      uint64_t v40 = (char *)v16 + v39;
      if (v100((char *)v16 + v39, 1, v89))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dstc, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v98 + 32))(__dstc, v40, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(__dstc, 0, 1, v89);
      }
      *(_OWORD *)((char *)v15 + v17[37]) = *(_OWORD *)((char *)v16 + v17[37]);
      *(_OWORD *)((char *)v15 + v17[38]) = *(_OWORD *)((char *)v16 + v17[38]);
      *((unsigned char *)v15 + v17[39]) = *((unsigned char *)v16 + v17[39]);
      *((unsigned char *)v15 + v17[40]) = *((unsigned char *)v16 + v17[40]);
      *((unsigned char *)v15 + v17[41]) = *((unsigned char *)v16 + v17[41]);
      *((unsigned char *)v15 + v17[42]) = *((unsigned char *)v16 + v17[42]);
      *((unsigned char *)v15 + v17[43]) = *((unsigned char *)v16 + v17[43]);
      *((unsigned char *)v15 + v17[44]) = *((unsigned char *)v16 + v17[44]);
      *((unsigned char *)v15 + v17[45]) = *((unsigned char *)v16 + v17[45]);
      *(_OWORD *)((char *)v15 + v17[46]) = *(_OWORD *)((char *)v16 + v17[46]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v90 + 56))(v15, 0, 1, v17);
      uint64_t v11 = v91;
    }
    *(void *)((char *)v8 + *(int *)(v103 + 28)) = *(void *)((char *)v9 + *(int *)(v103 + 28));
    *(_OWORD *)((char *)v8 + *(int *)(v103 + 32)) = *(_OWORD *)((char *)v9 + *(int *)(v103 + 32));
    (*(void (**)(_OWORD *, void, uint64_t))(v11 + 56))(v8, 0, 1);
  }
  uint64_t v42 = v3[13];
  *(void *)(a1 + v3[12]) = *(void *)(a2 + v3[12]);
  *(void *)(a1 + v42) = *(void *)(a2 + v42);
  uint64_t v43 = v3[14];
  uint64_t v44 = (_OWORD *)(a1 + v43);
  uint64_t v45 = (_OWORD *)(a2 + v43);
  int v46 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v47 = *((void *)v46 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    __dstd = v3;
    long long v49 = v45[1];
    _OWORD *v44 = *v45;
    v44[1] = v49;
    v44[2] = v45[2];
    *((void *)v44 + 6) = *((void *)v45 + 6);
    *((unsigned char *)v44 + 56) = *((unsigned char *)v45 + 56);
    *((void *)v44 + 8) = *((void *)v45 + 8);
    *((unsigned char *)v44 + 72) = *((unsigned char *)v45 + 72);
    long long v50 = v45[6];
    v44[5] = v45[5];
    v44[6] = v50;
    v44[7] = v45[7];
    uint64_t v51 = v46[12];
    uint64_t v52 = (char *)v44 + v51;
    uint64_t v53 = (char *)v45 + v51;
    uint64_t v54 = sub_1ACE74F28();
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    uint64_t v92 = v55;
    if (v102(v53, 1, v54))
    {
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    *(_OWORD *)((char *)v44 + v46[13]) = *(_OWORD *)((char *)v45 + v46[13]);
    *(void *)((char *)v44 + v46[14]) = *(void *)((char *)v45 + v46[14]);
    uint64_t v57 = v46[15];
    uint64_t v58 = (char *)v44 + v57;
    uint64_t v59 = (char *)v45 + v57;
    v58[8] = v59[8];
    *(void *)uint64_t v58 = *(void *)v59;
    uint64_t v60 = v46[16];
    uint64_t v61 = (char *)v44 + v60;
    uint64_t v62 = (char *)v45 + v60;
    uint64_t v3 = __dstd;
    uint64_t v99 = v54;
    uint64_t v101 = v47;
    if (v102((char *)v45 + v60, 1, v54))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v61, v62, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v61, 0, 1, v54);
    }
    *(_OWORD *)((char *)v44 + v46[17]) = *(_OWORD *)((char *)v45 + v46[17]);
    *(void *)((char *)v44 + v46[18]) = *(void *)((char *)v45 + v46[18]);
    *((unsigned char *)v44 + v46[19]) = *((unsigned char *)v45 + v46[19]);
    uint64_t v64 = v46[20];
    uint64_t v65 = (char *)v44 + v64;
    uint64_t v66 = (char *)v45 + v64;
    uint64_t v67 = sub_1ACE750A8();
    uint64_t v68 = *(void *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    uint64_t v70 = v101;
    *(_OWORD *)((char *)v44 + v46[21]) = *(_OWORD *)((char *)v45 + v46[21]);
    *((unsigned char *)v44 + v46[22]) = *((unsigned char *)v45 + v46[22]);
    *((unsigned char *)v44 + v46[23]) = *((unsigned char *)v45 + v46[23]);
    *((unsigned char *)v44 + v46[24]) = *((unsigned char *)v45 + v46[24]);
    *((unsigned char *)v44 + v46[25]) = *((unsigned char *)v45 + v46[25]);
    *((unsigned char *)v44 + v46[26]) = *((unsigned char *)v45 + v46[26]);
    *((unsigned char *)v44 + v46[27]) = *((unsigned char *)v45 + v46[27]);
    *((unsigned char *)v44 + v46[28]) = *((unsigned char *)v45 + v46[28]);
    *(void *)((char *)v44 + v46[29]) = *(void *)((char *)v45 + v46[29]);
    *(void *)((char *)v44 + v46[30]) = *(void *)((char *)v45 + v46[30]);
    *((unsigned char *)v44 + v46[31]) = *((unsigned char *)v45 + v46[31]);
    *(_OWORD *)((char *)v44 + v46[32]) = *(_OWORD *)((char *)v45 + v46[32]);
    *(void *)((char *)v44 + v46[33]) = *(void *)((char *)v45 + v46[33]);
    *(_OWORD *)((char *)v44 + v46[34]) = *(_OWORD *)((char *)v45 + v46[34]);
    *(_OWORD *)((char *)v44 + v46[35]) = *(_OWORD *)((char *)v45 + v46[35]);
    uint64_t v71 = v46[36];
    long long v72 = (char *)v44 + v71;
    long long v73 = (char *)v45 + v71;
    if (v102((char *)v45 + v71, 1, v99))
    {
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v72, v73, v99);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v72, 0, 1, v99);
      uint64_t v70 = v101;
    }
    *(_OWORD *)((char *)v44 + v46[37]) = *(_OWORD *)((char *)v45 + v46[37]);
    *(_OWORD *)((char *)v44 + v46[38]) = *(_OWORD *)((char *)v45 + v46[38]);
    *((unsigned char *)v44 + v46[39]) = *((unsigned char *)v45 + v46[39]);
    *((unsigned char *)v44 + v46[40]) = *((unsigned char *)v45 + v46[40]);
    *((unsigned char *)v44 + v46[41]) = *((unsigned char *)v45 + v46[41]);
    *((unsigned char *)v44 + v46[42]) = *((unsigned char *)v45 + v46[42]);
    *((unsigned char *)v44 + v46[43]) = *((unsigned char *)v45 + v46[43]);
    *((unsigned char *)v44 + v46[44]) = *((unsigned char *)v45 + v46[44]);
    *((unsigned char *)v44 + v46[45]) = *((unsigned char *)v45 + v46[45]);
    *(_OWORD *)((char *)v44 + v46[46]) = *(_OWORD *)((char *)v45 + v46[46]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v70 + 56))(v44, 0, 1, v46);
  }
  uint64_t v75 = v3[15];
  uint64_t v76 = v3[16];
  uint64_t v77 = a1 + v75;
  uint64_t v78 = a2 + v75;
  *(void *)uint64_t v77 = *(void *)v78;
  *(unsigned char *)(v77 + 8) = *(unsigned char *)(v78 + 8);
  *(unsigned char *)(a1 + v76) = *(unsigned char *)(a2 + v76);
  uint64_t v79 = v3[18];
  *(void *)(a1 + v3[17]) = *(void *)(a2 + v3[17]);
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  *(void *)uint64_t v80 = *(void *)v81;
  *(unsigned char *)(v80 + 8) = *(unsigned char *)(v81 + 8);
  uint64_t v82 = v3[19];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  *(unsigned char *)(v83 + 32) = *(unsigned char *)(v84 + 32);
  long long v85 = *(_OWORD *)(v84 + 16);
  *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
  *(_OWORD *)(v83 + 16) = v85;
  return a1;
}

uint64_t _s20PlaybackQueueContextVwta(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v4[1];
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v4 + 16);
  uint64_t v6 = v4[4];
  *(void *)(a1 + 24) = v4[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4[5];

  id v8 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4[6];

  uint64_t v9 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4[7];

  uint64_t v10 = v4[9];
  *(void *)(a1 + 64) = v4[8];
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v4[11];
  *(void *)(a1 + 80) = v4[10];
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[11];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)v4 + v12;
  uint64_t v15 = type metadata accessor for PlaybackIntent(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1ACCDE908(v13, type metadata accessor for PlaybackIntent);
      goto LABEL_7;
    }
    char v28 = v14[32];
    uint64_t v29 = *(void *)v13;
    uint64_t v30 = *(void *)(v13 + 8);
    uint64_t v31 = *(void *)(v13 + 16);
    uint64_t v32 = *(void *)(v13 + 24);
    long long v33 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v33;
    unsigned __int8 v34 = *(unsigned char *)(v13 + 32);
    *(unsigned char *)(v13 + 32) = v28;
    sub_1ACA63688(v29, v30, v31, v32, v34);
    if (*(unsigned char *)(v13 + 120) != 2)
    {
      if (v14[120] != 2)
      {
        char v44 = v14[104];
        uint64_t v45 = *(void *)(v13 + 40);
        uint64_t v46 = *(void *)(v13 + 48);
        uint64_t v47 = *(void *)(v13 + 56);
        uint64_t v48 = *(void *)(v13 + 64);
        uint64_t v49 = *(void *)(v13 + 72);
        uint64_t v50 = *(void *)(v13 + 80);
        uint64_t v51 = *(void *)(v13 + 88);
        uint64_t v52 = *(void *)(v13 + 96);
        char v53 = *(unsigned char *)(v13 + 104);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
        *(unsigned char *)(v13 + 104) = v44;
        sub_1ACA63738(v45, v46, v47, v48, v49, v50, v51, v52, v53);
        *(unsigned char *)(v13 + 105) = v14[105];
        *(void *)(v13 + 112) = *((void *)v14 + 14);
        *(unsigned char *)(v13 + 120) = v14[120];
        *(unsigned char *)(v13 + 121) = v14[121];
        *(unsigned char *)(v13 + 122) = v14[122];
LABEL_15:
        uint64_t v357 = v15;
        v361 = v14;
        uint64_t v54 = *(int *)(v15 + 24);
        uint64_t v55 = v13 + v54;
        uint64_t v56 = &v14[v54];
        uint64_t v57 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
        uint64_t v352 = *((void *)v57 - 1);
        uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v352 + 48);
        int v59 = v58(v55, 1, v57);
        int v60 = v58((uint64_t)v56, 1, v57);
        if (v59)
        {
          if (!v60)
          {
            v363 = a3;
            long long v61 = *((_OWORD *)v56 + 1);
            *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
            *(_OWORD *)(v55 + 16) = v61;
            *(_OWORD *)(v55 + 32) = *((_OWORD *)v56 + 2);
            *(void *)(v55 + 48) = *((void *)v56 + 6);
            *(unsigned char *)(v55 + 56) = v56[56];
            *(void *)(v55 + 64) = *((void *)v56 + 8);
            *(unsigned char *)(v55 + 72) = v56[72];
            long long v62 = *((_OWORD *)v56 + 6);
            *(_OWORD *)(v55 + 80) = *((_OWORD *)v56 + 5);
            *(_OWORD *)(v55 + 96) = v62;
            *(_OWORD *)(v55 + 112) = *((_OWORD *)v56 + 7);
            uint64_t v63 = v57[12];
            uint64_t v64 = (void *)(v55 + v63);
            uint64_t v65 = &v56[v63];
            uint64_t v66 = sub_1ACE74F28();
            uint64_t v67 = *(void *)(v66 - 8);
            uint64_t v350 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
            __srca = (void (**)(void *, const void *, uint64_t))v67;
            if (v350(v65, 1, v66))
            {
              uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
              memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
            }
            *(_OWORD *)(v55 + v57[13]) = *(_OWORD *)&v56[v57[13]];
            *(void *)(v55 + v57[14]) = *(void *)&v56[v57[14]];
            uint64_t v100 = v57[15];
            uint64_t v101 = v55 + v100;
            uint64_t v102 = &v56[v100];
            *(unsigned char *)(v101 + 8) = v102[8];
            *(void *)uint64_t v101 = *(void *)v102;
            uint64_t v103 = v57[16];
            __int16 v104 = (void *)(v55 + v103);
            uint64_t v105 = &v56[v103];
            __dstd = (void *)v66;
            if (v350(&v56[v103], 1, v66))
            {
              uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
              memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              __srca[4](v104, v105, v66);
              ((void (*)(void *, void, uint64_t, uint64_t))__srca[7])(v104, 0, 1, v66);
            }
            *(_OWORD *)(v55 + v57[17]) = *(_OWORD *)&v56[v57[17]];
            *(void *)(v55 + v57[18]) = *(void *)&v56[v57[18]];
            *(unsigned char *)(v55 + v57[19]) = v56[v57[19]];
            uint64_t v107 = v57[20];
            uint64_t v331 = (void *)(v55 + v107);
            int v108 = &v56[v107];
            uint64_t v109 = sub_1ACE750A8();
            uint64_t v110 = *(void *)(v109 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
            {
              uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
              memcpy(v331, v108, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v110 + 32))(v331, v108, v109);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v331, 0, 1, v109);
            }
            *(_OWORD *)(v55 + v57[21]) = *(_OWORD *)&v56[v57[21]];
            *(unsigned char *)(v55 + v57[22]) = v56[v57[22]];
            *(unsigned char *)(v55 + v57[23]) = v56[v57[23]];
            *(unsigned char *)(v55 + v57[24]) = v56[v57[24]];
            *(unsigned char *)(v55 + v57[25]) = v56[v57[25]];
            *(unsigned char *)(v55 + v57[26]) = v56[v57[26]];
            *(unsigned char *)(v55 + v57[27]) = v56[v57[27]];
            *(unsigned char *)(v55 + v57[28]) = v56[v57[28]];
            *(void *)(v55 + v57[29]) = *(void *)&v56[v57[29]];
            *(void *)(v55 + v57[30]) = *(void *)&v56[v57[30]];
            *(unsigned char *)(v55 + v57[31]) = v56[v57[31]];
            *(_OWORD *)(v55 + v57[32]) = *(_OWORD *)&v56[v57[32]];
            *(void *)(v55 + v57[33]) = *(void *)&v56[v57[33]];
            *(_OWORD *)(v55 + v57[34]) = *(_OWORD *)&v56[v57[34]];
            *(_OWORD *)(v55 + v57[35]) = *(_OWORD *)&v56[v57[35]];
            uint64_t v112 = v57[36];
            uint64_t v113 = (void *)(v55 + v112);
            uint64_t v114 = &v56[v112];
            if (v350(&v56[v112], 1, (uint64_t)__dstd))
            {
              uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
              memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              __srca[4](v113, v114, (uint64_t)__dstd);
              ((void (*)(void *, void, uint64_t, void *))__srca[7])(v113, 0, 1, __dstd);
            }
            *(_OWORD *)(v55 + v57[37]) = *(_OWORD *)&v56[v57[37]];
            *(_OWORD *)(v55 + v57[38]) = *(_OWORD *)&v56[v57[38]];
            *(unsigned char *)(v55 + v57[39]) = v56[v57[39]];
            *(unsigned char *)(v55 + v57[40]) = v56[v57[40]];
            *(unsigned char *)(v55 + v57[41]) = v56[v57[41]];
            *(unsigned char *)(v55 + v57[42]) = v56[v57[42]];
            *(unsigned char *)(v55 + v57[43]) = v56[v57[43]];
            *(unsigned char *)(v55 + v57[44]) = v56[v57[44]];
            *(unsigned char *)(v55 + v57[45]) = v56[v57[45]];
            *(_OWORD *)(v55 + v57[46]) = *(_OWORD *)&v56[v57[46]];
            (*(void (**)(uint64_t, void, uint64_t, int *))(v352 + 56))(v55, 0, 1, v57);
            goto LABEL_78;
          }
LABEL_21:
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
          memcpy((void *)v55, v56, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_79:
          *(void *)(v13 + *(int *)(v357 + 28)) = *(void *)&v361[*(int *)(v357 + 28)];
          swift_bridgeObjectRelease();
          uint64_t v181 = *(int *)(v357 + 32);
          uint64_t v182 = (void *)(v13 + v181);
          uint64_t v183 = (uint64_t *)&v361[v181];
          uint64_t v185 = *v183;
          uint64_t v184 = v183[1];
          *uint64_t v182 = v185;
          v182[1] = v184;
          swift_bridgeObjectRelease();
          goto LABEL_80;
        }
        if (v60)
        {
          sub_1ACCDE908(v55, type metadata accessor for PodcastsMediaLibrary.MediaItem);
          goto LABEL_21;
        }
        v363 = a3;
        uint64_t v87 = *((void *)v56 + 1);
        *(void *)uint64_t v55 = *(void *)v56;
        *(void *)(v55 + 8) = v87;
        swift_bridgeObjectRelease();
        uint64_t v88 = *((void *)v56 + 3);
        *(void *)(v55 + 16) = *((void *)v56 + 2);
        *(void *)(v55 + 24) = v88;
        swift_bridgeObjectRelease();
        uint64_t v89 = *((void *)v56 + 5);
        *(void *)(v55 + 32) = *((void *)v56 + 4);
        *(void *)(v55 + 40) = v89;
        swift_bridgeObjectRelease();
        *(void *)(v55 + 48) = *((void *)v56 + 6);
        *(unsigned char *)(v55 + 56) = v56[56];
        *(void *)(v55 + 64) = *((void *)v56 + 8);
        *(unsigned char *)(v55 + 72) = v56[72];
        uint64_t v90 = *((void *)v56 + 11);
        *(void *)(v55 + 80) = *((void *)v56 + 10);
        *(void *)(v55 + 88) = v90;
        swift_bridgeObjectRelease();
        uint64_t v91 = *((void *)v56 + 13);
        *(void *)(v55 + 96) = *((void *)v56 + 12);
        *(void *)(v55 + 104) = v91;
        swift_bridgeObjectRelease();
        uint64_t v92 = *((void *)v56 + 15);
        *(void *)(v55 + 112) = *((void *)v56 + 14);
        *(void *)(v55 + 120) = v92;
        swift_bridgeObjectRelease();
        uint64_t v93 = v57[12];
        uint64_t v94 = (void *)(v55 + v93);
        __dstc = &v56[v93];
        uint64_t v95 = sub_1ACE74F28();
        char __srcb = v94;
        v330 = *(void **)(v95 - 8);
        uint64_t v96 = (uint64_t (*)(void))v330[6];
        LODWORD(v94) = ((uint64_t (*)(void *, uint64_t, uint64_t))v96)(v94, 1, v95);
        uint64_t v353 = v95;
        uint64_t v345 = v96;
        int v97 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(__dstc, 1, v95);
        if (v94)
        {
          if (v97)
          {
            size_t v98 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
            uint64_t v99 = __srcb;
LABEL_50:
            memcpy(v99, __dstc, v98);
            goto LABEL_53;
          }
          ((void (*)(void *, char *, uint64_t))v330[4])(__srcb, __dstc, v95);
          ((void (*)(void *, void, uint64_t, uint64_t))v330[7])(__srcb, 0, 1, v95);
        }
        else
        {
          if (v97)
          {
            ((void (*)(void *, uint64_t))v330[1])(__srcb, v95);
            size_t v98 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
            uint64_t v99 = __srcb;
            goto LABEL_50;
          }
          ((void (*)(void *, char *, uint64_t))v330[5])(__srcb, __dstc, v95);
        }
LABEL_53:
        uint64_t v116 = v57[13];
        uint64_t v117 = (void *)(v55 + v116);
        uint64_t v118 = (uint64_t *)&v56[v116];
        uint64_t v120 = *v118;
        uint64_t v119 = v118[1];
        void *v117 = v120;
        v117[1] = v119;
        swift_bridgeObjectRelease();
        *(void *)(v55 + v57[14]) = *(void *)&v56[v57[14]];
        uint64_t v121 = v57[15];
        uint64_t v122 = v55 + v121;
        uint64_t v123 = &v56[v121];
        *(void *)uint64_t v122 = *(void *)v123;
        *(unsigned char *)(v122 + 8) = v123[8];
        uint64_t v124 = v57[16];
        uint64_t v125 = &v56[v124];
        __dste = (void *)(v55 + v124);
        int v322 = v96();
        int v126 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(v125, 1, v353);
        if (v322)
        {
          if (v126)
          {
            size_t v127 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
            uint64_t v128 = __dste;
LABEL_58:
            memcpy(v128, v125, v127);
            goto LABEL_61;
          }
          ((void (*)(void *, char *, uint64_t))v330[4])(__dste, v125, v353);
          ((void (*)(void *, void, uint64_t, uint64_t))v330[7])(__dste, 0, 1, v353);
        }
        else
        {
          if (v126)
          {
            ((void (*)(void *, uint64_t))v330[1])(__dste, v353);
            size_t v127 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
            uint64_t v128 = __dste;
            goto LABEL_58;
          }
          ((void (*)(void *, char *, uint64_t))v330[5])(__dste, v125, v353);
        }
LABEL_61:
        uint64_t v129 = v57[17];
        uint64_t v130 = (void *)(v55 + v129);
        uint64_t v131 = (uint64_t *)&v56[v129];
        uint64_t v133 = *v131;
        uint64_t v132 = v131[1];
        *uint64_t v130 = v133;
        v130[1] = v132;
        swift_bridgeObjectRelease();
        *(void *)(v55 + v57[18]) = *(void *)&v56[v57[18]];
        swift_release();
        *(unsigned char *)(v55 + v57[19]) = v56[v57[19]];
        uint64_t v134 = v57[20];
        uint64_t v135 = (void *)(v55 + v134);
        __dstf = &v56[v134];
        uint64_t v136 = sub_1ACE750A8();
        uint64_t v323 = *(void *)(v136 - 8);
        __srcc = v135;
        uint64_t v137 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v323 + 48);
        LODWORD(v135) = v137(v135, 1, v136);
        int v138 = v137(__dstf, 1, v136);
        if (v135)
        {
          if (v138)
          {
            size_t v139 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                             + 64);
            char v140 = __srcc;
LABEL_66:
            memcpy(v140, __dstf, v139);
            goto LABEL_69;
          }
          (*(void (**)(void *, char *, uint64_t))(v323 + 32))(__srcc, __dstf, v136);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v323 + 56))(__srcc, 0, 1, v136);
        }
        else
        {
          if (v138)
          {
            (*(void (**)(void *, uint64_t))(v323 + 8))(__srcc, v136);
            size_t v139 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                             + 64);
            char v140 = __srcc;
            goto LABEL_66;
          }
          (*(void (**)(void *, char *, uint64_t))(v323 + 40))(__srcc, __dstf, v136);
        }
LABEL_69:
        uint64_t v141 = v57[21];
        uint64_t v142 = (void *)(v55 + v141);
        uint64_t v143 = (uint64_t *)&v56[v141];
        uint64_t v145 = *v143;
        uint64_t v144 = v143[1];
        *uint64_t v142 = v145;
        v142[1] = v144;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v55 + v57[22]) = v56[v57[22]];
        *(unsigned char *)(v55 + v57[23]) = v56[v57[23]];
        *(unsigned char *)(v55 + v57[24]) = v56[v57[24]];
        *(unsigned char *)(v55 + v57[25]) = v56[v57[25]];
        *(unsigned char *)(v55 + v57[26]) = v56[v57[26]];
        *(unsigned char *)(v55 + v57[27]) = v56[v57[27]];
        *(unsigned char *)(v55 + v57[28]) = v56[v57[28]];
        *(void *)(v55 + v57[29]) = *(void *)&v56[v57[29]];
        *(void *)(v55 + v57[30]) = *(void *)&v56[v57[30]];
        *(unsigned char *)(v55 + v57[31]) = v56[v57[31]];
        uint64_t v146 = v57[32];
        uint64_t v147 = (void *)(v55 + v146);
        uint64_t v148 = (uint64_t *)&v56[v146];
        uint64_t v150 = *v148;
        uint64_t v149 = v148[1];
        *uint64_t v147 = v150;
        v147[1] = v149;
        swift_bridgeObjectRelease();
        *(void *)(v55 + v57[33]) = *(void *)&v56[v57[33]];
        swift_bridgeObjectRelease();
        uint64_t v151 = v57[34];
        uint64_t v152 = (void *)(v55 + v151);
        uint64_t v153 = (uint64_t *)&v56[v151];
        uint64_t v155 = *v153;
        uint64_t v154 = v153[1];
        *uint64_t v152 = v155;
        v152[1] = v154;
        swift_bridgeObjectRelease();
        uint64_t v156 = v57[35];
        uint64_t v157 = (void *)(v55 + v156);
        v158 = (uint64_t *)&v56[v156];
        uint64_t v160 = *v158;
        uint64_t v159 = v158[1];
        void *v157 = v160;
        v157[1] = v159;
        swift_bridgeObjectRelease();
        uint64_t v161 = v57[36];
        uint64_t v162 = &v56[v161];
        __dstg = (void *)(v55 + v161);
        int v324 = v345();
        int v163 = ((uint64_t (*)(char *, uint64_t, uint64_t))v345)(v162, 1, v353);
        if (v324)
        {
          if (!v163)
          {
            ((void (*)(void *, char *, uint64_t))v330[4])(__dstg, v162, v353);
            ((void (*)(void *, void, uint64_t, uint64_t))v330[7])(__dstg, 0, 1, v353);
            goto LABEL_77;
          }
          size_t v164 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
          uint64_t v165 = __dstg;
        }
        else
        {
          if (!v163)
          {
            ((void (*)(void *, char *, uint64_t))v330[5])(__dstg, v162, v353);
            goto LABEL_77;
          }
          ((void (*)(void *, uint64_t))v330[1])(__dstg, v353);
          size_t v164 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
          uint64_t v165 = __dstg;
        }
        memcpy(v165, v162, v164);
LABEL_77:
        uint64_t v166 = v57[37];
        uint64_t v167 = (void *)(v55 + v166);
        uint64_t v168 = (uint64_t *)&v56[v166];
        uint64_t v170 = *v168;
        uint64_t v169 = v168[1];
        *uint64_t v167 = v170;
        v167[1] = v169;
        swift_bridgeObjectRelease();
        uint64_t v171 = v57[38];
        size_t v172 = (void *)(v55 + v171);
        uint64_t v173 = (uint64_t *)&v56[v171];
        uint64_t v175 = *v173;
        uint64_t v174 = v173[1];
        void *v172 = v175;
        v172[1] = v174;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v55 + v57[39]) = v56[v57[39]];
        *(unsigned char *)(v55 + v57[40]) = v56[v57[40]];
        *(unsigned char *)(v55 + v57[41]) = v56[v57[41]];
        *(unsigned char *)(v55 + v57[42]) = v56[v57[42]];
        *(unsigned char *)(v55 + v57[43]) = v56[v57[43]];
        *(unsigned char *)(v55 + v57[44]) = v56[v57[44]];
        *(unsigned char *)(v55 + v57[45]) = v56[v57[45]];
        uint64_t v176 = v57[46];
        uint64_t v177 = (void *)(v55 + v176);
        uint64_t v178 = (uint64_t *)&v56[v176];
        uint64_t v180 = *v178;
        uint64_t v179 = v178[1];
        void *v177 = v180;
        v177[1] = v179;
        swift_bridgeObjectRelease();
LABEL_78:
        a3 = v363;
        goto LABEL_79;
      }
      sub_1ACABF6C4(v13 + 40);
    }
    long long v35 = *(_OWORD *)(v14 + 88);
    *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
    *(_OWORD *)(v13 + 88) = v35;
    *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
    *(_DWORD *)(v13 + 119) = *(_DWORD *)(v14 + 119);
    long long v36 = *(_OWORD *)(v14 + 56);
    *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
    *(_OWORD *)(v13 + 56) = v36;
    goto LABEL_15;
  }
  if (v19)
  {
LABEL_7:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
    memcpy((void *)v13, v14, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_80;
  }
  long long v20 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v20;
  *(unsigned char *)(v13 + 32) = v14[32];
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
  *(_DWORD *)(v13 + 119) = *(_DWORD *)(v14 + 119);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
  uint64_t v356 = v15;
  v360 = v14;
  uint64_t v21 = *(int *)(v15 + 24);
  uint64_t v22 = (_OWORD *)(v13 + v21);
  uint64_t v23 = &v14[v21];
  uint64_t v24 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v25 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((void *)v24 - 1);
  if (((unsigned int (**)(char *, uint64_t, int *))v25)[6](v23, 1, v24))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    v344 = v25;
    uint64_t v362 = a3;
    long long v37 = *((_OWORD *)v23 + 1);
    _OWORD *v22 = *(_OWORD *)v23;
    v22[1] = v37;
    void v22[2] = *((_OWORD *)v23 + 2);
    *((void *)v22 + 6) = *((void *)v23 + 6);
    *((unsigned char *)v22 + 56) = v23[56];
    *((void *)v22 + 8) = *((void *)v23 + 8);
    *((unsigned char *)v22 + 72) = v23[72];
    long long v38 = *((_OWORD *)v23 + 6);
    v22[5] = *((_OWORD *)v23 + 5);
    v22[6] = v38;
    v22[7] = *((_OWORD *)v23 + 7);
    uint64_t v39 = v24[12];
    __dst = (char *)v22 + v39;
    uint64_t v40 = &v23[v39];
    uint64_t v41 = sub_1ACE74F28();
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v349 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    __src = (void (**)(void *, const void *, void))v42;
    if (v349(v40, 1, v41))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(__dst, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
    }
    uint64_t v70 = (void *)v41;
    *(_OWORD *)((char *)v22 + v24[13]) = *(_OWORD *)&v23[v24[13]];
    *(void *)((char *)v22 + v24[14]) = *(void *)&v23[v24[14]];
    uint64_t v71 = v24[15];
    long long v72 = (char *)v22 + v71;
    long long v73 = &v23[v71];
    v72[8] = v73[8];
    *(void *)long long v72 = *(void *)v73;
    uint64_t v74 = v24[16];
    uint64_t v75 = (char *)v22 + v74;
    uint64_t v76 = &v23[v74];
    v329 = v70;
    if (v349(&v23[v74], 1, (uint64_t)v70))
    {
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      ((void (**)(void *, const void *, void *))__src)[4](v75, v76, v70);
      ((void (*)(char *, void, uint64_t, void *))__src[7])(v75, 0, 1, v70);
    }
    *(_OWORD *)((char *)v22 + v24[17]) = *(_OWORD *)&v23[v24[17]];
    *(void *)((char *)v22 + v24[18]) = *(void *)&v23[v24[18]];
    *((unsigned char *)v22 + v24[19]) = v23[v24[19]];
    uint64_t v78 = v24[20];
    __dsta = (char *)v22 + v78;
    uint64_t v79 = &v23[v78];
    uint64_t v80 = sub_1ACE750A8();
    uint64_t v81 = *(void *)(v80 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dsta, v79, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(__dsta, v79, v80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dsta, 0, 1, v80);
    }
    uint64_t v83 = (void (**)(_OWORD *, void, uint64_t, int *))v344;
    *(_OWORD *)((char *)v22 + v24[21]) = *(_OWORD *)&v23[v24[21]];
    *((unsigned char *)v22 + v24[22]) = v23[v24[22]];
    *((unsigned char *)v22 + v24[23]) = v23[v24[23]];
    *((unsigned char *)v22 + v24[24]) = v23[v24[24]];
    *((unsigned char *)v22 + v24[25]) = v23[v24[25]];
    *((unsigned char *)v22 + v24[26]) = v23[v24[26]];
    *((unsigned char *)v22 + v24[27]) = v23[v24[27]];
    *((unsigned char *)v22 + v24[28]) = v23[v24[28]];
    *(void *)((char *)v22 + v24[29]) = *(void *)&v23[v24[29]];
    *(void *)((char *)v22 + v24[30]) = *(void *)&v23[v24[30]];
    *((unsigned char *)v22 + v24[31]) = v23[v24[31]];
    *(_OWORD *)((char *)v22 + v24[32]) = *(_OWORD *)&v23[v24[32]];
    *(void *)((char *)v22 + v24[33]) = *(void *)&v23[v24[33]];
    *(_OWORD *)((char *)v22 + v24[34]) = *(_OWORD *)&v23[v24[34]];
    *(_OWORD *)((char *)v22 + v24[35]) = *(_OWORD *)&v23[v24[35]];
    uint64_t v84 = v24[36];
    __dstb = (char *)v22 + v84;
    long long v85 = &v23[v84];
    if (v349(&v23[v84], 1, (uint64_t)v329))
    {
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dstb, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      ((void (**)(void *, const void *, void *))__src)[4](__dstb, v85, v329);
      ((void (*)(char *, void, uint64_t, void *))__src[7])(__dstb, 0, 1, v329);
      uint64_t v83 = (void (**)(_OWORD *, void, uint64_t, int *))v344;
    }
    *(_OWORD *)((char *)v22 + v24[37]) = *(_OWORD *)&v23[v24[37]];
    *(_OWORD *)((char *)v22 + v24[38]) = *(_OWORD *)&v23[v24[38]];
    *((unsigned char *)v22 + v24[39]) = v23[v24[39]];
    *((unsigned char *)v22 + v24[40]) = v23[v24[40]];
    *((unsigned char *)v22 + v24[41]) = v23[v24[41]];
    *((unsigned char *)v22 + v24[42]) = v23[v24[42]];
    *((unsigned char *)v22 + v24[43]) = v23[v24[43]];
    *((unsigned char *)v22 + v24[44]) = v23[v24[44]];
    *((unsigned char *)v22 + v24[45]) = v23[v24[45]];
    *(_OWORD *)((char *)v22 + v24[46]) = *(_OWORD *)&v23[v24[46]];
    v83[7](v22, 0, 1, v24);
    a3 = v362;
  }
  *(void *)(v13 + *(int *)(v356 + 28)) = *(void *)&v360[*(int *)(v356 + 28)];
  *(_OWORD *)(v13 + *(int *)(v356 + 32)) = *(_OWORD *)&v360[*(int *)(v356 + 32)];
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 56))(v13, 0, 1);
LABEL_80:
  *(void *)(a1 + a3[12]) = *(void *)((char *)v4 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)((char *)v4 + a3[13]);
  swift_release();
  uint64_t v186 = a3[14];
  uint64_t v187 = a1 + v186;
  uint64_t v188 = (char *)v4 + v186;
  uint64_t v189 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v190 = *((void *)v189 - 1);
  uint64_t v191 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v190 + 48);
  int v192 = v191(v187, 1, v189);
  int v193 = v191((uint64_t)v188, 1, v189);
  if (!v192)
  {
    if (v193)
    {
      sub_1ACCDE908(v187, type metadata accessor for PodcastsMediaLibrary.MediaItem);
      goto LABEL_86;
    }
    v364 = a3;
    uint64_t v203 = *((void *)v188 + 1);
    *(void *)uint64_t v187 = *(void *)v188;
    *(void *)(v187 + 8) = v203;
    swift_bridgeObjectRelease();
    uint64_t v204 = *((void *)v188 + 3);
    *(void *)(v187 + 16) = *((void *)v188 + 2);
    *(void *)(v187 + 24) = v204;
    swift_bridgeObjectRelease();
    uint64_t v205 = *((void *)v188 + 5);
    *(void *)(v187 + 32) = *((void *)v188 + 4);
    *(void *)(v187 + 40) = v205;
    swift_bridgeObjectRelease();
    *(void *)(v187 + 48) = *((void *)v188 + 6);
    *(unsigned char *)(v187 + 56) = v188[56];
    *(void *)(v187 + 64) = *((void *)v188 + 8);
    *(unsigned char *)(v187 + 72) = v188[72];
    uint64_t v206 = *((void *)v188 + 11);
    *(void *)(v187 + 80) = *((void *)v188 + 10);
    *(void *)(v187 + 88) = v206;
    swift_bridgeObjectRelease();
    uint64_t v207 = *((void *)v188 + 13);
    *(void *)(v187 + 96) = *((void *)v188 + 12);
    *(void *)(v187 + 104) = v207;
    swift_bridgeObjectRelease();
    uint64_t v208 = *((void *)v188 + 15);
    *(void *)(v187 + 112) = *((void *)v188 + 14);
    *(void *)(v187 + 120) = v208;
    swift_bridgeObjectRelease();
    uint64_t v209 = v189[12];
    uint64_t v210 = (void *)(v187 + v209);
    uint64_t v211 = &v188[v209];
    uint64_t v212 = sub_1ACE74F28();
    uint64_t v355 = *(void *)(v212 - 8);
    uint64_t v213 = *(uint64_t (**)(void))(v355 + 48);
    __dsth = v210;
    LODWORD(v210) = ((uint64_t (*)(void *, uint64_t, uint64_t))v213)(v210, 1, v212);
    uint64_t v359 = v213;
    int v214 = ((uint64_t (*)(char *, uint64_t, uint64_t))v213)(v211, 1, v212);
    if (v210)
    {
      if (v214)
      {
        size_t v215 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v216 = __dsth;
LABEL_103:
        memcpy(v216, v211, v215);
        goto LABEL_106;
      }
      (*(void (**)(void *, char *, uint64_t))(v355 + 32))(__dsth, v211, v212);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v355 + 56))(__dsth, 0, 1, v212);
    }
    else
    {
      if (v214)
      {
        (*(void (**)(void *, uint64_t))(v355 + 8))(__dsth, v212);
        size_t v215 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v216 = __dsth;
        goto LABEL_103;
      }
      (*(void (**)(void *, char *, uint64_t))(v355 + 40))(__dsth, v211, v212);
    }
LABEL_106:
    uint64_t v235 = v189[13];
    uint64_t v236 = (void *)(v187 + v235);
    v237 = &v188[v235];
    uint64_t v239 = *(void *)v237;
    uint64_t v238 = *((void *)v237 + 1);
    *uint64_t v236 = v239;
    v236[1] = v238;
    swift_bridgeObjectRelease();
    *(void *)(v187 + v189[14]) = *(void *)&v188[v189[14]];
    uint64_t v240 = v189[15];
    uint64_t v241 = v187 + v240;
    int v242 = &v188[v240];
    *(void *)uint64_t v241 = *(void *)v242;
    *(unsigned char *)(v241 + 8) = v242[8];
    uint64_t v243 = v189[16];
    v244 = &v188[v243];
    __dstuint64_t i = (void *)(v187 + v243);
    int v245 = v213();
    int v246 = ((uint64_t (*)(char *, uint64_t, uint64_t))v213)(v244, 1, v212);
    if (v245)
    {
      if (v246)
      {
        size_t v247 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v248 = __dsti;
LABEL_111:
        memcpy(v248, v244, v247);
        goto LABEL_114;
      }
      (*(void (**)(void *, char *, uint64_t))(v355 + 32))(__dsti, v244, v212);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v355 + 56))(__dsti, 0, 1, v212);
    }
    else
    {
      if (v246)
      {
        (*(void (**)(void *, uint64_t))(v355 + 8))(__dsti, v212);
        size_t v247 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
        uint64_t v248 = __dsti;
        goto LABEL_111;
      }
      (*(void (**)(void *, char *, uint64_t))(v355 + 40))(__dsti, v244, v212);
    }
LABEL_114:
    uint64_t v249 = v189[17];
    v250 = (void *)(v187 + v249);
    uint64_t v251 = &v188[v249];
    uint64_t v253 = *(void *)v251;
    uint64_t v252 = *((void *)v251 + 1);
    void *v250 = v253;
    v250[1] = v252;
    swift_bridgeObjectRelease();
    *(void *)(v187 + v189[18]) = *(void *)&v188[v189[18]];
    swift_release();
    *(unsigned char *)(v187 + v189[19]) = v188[v189[19]];
    uint64_t v254 = v189[20];
    v255 = (void *)(v187 + v254);
    v256 = &v188[v254];
    uint64_t v257 = sub_1ACE750A8();
    v332 = *(void **)(v257 - 8);
    v258 = (uint64_t (*)(void *, uint64_t, uint64_t))v332[6];
    v347 = v255;
    LODWORD(v255) = v258(v255, 1, v257);
    int v259 = v258(v256, 1, v257);
    v333 = v4;
    if (v255)
    {
      if (v259)
      {
        size_t v260 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                         + 64);
        size_t v261 = v347;
LABEL_119:
        memcpy(v261, v256, v260);
        goto LABEL_122;
      }
      ((void (*)(void *, char *, uint64_t))v332[4])(v347, v256, v257);
      ((void (*)(void *, void, uint64_t, uint64_t))v332[7])(v347, 0, 1, v257);
    }
    else
    {
      if (v259)
      {
        ((void (*)(void *, uint64_t))v332[1])(v347, v257);
        size_t v260 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8)
                         + 64);
        size_t v261 = v347;
        goto LABEL_119;
      }
      ((void (*)(void *, char *, uint64_t))v332[5])(v347, v256, v257);
    }
LABEL_122:
    a3 = v364;
    uint64_t v262 = v189[21];
    uint64_t v263 = (void *)(v187 + v262);
    v264 = &v188[v262];
    uint64_t v266 = *(void *)v264;
    uint64_t v265 = *((void *)v264 + 1);
    *uint64_t v263 = v266;
    v263[1] = v265;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v187 + v189[22]) = v188[v189[22]];
    *(unsigned char *)(v187 + v189[23]) = v188[v189[23]];
    *(unsigned char *)(v187 + v189[24]) = v188[v189[24]];
    *(unsigned char *)(v187 + v189[25]) = v188[v189[25]];
    *(unsigned char *)(v187 + v189[26]) = v188[v189[26]];
    *(unsigned char *)(v187 + v189[27]) = v188[v189[27]];
    *(unsigned char *)(v187 + v189[28]) = v188[v189[28]];
    *(void *)(v187 + v189[29]) = *(void *)&v188[v189[29]];
    *(void *)(v187 + v189[30]) = *(void *)&v188[v189[30]];
    *(unsigned char *)(v187 + v189[31]) = v188[v189[31]];
    uint64_t v267 = v189[32];
    v268 = (void *)(v187 + v267);
    uint64_t v269 = &v188[v267];
    uint64_t v271 = *(void *)v269;
    uint64_t v270 = *((void *)v269 + 1);
    void *v268 = v271;
    v268[1] = v270;
    swift_bridgeObjectRelease();
    *(void *)(v187 + v189[33]) = *(void *)&v188[v189[33]];
    swift_bridgeObjectRelease();
    uint64_t v272 = v189[34];
    v273 = (void *)(v187 + v272);
    v274 = &v188[v272];
    uint64_t v276 = *(void *)v274;
    uint64_t v275 = *((void *)v274 + 1);
    void *v273 = v276;
    v273[1] = v275;
    swift_bridgeObjectRelease();
    uint64_t v277 = v189[35];
    v278 = (void *)(v187 + v277);
    v279 = &v188[v277];
    uint64_t v281 = *(void *)v279;
    uint64_t v280 = *((void *)v279 + 1);
    void *v278 = v281;
    v278[1] = v280;
    swift_bridgeObjectRelease();
    uint64_t v282 = v189[36];
    uint64_t v283 = &v188[v282];
    v348 = (void *)(v187 + v282);
    int v284 = v359();
    int v285 = ((uint64_t (*)(char *, uint64_t, uint64_t))v359)(v283, 1, v212);
    if (v284)
    {
      if (!v285)
      {
        (*(void (**)(void *, char *, uint64_t))(v355 + 32))(v348, v283, v212);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v355 + 56))(v348, 0, 1, v212);
        goto LABEL_130;
      }
      size_t v286 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      v287 = v348;
    }
    else
    {
      if (!v285)
      {
        (*(void (**)(void *, char *, uint64_t))(v355 + 40))(v348, v283, v212);
        goto LABEL_130;
      }
      (*(void (**)(void *, uint64_t))(v355 + 8))(v348, v212);
      size_t v286 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0) - 8) + 64);
      v287 = v348;
    }
    memcpy(v287, v283, v286);
LABEL_130:
    uint64_t v4 = v333;
    uint64_t v288 = v189[37];
    uint64_t v289 = (void *)(v187 + v288);
    uint64_t v290 = &v188[v288];
    uint64_t v292 = *(void *)v290;
    uint64_t v291 = *((void *)v290 + 1);
    *uint64_t v289 = v292;
    v289[1] = v291;
    swift_bridgeObjectRelease();
    uint64_t v293 = v189[38];
    v294 = (void *)(v187 + v293);
    uint64_t v295 = &v188[v293];
    uint64_t v297 = *(void *)v295;
    uint64_t v296 = *((void *)v295 + 1);
    void *v294 = v297;
    v294[1] = v296;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v187 + v189[39]) = v188[v189[39]];
    *(unsigned char *)(v187 + v189[40]) = v188[v189[40]];
    *(unsigned char *)(v187 + v189[41]) = v188[v189[41]];
    *(unsigned char *)(v187 + v189[42]) = v188[v189[42]];
    *(unsigned char *)(v187 + v189[43]) = v188[v189[43]];
    *(unsigned char *)(v187 + v189[44]) = v188[v189[44]];
    *(unsigned char *)(v187 + v189[45]) = v188[v189[45]];
    uint64_t v298 = v189[46];
    uint64_t v299 = (void *)(v187 + v298);
    v300 = &v188[v298];
    uint64_t v302 = *(void *)v300;
    uint64_t v301 = *((void *)v300 + 1);
    *uint64_t v299 = v302;
    v299[1] = v301;
    swift_bridgeObjectRelease();
    goto LABEL_131;
  }
  if (v193)
  {
LABEL_86:
    uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy((void *)v187, v188, *(void *)(*(void *)(v202 - 8) + 64));
    goto LABEL_131;
  }
  uint64_t v354 = v190;
  long long v194 = *((_OWORD *)v188 + 1);
  *(_OWORD *)uint64_t v187 = *(_OWORD *)v188;
  *(_OWORD *)(v187 + 16) = v194;
  *(_OWORD *)(v187 + 32) = *((_OWORD *)v188 + 2);
  *(void *)(v187 + 48) = *((void *)v188 + 6);
  *(unsigned char *)(v187 + 56) = v188[56];
  *(void *)(v187 + 64) = *((void *)v188 + 8);
  *(unsigned char *)(v187 + 72) = v188[72];
  long long v195 = *((_OWORD *)v188 + 6);
  *(_OWORD *)(v187 + 80) = *((_OWORD *)v188 + 5);
  *(_OWORD *)(v187 + 96) = v195;
  *(_OWORD *)(v187 + 112) = *((_OWORD *)v188 + 7);
  uint64_t v196 = v189[12];
  uint64_t v197 = (void *)(v187 + v196);
  uint64_t v198 = &v188[v196];
  uint64_t v199 = sub_1ACE74F28();
  uint64_t v200 = *(void *)(v199 - 8);
  uint64_t v358 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48);
  uint64_t v346 = (void (**)(void *, const void *, uint64_t))v200;
  if (v358(v198, 1, v199))
  {
    uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v200 + 32))(v197, v198, v199);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
  }
  uint64_t v217 = v354;
  *(_OWORD *)(v187 + v189[13]) = *(_OWORD *)&v188[v189[13]];
  *(void *)(v187 + v189[14]) = *(void *)&v188[v189[14]];
  uint64_t v218 = v189[15];
  uint64_t v219 = v187 + v218;
  uint64_t v220 = &v188[v218];
  *(unsigned char *)(v219 + 8) = v220[8];
  *(void *)uint64_t v219 = *(void *)v220;
  uint64_t v221 = v189[16];
  v222 = (void *)(v187 + v221);
  uint64_t v223 = &v188[v221];
  uint64_t v365 = a3;
  uint64_t v351 = v199;
  if (v358(&v188[v221], 1, v199))
  {
    uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
  }
  else
  {
    v346[4](v222, v223, v199);
    uint64_t v217 = v354;
    ((void (*)(void *, void, uint64_t, uint64_t))v346[7])(v222, 0, 1, v199);
  }
  *(_OWORD *)(v187 + v189[17]) = *(_OWORD *)&v188[v189[17]];
  *(void *)(v187 + v189[18]) = *(void *)&v188[v189[18]];
  *(unsigned char *)(v187 + v189[19]) = v188[v189[19]];
  uint64_t v225 = v189[20];
  char v226 = (void *)(v187 + v225);
  uint64_t v227 = &v188[v225];
  uint64_t v228 = sub_1ACE750A8();
  uint64_t v229 = *(void *)(v228 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v229 + 48))(v227, 1, v228))
  {
    uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v226, v227, *(void *)(*(void *)(v230 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v229 + 32))(v226, v227, v228);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
  }
  a3 = v365;
  *(_OWORD *)(v187 + v189[21]) = *(_OWORD *)&v188[v189[21]];
  *(unsigned char *)(v187 + v189[22]) = v188[v189[22]];
  *(unsigned char *)(v187 + v189[23]) = v188[v189[23]];
  *(unsigned char *)(v187 + v189[24]) = v188[v189[24]];
  *(unsigned char *)(v187 + v189[25]) = v188[v189[25]];
  *(unsigned char *)(v187 + v189[26]) = v188[v189[26]];
  *(unsigned char *)(v187 + v189[27]) = v188[v189[27]];
  *(unsigned char *)(v187 + v189[28]) = v188[v189[28]];
  *(void *)(v187 + v189[29]) = *(void *)&v188[v189[29]];
  *(void *)(v187 + v189[30]) = *(void *)&v188[v189[30]];
  *(unsigned char *)(v187 + v189[31]) = v188[v189[31]];
  *(_OWORD *)(v187 + v189[32]) = *(_OWORD *)&v188[v189[32]];
  *(void *)(v187 + v189[33]) = *(void *)&v188[v189[33]];
  *(_OWORD *)(v187 + v189[34]) = *(_OWORD *)&v188[v189[34]];
  *(_OWORD *)(v187 + v189[35]) = *(_OWORD *)&v188[v189[35]];
  uint64_t v231 = v189[36];
  v232 = (void *)(v187 + v231);
  uint64_t v233 = &v188[v231];
  if (v358(&v188[v231], 1, v351))
  {
    uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v232, v233, *(void *)(*(void *)(v234 - 8) + 64));
  }
  else
  {
    v346[4](v232, v233, v351);
    uint64_t v217 = v354;
    ((void (*)(void *, void, uint64_t, uint64_t))v346[7])(v232, 0, 1, v351);
  }
  *(_OWORD *)(v187 + v189[37]) = *(_OWORD *)&v188[v189[37]];
  *(_OWORD *)(v187 + v189[38]) = *(_OWORD *)&v188[v189[38]];
  *(unsigned char *)(v187 + v189[39]) = v188[v189[39]];
  *(unsigned char *)(v187 + v189[40]) = v188[v189[40]];
  *(unsigned char *)(v187 + v189[41]) = v188[v189[41]];
  *(unsigned char *)(v187 + v189[42]) = v188[v189[42]];
  *(unsigned char *)(v187 + v189[43]) = v188[v189[43]];
  *(unsigned char *)(v187 + v189[44]) = v188[v189[44]];
  *(unsigned char *)(v187 + v189[45]) = v188[v189[45]];
  *(_OWORD *)(v187 + v189[46]) = *(_OWORD *)&v188[v189[46]];
  (*(void (**)(uint64_t, void, uint64_t, int *))(v217 + 56))(v187, 0, 1, v189);
LABEL_131:
  uint64_t v303 = a3[15];
  uint64_t v304 = a3[16];
  uint64_t v305 = a1 + v303;
  uint64_t v306 = (char *)v4 + v303;
  *(void *)uint64_t v305 = *(void *)v306;
  *(unsigned char *)(v305 + 8) = v306[8];
  *(unsigned char *)(a1 + v304) = *((unsigned char *)v4 + v304);
  *(void *)(a1 + a3[17]) = *(void *)((char *)v4 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v307 = a3[18];
  uint64_t v308 = a3[19];
  uint64_t v309 = a1 + v307;
  uint64_t v310 = (char *)v4 + v307;
  *(unsigned char *)(v309 + 8) = v310[8];
  *(void *)uint64_t v309 = *(void *)v310;
  uint64_t v311 = a1 + v308;
  v312 = (char *)v4 + v308;
  int v313 = *(unsigned __int8 *)(a1 + v308 + 32);
  if (v313 == 255)
  {
LABEL_135:
    long long v320 = *((_OWORD *)v312 + 1);
    *(_OWORD *)uint64_t v311 = *(_OWORD *)v312;
    *(_OWORD *)(v311 + 16) = v320;
    *(unsigned char *)(v311 + 32) = v312[32];
    return a1;
  }
  int v314 = v312[32];
  if (v314 == 255)
  {
    sub_1ACABF718(a1 + v308);
    goto LABEL_135;
  }
  uint64_t v315 = *(void *)v311;
  uint64_t v316 = *(void *)(v311 + 8);
  uint64_t v317 = *(void *)(v311 + 16);
  uint64_t v318 = *(void *)(v311 + 24);
  long long v319 = *((_OWORD *)v312 + 1);
  *(_OWORD *)uint64_t v311 = *(_OWORD *)v312;
  *(_OWORD *)(v311 + 16) = v319;
  *(unsigned char *)(v311 + 32) = v314;
  sub_1ACA63688(v315, v316, v317, v318, v313);
  return a1;
}

uint64_t _s20PlaybackQueueContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACCE1C4C);
}

uint64_t sub_1ACCE1C4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 56);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t _s20PlaybackQueueContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACCE1D94);
}

void *sub_1ACCE1D94(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4FB8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 56);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1ACCE1EC8()
{
  sub_1ACCE2040(319, &qword_1EB773450, (void (*)(uint64_t))type metadata accessor for PlaybackIntent);
  if (v0 <= 0x3F)
  {
    sub_1ACCE2040(319, qword_1EB773348, (void (*)(uint64_t))type metadata accessor for PodcastsMediaLibrary.MediaItem);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1ACCE2040(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1ACE76FD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s20PlaybackQueueContextV11SourceEventOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCE2160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent()
{
  return &type metadata for PodcastsMediaLibrary.PlaybackQueueContext.SourceEvent;
}

id sub_1ACCE2198(void *a1, void *a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return sub_1ACBDC0AC(a1);
  }
  else
  {
    id v6 = a2;
    return a1;
  }
}

void sub_1ACCE21E4(void *a1, void *a2, uint64_t a3, char a4)
{
  if (a4)
  {
    sub_1ACBDC0CC(a1);
  }
  else
  {
  }
}

unint64_t sub_1ACCE2230()
{
  unint64_t result = qword_1E99F4FC8;
  if (!qword_1E99F4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4FC8);
  }
  return result;
}

void sub_1ACCE228C(void *a1, uint64_t a2, NSObject *a3)
{
  swift_beginAccess();
  id v6 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  id v7 = a1;
  dispatch_group_leave(a3);
}

id NotificationSettings.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id NotificationSettings.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id NotificationSettings.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s18PodcastsFoundation20NotificationSettingsC07canSendC0SbyFZ_0()
{
  unint64_t v0 = self;
  if (objc_msgSend(v0, sel_isRunningOnDesktop))
  {
    if (qword_1EB770228 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1ACE754C8();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB770210);
    objc_super v2 = sub_1ACE75498();
    os_log_type_t v3 = sub_1ACE76C08();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1AC9D5000, v2, v3, "Can send user notification - running on desktoop", v4, 2u);
      MEMORY[0x1AD11B340](v4, -1, -1);
    }

    return 1;
  }
  else
  {
    if (qword_1EB76F6C0 != -1) {
      swift_once();
    }
    id v6 = *(os_unfair_lock_s **)(qword_1EB76F6B0 + OBJC_IVAR___PodcastsApplicationStateMonitor_applicationState);
    id v7 = v6 + 4;
    uint64_t v8 = v6 + 6;
    os_unfair_lock_lock(v6 + 6);
    sub_1ACA30C84(v7, aBlock);
    os_unfair_lock_unlock(v8);
    if (aBlock[0] != 2
      || (objc_msgSend(v0, sel_isRunningOnTV) & 1) != 0
      || (objc_msgSend(v0, sel_isRunningOnHomepod) & 1) != 0
      || (objc_msgSend(v0, sel_isRunningOnWatch) & 1) != 0)
    {
      if (qword_1EB770228 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1ACE754C8();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EB770210);
      uint64_t v10 = sub_1ACE75498();
      os_log_type_t v11 = sub_1ACE76C08();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_1AC9D5000, v10, v11, "Can NOT send user notification - running in background, TV, HomePod, or Watch", v12, 2u);
        MEMORY[0x1AD11B340](v12, -1, -1);
      }

      return 0;
    }
    else
    {
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = 0;
      uint64_t v15 = dispatch_group_create();
      dispatch_group_enter(v15);
      id v16 = objc_msgSend(self, sel_currentNotificationCenter);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v14;
      *(void *)(v17 + 24) = v15;
      aBlock[4] = sub_1ACCE29FC;
      aBlock[5] = v17;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1ACA3D718;
      void aBlock[3] = &block_descriptor_64;
      int v18 = _Block_copy(aBlock);
      swift_retain();
      int v19 = v15;
      swift_release();
      objc_msgSend(v16, sel_getNotificationSettingsWithCompletionHandler_, v18);
      _Block_release(v18);

      sub_1ACE76C58();
      swift_beginAccess();
      long long v20 = *(void **)(v14 + 16);
      if (v20) {
        id v5 = objc_msgSend(v20, sel_hasEnabledSettings);
      }
      else {
        id v5 = 0;
      }
      if (qword_1EB770228 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1ACE754C8();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EB770210);
      uint64_t v22 = sub_1ACE75498();
      os_log_type_t v23 = sub_1ACE76C08();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v28 = v25;
        *(_DWORD *)uint64_t v24 = 67109378;
        sub_1ACE76FF8();
        *(_WORD *)(v24 + 8) = 2080;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E80);
        uint64_t v26 = sub_1ACE76228();
        sub_1ACA3189C(v26, v27, &v28);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v22, v23, "Can send user notification? %{BOOL}d - enabled settings? %s", (uint8_t *)v24, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v25, -1, -1);
        MEMORY[0x1AD11B340](v24, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
  }
  return (uint64_t)v5;
}

uint64_t type metadata accessor for NotificationSettings()
{
  return self;
}

uint64_t sub_1ACCE2984()
{
  return swift_deallocObject();
}

uint64_t sub_1ACCE29BC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1ACCE29FC(void *a1)
{
  sub_1ACCE228C(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t MediaCacheDeleteRemovalProcessorDataSource.init(userDefaults:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84470;
  *(void *)(v4 + 32) = sub_1ACE761B8();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = sub_1ACE761B8();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = sub_1ACE761B8();
  *(void *)(v4 + 72) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ACE84470;
  *(void *)(v8 + 32) = sub_1ACE761B8();
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = sub_1ACE761B8();
  *(void *)(v8 + 56) = v10;
  uint64_t result = sub_1ACE761B8();
  *(void *)(v8 + 64) = result;
  *(void *)(v8 + 72) = v12;
  *a2 = 0xD000000000000023;
  a2[1] = 0x80000001ACECF680;
  a2[2] = v4;
  a2[3] = v8;
  a2[4] = a1;
  return result;
}

uint64_t MediaCacheDeleteRemovalProcessorDataSource.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaCacheDeleteRemovalProcessorDataSource.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MediaCacheDeleteRemovalProcessorDataSource.name.modify())()
{
  return nullsub_1;
}

uint64_t MediaCacheDeleteRemovalProcessorDataSource.observedShowKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaCacheDeleteRemovalProcessorDataSource.observedEpisodeKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MediaCacheDeleteRemovalProcessorDataSource.observedEpisodeKeys.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MediaCacheDeleteRemovalProcessorDataSource.observedEpisodeKeys.modify())()
{
  return nullsub_1;
}

void __swiftcall MediaCacheDeleteRemovalProcessorDataSource.episodesPredicate()(NSPredicate *__return_ptr retstr)
{
  uint64_t v2 = sub_1ACE75208();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + 32);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v11 = objc_msgSend(v10, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");
  sub_1ACE75088();
  sub_1ACE751D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v12 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
  id v13 = sub_1ACDF6920((uint64_t)v11);
  id v14 = [v13 NOT];

  *(void *)(v12 + 40) = v14;
  v16[1] = v12;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  uint64_t v15 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(self, sel_andPredicateWithSubpredicates_, v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

ValueMetadata *type metadata accessor for MediaCacheDeleteRemovalProcessorDataSource()
{
  return &type metadata for MediaCacheDeleteRemovalProcessorDataSource;
}

uint64_t MetricsIDType.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsIDType.debugDescription.getter()
{
  return 0xD000000000000019;
}

unint64_t sub_1ACCE2F7C()
{
  return MetricsIDType.debugDescription.getter();
}

uint64_t MetricsIDType.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsIDType.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsIDType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsIDType.editorialID.getter()
{
  return 0x6169726F74696465;
}

uint64_t static MetricsIDType.itsContentID.getter()
{
  return 0x746E6F635F737469;
}

uint64_t static MetricsIDType.itsID.getter()
{
  return 0x64695F737469;
}

uint64_t static MetricsIDType.recommendationsID.getter()
{
  return 0x64695F6F636572;
}

uint64_t static MetricsIDType.sequential.getter()
{
  return 0x69746E6575716573;
}

unint64_t sub_1ACCE31A8()
{
  unint64_t result = qword_1E99F4FD0;
  if (!qword_1E99F4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F4FD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIDType()
{
  return &type metadata for MetricsIDType;
}

uint64_t MusicSubscriptionInfoSyncUtil.__allocating_init(bag:accountStore:)(uint64_t a1, void *a2)
{
  return sub_1ACCE324C(a1, a2, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))sub_1ACCE77E0);
}

uint64_t static MusicSubscriptionInfoSyncUtil.musicSubscriptionInformation.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicSubscriptionInfoSyncUtil.init(bag:accountStore:)(uint64_t a1, void *a2)
{
  return sub_1ACCE324C(a1, a2, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))sub_1ACCE74CC);
}

uint64_t sub_1ACCE324C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, void *, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = a3(a1, a2, v3, ObjectType);
  swift_unknownObjectRelease();

  return v8;
}

void sub_1ACCE3320(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  os_log_t ObjectType = (os_log_t)swift_getObjectType();
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(*(id *)&v4[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_accountStore], sel_ams_activeiTunesAccount);
  if (v16)
  {
    int v37 = a1;
    uint64_t v38 = v12;

    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE754C8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D548);
    int v18 = sub_1ACE75498();
    os_log_type_t v19 = sub_1ACE76C08();
    if (os_log_type_enabled(v18, v19))
    {
      long long v20 = (uint8_t *)swift_slowAlloc();
      long long v36 = v11;
      uint64_t v21 = v8;
      uint64_t v22 = v13;
      uint64_t v23 = v9;
      uint64_t v24 = a3;
      uint64_t v25 = a2;
      uint64_t v26 = v20;
      *(_WORD *)long long v20 = 0;
      _os_log_impl(&dword_1AC9D5000, v18, v19, "Starting to sync music subscription information.", v20, 2u);
      unint64_t v27 = v26;
      a2 = v25;
      a3 = v24;
      uint64_t v9 = v23;
      uint64_t v13 = v22;
      uint64_t v8 = v21;
      id v11 = v36;
      MEMORY[0x1AD11B340](v27, -1, -1);
    }

    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v4;
    *(unsigned char *)(v28 + 24) = v37 & 1;
    *(void *)(v28 + 32) = a2;
    *(void *)(v28 + 40) = a3;
    *(void *)(v28 + 48) = ObjectType;
    aBlock[4] = sub_1ACCE787C;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    void aBlock[3] = &block_descriptor_65;
    uint64_t v29 = _Block_copy(aBlock);
    uint64_t v30 = v4;
    swift_retain();
    sub_1ACE75E08();
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1ACCE7F70((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v15, v11, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
    swift_release();
  }
  else
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1ACE754C8();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EB76D548);
    os_log_t ObjectType = (os_log_t)sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76C08();
    if (os_log_type_enabled(ObjectType, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v33 = 0;
      _os_log_impl(&dword_1AC9D5000, ObjectType, v32, "Not syncing Music Subscription Info because user is not signed in.", v33, 2u);
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    os_log_t v34 = ObjectType;
  }
}

uint64_t sub_1ACCE3810(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v103 = a4;
  uint64_t v104 = a5;
  uint64_t v102 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DCB0);
  uint64_t v73 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA58);
  uint64_t v77 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v71 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB00);
  uint64_t v88 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v74 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DAE8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v90 = v15;
  uint64_t v91 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v78 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB10);
  uint64_t v95 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v87 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA38);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v96 = v19;
  uint64_t v97 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v89 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769470);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v98 = v22;
  uint64_t v99 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v92 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A718);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v100 = v25;
  uint64_t v101 = v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v94 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = a2;
  *(void *)(v28 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DFD0);
  swift_allocObject();
  uint64_t v29 = a1;
  id v106 = (id)sub_1ACE75A18();
  id v105 = *(id *)&v29[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue];
  id v30 = v105;
  uint64_t v84 = sub_1ACE76CA8();
  uint64_t v31 = *(void *)(v84 - 8);
  uint64_t v83 = *(void (**)(void, void, void, void))(v31 + 56);
  uint64_t v85 = v31 + 56;
  uint64_t v75 = v9;
  v83(v9, 1, 1, v84);
  unint64_t v80 = sub_1ACA51E1C();
  uint64_t v72 = MEMORY[0x1E4F1AC38];
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DFC0, (uint64_t *)&unk_1EB76DFD0);
  uint64_t v81 = sub_1ACCE7F70((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  id v79 = v30;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v9, &qword_1EB7669C8);

  swift_release();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v29;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1ACCE7CAC;
  *(void *)(v33 + 24) = v32;
  uint64_t v82 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DCA0, &qword_1EB76DCB0);
  os_log_t v34 = v29;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v12, v10);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1ACCE7CFC;
  *(void *)(v36 + 24) = v35;
  int v37 = v34;
  sub_1ACE757D8();
  sub_1ACE74F28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF18);
  uint64_t v73 = MEMORY[0x1E4F1AA20];
  sub_1ACA51EA4(&qword_1EB76DA50, &qword_1EB76DA58);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF08, &qword_1EB76DF18);
  uint64_t v38 = v74;
  uint64_t v39 = v76;
  uint64_t v40 = v71;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v40, v39);
  *(void *)(swift_allocObject() + 16) = v37;
  uint64_t v41 = v37;
  sub_1ACE757D8();
  sub_1ACE74898();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF00);
  uint64_t v77 = MEMORY[0x1E4F1AA40];
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DAF0, &qword_1EB76DB00);
  sub_1ACA51EA4(&qword_1EB76DEF8, &qword_1EB76DF00);
  uint64_t v42 = v78;
  uint64_t v43 = v86;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v38, v43);
  *(void *)(swift_allocObject() + 16) = v41;
  char v44 = v41;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF30);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DAD8, &qword_1EB76DAE8);
  sub_1ACA51EA4((unint64_t *)&unk_1EB76DF20, &qword_1EB76DF30);
  uint64_t v45 = v87;
  uint64_t v46 = v90;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v42, v46);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v44;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_1ACCE7D30;
  *(void *)(v48 + 24) = v47;
  sub_1ACA51EA4(&qword_1EB76DB08, &qword_1EB76DB10);
  uint64_t v49 = v44;
  uint64_t v50 = v89;
  uint64_t v51 = v93;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v45, v51);
  *(void *)(swift_allocObject() + 16) = v49;
  uint64_t v52 = v49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A390);
  char v53 = v92;
  uint64_t v54 = v96;
  sub_1ACE756D8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v54);
  uint64_t v55 = v79;
  id v106 = v79;
  uint64_t v56 = (uint64_t)v75;
  v83(v75, 1, 1, v84);
  sub_1ACA51EA4(&qword_1EB76A6C8, &qword_1EB769470);
  id v57 = v55;
  uint64_t v58 = v94;
  uint64_t v59 = v56;
  uint64_t v60 = v98;
  sub_1ACE75CA8();
  sub_1ACA50E78(v59, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v99 + 8))(v53, v60);
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = v102;
  uint64_t v63 = v103;
  *(void *)(v61 + 16) = v102;
  *(void *)(v61 + 24) = v63;
  uint64_t v64 = (void *)swift_allocObject();
  v64[2] = v52;
  v64[3] = v62;
  uint64_t v65 = v104;
  v64[4] = v63;
  v64[5] = v65;
  sub_1ACA51EA4(&qword_1EB76A710, &qword_1EB76A718);
  swift_retain_n();
  uint64_t v66 = v52;
  uint64_t v67 = v100;
  uint64_t v68 = sub_1ACE75B88();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v58, v67);
  *(void *)&v66[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_syncSession] = v68;
  return swift_release();
}

uint64_t sub_1ACCE4594@<X0>(uint64_t *a1@<X8>)
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF18);
  swift_allocObject();
  uint64_t result = sub_1ACE75A18();
  *a1 = result;
  return result;
}

uint64_t sub_1ACCE4624@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1ACE74898();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF30);
  swift_allocObject();
  uint64_t result = sub_1ACE75A18();
  *a2 = result;
  return result;
}

uint64_t sub_1ACCE477C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  v8[0] = *a1;
  v8[1] = v4;
  void v8[2] = v6;
  sub_1ACAD2FD0((uint64_t)v8);
  if (v2) {
    return swift_willThrow();
  }
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1ACCE47E8(void **a1, void (*a2)(void *))
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    v16[0] = *a1;
    id v4 = v2;
    id v5 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    if (swift_dynamicCast())
    {
      if (v17 != 3)
      {
LABEL_15:
        memset(v16, 0, sizeof(v16));
        a2(v16);

        return;
      }
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_1ACE754C8();
      __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D548);
      unint64_t v7 = sub_1ACE75498();
      os_log_type_t v8 = sub_1ACE76C08();
      if (!os_log_type_enabled(v7, v8))
      {
LABEL_14:

        goto LABEL_15;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1AC9D5000, v7, v8, "Not syncing Music Subscription Info because not past threshold.", v9, 2u);
      uint64_t v10 = v9;
    }
    else
    {
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1ACE754C8();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D548);
      id v12 = v2;
      unint64_t v7 = sub_1ACE75498();
      os_log_type_t v13 = sub_1ACE76BE8();
      if (!os_log_type_enabled(v7, v13))
      {

        goto LABEL_14;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      v16[0] = sub_1ACE74D68();
      sub_1ACE76FF8();
      *uint64_t v15 = v16[0];

      _os_log_impl(&dword_1AC9D5000, v7, v13, "Music Subscription Info sync failed with error: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v15, -1, -1);
      uint64_t v10 = v14;
    }
    MEMORY[0x1AD11B340](v10, -1, -1);
    goto LABEL_14;
  }
}

uint64_t sub_1ACCE4A9C(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v25 = a1[2];
  if (qword_1EB76D568 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D548);
  os_log_type_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = v7;
    uint64_t v16 = a3;
    char v17 = v15;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Successfuly synced user's Music Subscription Info.", v15, 2u);
    uint64_t v18 = v17;
    a3 = v16;
    uint64_t v7 = v24;
    MEMORY[0x1AD11B340](v18, -1, -1);
  }

  if (v10)
  {
    uint64_t v26 = v11;
    uint64_t v27 = v10;
    uint64_t v19 = v25;
    uint64_t v28 = v25;
    uint64_t v20 = sub_1ACAD18A8();
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v19 = v25;
  }
  qword_1E99F4FE0 = v20;
  swift_bridgeObjectRelease();
  sub_1ACE75088();
  uint64_t v21 = a2 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_lastMusicSyncDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v21, v9, v6);
  swift_endAccess();
  uint64_t v26 = v11;
  uint64_t v27 = v10;
  uint64_t v28 = v19;
  return a3(&v26);
}

void sub_1ACCE4CFC(void (*a1)(uint64_t *), uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  if (a3)
  {
    swift_retain();
    swift_release();
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1ACE754C8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D548);
    uint64_t v10 = sub_1ACE75498();
    os_log_type_t v11 = sub_1ACE76C08();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1AC9D5000, v10, v11, "Forcing the fetch for music subscription information.", v12, 2u);
      MEMORY[0x1AD11B340](v12, -1, -1);
    }

    uint64_t v18 = 0;
    LOBYTE(v19) = 0;
    a1(&v18);
  }
  else
  {
    os_log_type_t v13 = *(void **)(a4 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag);
    swift_retain();
    id v14 = objc_msgSend(v13, sel_doubleForKey_, @"podcasts-music-subs-info-interval-in-seconds");
    id v15 = objc_msgSend(v14, sel_asyncValuePromiseOnQueue_, *(void *)(a4 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue));

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1ACB2DC40;
    *(void *)(v16 + 24) = v8;
    uint64_t v22 = sub_1ACCE7F68;
    uint64_t v23 = v16;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_1ACCE320C;
    uint64_t v21 = &block_descriptor_88_0;
    char v17 = _Block_copy(&v18);
    swift_release();
    objc_msgSend(v15, sel_addFinishBlock_, v17);
    _Block_release(v17);
  }
}

void sub_1ACCE4F60(uint64_t a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  if (a1 && (uint64_t v25 = 0, v26 = 1, MEMORY[0x1AD118AD0](a1, &v25), (v26 & 1) == 0))
  {
    uint64_t v13 = v25;
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D548);
    id v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76C08();
    if (os_log_type_enabled(v15, v16))
    {
      char v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v17 = 134217984;
      uint64_t v25 = v13;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v15, v16, "Got threshold value for Music Subscription Info sync from bag: %f", v17, 0xCu);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }

    a3(v13, 0);
  }
  else if (a2)
  {
    id v5 = a2;
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D548);
    id v7 = a2;
    uint64_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      uint64_t v12 = sub_1ACE74D68();
      uint64_t v25 = v12;
      sub_1ACE76FF8();
      *os_log_type_t v11 = v12;

      _os_log_impl(&dword_1AC9D5000, v8, v9, "Could not get Music Subscription Info threshold value from bag with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v11, -1, -1);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
    else
    {
    }
    id v24 = a2;
    a3((uint64_t)a2, 1);
  }
  else
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1ACE754C8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB76D548);
    uint64_t v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76BE8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1AC9D5000, v19, v20, "Could not get Music Subscription Info threshold value from bag.", v21, 2u);
      MEMORY[0x1AD11B340](v21, -1, -1);
    }

    sub_1ACCE7BDC();
    uint64_t v22 = (void *)swift_allocError();
    *uint64_t v23 = 2;
    a3((uint64_t)v22, 1);
  }
}

void sub_1ACCE536C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  os_log_type_t v9 = (char *)v31 - v8;
  MEMORY[0x1F4188790](v7);
  os_log_type_t v11 = (char *)v31 - v10;
  sub_1ACE75088();
  uint64_t v12 = &v1[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_lastMusicSyncDate];
  swift_beginAccess();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v35(v6, v12, v2);
  sub_1ACE75038();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  sub_1ACCE7F70((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
  LOBYTE(v6) = sub_1ACE76148();
  v13(v9, v2);
  v13(v11, v2);
  if (v6)
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D548);
    id v15 = v1;
    os_log_type_t v16 = sub_1ACE75498();
    os_log_type_t v17 = sub_1ACE76C08();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      os_log_t v36 = v16;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v38 = v34;
      int v33 = v18;
      *(_DWORD *)uint64_t v19 = 136315138;
      v31[1] = v19 + 4;
      uint64_t v32 = v19;
      v35(v11, v12, v2);
      sub_1ACCE7F70((unint64_t *)&qword_1EB76A950, MEMORY[0x1E4F27928]);
      uint64_t v20 = sub_1ACE777C8();
      unint64_t v22 = v21;
      v13(v11, v2);
      uint64_t v37 = sub_1ACA3189C(v20, v22, &v38);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      os_log_t v23 = v36;
      id v24 = v32;
      _os_log_impl(&dword_1AC9D5000, v36, (os_log_type_t)v33, "Not syncing Music Subscription Info because not past threshold -- last synced at: %s.", v32, 0xCu);
      uint64_t v25 = v34;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {
    }
    sub_1ACCE7BDC();
    swift_allocError();
    *id v30 = 3;
    swift_willThrow();
  }
  else
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1ACE754C8();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EB76D548);
    uint64_t v27 = sub_1ACE75498();
    os_log_type_t v28 = sub_1ACE76C08();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1AC9D5000, v27, v28, "Past threshold -- Syncing Music Subscription Info.", v29, 2u);
      MEMORY[0x1AD11B340](v29, -1, -1);
    }
  }
}

void sub_1ACCE5840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](v5);
  if (v6)
  {
    uint64_t v7 = (char *)v6;
    id v8 = objc_msgSend(*(id *)(v6 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag), sel_URLForKey_, @"play-activity-feed-metadata");
    id v9 = objc_msgSend(v8, sel_asyncValuePromiseOnQueue_, *(void *)&v7[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue]);

    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = a1;
    v10[3] = a2;
    v10[4] = v7;
    aBlock[4] = sub_1ACCE7F5C;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACCE320C;
    void aBlock[3] = &block_descriptor_79_1;
    os_log_type_t v11 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v12 = v7;
    swift_release();
    objc_msgSend(v9, sel_addFinishBlock_, v11);
    _Block_release(v11);
  }
}

uint64_t sub_1ACCE59BC(uint64_t a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  uint64_t v61 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E500);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v11 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  id v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  os_log_type_t v17 = (char *)&v53 - v16;
  uint64_t v18 = sub_1ACE74F28();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_6;
  }
  id v57 = v21;
  uint64_t v58 = a4;
  uint64_t v59 = v11;
  uint64_t v60 = v9;
  unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v22(v15, 1, 1, v18);
  sub_1ACCE7F70((unint64_t *)&qword_1EB76A210, MEMORY[0x1E4F276F0]);
  sub_1ACE77598();
  os_log_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v23(v15, 1, v18) == 1)
  {
    v22(v17, 1, 1, v18);
    os_log_type_t v11 = v59;
    uint64_t v9 = v60;
LABEL_6:
    sub_1ACA50E78((uint64_t)v17, &qword_1EB7731B0);
    if (a2)
    {
      id v26 = a2;
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1ACE754C8();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EB76D548);
      id v28 = a2;
      uint64_t v29 = sub_1ACE75498();
      os_log_type_t v30 = sub_1ACE76BE8();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = (void *)swift_slowAlloc();
        uint64_t v60 = v9;
        *(_DWORD *)uint64_t v31 = 138412290;
        uint64_t v33 = sub_1ACE74D68();
        v63[0] = v33;
        sub_1ACE76FF8();
        *uint64_t v32 = v33;

        _os_log_impl(&dword_1AC9D5000, v29, v30, "Could not get Music Subscription Info endpoint from bag with error: %@", v31, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v32, -1, -1);
        MEMORY[0x1AD11B340](v31, -1, -1);
      }
      else
      {
      }
      *os_log_type_t v11 = (uint64_t)a2;
      swift_storeEnumTagMultiPayload();
      id v40 = a2;
      v61(v11);
    }
    else
    {
      if (qword_1EB76D568 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1ACE754C8();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EB76D548);
      uint64_t v35 = sub_1ACE75498();
      os_log_type_t v36 = sub_1ACE76BE8();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_1AC9D5000, v35, v36, "Could not get Music Subscription Info endpoint from bag", v37, 2u);
        MEMORY[0x1AD11B340](v37, -1, -1);
      }

      sub_1ACCE7BDC();
      uint64_t v38 = swift_allocError();
      *uint64_t v39 = 0;
      *os_log_type_t v11 = v38;
      swift_storeEnumTagMultiPayload();
      v61(v11);
    }
    return sub_1ACA50E78((uint64_t)v11, &qword_1EB76E500);
  }
  uint64_t v55 = a5;
  uint64_t v56 = v19;
  id v24 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v24(v17, v15, v18);
  v22(v17, 0, 1, v18);
  unsigned int v25 = v23(v17, 1, v18);
  os_log_type_t v11 = v59;
  uint64_t v9 = v60;
  if (v25 == 1) {
    goto LABEL_6;
  }
  v24(v57, v17, v18);
  if (qword_1EB76D568 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1ACE754C8();
  __swift_project_value_buffer(v42, (uint64_t)qword_1EB76D548);
  uint64_t v43 = sub_1ACE75498();
  os_log_type_t v44 = sub_1ACE76C08();
  BOOL v45 = os_log_type_enabled(v43, v44);
  uint64_t v46 = v56;
  if (v45)
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v63[0] = v54;
    *(_DWORD *)uint64_t v47 = 136315138;
    char v53 = v47 + 4;
    uint64_t v48 = v57;
    swift_beginAccess();
    uint64_t v49 = sub_1ACE74DD8();
    uint64_t v62 = sub_1ACA3189C(v49, v50, v63);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v43, v44, "Got URL for Music Subscription Info from bag: %s", v47, 0xCu);
    uint64_t v51 = v54;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v51, -1, -1);
    uint64_t v52 = v47;
    os_log_type_t v11 = v59;
    MEMORY[0x1AD11B340](v52, -1, -1);
  }
  else
  {

    uint64_t v48 = v57;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725C8);
  sub_1ACE74A28();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ACE843F0;
  sub_1ACE749F8();
  swift_beginAccess();
  sub_1ACE74ED8();
  swift_endAccess();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, char *, uint64_t))(v46 + 16))(v11, v48, v18);
  swift_storeEnumTagMultiPayload();
  v61(v11);
  sub_1ACA50E78((uint64_t)v11, &qword_1EB76E500);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v48, v18);
}

uint64_t sub_1ACCE6238@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v26 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1ACE74898();
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v9 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v11 = (char *)&v26 - v10;
  if (qword_1EB76D630 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D610);
  uint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Preparing URL request for fetching Music Subscription Info.", v16, 2u);
    os_log_type_t v17 = v16;
    a1 = v15;
    MEMORY[0x1AD11B340](v17, -1, -1);
  }

  uint64_t v18 = v28;
  id v19 = objc_msgSend(objc_allocWithZone((Class)IMURLRequestEncoder), sel_initWithBag_, *(void *)&v28[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag]);
  objc_msgSend(v19, sel_setPersonalizeRequests_, 1);
  objc_msgSend(v19, sel_setUrlKnownToBeTrusted_, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v26);
  sub_1ACE74848();
  uint64_t v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v27);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, v9, v20);
  *(void *)(v22 + ((v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DF00);
  swift_allocObject();
  id v23 = v18;
  uint64_t v24 = sub_1ACE75A18();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v20);
  uint64_t *v29 = v24;
  return result;
}

void sub_1ACCE65B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)sub_1ACE74818();
  id v10 = objc_msgSend(*(id *)(a5 + OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_accountStore), sel_ams_activeiTunesAccount);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  v13[4] = sub_1ACCE7BD4;
  void v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1ACCE320C;
  _OWORD v13[3] = &block_descriptor_22_2;
  uint64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_prepareRequest_account_completion_, v9, v10, v12);
  _Block_release(v12);
}

uint64_t sub_1ACCE66E4(void *a1, void *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A918);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void *)((char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    id v9 = a2;
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D548);
    id v11 = a2;
    id v12 = a2;
    uint64_t v13 = sub_1ACE75498();
    os_log_type_t v14 = sub_1ACE76BE8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      v34[1] = v15 + 4;
      id v16 = a2;
      os_log_type_t v17 = a3;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v36 = v18;
      sub_1ACE76FF8();
      id v19 = v35;
      void *v35 = v18;
      a3 = v17;

      _os_log_impl(&dword_1AC9D5000, v13, v14, "Could not prepare URL request for Music Subs Info sync with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v19, -1, -1);
      MEMORY[0x1AD11B340](v15, -1, -1);
    }
    else
    {
    }
    *uint64_t v8 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    id v26 = a2;
    a3(v8);
  }
  else if (a1)
  {
    uint64_t v20 = qword_1EB76D568;
    id v21 = a1;
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1ACE754C8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB76D548);
    id v23 = sub_1ACE75498();
    os_log_type_t v24 = sub_1ACE76C08();
    if (os_log_type_enabled(v23, v24))
    {
      unsigned int v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v25 = 0;
      _os_log_impl(&dword_1AC9D5000, v23, v24, "Prepared request for Music Subscription Info sync.", v25, 2u);
      MEMORY[0x1AD11B340](v25, -1, -1);
    }

    sub_1ACE74838();
    swift_storeEnumTagMultiPayload();
    a3(v8);
  }
  else
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1ACE754C8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D548);
    uint64_t v29 = sub_1ACE75498();
    os_log_type_t v30 = sub_1ACE76BE8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1AC9D5000, v29, v30, "No request available after attempting to prepare request for Music Subs Info sync.", v31, 2u);
      MEMORY[0x1AD11B340](v31, -1, -1);
    }

    sub_1ACCE7BDC();
    uint64_t v32 = swift_allocError();
    *uint64_t v33 = 1;
    *uint64_t v8 = v32;
    swift_storeEnumTagMultiPayload();
    a3(v8);
  }
  return sub_1ACA50E78((uint64_t)v8, &qword_1EB76A918);
}

void sub_1ACCE6B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = qword_1EB76D630;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D610);
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_1AC9D5000, v7, v8, "Performing request to Music Subscription Info sync endpoint.", v9, 2u);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_defaultSession);
  id v11 = (void *)sub_1ACE74818();
  id v12 = objc_msgSend(v10, sel_dataTaskPromiseWithRequest_, v11);

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1ACCE7EC8;
  *(void *)(v13 + 24) = v4;
  v15[4] = sub_1ACCE7ED4;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_1ACCE320C;
  v15[3] = &block_descriptor_70_0;
  os_log_type_t v14 = _Block_copy(v15);
  swift_release();
  objc_msgSend(v12, sel_addFinishBlock_, v14);
  _Block_release(v14);
}

void sub_1ACCE6D84(void *a1, id a2, void (*a3)(id, unint64_t, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D548);
    id v7 = a2;
    os_log_type_t v8 = sub_1ACE75498();
    os_log_type_t v9 = sub_1ACE76BE8();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      id v11 = (void *)swift_slowAlloc();
      *(_DWORD *)id v10 = 138412290;
      uint64_t v23 = sub_1ACE74D68();
      sub_1ACE76FF8();
      *id v11 = v23;

      _os_log_impl(&dword_1AC9D5000, v8, v9, "Unable to fetch Music Subscription Info with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v11, -1, -1);
      MEMORY[0x1AD11B340](v10, -1, -1);
    }
    else
    {
    }
    id v16 = a2;
    a3(a2, 0, 1);
  }
  else if (a1)
  {
    id v12 = objc_msgSend(a1, sel_data);
    uint64_t v13 = sub_1ACE74F88();
    unint64_t v15 = v14;

    sub_1ACA3985C(v13, v15);
    a3((id)v13, v15, 0);
    sub_1ACA50850(v13, v15);
    sub_1ACA50850(v13, v15);
  }
  else
  {
    if (qword_1EB76D568 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE754C8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D548);
    uint64_t v18 = sub_1ACE75498();
    os_log_type_t v19 = sub_1ACE76BE8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1AC9D5000, v18, v19, "Unable to get data from url response from commerce endpoint.", v20, 2u);
      MEMORY[0x1AD11B340](v20, -1, -1);
    }

    sub_1ACCE7BDC();
    id v21 = (void *)swift_allocError();
    unsigned char *v22 = 4;
    a3(v21, 0, 1);
  }
}

uint64_t sub_1ACCE7114()
{
  sub_1ACE748C8();
  swift_allocObject();
  sub_1ACE748B8();
  sub_1ACAD2E8C();
  sub_1ACE748A8();
  if (!v0) {
    return swift_release();
  }
  if (qword_1EB76D568 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1ACE754C8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB76D548);
  id v2 = v0;
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76BE8();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 138412290;
    uint64_t v8 = sub_1ACE74D68();
    sub_1ACE76FF8();
    *uint64_t v6 = v8;

    _os_log_impl(&dword_1AC9D5000, v3, v4, "Unable to decode json data into MusicSubscriptionInfo class with error: %@.", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v6, -1, -1);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  return swift_release();
}

id MusicSubscriptionInfoSyncUtil.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MusicSubscriptionInfoSyncUtil.init()()
{
}

id MusicSubscriptionInfoSyncUtil.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicSubscriptionInfoSyncUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1ACCE74CC(uint64_t a1, void *a2, char *a3)
{
  uint64_t v18 = a1;
  os_log_type_t v19 = a2;
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_workQueue;
  sub_1ACA51E1C();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC68], v6);
  id v10 = a3;
  sub_1ACE75E08();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1ACCE7F70((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  *(void *)&a3[v17] = sub_1ACE76D28();
  sub_1ACE74FD8();
  *(void *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_syncSession] = 0;
  id v11 = &v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_appleMusicSegmentKey];
  *(void *)id v11 = 0x746E656D676573;
  *((void *)v11 + 1) = 0xE700000000000000;
  id v12 = &v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_appleMusicSegmentValue];
  *(void *)id v12 = 0x636973754DLL;
  *((void *)v12 + 1) = 0xE500000000000000;
  uint64_t v13 = v19;
  *(void *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_bag] = v18;
  *(void *)&v10[OBJC_IVAR___MTMusicSubscriptionInfoSyncUtil_accountStore] = v13;
  swift_unknownObjectRetain();
  id v14 = v13;

  unint64_t v15 = (objc_class *)type metadata accessor for MusicSubscriptionInfoSyncUtil();
  v20.receiver = v10;
  v20.super_class = v15;
  return objc_msgSendSuper2(&v20, sel_init);
}

id sub_1ACCE77E0(uint64_t a1, void *a2)
{
  uint64_t v4 = (char *)objc_allocWithZone((Class)type metadata accessor for MusicSubscriptionInfoSyncUtil());
  return sub_1ACCE74CC(a1, a2, v4);
}

uint64_t sub_1ACCE783C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCE787C()
{
  return sub_1ACCE3810(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t type metadata accessor for MusicSubscriptionInfoSyncUtil()
{
  uint64_t result = qword_1EB76CC10;
  if (!qword_1EB76CC10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACCE78DC()
{
  return type metadata accessor for MusicSubscriptionInfoSyncUtil();
}

uint64_t sub_1ACCE78E4()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MusicSubscriptionInfoSyncUtil(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MusicSubscriptionInfoSyncUtil);
}

uint64_t dispatch thunk of MusicSubscriptionInfoSyncUtil.__allocating_init(bag:accountStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of MusicSubscriptionInfoSyncUtil.syncMusicSubscriptionInfo(shouldForce:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t sub_1ACCE7A04()
{
  uint64_t v1 = sub_1ACE74898();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1ACCE7AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1ACE74898() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACCE65B4(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_1ACCE7B9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCE7BD4(void *a1, void *a2)
{
  return sub_1ACCE66E4(a1, a2, *(void (**)(void))(v2 + 16));
}

unint64_t sub_1ACCE7BDC()
{
  unint64_t result = qword_1EB771C80;
  if (!qword_1EB771C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771C80);
  }
  return result;
}

uint64_t sub_1ACCE7C30()
{
  return swift_deallocObject();
}

void sub_1ACCE7C68(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_1ACCE4CFC(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACCE7C74()
{
  return swift_deallocObject();
}

void sub_1ACCE7CAC()
{
}

uint64_t sub_1ACCE7CD0(double *a1)
{
  return (*(uint64_t (**)(double))(v1 + 16))(*a1);
}

uint64_t sub_1ACCE7CFC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACCE4594(a1);
}

uint64_t sub_1ACCE7D04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACCE6238(a1, a2);
}

uint64_t sub_1ACCE7D28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACCE4624(a1, a2);
}

uint64_t sub_1ACCE7D30()
{
  return sub_1ACCE7114();
}

uint64_t sub_1ACCE7D48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE477C(a1, a2);
}

void sub_1ACCE7D64(void **a1)
{
  sub_1ACCE47E8(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1ACCE7D6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACCE7DAC(uint64_t *a1)
{
  return sub_1ACCE4A9C(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1ACCE7DB8()
{
  uint64_t v1 = sub_1ACE74898();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1ACCE7E48(uint64_t a1, uint64_t a2)
{
  sub_1ACE74898();
  sub_1ACCE6B60(a1, a2);
}

uint64_t sub_1ACCE7EC8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACE212FC(a1, a2, a3 & 1, *(uint64_t (**)(void *))(v3 + 16));
}

void sub_1ACCE7ED4(void *a1, void *a2)
{
  sub_1ACCE6D84(a1, a2, *(void (**)(id, unint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1ACCE7EDC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACCE7F14(uint64_t a1, uint64_t a2)
{
  sub_1ACCE5840(a1, a2, v2);
}

uint64_t sub_1ACCE7F1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACCE7F5C(uint64_t a1, void *a2)
{
  return sub_1ACCE59BC(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1ACCE7F68(uint64_t a1, void *a2)
{
  sub_1ACCE4F60(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1ACCE7F70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACCE8084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError()
{
  return &type metadata for MusicSubscriptionInfoSyncUtil.MusicSubcriptionInfoSyncError;
}

unint64_t sub_1ACCE80C0()
{
  unint64_t result = qword_1E99F5008;
  if (!qword_1E99F5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5008);
  }
  return result;
}

uint64_t dispatch thunk of DiskImageResizer.resizedImage(at:to:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ACCE8164@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    uint64_t v4 = v7;
    uint64_t v5 = v8;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t RawRepresentable<>.init(metricsFieldValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v9 = sub_1ACE76FD8();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v33 = (char *)&v29 - v10;
  uint64_t v32 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1ACE76FD8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v17);
  os_log_type_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v29 - v21;
  uint64_t v34 = a1;
  sub_1ACA33128(a1, (uint64_t)v36);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(a4 + 8))(v36, AssociatedTypeWitness, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    __swift_destroy_boxed_opaque_existential_0(v34);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v23 = *(void *)(a2 - 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v15, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v22, AssociatedTypeWitness);
    os_log_type_t v24 = v33;
    sub_1ACE764B8();
    __swift_destroy_boxed_opaque_existential_0(v34);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, AssociatedTypeWitness);
    uint64_t v23 = *(void *)(a2 - 8);
    uint64_t v25 = v23;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v24, 1, a2))
    {
      uint64_t v27 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v35, v24, a2);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v27, v26, 1, a2);
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
  }
  uint64_t v25 = v23;
  uint64_t v26 = 1;
  uint64_t v27 = v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v27, v26, 1, a2);
}

uint64_t RawRepresentable<>.metricsFieldRepresentation()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1ACE764A8();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(AssociatedTypeWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_1ACCE86F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  if (swift_dynamicCast())
  {
    char v4 = _s18PodcastsFoundation29MetricsEngagementThresholdMetO8rawValueACSgSS_tcfC_0();
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    if (v4 != 4) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  char v4 = 4;
LABEL_6:
  *a2 = v4;
  return result;
}

void sub_1ACCE8788(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7562617;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 28526;
      break;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6465636E79736E75;
      break;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
}

id sub_1ACCE8814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id result = sub_1ACCEA270(a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1ACCE8844@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInteger_, *v1);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t Bool.init(metricsFieldValue:)()
{
  if (swift_dynamicCast()) {
    return v1;
  }
  else {
    return 2;
  }
}

uint64_t Bool.metricsFieldRepresentation()@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = MEMORY[0x1E4FBB390];
  *(unsigned char *)a2 = result;
  return result;
}

uint64_t sub_1ACCE88FC@<X0>(char *a1@<X8>)
{
  uint64_t result = swift_dynamicCast();
  char v3 = v4;
  if (!result) {
    char v3 = 2;
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1ACCE8958@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v3 = *v2;
  *(void *)(a2 + 24) = result;
  *(unsigned char *)a2 = v3;
  return result;
}

unint64_t Float.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v8);
  sub_1ACACD5EC();
  unsigned __int8 v2 = swift_dynamicCast();
  if (v2)
  {
    objc_msgSend(v7, sel_floatValue);
    unsigned int v4 = v3;

    __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v5 = v4;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v5 = 0;
  }
  return v5 | ((unint64_t)(v2 ^ 1u) << 32);
}

unint64_t Float.metricsFieldRepresentation()@<X0>(void *a1@<X8>, float a2@<S0>)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  *(float *)&double v5 = a2;
  id v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_1ACCE8A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v9);
  sub_1ACACD5EC();
  int v4 = swift_dynamicCast();
  if (v4)
  {
    objc_msgSend(v8, sel_floatValue);
    int v6 = v5;

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    int v6 = 0;
  }
  *(_DWORD *)a2 = v6;
  *(unsigned char *)(a2 + 4) = v4 ^ 1;
  return result;
}

unint64_t sub_1ACCE8B30@<X0>(void *a1@<X8>)
{
  int v3 = *v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  LODWORD(v5) = v3;
  id v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v6;
  return result;
}

uint64_t Double.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  sub_1ACACD5EC();
  if (swift_dynamicCast())
  {
    objc_msgSend(v5, sel_doubleValue);
    uint64_t v3 = v2;

    __swift_destroy_boxed_opaque_existential_0(a1);
    return v3;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
}

unint64_t Double.metricsFieldRepresentation()@<X0>(void *a1@<X8>, double a2@<D0>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a2);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1ACCE8C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v9);
  sub_1ACACD5EC();
  int v4 = swift_dynamicCast();
  if (v4)
  {
    objc_msgSend(v8, sel_doubleValue);
    uint64_t v6 = v5;

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v6 = 0;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v4 ^ 1;
  return result;
}

unint64_t sub_1ACCE8D48@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, *v1);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

id Int.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACCE98C4(a1, (SEL *)&selRef_integerValue);
}

unint64_t Int.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE9734(a1, (SEL *)&selRef_initWithInteger_, a2);
}

uint64_t sub_1ACCE8DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCE9980(a1, (SEL *)&selRef_integerValue, a2);
}

unint64_t sub_1ACCE8DC8@<X0>(void *a1@<X8>)
{
  return sub_1ACCE9A40((SEL *)&selRef_initWithInteger_, a1);
}

uint64_t Int8.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  sub_1ACACD5EC();
  int v2 = swift_dynamicCast();
  if (v2)
  {
    unsigned __int8 v3 = objc_msgSend(v5, sel_charValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned __int8 v3 = 0;
  }
  return v3 | ((v2 ^ 1u) << 8);
}

unint64_t Int8.metricsFieldRepresentation()@<X0>(char a1@<W0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithChar_, a1);
  unint64_t result = sub_1ACACD5EC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1ACCE8ED0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v8);
  sub_1ACACD5EC();
  int v4 = swift_dynamicCast();
  if (v4)
  {
    unsigned __int8 v5 = objc_msgSend(v7, sel_charValue);

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned __int8 v5 = 0;
  }
  *a2 = v5;
  a2[1] = v4 ^ 1;
  return result;
}

unint64_t sub_1ACCE8F84@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithChar_, *v1);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t Int16.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v7);
  sub_1ACACD5EC();
  int v2 = swift_dynamicCast();
  if (v2)
  {
    unsigned __int16 v3 = (unsigned __int16)objc_msgSend(v6, sel_shortValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
    int v4 = v3;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    int v4 = 0;
  }
  return v4 | ((v2 ^ 1u) << 16);
}

unint64_t Int16.metricsFieldRepresentation()@<X0>(__int16 a1@<W0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithShort_, a1);
  unint64_t result = sub_1ACACD5EC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1ACCE90D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v8);
  sub_1ACACD5EC();
  int v4 = swift_dynamicCast();
  if (v4)
  {
    unsigned __int16 v5 = (unsigned __int16)objc_msgSend(v7, sel_shortValue);

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned __int16 v5 = 0;
  }
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v4 ^ 1;
  return result;
}

unint64_t sub_1ACCE9188@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithShort_, *v1);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

unint64_t Int32.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACCE9678(a1, (SEL *)&selRef_intValue);
}

unint64_t Int32.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE9734(a1, (SEL *)&selRef_initWithInt_, a2);
}

uint64_t sub_1ACCE91F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCE979C(a1, (SEL *)&selRef_intValue, a2);
}

unint64_t sub_1ACCE9200@<X0>(void *a1@<X8>)
{
  return sub_1ACCE985C((SEL *)&selRef_initWithInt_, a1);
}

id Int64.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACCE98C4(a1, (SEL *)&selRef_longLongValue);
}

unint64_t Int64.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE9734(a1, (SEL *)&selRef_initWithLongLong_, a2);
}

uint64_t sub_1ACCE9224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCE9980(a1, (SEL *)&selRef_longLongValue, a2);
}

unint64_t sub_1ACCE9230@<X0>(void *a1@<X8>)
{
  return sub_1ACCE9A40((SEL *)&selRef_initWithLongLong_, a1);
}

id UInt.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACCE98C4(a1, (SEL *)&selRef_unsignedIntegerValue);
}

unint64_t UInt.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE9734(a1, (SEL *)&selRef_initWithUnsignedInteger_, a2);
}

uint64_t sub_1ACCE9254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCE9980(a1, (SEL *)&selRef_unsignedIntegerValue, a2);
}

unint64_t sub_1ACCE9260@<X0>(void *a1@<X8>)
{
  return sub_1ACCE9A40((SEL *)&selRef_initWithUnsignedInteger_, a1);
}

uint64_t UInt8.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  sub_1ACACD5EC();
  int v2 = swift_dynamicCast();
  if (v2)
  {
    unsigned int v3 = objc_msgSend(v5, sel_unsignedCharValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned int v3 = 0;
  }
  return v3 | ((v2 ^ 1) << 8);
}

unint64_t UInt8.metricsFieldRepresentation()@<X0>(unsigned __int8 a1@<W0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedChar_, a1);
  unint64_t result = sub_1ACACD5EC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1ACCE9364@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v8);
  sub_1ACACD5EC();
  int v4 = swift_dynamicCast();
  if (v4)
  {
    unsigned __int8 v5 = objc_msgSend(v7, sel_unsignedCharValue);

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned __int8 v5 = 0;
  }
  *a2 = v5;
  a2[1] = v4 ^ 1;
  return result;
}

unint64_t sub_1ACCE9418@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedChar_, *v1);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t UInt16.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  sub_1ACACD5EC();
  int v2 = swift_dynamicCast();
  if (v2)
  {
    unsigned int v3 = objc_msgSend(v5, sel_unsignedShortValue);

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned int v3 = 0;
  }
  return v3 | ((v2 ^ 1) << 16);
}

unint64_t UInt16.metricsFieldRepresentation()@<X0>(unsigned __int16 a1@<W0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedShort_, a1);
  unint64_t result = sub_1ACACD5EC();
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_1ACCE9564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v8);
  sub_1ACACD5EC();
  int v4 = swift_dynamicCast();
  if (v4)
  {
    unsigned __int16 v5 = (unsigned __int16)objc_msgSend(v7, sel_unsignedShortValue);

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned __int16 v5 = 0;
  }
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v4 ^ 1;
  return result;
}

unint64_t sub_1ACCE9618@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedShort_, *v1);
  unint64_t result = sub_1ACACD5EC();
  a1[3] = result;
  *a1 = v3;
  return result;
}

unint64_t UInt32.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACCE9678(a1, (SEL *)&selRef_unsignedIntValue);
}

unint64_t sub_1ACCE9678(uint64_t a1, SEL *a2)
{
  sub_1ACA33128(a1, (uint64_t)v9);
  sub_1ACACD5EC();
  unsigned __int8 v4 = swift_dynamicCast();
  if (v4)
  {
    unsigned int v5 = [v8 *a2];

    __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v6 = v5;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v6 = 0;
  }
  return v6 | ((unint64_t)(v4 ^ 1u) << 32);
}

unint64_t UInt32.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE9734(a1, (SEL *)&selRef_initWithUnsignedInt_, a2);
}

unint64_t sub_1ACCE9734@<X0>(uint64_t a1@<X0>, SEL *a2@<X1>, void *a3@<X8>)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), *a2, a1);
  unint64_t result = sub_1ACACD5EC();
  a3[3] = result;
  *a3 = v4;
  return result;
}

uint64_t sub_1ACCE9790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCE979C(a1, (SEL *)&selRef_unsignedIntValue, a2);
}

uint64_t sub_1ACCE979C@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v10);
  sub_1ACACD5EC();
  int v6 = swift_dynamicCast();
  if (v6)
  {
    unsigned int v7 = [v9 *a2];

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned int v7 = 0;
  }
  *(_DWORD *)a3 = v7;
  *(unsigned char *)(a3 + 4) = v6 ^ 1;
  return result;
}

unint64_t sub_1ACCE9850@<X0>(void *a1@<X8>)
{
  return sub_1ACCE985C((SEL *)&selRef_initWithUnsignedInt_, a1);
}

unint64_t sub_1ACCE985C@<X0>(SEL *a1@<X2>, void *a2@<X8>)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), *a1, *v2);
  unint64_t result = sub_1ACACD5EC();
  a2[3] = result;
  *a2 = v4;
  return result;
}

id UInt64.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACCE98C4(a1, (SEL *)&selRef_unsignedLongLongValue);
}

id sub_1ACCE98C4(uint64_t a1, SEL *a2)
{
  sub_1ACA33128(a1, (uint64_t)v7);
  sub_1ACACD5EC();
  if (swift_dynamicCast())
  {
    id v4 = [v6 *a2];

    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v4;
}

unint64_t UInt64.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCE9734(a1, (SEL *)&selRef_initWithUnsignedLongLong_, a2);
}

uint64_t sub_1ACCE9974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACCE9980(a1, (SEL *)&selRef_unsignedLongLongValue, a2);
}

uint64_t sub_1ACCE9980@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v10);
  sub_1ACACD5EC();
  int v6 = swift_dynamicCast();
  if (v6)
  {
    id v7 = [v9 *a2];

    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    id v7 = 0;
  }
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 8) = v6 ^ 1;
  return result;
}

unint64_t sub_1ACCE9A34@<X0>(void *a1@<X8>)
{
  return sub_1ACCE9A40((SEL *)&selRef_initWithUnsignedLongLong_, a1);
}

unint64_t sub_1ACCE9A40@<X0>(SEL *a1@<X2>, void *a2@<X8>)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), *a1, *v2);
  unint64_t result = sub_1ACACD5EC();
  a2[3] = result;
  *a2 = v4;
  return result;
}

uint64_t String.init(metricsFieldValue:)()
{
  if (swift_dynamicCast()) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t String.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = MEMORY[0x1E4FBB1A0];
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACCE9B04@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_dynamicCast();
  uint64_t v3 = v5;
  uint64_t v4 = v6;
  if (!result)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ACCE9B60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  a2[3] = a1;
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Array<A>.init(metricsFieldValue:)(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705E0);
  uint64_t v2 = swift_dynamicCast();
  if (v2)
  {
    v6[0] = v5;
    MEMORY[0x1F4188790](v2);
    sub_1ACCE9CFC();
    uint64_t v3 = sub_1ACE763D8();
    __swift_destroy_boxed_opaque_existential_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v3;
}

uint64_t sub_1ACCE9C88(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  sub_1ACA33128(a1, (uint64_t)v5);
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v3 + 8))(v5, v2, v3);
}

unint64_t sub_1ACCE9CFC()
{
  unint64_t result = qword_1E99F5010;
  if (!qword_1E99F5010)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB7705E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5010);
  }
  return result;
}

uint64_t Array<A>.metricsFieldRepresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v10[5] = a1;
  void v10[2] = a2;
  v10[3] = a3;
  uint64_t v5 = sub_1ACE76688();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACCE9E18, (uint64_t)v10, v5, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7705E0);
  a4[3] = result;
  *a4 = v8;
  return result;
}

uint64_t sub_1ACCE9E18()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 16))(*(void *)(v0 + 16));
}

uint64_t sub_1ACCE9E5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Array<A>.init(metricsFieldValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACCE9E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return Array<A>.metricsFieldRepresentation()(*v3, *(void *)(a1 + 16), *(void *)(a2 - 8), a3);
}

uint64_t URL.init(metricsFieldValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACA33128(a1, (uint64_t)v12);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_5;
  }
  sub_1ACE74EF8();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1);
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1ACA7FA64((uint64_t)v6);
LABEL_5:
    uint64_t v9 = sub_1ACE74F28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t URL.metricsFieldRepresentation()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACE74DD8();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACCEA09C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACE74DD8();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = result;
  a1[1] = v3;
  return result;
}

void Optional<A>.init(metricsFieldValue:)()
{
}

void Optional<A>.metricsFieldRepresentation()()
{
}

void sub_1ACCEA188()
{
}

void sub_1ACCEA198()
{
}

uint64_t dispatch thunk of MetricsFieldRepresentable.init(metricsFieldValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MetricsFieldRepresentable.metricsFieldRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ACCEA1D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1ACA33128(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    uint64_t v4 = v7;
    uint64_t v5 = v8;
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1ACCEA258@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

id sub_1ACCEA270(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  sub_1ACA33128((uint64_t)v6, (uint64_t)v5);
  sub_1ACACD5EC();
  if (swift_dynamicCast())
  {
    id v2 = objc_msgSend(v4, sel_unsignedIntegerValue);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v2;
}

uint64_t sub_1ACCEA330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t v6 = sub_1ACE77B78();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      id v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1ACE77848() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1ACE77848() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1ACCEA468(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1ACE771B8();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_1ACE76F58(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1ACA8C10C();
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1ACE76F68();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1ACE76F68();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

BOOL sub_1ACCEA5B8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1ACE77B08();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_1ACCEA684(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1ACE77B18();
  sub_1ACE77B58();
  uint64_t v4 = sub_1ACE77B78();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1ACCEA774(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (sub_1ACE77B18(),
        sub_1ACE76108(),
        swift_bridgeObjectRelease(),
        uint64_t v4 = sub_1ACE77B78(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = *(void *)&aStdq_5[8 * a1];
    while (*(void *)&aStdq_5[8 * *(char *)(*(void *)(a2 + 48) + v6)] != v8)
    {
      char v9 = sub_1ACE77848();
      swift_bridgeObjectRelease_n();
      if ((v9 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v9 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v9 = 1;
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1ACCEA8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    goto LABEL_9;
  }
  sub_1ACE77B18();
  sub_1ACE77D08();
  uint64_t v4 = sub_1ACE77B78();
  uint64_t v5 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a3 + 56;
  if (((*(void *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_9;
  }
  if (sub_1ACE77CF8())
  {
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t v9 = ~v5;
  unint64_t v10 = (v6 + 1) & v9;
  if (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_9:
    char v8 = 0;
    return v8 & 1;
  }
  do
  {
    char v8 = sub_1ACE77CF8();
    if (v8) {
      break;
    }
    unint64_t v10 = (v10 + 1) & v9;
  }
  while (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return v8 & 1;
}

void TranscriptEpisodeContext.transcriptRequest(priority:lifetime:)(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a1;
  char v6 = *a2;
  uint64_t v7 = *v3;
  uint64_t v8 = v3[4];
  if (v8)
  {
    uint64_t v9 = v3[3];
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v20 = 0;
    long long v19 = 0u;
    long long v18 = 0u;
    *(void *)&long long v15 = v7;
    *((void *)&v15 + 1) = v9;
    *(void *)&long long v17 = v8;
    BYTE8(v17) = v5;
    BYTE9(v17) = v6;
    swift_bridgeObjectRetain();
    sub_1ACBB135C((uint64_t)&v21, (uint64_t)&v18);
    long long v10 = v19;
    *(_OWORD *)(a3 + 32) = v18;
    *(_OWORD *)(a3 + 48) = v10;
    *(void *)(a3 + 64) = v20;
    *(_OWORD *)a3 = v15;
    *(_OWORD *)(a3 + 16) = v17;
  }
  else
  {
    id v14 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
    unint64_t v11 = (void *)sub_1ACE76178();
    unsigned int v12 = objc_msgSend(v14, sel_BOOLForKey_, v11);

    if (v12)
    {
      uint64_t v23 = 0;
      long long v21 = 0u;
      long long v22 = 0u;
      uint64_t v20 = 0;
      long long v19 = 0u;
      long long v18 = 0u;
      *(void *)&long long v16 = v7;
      *((void *)&v16 + 1) = 5852737;
      *(void *)&long long v17 = 0xE300000000000000;
      BYTE8(v17) = v5;
      BYTE9(v17) = v6;
      sub_1ACBB135C((uint64_t)&v21, (uint64_t)&v18);
      long long v13 = v19;
      *(_OWORD *)(a3 + 32) = v18;
      *(_OWORD *)(a3 + 48) = v13;
      *(void *)(a3 + 64) = v20;
      *(_OWORD *)a3 = v16;
      *(_OWORD *)(a3 + 16) = v17;
    }
    else
    {
      *(void *)(a3 + 64) = 0;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
  }
}

uint64_t TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t TranscriptEpisodeContext.adamID.getter()
{
  return *(void *)v0;
}

uint64_t TranscriptEpisodeContext.priceType.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptEpisodeContext.transcriptIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptEpisodeContext.isAppleHosted.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v2;
  v3._object = v1;
  PriceType.init(rawValue:)(v3);
  if (v7 == 4) {
    return 0;
  }
  uint64_t v5 = sub_1ACDF773C((uint64_t)&unk_1F0381158);
  char v6 = sub_1ACCEA774(v7, v5);
  swift_bridgeObjectRelease();
  return v6 & 1;
}

Swift::Bool __swiftcall TranscriptEpisodeContext.shouldShazamMatch(_:)(AVURLAsset_optional a1)
{
  Class isa = a1.value.super.super.isa;
  uint64_t v3 = sub_1ACE74F28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(void **)(v1 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(v1 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    v9._uint64_t countAndFlagsBits = v8;
    v9._object = v7;
    PriceType.init(rawValue:)(v9);
    char v10 = v23;
    if (v23 != 4)
    {
      uint64_t v11 = sub_1ACDF773C((uint64_t)&unk_1F0381180);
      char v12 = sub_1ACCEA774(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        return 0;
      }
      if (!isa) {
        return 1;
      }
LABEL_8:
      long long v13 = isa;
      id v14 = [(objc_class *)v13 URL];
      sub_1ACE74E98();

      long long v15 = (void *)sub_1ACE74E18();
      unsigned int v16 = objc_msgSend(v15, sel_isHLSPlaylist);

      long long v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v6, v3);
      if (v16)
      {

        return 0;
      }
      id v19 = [(objc_class *)v13 URL];
      sub_1ACE74E98();

      uint64_t v20 = (void *)sub_1ACE74E18();
      int v21 = objc_msgSend(v20, sel_isPackagedMedia);

      v17(v6, v3);
      return (v21 & 1) == 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (isa) {
    goto LABEL_8;
  }
  return 1;
}

ValueMetadata *type metadata accessor for TranscriptEpisodeContext()
{
  return &type metadata for TranscriptEpisodeContext;
}

uint64_t sub_1ACCEAEC4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v2, 0);
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    uint64_t result = v27;
    unint64_t v5 = (unint64_t)"sons";
    unint64_t v6 = (unint64_t)"personalizedSubscriptionOffers";
    unint64_t v7 = (unint64_t)"subscriptionOffers";
    unint64_t v8 = (unint64_t)"editorialArtwork";
    unint64_t v9 = (unint64_t)"availableShowCount";
    unint64_t v10 = (unint64_t)"n";
    unint64_t v11 = (unint64_t)"ledDate";
    unint64_t v12 = (unint64_t)"subscriptionType";
    do
    {
      int v13 = *v4++;
      unint64_t v14 = 0xEC00000064656269;
      unint64_t v15 = 0x7263736275537369;
      switch(v13)
      {
        case 1:
          unint64_t v14 = 0xE900000000000079;
          unint64_t v15 = 0x72617262694C6E69;
          break;
        case 2:
          unint64_t v15 = 0xD00000000000001ELL;
          unint64_t v14 = v5 | 0x8000000000000000;
          break;
        case 3:
          unint64_t v15 = 0xD000000000000012;
          unint64_t v14 = v6 | 0x8000000000000000;
          break;
        case 4:
          unint64_t v14 = v7 | 0x8000000000000000;
          goto LABEL_21;
        case 5:
          unint64_t v15 = 0xD000000000000012;
          unint64_t v14 = v8 | 0x8000000000000000;
          break;
        case 6:
          unint64_t v15 = 0xD000000000000011;
          unint64_t v14 = v9 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x7365646F73697065;
          break;
        case 8:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x74736163646F70;
          break;
        case 9:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x7374736163646F70;
          break;
        case 10:
          unint64_t v14 = 0xEF6E6F6974706972;
          unint64_t v15 = 0x637365446C6C7566;
          break;
        case 11:
          unint64_t v15 = 0xD000000000000017;
          unint64_t v14 = v10 | 0x8000000000000000;
          break;
        case 12:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x6C725564656566;
          break;
        case 13:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x6C656E6E616863;
          break;
        case 14:
          unint64_t v14 = 0xE600000000000000;
          unint64_t v15 = 0x6C6C65737075;
          break;
        case 15:
          unint64_t v15 = 0xD000000000000013;
          unint64_t v14 = v11 | 0x8000000000000000;
          break;
        case 16:
          unint64_t v14 = 0x80000001ACEC3E10;
          goto LABEL_21;
        case 17:
          unint64_t v14 = v12 | 0x8000000000000000;
LABEL_21:
          unint64_t v15 = 0xD000000000000010;
          break;
        case 18:
          unint64_t v14 = 0xEB00000000737470;
          unint64_t v15 = 0x697263736E617274;
          break;
        case 19:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x74657070696E73;
          break;
        case 20:
          unint64_t v14 = 0xEA00000000007365;
          unint64_t v15 = 0x69726F6765746163;
          break;
        case 21:
          unint64_t v14 = 0xE600000000000000;
          unint64_t v15 = 0x746E65726170;
          break;
        case 22:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x6E6572646C696863;
          break;
        default:
          break;
      }
      uint64_t v28 = result;
      unint64_t v17 = *(void *)(result + 16);
      unint64_t v16 = *(void *)(result + 24);
      if (v17 >= v16 >> 1)
      {
        id v19 = (const char *)v12;
        uint64_t v25 = (const char *)v6;
        uint64_t v26 = (char *)v5;
        char v23 = (const char *)v8;
        os_log_type_t v24 = (const char *)v7;
        int v21 = (char *)v10;
        uint64_t v22 = (const char *)v9;
        uint64_t v20 = (char *)v11;
        sub_1ACC82D44(v16 > 1, v17 + 1, 1);
        unint64_t v12 = (unint64_t)v19;
        unint64_t v11 = (unint64_t)v20;
        unint64_t v10 = (unint64_t)v21;
        unint64_t v9 = (unint64_t)v22;
        unint64_t v8 = (unint64_t)v23;
        unint64_t v7 = (unint64_t)v24;
        unint64_t v6 = (unint64_t)v25;
        unint64_t v5 = (unint64_t)v26;
        uint64_t result = v28;
      }
      *(void *)(result + 16) = v17 + 1;
      uint64_t v18 = result + 16 * v17;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v14;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1ACCEB278(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v2, 0);
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    uint64_t result = v27;
    unint64_t v5 = (unint64_t)"sons";
    unint64_t v6 = (unint64_t)"personalizedSubscriptionOffers";
    unint64_t v7 = (unint64_t)"subscriptionOffers";
    unint64_t v8 = (unint64_t)"editorialArtwork";
    unint64_t v9 = (unint64_t)"availableShowCount";
    unint64_t v10 = (unint64_t)"n";
    unint64_t v11 = (unint64_t)"ledDate";
    unint64_t v12 = (unint64_t)"subscriptionType";
    do
    {
      int v13 = *v4++;
      unint64_t v14 = 0xEC00000064656269;
      unint64_t v15 = 0x7263736275537369;
      switch(v13)
      {
        case 1:
          unint64_t v14 = 0xE900000000000079;
          unint64_t v15 = 0x72617262694C6E69;
          break;
        case 2:
          unint64_t v15 = 0xD00000000000001ELL;
          unint64_t v14 = v5 | 0x8000000000000000;
          break;
        case 3:
          unint64_t v15 = 0xD000000000000012;
          unint64_t v14 = v6 | 0x8000000000000000;
          break;
        case 4:
          unint64_t v14 = v7 | 0x8000000000000000;
          goto LABEL_21;
        case 5:
          unint64_t v15 = 0xD000000000000012;
          unint64_t v14 = v8 | 0x8000000000000000;
          break;
        case 6:
          unint64_t v15 = 0xD000000000000011;
          unint64_t v14 = v9 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x7365646F73697065;
          break;
        case 8:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x74736163646F70;
          break;
        case 9:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x7374736163646F70;
          break;
        case 10:
          unint64_t v14 = 0xEF6E6F6974706972;
          unint64_t v15 = 0x637365446C6C7566;
          break;
        case 11:
          unint64_t v15 = 0xD000000000000017;
          unint64_t v14 = v10 | 0x8000000000000000;
          break;
        case 12:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x6C725564656566;
          break;
        case 13:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x6C656E6E616863;
          break;
        case 14:
          unint64_t v14 = 0xE600000000000000;
          unint64_t v15 = 0x6C6C65737075;
          break;
        case 15:
          unint64_t v15 = 0xD000000000000013;
          unint64_t v14 = v11 | 0x8000000000000000;
          break;
        case 16:
          unint64_t v14 = 0x80000001ACEC3E10;
          goto LABEL_21;
        case 17:
          unint64_t v14 = v12 | 0x8000000000000000;
LABEL_21:
          unint64_t v15 = 0xD000000000000010;
          break;
        case 18:
          unint64_t v14 = 0xEB00000000737470;
          unint64_t v15 = 0x697263736E617274;
          break;
        case 19:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x74657070696E73;
          break;
        case 20:
          unint64_t v14 = 0xEA00000000007365;
          unint64_t v15 = 0x69726F6765746163;
          break;
        case 21:
          unint64_t v14 = 0xE600000000000000;
          unint64_t v15 = 0x746E65726170;
          break;
        case 22:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x6E6572646C696863;
          break;
        default:
          break;
      }
      uint64_t v28 = result;
      unint64_t v17 = *(void *)(result + 16);
      unint64_t v16 = *(void *)(result + 24);
      if (v17 >= v16 >> 1)
      {
        id v19 = (const char *)v12;
        uint64_t v25 = (const char *)v6;
        uint64_t v26 = (char *)v5;
        char v23 = (const char *)v8;
        os_log_type_t v24 = (const char *)v7;
        int v21 = (char *)v10;
        uint64_t v22 = (const char *)v9;
        uint64_t v20 = (char *)v11;
        sub_1ACC82D44(v16 > 1, v17 + 1, 1);
        unint64_t v12 = (unint64_t)v19;
        unint64_t v11 = (unint64_t)v20;
        unint64_t v10 = (unint64_t)v21;
        unint64_t v9 = (unint64_t)v22;
        unint64_t v8 = (unint64_t)v23;
        unint64_t v7 = (unint64_t)v24;
        unint64_t v6 = (unint64_t)v25;
        unint64_t v5 = (unint64_t)v26;
        uint64_t result = v28;
      }
      *(void *)(result + 16) = v17 + 1;
      uint64_t v18 = result + 16 * v17;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v14;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1ACCEB62C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v2, 0);
    uint64_t result = v15;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = (unint64_t)"etUrls";
    unint64_t v6 = (unint64_t)"econds";
    do
    {
      int v7 = *v4++;
      unint64_t v8 = 0xED0000736C725574;
      unint64_t v9 = 0x657373416C6D7474;
      switch(v7)
      {
        case 1:
          unint64_t v8 = 0xE90000000000006ELL;
          unint64_t v9 = 0x656B6F546C6D7474;
          break;
        case 2:
          unint64_t v8 = v5 | 0x8000000000000000;
          goto LABEL_8;
        case 3:
          unint64_t v9 = 0x6574656C706D6F63;
          unint64_t v8 = 0xE900000000000064;
          break;
        case 4:
          unint64_t v8 = v6 | 0x8000000000000000;
LABEL_8:
          unint64_t v9 = 0xD000000000000016;
          break;
        case 5:
          unint64_t v8 = 0x80000001ACEC3ED0;
          unint64_t v9 = 0xD000000000000013;
          break;
        case 6:
          unint64_t v8 = 0xE900000000000079;
          unint64_t v9 = 0x72617262694C6E69;
          break;
        case 7:
          unint64_t v8 = 0xE400000000000000;
          unint64_t v9 = 1701667182;
          break;
        case 8:
          unint64_t v8 = 0xEA0000000000656DLL;
          unint64_t v9 = 0x614E747369747261;
          break;
        default:
          break;
      }
      uint64_t v16 = result;
      unint64_t v11 = *(void *)(result + 16);
      unint64_t v10 = *(void *)(result + 24);
      if (v11 >= v10 >> 1)
      {
        int v13 = (char *)v6;
        unint64_t v14 = (char *)v5;
        sub_1ACC82D44(v10 > 1, v11 + 1, 1);
        unint64_t v6 = (unint64_t)v13;
        unint64_t v5 = (unint64_t)v14;
        uint64_t result = v16;
      }
      *(void *)(result + 16) = v11 + 1;
      uint64_t v12 = result + 16 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1ACCEB840(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v2, 0);
    uint64_t result = v12;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v5 = *v4++;
      unint64_t v6 = 0xEC00000073747361;
      uint64_t v7 = 0x63646F507377656ELL;
      switch(v5)
      {
        case 1:
          uint64_t v7 = 0x6D656C7469746E65;
          unint64_t v6 = 0xEC00000073746E65;
          break;
        case 2:
          unint64_t v6 = 0xE900000000000073;
          uint64_t v7 = 0x726566664F707061;
          break;
        case 3:
          unint64_t v6 = 0xEB00000000737470;
          uint64_t v8 = 0x63736E617274;
          goto LABEL_9;
        case 4:
          uint64_t v7 = 0x6E79536E61656C63;
          unint64_t v6 = 0xE900000000000063;
          break;
        case 5:
          unint64_t v6 = 0xEA00000000007365;
          uint64_t v8 = 0x6F6765746163;
LABEL_9:
          uint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
          break;
        default:
          break;
      }
      uint64_t v13 = result;
      unint64_t v10 = *(void *)(result + 16);
      unint64_t v9 = *(void *)(result + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1ACC82D44(v9 > 1, v10 + 1, 1);
        uint64_t result = v13;
      }
      *(void *)(result + 16) = v10 + 1;
      uint64_t v11 = result + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1ACCEB9F8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v2, 0);
    uint64_t result = v11;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v5 = *v4++;
      unint64_t v6 = 0xE700000000000000;
      unint64_t v7 = 0x6C656E6E616863;
      switch(v5)
      {
        case 1:
          unint64_t v6 = 0x80000001ACEC4740;
          unint64_t v7 = 0xD000000000000014;
          break;
        case 2:
          unint64_t v7 = 0xD000000000000016;
          unint64_t v6 = 0x80000001ACEC4760;
          break;
        case 3:
          unint64_t v6 = 0xEE0079726F676574;
          unint64_t v7 = 0x6143656E696C6E69;
          break;
        case 4:
          unint64_t v6 = 0xEB0000000068736FLL;
          unint64_t v7 = 0x6F77537265776F70;
          break;
        case 5:
          unint64_t v6 = 0xEF6D657449646574;
          unint64_t v7 = 0x6867696C68676968;
          break;
        case 6:
          unint64_t v6 = 0xE400000000000000;
          unint64_t v7 = 2003789939;
          break;
        case 7:
          unint64_t v6 = 0xEB000000006F7265;
          unint64_t v7 = 0x4865646F73697065;
          break;
        case 8:
          unint64_t v6 = 0xE800000000000000;
          unint64_t v7 = 0x6F726548776F6873;
          break;
        default:
          break;
      }
      uint64_t v12 = result;
      unint64_t v9 = *(void *)(result + 16);
      unint64_t v8 = *(void *)(result + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1ACC82D44(v8 > 1, v9 + 1, 1);
        uint64_t result = v12;
      }
      *(void *)(result + 16) = v9 + 1;
      uint64_t v10 = result + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

id sub_1ACCEBC10(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  id v9 = sub_1ACCEBDCC(a3);
  sub_1ACA394B0(a3, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  sub_1ACA56190((uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  aBlock[4] = sub_1ACCED5E8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACCEC680;
  void aBlock[3] = &block_descriptor_66;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a1;
  swift_release();
  id v14 = objc_msgSend(v9, sel_thenWithBlock_, v12);
  _Block_release(v12);

  return v14;
}

id sub_1ACCEBDCC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MediaRequest.Params();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (*(void *)(a1 + *(int *)(MEMORY[0x1F4188790](v3 - 8) + 116) + 8))
  {
    id v6 = (id)sub_1ACE76178();
    id v7 = objc_msgSend(self, sel_promiseWithResult_, v6);
  }
  else
  {
    id v8 = objc_msgSend(self, sel_sharedInstance);
    id v6 = objc_msgSend(v8, sel_mediaTaskCountryCode);

    if (qword_1EB76A368 != -1) {
      swift_once();
    }
    id v7 = objc_msgSend(v6, sel_asyncValuePromiseOnQueue_, qword_1EB76A358);
  }
  id v9 = v7;

  sub_1ACA394B0(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  sub_1ACA56190((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  aBlock[4] = sub_1ACCF158C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACCEC680;
  void aBlock[3] = &block_descriptor_13;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  id v13 = objc_msgSend(v9, sel_thenWithBlock_, v12);
  _Block_release(v12);

  return v13;
}

id sub_1ACCEC024(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for MediaRequest.Params();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  if (*(unsigned char *)(a3 + *(int *)(MEMORY[0x1F4188790](v8 - 8) + 136)) == 2)
  {
    id v11 = objc_msgSend(self, sel_sharedInstance);
    id v12 = objc_msgSend(v11, sel_includeEntitlementsContent);

    if (qword_1EB76A368 != -1) {
      swift_once();
    }
    id v13 = objc_msgSend(v12, sel_asyncValuePromiseOnQueue_, qword_1EB76A358);
  }
  else
  {
    id v12 = (id)sub_1ACE766C8();
    id v13 = objc_msgSend(self, sel_promiseWithResult_, v12);
  }
  id v14 = v13;

  sub_1ACA394B0(a3, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a4;
  void v16[3] = a1;
  v16[4] = a2;
  sub_1ACA56190((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v16 + v15);
  aBlock[4] = sub_1ACCED88C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACCEC680;
  void aBlock[3] = &block_descriptor_7_1;
  unint64_t v17 = _Block_copy(aBlock);
  id v18 = a4;
  id v19 = a1;
  swift_release();
  id v20 = objc_msgSend(v14, sel_thenWithBlock_, v17);
  _Block_release(v17);

  return v20;
}

id sub_1ACCEC2A0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE74B18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74B08();
  id v15 = objc_msgSend(a2, sel_absoluteString);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_1ACE761B8();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  MEMORY[0x1AD116C40](v17, v19);
  sub_1ACE761B8();
  sub_1ACE74AA8();
  sub_1ACE74AC8();
  sub_1ACE74A58();
  sub_1ACA394B0(a5, (uint64_t)v10);
  if (objc_msgSend(a1, sel_BOOLValue))
  {
    id v20 = (char *)*((void *)v10 + 14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v20 = sub_1ACA42BE8(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v22 = *((void *)v20 + 2);
    unint64_t v21 = *((void *)v20 + 3);
    if (v22 >= v21 >> 1) {
      id v20 = sub_1ACA42BE8((char *)(v21 > 1), v22 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v22 + 1;
    v20[v22 + 32] = 1;
    *((void *)v10 + 14) = v20;
  }
  sub_1ACCED904((uint64_t)v14, (uint64_t)v10);
  sub_1ACCEDFBC((uint64_t)v14);
  if ((v10[136] & 1) == 0) {
    sub_1ACE74AF8();
  }
  if (v10[43] != 4)
  {
    sub_1ACE74A98();
    char v23 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    os_log_type_t v24 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v23, sel_stringByAppendingPathComponent_, v24);

    sub_1ACE761B8();
    sub_1ACE74AA8();
  }
  if (v10[40] == 3)
  {
    sub_1ACE761B8();
    sub_1ACE74AA8();
  }
  uint64_t v26 = (void *)sub_1ACE74A68();
  id v27 = objc_msgSend(self, sel_promiseWithResult_, v26);

  sub_1ACA39598((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v27;
}

uint64_t sub_1ACCEC684()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1ACA51E1C();
  sub_1ACE75E08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1ACABEAC4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1ACE76D28();
  qword_1EB76A358 = result;
  return result;
}

id sub_1ACCEC8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *(void *)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  unint64_t v9 = 0xD000000000000028;
  unint64_t v10 = 0x80000001ACECF9F0;
  switch(*(unsigned char *)(a3 + 40))
  {
    case 1:
      unint64_t v9 = 0xD00000000000002FLL;
      uint64_t v11 = "/v{clientVersion}/recommendations/{storefront}/";
      goto LABEL_4;
    case 2:
      unint64_t v9 = 0xD000000000000024;
      uint64_t v11 = "/v{clientVersion}/sync/{storefront}/";
LABEL_4:
      uint64_t v12 = v11 - 32;
      goto LABEL_5;
    case 3:
      uint64_t v13 = swift_bridgeObjectRetain();
      unint64_t v9 = v8;
      unint64_t v10 = v13;
      goto LABEL_12;
    case 4:
      uint64_t v15 = *(void *)(a3 + 24);
      uint64_t v14 = *(void *)(a3 + 32);
      uint64_t v16 = *(void *)(a3 + 16);
      uint64_t v12 = "/v{clientVersion}/me/library/";
      if (v7 | v8 | v14 | v15 | v16)
      {
        uint64_t v17 = v14 | v7 | v15 | v16;
        unint64_t v9 = 0xD00000000000001DLL;
        unint64_t v10 = 0x80000001ACECFA20;
        if ((v8 - 1 > 1 || v17) && (v8 != 3 || v17 != 0))
        {
          unint64_t v9 = 0xD000000000000027;
          unint64_t v10 = 0x80000001ACECFA40;
        }
      }
      else
      {
        unint64_t v9 = 0xD000000000000027;
LABEL_5:
        unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
      }
LABEL_12:
      unint64_t v47 = v9;
      unint64_t v48 = v10;
      v46[0] = 0x56746E65696C637BLL;
      v46[1] = 0xEF7D6E6F69737265;
      id v18 = objc_msgSend(self, sel_mediaApiClientVersion);
      uint64_t v19 = sub_1ACE761B8();
      uint64_t v21 = v20;

      uint64_t v44 = v19;
      uint64_t v45 = v21;
      sub_1ACA4F4AC();
      uint64_t v22 = sub_1ACE77068();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v47 = v22;
      unint64_t v48 = v24;
      strcpy((char *)v46, "{storefront}");
      BYTE5(v46[1]) = 0;
      HIWORD(v46[1]) = -5120;
      uint64_t v44 = sub_1ACE761B8();
      uint64_t v45 = v25;
      uint64_t v26 = sub_1ACE77068();
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned char *)(a3 + 42) & 1) == 0 && !*(void *)(*(void *)(a3 + 128) + 16))
      {
        int v29 = *(unsigned __int8 *)(a3 + 41);
        if (v29 != 6 && (sub_1ACCF72AC(v29, 1) & 1) != 0)
        {
          uint64_t v30 = 0x6970652D7478656ELL;
          unint64_t v31 = 0xED00007365646F73;
LABEL_20:
          unint64_t v47 = v30;
          unint64_t v48 = v31;
          v46[0] = v26;
          v46[1] = v28;
          swift_bridgeObjectRetain();
          v46[0] = sub_1ACE76378();
          v46[1] = v34;
          sub_1ACE762B8();
          goto LABEL_33;
        }
      }
      uint64_t v32 = *(void *)(a3 + *(int *)(v4 + 116) + 8);
      sub_1ACA394B0(a3, (uint64_t)v6);
      if (v32)
      {
        uint64_t v33 = *(void *)(*(void *)&v6[*(int *)(v4 + 120)] + 16);
        sub_1ACA39598((uint64_t)v6);
        if (v33)
        {
          uint64_t v30 = 0x686372616573;
          unint64_t v31 = 0xE600000000000000;
          goto LABEL_20;
        }
      }
      else
      {
        sub_1ACA39598((uint64_t)v6);
      }
      if (*(unsigned char *)(a3 + 40) == 3) {
        goto LABEL_34;
      }
      uint64_t v35 = *(unsigned __int8 *)(a3 + 41);
      unint64_t v36 = 0x80000001ACEC3C70;
      uint64_t v37 = 0xD000000000000010;
      switch(v35)
      {
        case 1:
          unint64_t v36 = 0xE800000000000000;
          uint64_t v37 = 0x7374736163646F70;
          goto LABEL_32;
        case 2:
          uint64_t v38 = "podcast-stations";
          goto LABEL_28;
        case 3:
          uint64_t v38 = "podcast-channels";
LABEL_28:
          unint64_t v36 = (unint64_t)(v38 - 32) | 0x8000000000000000;
          goto LABEL_32;
        case 4:
          unint64_t v36 = 0xEB00000000737470;
          uint64_t v39 = 0x63736E617274;
          goto LABEL_31;
        case 5:
          unint64_t v36 = 0xEA00000000007365;
          uint64_t v39 = 0x6F6765746163;
LABEL_31:
          uint64_t v37 = v39 & 0xFFFFFFFFFFFFLL | 0x6972000000000000;
          goto LABEL_32;
        case 6:
          goto LABEL_34;
        default:
LABEL_32:
          unint64_t v47 = v37;
          unint64_t v48 = v36;
          v46[0] = v26;
          v46[1] = v28;
          swift_bridgeObjectRetain();
          v46[0] = sub_1ACE76378();
          v46[1] = v40;
          sub_1ACE762B8();
          swift_bridgeObjectRelease();
          break;
      }
LABEL_33:
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v41 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v42 = objc_msgSend(self, sel_promiseWithResult_, v41);

      return v42;
    default:
      goto LABEL_12;
  }
}

uint64_t type metadata accessor for MediaRequestBuilder()
{
  return self;
}

uint64_t sub_1ACCECE2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(a1 + 43))
  {
    case 1:
    case 2:
    case 3:
      char v5 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      sub_1ACA394B0(a1, (uint64_t)v4);
      if (v5) {
        goto LABEL_4;
      }
      break;
    case 4:
      sub_1ACA394B0(a1, (uint64_t)v4);
      break;
    default:
      swift_bridgeObjectRelease();
      sub_1ACA394B0(a1, (uint64_t)v4);
LABEL_4:
      int v6 = v4[41];
      if (v6 != 6) {
        sub_1ACCF72AC(v6, 1);
      }
      break;
  }
  return sub_1ACA39598((uint64_t)v4);
}

id sub_1ACCECFAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MediaRequest.Params();
  sub_1ACA615AC(a1 + *(int *)(v9 + 104), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ACA7FA64((uint64_t)v4);
    id v10 = objc_msgSend(self, sel_sharedInstance);
    id v11 = objc_msgSend(v10, sel_podcastsMediaAPIHostUrl);

    if (qword_1EB76A368 != -1) {
      swift_once();
    }
    id v12 = objc_msgSend(v11, sel_asyncValuePromiseOnQueue_, qword_1EB76A358);

    return v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v14 = (void *)sub_1ACE74E18();
    id v15 = objc_msgSend(self, sel_promiseWithResult_, v14);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v15;
  }
}

uint64_t sub_1ACCED1F8(uint64_t a1)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = 0;
  switch(*(unsigned char *)(a1 + 40))
  {
    case 2:
    case 3:
      return v1;
    case 4:
      uint64_t v1 = 0;
      break;
    default:
      uint64_t v2 = self;
      uint64_t v3 = (void *)sub_1ACE75FC8();
      v9[0] = 0;
      id v4 = objc_msgSend(v2, sel_dataWithJSONObject_options_error_, v3, 1, v9);

      id v5 = v9[0];
      if (v4)
      {
        uint64_t v1 = sub_1ACE74F88();
      }
      else
      {
        uint64_t v6 = v5;
        uint64_t v7 = (void *)sub_1ACE74D78();

        swift_willThrow();
        uint64_t v1 = 0;
      }
      break;
  }
  return v1;
}

uint64_t sub_1ACCED3E0()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1ACCED5E8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1ACCEC024(a1, v5, v1 + v4, v6);
}

uint64_t sub_1ACCED688()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);

  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1ACCED88C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  uint64_t v4 = (void *)v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1ACCEC2A0(a1, v4, v5, v6, v7);
}

void sub_1ACCED904(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1ACE74A28();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = *(void *)(*(void *)(a2 + 128) + 16);
  if (v10)
  {
    if (v10 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1ACE74A98();
      id v24 = (id)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v11 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v24, sel_stringByAppendingPathComponent_, v11);

      sub_1ACE761B8();
      sub_1ACE74AA8();
      id v13 = v24;
    }
    else
    {
      v25[0] = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
      sub_1ACE76138();
      swift_bridgeObjectRelease();
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      id v15 = (void (*)(void *, void))sub_1ACE74A38();
      if (*v14)
      {
        uint64_t v16 = v14;
        (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
        unint64_t v17 = *v16;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v16 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v17 = sub_1ACA42334(0, *(void *)(v17 + 16) + 1, 1, v17);
          *uint64_t v16 = v17;
        }
        unint64_t v20 = *(void *)(v17 + 16);
        unint64_t v19 = *(void *)(v17 + 24);
        id v21 = (id)(v20 + 1);
        if (v20 >= v19 >> 1)
        {
          id v24 = (id)(v20 + 1);
          uint64_t v22 = sub_1ACA42334(v19 > 1, v20 + 1, 1, v17);
          id v21 = v24;
          unint64_t v17 = v22;
          *uint64_t v16 = v22;
        }
        *(void *)(v17 + 16) = v21;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v17+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v20, v7, v3);
        v15(v25, 0);
      }
      else
      {
        v15(v25, 0);
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
}

uint64_t sub_1ACCEDC70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaRequest.Params();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v27 - v6;
  int v8 = *(unsigned __int8 *)(a1 + 41);
  if (v8 == 6)
  {
    sub_1ACA394B0(a1, (uint64_t)&v27 - v6);
    uint64_t v9 = 0;
  }
  else
  {
    char v10 = sub_1ACCF72AC(v8, 0);
    sub_1ACA394B0(a1, (uint64_t)v7);
    uint64_t v9 = 0;
    if (v10)
    {
      uint64_t v11 = *(void *)v7;
      uint64_t v12 = *((void *)v7 + 1);
      uint64_t v13 = *((void *)v7 + 2);
      uint64_t v14 = *((void *)v7 + 3);
      uint64_t v15 = *((void *)v7 + 4);
      unsigned int v16 = v7[40];
      if (v16 >= 4 && (v13 | v12 | *(void *)v7 | v14 | v15) == 0)
      {
        sub_1ACA39518(0, 0, 0, 0, *((void *)v7 + 4), 4u);
        sub_1ACA39518(0, 0, 0, 0, 0, 4u);
        sub_1ACA39518(0, 0, 0, 0, v15, 4u);
        sub_1ACA394B0((uint64_t)v7, (uint64_t)v5);
        uint64_t v9 = 1;
      }
      else
      {
        sub_1ACB0F59C(*(void *)v7, *((void *)v7 + 1), *((void *)v7 + 2), *((void *)v7 + 3), *((void *)v7 + 4), v7[40]);
        sub_1ACB0F59C(v11, v12, v13, v14, v15, v16);
        sub_1ACA39518(v11, v12, v13, v14, v15, v16);
        sub_1ACA39518(0, 0, 0, 0, 0, 4u);
        sub_1ACA39518(v11, v12, v13, v14, v15, v16);
        sub_1ACA394B0((uint64_t)v7, (uint64_t)v5);
        uint64_t v18 = *(void *)v5;
        uint64_t v19 = *((void *)v5 + 1);
        uint64_t v20 = *((void *)v5 + 2);
        uint64_t v21 = *((void *)v5 + 3);
        uint64_t v22 = *((void *)v5 + 4);
        unsigned int v23 = v5[40];
        BOOL v24 = v23 < 4 || (v20 | v19 | *(void *)v5 | v21 | v22) == 0;
        if (!v24 && (v18 == 1 ? (BOOL v25 = (v20 | v19 | v21 | v22) == 0) : (BOOL v25 = 0), v25))
        {
          uint64_t v9 = 1;
          sub_1ACA39518(1, 0, 0, 0, *((void *)v5 + 4), 4u);
          sub_1ACA39518(1, 0, 0, 0, 0, 4u);
          sub_1ACA39518(1, 0, 0, 0, v22, 4u);
        }
        else
        {
          sub_1ACB0F59C(*(void *)v5, *((void *)v5 + 1), *((void *)v5 + 2), *((void *)v5 + 3), *((void *)v5 + 4), v5[40]);
          sub_1ACB0F59C(v18, v19, v20, v21, v22, v23);
          sub_1ACA39518(v18, v19, v20, v21, v22, v23);
          sub_1ACA39518(1, 0, 0, 0, 0, 4u);
          sub_1ACA39518(v18, v19, v20, v21, v22, v23);
          uint64_t v9 = 0;
        }
      }
      sub_1ACA39598((uint64_t)v5);
    }
  }
  sub_1ACA39598((uint64_t)v7);
  return v9;
}

uint64_t sub_1ACCEDFBC(uint64_t a1)
{
  uint64_t v377 = a1;
  uint64_t v357 = (int *)type metadata accessor for MediaRequest.Params();
  uint64_t v1 = MEMORY[0x1F4188790](v357);
  uint64_t v372 = (uint64_t)&v349 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v349 - v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v349 - v6;
  uint64_t v8 = sub_1ACE74A28();
  uint64_t v375 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v351 = (char *)&v349 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v370 = (char *)&v349 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v355 = (char *)&v349 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v360 = (char *)&v349 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v361 = (char *)&v349 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v356 = (char *)&v349 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v353 = (char *)&v349 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v352 = (char *)&v349 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v362 = (char *)&v349 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v363 = (char *)&v349 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v354 = (char *)&v349 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v350 = (char *)&v349 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v364 = (char *)&v349 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v365 = (char *)&v349 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  int v368 = (char *)&v349 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)&v349 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v371 = (char *)&v349 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v46 = (char *)&v349 - v45;
  uint64_t v47 = MEMORY[0x1F4188790](v44);
  uint64_t v49 = (char *)&v349 - v48;
  uint64_t v50 = MEMORY[0x1F4188790](v47);
  uint64_t v52 = (char *)&v349 - v51;
  uint64_t v53 = MEMORY[0x1F4188790](v50);
  uint64_t v374 = (char *)&v349 - v54;
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v58 = (char *)&v349 - v57;
  char v59 = *(unsigned char *)(v56 + 42);
  char v60 = *(unsigned char *)(v56 + 152);
  uint64_t v358 = v56;
  uint64_t v376 = v55;
  v373 = v41;
  if (v59)
  {
    if (v60) {
      goto LABEL_18;
    }
    v382[0] = *(void *)(v56 + 144);
    sub_1ACE777C8();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v62 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v61)
    {
      uint64_t v63 = v61;
      uint64_t v64 = v374;
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v374, v49, v8);
      sub_1ACB1F01C();
      uint64_t v65 = *(void *)(*v63 + 16);
      sub_1ACB1F0C0(v65);
      uint64_t v66 = v65;
      uint64_t v8 = v376;
      uint64_t v67 = (uint64_t)v64;
      uint64_t v41 = v373;
      uint64_t v68 = sub_1ACB1F154(v66, v67);
      nullsub_1(v68);
    }
    v62(v382, 0);
    uint64_t v52 = v49;
    goto LABEL_17;
  }
  if ((v60 & 1) == 0)
  {
    uint64_t v69 = *(void *)(v56 + 144);
    strcpy((char *)v382, "[{specifier}]");
    HIWORD(v382[1]) = -4864;
    uint64_t v379 = 0x696669636570737BLL;
    unint64_t v380 = 0xEB000000007D7265;
    strcpy((char *)v378, "next-episodes");
    HIWORD(v378[1]) = -4864;
    sub_1ACA4F4AC();
    sub_1ACE77068();
    v382[0] = 0x74696D696CLL;
    v382[1] = 0xE500000000000000;
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    v382[0] = v69;
    sub_1ACE777C8();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v70)
    {
      uint64_t v72 = v70;
      uint64_t v73 = v5;
      uint64_t v74 = v7;
      uint64_t v75 = v374;
      uint64_t v76 = v376;
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v374, v58, v376);
      sub_1ACB1F01C();
      uint64_t v77 = *(void *)(*v72 + 16);
      sub_1ACB1F0C0(v77);
      uint64_t v78 = v77;
      uint64_t v8 = v76;
      uint64_t v79 = (uint64_t)v75;
      uint64_t v7 = v74;
      uint64_t v5 = v73;
      uint64_t v80 = sub_1ACB1F154(v78, v79);
      nullsub_1(v80);
      v71(v382, 0);
    }
    else
    {
      v71(v382, 0);
      uint64_t v8 = v376;
    }
    (*(void (**)(char *, uint64_t))(v375 + 8))(v58, v8);
    uint64_t v56 = v358;
    uint64_t v41 = v373;
    if (*(unsigned char *)(v358 + 42)) {
      goto LABEL_14;
    }
  }
  if (*(void *)(*(void *)(v56 + 128) + 16)
    || (int v81 = *(unsigned __int8 *)(v56 + 41), v81 == 6)
    || (v82 = sub_1ACCF72AC(v81, 1), uint64_t v56 = v358, (v82 & 1) == 0))
  {
LABEL_14:
    sub_1ACE749F8();
    uint64_t v84 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v83)
    {
      uint64_t v85 = v83;
      uint64_t v86 = v374;
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v374, v52, v8);
      sub_1ACB1F01C();
      uint64_t v87 = *(void *)(*v85 + 16);
      sub_1ACB1F0C0(v87);
      uint64_t v88 = v87;
      uint64_t v8 = v376;
      uint64_t v89 = (uint64_t)v86;
      uint64_t v41 = v373;
      uint64_t v90 = sub_1ACB1F154(v88, v89);
      nullsub_1(v90);
    }
    v84(v382, 0);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v375 + 8))(v52, v8);
    uint64_t v56 = v358;
  }
LABEL_18:
  if (*(void *)(v56 + v357[29] + 8))
  {
    swift_bridgeObjectRetain();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v92 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v91)
    {
      uint64_t v93 = v91;
      uint64_t v94 = v374;
      uint64_t v95 = v376;
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v374, v46, v376);
      sub_1ACB1F01C();
      uint64_t v96 = *(void *)(*v93 + 16);
      sub_1ACB1F0C0(v96);
      uint64_t v97 = (uint64_t)v94;
      uint64_t v41 = v373;
      uint64_t v98 = sub_1ACB1F154(v96, v97);
      nullsub_1(v98);
      v92(v382, 0);
    }
    else
    {
      v92(v382, 0);
      uint64_t v95 = v376;
    }
    (*(void (**)(char *, uint64_t))(v375 + 8))(v46, v95);
    uint64_t v56 = v358;
  }
  uint64_t v99 = *(void *)(v56 + v357[30]);
  if (sub_1ACAEB6AC(v99) >= 1)
  {
    int64_t v100 = sub_1ACAEB6AC(v99);
    if (v100)
    {
      v382[0] = sub_1ACA6E89C();
      swift_bridgeObjectRetain();
      sub_1ACA890C8(v100);
      if (v100 < 0) {
        goto LABEL_323;
      }
      int64_t v367 = (int64_t)v7;
      int64_t v369 = (int64_t)v5;
      uint64_t v101 = 0;
      do
      {
        if (v100 == v101) {
          goto LABEL_308;
        }
        uint64_t v102 = v101 + 1;
        uint64_t v103 = 0x80000001ACEC3C70;
        uint64_t v104 = 0xD000000000000010;
        switch(*(unsigned char *)(v99 + v101 + 32))
        {
          case 1:
            uint64_t v103 = 0xE800000000000000;
            uint64_t v104 = 0x7374736163646F70;
            break;
          case 2:
            uint64_t v103 = 0x80000001ACEC3C90;
            break;
          case 3:
            uint64_t v103 = 0x80000001ACEC3CB0;
            break;
          case 4:
            uint64_t v104 = 0x697263736E617274;
            uint64_t v103 = 0xEB00000000737470;
            break;
          case 5:
            uint64_t v103 = 0xEA00000000007365;
            uint64_t v104 = 0x69726F6765746163;
            break;
          default:
            break;
        }
        sub_1ACA89140();
        uint64_t v105 = *(void *)(v382[0] + 16);
        sub_1ACA8919C(v105);
        uint64_t v106 = sub_1ACA891C4(v105, v104, v103);
        nullsub_1(v106);
        uint64_t v101 = v102;
      }
      while (v100 != v102);
      swift_bridgeObjectRelease();
      uint64_t v107 = v382[0];
      int v108 = (char *)v369;
      uint64_t v109 = (char *)v367;
      uint64_t v41 = v373;
    }
    else
    {
      uint64_t v109 = v7;
      int v108 = v5;
      uint64_t v107 = sub_1ACA395F4(0);
    }
    v382[0] = v107;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    uint64_t v110 = v371;
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v112 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v111)
    {
      uint64_t v113 = v111;
      uint64_t v114 = v374;
      uint64_t v115 = v376;
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v374, v110, v376);
      sub_1ACB1F01C();
      uint64_t v116 = *(void *)(*v113 + 16);
      sub_1ACB1F0C0(v116);
      uint64_t v117 = (uint64_t)v114;
      uint64_t v41 = v373;
      uint64_t v118 = sub_1ACB1F154(v116, v117);
      nullsub_1(v118);
      v112(v382, 0);
    }
    else
    {
      v112(v382, 0);
      uint64_t v115 = v376;
    }
    (*(void (**)(char *, uint64_t))(v375 + 8))(v110, v115);
    uint64_t v5 = v108;
    uint64_t v7 = v109;
  }
  uint64_t v119 = v358;
  if ((*(unsigned char *)(v358 + 184) & 1) == 0)
  {
    v382[0] = *(void *)(v358 + 176);
    sub_1ACE777C8();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v121 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v120)
    {
      uint64_t v122 = v120;
      uint64_t v123 = v374;
      uint64_t v124 = v376;
      (*(void (**)(char *, char *, uint64_t))(v375 + 16))(v374, v373, v376);
      sub_1ACB1F01C();
      uint64_t v125 = *(void *)(*v122 + 16);
      sub_1ACB1F0C0(v125);
      uint64_t v126 = (uint64_t)v123;
      uint64_t v41 = v373;
      uint64_t v127 = sub_1ACB1F154(v125, v126);
      nullsub_1(v127);
      v121(v382, 0);
    }
    else
    {
      v121(v382, 0);
      uint64_t v124 = v376;
    }
    (*(void (**)(char *, uint64_t))(v375 + 8))(v41, v124);
    uint64_t v119 = v358;
  }
  uint64_t v128 = *(void *)(v119 + 88);
  if (*(void *)(v128 + 16) && (unint64_t v129 = sub_1ACA65B8C(0), (v130 & 1) != 0))
  {
    uint64_t v379 = *(void *)(*(void *)(v128 + 56) + 8 * v129);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v379 = sub_1ACA39704(0);
  }
  uint64_t v131 = v358;
  int v132 = *(unsigned __int8 *)(v358 + 41);
  if (v132 == 6)
  {
    sub_1ACA394B0(v358, (uint64_t)v7);
  }
  else
  {
    char v133 = sub_1ACCF72AC(v132, 2);
    sub_1ACA394B0(v131, (uint64_t)v7);
    if (v133)
    {
      sub_1ACA39598((uint64_t)v7);
      sub_1ACA394B0(v131, (uint64_t)v5);
      goto LABEL_56;
    }
  }
  char v134 = sub_1ACCEDC70((uint64_t)v7);
  sub_1ACA39598((uint64_t)v7);
  sub_1ACA394B0(v131, (uint64_t)v5);
  if ((v134 & 1) == 0)
  {
    if ((v5[42] & 1) != 0
      || *(void *)(*((void *)v5 + 16) + 16)
      || (int v137 = v5[41], v137 == 6)
      || (sub_1ACCF72AC(v137, 1) & 1) == 0)
    {
      sub_1ACA39598((uint64_t)v5);
      goto LABEL_62;
    }
  }
LABEL_56:
  sub_1ACA39598((uint64_t)v5);
  sub_1ACB1F004();
  uint64_t v135 = *(void *)(v379 + 16);
  sub_1ACB1F0A8(v135);
  uint64_t v136 = sub_1ACB1F13C(v135, 8);
  nullsub_1(v136);
LABEL_62:
  uint64_t v138 = v358;
  uint64_t v139 = *(void *)v358;
  uint64_t v140 = *(void *)(v358 + 8);
  uint64_t v141 = *(void *)(v358 + 16);
  unint64_t v142 = *(void *)(v358 + 24);
  uint64_t v143 = *(void *)(v358 + 32);
  unsigned int v144 = *(unsigned __int8 *)(v358 + 40);
  if (v144 < 4 || !(v141 | v140 | v139 | v142 | v143) || v139 != 1 || v141 | v140 | v142 | v143)
  {
    sub_1ACB0F59C(*(void *)v358, *(void *)(v358 + 8), *(void *)(v358 + 16), *(void *)(v358 + 24), *(void *)(v358 + 32), *(unsigned char *)(v358 + 40));
    sub_1ACB0F59C(v139, v140, v141, v142, v143, v144);
    sub_1ACA39518(v139, v140, v141, v142, v143, v144);
    sub_1ACA39518(1, 0, 0, 0, 0, 4u);
    sub_1ACA39518(v139, v140, v141, v142, v143, v144);
    uint64_t v147 = v372;
    sub_1ACA394B0(v138, v372);
    sub_1ACA39598(v147);
    goto LABEL_69;
  }
  sub_1ACA39518(1, 0, 0, 0, *(void *)(v358 + 32), 4u);
  sub_1ACA39518(1, 0, 0, 0, 0, 4u);
  sub_1ACA39518(1, 0, 0, 0, v143, 4u);
  uint64_t v145 = v372;
  sub_1ACA394B0(v138, v372);
  int v146 = *(unsigned __int8 *)(v145 + 41);
  if (v146 == 6)
  {
    sub_1ACA39598(v145);
    uint64_t v138 = v358;
  }
  else
  {
    char v343 = sub_1ACCF72AC(v146, 3);
    sub_1ACA39598(v145);
    uint64_t v138 = v358;
    if (v343) {
      goto LABEL_69;
    }
  }
  sub_1ACB1F004();
  uint64_t v344 = *(void *)(v379 + 16);
  sub_1ACB1F0A8(v344);
  uint64_t v345 = sub_1ACB1F13C(v344, 6);
  nullsub_1(v345);
LABEL_69:
  int64_t v148 = *(void *)(v138 + 48);
  uint64_t v149 = *(void *)(v148 + 64);
  int64_t v366 = v148 + 64;
  uint64_t v150 = 1 << *(unsigned char *)(v148 + 32);
  uint64_t v151 = -1;
  if (v150 < 64) {
    uint64_t v151 = ~(-1 << v150);
  }
  unint64_t v152 = v151 & v149;
  int64_t v367 = (unint64_t)(v150 + 63) >> 6;
  v373 = (char *)(v375 + 16);
  v375 += 8;
  int64_t v369 = v148;
  swift_bridgeObjectRetain();
  uint64_t v153 = 0;
  uint64_t v359 = "implicit";
  uint64_t v154 = v376;
  while (1)
  {
    if (v152)
    {
      uint64_t v372 = (v152 - 1) & v152;
      uint64_t v371 = v153;
      unint64_t v159 = __clz(__rbit64(v152)) | ((void)v153 << 6);
      goto LABEL_87;
    }
    BOOL v160 = __OFADD__(v153, 1);
    int64_t v161 = (int64_t)(v153 + 1);
    if (v160) {
      goto LABEL_309;
    }
    if (v161 >= v367) {
      break;
    }
    unint64_t v162 = *(void *)(v366 + 8 * v161);
    if (!v162)
    {
      int64_t v163 = v161 + 1;
      if (v161 + 1 >= v367) {
        break;
      }
      unint64_t v162 = *(void *)(v366 + 8 * v163);
      if (!v162)
      {
        int64_t v163 = v161 + 2;
        if (v161 + 2 >= v367) {
          break;
        }
        unint64_t v162 = *(void *)(v366 + 8 * v163);
        if (!v162)
        {
          int64_t v163 = v161 + 3;
          if (v161 + 3 >= v367) {
            break;
          }
          unint64_t v162 = *(void *)(v366 + 8 * v163);
          if (!v162)
          {
            while (1)
            {
              int64_t v161 = v163 + 1;
              if (__OFADD__(v163, 1)) {
                goto LABEL_316;
              }
              if (v161 >= v367) {
                goto LABEL_100;
              }
              unint64_t v162 = *(void *)(v366 + 8 * v161);
              ++v163;
              if (v162) {
                goto LABEL_86;
              }
            }
          }
        }
      }
      int64_t v161 = v163;
    }
LABEL_86:
    uint64_t v372 = (v162 - 1) & v162;
    uint64_t v371 = (char *)v161;
    unint64_t v159 = __clz(__rbit64(v162)) + (v161 << 6);
LABEL_87:
    uint64_t v164 = *(void *)(*(void *)(v369 + 56) + 8 * v159);
    strcpy((char *)v382, "include[");
    BYTE1(v382[1]) = 0;
    WORD1(v382[1]) = 0;
    HIDWORD(v382[1]) = -402653184;
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    v382[0] = 0;
    v382[1] = 0xE000000000000000;
    uint64_t v165 = sub_1ACC2F508(v164);
    if (v165)
    {
      unint64_t v142 = v165;
      v378[0] = sub_1ACA6E89C();
      sub_1ACA890C8(v142);
      if ((v142 & 0x8000000000000000) == 0)
      {
        uint64_t v166 = 0;
        while ((char *)v142 != v166)
        {
          LOBYTE(v381) = v166[v164 + 32];
          uint64_t v5 = (char *)MediaRequest.IncludeExtendTypes.rawValue.getter();
          uint64_t v168 = v167;
          ++v166;
          sub_1ACA89140();
          uint64_t v169 = *(void *)(v378[0] + 16);
          sub_1ACA8919C(v169);
          uint64_t v170 = sub_1ACA891C4(v169, (uint64_t)v5, v168);
          nullsub_1(v170);
          if ((char *)v142 == v166)
          {
            swift_bridgeObjectRelease();
            uint64_t v171 = v378[0];
            goto LABEL_94;
          }
        }
        __break(1u);
LABEL_159:
        __break(1u);
        goto LABEL_160;
      }
      __break(1u);
LABEL_307:
      __break(1u);
LABEL_308:
      __break(1u);
LABEL_309:
      __break(1u);
LABEL_310:
      __break(1u);
LABEL_311:
      __break(1u);
LABEL_312:
      __break(1u);
LABEL_313:
      __break(1u);
LABEL_314:
      __break(1u);
LABEL_315:
      __break(1u);
LABEL_316:
      __break(1u);
      goto LABEL_317;
    }
    uint64_t v171 = sub_1ACA395F4(0);
    swift_bridgeObjectRelease();
LABEL_94:
    v378[0] = v171;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    unint64_t v142 = (unint64_t)v368;
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v173 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v172)
    {
      uint64_t v155 = v172;
      uint64_t v156 = (uint64_t)v374;
      uint64_t v154 = v376;
      (*(void (**)(char *, unint64_t, uint64_t))v373)(v374, v142, v376);
      sub_1ACB1F01C();
      uint64_t v157 = *(void *)(*v155 + 16);
      sub_1ACB1F0C0(v157);
      uint64_t v158 = sub_1ACB1F154(v157, v156);
      nullsub_1(v158);
      v173(v382, 0);
    }
    else
    {
      v173(v382, 0);
      uint64_t v154 = v376;
    }
    (*(void (**)(unint64_t, uint64_t))v375)(v142, v154);
    unint64_t v152 = v372;
    uint64_t v153 = v371;
  }
LABEL_100:
  swift_release();
  int64_t v174 = *(void *)(v358 + 56);
  uint64_t v175 = *(void *)(v174 + 64);
  int64_t v367 = v174 + 64;
  uint64_t v176 = 1 << *(unsigned char *)(v174 + 32);
  uint64_t v177 = -1;
  if (v176 < 64) {
    uint64_t v177 = ~(-1 << v176);
  }
  unint64_t v178 = v177 & v175;
  int v368 = (char *)((unint64_t)(v176 + 63) >> 6);
  int64_t v369 = v174;
  swift_bridgeObjectRetain();
  uint64_t v179 = 0;
  while (1)
  {
    if (v178)
    {
      uint64_t v372 = (v178 - 1) & v178;
      unint64_t v184 = __clz(__rbit64(v178)) | (v179 << 6);
      goto LABEL_118;
    }
    BOOL v160 = __OFADD__(v179++, 1);
    if (v160) {
      goto LABEL_310;
    }
    if (v179 >= (uint64_t)v368) {
      break;
    }
    unint64_t v185 = *(void *)(v367 + 8 * v179);
    if (!v185)
    {
      uint64_t v186 = v179 + 1;
      if (v179 + 1 >= (uint64_t)v368) {
        break;
      }
      unint64_t v185 = *(void *)(v367 + 8 * v186);
      if (!v185)
      {
        uint64_t v186 = v179 + 2;
        if (v179 + 2 >= (uint64_t)v368) {
          break;
        }
        unint64_t v185 = *(void *)(v367 + 8 * v186);
        if (!v185)
        {
          uint64_t v186 = v179 + 3;
          if (v179 + 3 >= (uint64_t)v368) {
            break;
          }
          unint64_t v185 = *(void *)(v367 + 8 * v186);
          if (!v185)
          {
            while (1)
            {
              uint64_t v179 = v186 + 1;
              if (__OFADD__(v186, 1)) {
                break;
              }
              if (v179 >= (uint64_t)v368) {
                goto LABEL_131;
              }
              unint64_t v185 = *(void *)(v367 + 8 * v179);
              ++v186;
              if (v185) {
                goto LABEL_117;
              }
            }
LABEL_317:
            __break(1u);
            goto LABEL_318;
          }
        }
      }
      uint64_t v179 = v186;
    }
LABEL_117:
    uint64_t v372 = (v185 - 1) & v185;
    unint64_t v184 = __clz(__rbit64(v185)) + (v179 << 6);
LABEL_118:
    uint64_t v166 = *(char **)(*(void *)(v369 + 56) + 8 * v184);
    strcpy((char *)v382, "relate[");
    v382[1] = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    uint64_t v187 = (char *)v382[0];
    v382[0] = 0;
    v382[1] = 0xE000000000000000;
    uint64_t v188 = sub_1ACC2F508((uint64_t)v166);
    if (v188)
    {
      int64_t v189 = v188;
      v378[0] = sub_1ACA6E89C();
      sub_1ACA890C8(v189);
      if (v189 < 0) {
        goto LABEL_307;
      }
      uint64_t v371 = (char *)v179;
      uint64_t v5 = v187;
      uint64_t v190 = 0;
      do
      {
        if (v189 == v190) {
          goto LABEL_159;
        }
        LOBYTE(v381) = v166[v190 + 32];
        unint64_t v142 = MediaRequest.IncludeExtendTypes.rawValue.getter();
        uint64_t v192 = v191;
        ++v190;
        sub_1ACA89140();
        uint64_t v193 = *(void *)(v378[0] + 16);
        sub_1ACA8919C(v193);
        uint64_t v194 = sub_1ACA891C4(v193, v142, v192);
        nullsub_1(v194);
      }
      while (v189 != v190);
      swift_bridgeObjectRelease();
      uint64_t v195 = v378[0];
      uint64_t v179 = (uint64_t)v371;
    }
    else
    {
      uint64_t v195 = sub_1ACA395F4(0);
      swift_bridgeObjectRelease();
    }
    v378[0] = v195;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    unint64_t v142 = (unint64_t)v365;
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v197 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v196)
    {
      uint64_t v180 = v196;
      uint64_t v181 = (uint64_t)v374;
      uint64_t v154 = v376;
      (*(void (**)(char *, unint64_t, uint64_t))v373)(v374, v142, v376);
      sub_1ACB1F01C();
      uint64_t v182 = *(void *)(*v180 + 16);
      sub_1ACB1F0C0(v182);
      uint64_t v183 = sub_1ACB1F154(v182, v181);
      nullsub_1(v183);
      v197(v382, 0);
    }
    else
    {
      v197(v382, 0);
      uint64_t v154 = v376;
    }
    (*(void (**)(unint64_t, uint64_t))v375)(v142, v154);
    unint64_t v178 = v372;
  }
LABEL_131:
  swift_release();
  uint64_t v198 = *(void *)(v358 + 64);
  uint64_t v199 = *(void *)(v198 + 64);
  uint64_t v371 = (char *)(v198 + 64);
  uint64_t v200 = 1 << *(unsigned char *)(v198 + 32);
  uint64_t v201 = -1;
  if (v200 < 64) {
    uint64_t v201 = ~(-1 << v200);
  }
  unint64_t v202 = v201 & v199;
  uint64_t v372 = (unint64_t)(v200 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v203 = 0;
  uint64_t v204 = v364;
  while (2)
  {
    if (v202)
    {
      unint64_t v206 = __clz(__rbit64(v202));
      v202 &= v202 - 1;
      unint64_t v207 = v206 | (v203 << 6);
LABEL_149:
      char v210 = *(unsigned char *)(*(void *)(v198 + 48) + v207);
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      sub_1ACE77818();
      LOBYTE(v378[0]) = v210;
      MediaRequest.Relationship.rawValue.getter();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      sub_1ACE77818();
      sub_1ACB7A2F0();
      sub_1ACE77818();
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v211 = (void (*)(void *, void))sub_1ACE74A38();
      if (*v212)
      {
        uint64_t v205 = (uint64_t)v374;
        uint64_t v154 = v376;
        (*(void (**)(char *, char *, uint64_t))v373)(v374, v204, v376);
        sub_1ACB1E644(v205);
        v211(v382, 0);
      }
      else
      {
        v211(v382, 0);
        uint64_t v154 = v376;
      }
      (*(void (**)(char *, uint64_t))v375)(v204, v154);
      continue;
    }
    break;
  }
  BOOL v160 = __OFADD__(v203++, 1);
  if (v160) {
    goto LABEL_311;
  }
  if (v203 < v372)
  {
    unint64_t v208 = *(void *)&v371[8 * v203];
    if (!v208)
    {
      uint64_t v209 = v203 + 1;
      if (v203 + 1 >= v372) {
        goto LABEL_155;
      }
      unint64_t v208 = *(void *)&v371[8 * v209];
      if (!v208)
      {
        uint64_t v209 = v203 + 2;
        if (v203 + 2 >= v372) {
          goto LABEL_155;
        }
        unint64_t v208 = *(void *)&v371[8 * v209];
        if (!v208)
        {
          uint64_t v209 = v203 + 3;
          if (v203 + 3 >= v372) {
            goto LABEL_155;
          }
          unint64_t v208 = *(void *)&v371[8 * v209];
          if (!v208)
          {
            while (1)
            {
              uint64_t v203 = v209 + 1;
              if (__OFADD__(v209, 1)) {
                break;
              }
              if (v203 >= v372) {
                goto LABEL_155;
              }
              unint64_t v208 = *(void *)&v371[8 * v203];
              ++v209;
              if (v208) {
                goto LABEL_148;
              }
            }
LABEL_318:
            __break(1u);
            goto LABEL_319;
          }
        }
      }
      uint64_t v203 = v209;
    }
LABEL_148:
    unint64_t v202 = (v208 - 1) & v208;
    unint64_t v207 = __clz(__rbit64(v208)) + (v203 << 6);
    goto LABEL_149;
  }
LABEL_155:
  swift_release();
  BOOL v213 = sub_1ACC2952C(*(void *)(v358 + 72));
  unint64_t v142 = (unint64_t)v354;
  if (v213)
  {
    uint64_t v214 = swift_bridgeObjectRetain();
    uint64_t v215 = sub_1ACCEAEC4(v214);
    swift_bridgeObjectRelease();
    v382[0] = v215;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    uint64_t v5 = v350;
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v166 = (char *)sub_1ACE74A38();
    if (*v216)
    {
      uint64_t v217 = (uint64_t)v374;
      uint64_t v154 = v376;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v5, v376);
      sub_1ACB1E644(v217);
      ((void (*)(void *, void))v166)(v382, 0);
      goto LABEL_161;
    }
LABEL_160:
    ((void (*)(void *, void))v166)(v382, 0);
    uint64_t v154 = v376;
LABEL_161:
    (*(void (**)(char *, uint64_t))v375)(v5, v154);
  }
  uint64_t v218 = *(void *)(v358 + 80);
  if (sub_1ACC2A308(v218))
  {
    v382[0] = v218;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v219 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v220)
    {
      uint64_t v221 = (uint64_t)v374;
      (*(void (**)(char *, unint64_t, uint64_t))v373)(v374, v142, v154);
      sub_1ACB1E644(v221);
    }
    v219(v382, 0);
    (*(void (**)(unint64_t, uint64_t))v375)(v142, v154);
  }
  uint64_t v222 = *(void *)(v358 + 88);
  v378[0] = v222;
  if (sub_1ACC2952C(v379))
  {
    swift_bridgeObjectRetain();
    uint64_t v223 = swift_bridgeObjectRetain();
    sub_1ACC5169C(v223, 0);
    uint64_t v222 = v378[0];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v224 = *(void *)(v222 + 64);
  uint64_t v371 = (char *)(v222 + 64);
  uint64_t v225 = 1 << *(unsigned char *)(v222 + 32);
  uint64_t v226 = -1;
  if (v225 < 64) {
    uint64_t v226 = ~(-1 << v225);
  }
  unint64_t v227 = v226 & v224;
  uint64_t v372 = (unint64_t)(v225 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v228 = 0;
  while (2)
  {
    if (v227)
    {
      unint64_t v231 = __clz(__rbit64(v227));
      v227 &= v227 - 1;
      unint64_t v232 = v231 | (v228 << 6);
LABEL_187:
      char v235 = *(unsigned char *)(*(void *)(v222 + 48) + v232);
      uint64_t v236 = *(void *)(*(void *)(v222 + 56) + 8 * v232);
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1ACE77818();
      LOBYTE(v381) = v235;
      MediaRequest.ContentType.rawValue.getter();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      uint64_t v237 = sub_1ACCEB278(v236);
      swift_bridgeObjectRelease();
      v382[0] = v237;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
      sub_1ACE76138();
      swift_bridgeObjectRelease();
      uint64_t v238 = v363;
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v239 = (void (*)(void *, void))sub_1ACE74A38();
      if (*v240)
      {
        uint64_t v229 = (uint64_t)v374;
        uint64_t v230 = v376;
        (*(void (**)(char *, char *, uint64_t))v373)(v374, v238, v376);
        sub_1ACB1E644(v229);
        v239(v382, 0);
      }
      else
      {
        v239(v382, 0);
        uint64_t v230 = v376;
      }
      (*(void (**)(char *, uint64_t))v375)(v238, v230);
      continue;
    }
    break;
  }
  BOOL v160 = __OFADD__(v228++, 1);
  if (v160) {
    goto LABEL_312;
  }
  if (v228 < v372)
  {
    unint64_t v233 = *(void *)&v371[8 * v228];
    if (!v233)
    {
      uint64_t v234 = v228 + 1;
      if (v228 + 1 >= v372) {
        goto LABEL_193;
      }
      unint64_t v233 = *(void *)&v371[8 * v234];
      if (!v233)
      {
        uint64_t v234 = v228 + 2;
        if (v228 + 2 >= v372) {
          goto LABEL_193;
        }
        unint64_t v233 = *(void *)&v371[8 * v234];
        if (!v233)
        {
          uint64_t v234 = v228 + 3;
          if (v228 + 3 >= v372) {
            goto LABEL_193;
          }
          unint64_t v233 = *(void *)&v371[8 * v234];
          if (!v233)
          {
            while (1)
            {
              uint64_t v228 = v234 + 1;
              if (__OFADD__(v234, 1)) {
                break;
              }
              if (v228 >= v372) {
                goto LABEL_193;
              }
              unint64_t v233 = *(void *)&v371[8 * v228];
              ++v234;
              if (v233) {
                goto LABEL_186;
              }
            }
LABEL_319:
            __break(1u);
            goto LABEL_320;
          }
        }
      }
      uint64_t v228 = v234;
    }
LABEL_186:
    unint64_t v227 = (v233 - 1) & v233;
    unint64_t v232 = __clz(__rbit64(v233)) + (v228 << 6);
    goto LABEL_187;
  }
LABEL_193:
  swift_release();
  uint64_t v241 = *(void *)(v358 + 96);
  uint64_t v242 = *(void *)(v241 + 64);
  uint64_t v371 = (char *)(v241 + 64);
  uint64_t v243 = 1 << *(unsigned char *)(v241 + 32);
  uint64_t v244 = -1;
  if (v243 < 64) {
    uint64_t v244 = ~(-1 << v243);
  }
  unint64_t v245 = v244 & v242;
  uint64_t v372 = (unint64_t)(v243 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v246 = 0;
  while (2)
  {
    if (v245)
    {
      unint64_t v248 = __clz(__rbit64(v245));
      v245 &= v245 - 1;
      unint64_t v249 = v248 | (v246 << 6);
LABEL_211:
      char v252 = *(unsigned char *)(*(void *)(v241 + 48) + v249);
      uint64_t v253 = *(void *)(*(void *)(v241 + 56) + 8 * v249);
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1ACE77818();
      LOBYTE(v381) = v252;
      MediaRequest.ContentType.rawValue.getter();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      uint64_t v254 = sub_1ACCEB278(v253);
      swift_bridgeObjectRelease();
      v382[0] = v254;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
      sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
      sub_1ACE76138();
      swift_bridgeObjectRelease();
      v255 = v362;
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v256 = (void (*)(void *, void))sub_1ACE74A38();
      if (*v257)
      {
        uint64_t v258 = (uint64_t)v374;
        uint64_t v247 = v376;
        (*(void (**)(char *, char *, uint64_t))v373)(v374, v255, v376);
        sub_1ACB1E644(v258);
        v256(v382, 0);
      }
      else
      {
        v256(v382, 0);
        uint64_t v247 = v376;
      }
      (*(void (**)(char *, uint64_t))v375)(v255, v247);
      continue;
    }
    break;
  }
  BOOL v160 = __OFADD__(v246++, 1);
  if (v160) {
    goto LABEL_313;
  }
  if (v246 < v372)
  {
    unint64_t v250 = *(void *)&v371[8 * v246];
    if (!v250)
    {
      uint64_t v251 = v246 + 1;
      if (v246 + 1 >= v372) {
        goto LABEL_217;
      }
      unint64_t v250 = *(void *)&v371[8 * v251];
      if (!v250)
      {
        uint64_t v251 = v246 + 2;
        if (v246 + 2 >= v372) {
          goto LABEL_217;
        }
        unint64_t v250 = *(void *)&v371[8 * v251];
        if (!v250)
        {
          uint64_t v251 = v246 + 3;
          if (v246 + 3 >= v372) {
            goto LABEL_217;
          }
          unint64_t v250 = *(void *)&v371[8 * v251];
          if (!v250)
          {
            while (1)
            {
              uint64_t v246 = v251 + 1;
              if (__OFADD__(v251, 1)) {
                break;
              }
              if (v246 >= v372) {
                goto LABEL_217;
              }
              unint64_t v250 = *(void *)&v371[8 * v246];
              ++v251;
              if (v250) {
                goto LABEL_210;
              }
            }
LABEL_320:
            __break(1u);
            goto LABEL_321;
          }
        }
      }
      uint64_t v246 = v251;
    }
LABEL_210:
    unint64_t v245 = (v250 - 1) & v250;
    unint64_t v249 = __clz(__rbit64(v250)) + (v246 << 6);
    goto LABEL_211;
  }
LABEL_217:
  swift_release();
  if (sub_1ACC2A308(*(void *)(v358 + 104)))
  {
    uint64_t v259 = swift_bridgeObjectRetain();
    uint64_t v260 = sub_1ACCEB62C(v259);
    swift_bridgeObjectRelease();
    v382[0] = v260;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    sub_1ACE76138();
    swift_bridgeObjectRelease();
    size_t v261 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v262)
    {
      uint64_t v263 = (uint64_t)v374;
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      sub_1ACB1E644(v263);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v261(v382, 0);
  }
  v264 = v356;
  uint64_t v265 = swift_bridgeObjectRetain();
  uint64_t v266 = sub_1ACCEB840(v265);
  swift_bridgeObjectRelease();
  v382[0] = v266;
  uint64_t v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  uint64_t v268 = sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
  uint64_t v372 = v267;
  uint64_t v371 = (char *)v268;
  sub_1ACE76138();
  swift_bridgeObjectRelease();
  uint64_t v269 = sub_1ACE76288();
  uint64_t v270 = v352;
  if (v269 < 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v273 = v376;
  }
  else
  {
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v271 = (void (*)(void *, void))sub_1ACE74A38();
    uint64_t v273 = v376;
    if (*v272)
    {
      v274 = v374;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v270, v376);
      uint64_t v275 = (uint64_t)v274;
      v264 = v356;
      sub_1ACB1E644(v275);
    }
    v271(v382, 0);
    (*(void (**)(char *, uint64_t))v375)(v270, v273);
  }
  uint64_t v276 = swift_bridgeObjectRetain();
  uint64_t v277 = sub_1ACCEB9F8(v276);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v382[0] = v277;
  sub_1ACE76138();
  swift_bridgeObjectRelease();
  uint64_t v278 = sub_1ACE76288();
  v279 = v353;
  if (v278 < 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    uint64_t v280 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v281)
    {
      uint64_t v282 = (uint64_t)v374;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v279, v273);
      sub_1ACB1E644(v282);
    }
    v280(v382, 0);
    (*(void (**)(char *, uint64_t))v375)(v279, v273);
  }
  uint64_t v283 = v358;
  int v284 = v370;
  if (*(unsigned char *)(v358 + v357[28]) == 1)
  {
    MediaRequest.MediaRequestActionType.rawValue.getter();
    sub_1ACE749F8();
    swift_bridgeObjectRelease();
    int v285 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v286)
    {
      uint64_t v287 = (uint64_t)v374;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v264, v273);
      sub_1ACB1E644(v287);
    }
    v285(v382, 0);
    (*(void (**)(char *, uint64_t))v375)(v264, v273);
    uint64_t v283 = v358;
    int v284 = v370;
  }
  uint64_t v288 = *(void *)(v283 + 160);
  uint64_t v289 = *(void *)(v288 + 64);
  int v368 = (char *)(v288 + 64);
  uint64_t v290 = 1 << *(unsigned char *)(v288 + 32);
  uint64_t v291 = -1;
  if (v290 < 64) {
    uint64_t v291 = ~(-1 << v290);
  }
  unint64_t v292 = v291 & v289;
  int64_t v369 = (unint64_t)(v290 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v293 = 0;
  while (2)
  {
    if (v292)
    {
      unint64_t v295 = __clz(__rbit64(v292));
      v292 &= v292 - 1;
      unint64_t v296 = v295 | (v293 << 6);
LABEL_257:
      char v300 = *(unsigned char *)(*(void *)(v288 + 48) + v296);
      uint64_t v301 = *(void *)(*(void *)(v288 + 56) + 8 * v296);
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1ACE77818();
      LOBYTE(v381) = v300;
      MediaRequest.Filter.rawValue.getter();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      sub_1ACE77818();
      uint64_t v381 = v301;
      sub_1ACE76138();
      swift_bridgeObjectRelease();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      uint64_t v302 = v361;
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v303 = (void (*)(void *, void))sub_1ACE74A38();
      if (*v304)
      {
        uint64_t v294 = (uint64_t)v374;
        uint64_t v273 = v376;
        (*(void (**)(char *, char *, uint64_t))v373)(v374, v302, v376);
        sub_1ACB1E644(v294);
        v303(v382, 0);
      }
      else
      {
        v303(v382, 0);
        uint64_t v273 = v376;
      }
      (*(void (**)(char *, uint64_t))v375)(v302, v273);
      int v284 = v370;
      continue;
    }
    break;
  }
  int64_t v297 = v293 + 1;
  if (__OFADD__(v293, 1)) {
    goto LABEL_314;
  }
  if (v297 < v369)
  {
    unint64_t v298 = *(void *)&v368[8 * v297];
    ++v293;
    if (!v298)
    {
      int64_t v293 = v297 + 1;
      if (v297 + 1 >= v369) {
        goto LABEL_259;
      }
      unint64_t v298 = *(void *)&v368[8 * v293];
      if (!v298)
      {
        int64_t v293 = v297 + 2;
        if (v297 + 2 >= v369) {
          goto LABEL_259;
        }
        unint64_t v298 = *(void *)&v368[8 * v293];
        if (!v298)
        {
          int64_t v299 = v297 + 3;
          if (v299 >= v369) {
            goto LABEL_259;
          }
          unint64_t v298 = *(void *)&v368[8 * v299];
          if (!v298)
          {
            while (1)
            {
              int64_t v293 = v299 + 1;
              if (__OFADD__(v299, 1)) {
                break;
              }
              if (v293 >= v369) {
                goto LABEL_259;
              }
              unint64_t v298 = *(void *)&v368[8 * v293];
              ++v299;
              if (v298) {
                goto LABEL_256;
              }
            }
LABEL_321:
            __break(1u);
            goto LABEL_322;
          }
          int64_t v293 = v299;
        }
      }
    }
LABEL_256:
    unint64_t v292 = (v298 - 1) & v298;
    unint64_t v296 = __clz(__rbit64(v298)) + (v293 << 6);
    goto LABEL_257;
  }
LABEL_259:
  swift_release();
  uint64_t v305 = *(void *)(v358 + 168);
  uint64_t v306 = *(void *)(v305 + 64);
  int v368 = (char *)(v305 + 64);
  uint64_t v307 = 1 << *(unsigned char *)(v305 + 32);
  uint64_t v308 = -1;
  if (v307 < 64) {
    uint64_t v308 = ~(-1 << v307);
  }
  unint64_t v309 = v308 & v306;
  int64_t v369 = (unint64_t)(v307 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v310 = 0;
  while (2)
  {
    if (v309)
    {
      unint64_t v312 = __clz(__rbit64(v309));
      v309 &= v309 - 1;
      unint64_t v313 = v312 | (v310 << 6);
LABEL_280:
      char v317 = *(unsigned char *)(*(void *)(v305 + 48) + v313);
      uint64_t v318 = *(void *)(*(void *)(v305 + 56) + 8 * v313);
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1ACE77818();
      LOBYTE(v381) = v317;
      MediaRequest.ContentType.rawValue.getter();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      v382[0] = 0;
      v382[1] = 0xE000000000000000;
      sub_1ACE77818();
      uint64_t v381 = v318;
      sub_1ACE76138();
      swift_bridgeObjectRelease();
      sub_1ACA84008();
      swift_bridgeObjectRelease();
      sub_1ACE77818();
      long long v319 = v360;
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v320 = (void (*)(void *, void))sub_1ACE74A38();
      if (*v321)
      {
        uint64_t v311 = (uint64_t)v374;
        uint64_t v273 = v376;
        (*(void (**)(char *, char *, uint64_t))v373)(v374, v319, v376);
        sub_1ACB1E644(v311);
        v320(v382, 0);
      }
      else
      {
        v320(v382, 0);
        uint64_t v273 = v376;
      }
      (*(void (**)(char *, uint64_t))v375)(v319, v273);
      int v284 = v370;
      continue;
    }
    break;
  }
  int64_t v314 = v310 + 1;
  if (__OFADD__(v310, 1)) {
    goto LABEL_315;
  }
  if (v314 < v369)
  {
    unint64_t v315 = *(void *)&v368[8 * v314];
    ++v310;
    if (!v315)
    {
      int64_t v310 = v314 + 1;
      if (v314 + 1 >= v369) {
        goto LABEL_282;
      }
      unint64_t v315 = *(void *)&v368[8 * v310];
      if (!v315)
      {
        int64_t v310 = v314 + 2;
        if (v314 + 2 >= v369) {
          goto LABEL_282;
        }
        unint64_t v315 = *(void *)&v368[8 * v310];
        if (!v315)
        {
          int64_t v316 = v314 + 3;
          if (v316 >= v369) {
            goto LABEL_282;
          }
          unint64_t v315 = *(void *)&v368[8 * v316];
          if (!v315)
          {
            while (1)
            {
              int64_t v310 = v316 + 1;
              if (__OFADD__(v316, 1)) {
                break;
              }
              if (v310 >= v369) {
                goto LABEL_282;
              }
              unint64_t v315 = *(void *)&v368[8 * v310];
              ++v316;
              if (v315) {
                goto LABEL_279;
              }
            }
LABEL_322:
            __break(1u);
LABEL_323:
            __break(1u);
            swift_release();
            __break(1u);
            swift_release();
            __break(1u);
            JUMPOUT(0x1ACCF1360);
          }
          int64_t v310 = v316;
        }
      }
    }
LABEL_279:
    unint64_t v309 = (v315 - 1) & v315;
    unint64_t v313 = __clz(__rbit64(v315)) + (v310 << 6);
    goto LABEL_280;
  }
LABEL_282:
  uint64_t result = swift_release();
  uint64_t v323 = v358;
  int v324 = v351;
  if (*(void *)(v358 + v357[31] + 8))
  {
    sub_1ACE749F8();
    sub_1ACE749F8();
    uint64_t v325 = sub_1ACE74A38();
    v326 = v284;
    v327 = (void (*)(void *, void))v325;
    if (*v328)
    {
      uint64_t v329 = (uint64_t)v374;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v326, v273);
      sub_1ACB1E644(v329);
    }
    v327(v382, 0);
    v330 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v331)
    {
      uint64_t v332 = (uint64_t)v374;
      v333 = v355;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v355, v273);
      sub_1ACB1E644(v332);
      v330(v382, 0);
      uint64_t v334 = *(void (**)(unint64_t, uint64_t))v375;
      (*(void (**)(char *, uint64_t))v375)(v370, v273);
      uint64_t v335 = v333;
    }
    else
    {
      v330(v382, 0);
      uint64_t v334 = *(void (**)(unint64_t, uint64_t))v375;
      (*(void (**)(char *, uint64_t))v375)(v370, v273);
      uint64_t v335 = v355;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v334)(v335, v273);
    uint64_t v323 = v358;
  }
  int v336 = *(unsigned __int8 *)(v323 + 40);
  if (v336 == 2)
  {
    sub_1ACE749F8();
    v337 = (void (*)(void *, void))sub_1ACE74A38();
    if (*v338)
    {
      uint64_t v339 = (uint64_t)v374;
      (*(void (**)(char *, char *, uint64_t))v373)(v374, v324, v273);
      sub_1ACB1E644(v339);
    }
    v337(v382, 0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))v375)(v324, v273);
    uint64_t v323 = v358;
    int v336 = *(unsigned __int8 *)(v358 + 40);
  }
  if (v336 == 3)
  {
    uint64_t v340 = *(void *)(v323 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v323 = v358;
    if (v340)
    {
      uint64_t v341 = (uint64_t (*)(void *, void))sub_1ACE74A38();
      if (*v342) {
        sub_1ACA70960(v340);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t result = v341(v382, 0);
      uint64_t v323 = v358;
    }
  }
  if ((*(unsigned char *)(v323 + 185) & 1) == 0)
  {
    uint64_t v346 = (uint64_t (*)(void *, void))sub_1ACE74A38();
    if (*v347)
    {
      MediaRequest.PageName.rawValue.getter();
      uint64_t v348 = (uint64_t)v374;
      sub_1ACE749F8();
      swift_bridgeObjectRelease();
      sub_1ACB1E644(v348);
    }
    return v346(v382, 0);
  }
  return result;
}

uint64_t sub_1ACCF1398()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_1ACA39518(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 104);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1ACCF158C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1ACCEC8A8(a1, v4, v5);
}

uint64_t static RemoteNonFollowedShowError.== infix(_:_:)()
{
  return 1;
}

uint64_t RemoteNonFollowedShowError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t RemoteNonFollowedShowError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACCF1674()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84470;
  *(void *)(v0 + 32) = sub_1ACE761B8();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_1ACE761B8();
  *(void *)(v0 + 56) = v2;
  uint64_t result = sub_1ACE761B8();
  *(void *)(v0 + 64) = result;
  *(void *)(v0 + 72) = v4;
  off_1E99F5018 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static RemoteNonFollowedShow.knownSyncKeys.getter()
{
  return sub_1ACB1A88C(&qword_1E99F00D0);
}

uint64_t sub_1ACCF1720()
{
  uint64_t result = sub_1ACE761B8();
  qword_1E99F5020 = result;
  *(void *)algn_1E99F5028 = v1;
  return result;
}

uint64_t static RemoteNonFollowedShow.unknownSyncKey.getter()
{
  if (qword_1E99F00D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E99F5020;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1ACCF17B8()
{
  if (qword_1E99F00D0 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1E99F5018;
  if (qword_1E99F00D8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E99F5020;
  uint64_t v1 = *(void *)algn_1E99F5028;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v0 = sub_1ACA41EA0(0, v0[2] + 1, 1, v0);
  }
  unint64_t v4 = v0[2];
  unint64_t v3 = v0[3];
  if (v4 >= v3 >> 1) {
    uint64_t v0 = sub_1ACA41EA0((void *)(v3 > 1), v4 + 1, 1, v0);
  }
  v0[2] = v4 + 1;
  uint64_t v5 = &v0[2 * v4];
  void v5[4] = v2;
  v5[5] = v1;
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E99F5030 = (uint64_t)v0;
  return result;
}

uint64_t static RemoteNonFollowedShow.allSyncKeys.getter()
{
  return sub_1ACB1A88C(&qword_1E99F00E0);
}

uint64_t RemoteNonFollowedShow.storeCollectionId.getter()
{
  return *(void *)v0;
}

uint64_t RemoteNonFollowedShow.feedURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteNonFollowedShow.lastDatePlayed.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t RemoteNonFollowedShow.unknownSyncProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteNonFollowedShow.init(dictionary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE761B8();
  if (!*(void *)(a1 + 16) || (uint64_t v6 = sub_1ACA657FC(v4, v5), (v7 & 1) == 0))
  {
    long long v37 = 0u;
    long long v38 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1ACA33128(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1)) {
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v8 = v35;
  uint64_t v9 = sub_1ACE761B8();
  if (*(void *)(a1 + 16) && (uint64_t v11 = sub_1ACA657FC(v9, v10), (v12 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1ACA65828((uint64_t)&v37);
LABEL_10:
    sub_1ACCF1D40();
    swift_allocError();
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v14 = v35;
  uint64_t v15 = v36;
  uint64_t v16 = sub_1ACE761B8();
  if (*(void *)(a1 + 16) && (uint64_t v18 = sub_1ACA657FC(v16, v17), (v19 & 1) != 0))
  {
    sub_1ACA33128(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v38 + 1))
  {
    int v20 = swift_dynamicCast();
    if (v20) {
      uint64_t v21 = v35;
    }
    else {
      uint64_t v21 = 0;
    }
    char v22 = v20 ^ 1;
  }
  else
  {
    sub_1ACA65828((uint64_t)&v37);
    uint64_t v21 = 0;
    char v22 = 1;
  }
  char v39 = v22;
  if (qword_1E99F00D0 != -1) {
    swift_once();
  }
  uint64_t v23 = (char *)off_1E99F5018;
  uint64_t v24 = *((void *)off_1E99F5018 + 2);
  if (v24)
  {
    uint64_t v34 = v21;
    swift_bridgeObjectRetain();
    uint64_t v25 = (uint64_t *)(v23 + 40);
    do
    {
      uint64_t v26 = *(v25 - 1);
      uint64_t v27 = *v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1ACA657FC(v26, v27);
      char v30 = v29;
      swift_bridgeObjectRelease();
      if (v30)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1ACD0568C();
        }
        swift_bridgeObjectRelease();
        sub_1ACA3AA44((_OWORD *)(*(void *)(a1 + 56) + 32 * v28), &v37);
        sub_1ACB1B018(v28, a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v37 = 0u;
        long long v38 = 0u;
      }
      v25 += 2;
      sub_1ACA65828((uint64_t)&v37);
      swift_bridgeObjectRelease();
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v14 = v35;
    uint64_t v8 = v35;
    uint64_t v21 = v34;
    uint64_t v15 = v36;
  }
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_1ACB1AC14(v31);
  uint64_t result = swift_bridgeObjectRelease_n();
  char v33 = v39;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v21;
  *(unsigned char *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v32;
  return result;
}

uint64_t sub_1ACCF1CD0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACCF1CD8()
{
  if (qword_1E99F00D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E99F5020;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1ACCF1D40()
{
  unint64_t result = qword_1E99F5038;
  if (!qword_1E99F5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5038);
  }
  return result;
}

unint64_t sub_1ACCF1D98()
{
  unint64_t result = qword_1E99F5040;
  if (!qword_1E99F5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5040);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RemoteNonFollowedShowError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACCF1E88);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNonFollowedShowError()
{
  return &type metadata for RemoteNonFollowedShowError;
}

uint64_t destroy for RemoteNonFollowedShow()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoteNonFollowedShow(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteNonFollowedShow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemoteNonFollowedShow(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteNonFollowedShow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteNonFollowedShow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteNonFollowedShow()
{
  return &type metadata for RemoteNonFollowedShow;
}

uint64_t sub_1ACCF20D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t PurchaseOptions.rawValue.getter()
{
  return *(void *)v0;
}

PodcastsFoundation::PurchaseOptions __swiftcall PurchaseOptions.init(rawValue:)(PodcastsFoundation::PurchaseOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PurchaseOptions.userInitiated.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static PurchaseOptions.promptForAccount.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1ACCF2154@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACCF20D4(a1, a2);
}

void sub_1ACCF216C()
{
  uint64_t v0 = unk_1F03811D0;
  if ((unk_1F03811D0 & ~qword_1F03811C8) == 0) {
    uint64_t v0 = 0;
  }
  qword_1E99F5048 = v0 | qword_1F03811C8;
}

uint64_t static PurchaseOptions.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E99F00E8 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1E99F5048;
  return result;
}

unint64_t sub_1ACCF21F0()
{
  unint64_t result = qword_1E99F5050;
  if (!qword_1E99F5050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5050);
  }
  return result;
}

unint64_t sub_1ACCF2248()
{
  unint64_t result = qword_1E99F5058;
  if (!qword_1E99F5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5058);
  }
  return result;
}

unint64_t sub_1ACCF22A0()
{
  unint64_t result = qword_1E99F5060;
  if (!qword_1E99F5060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5060);
  }
  return result;
}

unint64_t sub_1ACCF22F8()
{
  unint64_t result = qword_1E99F5068;
  if (!qword_1E99F5068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5068);
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseOptions()
{
  return &type metadata for PurchaseOptions;
}

uint64_t dispatch thunk of PurchaseTaskProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.uiDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.uiDelegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.uiDelegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.productId(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of PurchaseTaskProtocol.purchaseItem(with:presentingSceneIdentifier:options:metricsOverlay:senderWindow:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 64))();
}

id sub_1ACCF23E4(uint64_t a1)
{
  return sub_1ACCF2458(60.0, a1, &qword_1EB7669F8);
}

id static FutureDateChecker.sharedInstance.getter()
{
  return sub_1ACB60304(&qword_1E99F00F0, (void **)&qword_1EB7669F8);
}

id sub_1ACCF2440(uint64_t a1)
{
  return sub_1ACCF2458(43260.0, a1, qword_1EB7671F8);
}

id sub_1ACCF2458(double a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (objc_class *)type metadata accessor for FutureDateChecker();
  uint64_t v6 = objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_leniency] = 0x404E000000000000;
  *(double *)&v6[OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertionLeniency] = a1;
  v6[OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures] = 1;
  v8.receiver = v6;
  v8.super_class = v5;
  id result = objc_msgSendSuper2(&v8, sel_init);
  *a3 = result;
  return result;
}

id static FutureDateChecker.lenientSharedInstance.getter()
{
  return sub_1ACB60304(&qword_1EB767208, (void **)qword_1EB7671F8);
}

id sub_1ACCF2524(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  return v5;
}

uint64_t static FutureDateChecker.sharedInstanceShouldAssertTestsOnly.getter()
{
  if (qword_1E99F00F0 != -1) {
    swift_once();
  }
  return *(unsigned __int8 *)(qword_1EB7669F8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures);
}

uint64_t static FutureDateChecker.sharedInstanceShouldAssertTestsOnly.setter(uint64_t result)
{
  char v1 = result;
  if (qword_1E99F00F0 != -1) {
    id result = swift_once();
  }
  *(unsigned char *)(qword_1EB7669F8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures) = v1 & 1;
  return result;
}

unsigned char *(*static FutureDateChecker.sharedInstanceShouldAssertTestsOnly.modify(unsigned char *a1))(unsigned char *result)
{
  if (qword_1E99F00F0 != -1) {
    swift_once();
  }
  *a1 = *(unsigned char *)(qword_1EB7669F8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures);
  return sub_1ACCF2774;
}

unsigned char *sub_1ACCF2774(unsigned char *result)
{
  *(unsigned char *)(qword_1EB7669F8 + OBJC_IVAR____TtC18PodcastsFoundation17FutureDateChecker_assertOnFutures) = *result;
  return result;
}

BOOL sub_1ACCF27B0(double a1)
{
  sub_1ACE74FC8();
  return sub_1ACCF3124(a1, v2);
}

BOOL sub_1ACCF2838(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA72A5C(a2, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1ACE75098();
    sub_1ACA3E034((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  sub_1ACE74FB8();
  double v11 = v10;
  sub_1ACE74FB8();
  BOOL v13 = sub_1ACCF3124(v11, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

BOOL sub_1ACCF2C48(double a1, double a2)
{
  return sub_1ACCF3124(a1, a2);
}

BOOL sub_1ACCF2CA8()
{
  sub_1ACE74FB8();
  double v1 = v0;
  sub_1ACE74FB8();
  return sub_1ACCF3124(v1, v2);
}

BOOL sub_1ACCF2E64(double a1)
{
  sub_1ACE74FC8();
  return sub_1ACCF3124(a1, v2);
}

BOOL sub_1ACCF2EF4()
{
  sub_1ACE74FB8();
  double v1 = v0;
  sub_1ACE74FC8();
  return sub_1ACCF3124(v1, v2);
}

id FutureDateChecker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FutureDateChecker.init()()
{
}

id FutureDateChecker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FutureDateChecker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_1ACCF3124(double a1, double a2)
{
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE754C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = a2 + 60.0;
  if (v12 < a1)
  {
    if (qword_1EB768FA0 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB768F88);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76BE8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      uint64_t v25 = v16;
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v24 = v16 + 4;
      sub_1ACE74FA8();
      sub_1ACA3DFDC();
      uint64_t v17 = sub_1ACE777C8();
      uint64_t v18 = v5;
      unint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v4);
      uint64_t v27 = sub_1ACA3189C(v17, v20, &v28);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      uint64_t v21 = v25;
      _os_log_impl(&dword_1AC9D5000, v14, v15, "Caught future timestamp: %{public}s", v25, 0xCu);
      uint64_t v22 = v26;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v22, -1, -1);
      MEMORY[0x1AD11B340](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12 < a1;
}

uint64_t type metadata accessor for FutureDateChecker()
{
  return self;
}

uint64_t method lookup function for FutureDateChecker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FutureDateChecker);
}

uint64_t dispatch thunk of FutureDateChecker.isFuture(timestamp:boundBy:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of FutureDateChecker.isFuture(timestamp:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of FutureDateChecker.isFuture(date:boundBy:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FutureDateChecker.timestamp(_:boundBy:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FutureDateChecker.timestampForDate(_:boundBy:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FutureDateChecker.timestampBoundByNow(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of FutureDateChecker.timestampBoundByNow(forDate:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t Date.friendlyDisplayString.getter()
{
  return sub_1ACCF3648((SEL *)&selRef_friendlyDisplayString);
}

Swift::String __swiftcall Date.verboseDisplayString()()
{
  uint64_t v0 = sub_1ACCF3648((SEL *)&selRef_verboseDisplayString);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.verboseDisplayStringWithoutTime()()
{
  uint64_t v0 = sub_1ACCF3648((SEL *)&selRef_verboseDisplayStringWithoutTime);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.lessVerboseDisplayStringWithoutTime()()
{
  uint64_t v0 = sub_1ACCF3648((SEL *)&selRef_lessVerboseDisplayStringWithoutTime);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.verboseDisplayStringWithoutTimeAndCurrentYear()()
{
  uint64_t v0 = sub_1ACCF3648((SEL *)&selRef_verboseDisplayStringWithoutTimeAndCurrentYear);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.lessVerboseDisplayStringWithoutTimeAndCurrentYear()()
{
  uint64_t v0 = sub_1ACCF3648((SEL *)&selRef_lessVerboseDisplayStringWithoutTimeAndCurrentYear);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1ACCF3648(SEL *a1)
{
  objc_super v2 = (void *)sub_1ACE75008();
  id v3 = [v2 *a1];

  uint64_t v4 = sub_1ACE761B8();
  return v4;
}

uint64_t Date.yearString.getter()
{
  uint64_t v0 = (void *)sub_1ACE75008();
  id v1 = objc_msgSend(v0, sel_yearString);

  uint64_t v2 = sub_1ACE761B8();
  return v2;
}

uint64_t HomogeneousValueBag.values.getter()
{
  return sub_1ACE766A8();
}

uint64_t HomogeneousValueBag.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1ACE75F98();
  return v0;
}

uint64_t HomogeneousValueBag.init()()
{
  *(void *)(v0 + 16) = sub_1ACE75F98();
  return v0;
}

uint64_t HomogeneousValueBag.add(value:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  swift_beginAccess();
  uint64_t v11 = nullsub_1(v1[2]);
  sub_1ACE76048();
  swift_getWitnessTable();
  uint64_t v13 = sub_1ACE76478();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5088);
  swift_getWitnessTable();
  sub_1ACE76128();
  swift_bridgeObjectRelease();
  if (v12) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = v11 + 1;
  }
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v3);
  uint64_t v13 = v7;
  swift_beginAccess();
  sub_1ACE76088();
  sub_1ACE760B8();
  swift_endAccess();
  return v7;
}

Swift::Void __swiftcall HomogeneousValueBag.remove(valueWithToken:)(Swift::Int64 valueWithToken)
{
  uint64_t v2 = sub_1ACE76FD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v6[-v4];
  Swift::Int64 v7 = valueWithToken;
  swift_beginAccess();
  sub_1ACE76088();
  sub_1ACE76018();
  swift_endAccess();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

Swift::Void __swiftcall HomogeneousValueBag.removeAll()()
{
}

uint64_t HomogeneousValueBag.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HomogeneousValueBag.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACCF3CC8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HomogeneousValueBag()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for HomogeneousValueBag(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HomogeneousValueBag);
}

uint64_t dispatch thunk of HomogeneousValueBag.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1ACCF3D54(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x646572616873;
    }
    else {
      uint64_t v3 = 0x647261646E617473;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x646572616873;
      }
      else {
        uint64_t v6 = 0x647261646E617473;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x73676E6974746573;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x73676E6974746573)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF3E68(char a1, char a2)
{
  if (*(void *)&aStdq_6[8 * a1] == *(void *)&aStdq_6[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1ACCF3ED0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 1684632949;
    }
    else {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0x80000001ACEC49D0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 1684632949;
      }
      else {
        unint64_t v6 = 0xD000000000000010;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0x80000001ACEC49D0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    unint64_t v3 = 0x64496D616461;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x64496D616461)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF3FD4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000001ACEC4880;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000012;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001ACEC48A0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v6 = "DeletedSecureKeyWithAsset";
      goto LABEL_7;
    case 3:
      unint64_t v6 = "MissingFairPlayOfflineKey";
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v7 = "KeyIntegrityError";
      goto LABEL_12;
    case 5:
      unint64_t v6 = "DownloadediPodLibraryFile";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000019;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v7 = "PotentialSyncDataLoss";
      goto LABEL_12;
    case 7:
      unint64_t v5 = 0xD00000000000001FLL;
      unint64_t v7 = "ReadOnlyDeviceMakingSyncChanges";
      goto LABEL_12;
    case 8:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v7 = "SyncAuthenticationError";
      goto LABEL_12;
    case 9:
      unint64_t v5 = 0xD000000000000029;
      unint64_t v7 = "ReadOnlyModeInDeviceWithRecentlyUnfollows";
LABEL_12:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001ACEC4880;
  switch(a2)
  {
    case 1:
      uint64_t v9 = "ExcessiveDownloads";
      goto LABEL_26;
    case 2:
      uint64_t v10 = "DeletedSecureKeyWithAsset";
      goto LABEL_19;
    case 3:
      uint64_t v10 = "MissingFairPlayOfflineKey";
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xD000000000000011;
      uint64_t v9 = "KeyIntegrityError";
      goto LABEL_26;
    case 5:
      uint64_t v10 = "DownloadediPodLibraryFile";
LABEL_19:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000019;
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0xD000000000000015;
      uint64_t v9 = "PotentialSyncDataLoss";
      goto LABEL_26;
    case 7:
      unint64_t v2 = 0xD00000000000001FLL;
      uint64_t v9 = "ReadOnlyDeviceMakingSyncChanges";
      goto LABEL_26;
    case 8:
      unint64_t v2 = 0xD000000000000017;
      uint64_t v9 = "SyncAuthenticationError";
      goto LABEL_26;
    case 9:
      unint64_t v2 = 0xD000000000000029;
      uint64_t v9 = "ReadOnlyModeInDeviceWithRecentlyUnfollows";
LABEL_26:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      if (v5 == v2) {
        goto LABEL_27;
      }
      goto LABEL_29;
    default:
LABEL_20:
      if (v5 != v2) {
        goto LABEL_29;
      }
LABEL_27:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_29:
      }
        char v11 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

BOOL sub_1ACCF4238(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_1ACCF4244(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6269726373627573;
  }
  else {
    uint64_t v3 = 7628135;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v5 = 0x6269726373627573;
  }
  else {
    uint64_t v5 = 7628135;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF42E8(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x737574617473;
      break;
    case 2:
      uint64_t v4 = 0x66612D77656E6572;
      unint64_t v3 = 0xEB00000000726574;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v4 = 6515555;
      break;
    case 4:
      uint64_t v4 = 0x6974617269707865;
      unint64_t v3 = 0xEF656D69742D6E6FLL;
      break;
    case 5:
      uint64_t v4 = 0x762D776F6C2D7369;
      unint64_t v3 = 0xEC00000065756C61;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE600000000000000;
      if (v4 == 0x737574617473) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v5 = 0xEB00000000726574;
      if (v4 != 0x66612D77656E6572) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v5 = 0xE300000000000000;
      if (v4 != 6515555) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v6 = 0x6974617269707865;
      unint64_t v5 = 0xEF656D69742D6E6FLL;
      goto LABEL_15;
    case 5:
      unint64_t v5 = 0xEC00000065756C61;
      if (v4 != 0x762D776F6C2D7369) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v4 != v6) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF4500(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000737365;
  uint64_t v3 = 0x4C74736567677573;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4C74736567677573;
  unint64_t v6 = 0xEB00000000737365;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6C61727475656ELL;
      break;
    case 2:
      uint64_t v5 = 0x657469726F766166;
      unint64_t v6 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6C61727475656ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x657469726F766166;
      unint64_t v2 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF46A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6572646C696863;
  }
  else {
    uint64_t v3 = 0x746E65726170;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6E6572646C696863;
  }
  else {
    uint64_t v5 = 0x746E65726170;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF474C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001ACEC3D90;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x74736163646F70;
    }
    else {
      unint64_t v5 = 0x697263736E617274;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0xEB00000000737470;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x80000001ACEC3D90;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x74736163646F70;
    }
    else {
      unint64_t v2 = 0x697263736E617274;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xE700000000000000;
    }
    else {
      unint64_t v3 = 0xEB00000000737470;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF486C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C656E6E616863;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C656E6E616863;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001ACEC4740;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v3 = 0x80000001ACEC4760;
      break;
    case 3:
      unint64_t v5 = 0x6143656E696C6E69;
      unint64_t v3 = 0xEE0079726F676574;
      break;
    case 4:
      unint64_t v5 = 0x6F77537265776F70;
      unint64_t v3 = 0xEB0000000068736FLL;
      break;
    case 5:
      unint64_t v5 = 0x6867696C68676968;
      unint64_t v3 = 0xEF6D657449646574;
      break;
    case 6:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 2003789939;
      break;
    case 7:
      unint64_t v5 = 0x4865646F73697065;
      unint64_t v3 = 0xEB000000006F7265;
      break;
    case 8:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6F726548776F6873;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001ACEC4740;
      if (v5 == 0xD000000000000014) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0x80000001ACEC4760;
      if (v5 != 0xD000000000000016) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xEE0079726F676574;
      if (v5 != 0x6143656E696C6E69) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xEB0000000068736FLL;
      if (v5 != 0x6F77537265776F70) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEF6D657449646574;
      if (v5 != 0x6867696C68676968) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 2003789939) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x4865646F73697065;
      unint64_t v6 = 0xEB000000006F7265;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6F726548776F6873) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF4B90(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000011;
    }
    else {
      unint64_t v3 = 0x65722D65636E6F6ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001ACEC4710;
    }
    else {
      unint64_t v4 = 0xEF7365736E6F7073;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000011;
      }
      else {
        unint64_t v6 = 0x65722D65636E6F6ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000001ACEC4710;
      }
      else {
        unint64_t v7 = 0xEF7365736E6F7073;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x6E6F6973726576;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E6F6973726576)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF4CC4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6F69647561;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F69647561;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      uint64_t v5 = 0x6567616D69;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x746E656D75636F64;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C616E7265747865;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6F65646976) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x6567616D69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x746E656D75636F64;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6C616E7265747865) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF4E68(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 30324;
    }
    else {
      uint64_t v3 = 1937204590;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 30324;
      }
      else {
        uint64_t v6 = 1937204590;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x636973756DLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x636973756DLL)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF4F54(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x72656C69617274;
    }
    else {
      uint64_t v3 = 0x73756E6F62;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x72656C69617274;
      }
      else {
        uint64_t v6 = 0x73756E6F62;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1819047270;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1819047270)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF5058(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED00006465696E65;
  unint64_t v3 = 0x645F737365636361;
  uint64_t v4 = a1;
  unint64_t v5 = 0x645F737365636361;
  unint64_t v6 = 0xED00006465696E65;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x5F64696C61766E69;
      unint64_t v6 = 0xEF74736575716572;
      break;
    case 2:
      unint64_t v5 = 0x5F64696C61766E69;
      unint64_t v6 = 0xEE00746E65696C63;
      break;
    case 3:
      unint64_t v5 = 0x5F64696C61766E69;
      uint64_t v7 = 0x746E617267;
      goto LABEL_12;
    case 4:
      unint64_t v5 = 0x655F726576726573;
      unint64_t v6 = 0xEC000000726F7272;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000017;
      char v8 = "temporarily_unavailable";
      goto LABEL_10;
    case 6:
      unint64_t v6 = 0x80000001ACEC46A0;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000016;
      char v8 = "unsupported_grant_type";
      goto LABEL_10;
    case 8:
      unint64_t v5 = 0xD000000000000019;
      char v8 = "unsupported_response_type";
LABEL_10:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 9:
      unint64_t v5 = 0x5F64696C61766E69;
      uint64_t v7 = 0x65706F6373;
LABEL_12:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEF74736575716572;
      if (v5 == 0x5F64696C61766E69) {
        goto LABEL_28;
      }
      goto LABEL_32;
    case 2:
      unint64_t v2 = 0xEE00746E65696C63;
      if (v5 != 0x5F64696C61766E69) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 3:
      uint64_t v9 = 0x746E617267;
      goto LABEL_31;
    case 4:
      unint64_t v2 = 0xEC000000726F7272;
      if (v5 != 0x655F726576726573) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 5:
      unint64_t v3 = 0xD000000000000017;
      uint64_t v10 = "temporarily_unavailable";
      goto LABEL_26;
    case 6:
      unint64_t v2 = 0x80000001ACEC46A0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 7:
      unint64_t v3 = 0xD000000000000016;
      uint64_t v10 = "unsupported_grant_type";
      goto LABEL_26;
    case 8:
      unint64_t v3 = 0xD000000000000019;
      uint64_t v10 = "unsupported_response_type";
LABEL_26:
      unint64_t v2 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      goto LABEL_27;
    case 9:
      uint64_t v9 = 0x65706F6373;
LABEL_31:
      unint64_t v2 = v9 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      if (v5 != 0x5F64696C61766E69) {
        goto LABEL_32;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v3) {
        goto LABEL_32;
      }
LABEL_28:
      if (v6 == v2) {
        char v11 = 1;
      }
      else {
LABEL_32:
      }
        char v11 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_1ACCF53E4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6449746E65696C63;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6449746E65696C63;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x644972657375;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v3 = 0x80000001ACEC45F0;
      break;
    case 3:
      unint64_t v3 = 0x80000001ACEC4610;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 4:
      unint64_t v5 = 0x6E55734972657375;
      unint64_t v3 = 0xED00003331726564;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x644972657375) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x80000001ACEC45F0;
      if (v5 != 0xD000000000000019) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x80000001ACEC4610;
      unint64_t v2 = 0xD000000000000014;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xED00003331726564;
      if (v5 != 0x6E55734972657375) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF55D8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64496D616461;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64496D616461;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6D617473656D6974;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 2:
      uint64_t v5 = 0x656C706D6F437369;
      unint64_t v3 = 0xEA00000000006574;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1634891108;
      goto LABEL_6;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1769172848;
LABEL_6:
      uint64_t v5 = v6 | 0x6E6F697400000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE900000000000070;
      if (v5 == 0x6D617473656D6974) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      unint64_t v7 = 0xEA00000000006574;
      if (v5 != 0x656C706D6F437369) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v2 = 0x6E6F697461727564;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x6E6F697469736F70) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_17:
      }
        char v8 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1ACCF57A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D617473656D6974;
  }
  else {
    uint64_t v3 = 0x64496D616461;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000070;
  }
  if (a2) {
    uint64_t v5 = 0x6D617473656D6974;
  }
  else {
    uint64_t v5 = 0x64496D616461;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000070;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF5850(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1635018093;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1635018093;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF58E4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6778480;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 6778480;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 6778986;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1734701162;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1667851624;
      break;
    case 4:
      uint64_t v5 = 7633012;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7473696C70;
      break;
    case 6:
      uint64_t v5 = 0x69736D617A616873;
      unint64_t v3 = 0xEF65727574616E67;
      break;
    case 7:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1819112564;
      break;
    case 8:
      uint64_t v5 = 7105912;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 6778986) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1734701162) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1667851624) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      if (v5 != 7633012) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7473696C70) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xEF65727574616E67;
      if (v5 != 0x69736D617A616873) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1819112564;
      goto LABEL_24;
    case 8:
      if (v5 != 7105912) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF5B30(uint64_t a1, uint64_t a2)
{
  return sub_1ACCF75B0(a1, a2, (uint64_t (*)(void))EpisodeDownloadReport.DownloadState.rawValue.getter);
}

uint64_t sub_1ACCF5B48(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C656E6E616863;
  }
  else {
    uint64_t v3 = 0x69726F6765746163;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007365;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C656E6E616863;
  }
  else {
    uint64_t v5 = 0x69726F6765746163;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007365;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF5BF4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000073747361;
  uint64_t v3 = 0x63646F5079616C70;
  uint64_t v4 = a1;
  uint64_t v5 = 0x63646F5079616C70;
  unint64_t v6 = 0xEC00000073747361;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xEB00000000747361;
      break;
    case 2:
      uint64_t v5 = 0x7461745379616C70;
      unint64_t v6 = 0xEB000000006E6F69;
      break;
    case 3:
      uint64_t v5 = 0x6269726373627573;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6D65744979616C70;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v7 = 7631713;
      goto LABEL_9;
    case 2:
      uint64_t v3 = 0x7461745379616C70;
      uint64_t v7 = 7237481;
LABEL_9:
      unint64_t v2 = v7 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v3) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x6269726373627573;
      unint64_t v2 = 0xE900000000000065;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x6D65744979616C70) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_16:
      }
        char v8 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1ACCF5DCC(uint64_t a1, uint64_t a2)
{
  return sub_1ACCF75B0(a1, a2, (uint64_t (*)(void))URLTrackIdentifier.ArgumentKey.rawValue.getter);
}

uint64_t sub_1ACCF5DE4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED00006574617453;
  uint64_t v3 = 0x64616F6C6E776F64;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x7461745379616C70;
    }
    else {
      uint64_t v5 = 0x6B72616D6B6F6F62;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000065;
    }
    else {
      unint64_t v6 = 0xED00006574617453;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0x64616F6C6E776F64;
    unint64_t v6 = 0xED00006574617453;
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  if (v7 == 1) {
    uint64_t v3 = 0x7461745379616C70;
  }
  else {
    uint64_t v3 = 0x6B72616D6B6F6F62;
  }
  if (v7 == 1) {
    unint64_t v2 = 0xE900000000000065;
  }
LABEL_14:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF5F10(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x636973756DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x636973756DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1937204590;
      break;
    case 2:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 30324;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C616E7265747865;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1937204590) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 30324;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6C616E7265747865) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF6070(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x687475616FLL;
    }
    else {
      uint64_t v3 = 0x6269726373627573;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000065;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x687475616FLL;
      }
      else {
        uint64_t v6 = 0x6269726373627573;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000065;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x7070612D6E69;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x7070612D6E69)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF6188(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x687475616FLL;
    }
    else {
      uint64_t v3 = 0x7374736163646F70;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x687475616FLL;
      }
      else {
        uint64_t v6 = 0x7374736163646F70;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1936748641;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1936748641)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF628C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1684627824;
    }
    else {
      uint64_t v3 = 0x646972627968;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1684627824;
      }
      else {
        uint64_t v6 = 0x646972627968;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701147238;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701147238)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF6380(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656C707061;
  }
  else {
    uint64_t v3 = 0x72656469766F7270;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656C707061;
  }
  else {
    uint64_t v5 = 0x72656469766F7270;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF6424(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64496D616461;
  }
  else {
    uint64_t v3 = 0x646E696B24;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64496D616461;
  }
  else {
    uint64_t v5 = 0x646E696B24;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF64C4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x80000001ACEC4210;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000021;
    }
    else {
      unint64_t v4 = 0xD000000000000026;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x80000001ACEC4240;
    }
    else {
      unint64_t v5 = 0x80000001ACEC4270;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000021;
      }
      else {
        unint64_t v7 = 0xD000000000000026;
      }
      if (v6 == 1) {
        unint64_t v2 = 0x80000001ACEC4240;
      }
      else {
        unint64_t v2 = 0x80000001ACEC4270;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD00000000000002FLL;
    unint64_t v5 = 0x80000001ACEC4210;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD00000000000002FLL)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF65C4(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 12918;
  }
  else {
    uint64_t v2 = 12662;
  }
  if (a2) {
    uint64_t v3 = 12918;
  }
  else {
    uint64_t v3 = 12662;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1ACCF662C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x72656C69617254;
  }
  else {
    uint64_t v3 = 0x6E6F73616553;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x72656C69617254;
  }
  else {
    uint64_t v5 = 0x6E6F73616553;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF66D0(uint64_t a1, uint64_t a2)
{
  return sub_1ACCF75B0(a1, a2, CropCode.rawValue.getter);
}

uint64_t sub_1ACCF66E8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C65646F6DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C65646F6DLL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6953746567726174;
      unint64_t v3 = 0xEA0000000000657ALL;
      break;
    case 2:
      unint64_t v5 = 0x5379616C70736964;
      unint64_t v3 = 0xEC000000656C6163;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v3 = 0x80000001ACEC4020;
      break;
    case 4:
      unint64_t v3 = 0x80000001ACEC4040;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 5:
      unint64_t v5 = 0x74616E6974736564;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x73746365666665;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x797469726F697270;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA0000000000657ALL;
      if (v5 == 0x6953746567726174) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEC000000656C6163;
      if (v5 != 0x5379616C70736964) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0x80000001ACEC4020;
      if (v5 != 0xD000000000000011) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0x80000001ACEC4040;
      if (v5 != 0xD000000000000010) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xEB000000006E6F69;
      if (v5 != 0x74616E6974736564) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x73746365666665;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x797469726F697270) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF69AC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x63646F507377656ELL;
  unint64_t v3 = 0xEC00000073747361;
  uint64_t v4 = a1;
  uint64_t v5 = 0x63646F507377656ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6D656C7469746E65;
      unint64_t v3 = 0xEC00000073746E65;
      break;
    case 2:
      uint64_t v5 = 0x726566664F707061;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 3:
      uint64_t v5 = 0x697263736E617274;
      unint64_t v3 = 0xEB00000000737470;
      break;
    case 4:
      uint64_t v5 = 0x6E79536E61656C63;
      unint64_t v3 = 0xE900000000000063;
      break;
    case 5:
      uint64_t v5 = 0x69726F6765746163;
      unint64_t v3 = 0xEA00000000007365;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xEC00000073747361;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC00000073746E65;
      if (v5 == 0x6D656C7469746E65) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE900000000000073;
      if (v5 != 0x726566664F707061) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xEB00000000737470;
      if (v5 != 0x697263736E617274) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x6E79536E61656C63;
      unint64_t v6 = 0xE900000000000063;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000007365;
      if (v5 != 0x69726F6765746163) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF6C04(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C75646F6DLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656C75646F6DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001ACEC3EF0;
      unint64_t v5 = 0xD000000000000016;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6C725564656566;
      break;
    case 3:
      unint64_t v5 = 0x6449636E7973;
      break;
    case 4:
      unint64_t v5 = 0x4B79616C70736964;
      unint64_t v3 = 0xEC00000073646E69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001ACEC3EF0;
      if (v5 == 0xD000000000000016) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6C725564656566) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6449636E7973;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEC00000073646E69;
      if (v5 != 0x4B79616C70736964) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF6DD0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000736C725574;
  uint64_t v3 = 0x657373416C6D7474;
  uint64_t v4 = a1;
  unint64_t v5 = 0x657373416C6D7474;
  unint64_t v6 = 0xED0000736C725574;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x656B6F546C6D7474;
      unint64_t v6 = 0xE90000000000006ELL;
      break;
    case 2:
      char v7 = "durationInMilliseconds";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0x6574656C706D6F63;
      unint64_t v6 = 0xE900000000000064;
      break;
    case 4:
      char v7 = "positionInMilliseconds";
LABEL_6:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000016;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = 0x80000001ACEC3ED0;
      break;
    case 6:
      unint64_t v5 = 0x72617262694C6E69;
      unint64_t v6 = 0xE900000000000079;
      break;
    case 7:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1701667182;
      break;
    case 8:
      unint64_t v5 = 0x614E747369747261;
      unint64_t v6 = 0xEA0000000000656DLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006ELL;
      if (v5 == 0x656B6F546C6D7474) {
        goto LABEL_26;
      }
      goto LABEL_29;
    case 2:
      char v8 = "durationInMilliseconds";
      goto LABEL_18;
    case 3:
      unint64_t v2 = 0xE900000000000064;
      if (v5 != 0x6574656C706D6F63) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 4:
      char v8 = "positionInMilliseconds";
LABEL_18:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000016) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 5:
      unint64_t v2 = 0x80000001ACEC3ED0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 6:
      unint64_t v2 = 0xE900000000000079;
      if (v5 != 0x72617262694C6E69) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 7:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701667182;
      goto LABEL_25;
    case 8:
      unint64_t v2 = 0xEA0000000000656DLL;
      if (v5 != 0x614E747369747261) {
        goto LABEL_29;
      }
      goto LABEL_26;
    default:
LABEL_25:
      if (v5 != v3) {
        goto LABEL_29;
      }
LABEL_26:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_29:
      }
        char v9 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1ACCF70D4(uint64_t a1, uint64_t a2)
{
  return sub_1ACCF75B0(a1, a2, (uint64_t (*)(void))MediaRequest.IncludeExtendTypes.rawValue.getter);
}

uint64_t sub_1ACCF70EC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7365646F73697065;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7365646F73697065;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001ACEC3C70;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v5 = 0x2D74736163646F70;
      unint64_t v3 = 0xEF736E6F73616573;
      break;
    case 3:
      unint64_t v5 = 0x697263736E617274;
      unint64_t v3 = 0xEB00000000737470;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001ACEC3C70;
      if (v5 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x2D74736163646F70;
      unint64_t v6 = 0xEF736E6F73616573;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000737470;
      if (v5 == 0x697263736E617274) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACCF72AC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001ACEC3C70;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7374736163646F70;
      break;
    case 2:
      unint64_t v6 = "podcast-stations";
      goto LABEL_5;
    case 3:
      unint64_t v6 = "podcast-channels";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v5 = 0x697263736E617274;
      unint64_t v3 = 0xEB00000000737470;
      break;
    case 5:
      unint64_t v5 = 0x69726F6765746163;
      unint64_t v3 = 0xEA00000000007365;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001ACEC3C70;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      if (v5 == 0x7374736163646F70) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      char v8 = "podcast-stations";
      goto LABEL_13;
    case 3:
      char v8 = "podcast-channels";
LABEL_13:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000010) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v2 = 0x697263736E617274;
      unint64_t v7 = 0xEB00000000737470;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0xEA00000000007365;
      if (v5 != 0x69726F6765746163) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1ACCF74A4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1953722224;
    }
    else {
      uint64_t v3 = 0x6574656C6564;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1953722224;
      }
      else {
        uint64_t v6 = 0x6574656C6564;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 7628135;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE300000000000000;
  if (v3 != 7628135)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF7598(uint64_t a1, uint64_t a2)
{
  return sub_1ACCF75B0(a1, a2, (uint64_t (*)(void))PodcastsSystem.rawValue.getter);
}

uint64_t sub_1ACCF75B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1ACCF7654(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000040;
  unint64_t v3 = 0x80000001ACEC3770;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000040;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000053;
      uint64_t v6 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/CELLULAR_DOWNLOADS";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0xD000000000000048;
      uint64_t v6 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/FORWARD";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD000000000000049;
      uint64_t v6 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/BACKWARD";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD000000000000055;
      uint64_t v6 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/PODCASTS_AND_PRIVACY";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001ACEC3770;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000053;
      char v8 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/CELLULAR_DOWNLOADS";
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0xD000000000000048;
      char v8 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/FORWARD";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0xD000000000000049;
      char v8 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/BACKWARD";
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xD000000000000055;
      char v8 = "settings-navigation://com.apple.Settings.Apps/com.apple.podcasts/PODCASTS_AND_PRIVACY";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1ACCF77D8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x62694C6C61636F6CLL;
    }
    else {
      uint64_t v3 = 0x7265666E69;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC00000079726172;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x62694C6C61636F6CLL;
      }
      else {
        uint64_t v6 = 0x7265666E69;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC00000079726172;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x495041616964656DLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x495041616964656DLL)
  {
LABEL_21:
    char v8 = sub_1ACE77848();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACCF78FC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64616F6C6E776F64;
  }
  else {
    uint64_t v3 = 0x6D6165727473;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64616F6C6E776F64;
  }
  else {
    uint64_t v5 = 0x6D6165727473;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ACCF79A0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C746974;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656C746974;
  switch(v4)
  {
    case 1:
      uint64_t v6 = 0x41656C746974;
      goto LABEL_7;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64657461647075;
      break;
    case 3:
      unint64_t v3 = 0x80000001ACEC3FB0;
      uint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      uint64_t v5 = 0x6465646461;
      break;
    case 5:
      uint64_t v6 = 0x416465646461;
LABEL_7:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x6373000000000000;
      unint64_t v3 = 0xEE00676E69646E65;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C61756E616DLL;
      break;
    case 7:
      uint64_t v5 = 0xD000000000000012;
      unint64_t v3 = 0x80000001ACEC3FE0;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v8 = 0x41656C746974;
      goto LABEL_19;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x64657461647075) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      unint64_t v7 = 0x80000001ACEC3FB0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      if (v5 != 0x6465646461) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      uint64_t v8 = 0x416465646461;
LABEL_19:
      unint64_t v7 = 0xEE00676E69646E65;
      if (v5 != (v8 & 0xFFFFFFFFFFFFLL | 0x6373000000000000)) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v2 = 0x6C61756E616DLL;
      goto LABEL_22;
    case 7:
      unint64_t v7 = 0x80000001ACEC3FE0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_26:
      }
        char v9 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

id BaseFeedRequest.init(storeID:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v1[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for BaseFeedRequest();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for BaseFeedRequest()
{
  return self;
}

uint64_t sub_1ACCF7C94(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v77 = a2;
  uint64_t v78 = a1;
  uint64_t v72 = sub_1ACE754C8();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v70 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MediaRequest.Params();
  uint64_t v73 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v79 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v80 = (uint64_t)&v69 - v11;
  uint64_t v88 = 0;
  long long v86 = 0u;
  long long v87 = 0u;
  char v89 = 4;
  v81[0] = 1;
  char v85 = 1;
  char v84 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7725D0);
  uint64_t inited = swift_initStackObject();
  long long v75 = xmmword_1ACE843F0;
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &unk_1F037FF70;
  unint64_t v76 = sub_1ACA364C4(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v75;
  *(void *)&long long v75 = *(void *)((char *)v2 + OBJC_IVAR___MTBaseFeedRequest_storeID);
  v82[0] = v75;
  *(void *)(v13 + 32) = sub_1ACE777C8();
  *(void *)(v13 + 40) = v14;
  LOBYTE(v82[0]) = 1;
  char v83 = 1;
  uint64_t v15 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v18 = sub_1ACA35F90(v16);
  unint64_t v19 = sub_1ACA35FB0(v16);
  unint64_t v20 = sub_1ACA360BC(v16);
  unint64_t v21 = sub_1ACA360DC(v16);
  uint64_t v68 = v16;
  *((void *)&v67 + 1) = sub_1ACA360FC(v16);
  *(void *)&long long v67 = v21;
  *((void *)&v66 + 1) = v16;
  *((void *)&v65 + 1) = v16;
  *(void *)&long long v66 = v16;
  *((void *)&v64 + 1) = v20;
  *(void *)&long long v65 = v76;
  *(void *)&long long v64 = v16;
  uint64_t v22 = v16;
  uint64_t v23 = v77;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(&v86, v81, &v85, &v84, v17, v18, v19, v22, v80, v64, v65, v66, v13, (char *)v82, 0, 1, v67, 0, 1,
    &v83,
    0,
    (uint64_t)v7,
    0,
    0,
    0,
    0,
    0,
    v68,
    0,
    0,
    2);
  uint64_t v24 = (uint64_t (*)())swift_allocObject();
  uint64_t v25 = v78;
  *((void *)v24 + 2) = v3;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v23;
  if (*(void *)((char *)v3 + OBJC_IVAR___MTBaseFeedRequest_showMetadata))
  {
    uint64_t v26 = (uint64_t)v3 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
    swift_beginAccess();
    sub_1ACA3E158(v26, (uint64_t)&v86);
    uint64_t v27 = *((void *)&v87 + 1);
    uint64_t v28 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
    char v29 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v3) + 0xA0);
    swift_retain();
    uint64_t v30 = v23;
    uint64_t v31 = v3;
    unint64_t v76 = (unint64_t)v24;
    uint64_t v32 = (uint64_t)v79;
    v29();
    char v33 = (void *)swift_allocObject();
    void v33[2] = v31;
    v33[3] = v25;
    v33[4] = v30;
    uint64_t v34 = *(void (**)(uint64_t, void (*)(uint64_t, void *), void *, uint64_t, uint64_t))(v28 + 48);
    swift_retain();
    uint64_t v35 = v31;
    v34(v32, sub_1ACCFA134, v33, v27, v28);
    swift_release();
    sub_1ACA39598(v32);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
    swift_release();
    return sub_1ACA39598(v80);
  }
  else
  {
    uint64_t v37 = v75;
    long long v38 = v70;
    uint64_t v39 = v71;
    uint64_t v40 = v72;
    uint64_t v41 = qword_1E99EFFE8;
    swift_retain();
    uint64_t v42 = v3;
    if (v41 != -1) {
      swift_once();
    }
    uint64_t v43 = __swift_project_value_buffer(v40, (uint64_t)qword_1E99F2E00);
    swift_beginAccess();
    uint64_t v44 = v43;
    uint64_t v45 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v44, v40);
    uint64_t v46 = v42;
    uint64_t v47 = sub_1ACE75498();
    os_log_type_t v48 = sub_1ACE76C08();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134217984;
      *(void *)&long long v86 = v37;
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v47, v48, "Fetching show metadata for show with storeID %lld...", v49, 0xCu);
      uint64_t v50 = v49;
      uint64_t v45 = v38;
      MEMORY[0x1AD11B340](v50, -1, -1);
    }
    else
    {

      uint64_t v47 = v46;
    }
    uint64_t v51 = (uint64_t)v79;

    (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v40);
    uint64_t v52 = (uint64_t)v46 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
    swift_beginAccess();
    sub_1ACA3E158(v52, (uint64_t)&v86);
    uint64_t v53 = *((void *)&v87 + 1);
    uint64_t v54 = v88;
    __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
    uint64_t v55 = v80;
    sub_1ACD12494(v80, v51, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
    unint64_t v56 = (*(unsigned __int8 *)(v73 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    unint64_t v57 = (v74 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = v51;
    uint64_t v60 = v58;
    *(void *)(v58 + 16) = v46;
    sub_1ACD124FC(v59, v58 + v56, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
    uint64_t v61 = (uint64_t (**)())(v60 + v57);
    *uint64_t v61 = sub_1ACCF9BA8;
    v61[1] = v24;
    uint64_t v62 = *(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v54 + 56);
    uint64_t v63 = v46;
    swift_retain();
    v62(v55, sub_1ACCFA78C, v60, v53, v54);
    swift_release();
    swift_release();
    sub_1ACA39598(v55);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
  }
}

id BaseFeedResponse.init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  id v4 = sub_1ACD11B7C(a1, a2, a3);

  return v4;
}

uint64_t sub_1ACCF84C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACCF8514(uint64_t a1)
{
  objc_super v3 = (void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  *objc_super v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ACCF8568())()
{
  return j_j__swift_endAccess;
}

void *sub_1ACCF85C4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1ACCF8614(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1ACCF8668())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1ACCF86C4@<X0>(void *a1@<X8>)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACCF8748(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a1;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACCF87DC())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACCF8838()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  uint64_t result = swift_beginAccess();
  if (*v1 >> 62) {
    goto LABEL_80;
  }
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return result;
  }
LABEL_3:
  uint64_t v82 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (uint64_t *)(v74 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v72 = *(void *)(*v3 + 16);
  if (!v72) {
    goto LABEL_74;
  }
  type metadata accessor for MediaRequestResponseParser();
  uint64_t v69 = OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request;
  uint64_t v71 = v4 + 32;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  uint64_t v70 = v4;
  do
  {
    if (v5 >= *(void *)(v4 + 16))
    {
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1ACE77508();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      if (v68) {
        return result;
      }
      goto LABEL_3;
    }
    uint64_t v6 = *(void *)(v71 + 8 * v5);
    *(void *)&long long v80 = 1954047342;
    *((void *)&v80 + 1) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_1ACE771F8();
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1ACA65B48((uint64_t)v79), (v8 & 1) != 0))
    {
      sub_1ACA33128(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v80);
    }
    else
    {
      long long v80 = 0u;
      long long v81 = 0u;
    }
    sub_1ACA6A0F8((uint64_t)v79);
    if (*((void *)&v81 + 1))
    {
      if (swift_dynamicCast()) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1ACA65828((uint64_t)&v80);
    }
    unint64_t v73 = v5;
    sub_1ACBB4E48(v6, (uint64_t)v79);
    if ((v79[0] & 0x100) != 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v9 = MEMORY[0x1E4FBC860];
    }
    else
    {
      LOBYTE(v80) = v79[0];
      unint64_t v9 = sub_1ACBB4F88(v6, &v80);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
    }
    unint64_t v12 = swift_bridgeObjectRetain();
    sub_1ACA6F0DC(v12);
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (!v13) {
        goto LABEL_5;
      }
LABEL_20:
      if (v13 >= 1)
      {
        uint64_t v14 = 0;
        uint64_t v77 = OBJC_IVAR___MTBaseFeedRequest_showMetadata;
        uint64_t v78 = *(void *)(v74 + v69);
        unint64_t v75 = v9;
        unint64_t v76 = v9 & 0xC000000000000001;
        while (1)
        {
          if (v76) {
            MEMORY[0x1AD119490](v14, v9);
          }
          else {
            swift_unknownObjectRetain();
          }
          uint64_t v17 = v13;
          type metadata accessor for ServerPodcastEpisode();
          uint64_t v18 = swift_dynamicCastClassUnconditional();
          unint64_t v19 = (char *)v18;
          unint64_t v20 = *(void **)(v78 + v77);
          if (v20)
          {
            unint64_t v21 = (void **)(v18 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
            swift_beginAccess();
            uint64_t v22 = (char *)*v21;
            if (*v21)
            {
              swift_unknownObjectRetain();
              id v23 = v20;
            }
            else
            {
              id v24 = objc_allocWithZone((Class)type metadata accessor for PodcastEpisodeRelationships());
              swift_unknownObjectRetain();
              id v25 = v20;
              id v26 = objc_msgSend(v24, sel_init);
              uint64_t v27 = *v21;
              uint8_t *v21 = v26;

              uint64_t v22 = (char *)*v21;
              if (!*v21) {
                goto LABEL_39;
              }
            }
            uint64_t v28 = (void **)&v22[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
            swift_beginAccess();
            if (*v28)
            {
              char v29 = (char *)*v21;
              if (!*v21) {
                goto LABEL_39;
              }
            }
            else
            {
              id v30 = objc_allocWithZone((Class)type metadata accessor for PodcastRelationshipContainer());
              uint64_t v31 = v22;
              id v32 = objc_msgSend(v30, sel_init);
              char v33 = *v28;
              *uint64_t v28 = v32;

              char v29 = (char *)*v21;
              if (!*v21) {
                goto LABEL_39;
              }
            }
            uint64_t v34 = &v29[OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_podcast];
            swift_beginAccess();
            uint64_t v35 = *(void *)v34;
            if (!*(void *)v34)
            {
LABEL_39:

              goto LABEL_40;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
            uint64_t v36 = swift_allocObject();
            *(_OWORD *)(v36 + 16) = xmmword_1ACE84830;
            *(void *)(v36 + 32) = v20;
            v79[0] = v36;
            sub_1ACE76598();
            uint64_t v37 = v79[0];
            long long v38 = (uint64_t *)(v35 + OBJC_IVAR____TtC18PodcastsFoundation28PodcastRelationshipContainer_data);
            swift_beginAccess();
            *long long v38 = v37;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_unknownObjectRetain();
          }
LABEL_40:
          uint64_t v39 = OBJC_IVAR___MTServerPodcastEpisode_attributes;
          if (*(void *)(*(void *)&v19[OBJC_IVAR___MTServerPodcastEpisode_attributes] + 168)
            && ((swift_bridgeObjectRetain(), uint64_t v40 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v40 == 1) || v40 == 2))
          {
            char v41 = sub_1ACE77848();
            swift_bridgeObjectRelease();
            if ((v41 & 1) == 0) {
              goto LABEL_47;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          if (!v1[3])
          {
            v1[3] = v19;
            swift_unknownObjectRetain();
          }
LABEL_47:
          uint64_t v42 = *(void *)&v19[v39];
          if (*(unsigned char *)(v42 + 360))
          {
            if (*(void *)(v42 + 168)
              && (swift_bridgeObjectRetain(), uint64_t v43 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v43 == 1))
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v60 = sub_1ACE77848();
              swift_bridgeObjectRelease();
              if ((v60 & 1) == 0)
              {
                uint64_t v61 = v19;
                uint64_t v62 = 0;
LABEL_70:
                sub_1ACCF9188(v61, v62);
                goto LABEL_24;
              }
            }
            uint64_t v61 = v19;
            uint64_t v62 = -1;
            goto LABEL_70;
          }
          uint64_t v44 = *(void *)(v42 + 352);
          uint64_t v45 = v1[1];
          if (*(void *)(v45 + 16) && (unint64_t v46 = sub_1ACA65E48(v44), (v47 & 1) != 0))
          {
            *(void *)&long long v80 = *(void *)(*(void *)(v45 + 56) + 8 * v46);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)&long long v80 = MEMORY[0x1E4FBC860];
          }
          os_log_type_t v48 = v19;
          MEMORY[0x1AD118700]();
          if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1ACE765C8();
          }
          sub_1ACE76628();
          sub_1ACE76598();
          uint64_t v49 = v80;
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v51 = (void *)v1[1];
          v1[1] = 0x8000000000000000;
          unint64_t v53 = sub_1ACA65E48(v44);
          uint64_t v54 = v51[2];
          BOOL v55 = (v52 & 1) == 0;
          uint64_t v56 = v54 + v55;
          if (__OFADD__(v54, v55))
          {
            __break(1u);
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
          char v57 = v52;
          if (v51[3] >= v56)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1ACD07984(&qword_1E99F0C68);
            }
          }
          else
          {
            sub_1ACCFF558(v56, isUniquelyReferenced_nonNull_native, &qword_1E99F0C68);
            unint64_t v58 = sub_1ACA65E48(v44);
            if ((v57 & 1) != (v59 & 1))
            {
              sub_1ACE77A68();
              __break(1u);
              uint64_t result = swift_release();
              __break(1u);
              return result;
            }
            unint64_t v53 = v58;
          }
          if (v57)
          {
            uint64_t v15 = v51[7];
            swift_bridgeObjectRelease();
            *(void *)(v15 + 8 * v53) = v49;
          }
          else
          {
            v51[(v53 >> 6) + 8] |= 1 << v53;
            *(void *)(v51[6] + 8 * v53) = v44;
            *(void *)(v51[7] + 8 * v53) = v49;
            uint64_t v63 = v51[2];
            BOOL v64 = __OFADD__(v63, 1);
            uint64_t v65 = v63 + 1;
            if (v64) {
              goto LABEL_77;
            }
            v51[2] = v65;
          }
          v1[1] = v51;
          swift_bridgeObjectRelease();
          swift_endAccess();
LABEL_24:
          swift_unknownObjectRelease_n();
          ++v14;
          uint64_t v13 = v17;
          BOOL v16 = v17 == v14;
          unint64_t v9 = v75;
          if (v16) {
            goto LABEL_5;
          }
        }
      }
      goto LABEL_79;
    }
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_20;
    }
LABEL_5:
    unint64_t v5 = v73 + 1;
    swift_bridgeObjectRelease();
    uint64_t v4 = v70;
  }
  while (v73 + 1 != v72);
  swift_bridgeObjectRelease();
LABEL_74:
  uint64_t v66 = v1[1];
  swift_bridgeObjectRetain_n();
  long long v67 = sub_1ACD0AB80(v66, &qword_1EB769180, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1ACD117E8);
  swift_bridgeObjectRelease();
  v79[0] = (uint64_t)v67;
  sub_1ACCF92F4(v79);
  swift_bridgeObjectRelease();
  v1[2] = v79[0];
  swift_bridgeObjectRelease();
  *uint64_t v1 = v82;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACCF9188(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 8);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1ACA65E48(a2), (v8 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  id v9 = a1;
  MEMORY[0x1AD118700]();
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1ACE765C8();
  }
  sub_1ACE76628();
  sub_1ACE76598();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v5 + 8);
  *(void *)(v5 + 8) = 0x8000000000000000;
  sub_1ACD0D5CC(v13, a2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_1ACA65E48, &qword_1E99F0C68);
  *(void *)(v5 + 8) = v12;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1ACCF92F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1ACBE8050(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1ACD0FFCC(v5);
  *a1 = v2;
  return result;
}

uint64_t BaseFeedRequest.storeID.getter()
{
  return *(void *)(v0 + OBJC_IVAR___MTBaseFeedRequest_storeID);
}

id BaseFeedRequest.__allocating_init(storeID:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR___MTBaseFeedRequest_storeID] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1ACCF9424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  char v26 = 4;
  char v23 = 1;
  char v22 = 1;
  char v21 = 4;
  char v20 = 1;
  char v19 = 1;
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  unint64_t v7 = sub_1ACA35F90(MEMORY[0x1E4FBC860]);
  unint64_t v8 = sub_1ACA35F90(v6);
  unint64_t v9 = sub_1ACA35FB0(v6);
  unint64_t v10 = sub_1ACA360BC(v6);
  unint64_t v11 = sub_1ACA360BC(v6);
  unint64_t v12 = sub_1ACA360DC(v6);
  *((void *)&v17 + 1) = sub_1ACA360FC(v6);
  *(void *)&long long v17 = v12;
  *((void *)&v16 + 1) = v6;
  *((void *)&v15 + 1) = v6;
  *(void *)&long long v16 = v6;
  *((void *)&v14 + 1) = v10;
  *(void *)&long long v15 = v11;
  *(void *)&long long v14 = v6;
  return MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v24, &v23, &v22, &v21, v7, v8, v9, v6, a1, v14, v15, v16, v6, &v20, 0, 1, v17, 0, 1,
           &v19,
           0,
           (uint64_t)v4,
           0,
           0,
           0,
           0,
           0,
           v6,
           0,
           0,
           2);
}

id sub_1ACCF9600()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v39 = (uint64_t)&v39 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E490);
  uint64_t v7 = swift_allocObject();
  uint64_t v40 = v7;
  *(_OWORD *)(v7 + 16) = xmmword_1ACE843F0;
  unint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v7 + 32) = sub_1ACA364E4(MEMORY[0x1E4FBC860]);
  unint64_t v9 = objc_allocWithZone((Class)type metadata accessor for FullFeedRequest());
  v9[OBJC_IVAR___MTFullFeedRequest_isSerial] = 0;
  v9[OBJC_IVAR___MTFullFeedRequest_hasSeasons] = 0;
  *(void *)&v9[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = 0;
  *(void *)&v9[OBJC_IVAR___MTBaseFeedRequest_storeID] = 0;
  unint64_t v10 = (objc_class *)type metadata accessor for BaseFeedRequest();
  v51.receiver = v9;
  v51.super_class = v10;
  unint64_t v11 = (char *)objc_msgSendSuper2(&v51, sel_init);
  uint64_t v49 = 0;
  memset(v48, 0, sizeof(v48));
  char v50 = 4;
  char v47 = 1;
  char v46 = 1;
  char v45 = 4;
  char v44 = 1;
  char v43 = 1;
  uint64_t v12 = sub_1ACE74F28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  unint64_t v13 = sub_1ACA35F90((uint64_t)v8);
  unint64_t v14 = sub_1ACA35F90((uint64_t)v8);
  unint64_t v15 = sub_1ACA35FB0((uint64_t)v8);
  unint64_t v16 = sub_1ACA360BC((uint64_t)v8);
  unint64_t v17 = sub_1ACA360BC((uint64_t)v8);
  unint64_t v18 = sub_1ACA360DC((uint64_t)v8);
  *((void *)&v38 + 1) = sub_1ACA360FC((uint64_t)v8);
  *(void *)&long long v38 = v18;
  *((void *)&v37 + 1) = v8;
  *((void *)&v36 + 1) = v8;
  *(void *)&long long v37 = v8;
  *((void *)&v35 + 1) = v16;
  *(void *)&long long v36 = v17;
  *(void *)&long long v35 = v8;
  uint64_t v19 = v39;
  MediaRequest.Params.init(requestType:requestContentType:viewType:directFetch:relationshipIncludes:relationshipRelates:relationshipLimit:include:omit:typedIncludes:typedExtends:fields:withTypes:displayKinds:identifiers:fragment:limit:filters:meta:offset:pageName:requestAllPages:hostUrl:countryCode:isImplicitActionRequest:searchTerm:queryContentTypes:triggerBy:includeEntitlementsOverride:)(v48, &v47, &v46, &v45, v13, v14, v15, (uint64_t)v8, v39, v35, v36, v37, (uint64_t)v8, &v44, 0, 1, v38, 0, 1,
    &v43,
    0,
    (uint64_t)v2,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v8,
    0,
    0,
    2);
  char v20 = (char *)objc_allocWithZone((Class)type metadata accessor for FullFeedResponse());
  *(void *)&v20[OBJC_IVAR___MTFullFeedResponse_fullFeedRequest] = v11;
  uint64_t v21 = v19;
  uint64_t v22 = v41;
  sub_1ACD12494(v19, v41, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  char v23 = (void **)&v20[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v20[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v20[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = v40;
  *(void *)&v20[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = v11;
  sub_1ACD12494(v22, (uint64_t)&v20[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  id v24 = *(void **)&v11[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  uint64_t v25 = *v23;
  *char v23 = v24;
  char v26 = v11;
  uint64_t v27 = v20;
  id v28 = v24;

  unint64_t v29 = sub_1ACA3A048(v8);
  id v30 = &v27[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)id v30 = v8;
  *((void *)v30 + 1) = v29;
  *((void *)v30 + 2) = v8;
  *((void *)v30 + 3) = 0;

  uint64_t v31 = (objc_class *)type metadata accessor for BaseFeedResponse();
  v42.receiver = v27;
  v42.super_class = v31;
  id v32 = objc_msgSendSuper2(&v42, sel_init);
  sub_1ACA39598(v22);
  id v33 = v32;
  sub_1ACCF8838();

  sub_1ACA39598(v21);
  return v33;
}

uint64_t sub_1ACCF9A14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (uint64_t)a1 + OBJC_IVAR___MTBaseMAPIRequest_mediaRequestController;
  swift_beginAccess();
  sub_1ACA3E158(v9, (uint64_t)v17);
  uint64_t v10 = v18;
  uint64_t v11 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xA0))();
  uint64_t v12 = (void *)swift_allocObject();
  id v12[2] = a1;
  v12[3] = a2;
  _OWORD v12[4] = a3;
  unint64_t v13 = *(void (**)(unsigned char *, uint64_t (*)(), void *, uint64_t, uint64_t))(v11 + 48);
  unint64_t v14 = a1;
  swift_retain();
  v13(v8, sub_1ACD125D4, v12, v10, v11);
  swift_release();
  sub_1ACA39598((uint64_t)v8);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
}

uint64_t sub_1ACCF9BA8()
{
  return sub_1ACCF9A14(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1ACCF9BB4(uint64_t a1, void *a2, void *a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v9 = type metadata accessor for MediaRequest.Params();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE754C8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  if (a2)
  {
    id v19 = a2;
    if (qword_1E99EFFE8 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v12, (uint64_t)qword_1E99F2E00);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v20, v12);
    id v21 = a2;
    uint64_t v22 = a3;
    id v23 = a2;
    id v24 = sub_1ACE75498();
    os_log_type_t v25 = sub_1ACE76BE8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v45 = v41;
      *(_DWORD *)uint64_t v26 = 134218242;
      uint64_t v44 = *(void *)&v22[OBJC_IVAR___MTBaseFeedRequest_storeID];
      objc_super v42 = a4;
      sub_1ACE76FF8();

      *(_WORD *)(v26 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v27 = sub_1ACE77A98();
      uint64_t v44 = sub_1ACA3189C(v27, v28, &v45);
      a4 = v42;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v24, v25, "Feed fetch for show with storeID - %lld - resulted in error: %s", (uint8_t *)v26, 0x16u);
      uint64_t v29 = v41;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      MEMORY[0x1AD11B340](v26, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v37 = a2;
    a4(0, a2);
  }
  else
  {
    if (qword_1E99EFFE8 != -1) {
      swift_once();
    }
    uint64_t v30 = __swift_project_value_buffer(v12, (uint64_t)qword_1E99F2E00);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v30, v12);
    uint64_t v31 = a3;
    id v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76C08();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = a4;
      long long v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)long long v35 = 134217984;
      uint64_t v45 = *(uint64_t *)((char *)&v31->isa + OBJC_IVAR___MTBaseFeedRequest_storeID);
      sub_1ACE76FF8();

      _os_log_impl(&dword_1AC9D5000, v32, v33, "Feed fetch completed successfully for show with storeID %lld", v35, 0xCu);
      long long v36 = v35;
      a4 = v34;
      MEMORY[0x1AD11B340](v36, -1, -1);
    }
    else
    {

      id v32 = v31;
    }

    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    if (a1)
    {
      uint64_t v39 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & (uint64_t)v31->isa) + 0xA0))(v38);
      (*(void (**)(uint64_t, NSObject *, char *))((*v39 & (uint64_t)v31->isa) + 0xA8))(a1, v31, v11);
      sub_1ACA39598((uint64_t)v11);
      uint64_t v40 = swift_unknownObjectRetain();
      a4(v40, 0);
      swift_unknownObjectRelease_n();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1ACCFA134(uint64_t a1, void *a2)
{
  sub_1ACCF9BB4(a1, a2, *(void **)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

void sub_1ACCFA140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char *a6, uint64_t a7, void (*a8)(__n128))
{
  uint64_t v12 = sub_1ACE754C8();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    id v17 = a5;
    if (qword_1E99EFFE8 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v12, (uint64_t)qword_1E99F2E00);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v18, v12);
    id v19 = a5;
    id v20 = a5;
    id v21 = a6;
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v36 = v25;
      *(_DWORD *)uint64_t v24 = 134218242;
      uint64_t v38 = *(void *)&v21[OBJC_IVAR___MTBaseFeedRequest_storeID];
      uint64_t v39 = v25;
      id v37 = a8;
      sub_1ACE76FF8();

      *(_WORD *)(v24 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v26 = sub_1ACE77A98();
      uint64_t v38 = sub_1ACA3189C(v26, v27, &v39);
      a8 = v37;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AC9D5000, v22, v23, "Show metadata fetch with storeID - %lld - resulted in error: %s", (uint8_t *)v24, 0x16u);
      uint64_t v28 = v36;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v28, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_25;
  }
  if (!a3)
  {
LABEL_25:
    a8(v14);
    return;
  }
  type metadata accessor for MediaRequestResponseParser();
  _s18PodcastsFoundation26MediaRequestResponseParserC15extractNextPageySSSgSDys11AnyHashableVypGFZ_0(a3);
  if (v29) {
    swift_bridgeObjectRelease();
  }
  sub_1ACBB4E48(a3, (uint64_t)v40);
  if (v40[1])
  {
    unint64_t v30 = MEMORY[0x1E4FBC860];
  }
  else
  {
    LOBYTE(v39) = v40[0];
    unint64_t v30 = sub_1ACBB4F88(a3, &v39);
  }
  if (!(v30 >> 62))
  {
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_16;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_22;
  }
LABEL_16:
  if ((v30 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AD119490](0, v30);
    goto LABEL_19;
  }
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_19:
    swift_bridgeObjectRelease();
    type metadata accessor for ServerPodcastBase();
    uint64_t v32 = swift_dynamicCastClass();
    if (v32)
    {
LABEL_24:
      uint64_t v34 = *(void **)&a6[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
      *(void *)&a6[OBJC_IVAR___MTBaseFeedRequest_showMetadata] = v32;

      goto LABEL_25;
    }
    swift_unknownObjectRelease();
LABEL_23:
    uint64_t v32 = 0;
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1ACCFA578()
{
  uint64_t v1 = type metadata accessor for MediaRequest.Params();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);

  sub_1ACA39518(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8), *(void *)(v0 + v2 + 16), *(void *)(v0 + v2 + 24), *(void *)(v0 + v2 + 32), *(unsigned char *)(v0 + v2 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 104);
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1ACCFA78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for MediaRequest.Params() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  sub_1ACCFA140(a1, a2, a3, a4, a5, *(char **)(v5 + 16), v5 + v12, *(void (**)(__n128))(v5 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

id BaseFeedRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BaseFeedRequest.init()()
{
}

void sub_1ACCFA980()
{
}

id BaseFeedRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1ACCFAF20(a1, type metadata accessor for BaseFeedRequest);
}

uint64_t sub_1ACCFA9B8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  *unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1ACCFAA24(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *unint64_t v3 = v2;
  id v5 = v2;
}

id BaseFeedResponse.request.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request);
}

uint64_t BaseFeedResponse.params.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACD12494(v1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params, a1, (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
}

uint64_t sub_1ACCFAAD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACCFAB5C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = (void *)(*a2 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache);
  swift_beginAccess();
  *uint64_t v6 = v2;
  v6[1] = v3;
  id v6[2] = v4;
  void v6[3] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

id BaseFeedResponse.__allocating_init(jsonArray:request:params:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  unint64_t v8 = (void **)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACD12494(a3, (uint64_t)&v7[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  uint64_t v9 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  uint64_t v10 = *v8;
  *unint64_t v8 = v9;
  uint64_t v11 = v7;
  unint64_t v12 = a2;
  id v13 = v9;

  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  uint64_t v16 = &v11[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)uint64_t v16 = v14;
  *((void *)v16 + 1) = v15;
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = 0;

  v19.receiver = v11;
  v19.super_class = v3;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_1ACA39598(a3);

  return v17;
}

id sub_1ACCFAD8C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FBA8A8]);
  return objc_msgSend(v0, sel_init);
}

uint64_t sub_1ACCFAE28()
{
  return 0;
}

void BaseFeedResponse.init()()
{
}

id BaseFeedResponse.__deallocating_deinit()
{
  return sub_1ACCFAF20(0, type metadata accessor for BaseFeedResponse);
}

id sub_1ACCFAF20(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void *sub_1ACCFAFFC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1ACE77568();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1ACCFB0A0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

__n128 sub_1ACCFB0D0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1ACE77B18();
  sub_1ACE77B58();
  sub_1ACE76108();
  sub_1ACE77B48();
  sub_1ACE77B78();
  unint64_t v6 = sub_1ACE77118();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  uint64_t v7 = a3[6] + 72 * v6;
  long long v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 48) = v8;
  *(void *)(v7 + 64) = *(void *)(a1 + 64);
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(__n128 *)(v7 + 16) = result;
  *(void *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1ACCFB1C0(char a1, uint64_t a2, void *a3)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  sub_1ACE77B78();
  unint64_t result = sub_1ACE77118();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1ACCFB344(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5108);
  char v37 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    objc_super v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(v5 + 56) + 40 * v17;
    if (v37)
    {
      sub_1ACB1DF98(v25, (uint64_t)v38);
    }
    else
    {
      sub_1ACA6A14C(v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_1ACB1DF98((uint64_t)v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  objc_super v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *objc_super v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFB670(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F80);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      char v29 = *(void **)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        id v30 = v29;
      }
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFB944(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B78);
  char v6 = a2;
  uint64_t v7 = sub_1ACE77548();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1ACA3985C(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      uint64_t result = sub_1ACE77B78();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *int64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1ACCFBC54(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F78);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v33) {
              goto LABEL_35;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v23 = v21;
    }
    sub_1ACE77B18();
    sub_1ACE77B38();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1ACE77B78();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v35;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFBF84(uint64_t a1, char a2)
{
  return sub_1ACCFF29C(a1, a2, &qword_1E99F0F70);
}

uint64_t sub_1ACCFBF90(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8D8);
  char v37 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFC29C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B88);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v8 << 6);
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v16 >= v29) {
          goto LABEL_35;
        }
        unint64_t v17 = v30[v16];
        ++v8;
        if (!v17)
        {
          int64_t v8 = v16 + 1;
          if (v16 + 1 >= v29) {
            goto LABEL_35;
          }
          unint64_t v17 = v30[v8];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v29)
            {
LABEL_35:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_42;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v30[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v8 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v29) {
                  goto LABEL_35;
                }
                unint64_t v17 = v30[v8];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v18;
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      int v19 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE77B28();
      if (v19 != 2) {
        sub_1ACE77B38();
      }
      uint64_t result = sub_1ACE77B78();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFC5A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8C8);
  char v40 = a2;
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v38 = (void *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v41 = v8;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        int64_t v22 = v8 + 1;
        if (!v21)
        {
          int64_t v22 = v20 + 1;
          if (v20 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v22];
          if (!v21)
          {
            int64_t v23 = v20 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v38 = -1 << v36;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v38[v23];
            if (!v21)
            {
              while (1)
              {
                int64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v21 = v38[v22];
                ++v23;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v22 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        int64_t v41 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 56);
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v30 = (uint64_t *)(v28 + 40 * v19);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      unint64_t v33 = v30[2];
      uint64_t v34 = v30[3];
      uint64_t v35 = v30[4];
      if ((v40 & 1) == 0) {
        sub_1ACA50D88(v31, v32, v33);
      }
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v29;
      unint64_t v17 = (uint64_t *)(*(void *)(v7 + 56) + 40 * v16);
      *unint64_t v17 = v31;
      v17[1] = v32;
      _OWORD v17[2] = v33;
      void v17[3] = v34;
      v17[4] = v35;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
      int64_t v8 = v41;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFC8C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769038);
  char v45 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v41 = v3;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v10)
    {
      uint64_t v46 = (v10 - 1) & v10;
      int64_t v47 = v13;
      unint64_t v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    int64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = (uint64_t *)(v30 + 40 * v20);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    unint64_t v37 = v34[2];
    uint64_t v38 = v34[3];
    uint64_t v39 = v34[4];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1ACA50D88(v35, v36, v37);
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v33;
    unint64_t v19 = (uint64_t *)(*(void *)(v7 + 56) + 40 * v17);
    *unint64_t v19 = v35;
    v19[1] = v36;
    v19[2] = v37;
    _OWORD v19[3] = v38;
    v19[4] = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v44;
    unint64_t v10 = v46;
    int64_t v13 = v47;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFCC2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1ACA3AA44((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1ACA6A09C(v25, (uint64_t)&v38);
      sub_1ACA33128(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1ACE771D8();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1ACA3AA44(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFCF44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5160);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    char v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v7 + 48) + 8 * v14) = v20;
      *(unsigned char *)(*(void *)(v7 + 56) + v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFD20C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770790);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    int64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_1ACA3AA44(v23, v35);
    }
    else
    {
      sub_1ACA33128((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    sub_1ACE77B18();
    type metadata accessor for CFString(0);
    sub_1ACD1244C(&qword_1EB770670, type metadata accessor for CFString);
    sub_1ACE752B8();
    uint64_t result = sub_1ACE77B78();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_1ACA3AA44(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFD548(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5330);
  char v42 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    id v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *int64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  id v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFD870(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED68);
  char v38 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 16 * v21;
    uint64_t v32 = *(void *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    if ((v38 & 1) == 0) {
      id v34 = v30;
    }
    uint64_t result = sub_1ACE76F58();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 16 * v18;
    *(void *)uint64_t v19 = v32;
    *(unsigned char *)(v19 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFDB58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED60);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    char v30 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((a2 & 1) == 0) {
      id v31 = v29;
    }
    uint64_t result = sub_1ACE76F58();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(unsigned char *)(*(void *)(v7 + 56) + v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFDE20(uint64_t a1, char a2)
{
  return sub_1ACD03B38(a1, a2, &qword_1E99F5158);
}

uint64_t sub_1ACCFDE2C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1ACE750A8();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3D8);
  int v42 = a2;
  uint64_t v8 = sub_1ACE77548();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    char v38 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    int64_t v40 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v39 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    int64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v42)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v7 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v40 = -1 << v37;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v7 + 56);
      uint64_t v25 = v7;
      char v26 = *(unsigned char *)(*(void *)(v7 + 48) + v20);
      uint64_t v27 = v5;
      uint64_t v28 = *(void *)(v5 + 72);
      uint64_t v29 = v24 + v28 * v20;
      if (v42) {
        (*v14)(v43, v29, v44);
      }
      else {
        (*v41)(v43, v29, v44);
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1ACE77B78();
      uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v15 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(unsigned char *)(*(void *)(v9 + 48) + v18) = v26;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v28 * v18, v43, v44);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v27;
      uint64_t v7 = v25;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1ACCFE20C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EC10);
  char v38 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1ACCFE51C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C58);
  uint64_t v6 = (void *)sub_1ACE77548();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v12];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if (a2)
              {
                uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
                if (v24 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v24;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v12 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_30;
                }
                if (v12 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v12];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(v5 + 48) + 72 * v15;
      if (a2)
      {
        long long v20 = *(_OWORD *)(v19 + 16);
        long long v21 = *(_OWORD *)(v19 + 32);
        long long v22 = *(_OWORD *)(v19 + 48);
        uint64_t v26 = *(void *)(v19 + 64);
        v25[3] = v22;
        long long v23 = *(_OWORD *)v19;
        v25[1] = v20;
        void v25[2] = v21;
        v25[0] = v23;
        uint64_t v13 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      }
      else
      {
        sub_1ACA69FEC(v19, (uint64_t)v25);
        uint64_t v13 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
        swift_retain();
      }
      sub_1ACCFB0D0((uint64_t)v25, v13, v6);
    }
  }
  swift_release();
  *uint64_t v3 = v6;
}

uint64_t sub_1ACCFE740(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v10 = a3(0);
  uint64_t v43 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  int64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v44 = a2;
  uint64_t result = sub_1ACE77548();
  uint64_t v15 = result;
  if (*(void *)(v13 + 16))
  {
    int64_t v40 = v8;
    int64_t v16 = 0;
    uint64_t v17 = *(void *)(v13 + 64);
    int v42 = (void *)(v13 + 64);
    uint64_t v18 = 1 << *(unsigned char *)(v13 + 32);
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & v17;
    int64_t v41 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v21 = result + 64;
    while (1)
    {
      if (v20)
      {
        unint64_t v23 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v24 = v23 | (v16 << 6);
      }
      else
      {
        int64_t v25 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v42;
        if (v25 >= v41) {
          goto LABEL_34;
        }
        unint64_t v26 = v42[v25];
        ++v16;
        if (!v26)
        {
          int64_t v16 = v25 + 1;
          if (v25 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v26 = v42[v16];
          if (!v26)
          {
            int64_t v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_34:
              if ((v44 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v8 = v40;
                goto LABEL_41;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v13 + 32);
              if (v38 >= 64) {
                bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v42 = -1 << v38;
              }
              uint64_t v8 = v40;
              *(void *)(v13 + 16) = 0;
              break;
            }
            unint64_t v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v16 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_43;
                }
                if (v16 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v26 = v42[v16];
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v27;
          }
        }
LABEL_21:
        unint64_t v20 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v16 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v13 + 48) + 8 * v24);
      uint64_t v29 = *(void *)(v43 + 72);
      uint64_t v30 = *(void *)(v13 + 56) + v29 * v24;
      if (v44) {
        sub_1ACD124FC(v30, (uint64_t)v12, a5);
      }
      else {
        sub_1ACD12494(v30, (uint64_t)v12, a5);
      }
      uint64_t result = sub_1ACE77B08();
      uint64_t v31 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v21 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v22 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v15 + 48) + 8 * v22) = v28;
      uint64_t result = sub_1ACD124FC((uint64_t)v12, *(void *)(v15 + 56) + v29 * v22, a5);
      ++*(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v8 = v15;
  return result;
}

uint64_t sub_1ACCFEAA8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CC8);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    char v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_1ACE77B08();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFED50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C40);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v32 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v11)
  {
    swift_release();
    uint64_t v3 = v32;
    uint64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_37:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v22 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v33 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1ACE77B78();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v34;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1ACCFF24CLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v13 >= v11) {
            goto LABEL_34;
          }
          unint64_t v23 = *(void *)(v33 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v32;
    if (a2) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFF290(uint64_t a1, char a2)
{
  return sub_1ACCFF29C(a1, a2, &qword_1E99F0B70);
}

uint64_t sub_1ACCFF29C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1ACE77548();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    unint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v33 = -1 << v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
    char v35 = v4;
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), 8 * v36);
              }
              else {
                uint64_t *v10 = v33;
              }
              uint64_t v4 = v35;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void **)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        id v32 = v31;
      }
      uint64_t result = sub_1ACE77B08();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1ACCFF54C(uint64_t a1, char a2)
{
  return sub_1ACCFF558(a1, a2, &qword_1E99F0C38);
}

uint64_t sub_1ACCFF558(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1ACE77548();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    unint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1ACE77B08();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1ACCFF80C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1ACE75118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C30);
  int v46 = a2;
  uint64_t v10 = sub_1ACE77548();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1ACD1244C((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1ACE760E8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1ACCFFC30(uint64_t a1, int a2)
{
  return sub_1ACD04194(a1, a2, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel, &qword_1E99F5140, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
}

uint64_t sub_1ACCFFC64(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5148);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACCFFF40(uint64_t a1, char a2)
{
  return sub_1ACD03B38(a1, a2, &qword_1E99F0C28);
}

uint64_t sub_1ACCFFF4C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C20);
  char v37 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v12 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v35)
  {
    swift_release();
    int64_t v22 = (void *)(v5 + 64);
    if (v37)
    {
LABEL_37:
      uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
      if (v33 >= 64) {
        bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v22 = -1 << v33;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v12;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v12 = v21 + 1;
    if (v21 + 1 >= v35) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v36 + 8 * v12);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      if ((v37 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_1ACE77B78();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
        if (v28 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
LABEL_8:
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
          unint64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
          *unint64_t v18 = v31;
          v18[1] = v32;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1ACD0045CLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v35)
    {
      unint64_t v23 = *(void *)(v36 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v12 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v35) {
            goto LABEL_34;
          }
          unint64_t v23 = *(void *)(v36 + 8 * v12);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v24;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    if (v37) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD004A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C18);
  char v40 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v21);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      uint64_t v35 = v32[3];
      uint64_t v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      uint64_t result = sub_1ACE77B78();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 32 * v17);
      *unint64_t v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      _OWORD v19[3] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD007CC(uint64_t a1, char a2)
{
  return sub_1ACD02188(a1, a2, &qword_1E99F5118);
}

uint64_t sub_1ACD007D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5110);
  char v38 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v32 = *(void *)v31;
    long long v39 = *(_OWORD *)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 24);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v34 = v30;
    }
    uint64_t result = sub_1ACE76F58();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v18;
    *(void *)uint64_t v19 = v32;
    *(_OWORD *)(v19 + 8) = v39;
    *(void *)(v19 + 24) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD00AE4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1ACE77548();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v33 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v32 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v21 >= v32) {
          goto LABEL_33;
        }
        unint64_t v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v22 = v33[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v22 = v33[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v6 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v6 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v8 + 48) + v18) = v29;
      *(void *)(*(void *)(v8 + 56) + v18) = v30;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1ACD00DBC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C10);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE77B28();
      uint64_t result = sub_1ACE77B78();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD01098(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    id v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1ACA3AA44(v24, v35);
      }
      else
      {
        sub_1ACA33128((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      uint64_t result = sub_1ACE77B78();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1ACA3AA44(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD01398(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  char v52 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTMLRequest();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C08);
  int v58 = a2;
  uint64_t v14 = sub_1ACE77548();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_45;
  }
  int64_t v47 = v2;
  char v16 = *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v49 = (void *)(v13 + 64);
  uint64_t v18 = 1 << v16;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v17;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  unint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  char v50 = (void (**)(char *, uint64_t))(v5 + 8);
  objc_super v51 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v21 = v14 + 64;
  swift_retain();
  int64_t v22 = 0;
  uint64_t v54 = v13;
LABEL_9:
  if (v20)
  {
    unint64_t v28 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v29 = v28 | (v22 << 6);
    goto LABEL_31;
  }
  int64_t v30 = v22 + 1;
  if (__OFADD__(v22, 1)) {
    goto LABEL_46;
  }
  if (v30 >= v48)
  {
    swift_release();
    uint64_t v3 = v47;
    uint64_t v31 = v49;
    if (v58)
    {
LABEL_41:
      uint64_t v44 = 1 << *(unsigned char *)(v13 + 32);
      if (v44 >= 64) {
        bzero(v31, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v31 = -1 << v44;
      }
      *(void *)(v13 + 16) = 0;
    }
  }
  else
  {
    uint64_t v31 = v49;
    unint64_t v32 = v49[v30];
    ++v22;
    if (v32) {
      goto LABEL_30;
    }
    int64_t v22 = v30 + 1;
    if (v30 + 1 >= v48) {
      goto LABEL_38;
    }
    unint64_t v32 = v49[v22];
    if (v32)
    {
LABEL_30:
      unint64_t v20 = (v32 - 1) & v32;
      unint64_t v29 = __clz(__rbit64(v32)) + (v22 << 6);
LABEL_31:
      uint64_t v38 = *(void *)(v56 + 72);
      uint64_t v39 = *(void *)(v13 + 48) + v38 * v29;
      if (v58)
      {
        sub_1ACD124FC(v39, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
        uint64_t v59 = *(void *)(*(void *)(v13 + 56) + 8 * v29);
      }
      else
      {
        sub_1ACD12494(v39, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
        uint64_t v59 = *(void *)(*(void *)(v13 + 56) + 8 * v29);
        swift_retain();
      }
      uint64_t v40 = v55;
      sub_1ACE77B18();
      sub_1ACA615AC((uint64_t)v12, (uint64_t)v9);
      if ((*v53)(v9, 1, v40) == 1)
      {
        sub_1ACE77B38();
      }
      else
      {
        uint64_t v41 = v9;
        int v42 = v52;
        (*v51)(v52, v41, v40);
        sub_1ACE77B38();
        sub_1ACD1244C(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
        sub_1ACE760F8();
        uint64_t v43 = v42;
        uint64_t v9 = v41;
        (*v50)(v43, v40);
      }
      sub_1ACE77B48();
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_1ACE77B78();
      uint64_t v24 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      uint64_t v13 = v54;
      if (((-1 << v25) & ~*(void *)(v21 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v21 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v35 || (v34 & 1) == 0)
      {
        BOOL v36 = v26 == v35;
        if (v26 == v35) {
          unint64_t v26 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v21 + 8 * v26);
        if (v37 != -1)
        {
          unint64_t v27 = __clz(__rbit64(~v37)) + (v26 << 6);
LABEL_8:
          *(void *)(v21 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
          sub_1ACD124FC((uint64_t)v12, *(void *)(v15 + 48) + v38 * v27, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
          *(void *)(*(void *)(v15 + 56) + 8 * v27) = v59;
          ++*(void *)(v15 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      JUMPOUT(0x1ACD01A6CLL);
    }
    int64_t v33 = v30 + 2;
    if (v33 < v48)
    {
      unint64_t v32 = v49[v33];
      if (!v32)
      {
        while (1)
        {
          int64_t v22 = v33 + 1;
          if (__OFADD__(v33, 1)) {
            goto LABEL_47;
          }
          if (v22 >= v48) {
            goto LABEL_38;
          }
          unint64_t v32 = v49[v22];
          ++v33;
          if (v32) {
            goto LABEL_30;
          }
        }
      }
      int64_t v22 = v33;
      goto LABEL_30;
    }
LABEL_38:
    swift_release();
    uint64_t v3 = v47;
    if (v58) {
      goto LABEL_41;
    }
  }
LABEL_45:
  uint64_t result = swift_release();
  *uint64_t v3 = v15;
  return result;
}

uint64_t sub_1ACD01A90(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  char v52 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C00);
  int v58 = a2;
  uint64_t v14 = sub_1ACE77548();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_45;
  }
  int64_t v47 = v2;
  char v16 = *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v49 = (void *)(v13 + 64);
  uint64_t v18 = 1 << v16;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v17;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  unint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  char v50 = (void (**)(char *, uint64_t))(v5 + 8);
  objc_super v51 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v21 = v14 + 64;
  swift_retain();
  int64_t v22 = 0;
  uint64_t v54 = v13;
LABEL_9:
  if (v20)
  {
    unint64_t v28 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v29 = v28 | (v22 << 6);
    goto LABEL_31;
  }
  int64_t v30 = v22 + 1;
  if (__OFADD__(v22, 1)) {
    goto LABEL_46;
  }
  if (v30 >= v48)
  {
    swift_release();
    uint64_t v3 = v47;
    uint64_t v31 = v49;
    if (v58)
    {
LABEL_41:
      uint64_t v44 = 1 << *(unsigned char *)(v13 + 32);
      if (v44 >= 64) {
        bzero(v31, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v31 = -1 << v44;
      }
      *(void *)(v13 + 16) = 0;
    }
  }
  else
  {
    uint64_t v31 = v49;
    unint64_t v32 = v49[v30];
    ++v22;
    if (v32) {
      goto LABEL_30;
    }
    int64_t v22 = v30 + 1;
    if (v30 + 1 >= v48) {
      goto LABEL_38;
    }
    unint64_t v32 = v49[v22];
    if (v32)
    {
LABEL_30:
      unint64_t v20 = (v32 - 1) & v32;
      unint64_t v29 = __clz(__rbit64(v32)) + (v22 << 6);
LABEL_31:
      uint64_t v38 = *(void *)(v56 + 72);
      uint64_t v39 = *(void *)(v13 + 48) + v38 * v29;
      if (v58)
      {
        sub_1ACD124FC(v39, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
        uint64_t v59 = *(void *)(*(void *)(v13 + 56) + 8 * v29);
      }
      else
      {
        sub_1ACD12494(v39, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
        uint64_t v59 = *(void *)(*(void *)(v13 + 56) + 8 * v29);
        swift_retain();
      }
      uint64_t v40 = v55;
      sub_1ACE77B18();
      sub_1ACA615AC((uint64_t)v12, (uint64_t)v9);
      if ((*v53)(v9, 1, v40) == 1)
      {
        sub_1ACE77B38();
      }
      else
      {
        uint64_t v41 = v9;
        int v42 = v52;
        (*v51)(v52, v41, v40);
        sub_1ACE77B38();
        sub_1ACD1244C(&qword_1E99F1C88, MEMORY[0x1E4F276F0]);
        sub_1ACE760F8();
        uint64_t v43 = v42;
        uint64_t v9 = v41;
        (*v50)(v43, v40);
      }
      sub_1ACE77B48();
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      sub_1ACE76108();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_1ACE77B78();
      uint64_t v24 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      uint64_t v13 = v54;
      if (((-1 << v25) & ~*(void *)(v21 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v21 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v35 || (v34 & 1) == 0)
      {
        BOOL v36 = v26 == v35;
        if (v26 == v35) {
          unint64_t v26 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v21 + 8 * v26);
        if (v37 != -1)
        {
          unint64_t v27 = __clz(__rbit64(~v37)) + (v26 << 6);
LABEL_8:
          *(void *)(v21 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
          sub_1ACD124FC((uint64_t)v12, *(void *)(v15 + 48) + v38 * v27, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
          *(void *)(*(void *)(v15 + 56) + 8 * v27) = v59;
          ++*(void *)(v15 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      JUMPOUT(0x1ACD02164);
    }
    int64_t v33 = v30 + 2;
    if (v33 < v48)
    {
      unint64_t v32 = v49[v33];
      if (!v32)
      {
        while (1)
        {
          int64_t v22 = v33 + 1;
          if (__OFADD__(v33, 1)) {
            goto LABEL_47;
          }
          if (v22 >= v48) {
            goto LABEL_38;
          }
          unint64_t v32 = v49[v22];
          ++v33;
          if (v32) {
            goto LABEL_30;
          }
        }
      }
      int64_t v22 = v33;
      goto LABEL_30;
    }
LABEL_38:
    swift_release();
    uint64_t v3 = v47;
    if (v58) {
      goto LABEL_41;
    }
  }
LABEL_45:
  uint64_t result = swift_release();
  *uint64_t v3 = v15;
  return result;
}

uint64_t sub_1ACD02188(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_1ACE77548();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  BOOL v36 = v3;
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    uint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    unint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1ACE76F58();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  uint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_1ACD0245C(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769028);
  char v46 = a2;
  int64_t v47 = (void *)sub_1ACE77548();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v44 = (void *)(v4 + 64);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v43 = (unint64_t)(v5 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v9 = 0;
    uint64_t v45 = v4;
    while (1)
    {
      if (v7)
      {
        uint64_t v48 = (v7 - 1) & v7;
        int64_t v49 = v9;
        unint64_t v15 = __clz(__rbit64(v7)) | (v9 << 6);
      }
      else
      {
        int64_t v16 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v43) {
          goto LABEL_23;
        }
        unint64_t v17 = v44[v16];
        int64_t v18 = v9 + 1;
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          if (v9 + 2 >= v43) {
            goto LABEL_23;
          }
          unint64_t v17 = v44[v18];
          if (!v17)
          {
            uint64_t v19 = v9 + 3;
            if (v9 + 3 >= v43)
            {
LABEL_23:
              swift_release();
              if (v46)
              {
                uint64_t v41 = 1 << *(unsigned char *)(v4 + 32);
                if (v41 > 63) {
                  bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v44 = -1 << v41;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v44[v19];
            if (!v17)
            {
              while (1)
              {
                int64_t v18 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_30;
                }
                if (v18 >= v43) {
                  goto LABEL_23;
                }
                unint64_t v17 = v44[v18];
                ++v19;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v18 = v9 + 3;
          }
        }
LABEL_20:
        uint64_t v48 = (v17 - 1) & v17;
        int64_t v49 = v18;
        unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      uint64_t v20 = *(void *)(v4 + 56);
      uint64_t v21 = *(void *)(v4 + 48) + 96 * v15;
      uint64_t v22 = *(void *)v21;
      char v23 = *(unsigned char *)(v21 + 8);
      char v24 = *(unsigned char *)(v21 + 9);
      char v25 = *(unsigned char *)(v21 + 10);
      char v26 = *(unsigned char *)(v21 + 11);
      char v27 = *(unsigned char *)(v21 + 12);
      char v28 = *(unsigned char *)(v21 + 13);
      uint64_t v30 = *(void *)(v21 + 16);
      uint64_t v29 = *(void *)(v21 + 24);
      uint64_t v31 = *(void *)(v21 + 32);
      char v32 = *(unsigned char *)(v21 + 40);
      uint64_t v33 = *(void *)(v21 + 48);
      uint64_t v34 = *(void *)(v21 + 56);
      int v35 = *(unsigned __int16 *)(v21 + 88) | (*(unsigned __int8 *)(v21 + 90) << 16);
      uint64_t v36 = *(void *)(v21 + 64);
      uint64_t v37 = *(void *)(v21 + 72);
      uint64_t v38 = *(void *)(v21 + 80);
      uint64_t v39 = *(void *)(v20 + 8 * v15);
      char v59 = v28;
      if ((v46 & 1) == 0)
      {
        char v40 = *(unsigned char *)(v21 + 12);
        char v58 = *(unsigned char *)(v21 + 11);
        char v57 = *(unsigned char *)(v21 + 10);
        char v56 = *(unsigned char *)(v21 + 9);
        char v54 = *(unsigned char *)(v21 + 8);
        swift_bridgeObjectRetain();
        sub_1ACA3A9E8(v33, v34, v36, v37, v38);
        swift_bridgeObjectRetain();
        char v23 = v54;
        char v24 = v56;
        char v25 = v57;
        char v26 = v58;
        char v28 = v59;
        char v27 = v40;
      }
      char v50 = v27;
      uint64_t v61 = v22;
      char v62 = v23;
      char v63 = v24;
      char v64 = v25;
      char v65 = v26;
      char v66 = v27;
      char v67 = v28;
      uint64_t v68 = v30;
      uint64_t v69 = v29;
      uint64_t v70 = v31;
      char v71 = v32;
      uint64_t v72 = v33;
      uint64_t v73 = v34;
      uint64_t v74 = v36;
      uint64_t v75 = v37;
      uint64_t v76 = v38;
      char v78 = BYTE2(v35);
      __int16 v77 = v35;
      uint64_t v53 = v37;
      uint64_t v55 = v38;
      char v10 = v26;
      uint64_t v51 = v33;
      uint64_t v52 = v34;
      char v11 = v25;
      char v12 = v24;
      char v13 = v23;
      sub_1ACE77B18();
      EpisodeStateModel.hash(into:)((uint64_t)v60);
      sub_1ACE77B78();
      unint64_t result = sub_1ACE77118();
      *(void *)((char *)v47 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v14 = v47[6] + 96 * result;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v13;
      *(unsigned char *)(v14 + 9) = v12;
      *(unsigned char *)(v14 + 10) = v11;
      *(unsigned char *)(v14 + 11) = v10;
      *(unsigned char *)(v14 + 12) = v50;
      *(unsigned char *)(v14 + 13) = v59;
      *(void *)(v14 + 16) = v30;
      *(void *)(v14 + 24) = v29;
      *(void *)(v14 + 32) = v31;
      *(unsigned char *)(v14 + 40) = v32;
      *(void *)(v14 + 48) = v51;
      *(void *)(v14 + 56) = v52;
      *(void *)(v14 + 64) = v36;
      *(void *)(v14 + 72) = v53;
      *(void *)(v14 + 80) = v55;
      *(unsigned char *)(v14 + 90) = BYTE2(v35);
      *(_WORD *)(v14 + 88) = v35;
      *(void *)(v47[7] + 8 * result) = v39;
      ++v47[2];
      uint64_t v4 = v45;
      unint64_t v7 = v48;
      int64_t v9 = v49;
    }
  }
  unint64_t result = swift_release();
  void *v42 = v47;
  return result;
}

uint64_t sub_1ACD02868(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = sub_1ACE74898();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  unint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BA8);
  int v40 = a2;
  uint64_t result = sub_1ACE77548();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    int64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = sub_1ACE77B08();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1ACD02C10(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1ACE74898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BB0);
  int v42 = a2;
  uint64_t v10 = sub_1ACE77548();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    int64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    int v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_1ACD1244C(&qword_1E99F0F90, MEMORY[0x1E4F26C48]);
      uint64_t result = sub_1ACE760E8();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1ACD03034(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1ACE77548();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_1ACE77B08();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_1ACD032E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772298);
  uint64_t v6 = (void *)sub_1ACE77548();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1ACCFB1C0(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1ACD034CC(uint64_t a1, char a2)
{
  return sub_1ACD03B38(a1, a2, &qword_1E99F0C48);
}

uint64_t sub_1ACD034D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769030);
  char v38 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    char v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v36) {
              goto LABEL_36;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = *(void *)(v5 + 48) + 24 * v17;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    int v25 = *(unsigned __int8 *)(v22 + 16);
    uint64_t v26 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    if ((v38 & 1) == 0)
    {
      sub_1ACA72530(*(void *)v22, *(void *)(v22 + 8), *(unsigned char *)(v22 + 16));
      swift_retain();
    }
    sub_1ACE77B18();
    sub_1ACE77B28();
    if (v25) {
      sub_1ACE76108();
    }
    else {
      sub_1ACE77B58();
    }
    uint64_t result = sub_1ACE77B78();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v23;
    *(unsigned char *)(v15 + 16) = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v26;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  char v19 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1ACD0382C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BF0);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = (void *)v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v48 = v2;
    int64_t v49 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    unint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v29 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v30 = v29 | (v14 << 6);
      }
      else
      {
        int64_t v31 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v31 >= v11) {
          goto LABEL_24;
        }
        unint64_t v32 = v49[v31];
        ++v14;
        if (!v32)
        {
          int64_t v14 = v31 + 1;
          if (v31 + 1 >= v11) {
            goto LABEL_24;
          }
          unint64_t v32 = v49[v14];
          if (!v32)
          {
            int64_t v33 = v31 + 2;
            if (v33 >= v11)
            {
LABEL_24:
              swift_release();
              if ((a2 & 1) == 0)
              {
                unint64_t result = swift_release();
                uint64_t v3 = v48;
                goto LABEL_31;
              }
              uint64_t v47 = 1 << *(unsigned char *)(v5 + 32);
              if (v47 >= 64) {
                bzero(v49, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v49 = -1 << v47;
              }
              uint64_t v3 = v48;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v32 = v49[v33];
            if (!v32)
            {
              while (1)
              {
                int64_t v14 = v33 + 1;
                if (__OFADD__(v33, 1)) {
                  goto LABEL_33;
                }
                if (v14 >= v11) {
                  goto LABEL_24;
                }
                unint64_t v32 = v49[v14];
                ++v33;
                if (v32) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v33;
          }
        }
LABEL_21:
        unint64_t v10 = (v32 - 1) & v32;
        unint64_t v30 = __clz(__rbit64(v32)) + (v14 << 6);
      }
      uint64_t v34 = (long long *)(*(void *)(v5 + 48) + (v30 << 8));
      if (a2)
      {
        long long v35 = *v34;
        long long v36 = v34[1];
        long long v37 = v34[2];
        long long v53 = v34[3];
        long long v38 = v34[4];
        long long v39 = v34[5];
        long long v40 = v34[7];
        long long v56 = v34[6];
        long long v57 = v40;
        long long v54 = v38;
        long long v55 = v39;
        long long v41 = v34[8];
        long long v42 = v34[9];
        long long v43 = v34[11];
        long long v60 = v34[10];
        long long v61 = v43;
        long long v58 = v41;
        long long v59 = v42;
        long long v44 = v34[12];
        long long v45 = v34[13];
        long long v46 = v34[15];
        long long v64 = v34[14];
        long long v65 = v46;
        long long v62 = v44;
        long long v63 = v45;
        long long v51 = v36;
        long long v52 = v37;
        long long v50 = v35;
        uint64_t v15 = *(void *)(*(void *)(v5 + 56) + 8 * v30);
      }
      else
      {
        sub_1ACA69E2C((uint64_t)v34, (uint64_t)&v50);
        uint64_t v15 = *(void *)(*(void *)(v5 + 56) + 8 * v30);
        swift_retain();
      }
      sub_1ACE77B18();
      ArtworkRequest.hash(into:)();
      sub_1ACE77B78();
      unint64_t result = sub_1ACE77118();
      *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      unint64_t v16 = (_OWORD *)(v7[6] + (result << 8));
      long long v17 = v53;
      long long v19 = v50;
      long long v18 = v51;
      void v16[2] = v52;
      void v16[3] = v17;
      *unint64_t v16 = v19;
      v16[1] = v18;
      long long v20 = v57;
      long long v22 = v54;
      long long v21 = v55;
      v16[6] = v56;
      v16[7] = v20;
      v16[4] = v22;
      v16[5] = v21;
      long long v23 = v61;
      long long v25 = v58;
      long long v24 = v59;
      v16[10] = v60;
      v16[11] = v23;
      v16[8] = v25;
      v16[9] = v24;
      long long v26 = v62;
      long long v27 = v63;
      long long v28 = v65;
      v16[14] = v64;
      v16[15] = v28;
      void v16[12] = v26;
      v16[13] = v27;
      *(void *)(v7[7] + 8 * result) = v15;
      ++v7[2];
    }
  }
  unint64_t result = swift_release();
LABEL_31:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD03B38(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_1ACE77548();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    long long v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *long long v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  long long v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1ACD03E4C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_1ACE77548();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    long long v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *long long v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  long long v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1ACD04160(uint64_t a1, int a2)
{
  return sub_1ACD04194(a1, a2, (uint64_t (*)(void))type metadata accessor for EpisodePlayState, &qword_1E99F5100, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
}

uint64_t sub_1ACD04194(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v10 = a3(0);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v43 = a2;
  uint64_t result = sub_1ACE77548();
  uint64_t v15 = result;
  if (*(void *)(v13 + 16))
  {
    int64_t v16 = 0;
    uint64_t v17 = *(void *)(v13 + 64);
    long long v41 = (void *)(v13 + 64);
    uint64_t v18 = 1 << *(unsigned char *)(v13 + 32);
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & v17;
    long long v39 = v5;
    int64_t v40 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v21 = result + 64;
    while (1)
    {
      if (v20)
      {
        unint64_t v23 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v24 = v23 | (v16 << 6);
      }
      else
      {
        int64_t v25 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v25 >= v40) {
          goto LABEL_34;
        }
        unint64_t v26 = v41[v25];
        ++v16;
        if (!v26)
        {
          int64_t v16 = v25 + 1;
          if (v25 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v26 = v41[v16];
          if (!v26)
          {
            int64_t v27 = v25 + 2;
            if (v27 >= v40)
            {
LABEL_34:
              if ((v43 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v8 = v39;
                goto LABEL_41;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v13 + 32);
              if (v38 >= 64) {
                bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v41 = -1 << v38;
              }
              uint64_t v8 = v39;
              *(void *)(v13 + 16) = 0;
              break;
            }
            unint64_t v26 = v41[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v16 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_43;
                }
                if (v16 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v26 = v41[v16];
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v27;
          }
        }
LABEL_21:
        unint64_t v20 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v16 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v13 + 48) + 8 * v24);
      uint64_t v29 = *(void *)(v42 + 72);
      uint64_t v30 = *(void *)(v13 + 56) + v29 * v24;
      if (v43) {
        sub_1ACD124FC(v30, (uint64_t)v12, a5);
      }
      else {
        sub_1ACD12494(v30, (uint64_t)v12, a5);
      }
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v31 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v21 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v22 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v15 + 48) + 8 * v22) = v28;
      uint64_t result = sub_1ACD124FC((uint64_t)v12, *(void *)(v15 + 56) + v29 * v22, a5);
      ++*(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v8 = v15;
  return result;
}

uint64_t sub_1ACD0450C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2368);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
      sub_1ACE77B18();
      sub_1ACE77B58();
      uint64_t result = sub_1ACE77B78();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v7 + 48) + 8 * v14) = v20;
      *(unsigned char *)(*(void *)(v7 + 56) + v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD047D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3E0);
  char v37 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    char v30 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1ACE77B78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
    unint64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD04AF4(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8D0);
  char v33 = a2;
  uint64_t result = sub_1ACE77548();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v32 = (void *)(v4 + 64);
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v18 = v17 | (v7 << 6);
      }
      else
      {
        int64_t v19 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v4 + 64;
        if (v19 >= v31) {
          goto LABEL_33;
        }
        unint64_t v20 = v32[v19];
        ++v7;
        if (!v20)
        {
          int64_t v7 = v19 + 1;
          if (v19 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v20 = v32[v7];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v31)
            {
LABEL_33:
              if (v33)
              {
                uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
                if (v30 >= 64) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v32[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v7 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v7 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v20 = v32[v7];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v7 = v21;
          }
        }
LABEL_30:
        unint64_t v10 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v7 << 6);
      }
      unint64_t v26 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v18);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      uint64_t v29 = *(void *)(*(void *)(v4 + 56) + 8 * v18);
      if ((v33 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1ACE77B18();
      sub_1ACE76108();
      uint64_t result = sub_1ACE77B78();
      uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v13 = result & ~v12;
      unint64_t v14 = v13 >> 6;
      if (((-1 << v13) & ~*(void *)(v11 + 8 * (v13 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v11 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v12) >> 6;
        do
        {
          if (++v14 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v24 = v14 == v23;
          if (v14 == v23) {
            unint64_t v14 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v14);
        }
        while (v25 == -1);
        unint64_t v15 = __clz(__rbit64(~v25)) + (v14 << 6);
      }
      *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v6 + 48) + 16 * v15);
      *unint64_t v16 = v28;
      v16[1] = v27;
      *(void *)(*(void *)(v6 + 56) + 8 * v15) = v29;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_1ACD04DE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B90);
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    int64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1ACE76F58();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD050C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B98);
  char v36 = a2;
  uint64_t v6 = sub_1ACE77548();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1ACE77B18();
    sub_1ACE76108();
    uint64_t result = sub_1ACE77B78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1ACD053D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E410);
  uint64_t result = sub_1ACE77548();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = v3;
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v29;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_1ACE77B08();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

id sub_1ACD05690()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD05834()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD059E4()
{
  return sub_1ACD077DC(&qword_1E99F0F70);
}

void *sub_1ACD059F0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    int64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *int64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD05B9C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD05D40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    uint64_t v24 = v19[4];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    unint64_t v25 = (uint64_t *)(*(void *)(v4 + 56) + v18);
    *unint64_t v25 = v20;
    v25[1] = v21;
    void v25[2] = v22;
    v25[3] = v23;
    _OWORD v25[4] = v24;
    id result = (void *)sub_1ACA50D88(v20, v21, v22);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD05F04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769038);
  uint64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1ACE77538();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v29 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v30 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v11) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v7;
    if (!v27)
    {
      int64_t v7 = v26 + 1;
      if (v26 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v7);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v13 = __clz(__rbit64(v27)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v13;
    uint64_t v15 = *(void *)(v1 + 56);
    uint64_t v16 = (void *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v17 = v16[1];
    uint64_t v18 = 40 * v13;
    uint64_t v19 = *(void *)(v15 + v18);
    uint64_t v20 = *(void *)(v15 + v18 + 8);
    unint64_t v21 = *(void *)(v15 + v18 + 16);
    uint64_t v22 = *(void *)(v15 + v18 + 24);
    uint64_t v23 = *(void *)(v15 + v18 + 32);
    uint64_t v24 = (void *)(*(void *)(v3 + 48) + v14);
    void *v24 = *v16;
    v24[1] = v17;
    unint64_t v25 = (uint64_t *)(*(void *)(v3 + 56) + v18);
    *unint64_t v25 = v19;
    v25[1] = v20;
    void v25[2] = v21;
    v25[3] = v22;
    _OWORD v25[4] = v23;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1ACA50D88(v19, v20, v21);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v11) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v7 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v7);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD06108()
{
  return sub_1ACD09C04(&qword_1E99F0BE0);
}

void *sub_1ACD06114()
{
  return sub_1ACD09C04(&qword_1E99F0BD8);
}

void *sub_1ACD06120()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1ACA6A09C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1ACA33128(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1ACA3AA44(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD06308()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5160);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD06498()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1ACA33128(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1ACA3AA44(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD06660()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5330);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD0681C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v19) = *(unsigned char *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v21 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v21 = v20;
    *(unsigned char *)(v21 + 8) = v19;
    id result = v17;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD069D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76ED60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    char v17 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = v16;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v17;
    id result = v16;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD06B78()
{
  return sub_1ACD09A30(&qword_1E99F5158);
}

void *sub_1ACD06B84()
{
  uint64_t v1 = sub_1ACE750A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3D8);
  int64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1ACE77538();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1ACD06E10()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EC10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD06FC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 72 * v15;
    sub_1ACA69FEC(*(void *)(v2 + 48) + 72 * v15, (uint64_t)v26);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    uint64_t v19 = *(void *)(v4 + 48) + v17;
    long long v20 = v26[3];
    long long v21 = v26[2];
    long long v22 = v26[1];
    *(void *)(v19 + 64) = v27;
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v20;
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)uint64_t v19 = v26[0];
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD071B0()
{
  return sub_1ACD0834C(&qword_1EB76E400);
}

void *sub_1ACD071BC()
{
  return sub_1ACD07230(type metadata accessor for StoreFeedUpdater.Update, &qword_1E99F50E8, type metadata accessor for StoreFeedUpdater.Update);
}

void *sub_1ACD071F0()
{
  return sub_1ACD07984(&qword_1EB76E408);
}

void *sub_1ACD071FC()
{
  return sub_1ACD07230(type metadata accessor for StoreFeedUpdater.Retry, &qword_1E99F50F0, type metadata accessor for StoreFeedUpdater.Retry);
}

void *sub_1ACD07230(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v3;
  uint64_t v11 = sub_1ACE77538();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  uint64_t v30 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v31 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v16);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 8 * v22;
    uint64_t v24 = *(void *)(*(void *)(v10 + 48) + 8 * v22);
    unint64_t v25 = *(void *)(v32 + 72) * v22;
    sub_1ACD12494(*(void *)(v10 + 56) + v25, (uint64_t)v9, a3);
    *(void *)(*(void *)(v12 + 48) + v23) = v24;
    id result = (void *)sub_1ACD124FC((uint64_t)v9, *(void *)(v12 + 56) + v25, a3);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v16 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v16);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACD07498()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771CC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD07628()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD077D0()
{
  return sub_1ACD077DC(&qword_1E99F0B70);
}

id sub_1ACD077DC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77538();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD07978()
{
  return sub_1ACD07984(&qword_1E99F0C38);
}

void *sub_1ACD07984(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77538();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD07B20()
{
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C30);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1ACE77538();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1ACD07DB8()
{
  return sub_1ACD09DE8((uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel, &qword_1E99F5140, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
}

void *sub_1ACD07DEC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5148);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD07F90()
{
  return sub_1ACD09A30(&qword_1E99F0C28);
}

void *sub_1ACD07F9C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    int64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    uint64_t v25 = v21[3];
    uint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v26 = v19;
    v26[1] = v18;
    uint64_t v27 = (void *)(*(void *)(v4 + 56) + v20);
    *uint64_t v27 = v22;
    v27[1] = v23;
    id v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD08174()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5110);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 24);
    long long v22 = *(_OWORD *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(_OWORD *)(v23 + 8) = v22;
    *(void *)(v23 + 24) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v17;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0834C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77538();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD084E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0C10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0868C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1ACA33128(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_1ACA3AA44(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACD08874()
{
  return sub_1ACD088DC((uint64_t (*)(void))type metadata accessor for TTMLRequest, &qword_1E99F0C08, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

void *sub_1ACD088A8()
{
  return sub_1ACD088DC((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, &qword_1E99F0C00, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

void *sub_1ACD088DC(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v3;
  uint64_t v11 = sub_1ACE77538();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  int64_t v30 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v31 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v16);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_12:
    unint64_t v23 = *(void *)(v32 + 72) * v22;
    sub_1ACD12494(*(void *)(v10 + 48) + v23, (uint64_t)v9, a3);
    uint64_t v24 = 8 * v22;
    uint64_t v25 = *(void *)(*(void *)(v10 + 56) + 8 * v22);
    sub_1ACD124FC((uint64_t)v9, *(void *)(v12 + 48) + v23, a3);
    *(void *)(*(void *)(v12 + 56) + v24) = v25;
    id result = (void *)swift_retain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v16 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v16);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACD08B50()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769068);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD08CFC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769028);
  uint64_t v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1ACE77538();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v37 = v3;
    id result = (void *)swift_release();
    *uint64_t v38 = v37;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v41 = v3;
  if (v6)
  {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v41;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v40 = v1 + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v3 = v41;
      goto LABEL_12;
    }
    int64_t v34 = v7 + 1;
    uint64_t v3 = v41;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v39) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v34);
    ++v7;
    if (!v35)
    {
      int64_t v7 = v34 + 1;
      if (v34 + 1 >= v39) {
        goto LABEL_26;
      }
      unint64_t v35 = *(void *)(v40 + 8 * v7);
      if (!v35) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v35 - 1) & v35;
    unint64_t v12 = __clz(__rbit64(v35)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 96 * v12;
    uint64_t v14 = *(void *)(v1 + 48) + 96 * v12;
    char v15 = *(unsigned char *)(v14 + 8);
    char v16 = *(unsigned char *)(v14 + 9);
    char v17 = *(unsigned char *)(v14 + 10);
    char v18 = *(unsigned char *)(v14 + 11);
    char v19 = *(unsigned char *)(v14 + 12);
    char v20 = *(unsigned char *)(v14 + 13);
    uint64_t v21 = *(void *)(v14 + 32);
    char v22 = *(unsigned char *)(v14 + 40);
    uint64_t v23 = *(void *)(v14 + 48);
    uint64_t v24 = *(void *)(v14 + 56);
    uint64_t v25 = *(void *)(v14 + 64);
    uint64_t v26 = *(void *)(v14 + 72);
    uint64_t v27 = *(void *)(v14 + 80);
    char v28 = *(unsigned char *)(v14 + 90);
    __int16 v29 = *(_WORD *)(v14 + 88);
    uint64_t v30 = 8 * v12;
    uint64_t v31 = *(void *)(*(void *)(v1 + 56) + v30);
    uint64_t v32 = *(void *)(v3 + 48) + v13;
    long long v33 = *(_OWORD *)(v14 + 16);
    *(void *)uint64_t v32 = *(void *)v14;
    *(unsigned char *)(v32 + 8) = v15;
    *(unsigned char *)(v32 + 9) = v16;
    *(unsigned char *)(v32 + 10) = v17;
    *(unsigned char *)(v32 + 11) = v18;
    *(unsigned char *)(v32 + 12) = v19;
    *(unsigned char *)(v32 + 13) = v20;
    *(_OWORD *)(v32 + 16) = v33;
    *(void *)(v32 + 32) = v21;
    *(unsigned char *)(v32 + 40) = v22;
    *(void *)(v32 + 48) = v23;
    *(void *)(v32 + 56) = v24;
    *(void *)(v32 + 64) = v25;
    *(void *)(v32 + 72) = v26;
    *(void *)(v32 + 80) = v27;
    *(unsigned char *)(v32 + 90) = v28;
    *(_WORD *)(v32 + 88) = v29;
    *(void *)(*(void *)(v3 + 56) + v30) = v31;
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v23, v24, v25, v26, v27);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v36 = v34 + 2;
  if (v36 >= v39) {
    goto LABEL_26;
  }
  unint64_t v35 = *(void *)(v40 + 8 * v36);
  if (v35)
  {
    int64_t v7 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v7 >= v39) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v7);
    ++v36;
    if (v35) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD08F7C()
{
  uint64_t v1 = sub_1ACE74898();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BA8);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1ACE77538();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1ACD0920C()
{
  uint64_t v1 = sub_1ACE74898();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BB0);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1ACE77538();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1ACD094A0()
{
  return sub_1ACD0834C(&qword_1EB771940);
}

void *sub_1ACD094AC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772298);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD09650()
{
  return sub_1ACD09A30(&qword_1E99F0C48);
}

void *sub_1ACD0965C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769030);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(unsigned char *)(v23 + 16) = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    sub_1ACA72530(v18, v19, v20);
    id result = (void *)swift_retain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD09820()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0BF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    sub_1ACA69E2C(*(void *)(v2 + 48) + (v15 << 8), (uint64_t)v33);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = (_OWORD *)(*(void *)(v4 + 48) + (v15 << 8));
    long long v18 = v33[15];
    long long v20 = v33[12];
    long long v19 = v33[13];
    v17[14] = v33[14];
    v17[15] = v18;
    void v17[12] = v20;
    v17[13] = v19;
    long long v21 = v33[11];
    long long v23 = v33[8];
    long long v22 = v33[9];
    v17[10] = v33[10];
    v17[11] = v21;
    v17[8] = v23;
    v17[9] = v22;
    long long v24 = v33[7];
    long long v26 = v33[4];
    long long v25 = v33[5];
    v17[6] = v33[6];
    v17[7] = v24;
    v17[4] = v26;
    v17[5] = v25;
    long long v27 = v33[0];
    long long v28 = v33[1];
    long long v29 = v33[3];
    _OWORD v17[2] = v33[2];
    void v17[3] = v29;
    *uint64_t v17 = v27;
    v17[1] = v28;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v13) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD09A24()
{
  return sub_1ACD09A30(&qword_1E99F50D0);
}

void *sub_1ACD09A30(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77538();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    long long v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    long long v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD09BE0()
{
  return sub_1ACD09C04(&qword_1E99F50C8);
}

void *sub_1ACD09BEC()
{
  return sub_1ACD09C04(&qword_1E99F0BC0);
}

void *sub_1ACD09BF8()
{
  return sub_1ACD09C04(&qword_1E99F0BD0);
}

void *sub_1ACD09C04(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77538();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    long long v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    long long v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD09DB4()
{
  return sub_1ACD09DE8((uint64_t (*)(void))type metadata accessor for EpisodePlayState, &qword_1E99F5100, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
}

void *sub_1ACD09DE8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v3;
  uint64_t v11 = sub_1ACE77538();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  int64_t v30 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v31 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v16);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 8 * v22;
    uint64_t v24 = *(void *)(*(void *)(v10 + 48) + 8 * v22);
    unint64_t v25 = *(void *)(v32 + 72) * v22;
    sub_1ACD12494(*(void *)(v10 + 56) + v25, (uint64_t)v9, a3);
    *(void *)(*(void *)(v12 + 48) + v23) = v24;
    id result = (void *)sub_1ACD124FC((uint64_t)v9, *(void *)(v12 + 56) + v25, a3);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v16 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v16);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ACD0A050()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2368);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0A1E0()
{
  return sub_1ACD0A1EC(&qword_1EB76E3E0);
}

void *sub_1ACD0A1EC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1ACE77538();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    int64_t v17 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    unint64_t v20 = (void *)(*(void *)(v5 + 56) + 16 * v16);
    *unint64_t v20 = v19;
    v20[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0A390()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ACD0A548()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0A6F4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0B98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0A8AC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E410);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1ACE77538();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ACD0AA58(uint64_t a1)
{
  return sub_1ACD0B008(a1, (uint64_t *)&unk_1EB7694A0, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1ACD10AD8);
}

void *sub_1ACD0AA78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1ACD10C6C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1ACD0AB60(uint64_t a1)
{
  return sub_1ACD0AB80(a1, (uint64_t *)&unk_1EB7694A0, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1ACD117E8);
}

void *sub_1ACD0AB80(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = _swift_stdlib_malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 25;
  }
  id v6[2] = v3;
  void v6[3] = 2 * (v8 >> 3);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v9 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v6;
}

void *sub_1ACD0AC70(uint64_t a1)
{
  return sub_1ACD0AC88(a1, &qword_1E99F4680);
}

void *sub_1ACD0AC7C(uint64_t a1)
{
  return sub_1ACD0AC88(a1, &qword_1E99F46A8);
}

void *sub_1ACD0AC88(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  int64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = v2;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 24);
  uint64_t v6 = sub_1ACD115CC((uint64_t)&v8, v4 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v6 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v4;
}

uint64_t sub_1ACD0AD7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      id v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0AEF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4748);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 48);
  uint64_t v5 = sub_1ACD1117C(&v7, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1ACD0AFE8(uint64_t a1)
{
  return sub_1ACD0B008(a1, (uint64_t *)&unk_1EB769190, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1ACD10AD8);
}

void *sub_1ACD0B008(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = _swift_stdlib_malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 25;
  }
  id v6[2] = v3;
  void v6[3] = 2 * (v8 >> 3);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v9 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v6;
}

uint64_t sub_1ACD0B0F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x1E4FBC860];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
      unint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      long long v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0CB8);
  uint64_t v8 = *(void *)(type metadata accessor for PodcastsMediaLibrary.MediaItem(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

void *sub_1ACD0B334(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1ACD0C0A8((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

void *sub_1ACD0B42C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1ACD113CC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1ACD0B514(uint64_t a1)
{
  return sub_1ACD0AC88(a1, &qword_1E99F46B8);
}

void *sub_1ACD0B520(uint64_t a1)
{
  return sub_1ACD0AC88(a1, &qword_1E99F46C8);
}

void *sub_1ACD0B52C(uint64_t a1)
{
  return sub_1ACD0AB80(a1, (uint64_t *)&unk_1EB769190, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1ACD117E8);
}

uint64_t sub_1ACD0B54C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4D8);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 4);
  uint64_t v6 = sub_1ACD1197C((uint64_t)&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1ACA50A70();
  if (v6 != v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1ACD0B634(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1ACC0DEC4(&qword_1E99F50F8, &qword_1E99F0F50);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0F50);
          size_t v12 = sub_1ACAEB784(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0B854(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1ACC0DEC4(&qword_1E99F5168, &qword_1E99F2040);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2040);
          size_t v12 = sub_1ACAEB718(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7722D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0BA68(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1ACC0DEC4(&qword_1E99F5150, &qword_1EB768E30);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E30);
          size_t v12 = sub_1ACAEB7EC(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SubscriptionOffer();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0BC78(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1ACC0DEC4(&qword_1E99F5138, &qword_1E99F5130);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5130);
          size_t v12 = sub_1ACAEB784(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0BE98(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1ACC0DEC4(&qword_1E99F5128, &qword_1E99F5120);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5120);
          size_t v12 = sub_1ACAEB854(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ContentKeyResponse(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0C0A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1ACC0DEC4(&qword_1E99F50E0, &qword_1E99F50D8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F50D8);
          size_t v12 = sub_1ACAEB784(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1ACA50D4C(0, &qword_1EB768ED0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0C2C8(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1ACA657FC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD059F0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACCFBF90(result, a4 & 1);
  uint64_t result = sub_1ACA657FC(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(unsigned char *)(v18[7] + v12) = a1 & 1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD0C434(uint64_t a1, int a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1ACA65F9C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD05B9C();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACCFC29C(result, a3 & 1);
  uint64_t result = sub_1ACA65F9C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0C56C(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA65CC4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ACD05D40();
      goto LABEL_7;
    }
    sub_1ACCFC5A0(v13, a3 & 1);
    uint64_t v19 = sub_1ACA65CC4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 40 * v10;
    return sub_1ACA8F56C(a1, v17);
  }
LABEL_13:
  return sub_1ACD0F7C4(v10, a2, a1, v16);
}

uint64_t sub_1ACD0C6A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0C6B8(a1, a2, a3, a4, &qword_1E99F0BE0);
}

uint64_t sub_1ACD0C6AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0C6B8(a1, a2, a3, a4, &qword_1E99F0BD8);
}

uint64_t sub_1ACD0C6B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1ACA657FC(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1ACD09C04(a5);
LABEL_7:
    char v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACD03E4C(v17, a4 & 1, a5);
  uint64_t v23 = sub_1ACA657FC(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *unint64_t v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v28;
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1ACD0C840(_OWORD *a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA65B48(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ACD06120();
      goto LABEL_7;
    }
    sub_1ACCFCC2C(v13, a3 & 1);
    unint64_t v19 = sub_1ACA65B48(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1ACA6A09C(a2, (uint64_t)v21);
      return sub_1ACD0F830(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return sub_1ACA3AA44(a1, v17);
}

_OWORD *sub_1ACD0C98C(_OWORD *a1, void *a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1ACA65D94((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1ACD06498();
      goto LABEL_7;
    }
    sub_1ACCFD20C(v12, a3 & 1);
    unint64_t v18 = sub_1ACA65D94((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    return sub_1ACA3AA44(a1, v16);
  }
LABEL_13:
  sub_1ACD0F8AC(v9, (uint64_t)a2, a1, v15);
  return a2;
}

uint64_t sub_1ACD0CAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1ACA657FC(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1ACD06660();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACCFD548(v17, a5 & 1);
  uint64_t v23 = sub_1ACA657FC(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *unint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;
  return swift_bridgeObjectRetain();
}

id sub_1ACD0CC58(uint64_t a1, char a2, void *a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_1ACA66108((uint64_t)a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  id result = (id)(v12 + v13);
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 < (uint64_t)result || (a4 & 1) == 0)
  {
    if (v16 >= (uint64_t)result && (a4 & 1) == 0)
    {
      id result = sub_1ACD0681C();
      goto LABEL_9;
    }
    sub_1ACCFD870((uint64_t)result, a4 & 1);
    id result = (id)sub_1ACA66108((uint64_t)a3);
    if ((v15 & 1) == (v17 & 1))
    {
      unint64_t v11 = (unint64_t)result;
      goto LABEL_9;
    }
LABEL_15:
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    id result = (id)sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_9:
  int v18 = a2 & 1;
  uint64_t v19 = *v5;
  if (v15)
  {
    uint64_t v20 = v19[7] + 16 * v11;
    *(void *)uint64_t v20 = a1;
    *(unsigned char *)(v20 + 8) = v18 != 0;
  }
  else
  {
    sub_1ACD0F964(v11, (uint64_t)a3, a1, v18, v19);
    return a3;
  }
  return result;
}

id sub_1ACD0CDAC(char a1, void *a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1ACA66108((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  id result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= (uint64_t)result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = sub_1ACD069D4();
LABEL_7:
    char v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      *(unsigned char *)(v15[7] + v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACCFDB58((uint64_t)result, a3 & 1);
  id result = (id)sub_1ACA66108((uint64_t)a2);
  if ((v13 & 1) != (v16 & 1))
  {
LABEL_17:
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    id result = (id)sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v9 = (unint64_t)result;
  char v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  *(void *)(v15[6] + 8 * v9) = a2;
  *(unsigned char *)(v15[7] + v9) = a1;
  uint64_t v17 = v15[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v19;
  return a2;
}

uint64_t sub_1ACD0CF10(uint64_t a1, char a2, char a3)
{
  int64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA66158(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ACD06B84();
      goto LABEL_7;
    }
    sub_1ACCFDE2C(v13, a3 & 1);
    unint64_t v24 = sub_1ACA66158(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_1ACE750A8();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  return sub_1ACD0F9B4(v10, a2, a1, v16);
}

_OWORD *sub_1ACD0D078(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0E2BC(a1, a2, a3, a4, sub_1ACA657FC);
}

uint64_t sub_1ACD0D090(uint64_t a1, uint64_t *a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1ACA66220(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1ACD06FC4();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACCFE51C(v13, a3 & 1);
  unint64_t v19 = sub_1ACA66220(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_1ACA69FEC((uint64_t)a2, (uint64_t)v28);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = v16[6] + 72 * v10;
  *(_OWORD *)uint64_t v21 = v28[0];
  long long v22 = v28[1];
  long long v23 = v28[2];
  long long v24 = v28[3];
  *(void *)(v21 + 64) = v29;
  *(_OWORD *)(v21 + 32) = v23;
  *(_OWORD *)(v21 + 48) = v24;
  *(_OWORD *)(v21 + 16) = v22;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v25 = v16[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  void v16[2] = v27;
  return result;
}

uint64_t sub_1ACD0D204(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACD0EC68(a1, a2, a3, sub_1ACA6A1FC, &qword_1EB76E400);
}

uint64_t sub_1ACD0D22C(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA6A1FC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      char v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for StoreFeedUpdater.Update(0);
        return sub_1ACD12564(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for StoreFeedUpdater.Update);
      }
      return sub_1ACD0FA64(v10, a2, a1, v16, type metadata accessor for StoreFeedUpdater.Update, type metadata accessor for StoreFeedUpdater.Update);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ACD07230(type metadata accessor for StoreFeedUpdater.Update, &qword_1E99F50E8, type metadata accessor for StoreFeedUpdater.Update);
      goto LABEL_7;
    }
    sub_1ACCFE740(v13, a3 & 1, type metadata accessor for StoreFeedUpdater.Update, &qword_1E99F50E8, type metadata accessor for StoreFeedUpdater.Update);
    uint64_t v20 = sub_1ACA6A1FC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_1ACD0FA64(v10, a2, a1, v16, type metadata accessor for StoreFeedUpdater.Update, type metadata accessor for StoreFeedUpdater.Update);
    }
  }
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0D3E8(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA6A1FC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      char v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for StoreFeedUpdater.Retry(0);
        return sub_1ACD12564(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for StoreFeedUpdater.Retry);
      }
      return sub_1ACD0FA64(v10, a2, a1, v16, type metadata accessor for StoreFeedUpdater.Retry, type metadata accessor for StoreFeedUpdater.Retry);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ACD07230(type metadata accessor for StoreFeedUpdater.Retry, &qword_1E99F50F0, type metadata accessor for StoreFeedUpdater.Retry);
      goto LABEL_7;
    }
    sub_1ACCFE740(v13, a3 & 1, type metadata accessor for StoreFeedUpdater.Retry, &qword_1E99F50F0, type metadata accessor for StoreFeedUpdater.Retry);
    uint64_t v20 = sub_1ACA6A1FC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_1ACD0FA64(v10, a2, a1, v16, type metadata accessor for StoreFeedUpdater.Retry, type metadata accessor for StoreFeedUpdater.Retry);
    }
  }
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0D5A4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACD0D5CC(a1, a2, a3, sub_1ACA6A1FC, &qword_1EB76E408);
}

uint64_t sub_1ACD0D5CC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = a4(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD07984(a5);
LABEL_7:
    uint64_t v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v23 = 8 * v14;
    *(void *)(v20[6] + v23) = a2;
    *(void *)(v20[7] + v23) = a1;
    uint64_t v24 = v20[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      void v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACCFF558(result, a3 & 1, a5);
  uint64_t result = a4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    uint64_t v20 = (void *)*v8;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0D728(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1ACA66344(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD07628();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACCFED50(result, a4 & 1);
  uint64_t result = sub_1ACA66344(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0D868(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = sub_1ACE75118();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1ACA663D0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1ACD07B20();
    goto LABEL_7;
  }
  sub_1ACCFF80C(v17, a3 & 1);
  unint64_t v23 = sub_1ACA663D0(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1ACD0FB54(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1ACD0DA10(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA65CC4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for ThinClientEpisodeStateModel();
      return sub_1ACD12564(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1ACD09DE8((uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel, &qword_1E99F5140, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
    goto LABEL_7;
  }
  sub_1ACD04194(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel, &qword_1E99F5140, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
  uint64_t v20 = sub_1ACA65CC4(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1ACD0FC0C(v10, a2, a1, v16);
}

uint64_t sub_1ACD0DBC4(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1ACA65CC4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD07DEC();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACCFFC64(result, a3 & 1);
  uint64_t result = sub_1ACA65CC4(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0DD00(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1ACA66344(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD0A1EC(&qword_1E99F0C20);
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    BOOL v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACCFFF4C(result, a4 & 1);
  uint64_t result = sub_1ACA66344(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0DE48(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACD0E020(a1, a2, a3, &qword_1EB769490);
}

uint64_t sub_1ACD0DE54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0C6B8(a1, a2, a3, a4, &qword_1EB769048);
}

uint64_t sub_1ACD0DE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1ACA657FC(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1ACD07F9C();
LABEL_7:
    BOOL v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = (void *)(v23[7] + 32 * v17);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      void *v24 = a1;
      v24[1] = a2;
      _OWORD v24[2] = a3;
      v24[3] = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACD004A0(v20, a7 & 1);
  uint64_t v26 = sub_1ACA657FC(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  BOOL v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  BOOL v28 = (uint64_t *)(v23[6] + 16 * v17);
  *BOOL v28 = a5;
  v28[1] = a6;
  uint64_t v29 = (void *)(v23[7] + 32 * v17);
  void *v29 = a1;
  v29[1] = a2;
  _OWORD v29[2] = a3;
  void v29[3] = a4;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD0E014(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACD0E020(a1, a2, a3, &qword_1EB771938);
}

uint64_t sub_1ACD0E020(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  unint64_t v6 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1ACA65CC4(a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD0834C(a4);
LABEL_7:
    uint64_t v18 = (void *)*v6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v21 = 8 * v12;
    *(void *)(v18[6] + v21) = a2;
    *(void *)(v18[7] + v21) = a1;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACD00AE4(result, a3 & 1, a4);
  uint64_t result = sub_1ACA65CC4(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v6;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0E168(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1ACA665AC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD084E8();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACD00DBC(result, a3 & 1);
  uint64_t result = sub_1ACA665AC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

_OWORD *sub_1ACD0E2A4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0E2BC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1ACC524A8);
}

_OWORD *sub_1ACD0E2BC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = (void **)v5;
  BOOL v12 = (void *)*v5;
  unint64_t v14 = a5(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a4 & 1) == 0)
  {
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1ACD0868C();
      goto LABEL_7;
    }
    sub_1ACD01098(v17, a4 & 1);
    uint64_t v23 = a5(a2, a3);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v7;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v7;
  if (v18)
  {
LABEL_8:
    BOOL v21 = (_OWORD *)(v20[7] + 32 * v14);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    return sub_1ACA3AA44(a1, v21);
  }
LABEL_13:
  sub_1ACD0FCB4(v14, a2, a3, a1, v20);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1ACD0E428(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_1ACA6673C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1ACD088DC((uint64_t (*)(void))type metadata accessor for TTMLRequest, &qword_1E99F0C08, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    goto LABEL_7;
  }
  sub_1ACD01398(v16, a3 & 1);
  unint64_t v22 = sub_1ACA6673C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1ACD12494(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  return sub_1ACD0FD20(v13, (uint64_t)v10, a1, v19, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACD0E5F4(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_1ACA666E8(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1ACD088DC((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, &qword_1E99F0C00, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    goto LABEL_7;
  }
  sub_1ACD01A90(v16, a3 & 1);
  unint64_t v22 = sub_1ACA666E8(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1ACD12494(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  return sub_1ACD0FD20(v13, (uint64_t)v10, a1, v19, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

id sub_1ACD0E7C0(uint64_t a1, void *a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1ACA66108((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1ACD08B50();
LABEL_7:
    BOOL v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACD02188(v12, a3 & 1, &qword_1EB769068);
  unint64_t v18 = sub_1ACA66108((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    id result = (id)sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  BOOL v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;
  return a2;
}

uint64_t sub_1ACD0E93C(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1ACA65E48(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ACD08F7C();
      goto LABEL_7;
    }
    sub_1ACD02868(v13, a3 & 1);
    unint64_t v24 = sub_1ACA65E48(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_1ACE74898();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  return sub_1ACD0FDCC(v10, a2, a1, v16);
}

uint64_t sub_1ACD0EAA4(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = sub_1ACE74898();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1ACA66034(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD0920C();
    goto LABEL_7;
  }
  sub_1ACD02C10(result, a3 & 1);
  uint64_t result = sub_1ACA66034(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1ACD0FE78(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1ACD0EC40(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1ACD0EC68(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1ACA65E48, &qword_1EB771940);
}

uint64_t sub_1ACD0EC68(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = a4(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD0834C(a5);
LABEL_7:
    uint64_t v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v23 = 8 * v14;
    *(void *)(v20[6] + v23) = a2;
    *(void *)(v20[7] + v23) = a1;
    uint64_t v24 = v20[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      void v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACD03034(result, a3 & 1, a5);
  uint64_t result = a4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    uint64_t v20 = (void *)*v8;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0EDC4(uint64_t a1, unsigned __int8 a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1ACA65B8C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD094AC();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACD032E8(result, a3 & 1);
  uint64_t result = sub_1ACA65B8C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0EEFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0F210(a1, a2, a3, a4, &qword_1E99F0C48);
}

uint64_t sub_1ACD0EF08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  unint64_t v6 = (void **)v5;
  char v11 = a4 & 1;
  BOOL v12 = (void *)*v5;
  unint64_t v14 = sub_1ACA664F4(a2, a3, a4 & 1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1ACD0965C();
    goto LABEL_7;
  }
  sub_1ACD034D8(v17, a5 & 1);
  unint64_t v23 = sub_1ACA664F4(a2, a3, v11);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  BOOL v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1ACD0FF78(v14, a2, a3, v11, a1, v20);
  return sub_1ACA72530(a2, a3, v11);
}

uint64_t sub_1ACD0F06C(uint64_t a1, _OWORD *a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1ACA66828(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1ACD09820();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACD0382C(v13, a3 & 1);
  unint64_t v19 = sub_1ACA66828(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_1ACA69E2C((uint64_t)a2, (uint64_t)v37);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = (_OWORD *)(v16[6] + (v10 << 8));
  long long v22 = v37[3];
  long long v24 = v37[0];
  long long v23 = v37[1];
  void v21[2] = v37[2];
  v21[3] = v22;
  _OWORD *v21 = v24;
  v21[1] = v23;
  long long v25 = v37[7];
  long long v27 = v37[4];
  long long v26 = v37[5];
  v21[6] = v37[6];
  v21[7] = v25;
  v21[4] = v27;
  v21[5] = v26;
  long long v28 = v37[11];
  long long v30 = v37[8];
  long long v29 = v37[9];
  v21[10] = v37[10];
  v21[11] = v28;
  v21[8] = v30;
  v21[9] = v29;
  long long v31 = v37[12];
  long long v32 = v37[13];
  long long v33 = v37[15];
  v21[14] = v37[14];
  v21[15] = v33;
  v21[12] = v31;
  v21[13] = v32;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v34 = v16[2];
  BOOL v35 = __OFADD__(v34, 1);
  uint64_t v36 = v34 + 1;
  if (v35)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  void v16[2] = v36;
  return result;
}

uint64_t sub_1ACD0F1F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0C6B8(a1, a2, a3, a4, &qword_1E99F50C8);
}

uint64_t sub_1ACD0F204(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0F210(a1, a2, a3, a4, &qword_1E99F50D0);
}

uint64_t sub_1ACD0F210(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1ACA657FC(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1ACD09A30(a5);
LABEL_7:
    char v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACD03B38(v17, a4 & 1, a5);
  uint64_t v23 = sub_1ACA657FC(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  long long v25 = (uint64_t *)(v20[6] + 16 * v14);
  *long long v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v28;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD0F398(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0C6B8(a1, a2, a3, a4, &qword_1E99F0BC0);
}

uint64_t sub_1ACD0F3A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ACD0C6B8(a1, a2, a3, a4, &qword_1E99F0BD0);
}

void sub_1ACD0F3B0(uint64_t a1, void *a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1ACA661DC((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1ACD0A548();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1ACD04DE8(v12, a3 & 1);
  unint64_t v17 = sub_1ACA661DC((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    type metadata accessor for FairPlayAsset();
    sub_1ACE77A68();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;
  id v23 = a2;
}

uint64_t sub_1ACD0F514(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1ACA657FC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1ACD0A6F4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1ACD050C0(v15, a4 & 1);
  uint64_t v21 = sub_1ACA657FC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1ACE77A68();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  id v23 = (uint64_t *)(v18[6] + 16 * v12);
  *id v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD0F684(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1ACA6A1FC(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1ACD0A8AC();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1ACD053D8(result, a4 & 1);
  uint64_t result = sub_1ACA6A1FC(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD0F7C4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1ACA8F4F4(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_1ACD0F830(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1ACA3AA44(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1ACD0F8AC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1ACA3AA44(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1ACD0F914(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_1ACD0F964(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = a5[7] + 16 * result;
  *(void *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 8) = a4 & 1;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1ACD0F9B4(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1ACE750A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_1ACD0FA64(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_1ACD124FC(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_1ACD0FB0C(unint64_t result, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a5[6] + result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1ACD0FB54(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1ACE75118();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1ACD0FC0C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for ThinClientEpisodeStateModel();
  uint64_t result = sub_1ACD124FC(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ThinClientEpisodeStateModel);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_1ACD0FCB4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1ACA3AA44(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1ACD0FD20(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = a4[6];
  uint64_t v12 = a5(0);
  uint64_t result = sub_1ACD124FC(a2, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

uint64_t sub_1ACD0FDCC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1ACE74898();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_1ACD0FE78(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1ACE74898();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1ACD0FF30(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1ACD0FF78(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a6[6] + 24 * result;
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  *(unsigned char *)(v6 + 16) = a4 & 1;
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_1ACD0FFCC(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1ACE777B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v83 >= v81) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          long long v86 = v11;
          long long v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1ACD10658((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v86 = sub_1ACBE8028((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1ACE76608();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        BOOL v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (*v25 >= v23) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *BOOL v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1ACBE7A88(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      __int16 v77 = sub_1ACBE7A88((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    long long v29 = v11 + 32;
    long long v30 = &v11[16 * v28 + 32];
    *(void *)long long v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          long long v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            char v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        int64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        long long v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        long long v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        char v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1ACD10658((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)char v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        long long v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACD10658(char *__src, char *a2, unint64_t a3, char *__dst)
{
  int64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (v20 >= *((void *)v16 - 1))
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v4 >= *(void *)v6)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1ACBE7C4C(&v24, &v23, &v22);
    return 1;
  }
  uint64_t result = sub_1ACE77568();
  __break(1u);
  return result;
}

uint64_t sub_1ACD108C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 24 * v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    char v23 = *(unsigned char *)(v20 + 16);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v22;
    *(unsigned char *)(v11 + 16) = v23;
    if (v13 == v10)
    {
      sub_1ACA72530(v21, v22, v23);
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = sub_1ACA72530(v21, v22, v23);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1ACD10AD8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1ACD10C6C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1ACD10E70(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 64);
  uint64_t v4 = a4 + 64;
  uint64_t v5 = v6;
  uint64_t v39 = v4;
  uint64_t v7 = -1 << *(unsigned char *)(v4 - 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  if (!a2)
  {
    int64_t v11 = 0;
    a3 = 0;
LABEL_38:
    *uint64_t result = a4;
    result[1] = v39;
    result[2] = ~v7;
    result[3] = v11;
    result[4] = v9;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v36 = -1 << *(unsigned char *)(v4 - 32);
  uint64_t v37 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v38 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v41 = v11;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(a4 + 48) + 96 * v14;
    ++v12;
    char v19 = *(unsigned char *)(v18 + 8);
    char v20 = *(unsigned char *)(v18 + 9);
    char v21 = *(unsigned char *)(v18 + 10);
    char v22 = *(unsigned char *)(v18 + 11);
    char v23 = *(unsigned char *)(v18 + 12);
    char v24 = *(unsigned char *)(v18 + 13);
    uint64_t v25 = *(void *)(v18 + 32);
    char v26 = *(unsigned char *)(v18 + 40);
    uint64_t v27 = *(void *)(v18 + 48);
    uint64_t v28 = *(void *)(v18 + 56);
    uint64_t v29 = *(void *)(v18 + 64);
    uint64_t v30 = *(void *)(v18 + 72);
    uint64_t v31 = *(void *)(v18 + 80);
    char v32 = *(unsigned char *)(v18 + 90);
    __int16 v33 = *(_WORD *)(v18 + 88);
    long long v34 = *(_OWORD *)(v18 + 16);
    *(void *)uint64_t v10 = *(void *)v18;
    *(unsigned char *)(v10 + 8) = v19;
    *(unsigned char *)(v10 + 9) = v20;
    *(unsigned char *)(v10 + 10) = v21;
    *(unsigned char *)(v10 + 11) = v22;
    *(unsigned char *)(v10 + 12) = v23;
    *(unsigned char *)(v10 + 13) = v24;
    *(_OWORD *)(v10 + 16) = v34;
    *(void *)(v10 + 32) = v25;
    *(unsigned char *)(v10 + 40) = v26;
    *(void *)(v10 + 48) = v27;
    *(void *)(v10 + 56) = v28;
    *(void *)(v10 + 64) = v29;
    *(void *)(v10 + 72) = v30;
    *(void *)(v10 + 80) = v31;
    *(unsigned char *)(v10 + 90) = v32;
    *(_WORD *)(v10 + 88) = v33;
    uint64_t v35 = a3;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      sub_1ACA3A9E8(v27, v28, v29, v30, v31);
      uint64_t v7 = v36;
      uint64_t result = v37;
      a3 = v35;
      int64_t v11 = v41;
      goto LABEL_38;
    }
    v10 += 96;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1ACA3A9E8(v27, v28, v29, v30, v31);
    a3 = v35;
    int64_t v11 = v41;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v38) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v39 + 8 * v15);
    if (!v16) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v41 = v15;
  }
  v11 += 2;
  if (v15 + 1 >= v38)
  {
    unint64_t v9 = 0;
    int64_t v11 = v15;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v11);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v38) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v17);
  if (v16) {
    goto LABEL_17;
  }
  int64_t v11 = v15 + 3;
  if (v15 + 3 >= v38)
  {
    unint64_t v9 = 0;
    int64_t v11 = v15 + 2;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v11);
  if (v16)
  {
LABEL_14:
    int64_t v15 = v11;
    goto LABEL_18;
  }
  int64_t v17 = v15 + 4;
  if (v15 + 4 >= v38)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    a3 = v12;
    uint64_t v7 = v36;
    uint64_t result = v37;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v17);
  if (v16)
  {
LABEL_17:
    int64_t v15 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v38)
    {
      unint64_t v9 = 0;
      int64_t v11 = v38 - 1;
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v39 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1ACD1117C(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
LABEL_37:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v12;
  }
  if (!a3)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0) {
    goto LABEL_39;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  char v24 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1ACA33128(*(void *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(void *)&long long v26 = v20;
    *((void *)&v26 + 1) = v19;
    long long v22 = v27;
    long long v21 = v28;
    long long v30 = v27;
    long long v31 = v28;
    long long v29 = v26;
    _OWORD *v10 = v26;
    v10[1] = v22;
    void v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = a3;
      goto LABEL_36;
    }
    v10 += 3;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v11 = v15 + 1;
      if (v15 + 2 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2;
      }
      else
      {
        int64_t v11 = v15 + 2;
        if (v15 + 3 >= v25) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          int64_t v17 = v15 + 4;
          int64_t v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            unint64_t v16 = *(void *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v25)
                {
                  int64_t v11 = v25 - 1;
                  goto LABEL_35;
                }
                unint64_t v16 = *(void *)(v5 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v15 = v17;
            goto LABEL_21;
          }
LABEL_35:
          unint64_t v8 = 0;
LABEL_36:
          uint64_t v6 = v23;
          uint64_t result = v24;
          goto LABEL_37;
        }
        v15 += 3;
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1ACD113CC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1ACD115CC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *int64_t v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1ACD117E8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1ACD1197C(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_1ACD11B7C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (void **)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata];
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response] = a1;
  *(void *)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_request] = a2;
  sub_1ACD12494(a3, (uint64_t)&v3[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_params], (uint64_t (*)(void))type metadata accessor for MediaRequest.Params);
  uint64_t v7 = *(void **)&a2[OBJC_IVAR___MTBaseFeedRequest_showMetadata];
  swift_beginAccess();
  uint64_t v8 = *v6;
  *uint64_t v6 = v7;
  unint64_t v9 = v3;
  uint64_t v10 = a2;
  id v11 = v7;

  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1ACA3A048(MEMORY[0x1E4FBC860]);
  int64_t v14 = &v9[OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_parsedCache];
  *(void *)int64_t v14 = v12;
  *((void *)v14 + 1) = v13;
  *((void *)v14 + 2) = v12;
  *((void *)v14 + 3) = 0;

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for BaseFeedResponse();
  id v15 = objc_msgSendSuper2(&v17, sel_init);
  sub_1ACA39598(a3);
  return v15;
}

uint64_t type metadata accessor for BaseFeedResponse()
{
  uint64_t result = qword_1E99F50B8;
  if (!qword_1E99F50B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACD11CE4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_response);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_1ACD11D40@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC18PodcastsFoundation16BaseFeedResponse_showMetadata);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for BaseFeedRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseFeedRequest);
}

uint64_t dispatch thunk of BaseFeedRequest.__allocating_init(storeID:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BaseFeedRequest.params.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseFeedRequest.feedResponse(jsonArray:request:params:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseFeedRequest.perform(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t sub_1ACD11E78()
{
  return type metadata accessor for BaseFeedResponse();
}

uint64_t sub_1ACD11E80()
{
  uint64_t result = type metadata accessor for MediaRequest.Params();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BaseFeedResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseFeedResponse);
}

uint64_t dispatch thunk of BaseFeedResponse.response.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BaseFeedResponse.response.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BaseFeedResponse.response.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BaseFeedResponse.showMetadata.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BaseFeedResponse.showMetadata.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BaseFeedResponse.showMetadata.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseFeedResponse.parsedCache.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseFeedResponse.parsedCache.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BaseFeedResponse.parsedCache.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BaseFeedResponse.__allocating_init(jsonArray:request:params:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BaseFeedResponse.parseItemsIntoCacheIfNeeded()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BaseFeedResponse.items(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BaseFeedResponse.item(in:at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of BaseFeedResponse.numberOfItems(in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BaseFeedResponse.numberOfSections()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BaseFeedResponse.section(at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t destroy for BaseFeedResponse.ParsedResponseCache()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void *initializeWithCopy for BaseFeedResponse.ParsedResponseCache(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}