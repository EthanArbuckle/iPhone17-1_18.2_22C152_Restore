void *assignWithCopy for BaseFeedResponse.ParsedResponseCache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for BaseFeedResponse.ParsedResponseCache(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BaseFeedResponse.ParsedResponseCache()
{
  return &type metadata for BaseFeedResponse.ParsedResponseCache;
}

uint64_t sub_1ACD12414()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACD1244C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACD12494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACD124FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACD12564(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1ACD125D8(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  MEMORY[0x1F4188790](v4 - 8);
  v6 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v9 = (char *)v79 - v8;
  v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v11 = *((void *)v10 - 1);
  MEMORY[0x1F4188790](v10);
  v13 = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MTPlaybackContinuousPlaybackEnabled())
  {
    uint64_t EpisodeListBuilder = type metadata accessor for UpNextEpisodeListBuilder();
    uint64_t v15 = v2 + *(int *)(EpisodeListBuilder + 20);
    sub_1ACD16D0C(v15, (uint64_t)v9);
    v16 = *(unsigned int (**)(char *, uint64_t, int *))(v11 + 48);
    if (v16(v9, 1, v10) == 1)
    {
      sub_1ACBFDD74((uint64_t)v9);
LABEL_13:
      uint64_t v23 = v2 + *(int *)(EpisodeListBuilder + 24);
      uint64_t v24 = *(void *)v23;
      uint64_t v25 = *(void *)(v23 + 8);
      uint64_t v26 = *(void *)(v23 + 16);
      uint64_t v27 = *(void *)(v23 + 24);
      uint64_t v28 = *(void *)(v23 + 32);
      uint64_t v29 = *(void *)(v23 + 40);
      uint64_t v30 = *(void *)(v23 + 48);
      uint64_t v31 = *(void *)(v23 + 56);
      uint64_t v32 = *(void *)(v23 + 64);
      uint64_t v33 = *(void *)(v23 + 72);
      char v34 = *(unsigned char *)(v23 + 82);
      LOWORD(v23) = *(_WORD *)(v23 + 80);
      *(void *)a1 = v24;
      *(void *)(a1 + 8) = v25;
      *(void *)(a1 + 16) = v26;
      *(void *)(a1 + 24) = v27;
      *(void *)(a1 + 32) = v28;
      *(void *)(a1 + 40) = v29;
      *(void *)(a1 + 48) = v30;
      *(void *)(a1 + 56) = v31;
      *(void *)(a1 + 64) = v32;
      *(void *)(a1 + 72) = v33;
      *(unsigned char *)(a1 + 82) = v34;
      *(_WORD *)(a1 + 80) = v23;
      sub_1ACA63A5C(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v23);
      return;
    }
    sub_1ACA61468((uint64_t)v9, (uint64_t)v13);
    v21 = &v13[v10[37]];
    uint64_t v22 = *((void *)v21 + 1);
    if (!v22)
    {
      sub_1ACABFED4((uint64_t)v13);
      goto LABEL_13;
    }
    uint64_t v84 = *(void *)v21;
    sub_1ACD16D0C(v15, (uint64_t)v6);
    if (v16(v6, 1, v10) == 1)
    {
      sub_1ACBFDD74((uint64_t)v6);
LABEL_25:
      sub_1ACABFED4((uint64_t)v13);
      v66 = 0;
LABEL_26:
      uint64_t v67 = v2 + *(int *)(EpisodeListBuilder + 24);
      uint64_t v68 = *(void *)v67;
      uint64_t v69 = *(void *)(v67 + 8);
      uint64_t v70 = *(void *)(v67 + 16);
      uint64_t v71 = *(void *)(v67 + 24);
      uint64_t v72 = *(void *)(v67 + 32);
      uint64_t v73 = *(void *)(v67 + 40);
      uint64_t v74 = *(void *)(v67 + 48);
      uint64_t v75 = *(void *)(v67 + 56);
      uint64_t v76 = *(void *)(v67 + 64);
      uint64_t v77 = *(void *)(v67 + 72);
      char v78 = *(unsigned char *)(v67 + 82);
      LOWORD(v67) = *(_WORD *)(v67 + 80);
      *(void *)a1 = v68;
      *(void *)(a1 + 8) = v69;
      *(void *)(a1 + 16) = v70;
      *(void *)(a1 + 24) = v71;
      *(void *)(a1 + 32) = v72;
      *(void *)(a1 + 40) = v73;
      *(void *)(a1 + 48) = v74;
      *(void *)(a1 + 56) = v75;
      *(void *)(a1 + 64) = v76;
      *(void *)(a1 + 72) = v77;
      *(unsigned char *)(a1 + 82) = v78;
      *(_WORD *)(a1 + 80) = v67;
      sub_1ACA63A5C(v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v67);
      sub_1ACA76F34((uint64_t)v66);
      return;
    }
    uint64_t v35 = v22;
    char v36 = v6[v10[31]];
    swift_bridgeObjectRetain();
    sub_1ACABFED4((uint64_t)v6);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v83 = v35;
    if (qword_1EB76D4C0 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1ACE754C8();
    v79[1] = __swift_project_value_buffer(v37, (uint64_t)qword_1EB76D4A8);
    v38 = sub_1ACE75498();
    os_log_type_t v39 = sub_1ACE76C08();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1AC9D5000, v38, v39, "Show is serial. Generating serial list settings.", v40, 2u);
      MEMORY[0x1AD11B340](v40, -1, -1);
    }

    v41 = self;
    uint64_t v80 = v10[30];
    id v42 = objc_msgSend(v41, sel_predicateForSeasonNumber_, *(void *)&v13[v80]);
    id v43 = objc_msgSend(v41, sel_predicateForEpisodesWithEpisodeNumbersGreaterThan_, *(void *)&v13[v10[29]]);
    id v44 = objc_msgSend(v42, sel_AND_, v43);

    v45 = (void *)sub_1ACE76178();
    id v46 = objc_msgSend(v41, sel_predicateForAllEpisodesOnPodcastUuid_, v45);

    id v82 = objc_msgSend(v44, sel_AND_, v46);
    id v47 = objc_msgSend(self, sel_sharedInstance);
    id v48 = objc_msgSend(v47, sel_mainOrPrivateContext);

    sub_1ACE761B8();
    id v49 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    v50 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v49, sel_initWithEntityName_, v50);

    objc_msgSend(v51, sel_setPredicate_, v82);
    objc_msgSend(v51, sel_setFetchLimit_, 1);
    char v86 = 0;
    v52 = (void *)swift_allocObject();
    v52[2] = &v86;
    v52[3] = v48;
    v52[4] = v51;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = sub_1ACD16DB4;
    *(void *)(v53 + 24) = v52;
    v81 = v52;
    aBlock[4] = sub_1ACADC690;
    aBlock[5] = v53;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACC525DC;
    aBlock[3] = &block_descriptor_67;
    v54 = _Block_copy(aBlock);
    id v55 = v48;
    id v56 = v51;
    swift_retain();
    swift_release();
    objc_msgSend(v55, sel_performBlockAndWait_, v54);
    _Block_release(v54);
    LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v54)
    {
      __break(1u);
    }
    else
    {
      if (v86 != 1)
      {
        sub_1ACABFED4((uint64_t)v13);

        swift_bridgeObjectRelease();
        v66 = sub_1ACD16DB4;
        goto LABEL_26;
      }
      v57 = sub_1ACE75498();
      os_log_type_t v58 = sub_1ACE76C08();
      if (os_log_type_enabled(v57, v58))
      {
        id v59 = v55;
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_1AC9D5000, v57, v58, "Found unplayed episodes for this serial show.", v60, 2u);
        v61 = v60;
        id v55 = v59;
        MEMORY[0x1AD11B340](v61, -1, -1);
      }

      uint64_t v62 = *(void *)&v13[v80];
      uint64_t v63 = v13[v10[39]];
      __int16 v64 = v13[v10[40]];
      sub_1ACABFED4((uint64_t)v13);
      swift_release();
      uint64_t v65 = v83;
      *(void *)a1 = v84;
      *(void *)(a1 + 8) = v65;
      *(void *)(a1 + 16) = v62;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = (v63 << 8) | 7;
      *(void *)(a1 + 72) = 3;
      *(unsigned char *)(a1 + 82) = 0;
      *(_WORD *)(a1 + 80) = v64;
    }
  }
  else
  {
    if (qword_1EB76D4C0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE754C8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D4A8);
    v18 = sub_1ACE75498();
    os_log_type_t v19 = sub_1ACE76C08();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1AC9D5000, v18, v19, "Continuous playback disabled. Returning nil settings", v20, 2u);
      MEMORY[0x1AD11B340](v20, -1, -1);
    }

    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(unsigned char *)(a1 + 82) = 0;
    *(_WORD *)(a1 + 80) = 2;
  }
}

uint64_t sub_1ACD12E40(BOOL *a1)
{
  sub_1ACACD5EC();
  uint64_t result = sub_1ACE76ED8();
  *a1 = result > 0;
  return result;
}

__n128 sub_1ACD1305C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *(unsigned char *)(a1 + 32);
  long long v19 = a3[1];
  long long v20 = *a3;
  __n128 v17 = (__n128)a3[3];
  long long v18 = a3[2];
  uint64_t v9 = *((void *)a3 + 8);
  uint64_t v10 = *((void *)a3 + 9);
  __int16 v11 = *((_WORD *)a3 + 40);
  char v12 = *((unsigned char *)a3 + 82);
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v13;
  uint64_t v14 = a5 + *(int *)(a4 + 20);
  *(unsigned char *)(a5 + 32) = v8;
  sub_1ACB8B47C(a2, v14);
  uint64_t v15 = a5 + *(int *)(a4 + 24);
  *(_OWORD *)uint64_t v15 = v20;
  *(_OWORD *)(v15 + 16) = v19;
  __n128 result = v17;
  *(_OWORD *)(v15 + 32) = v18;
  *(__n128 *)(v15 + 48) = v17;
  *(void *)(v15 + 64) = v9;
  *(void *)(v15 + 72) = v10;
  *(unsigned char *)(v15 + 82) = v12;
  *(_WORD *)(v15 + 80) = v11;
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for UpNextEpisodeListBuilder(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    unsigned __int8 v11 = *(unsigned char *)(a2 + 32);
    sub_1ACA639E4(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(int *)(v6 + 20);
    long long v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(v3 + v12);
    uint64_t v15 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
    uint64_t v16 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v99 = v16;
      unint64_t v107 = a1;
      uint64_t v19 = v14[1];
      void *v13 = *v14;
      v13[1] = v19;
      uint64_t v20 = v14[3];
      v13[2] = v14[2];
      v13[3] = v20;
      uint64_t v21 = v14[5];
      v13[4] = v14[4];
      v13[5] = v21;
      v13[6] = v14[6];
      *((unsigned char *)v13 + 56) = *((unsigned char *)v14 + 56);
      uint64_t v22 = v14[8];
      *((unsigned char *)v13 + 72) = *((unsigned char *)v14 + 72);
      v13[8] = v22;
      uint64_t v23 = v14[11];
      v13[10] = v14[10];
      v13[11] = v23;
      uint64_t v24 = v14[13];
      v13[12] = v14[12];
      v13[13] = v24;
      uint64_t v25 = v14[15];
      v13[14] = v14[14];
      v13[15] = v25;
      uint64_t v26 = v15[12];
      __dst = (char *)v13 + v26;
      v100 = (char *)v14 + v26;
      uint64_t v27 = sub_1ACE74F28();
      uint64_t v105 = *(void *)(v27 - 8);
      uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v100, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v100, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(__dst, v100, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(__dst, 0, 1, v27);
      }
      uint64_t v30 = v15[13];
      uint64_t v31 = (void *)((char *)v13 + v30);
      uint64_t v32 = (void *)((char *)v14 + v30);
      uint64_t v33 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v33;
      *(void *)((char *)v13 + v15[14]) = *(void *)((char *)v14 + v15[14]);
      uint64_t v34 = v15[15];
      uint64_t v35 = (char *)v13 + v34;
      char v36 = (char *)v14 + v34;
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = v36[8];
      uint64_t v37 = v15[16];
      v38 = (char *)v13 + v37;
      os_log_type_t v39 = (char *)v14 + v37;
      swift_bridgeObjectRetain();
      uint64_t v103 = v27;
      uint64_t v104 = v6;
      uint64_t v97 = v3;
      if (v28(v39, 1, v27))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v38, v39, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v38, 0, 1, v27);
      }
      uint64_t v41 = v15[17];
      id v42 = (void *)((char *)v13 + v41);
      id v43 = (void *)((char *)v14 + v41);
      uint64_t v44 = v43[1];
      *id v42 = *v43;
      v42[1] = v44;
      *(void *)((char *)v13 + v15[18]) = *(void *)((char *)v14 + v15[18]);
      *((unsigned char *)v13 + v15[19]) = *((unsigned char *)v14 + v15[19]);
      uint64_t v45 = v15[20];
      v101 = (char *)v13 + v45;
      id v46 = (char *)v14 + v45;
      uint64_t v47 = sub_1ACE750A8();
      uint64_t v48 = *(void *)(v47 - 8);
      id v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v49(v46, 1, v47))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(v101, v46, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v101, v46, v47);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v101, 0, 1, v47);
      }
      uint64_t v3 = v97;
      uint64_t v51 = v15[21];
      v52 = (void *)((char *)v13 + v51);
      uint64_t v53 = (void *)((char *)v14 + v51);
      uint64_t v54 = v53[1];
      void *v52 = *v53;
      v52[1] = v54;
      *((unsigned char *)v13 + v15[22]) = *((unsigned char *)v14 + v15[22]);
      *((unsigned char *)v13 + v15[23]) = *((unsigned char *)v14 + v15[23]);
      *((unsigned char *)v13 + v15[24]) = *((unsigned char *)v14 + v15[24]);
      *((unsigned char *)v13 + v15[25]) = *((unsigned char *)v14 + v15[25]);
      *((unsigned char *)v13 + v15[26]) = *((unsigned char *)v14 + v15[26]);
      *((unsigned char *)v13 + v15[27]) = *((unsigned char *)v14 + v15[27]);
      *((unsigned char *)v13 + v15[28]) = *((unsigned char *)v14 + v15[28]);
      *(void *)((char *)v13 + v15[29]) = *(void *)((char *)v14 + v15[29]);
      *(void *)((char *)v13 + v15[30]) = *(void *)((char *)v14 + v15[30]);
      *((unsigned char *)v13 + v15[31]) = *((unsigned char *)v14 + v15[31]);
      uint64_t v55 = v15[32];
      id v56 = (void *)((char *)v13 + v55);
      v57 = (void *)((char *)v14 + v55);
      uint64_t v58 = v57[1];
      *id v56 = *v57;
      v56[1] = v58;
      *(void *)((char *)v13 + v15[33]) = *(void *)((char *)v14 + v15[33]);
      uint64_t v59 = v15[34];
      v60 = (void *)((char *)v13 + v59);
      v61 = (void *)((char *)v14 + v59);
      uint64_t v62 = v61[1];
      void *v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = v15[35];
      __int16 v64 = (void *)((char *)v13 + v63);
      uint64_t v65 = (void *)((char *)v14 + v63);
      uint64_t v66 = v65[1];
      *__int16 v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v15[36];
      v102 = (char *)v13 + v67;
      uint64_t v68 = (char *)v14 + v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v68, 1, v103))
      {
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v102, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v68, v103);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v103);
      }
      uint64_t v70 = v15[37];
      uint64_t v71 = (void *)((char *)v13 + v70);
      uint64_t v72 = (void *)((char *)v14 + v70);
      uint64_t v73 = v72[1];
      *uint64_t v71 = *v72;
      v71[1] = v73;
      uint64_t v74 = v15[38];
      uint64_t v75 = (void *)((char *)v13 + v74);
      uint64_t v76 = (void *)((char *)v14 + v74);
      uint64_t v77 = v76[1];
      *uint64_t v75 = *v76;
      v75[1] = v77;
      *((unsigned char *)v13 + v15[39]) = *((unsigned char *)v14 + v15[39]);
      *((unsigned char *)v13 + v15[40]) = *((unsigned char *)v14 + v15[40]);
      *((unsigned char *)v13 + v15[41]) = *((unsigned char *)v14 + v15[41]);
      *((unsigned char *)v13 + v15[42]) = *((unsigned char *)v14 + v15[42]);
      *((unsigned char *)v13 + v15[43]) = *((unsigned char *)v14 + v15[43]);
      *((unsigned char *)v13 + v15[44]) = *((unsigned char *)v14 + v15[44]);
      *((unsigned char *)v13 + v15[45]) = *((unsigned char *)v14 + v15[45]);
      uint64_t v78 = v15[46];
      v79 = (void *)((char *)v13 + v78);
      uint64_t v80 = (void *)((char *)v14 + v78);
      uint64_t v81 = v80[1];
      void *v79 = *v80;
      v79[1] = v81;
      id v82 = *(void (**)(void *, void, uint64_t, int *))(v99 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v13, 0, 1, v15);
      a1 = v107;
      uint64_t v6 = v104;
    }
    uint64_t v83 = *(int *)(v6 + 24);
    uint64_t v84 = a1 + v83;
    v85 = (uint64_t *)(v3 + v83);
    if (*(unsigned char *)(v3 + v83 + 80) == 2)
    {
      long long v86 = *((_OWORD *)v85 + 3);
      *(_OWORD *)(v84 + 32) = *((_OWORD *)v85 + 2);
      *(_OWORD *)(v84 + 48) = v86;
      *(_OWORD *)(v84 + 64) = *((_OWORD *)v85 + 4);
      *(_DWORD *)(v84 + 79) = *(_DWORD *)((char *)v85 + 79);
      long long v87 = *((_OWORD *)v85 + 1);
      *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
      *(_OWORD *)(v84 + 16) = v87;
    }
    else
    {
      unint64_t v108 = a1;
      uint64_t v88 = *v85;
      uint64_t v89 = v85[1];
      uint64_t v90 = v85[2];
      uint64_t v91 = v85[3];
      uint64_t v92 = v85[4];
      uint64_t v93 = v85[5];
      uint64_t v94 = v85[6];
      uint64_t v95 = v85[7];
      char v106 = *((unsigned char *)v85 + 64);
      sub_1ACA63A78(*v85, v89, v90, v91, v92, v93, v94, v95, v106);
      *(void *)uint64_t v84 = v88;
      *(void *)(v84 + 8) = v89;
      a1 = v108;
      *(void *)(v84 + 16) = v90;
      *(void *)(v84 + 24) = v91;
      *(void *)(v84 + 32) = v92;
      *(void *)(v84 + 40) = v93;
      *(void *)(v84 + 48) = v94;
      *(void *)(v84 + 56) = v95;
      *(unsigned char *)(v84 + 64) = v106;
      *(unsigned char *)(v84 + 65) = *((unsigned char *)v85 + 65);
      *(void *)(v84 + 72) = v85[9];
      *(unsigned char *)(v84 + 80) = *((unsigned char *)v85 + 80);
      *(_WORD *)(v84 + 81) = *(_WORD *)((char *)v85 + 81);
    }
  }
  return a1;
}

void destroy for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2)
{
  sub_1ACA63688(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  int v5 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + v5[12];
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v4 + v5[16];
    if (!v9(v10, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    }
    uint64_t v16 = v8;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v11 = v4 + v5[20];
    uint64_t v12 = sub_1ACE750A8();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v4 + v5[36];
    if (!v9(v14, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = a1 + *(int *)(a2 + 24);
  if (*(unsigned char *)(v15 + 80) != 2) {
    sub_1ACA63738(*(void *)v15, *(void *)(v15 + 8), *(void *)(v15 + 16), *(void *)(v15 + 24), *(void *)(v15 + 32), *(void *)(v15 + 40), *(void *)(v15 + 48), *(void *)(v15 + 56), *(unsigned char *)(v15 + 64));
  }
}

uint64_t initializeWithCopy for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(v4 + v11);
  uint64_t v14 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v100 = v15;
    uint64_t v101 = a3;
    uint64_t v17 = v13[1];
    uint64_t v106 = a1;
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v18 = v13[3];
    v12[2] = v13[2];
    v12[3] = v18;
    uint64_t v19 = v13[5];
    v12[4] = v13[4];
    v12[5] = v19;
    v12[6] = v13[6];
    *((unsigned char *)v12 + 56) = *((unsigned char *)v13 + 56);
    uint64_t v20 = v13[8];
    *((unsigned char *)v12 + 72) = *((unsigned char *)v13 + 72);
    v12[8] = v20;
    uint64_t v21 = v13[11];
    v12[10] = v13[10];
    v12[11] = v21;
    uint64_t v22 = v13[13];
    v12[12] = v13[12];
    v12[13] = v22;
    uint64_t v23 = v13[15];
    v12[14] = v13[14];
    v12[15] = v23;
    uint64_t v24 = v14[12];
    __dst = (char *)v12 + v24;
    v96 = (char *)v13 + v24;
    uint64_t v25 = sub_1ACE74F28();
    uint64_t v103 = *(void *)(v25 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v104 = v26;
    if (v26(v96, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(__dst, v96, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(__dst, v96, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(__dst, 0, 1, v25);
    }
    uint64_t v28 = v14[13];
    uint64_t v29 = (void *)((char *)v12 + v28);
    uint64_t v30 = (void *)((char *)v13 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *(void *)((char *)v12 + v14[14]) = *(void *)((char *)v13 + v14[14]);
    uint64_t v32 = v14[15];
    uint64_t v33 = (char *)v12 + v32;
    uint64_t v34 = (char *)v13 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v14[16];
    char v36 = (char *)v12 + v35;
    uint64_t v37 = (char *)v13 + v35;
    swift_bridgeObjectRetain();
    uint64_t v102 = v4;
    uint64_t v99 = v25;
    if (v26(v37, 1, v25))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v36, v37, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v36, 0, 1, v25);
    }
    uint64_t v39 = v14[17];
    uint64_t v40 = (void *)((char *)v12 + v39);
    uint64_t v41 = (void *)((char *)v13 + v39);
    uint64_t v42 = v41[1];
    void *v40 = *v41;
    v40[1] = v42;
    *(void *)((char *)v12 + v14[18]) = *(void *)((char *)v13 + v14[18]);
    *((unsigned char *)v12 + v14[19]) = *((unsigned char *)v13 + v14[19]);
    uint64_t v43 = v14[20];
    __dsta = (char *)v12 + v43;
    uint64_t v44 = (char *)v13 + v43;
    uint64_t v45 = sub_1ACE750A8();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v47(v44, 1, v45))
    {
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(__dsta, v44, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(__dsta, v44, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(__dsta, 0, 1, v45);
    }
    uint64_t v49 = v14[21];
    uint64_t v50 = (void *)((char *)v12 + v49);
    uint64_t v51 = (void *)((char *)v13 + v49);
    uint64_t v52 = v51[1];
    void *v50 = *v51;
    v50[1] = v52;
    *((unsigned char *)v12 + v14[22]) = *((unsigned char *)v13 + v14[22]);
    *((unsigned char *)v12 + v14[23]) = *((unsigned char *)v13 + v14[23]);
    *((unsigned char *)v12 + v14[24]) = *((unsigned char *)v13 + v14[24]);
    *((unsigned char *)v12 + v14[25]) = *((unsigned char *)v13 + v14[25]);
    *((unsigned char *)v12 + v14[26]) = *((unsigned char *)v13 + v14[26]);
    *((unsigned char *)v12 + v14[27]) = *((unsigned char *)v13 + v14[27]);
    *((unsigned char *)v12 + v14[28]) = *((unsigned char *)v13 + v14[28]);
    *(void *)((char *)v12 + v14[29]) = *(void *)((char *)v13 + v14[29]);
    *(void *)((char *)v12 + v14[30]) = *(void *)((char *)v13 + v14[30]);
    *((unsigned char *)v12 + v14[31]) = *((unsigned char *)v13 + v14[31]);
    uint64_t v53 = v14[32];
    uint64_t v54 = (void *)((char *)v12 + v53);
    uint64_t v55 = (void *)((char *)v13 + v53);
    uint64_t v56 = v55[1];
    void *v54 = *v55;
    v54[1] = v56;
    *(void *)((char *)v12 + v14[33]) = *(void *)((char *)v13 + v14[33]);
    uint64_t v57 = v14[34];
    uint64_t v58 = (void *)((char *)v12 + v57);
    uint64_t v59 = (void *)((char *)v13 + v57);
    uint64_t v60 = v59[1];
    *uint64_t v58 = *v59;
    v58[1] = v60;
    uint64_t v61 = v14[35];
    uint64_t v62 = (void *)((char *)v12 + v61);
    uint64_t v63 = (void *)((char *)v13 + v61);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    uint64_t v65 = v14[36];
    uint64_t v66 = (char *)v12 + v65;
    uint64_t v67 = (char *)v13 + v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v104(v67, 1, v99))
    {
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v66, v67, v99);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v66, 0, 1, v99);
    }
    uint64_t v69 = v14[37];
    uint64_t v70 = (void *)((char *)v12 + v69);
    uint64_t v71 = (void *)((char *)v13 + v69);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = v14[38];
    uint64_t v74 = (void *)((char *)v12 + v73);
    uint64_t v75 = (void *)((char *)v13 + v73);
    uint64_t v76 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v76;
    *((unsigned char *)v12 + v14[39]) = *((unsigned char *)v13 + v14[39]);
    *((unsigned char *)v12 + v14[40]) = *((unsigned char *)v13 + v14[40]);
    *((unsigned char *)v12 + v14[41]) = *((unsigned char *)v13 + v14[41]);
    *((unsigned char *)v12 + v14[42]) = *((unsigned char *)v13 + v14[42]);
    *((unsigned char *)v12 + v14[43]) = *((unsigned char *)v13 + v14[43]);
    *((unsigned char *)v12 + v14[44]) = *((unsigned char *)v13 + v14[44]);
    *((unsigned char *)v12 + v14[45]) = *((unsigned char *)v13 + v14[45]);
    uint64_t v77 = v14[46];
    uint64_t v78 = (void *)((char *)v12 + v77);
    v79 = (void *)((char *)v13 + v77);
    uint64_t v80 = v79[1];
    *uint64_t v78 = *v79;
    v78[1] = v80;
    uint64_t v81 = *(void (**)(void *, void, uint64_t, int *))(v100 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81(v12, 0, 1, v14);
    a1 = v106;
    a3 = v101;
    uint64_t v4 = v102;
  }
  uint64_t v82 = *(int *)(a3 + 24);
  uint64_t v83 = a1 + v82;
  uint64_t v84 = (uint64_t *)(v4 + v82);
  if (*((unsigned char *)v84 + 80) == 2)
  {
    long long v85 = *((_OWORD *)v84 + 3);
    *(_OWORD *)(v83 + 32) = *((_OWORD *)v84 + 2);
    *(_OWORD *)(v83 + 48) = v85;
    *(_OWORD *)(v83 + 64) = *((_OWORD *)v84 + 4);
    *(_DWORD *)(v83 + 79) = *(_DWORD *)((char *)v84 + 79);
    long long v86 = *((_OWORD *)v84 + 1);
    *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
    *(_OWORD *)(v83 + 16) = v86;
  }
  else
  {
    uint64_t v107 = a1;
    uint64_t v87 = *v84;
    uint64_t v88 = v84[1];
    uint64_t v89 = v84[2];
    uint64_t v90 = v84[3];
    uint64_t v91 = v84[4];
    uint64_t v92 = v84[5];
    uint64_t v93 = v84[6];
    uint64_t v94 = v84[7];
    char v105 = *((unsigned char *)v84 + 64);
    sub_1ACA63A78(*v84, v88, v89, v90, v91, v92, v93, v94, v105);
    *(void *)uint64_t v83 = v87;
    *(void *)(v83 + 8) = v88;
    a1 = v107;
    *(void *)(v83 + 16) = v89;
    *(void *)(v83 + 24) = v90;
    *(void *)(v83 + 32) = v91;
    *(void *)(v83 + 40) = v92;
    *(void *)(v83 + 48) = v93;
    *(void *)(v83 + 56) = v94;
    *(unsigned char *)(v83 + 64) = v105;
    *(unsigned char *)(v83 + 65) = *((unsigned char *)v84 + 65);
    *(void *)(v83 + 72) = v84[9];
    *(unsigned char *)(v83 + 80) = *((unsigned char *)v84 + 80);
    *(_WORD *)(v83 + 81) = *(_WORD *)((char *)v84 + 81);
  }
  return a1;
}

uint64_t assignWithCopy for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
  sub_1ACA639E4(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v10;
  sub_1ACA63688(v11, v12, v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = v4 + v16;
  uint64_t v19 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  LODWORD(v9) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v9)
  {
    if (!v22)
    {
      uint64_t v181 = v20;
      uint64_t v185 = a3;
      uint64_t v186 = v4;
      uint64_t v190 = a1;
      *(void *)uint64_t v17 = *(void *)v18;
      *(void *)(v17 + 8) = *(void *)(v18 + 8);
      *(void *)(v17 + 16) = *(void *)(v18 + 16);
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      *(void *)(v17 + 40) = *(void *)(v18 + 40);
      uint64_t v23 = *(void *)(v18 + 48);
      *(unsigned char *)(v17 + 56) = *(unsigned char *)(v18 + 56);
      *(void *)(v17 + 48) = v23;
      uint64_t v24 = *(void *)(v18 + 64);
      *(unsigned char *)(v17 + 72) = *(unsigned char *)(v18 + 72);
      *(void *)(v17 + 64) = v24;
      *(void *)(v17 + 80) = *(void *)(v18 + 80);
      *(void *)(v17 + 88) = *(void *)(v18 + 88);
      *(void *)(v17 + 96) = *(void *)(v18 + 96);
      *(void *)(v17 + 104) = *(void *)(v18 + 104);
      *(void *)(v17 + 112) = *(void *)(v18 + 112);
      *(void *)(v17 + 120) = *(void *)(v18 + 120);
      uint64_t v25 = v19[12];
      v177 = (const void *)(v18 + v25);
      __dst = (void *)(v17 + v25);
      uint64_t v26 = sub_1ACE74F28();
      uint64_t v182 = *(void *)(v26 - 8);
      uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v182 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27(v177, 1, v26))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(__dst, v177, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v182 + 16))(__dst, v177, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v182 + 56))(__dst, 0, 1, v26);
      }
      uint64_t v39 = v19[13];
      uint64_t v40 = (void *)(v17 + v39);
      uint64_t v41 = (void *)(v18 + v39);
      void *v40 = *v41;
      v40[1] = v41[1];
      *(void *)(v17 + v19[14]) = *(void *)(v18 + v19[14]);
      uint64_t v42 = v19[15];
      uint64_t v43 = v17 + v42;
      uint64_t v44 = (uint64_t *)(v18 + v42);
      uint64_t v45 = *v44;
      *(unsigned char *)(v43 + 8) = *((unsigned char *)v44 + 8);
      *(void *)uint64_t v43 = v45;
      uint64_t v46 = v19[16];
      uint64_t v47 = (void *)(v17 + v46);
      uint64_t v48 = (const void *)(v18 + v46);
      swift_bridgeObjectRetain();
      uint64_t v180 = v26;
      if (v27(v48, 1, v26))
      {
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v182 + 16))(v47, v48, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v182 + 56))(v47, 0, 1, v26);
      }
      uint64_t v50 = v19[17];
      uint64_t v51 = (void *)(v17 + v50);
      uint64_t v52 = (void *)(v18 + v50);
      *uint64_t v51 = *v52;
      v51[1] = v52[1];
      *(void *)(v17 + v19[18]) = *(void *)(v18 + v19[18]);
      *(unsigned char *)(v17 + v19[19]) = *(unsigned char *)(v18 + v19[19]);
      uint64_t v53 = v19[20];
      __dsta = (void *)(v17 + v53);
      uint64_t v54 = (const void *)(v18 + v53);
      uint64_t v55 = sub_1ACE750A8();
      uint64_t v56 = *(void *)(v55 - 8);
      uint64_t v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v57(v54, 1, v55))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(__dsta, v54, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(__dsta, v54, v55);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v55);
      }
      uint64_t v59 = v19[21];
      uint64_t v60 = (void *)(v17 + v59);
      uint64_t v61 = (void *)(v18 + v59);
      void *v60 = *v61;
      v60[1] = v61[1];
      *(unsigned char *)(v17 + v19[22]) = *(unsigned char *)(v18 + v19[22]);
      *(unsigned char *)(v17 + v19[23]) = *(unsigned char *)(v18 + v19[23]);
      *(unsigned char *)(v17 + v19[24]) = *(unsigned char *)(v18 + v19[24]);
      *(unsigned char *)(v17 + v19[25]) = *(unsigned char *)(v18 + v19[25]);
      *(unsigned char *)(v17 + v19[26]) = *(unsigned char *)(v18 + v19[26]);
      *(unsigned char *)(v17 + v19[27]) = *(unsigned char *)(v18 + v19[27]);
      *(unsigned char *)(v17 + v19[28]) = *(unsigned char *)(v18 + v19[28]);
      *(void *)(v17 + v19[29]) = *(void *)(v18 + v19[29]);
      *(void *)(v17 + v19[30]) = *(void *)(v18 + v19[30]);
      *(unsigned char *)(v17 + v19[31]) = *(unsigned char *)(v18 + v19[31]);
      uint64_t v62 = v19[32];
      uint64_t v63 = (void *)(v17 + v62);
      uint64_t v64 = (void *)(v18 + v62);
      *uint64_t v63 = *v64;
      v63[1] = v64[1];
      *(void *)(v17 + v19[33]) = *(void *)(v18 + v19[33]);
      uint64_t v65 = v19[34];
      uint64_t v66 = (void *)(v17 + v65);
      uint64_t v67 = (void *)(v18 + v65);
      *uint64_t v66 = *v67;
      v66[1] = v67[1];
      uint64_t v68 = v19[35];
      uint64_t v69 = (void *)(v17 + v68);
      uint64_t v70 = (void *)(v18 + v68);
      *uint64_t v69 = *v70;
      v69[1] = v70[1];
      uint64_t v71 = v19[36];
      uint64_t v72 = (void *)(v17 + v71);
      uint64_t v73 = (const void *)(v18 + v71);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27(v73, 1, v180))
      {
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v182 + 16))(v72, v73, v180);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v182 + 56))(v72, 0, 1, v180);
      }
      uint64_t v4 = v186;
      uint64_t v75 = v19[37];
      uint64_t v76 = (void *)(v17 + v75);
      uint64_t v77 = (void *)(v18 + v75);
      *uint64_t v76 = *v77;
      v76[1] = v77[1];
      uint64_t v78 = v19[38];
      v79 = (void *)(v17 + v78);
      uint64_t v80 = (void *)(v18 + v78);
      void *v79 = *v80;
      v79[1] = v80[1];
      *(unsigned char *)(v17 + v19[39]) = *(unsigned char *)(v18 + v19[39]);
      *(unsigned char *)(v17 + v19[40]) = *(unsigned char *)(v18 + v19[40]);
      *(unsigned char *)(v17 + v19[41]) = *(unsigned char *)(v18 + v19[41]);
      *(unsigned char *)(v17 + v19[42]) = *(unsigned char *)(v18 + v19[42]);
      *(unsigned char *)(v17 + v19[43]) = *(unsigned char *)(v18 + v19[43]);
      *(unsigned char *)(v17 + v19[44]) = *(unsigned char *)(v18 + v19[44]);
      *(unsigned char *)(v17 + v19[45]) = *(unsigned char *)(v18 + v19[45]);
      uint64_t v81 = v19[46];
      uint64_t v82 = (void *)(v17 + v81);
      uint64_t v83 = (void *)(v18 + v81);
      *uint64_t v82 = *v83;
      v82[1] = v83[1];
      uint64_t v84 = *(void (**)(uint64_t, void, uint64_t, int *))(v181 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84(v17, 0, 1, v19);
      goto LABEL_44;
    }
LABEL_7:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy((void *)v17, (const void *)v18, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_45;
  }
  if (v22)
  {
    sub_1ACABFED4(v17);
    goto LABEL_7;
  }
  uint64_t v187 = v4;
  uint64_t v190 = a1;
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v18 + 48);
  *(unsigned char *)(v17 + 56) = *(unsigned char *)(v18 + 56);
  *(void *)(v17 + 48) = v30;
  uint64_t v31 = *(void *)(v18 + 64);
  *(unsigned char *)(v17 + 72) = *(unsigned char *)(v18 + 72);
  *(void *)(v17 + 64) = v31;
  *(void *)(v17 + 80) = *(void *)(v18 + 80);
  *(void *)(v17 + 88) = *(void *)(v18 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 96) = *(void *)(v18 + 96);
  *(void *)(v17 + 104) = *(void *)(v18 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 112) = *(void *)(v18 + 112);
  *(void *)(v17 + 120) = *(void *)(v18 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v19[12];
  uint64_t v33 = (void *)(v17 + v32);
  uint64_t v34 = (void *)(v18 + v32);
  uint64_t v35 = sub_1ACE74F28();
  uint64_t v184 = *(void *)(v35 - 8);
  char v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v184 + 48);
  int v37 = v36(v33, 1, v35);
  v183 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  int v38 = v36(v34, 1, v35);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v184 + 16))(v33, v34, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v184 + 56))(v33, 0, 1, v35);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v184 + 8))(v33, v35);
LABEL_24:
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v33, v34, *(void *)(*(void *)(v85 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v184 + 24))(v33, v34, v35);
LABEL_25:
  uint64_t v86 = v19[13];
  uint64_t v87 = (void *)(v17 + v86);
  uint64_t v88 = (void *)(v18 + v86);
  *uint64_t v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + v19[14]) = *(void *)(v18 + v19[14]);
  uint64_t v89 = v19[15];
  uint64_t v90 = v17 + v89;
  uint64_t v91 = v18 + v89;
  char v92 = *(unsigned char *)(v91 + 8);
  *(void *)uint64_t v90 = *(void *)v91;
  *(unsigned char *)(v90 + 8) = v92;
  uint64_t v93 = v19[16];
  uint64_t v94 = (void *)(v17 + v93);
  uint64_t v95 = (void *)(v18 + v93);
  int v96 = v36((void *)(v17 + v93), 1, v35);
  int v97 = v36(v95, 1, v35);
  uint64_t v185 = a3;
  if (v96)
  {
    if (!v97)
    {
      (*(void (**)(void *, void *, uint64_t))(v184 + 16))(v94, v95, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v184 + 56))(v94, 0, 1, v35);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v97)
  {
    (*(void (**)(void *, uint64_t))(v184 + 8))(v94, v35);
LABEL_30:
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v184 + 24))(v94, v95, v35);
LABEL_31:
  uint64_t v99 = v19[17];
  uint64_t v100 = (void *)(v17 + v99);
  uint64_t v101 = (void *)(v18 + v99);
  void *v100 = *v101;
  v100[1] = v101[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + v19[18]) = *(void *)(v18 + v19[18]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v17 + v19[19]) = *(unsigned char *)(v18 + v19[19]);
  uint64_t v102 = v19[20];
  uint64_t v103 = (void *)(v17 + v102);
  uint64_t v104 = (void *)(v18 + v102);
  uint64_t v105 = sub_1ACE750A8();
  uint64_t v106 = *(void *)(v105 - 8);
  uint64_t v107 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v106 + 48);
  int v108 = v107(v103, 1, v105);
  int v109 = v107(v104, 1, v105);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(void *, void *, uint64_t))(v106 + 16))(v103, v104, v105);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v109)
  {
    (*(void (**)(void *, uint64_t))(v106 + 8))(v103, v105);
LABEL_36:
    uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
    memcpy(v103, v104, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v106 + 24))(v103, v104, v105);
LABEL_37:
  uint64_t v111 = v19[21];
  v112 = (void *)(v17 + v111);
  v113 = (void *)(v18 + v111);
  void *v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v19[22]) = *(unsigned char *)(v18 + v19[22]);
  *(unsigned char *)(v17 + v19[23]) = *(unsigned char *)(v18 + v19[23]);
  *(unsigned char *)(v17 + v19[24]) = *(unsigned char *)(v18 + v19[24]);
  *(unsigned char *)(v17 + v19[25]) = *(unsigned char *)(v18 + v19[25]);
  *(unsigned char *)(v17 + v19[26]) = *(unsigned char *)(v18 + v19[26]);
  *(unsigned char *)(v17 + v19[27]) = *(unsigned char *)(v18 + v19[27]);
  *(unsigned char *)(v17 + v19[28]) = *(unsigned char *)(v18 + v19[28]);
  *(void *)(v17 + v19[29]) = *(void *)(v18 + v19[29]);
  *(void *)(v17 + v19[30]) = *(void *)(v18 + v19[30]);
  *(unsigned char *)(v17 + v19[31]) = *(unsigned char *)(v18 + v19[31]);
  uint64_t v114 = v19[32];
  v115 = (void *)(v17 + v114);
  v116 = (void *)(v18 + v114);
  void *v115 = *v116;
  v115[1] = v116[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + v19[33]) = *(void *)(v18 + v19[33]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v117 = v19[34];
  v118 = (void *)(v17 + v117);
  v119 = (void *)(v18 + v117);
  void *v118 = *v119;
  v118[1] = v119[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v120 = v19[35];
  v121 = (void *)(v17 + v120);
  v122 = (void *)(v18 + v120);
  void *v121 = *v122;
  v121[1] = v122[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v123 = v19[36];
  v124 = (void *)(v17 + v123);
  v125 = (const void *)(v18 + v123);
  int v126 = v183(v17 + v123, 1, v35);
  int v127 = v183((uint64_t)v125, 1, v35);
  uint64_t v4 = v187;
  if (!v126)
  {
    if (!v127)
    {
      (*(void (**)(void *, const void *, uint64_t))(v184 + 24))(v124, v125, v35);
      goto LABEL_43;
    }
    (*(void (**)(void *, uint64_t))(v184 + 8))(v124, v35);
    goto LABEL_42;
  }
  if (v127)
  {
LABEL_42:
    uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(void *, const void *, uint64_t))(v184 + 16))(v124, v125, v35);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v184 + 56))(v124, 0, 1, v35);
LABEL_43:
  uint64_t v129 = v19[37];
  v130 = (void *)(v17 + v129);
  v131 = (void *)(v18 + v129);
  void *v130 = *v131;
  v130[1] = v131[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v132 = v19[38];
  v133 = (void *)(v17 + v132);
  v134 = (void *)(v18 + v132);
  void *v133 = *v134;
  v133[1] = v134[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v19[39]) = *(unsigned char *)(v18 + v19[39]);
  *(unsigned char *)(v17 + v19[40]) = *(unsigned char *)(v18 + v19[40]);
  *(unsigned char *)(v17 + v19[41]) = *(unsigned char *)(v18 + v19[41]);
  *(unsigned char *)(v17 + v19[42]) = *(unsigned char *)(v18 + v19[42]);
  *(unsigned char *)(v17 + v19[43]) = *(unsigned char *)(v18 + v19[43]);
  *(unsigned char *)(v17 + v19[44]) = *(unsigned char *)(v18 + v19[44]);
  *(unsigned char *)(v17 + v19[45]) = *(unsigned char *)(v18 + v19[45]);
  uint64_t v135 = v19[46];
  v136 = (void *)(v17 + v135);
  v137 = (void *)(v18 + v135);
  void *v136 = *v137;
  v136[1] = v137[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_44:
  a1 = v190;
  a3 = v185;
LABEL_45:
  uint64_t v138 = *(int *)(a3 + 24);
  uint64_t v139 = a1 + v138;
  v140 = (uint64_t *)(v4 + v138);
  int v141 = *(unsigned __int8 *)(a1 + v138 + 80);
  int v142 = *(unsigned __int8 *)(v4 + v138 + 80);
  if (v141 != 2)
  {
    if (v142 == 2)
    {
      sub_1ACABF6C4(v139);
      long long v147 = *((_OWORD *)v140 + 1);
      *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
      *(_OWORD *)(v139 + 16) = v147;
      long long v149 = *((_OWORD *)v140 + 3);
      long long v148 = *((_OWORD *)v140 + 4);
      long long v150 = *((_OWORD *)v140 + 2);
      *(_DWORD *)(v139 + 79) = *(_DWORD *)((char *)v140 + 79);
      *(_OWORD *)(v139 + 48) = v149;
      *(_OWORD *)(v139 + 64) = v148;
      *(_OWORD *)(v139 + 32) = v150;
      return a1;
    }
    uint64_t v159 = *v140;
    uint64_t v160 = v140[1];
    uint64_t v161 = v140[2];
    uint64_t v162 = v140[3];
    uint64_t v163 = v140[4];
    uint64_t v164 = v140[5];
    uint64_t v192 = a1;
    uint64_t v165 = v140[6];
    uint64_t v166 = v140[7];
    char v189 = *((unsigned char *)v140 + 64);
    sub_1ACA63A78(*v140, v160, v161, v162, v163, v164, v165, v166, v189);
    uint64_t v167 = *(void *)v139;
    uint64_t v168 = *(void *)(v139 + 8);
    uint64_t v169 = *(void *)(v139 + 16);
    uint64_t v170 = *(void *)(v139 + 24);
    uint64_t v171 = *(void *)(v139 + 32);
    uint64_t v172 = *(void *)(v139 + 40);
    uint64_t v173 = *(void *)(v139 + 48);
    uint64_t v174 = *(void *)(v139 + 56);
    char v175 = *(unsigned char *)(v139 + 64);
    *(void *)uint64_t v139 = v159;
    *(void *)(v139 + 8) = v160;
    *(void *)(v139 + 16) = v161;
    *(void *)(v139 + 24) = v162;
    *(void *)(v139 + 32) = v163;
    *(void *)(v139 + 40) = v164;
    *(void *)(v139 + 48) = v165;
    *(void *)(v139 + 56) = v166;
    a1 = v192;
    *(unsigned char *)(v139 + 64) = v189;
    sub_1ACA63738(v167, v168, v169, v170, v171, v172, v173, v174, v175);
LABEL_52:
    *(unsigned char *)(v139 + 65) = *((unsigned char *)v140 + 65);
    *(void *)(v139 + 72) = v140[9];
    *(unsigned char *)(v139 + 80) = *((unsigned char *)v140 + 80);
    *(unsigned char *)(v139 + 81) = *((unsigned char *)v140 + 81);
    *(unsigned char *)(v139 + 82) = *((unsigned char *)v140 + 82);
    return a1;
  }
  if (v142 != 2)
  {
    uint64_t v151 = *v140;
    uint64_t v152 = v140[1];
    uint64_t v153 = v140[2];
    uint64_t v154 = v140[3];
    uint64_t v155 = v140[4];
    uint64_t v156 = v140[5];
    uint64_t v191 = a1;
    uint64_t v157 = v140[6];
    uint64_t v158 = v140[7];
    char v188 = *((unsigned char *)v140 + 64);
    sub_1ACA63A78(*v140, v152, v153, v154, v155, v156, v157, v158, v188);
    *(void *)uint64_t v139 = v151;
    *(void *)(v139 + 8) = v152;
    *(void *)(v139 + 16) = v153;
    *(void *)(v139 + 24) = v154;
    *(void *)(v139 + 32) = v155;
    *(void *)(v139 + 40) = v156;
    *(void *)(v139 + 48) = v157;
    *(void *)(v139 + 56) = v158;
    a1 = v191;
    *(unsigned char *)(v139 + 64) = v188;
    goto LABEL_52;
  }
  long long v143 = *((_OWORD *)v140 + 1);
  *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
  *(_OWORD *)(v139 + 16) = v143;
  long long v144 = *((_OWORD *)v140 + 2);
  long long v145 = *((_OWORD *)v140 + 3);
  long long v146 = *((_OWORD *)v140 + 4);
  *(_DWORD *)(v139 + 79) = *(_DWORD *)((char *)v140 + 79);
  *(_OWORD *)(v139 + 48) = v145;
  *(_OWORD *)(v139 + 64) = v146;
  *(_OWORD *)(v139 + 32) = v144;
  return a1;
}

uint64_t initializeWithTake for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  unsigned __int8 v10 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v11;
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((unsigned char *)v8 + 56) = *((unsigned char *)v9 + 56);
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((unsigned char *)v8 + 72) = *((unsigned char *)v9 + 72);
    long long v14 = v9[6];
    v8[5] = v9[5];
    v8[6] = v14;
    v8[7] = v9[7];
    uint64_t v15 = v10[12];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = sub_1ACE74F28();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v47(v17, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[13]) = *(_OWORD *)((char *)v9 + v10[13]);
    *(void *)((char *)v8 + v10[14]) = *(void *)((char *)v9 + v10[14]);
    uint64_t v21 = v10[15];
    int v22 = (char *)v8 + v21;
    uint64_t v23 = (char *)v9 + v21;
    v22[8] = v23[8];
    *(void *)int v22 = *(void *)v23;
    uint64_t v24 = v10[16];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = (char *)v9 + v24;
    uint64_t v46 = v3;
    uint64_t v44 = v19;
    if (v47((char *)v9 + v24, 1, v18))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v26, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[17]) = *(_OWORD *)((char *)v9 + v10[17]);
    *(void *)((char *)v8 + v10[18]) = *(void *)((char *)v9 + v10[18]);
    *((unsigned char *)v8 + v10[19]) = *((unsigned char *)v9 + v10[19]);
    uint64_t v28 = v10[20];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    uint64_t v31 = sub_1ACE750A8();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    uint64_t v3 = v46;
    *(_OWORD *)((char *)v8 + v10[21]) = *(_OWORD *)((char *)v9 + v10[21]);
    *((unsigned char *)v8 + v10[22]) = *((unsigned char *)v9 + v10[22]);
    *((unsigned char *)v8 + v10[23]) = *((unsigned char *)v9 + v10[23]);
    *((unsigned char *)v8 + v10[24]) = *((unsigned char *)v9 + v10[24]);
    *((unsigned char *)v8 + v10[25]) = *((unsigned char *)v9 + v10[25]);
    *((unsigned char *)v8 + v10[26]) = *((unsigned char *)v9 + v10[26]);
    *((unsigned char *)v8 + v10[27]) = *((unsigned char *)v9 + v10[27]);
    *((unsigned char *)v8 + v10[28]) = *((unsigned char *)v9 + v10[28]);
    *(void *)((char *)v8 + v10[29]) = *(void *)((char *)v9 + v10[29]);
    *(void *)((char *)v8 + v10[30]) = *(void *)((char *)v9 + v10[30]);
    *((unsigned char *)v8 + v10[31]) = *((unsigned char *)v9 + v10[31]);
    *(_OWORD *)((char *)v8 + v10[32]) = *(_OWORD *)((char *)v9 + v10[32]);
    *(void *)((char *)v8 + v10[33]) = *(void *)((char *)v9 + v10[33]);
    *(_OWORD *)((char *)v8 + v10[34]) = *(_OWORD *)((char *)v9 + v10[34]);
    *(_OWORD *)((char *)v8 + v10[35]) = *(_OWORD *)((char *)v9 + v10[35]);
    uint64_t v34 = v10[36];
    uint64_t v35 = (char *)v8 + v34;
    char v36 = (char *)v9 + v34;
    if (v47((char *)v9 + v34, 1, v18))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v35, v36, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v35, 0, 1, v18);
    }
    *(_OWORD *)((char *)v8 + v10[37]) = *(_OWORD *)((char *)v9 + v10[37]);
    *(_OWORD *)((char *)v8 + v10[38]) = *(_OWORD *)((char *)v9 + v10[38]);
    *((unsigned char *)v8 + v10[39]) = *((unsigned char *)v9 + v10[39]);
    *((unsigned char *)v8 + v10[40]) = *((unsigned char *)v9 + v10[40]);
    *((unsigned char *)v8 + v10[41]) = *((unsigned char *)v9 + v10[41]);
    *((unsigned char *)v8 + v10[42]) = *((unsigned char *)v9 + v10[42]);
    *((unsigned char *)v8 + v10[43]) = *((unsigned char *)v9 + v10[43]);
    *((unsigned char *)v8 + v10[44]) = *((unsigned char *)v9 + v10[44]);
    *((unsigned char *)v8 + v10[45]) = *((unsigned char *)v9 + v10[45]);
    *(_OWORD *)((char *)v8 + v10[46]) = *(_OWORD *)((char *)v9 + v10[46]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v45 + 56))(v8, 0, 1, v10);
  }
  uint64_t v38 = *(int *)(v3 + 24);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  long long v41 = *(_OWORD *)(v40 + 48);
  *(_OWORD *)(v39 + 32) = *(_OWORD *)(v40 + 32);
  *(_OWORD *)(v39 + 48) = v41;
  *(_OWORD *)(v39 + 64) = *(_OWORD *)(v40 + 64);
  *(_DWORD *)(v39 + 79) = *(_DWORD *)(v40 + 79);
  long long v42 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v42;
  return a1;
}

uint64_t assignWithTake for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (_OWORD *)a2;
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = v4[1];
  *(_OWORD *)a1 = *v4;
  *(_OWORD *)(a1 + 16) = v11;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_1ACA63688(v7, v8, v9, v10, v12);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (char *)v4 + v13;
  uint64_t v16 = (int *)type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18((uint64_t)v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v153 = v4;
      long long v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v21;
      *(_OWORD *)(v14 + 32) = *((_OWORD *)v15 + 2);
      *(void *)(v14 + 48) = *((void *)v15 + 6);
      *(unsigned char *)(v14 + 56) = v15[56];
      *(void *)(v14 + 64) = *((void *)v15 + 8);
      *(unsigned char *)(v14 + 72) = v15[72];
      long long v22 = *((_OWORD *)v15 + 6);
      *(_OWORD *)(v14 + 80) = *((_OWORD *)v15 + 5);
      *(_OWORD *)(v14 + 96) = v22;
      *(_OWORD *)(v14 + 112) = *((_OWORD *)v15 + 7);
      uint64_t v23 = v16[12];
      uint64_t v24 = (void *)(v14 + v23);
      uint64_t v25 = &v15[v23];
      uint64_t v26 = sub_1ACE74F28();
      uint64_t v27 = *(void *)(v26 - 8);
      long long v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      if (v150(v25, 1, v26))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(_OWORD *)(v14 + v16[13]) = *(_OWORD *)&v15[v16[13]];
      *(void *)(v14 + v16[14]) = *(void *)&v15[v16[14]];
      uint64_t v43 = v16[15];
      uint64_t v44 = v14 + v43;
      uint64_t v45 = &v15[v43];
      *(unsigned char *)(v44 + 8) = v45[8];
      *(void *)uint64_t v44 = *(void *)v45;
      uint64_t v46 = v16[16];
      uint64_t v47 = (void *)(v14 + v46);
      uint64_t v48 = &v15[v46];
      uint64_t v155 = a3;
      uint64_t v149 = v27;
      if (v150(&v15[v46], 1, v26))
      {
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 32))(v47, v48, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v47, 0, 1, v26);
      }
      *(_OWORD *)(v14 + v16[17]) = *(_OWORD *)&v15[v16[17]];
      *(void *)(v14 + v16[18]) = *(void *)&v15[v16[18]];
      *(unsigned char *)(v14 + v16[19]) = v15[v16[19]];
      uint64_t v50 = v16[20];
      uint64_t v51 = (void *)(v14 + v50);
      uint64_t v52 = &v15[v50];
      uint64_t v53 = sub_1ACE750A8();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      a3 = v155;
      *(_OWORD *)(v14 + v16[21]) = *(_OWORD *)&v15[v16[21]];
      *(unsigned char *)(v14 + v16[22]) = v15[v16[22]];
      *(unsigned char *)(v14 + v16[23]) = v15[v16[23]];
      *(unsigned char *)(v14 + v16[24]) = v15[v16[24]];
      *(unsigned char *)(v14 + v16[25]) = v15[v16[25]];
      *(unsigned char *)(v14 + v16[26]) = v15[v16[26]];
      *(unsigned char *)(v14 + v16[27]) = v15[v16[27]];
      *(unsigned char *)(v14 + v16[28]) = v15[v16[28]];
      *(void *)(v14 + v16[29]) = *(void *)&v15[v16[29]];
      *(void *)(v14 + v16[30]) = *(void *)&v15[v16[30]];
      *(unsigned char *)(v14 + v16[31]) = v15[v16[31]];
      *(_OWORD *)(v14 + v16[32]) = *(_OWORD *)&v15[v16[32]];
      *(void *)(v14 + v16[33]) = *(void *)&v15[v16[33]];
      *(_OWORD *)(v14 + v16[34]) = *(_OWORD *)&v15[v16[34]];
      *(_OWORD *)(v14 + v16[35]) = *(_OWORD *)&v15[v16[35]];
      uint64_t v56 = v16[36];
      uint64_t v57 = (void *)(v14 + v56);
      uint64_t v58 = &v15[v56];
      if (v150(&v15[v56], 1, v26))
      {
        uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v149 + 32))(v57, v58, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v149 + 56))(v57, 0, 1, v26);
      }
      *(_OWORD *)(v14 + v16[37]) = *(_OWORD *)&v15[v16[37]];
      *(_OWORD *)(v14 + v16[38]) = *(_OWORD *)&v15[v16[38]];
      *(unsigned char *)(v14 + v16[39]) = v15[v16[39]];
      *(unsigned char *)(v14 + v16[40]) = v15[v16[40]];
      *(unsigned char *)(v14 + v16[41]) = v15[v16[41]];
      *(unsigned char *)(v14 + v16[42]) = v15[v16[42]];
      *(unsigned char *)(v14 + v16[43]) = v15[v16[43]];
      *(unsigned char *)(v14 + v16[44]) = v15[v16[44]];
      *(unsigned char *)(v14 + v16[45]) = v15[v16[45]];
      *(_OWORD *)(v14 + v16[46]) = *(_OWORD *)&v15[v16[46]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_48;
    }
LABEL_7:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
    memcpy((void *)v14, v15, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_49;
  }
  if (v20)
  {
    sub_1ACABFED4(v14);
    goto LABEL_7;
  }
  uint64_t v153 = v4;
  uint64_t v154 = a3;
  uint64_t v30 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v15 + 3);
  *(void *)(v14 + 16) = *((void *)v15 + 2);
  *(void *)(v14 + 24) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *((void *)v15 + 5);
  *(void *)(v14 + 32) = *((void *)v15 + 4);
  *(void *)(v14 + 40) = v32;
  swift_bridgeObjectRelease();
  *(void *)(v14 + 48) = *((void *)v15 + 6);
  *(unsigned char *)(v14 + 56) = v15[56];
  *(void *)(v14 + 64) = *((void *)v15 + 8);
  *(unsigned char *)(v14 + 72) = v15[72];
  uint64_t v33 = *((void *)v15 + 11);
  *(void *)(v14 + 80) = *((void *)v15 + 10);
  *(void *)(v14 + 88) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v15 + 13);
  *(void *)(v14 + 96) = *((void *)v15 + 12);
  *(void *)(v14 + 104) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v15 + 15);
  *(void *)(v14 + 112) = *((void *)v15 + 14);
  *(void *)(v14 + 120) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = v16[12];
  uint64_t v37 = (void *)(v14 + v36);
  uint64_t v38 = &v15[v36];
  uint64_t v39 = sub_1ACE74F28();
  uint64_t v151 = *(void *)(v39 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v151 + 48);
  int v41 = v40(v37, 1, v39);
  uint64_t v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
  int v42 = v40(v38, 1, v39);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v151 + 32))(v37, v38, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v151 + 56))(v37, 0, 1, v39);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v151 + 8))(v37, v39);
LABEL_24:
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v37, v38, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v151 + 40))(v37, v38, v39);
LABEL_25:
  uint64_t v61 = v16[13];
  uint64_t v62 = (void *)(v14 + v61);
  uint64_t v63 = &v15[v61];
  uint64_t v65 = *(void *)v63;
  uint64_t v64 = *((void *)v63 + 1);
  *uint64_t v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[14]) = *(void *)&v15[v16[14]];
  uint64_t v66 = v16[15];
  uint64_t v67 = v14 + v66;
  uint64_t v68 = &v15[v66];
  *(void *)uint64_t v67 = *(void *)v68;
  *(unsigned char *)(v67 + 8) = v68[8];
  uint64_t v69 = v16[16];
  uint64_t v70 = (void *)(v14 + v69);
  uint64_t v71 = &v15[v69];
  int v72 = v40((void *)(v14 + v69), 1, v39);
  int v73 = v40(v71, 1, v39);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(void *, char *, uint64_t))(v151 + 32))(v70, v71, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v151 + 56))(v70, 0, 1, v39);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v73)
  {
    (*(void (**)(void *, uint64_t))(v151 + 8))(v70, v39);
LABEL_30:
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v151 + 40))(v70, v71, v39);
LABEL_31:
  uint64_t v75 = v16[17];
  uint64_t v76 = (void *)(v14 + v75);
  uint64_t v77 = &v15[v75];
  uint64_t v79 = *(void *)v77;
  uint64_t v78 = *((void *)v77 + 1);
  *uint64_t v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[18]) = *(void *)&v15[v16[18]];
  swift_release();
  *(unsigned char *)(v14 + v16[19]) = v15[v16[19]];
  uint64_t v80 = v16[20];
  uint64_t v81 = (void *)(v14 + v80);
  uint64_t v82 = &v15[v80];
  uint64_t v83 = sub_1ACE750A8();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v84 + 48);
  long long v148 = v81;
  LODWORD(v81) = v85(v81, 1, v83);
  int v86 = v85(v82, 1, v83);
  if (v81)
  {
    if (v86)
    {
      size_t v87 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8) + 64);
      uint64_t v88 = v148;
LABEL_36:
      memcpy(v88, v82, v87);
      goto LABEL_41;
    }
    (*(void (**)(void *, char *, uint64_t))(v84 + 32))(v148, v82, v83);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v148, 0, 1, v83);
  }
  else
  {
    if (v86)
    {
      (*(void (**)(void *, uint64_t))(v84 + 8))(v148, v83);
      size_t v87 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140) - 8) + 64);
      uint64_t v88 = v148;
      goto LABEL_36;
    }
    (*(void (**)(void *, char *, uint64_t))(v84 + 40))(v148, v82, v83);
  }
LABEL_41:
  uint64_t v89 = v16[21];
  uint64_t v90 = (void *)(v14 + v89);
  uint64_t v91 = &v15[v89];
  uint64_t v93 = *(void *)v91;
  uint64_t v92 = *((void *)v91 + 1);
  *uint64_t v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v16[22]) = v15[v16[22]];
  *(unsigned char *)(v14 + v16[23]) = v15[v16[23]];
  *(unsigned char *)(v14 + v16[24]) = v15[v16[24]];
  *(unsigned char *)(v14 + v16[25]) = v15[v16[25]];
  *(unsigned char *)(v14 + v16[26]) = v15[v16[26]];
  *(unsigned char *)(v14 + v16[27]) = v15[v16[27]];
  *(unsigned char *)(v14 + v16[28]) = v15[v16[28]];
  *(void *)(v14 + v16[29]) = *(void *)&v15[v16[29]];
  *(void *)(v14 + v16[30]) = *(void *)&v15[v16[30]];
  *(unsigned char *)(v14 + v16[31]) = v15[v16[31]];
  uint64_t v94 = v16[32];
  uint64_t v95 = (void *)(v14 + v94);
  int v96 = &v15[v94];
  uint64_t v98 = *(void *)v96;
  uint64_t v97 = *((void *)v96 + 1);
  *uint64_t v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  *(void *)(v14 + v16[33]) = *(void *)&v15[v16[33]];
  swift_bridgeObjectRelease();
  uint64_t v99 = v16[34];
  uint64_t v100 = (void *)(v14 + v99);
  uint64_t v101 = &v15[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  void *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = v16[35];
  uint64_t v105 = (void *)(v14 + v104);
  uint64_t v106 = &v15[v104];
  uint64_t v108 = *(void *)v106;
  uint64_t v107 = *((void *)v106 + 1);
  *uint64_t v105 = v108;
  v105[1] = v107;
  swift_bridgeObjectRelease();
  uint64_t v109 = v16[36];
  uint64_t v110 = (void *)(v14 + v109);
  uint64_t v111 = &v15[v109];
  int v112 = v152(v14 + v109, 1, v39);
  int v113 = v152((uint64_t)v111, 1, v39);
  a3 = v154;
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(void *, char *, uint64_t))(v151 + 40))(v110, v111, v39);
      goto LABEL_47;
    }
    (*(void (**)(void *, uint64_t))(v151 + 8))(v110, v39);
    goto LABEL_46;
  }
  if (v113)
  {
LABEL_46:
    uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(void *, char *, uint64_t))(v151 + 32))(v110, v111, v39);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v151 + 56))(v110, 0, 1, v39);
LABEL_47:
  uint64_t v115 = v16[37];
  v116 = (void *)(v14 + v115);
  uint64_t v117 = &v15[v115];
  uint64_t v119 = *(void *)v117;
  uint64_t v118 = *((void *)v117 + 1);
  void *v116 = v119;
  v116[1] = v118;
  swift_bridgeObjectRelease();
  uint64_t v120 = v16[38];
  v121 = (void *)(v14 + v120);
  v122 = &v15[v120];
  uint64_t v124 = *(void *)v122;
  uint64_t v123 = *((void *)v122 + 1);
  void *v121 = v124;
  v121[1] = v123;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v16[39]) = v15[v16[39]];
  *(unsigned char *)(v14 + v16[40]) = v15[v16[40]];
  *(unsigned char *)(v14 + v16[41]) = v15[v16[41]];
  *(unsigned char *)(v14 + v16[42]) = v15[v16[42]];
  *(unsigned char *)(v14 + v16[43]) = v15[v16[43]];
  *(unsigned char *)(v14 + v16[44]) = v15[v16[44]];
  *(unsigned char *)(v14 + v16[45]) = v15[v16[45]];
  uint64_t v125 = v16[46];
  int v126 = (void *)(v14 + v125);
  int v127 = &v15[v125];
  uint64_t v129 = *(void *)v127;
  uint64_t v128 = *((void *)v127 + 1);
  *int v126 = v129;
  v126[1] = v128;
  swift_bridgeObjectRelease();
LABEL_48:
  uint64_t v4 = v153;
LABEL_49:
  uint64_t v130 = *(int *)(a3 + 24);
  uint64_t v131 = a1 + v130;
  uint64_t v132 = (char *)v4 + v130;
  if (*(unsigned char *)(a1 + v130 + 80) != 2)
  {
    if (v132[80] != 2)
    {
      char v135 = v132[64];
      uint64_t v136 = *(void *)v131;
      uint64_t v137 = *(void *)(v131 + 8);
      uint64_t v138 = *(void *)(v131 + 16);
      uint64_t v139 = *(void *)(v131 + 24);
      uint64_t v140 = *(void *)(v131 + 32);
      uint64_t v141 = *(void *)(v131 + 40);
      uint64_t v142 = *(void *)(v131 + 48);
      uint64_t v143 = *(void *)(v131 + 56);
      char v144 = *(unsigned char *)(v131 + 64);
      long long v145 = *((_OWORD *)v132 + 1);
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      *(_OWORD *)(v131 + 16) = v145;
      long long v146 = *((_OWORD *)v132 + 3);
      *(_OWORD *)(v131 + 32) = *((_OWORD *)v132 + 2);
      *(_OWORD *)(v131 + 48) = v146;
      *(unsigned char *)(v131 + 64) = v135;
      sub_1ACA63738(v136, v137, v138, v139, v140, v141, v142, v143, v144);
      *(unsigned char *)(v131 + 65) = v132[65];
      *(void *)(v131 + 72) = *((void *)v132 + 9);
      *(unsigned char *)(v131 + 80) = v132[80];
      *(unsigned char *)(v131 + 81) = v132[81];
      *(unsigned char *)(v131 + 82) = v132[82];
      return a1;
    }
    sub_1ACABF6C4(v131);
  }
  long long v133 = *((_OWORD *)v132 + 3);
  *(_OWORD *)(v131 + 32) = *((_OWORD *)v132 + 2);
  *(_OWORD *)(v131 + 48) = v133;
  *(_OWORD *)(v131 + 64) = *((_OWORD *)v132 + 4);
  *(_DWORD *)(v131 + 79) = *(_DWORD *)(v132 + 79);
  long long v134 = *((_OWORD *)v132 + 1);
  *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
  *(_OWORD *)(v131 + 16) = v134;
  return a1;
}

uint64_t getEnumTagSinglePayload for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD16A5C);
}

uint64_t sub_1ACD16A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 80);
    if (v12 >= 2) {
      int v13 = ((v12 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v13 = -2;
    }
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UpNextEpisodeListBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD16B58);
}

uint64_t sub_1ACD16B58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 80) = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for UpNextEpisodeListBuilder()
{
  uint64_t result = qword_1E99F5170;
  if (!qword_1E99F5170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1ACD16C6C()
{
  sub_1ACB8F440();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1ACD16D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACD16D74()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD16DB4()
{
  return sub_1ACD12E40(*(BOOL **)(v0 + 16));
}

uint64_t sub_1ACD16DC0()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD16DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v10 - 8);
  unsigned int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACBBE50C(a3, (uint64_t)v12);
  int v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a4;
  v13[7] = a5;
  swift_retain();
  swift_retain();
  sub_1ACA47C2C((uint64_t)v12, (uint64_t)&unk_1E99F51B0, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1ACD16EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  v6[4] = a4;
  v6[5] = a5;
  uint64_t v9 = (uint64_t (*)(void *))((char *)a6 + *a6);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1ACD16FA0;
  return v9(v6 + 2);
}

uint64_t sub_1ACD16FA0()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACD1712C;
  }
  else {
    uint64_t v2 = sub_1ACD170B4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACD170B4()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 32);
  *(unsigned char *)(v0 + 24) = 0;
  v1(v0 + 16);
  sub_1ACAC1E88(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1ACD1712C()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void (*)(void **))v0[4];
  uint64_t v6 = v1;
  char v7 = 1;
  id v3 = v1;
  v2(&v6);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1ACD171C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716A8);
  uint64_t v36 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  int v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771658);
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE767A8();
  uint64_t v15 = sub_1ACE767F8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 0, 1, v15);
  sub_1ACAFA130(a1, (uint64_t)v39);
  uint64_t v16 = swift_allocObject();
  long long v17 = v39[3];
  *(_OWORD *)(v16 + 48) = v39[2];
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 80) = v39[4];
  *(void *)(v16 + 96) = v40;
  long long v18 = v39[1];
  *(_OWORD *)(v16 + 16) = v39[0];
  *(_OWORD *)(v16 + 32) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771728);
  sub_1ACBBE50C((uint64_t)v11, (uint64_t)v8);
  unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  sub_1ACBDFA18((uint64_t)v8, v21 + v19);
  long long v22 = (void *)(v21 + v20);
  *long long v22 = &unk_1E99F51A0;
  v22[1] = v16;
  uint64_t v23 = sub_1ACE75A08();
  sub_1ACA50E78((uint64_t)v11, &qword_1EB7705F0);
  id v38 = *(id *)(a1 + 80);
  id v24 = v38;
  *(void *)&v39[0] = v23;
  uint64_t v25 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB771720, &qword_1EB771728);
  sub_1ACA93A6C();
  id v26 = v24;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  swift_release();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771668);
  sub_1ACA51EA4(&qword_1EB7716A0, &qword_1EB7716A8);
  sub_1ACA51EA4(&qword_1EB771660, &qword_1EB771668);
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  sub_1ACE75C68();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v28);
  sub_1ACA51EA4(&qword_1EB771650, &qword_1EB771658);
  uint64_t v29 = v35;
  uint64_t v30 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v29);
  return v30;
}

uint64_t AsyncDownloadedAssetIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a3;
  uint64_t v41 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v42 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v17 = (char *)&v41 - v16;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716A8);
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  unint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771658);
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v45 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE767A8();
  uint64_t v21 = sub_1ACE767F8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 0, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  sub_1ACAFA130(a1, (uint64_t)v51);
  unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v43;
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  unint64_t v25 = v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v26 = v51[3];
  *(_OWORD *)(v25 + 32) = v51[2];
  *(_OWORD *)(v25 + 48) = v26;
  *(_OWORD *)(v25 + 64) = v51[4];
  *(void *)(v25 + 80) = v52;
  long long v27 = v51[1];
  *(_OWORD *)unint64_t v25 = v51[0];
  *(_OWORD *)(v25 + 16) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771728);
  sub_1ACBBE50C((uint64_t)v17, (uint64_t)v14);
  unint64_t v28 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v29 = swift_allocObject();
  sub_1ACBDFA18((uint64_t)v14, v29 + v28);
  uint64_t v30 = (void *)(v29 + ((v13 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v30 = &unk_1E99F5188;
  v30[1] = v23;
  uint64_t v31 = sub_1ACE75A08();
  sub_1ACA50E78((uint64_t)v17, &qword_1EB7705F0);
  id v50 = *(id *)(v41 + 80);
  id v32 = v50;
  *(void *)&v51[0] = v31;
  uint64_t v33 = sub_1ACE76CA8();
  uint64_t v34 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v44, 1, 1, v33);
  sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB771720, &qword_1EB771728);
  sub_1ACA93A6C();
  id v35 = v32;
  sub_1ACE75CA8();
  sub_1ACA50E78(v34, &qword_1EB7669C8);

  swift_release();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771668);
  sub_1ACA51EA4(&qword_1EB7716A0, &qword_1EB7716A8);
  sub_1ACA51EA4(&qword_1EB771660, &qword_1EB771668);
  uint64_t v36 = v45;
  uint64_t v37 = v46;
  sub_1ACE75C68();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v37);
  sub_1ACA51EA4(&qword_1EB771650, &qword_1EB771658);
  uint64_t v38 = v47;
  uint64_t v39 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v38);
  return v39;
}

uint64_t sub_1ACD17D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  void *v9 = v5;
  v9[1] = sub_1ACD17E58;
  return v11(a3, a4, a5);
}

uint64_t sub_1ACD17E58(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1ACD18908, 0, 0);
  }
}

uint64_t sub_1ACD17FA4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  uint64_t v4 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_0(v4);
  __swift_destroy_boxed_opaque_existential_0(v4 + 40);

  return swift_deallocObject();
}

uint64_t sub_1ACD18054(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1ACA51034;
  return sub_1ACD17D48(a1, v7, v8, v4, v5);
}

uint64_t sub_1ACD18178()
{
  return sub_1ACE763B8();
}

uint64_t sub_1ACD181FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of DownloadedAssetIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AsyncDownloadedAssetIssueIdentifier.issues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1ACB7B504;
  return v9(a1, a2, a3);
}

uint64_t sub_1ACD1838C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1ACD18428;
  return AbandonedStreamIssueIdentifier.issues(for:)(a3);
}

uint64_t sub_1ACD18428(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1ACD18574, 0, 0);
  }
}

uint64_t sub_1ACD18574()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ACD18598()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1ACD185E0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1ACA50B84;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E99F5198 + dword_1E99F5198);
  return v5(a1, (uint64_t)v5, v1 + 16);
}

uint64_t sub_1ACD18698(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1ACD16DD0(a1, a2, v7, v9, v10);
}

uint64_t sub_1ACD1874C()
{
  return sub_1ACA51EA4(&qword_1EB771888, &qword_1EB770B98);
}

uint64_t sub_1ACD1878C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD187D4()
{
  uint64_t v2 = *(int **)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1ACA50B84;
  *(_OWORD *)(v3 + 32) = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 48) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1ACD16FA0;
  return v7(v3 + 16);
}

uint64_t dispatch thunk of FileManaging.createDirectory(url:createIntermediates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FileManaging.removeItem(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FileManaging.removeItem(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FileManaging.fileExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FileManaging.fileExists(at:isDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FileManaging.directoryExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FileManaging.subpathsOfDirectory(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FileManaging.contentsOfDirectory(at:includingPropertiesForKeys:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of FileManaging.moveItem(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of FileManaging.temporaryDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t *initializeBufferWithCopyOfBuffer for FileError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1ACE74F28();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for FileError(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for FileError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for FileError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for FileError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for FileError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FileError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD19184);
}

uint64_t sub_1ACD19184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FileError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD19204);
}

uint64_t sub_1ACD19204(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1ACD19288(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1ACD192F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for FileError()
{
  uint64_t result = qword_1E99F51B8;
  if (!qword_1E99F51B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACD193AC()
{
  uint64_t result = sub_1ACE74F28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t static AlbumStringBuilder.platformAwareAlbumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1ACD1987C(a3, a4, a5, a6);
}

uint64_t static AlbumStringBuilder.albumString(podcastTitle:episodeNumber:seasonNumber:isSerialType:pubDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1ACD19464(a3, a4, a5, a6);
}

uint64_t AlbumStringBuilder.deinit()
{
  return v0;
}

uint64_t AlbumStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ACD19464(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v27 - v10;
  if (a3)
  {
    if (a2 > 0)
    {
      if (a1 >= 1)
      {
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1ACE84820;
        uint64_t v13 = MEMORY[0x1E4FBC1C8];
        uint64_t v14 = MEMORY[0x1E4FBC240];
        *(void *)(v12 + 56) = MEMORY[0x1E4FBC1C8];
        *(void *)(v12 + 64) = v14;
        *(void *)(v12 + 32) = a2;
        *(void *)(v12 + 96) = v13;
        *(void *)(v12 + 104) = v14;
        *(void *)(v12 + 72) = a1;
        uint64_t v15 = sub_1ACE76188();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      if (qword_1EB7730A8 != -1) {
        swift_once();
      }
      sub_1ACE74C48();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = MEMORY[0x1E4FBC1C8];
      *(_OWORD *)(v23 + 16) = xmmword_1ACE843F0;
      uint64_t v25 = MEMORY[0x1E4FBC240];
      *(void *)(v23 + 56) = v24;
      *(void *)(v23 + 64) = v25;
      *(void *)(v23 + 32) = a2;
LABEL_17:
      uint64_t v15 = sub_1ACE76188();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return v15;
    }
    if (a1 > 0)
    {
      if (qword_1EB7730A8 != -1) {
        swift_once();
      }
      sub_1ACE74C48();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v16 = swift_allocObject();
      uint64_t v17 = MEMORY[0x1E4FBC1C8];
      *(_OWORD *)(v16 + 16) = xmmword_1ACE843F0;
      uint64_t v18 = MEMORY[0x1E4FBC240];
      *(void *)(v16 + 56) = v17;
      *(void *)(v16 + 64) = v18;
      *(void *)(v16 + 32) = a1;
      goto LABEL_17;
    }
  }
  sub_1ACA72A5C(a4, (uint64_t)&v27 - v10);
  uint64_t v19 = sub_1ACE750A8();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_1ACA3E034((uint64_t)v11);
    return 0;
  }
  else
  {
    uint64_t v21 = (void *)sub_1ACE75008();
    id v22 = objc_msgSend(v21, sel_verboseDisplayStringWithoutTime);

    uint64_t v15 = sub_1ACE761B8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  }
  return v15;
}

uint64_t sub_1ACD1987C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(self, sel_isRunningOnHomepod)) {
    return sub_1ACD19464(a1, a2, a3 & 1, a4);
  }
  if (a3)
  {
    if (a2 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v11 = swift_allocObject();
      if (a1 < 1)
      {
        uint64_t v24 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v11 + 16) = xmmword_1ACE843F0;
        uint64_t v25 = MEMORY[0x1E4FBC240];
        *(void *)(v11 + 56) = v24;
        *(void *)(v11 + 64) = v25;
        *(void *)(v11 + 32) = a2;
      }
      else
      {
        *(_OWORD *)(v11 + 16) = xmmword_1ACE84820;
        uint64_t v12 = MEMORY[0x1E4FBC1C8];
        uint64_t v13 = MEMORY[0x1E4FBC240];
        *(void *)(v11 + 56) = MEMORY[0x1E4FBC1C8];
        *(void *)(v11 + 64) = v13;
        *(void *)(v11 + 32) = a2;
        *(void *)(v11 + 96) = v12;
        *(void *)(v11 + 104) = v13;
        *(void *)(v11 + 72) = a1;
      }
      return sub_1ACE761F8();
    }
    if (a1 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v17 = swift_allocObject();
      uint64_t v18 = MEMORY[0x1E4FBC1C8];
      *(_OWORD *)(v17 + 16) = xmmword_1ACE843F0;
      uint64_t v19 = MEMORY[0x1E4FBC240];
      *(void *)(v17 + 56) = v18;
      *(void *)(v17 + 64) = v19;
      *(void *)(v17 + 32) = a1;
      return sub_1ACE761F8();
    }
  }
  sub_1ACA72A5C(a4, (uint64_t)v10);
  uint64_t v20 = sub_1ACE750A8();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1)
  {
    sub_1ACA3E034((uint64_t)v10);
    return 0;
  }
  else
  {
    id v22 = (void *)sub_1ACE75008();
    id v23 = objc_msgSend(v22, sel_verboseDisplayStringWithoutTime);

    uint64_t v15 = sub_1ACE761B8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
  }
  return v15;
}

uint64_t type metadata accessor for AlbumStringBuilder()
{
  return self;
}

uint64_t method lookup function for AlbumStringBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AlbumStringBuilder);
}

uint64_t AnyAssetSource.init<A>(source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)(uint64_t a1)@<X8>)
{
  uint64_t v12 = *(void *)(a4 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  *((void *)v14 + 5) = a5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[v13], a1, a4);
  *a6 = sub_1ACD19E50;
  a6[1] = (uint64_t (*)(uint64_t))v14;
  return result;
}

uint64_t sub_1ACD19C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(a6 + 40))(a1, a5, a6, v11);
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  return v14;
}

uint64_t sub_1ACD19DC8()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACD19E50(uint64_t a1)
{
  return sub_1ACD19C80(a1, (uint64_t)v1+ ((*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80)), v1[2], v1[3], v1[4], v1[5]);
}

uint64_t AnyAssetSource.fetch(asset:)()
{
  return (*v0)();
}

uint64_t sub_1ACD19EBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnyAssetSource.fetch(asset:)();
  *a1 = result;
  return result;
}

uint64_t AssetSource.eraseToAnyAssetSource()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(uint64_t a1)@<X8>)
{
  __n128 v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v9, v3, a1, v7);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  return AnyAssetSource.init<A>(source:)((uint64_t)v9, AssociatedTypeWitness, v12, a1, a2, a3);
}

unint64_t sub_1ACD1A00C()
{
  unint64_t result = qword_1E99F51C8;
  if (!qword_1E99F51C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51C8);
  }
  return result;
}

uint64_t type metadata accessor for AnyAssetSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t LibraryEntity.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 != 1)
    {
      uint64_t v5 = 0x2D6C656E6E616843;
      sub_1ACA55E4C();
      sub_1ACE770B8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      return v5;
    }
    uint64_t v3 = 0x2D776F6853;
  }
  else
  {
    uint64_t v3 = 0x2D65646F73697045;
  }
  uint64_t v5 = v3;
  sub_1ACE762C8();
  return v5;
}

uint64_t LibraryEntity.typeName.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return 0x65646F73697045;
  }
  if (a3 == 1) {
    return 2003789907;
  }
  return 0x6C656E6E616843;
}

uint64_t LibraryEntity.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 > 1u)
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE76108();
  }
}

uint64_t sub_1ACD1A210(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1AC0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1A24C(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1AC0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACD1A288()
{
  uint64_t v1 = 2003789939;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C656E6E616863;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65646F73697065;
  }
}

uint64_t sub_1ACD1A2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACD1AD08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACD1A304(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1ABB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1A340(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1ABB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACD1A37C(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1ACB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1A3B8(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1ACB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1ACD1A3F4(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1AC60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1A430(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1AC60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LibraryEntity.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v29 = a2;
  int v31 = a4;
  uint64_t v28 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771DE0);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771DD8);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB771DE8);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771DD0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1ABB8();
  sub_1ACE77C78();
  if ((_BYTE)v31)
  {
    if (v31 == 1)
    {
      char v33 = 1;
      sub_1ACD1AC60();
      sub_1ACE776D8();
      uint64_t v17 = v24;
      sub_1ACE77748();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v23 + 8);
      uint64_t v19 = v9;
    }
    else
    {
      char v34 = 2;
      sub_1ACD1AC0C();
      uint64_t v20 = v25;
      sub_1ACE776D8();
      uint64_t v30 = v29;
      sub_1ACA80994();
      uint64_t v17 = v27;
      sub_1ACE77788();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v26 + 8);
      uint64_t v19 = v20;
    }
    v18(v19, v17);
  }
  else
  {
    char v32 = 0;
    sub_1ACD1ACB4();
    sub_1ACE776D8();
    sub_1ACE77748();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t LibraryEntity.hashValue.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u) {
    sub_1ACE77B58();
  }
  else {
    sub_1ACE76108();
  }
  return sub_1ACE77B78();
}

uint64_t LibraryEntity.init(from:)(void *a1)
{
  uint64_t result = sub_1ACD1AE50(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1ACD1A908@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACD1AE50(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1ACD1A938(void *a1)
{
  return LibraryEntity.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1ACD1A958()
{
  return LibraryEntity.description.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1ACD1A964()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 > 1) {
    sub_1ACE77B58();
  }
  else {
    sub_1ACE76108();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACD1A9FC()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1)
  {
    sub_1ACE77B28();
    return sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
    return sub_1ACE76108();
  }
}

uint64_t sub_1ACD1AA8C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 > 1) {
    sub_1ACE77B58();
  }
  else {
    sub_1ACE76108();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACD1AB20(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation13LibraryEntityO2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t _s18PodcastsFoundation13LibraryEntityO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 != a4 || a2 != a5) {
        return sub_1ACE77848();
      }
      return 1;
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a1 != a4 || a2 != a5) {
        return sub_1ACE77848();
      }
      return 1;
    }
    return 0;
  }
  return a6 == 2 && a1 == a4;
}

unint64_t sub_1ACD1ABB8()
{
  unint64_t result = qword_1EB771D08;
  if (!qword_1EB771D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D08);
  }
  return result;
}

unint64_t sub_1ACD1AC0C()
{
  unint64_t result = qword_1E99F51D0;
  if (!qword_1E99F51D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51D0);
  }
  return result;
}

unint64_t sub_1ACD1AC60()
{
  unint64_t result = qword_1EB771D20;
  if (!qword_1EB771D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D20);
  }
  return result;
}

unint64_t sub_1ACD1ACB4()
{
  unint64_t result = qword_1EB771D00;
  if (!qword_1EB771D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D00);
  }
  return result;
}

uint64_t sub_1ACD1AD08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F73697065 && a2 == 0xE700000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1ACD1AE50(void *a1)
{
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5200);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  char v34 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5208);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5210);
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5218);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  id v35 = a1;
  uint64_t v13 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1ACD1ABB8();
  uint64_t v14 = v36;
  sub_1ACE77C48();
  if (!v14)
  {
    uint64_t v15 = v34;
    uint64_t v36 = v9;
    uint64_t v16 = sub_1ACE776B8();
    if (*(void *)(v16 + 16) == 1)
    {
      int v17 = *(unsigned __int8 *)(v16 + 32);
      int v38 = v17;
      if (v17)
      {
        if (v17 == 1)
        {
          char v40 = 1;
          sub_1ACD1AC60();
          uint64_t v18 = v4;
          sub_1ACE775D8();
          uint64_t v19 = v32;
          uint64_t v13 = sub_1ACE77658();
          uint64_t v20 = v18;
          uint64_t v21 = v36;
          (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v19);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
        }
        else
        {
          char v41 = 2;
          sub_1ACD1AC0C();
          sub_1ACE775D8();
          sub_1ACA80CD4();
          uint64_t v26 = v33;
          sub_1ACE77698();
          uint64_t v27 = v36;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v26);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v8);
          uint64_t v13 = v37;
        }
      }
      else
      {
        char v39 = 0;
        sub_1ACD1ACB4();
        sub_1ACE775D8();
        uint64_t v13 = sub_1ACE77658();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
      }
    }
    else
    {
      uint64_t v22 = sub_1ACE77328();
      swift_allocError();
      uint64_t v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8);
      *uint64_t v24 = &type metadata for LibraryEntity;
      uint64_t v13 = (uint64_t)v11;
      sub_1ACE775E8();
      sub_1ACE77308();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBA70], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  return v13;
}

unint64_t sub_1ACD1B488()
{
  unint64_t result = qword_1E99F51D8;
  if (!qword_1E99F51D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51D8);
  }
  return result;
}

uint64_t destroy for LibraryEntity(uint64_t a1)
{
  return sub_1ACA74630(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s18PodcastsFoundation13LibraryEntityOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA75154(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LibraryEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1ACA75154(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1ACA74630(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LibraryEntity(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1ACA74630(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LibraryEntity()
{
  return &type metadata for LibraryEntity;
}

unsigned char *storeEnumTagSinglePayload for LibraryEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD1B6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEntity.CodingKeys()
{
  return &type metadata for LibraryEntity.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryEntity.EpisodeCodingKeys()
{
  return &type metadata for LibraryEntity.EpisodeCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryEntity.ShowCodingKeys()
{
  return &type metadata for LibraryEntity.ShowCodingKeys;
}

unsigned char *_s18PodcastsFoundation13LibraryEntityO17EpisodeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACD1B7B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEntity.ChannelCodingKeys()
{
  return &type metadata for LibraryEntity.ChannelCodingKeys;
}

unint64_t sub_1ACD1B7EC()
{
  unint64_t result = qword_1E99F51E0;
  if (!qword_1E99F51E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51E0);
  }
  return result;
}

unint64_t sub_1ACD1B844()
{
  unint64_t result = qword_1E99F51E8;
  if (!qword_1E99F51E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51E8);
  }
  return result;
}

unint64_t sub_1ACD1B89C()
{
  unint64_t result = qword_1E99F51F0;
  if (!qword_1E99F51F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51F0);
  }
  return result;
}

unint64_t sub_1ACD1B8F4()
{
  unint64_t result = qword_1E99F51F8;
  if (!qword_1E99F51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F51F8);
  }
  return result;
}

unint64_t sub_1ACD1B94C()
{
  unint64_t result = qword_1EB771D50;
  if (!qword_1EB771D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D50);
  }
  return result;
}

unint64_t sub_1ACD1B9A4()
{
  unint64_t result = qword_1EB771D48;
  if (!qword_1EB771D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D48);
  }
  return result;
}

unint64_t sub_1ACD1B9FC()
{
  unint64_t result = qword_1EB771D30;
  if (!qword_1EB771D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D30);
  }
  return result;
}

unint64_t sub_1ACD1BA54()
{
  unint64_t result = qword_1EB771D28;
  if (!qword_1EB771D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D28);
  }
  return result;
}

unint64_t sub_1ACD1BAAC()
{
  unint64_t result = qword_1EB771D40;
  if (!qword_1EB771D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D40);
  }
  return result;
}

unint64_t sub_1ACD1BB04()
{
  unint64_t result = qword_1EB771D38;
  if (!qword_1EB771D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D38);
  }
  return result;
}

unint64_t sub_1ACD1BB5C()
{
  unint64_t result = qword_1EB771D18;
  if (!qword_1EB771D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D18);
  }
  return result;
}

unint64_t sub_1ACD1BBB4()
{
  unint64_t result = qword_1EB771D10;
  if (!qword_1EB771D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771D10);
  }
  return result;
}

uint64_t String.asAdamId.getter(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACD1C588(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t AdamID.longValue.getter(uint64_t result)
{
  if (result < 0) {
    __break(1u);
  }
  return result;
}

id AdamID.numberValue.getter(uint64_t a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  return objc_msgSend(v2, sel_initWithUnsignedLongLong_, a1);
}

uint64_t AdamID.stringValue.getter()
{
  return sub_1ACE770B8();
}

uint64_t Int64.asAdamId.getter(uint64_t a1)
{
  return a1 & ~(a1 >> 63);
}

uint64_t AdamID.description.getter()
{
  return sub_1ACE770B8();
}

unint64_t AdamID.debugDescription.getter()
{
  return 0xD000000000000011;
}

uint64_t BinaryInteger.adamID.getter()
{
  return sub_1ACD1CB88(v0);
}

BOOL AdamID.isEmpty.getter(uint64_t a1)
{
  return !a1 || a1 == 1000000000000;
}

uint64_t AdamID.init(value:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1ACD1C588(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t AdamID.init(value:)(uint64_t a1)
{
  return a1 & ~(a1 >> 63);
}

uint64_t AdamID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACD1CB88(a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t AdamID.init(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1ACD1C588(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t String.adamID.getter(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACD1C588(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static AdamID.empty.getter()
{
  return 0;
}

uint64_t static AdamID.missing.getter()
{
  return 1000000000000;
}

unint64_t AdamID.ParseError.description.getter()
{
  unint64_t v1 = 0xD000000000000026;
  uint64_t v2 = *(void *)(v0 + 8);
  if (v2)
  {
    if (v2 == 1)
    {
      return 0xD000000000000027;
    }
    else
    {
      sub_1ACE77268();
      sub_1ACE762C8();
      sub_1ACE762C8();
      sub_1ACE762C8();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1ACD1C0D4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A238);
  __swift_allocate_value_buffer(v0, qword_1EB76A518);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB76A518);
  return sub_1ACE752D8();
}

uint64_t static AdamID.parse(_:)(unint64_t a1, unint64_t a2)
{
  return sub_1ACD1C588(a1, a2);
}

BOOL static AdamID.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

BOOL static AdamID.<= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

BOOL static AdamID.> infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

BOOL static AdamID.>= infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1ACD1C198(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1ACD1C1AC(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1ACD1C1C0(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1ACD1C1D4(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t AdamID.init(from:)(void *a1)
{
  return sub_1ACD1CC70(a1);
}

uint64_t sub_1ACD1C200@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACD1CC70(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t AdamID.encode(to:)(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  uint64_t v6 = a2;
  sub_1ACA55E4C();
  sub_1ACE770B8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1ACE778D8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1ACD1C2F4(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  uint64_t v6 = v2;
  sub_1ACA55E4C();
  sub_1ACE770B8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1ACE778D8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1ACD1C3BC()
{
  return sub_1ACE770B8();
}

unint64_t sub_1ACD1C400()
{
  return AdamID.debugDescription.getter();
}

uint64_t AdamID.init(metricsFieldValue:)(uint64_t a1)
{
  return sub_1ACD1CAD4(a1);
}

uint64_t AdamID.metricsFieldRepresentation()@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACA55E4C();
  uint64_t result = sub_1ACE770B8();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACD1C478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACD1CAD4(a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1ACD1C4A8@<X0>(uint64_t *a1@<X8>)
{
  sub_1ACA55E4C();
  uint64_t result = sub_1ACE770B8();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = result;
  a1[1] = v3;
  return result;
}

id AdamID.init(_:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_unsignedLongLongValue);

  return v2;
}

uint64_t static AdamID.missingAdamId.getter()
{
  return 0;
}

uint64_t static AdamID.missingContentId.getter()
{
  return 1000000000000;
}

id AdamID.init(value:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_unsignedLongLongValue);

  return v2;
}

uint64_t sub_1ACD1C588(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A228);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = HIBYTE(a2) & 0xF;
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    sub_1ACD1CFF0();
    swift_allocError();
    *uint64_t v11 = 0;
    v11[1] = 0;
    goto LABEL_47;
  }
  if (a1 == 48 && a2 == 0xE100000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    sub_1ACD1CFF0();
    swift_allocError();
    _OWORD *v10 = xmmword_1ACE87320;
LABEL_47:
    swift_willThrow();
    return a1;
  }
  unint64_t v38 = a1;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  if (qword_1EB76A530 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A238);
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76A518);
  sub_1ACD1CEE0();
  sub_1ACD1CF34();
  sub_1ACE76118();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A220);
  a1 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13);
  sub_1ACD1CF90((uint64_t)v6);
  if (a1 == 1)
  {
    sub_1ACD1CFF0();
    swift_allocError();
    *uint64_t v14 = v38;
LABEL_46:
    v14[1] = a2;
    swift_bridgeObjectRetain();
    goto LABEL_47;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = v38;
    a1 = sub_1ACCCEE98(v38, a2, 10);
    char v35 = v34;
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      return a1;
    }
    goto LABEL_45;
  }
  uint64_t v15 = v38;
  if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v39 = v38;
    uint64_t v40 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (v38 == 43)
    {
      if (v7)
      {
        if (v7 != 1 && (BYTE1(v38) - 48) <= 9u)
        {
          a1 = (BYTE1(v38) - 48);
          if (v7 == 2) {
            return a1;
          }
          if ((BYTE2(v38) - 48) <= 9u)
          {
            a1 = 10 * (BYTE1(v38) - 48) + (BYTE2(v38) - 48);
            uint64_t v21 = v7 - 3;
            if (v7 == 3) {
              return a1;
            }
            for (i = (unsigned __int8 *)&v39 + 3; ; ++i)
            {
              unsigned int v23 = *i - 48;
              if (v23 > 9) {
                break;
              }
              if (!is_mul_ok(a1, 0xAuLL)) {
                break;
              }
              BOOL v24 = __CFADD__(10 * a1, v23);
              a1 = 10 * a1 + v23;
              if (v24) {
                break;
              }
              if (!--v21) {
                return a1;
              }
            }
          }
        }
        goto LABEL_42;
      }
    }
    else
    {
      if (v38 != 45)
      {
        if (v7 && (v38 - 48) <= 9u)
        {
          a1 = (v38 - 48);
          if (v7 == 1) {
            return a1;
          }
          if ((BYTE1(v38) - 48) <= 9u)
          {
            a1 = 10 * (v38 - 48) + (BYTE1(v38) - 48);
            uint64_t v26 = v7 - 2;
            if (v7 == 2) {
              return a1;
            }
            for (j = (unsigned __int8 *)&v39 + 2; ; ++j)
            {
              unsigned int v28 = *j - 48;
              if (v28 > 9) {
                break;
              }
              if (!is_mul_ok(a1, 0xAuLL)) {
                break;
              }
              BOOL v24 = __CFADD__(10 * a1, v28);
              a1 = 10 * a1 + v28;
              if (v24) {
                break;
              }
              if (!--v26) {
                return a1;
              }
            }
          }
        }
        goto LABEL_42;
      }
      if (v7)
      {
        if (v7 != 1)
        {
          unsigned __int8 v19 = BYTE1(v38) - 48;
          if ((BYTE1(v38) - 48) <= 9u)
          {
            a1 = 0;
            unint64_t v20 = -(uint64_t)v19;
            if (BYTE1(v38) != 48) {
              goto LABEL_45;
            }
            if (v7 == 2) {
              return -(uint64_t)v19;
            }
            unsigned __int8 v29 = BYTE2(v38) - 48;
            if ((BYTE2(v38) - 48) <= 9u && is_mul_ok(v20, 0xAuLL))
            {
              unint64_t v30 = 10 * v20;
              a1 = v30 - v29;
              if (v30 >= v29)
              {
                uint64_t v31 = v7 - 3;
                if (v7 == 3) {
                  return a1;
                }
                for (k = (unsigned __int8 *)&v39 + 3; ; ++k)
                {
                  unsigned int v33 = *k - 48;
                  if (v33 > 9) {
                    break;
                  }
                  if (!is_mul_ok(a1, 0xAuLL)) {
                    break;
                  }
                  BOOL v24 = 10 * a1 >= v33;
                  a1 = 10 * a1 - v33;
                  if (!v24) {
                    break;
                  }
                  if (!--v31) {
                    return a1;
                  }
                }
              }
            }
          }
        }
LABEL_42:
        a1 = 0;
LABEL_45:
        sub_1ACD1CFF0();
        swift_allocError();
        *uint64_t v14 = v15;
        goto LABEL_46;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  if ((v38 & 0x1000000000000000) != 0)
  {
    uint64_t v16 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v16 = (unsigned __int8 *)sub_1ACE77388();
    uint64_t v8 = v36;
  }
  int v17 = sub_1ACCCEE68(v16, v8, 10);
  if (v18) {
    goto LABEL_45;
  }
  return (uint64_t)v17;
}

uint64_t sub_1ACD1CAD4(uint64_t a1)
{
  sub_1ACA33128(a1, (uint64_t)v6);
  if (swift_dynamicCast())
  {
    uint64_t v2 = sub_1ACD1C588(v4, v5);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v2;
}

uint64_t sub_1ACD1CB88(uint64_t a1)
{
  __n128 v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_1ACD1CE8C();
  sub_1ACE77478();
  return v5[1];
}

uint64_t sub_1ACD1CC70(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    unint64_t v4 = sub_1ACE77858();
    uint64_t v3 = sub_1ACD1C588(v4, v5);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

unint64_t sub_1ACD1CD5C()
{
  unint64_t result = qword_1EB76A540;
  if (!qword_1EB76A540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A540);
  }
  return result;
}

uint64_t sub_1ACD1CDB0()
{
  return MEMORY[0x1E4FBC590];
}

ValueMetadata *type metadata accessor for AdamID()
{
  return &type metadata for AdamID;
}

uint64_t getEnumTagSinglePayload for AdamID.ParseError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AdamID.ParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdamID.ParseError()
{
  return &type metadata for AdamID.ParseError;
}

unint64_t sub_1ACD1CE8C()
{
  unint64_t result = qword_1E99F5220;
  if (!qword_1E99F5220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5220);
  }
  return result;
}

unint64_t sub_1ACD1CEE0()
{
  unint64_t result = qword_1EB76A778;
  if (!qword_1EB76A778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A778);
  }
  return result;
}

unint64_t sub_1ACD1CF34()
{
  unint64_t result = qword_1EB76A230;
  if (!qword_1EB76A230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB76A238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A230);
  }
  return result;
}

uint64_t sub_1ACD1CF90(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A228);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ACD1CFF0()
{
  unint64_t result = qword_1EB76A510;
  if (!qword_1EB76A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A510);
  }
  return result;
}

uint64_t TranscriptSource.rawValue.getter()
{
  if (*v0) {
    return 0x656C707061;
  }
  else {
    return 0x72656469766F7270;
  }
}

uint64_t EpisodeTranscriptContainer.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD1D084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACD1D10C(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1D310();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1D148(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1D310();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeTranscriptContainer.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5228);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1D310();
  sub_1ACE77C78();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A7E8);
  sub_1ACD1E3EC(&qword_1E99F5230, &qword_1EB76A7E8, (void (*)(void))sub_1ACD1D364);
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1ACD1D310()
{
  unint64_t result = qword_1EB76A3D0;
  if (!qword_1EB76A3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A3D0);
  }
  return result;
}

unint64_t sub_1ACD1D364()
{
  unint64_t result = qword_1E99F5238;
  if (!qword_1E99F5238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5238);
  }
  return result;
}

uint64_t EpisodeTranscriptContainer.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1D310();
  sub_1ACE77C48();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A7E8);
    sub_1ACD1E3EC(&qword_1EB76A7F0, &qword_1EB76A7E8, (void (*)(void))sub_1ACD1D564);
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_1ACD1D564()
{
  unint64_t result = qword_1EB76A388;
  if (!qword_1EB76A388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A388);
  }
  return result;
}

uint64_t sub_1ACD1D5B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EpisodeTranscriptContainer.init(from:)(a1, a2);
}

uint64_t sub_1ACD1D5D0(void *a1)
{
  return EpisodeTranscriptContainer.encode(to:)(a1);
}

uint64_t EpisodeTranscriptData.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD1D64C()
{
  return 0x7475626972747461;
}

uint64_t sub_1ACD1D668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1ACE77848();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ACD1D70C(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1D900();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1D748(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1D900();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeTranscriptData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5240);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  int v13 = *((unsigned __int8 *)v1 + 16);
  long long v12 = *(_OWORD *)(v1 + 3);
  uint64_t v11 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1D900();
  sub_1ACE77C78();
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  char v16 = v13;
  long long v17 = v12;
  uint64_t v18 = v11;
  sub_1ACD1D954();
  sub_1ACE77788();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1ACD1D900()
{
  unint64_t result = qword_1EB76A370;
  if (!qword_1EB76A370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A370);
  }
  return result;
}

unint64_t sub_1ACD1D954()
{
  unint64_t result = qword_1E99F5248;
  if (!qword_1E99F5248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5248);
  }
  return result;
}

uint64_t EpisodeTranscriptData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1D900();
  sub_1ACE77C48();
  if (!v2)
  {
    sub_1ACD1DB2C();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v14[1];
    char v10 = v15;
    uint64_t v11 = v16;
    long long v12 = v17;
    *(void *)a2 = v14[0];
    *(void *)(a2 + 8) = v9;
    *(unsigned char *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v11;
    *(_OWORD *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_1ACD1DB2C()
{
  unint64_t result = qword_1EB76A4F0;
  if (!qword_1EB76A4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A4F0);
  }
  return result;
}

uint64_t sub_1ACD1DB80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EpisodeTranscriptData.init(from:)(a1, a2);
}

uint64_t sub_1ACD1DB98(void *a1)
{
  return EpisodeTranscriptData.encode(to:)(a1);
}

uint64_t EpisodeTranscriptDataAttributes.ttmlToken.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void EpisodeTranscriptDataAttributes.textSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t EpisodeTranscriptDataAttributes.offerTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeTranscriptDataAttributes.snippet.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1ACD1DC24()
{
  uint64_t result = 0x656B6F546C6D7474;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x72756F5374786574;
      break;
    case 2:
      uint64_t result = 0x707954726566666FLL;
      break;
    case 3:
      uint64_t result = 0x74657070696E73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACD1DCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1ACD1EF94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ACD1DCEC(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1DFBC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD1DD28(uint64_t a1)
{
  unint64_t v2 = sub_1ACD1DFBC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeTranscriptDataAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5250);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  v11[1] = *(void *)(v1 + 32);
  uint64_t v12 = v7;
  v11[0] = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1DFBC();
  sub_1ACE77C78();
  char v20 = 0;
  uint64_t v8 = v14;
  sub_1ACE77748();
  if (!v8)
  {
    uint64_t v9 = v12;
    char v19 = v13;
    char v18 = 1;
    sub_1ACD1E010();
    sub_1ACE77788();
    uint64_t v15 = v9;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A7F8);
    sub_1ACD1E3EC(&qword_1E99F5260, &qword_1EB76A7F8, (void (*)(void))sub_1ACC5FD78);
    sub_1ACE77788();
    char v16 = 3;
    sub_1ACE776E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1ACD1DFBC()
{
  unint64_t result = qword_1EB76A4D8;
  if (!qword_1EB76A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A4D8);
  }
  return result;
}

unint64_t sub_1ACD1E010()
{
  unint64_t result = qword_1E99F5258;
  if (!qword_1E99F5258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5258);
  }
  return result;
}

uint64_t EpisodeTranscriptDataAttributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD1DFBC();
  sub_1ACE77C48();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v26 = 0;
  uint64_t v9 = sub_1ACE77658();
  uint64_t v11 = v10;
  char v24 = 1;
  sub_1ACD1E398();
  swift_bridgeObjectRetain();
  sub_1ACE77698();
  int v20 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A7F8);
  char v23 = 2;
  sub_1ACD1E3EC(&qword_1EB76A800, &qword_1EB76A7F8, (void (*)(void))sub_1ACC5FF1C);
  sub_1ACE77698();
  char v22 = 3;
  uint64_t v19 = v21;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1ACE775F8();
  uint64_t v15 = v14;
  char v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v20;
  uint64_t v17 = v18;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v15;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1ACD1E398()
{
  unint64_t result = qword_1EB76A348;
  if (!qword_1EB76A348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A348);
  }
  return result;
}

uint64_t sub_1ACD1E3EC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACD1E458@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EpisodeTranscriptDataAttributes.init(from:)(a1, a2);
}

uint64_t sub_1ACD1E470(void *a1)
{
  return EpisodeTranscriptDataAttributes.encode(to:)(a1);
}

PodcastsFoundation::TranscriptSource_optional __swiftcall TranscriptSource.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1ACD1E4EC(char *a1, char *a2)
{
  return sub_1ACCF6380(*a1, *a2);
}

unint64_t sub_1ACD1E4FC()
{
  unint64_t result = qword_1E99F5268;
  if (!qword_1E99F5268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5268);
  }
  return result;
}

uint64_t sub_1ACD1E550()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD1E5D0()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD1E63C()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::TranscriptSource_optional sub_1ACD1E6B8(Swift::String *a1)
{
  return TranscriptSource.init(rawValue:)(*a1);
}

void sub_1ACD1E6C4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x72656469766F7270;
  if (*v1) {
    uint64_t v2 = 0x656C707061;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACD1E700()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACD1E760()
{
  return sub_1ACE764C8();
}

ValueMetadata *type metadata accessor for EpisodeTranscriptContainer()
{
  return &type metadata for EpisodeTranscriptContainer;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptData()
{
  return &type metadata for EpisodeTranscriptData;
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18PodcastsFoundation31EpisodeTranscriptDataAttributesVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptDataAttributes()
{
  return &type metadata for EpisodeTranscriptDataAttributes;
}

unsigned char *storeEnumTagSinglePayload for TranscriptSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD1EA58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSource()
{
  return &type metadata for TranscriptSource;
}

unsigned char *storeEnumTagSinglePayload for EpisodeTranscriptDataAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD1EB5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptDataAttributes.CodingKeys()
{
  return &type metadata for EpisodeTranscriptDataAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptData.CodingKeys()
{
  return &type metadata for EpisodeTranscriptData.CodingKeys;
}

unsigned char *_s18PodcastsFoundation21EpisodeTranscriptDataV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACD1EC44);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTranscriptContainer.CodingKeys()
{
  return &type metadata for EpisodeTranscriptContainer.CodingKeys;
}

unint64_t sub_1ACD1EC80()
{
  unint64_t result = qword_1E99F5270;
  if (!qword_1E99F5270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5270);
  }
  return result;
}

unint64_t sub_1ACD1ECD8()
{
  unint64_t result = qword_1E99F5278;
  if (!qword_1E99F5278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5278);
  }
  return result;
}

unint64_t sub_1ACD1ED30()
{
  unint64_t result = qword_1E99F5280;
  if (!qword_1E99F5280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5280);
  }
  return result;
}

unint64_t sub_1ACD1ED88()
{
  unint64_t result = qword_1EB76A4E8;
  if (!qword_1EB76A4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A4E8);
  }
  return result;
}

unint64_t sub_1ACD1EDE0()
{
  unint64_t result = qword_1EB76A4E0;
  if (!qword_1EB76A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A4E0);
  }
  return result;
}

unint64_t sub_1ACD1EE38()
{
  unint64_t result = qword_1EB76A380;
  if (!qword_1EB76A380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A380);
  }
  return result;
}

unint64_t sub_1ACD1EE90()
{
  unint64_t result = qword_1EB76A378;
  if (!qword_1EB76A378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A378);
  }
  return result;
}

unint64_t sub_1ACD1EEE8()
{
  unint64_t result = qword_1EB76A3E0;
  if (!qword_1EB76A3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A3E0);
  }
  return result;
}

unint64_t sub_1ACD1EF40()
{
  unint64_t result = qword_1EB76A3D8;
  if (!qword_1EB76A3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A3D8);
  }
  return result;
}

uint64_t sub_1ACD1EF94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656B6F546C6D7474 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756F5374786574 && a2 == 0xEA00000000006563 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x707954726566666FLL && a2 == 0xEA00000000007365 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74657070696E73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1ACD1F16C()
{
  unint64_t result = qword_1EB76A340;
  if (!qword_1EB76A340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76A340);
  }
  return result;
}

id static MTInterest.predicateForDislikedInterestsShows()()
{
  return sub_1ACD1F690(0x74736163646F70, 0xE700000000000000);
}

id static MTInterest.predicateForFavoritedInterestsChannels()()
{
  return sub_1ACD1F690(0x6C656E6E616863, 0xE700000000000000);
}

id static MTInterest.predicateForDislikedInterestsChannels()()
{
  return sub_1ACD1F690(0x6C656E6E616863, 0xE700000000000000);
}

id static MTInterest.predicateForFavoritedInterestsCategories()()
{
  return sub_1ACD1F690(0x79726F6765746163, 0xE800000000000000);
}

id static MTInterest.predicateForDislikedInterestsCategories()()
{
  return sub_1ACD1F690(0x79726F6765746163, 0xE800000000000000);
}

uint64_t static MTInterest.predicateForInterest(withAdamID:)(uint64_t a1)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE84820;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1ACADC3A8();
  *(void *)(v2 + 32) = 0x44496D616461;
  *(void *)(v2 + 40) = 0xE600000000000000;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedLongLong_, a1);
  *(void *)(v2 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  *(void *)(v2 + 104) = sub_1ACBDF258();
  *(void *)(v2 + 72) = v3;
  return sub_1ACE76B88();
}

uint64_t static MTInterest.predicateForFavoritedInterests()()
{
  return sub_1ACD1F3F0();
}

uint64_t static MTInterest.predicateForDislikedInterests()()
{
  return sub_1ACD1F3F0();
}

uint64_t sub_1ACD1F3F0()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE843F0;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1ACADC3A8();
  strcpy((char *)(v0 + 32), "interestValue");
  *(_WORD *)(v0 + 46) = -4864;
  return sub_1ACE76B88();
}

uint64_t static MTInterest.predicateForInterests(excludingAdamIDs:)(uint64_t a1)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE84820;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1ACADC3A8();
  *(void *)(v2 + 32) = 0x44496D616461;
  *(void *)(v2 + 40) = 0xE600000000000000;
  *(void *)(v2 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5088);
  *(void *)(v2 + 104) = sub_1ACD1F84C();
  *(void *)(v2 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1ACE76B88();
}

uint64_t static MTInterest.predicateForNeutralInterests()()
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84820;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v1 = sub_1ACADC3A8();
  strcpy((char *)(v0 + 32), "interestValue");
  *(_WORD *)(v0 + 46) = -4864;
  uint64_t v2 = MEMORY[0x1E4FBB5C8];
  *(void *)(v0 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0;
  return sub_1ACE76B88();
}

id sub_1ACD1F648()
{
  return sub_1ACD1F690(0x74736163646F70, 0xE700000000000000);
}

id sub_1ACD1F66C()
{
  return sub_1ACD1F690(0x6C656E6E616863, 0xE700000000000000);
}

id sub_1ACD1F690(uint64_t a1, uint64_t a2)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE843F0;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1ACADC3A8();
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  uint64_t v7 = (void *)sub_1ACE76B88();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ACE843F0;
  *(void *)(v8 + 56) = v5;
  *(void *)(v8 + 64) = v6;
  strcpy((char *)(v8 + 32), "interestValue");
  *(_WORD *)(v8 + 46) = -4864;
  uint64_t v9 = (void *)sub_1ACE76B88();
  id v10 = objc_msgSend(v9, sel_AND_, v7);

  return v10;
}

id sub_1ACD1F7E0()
{
  return sub_1ACD1F690(0x6C656E6E616863, 0xE700000000000000);
}

id sub_1ACD1F804()
{
  return sub_1ACD1F690(0x79726F6765746163, 0xE800000000000000);
}

id sub_1ACD1F828()
{
  return sub_1ACD1F690(0x79726F6765746163, 0xE800000000000000);
}

unint64_t sub_1ACD1F84C()
{
  unint64_t result = qword_1E99F5288;
  if (!qword_1E99F5288)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F5088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5288);
  }
  return result;
}

uint64_t AssetBackgroundSessionDescriptor.createJobCache(libraryPath:)(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1ACE76CE8();
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  MEMORY[0x1F4188790](v1);
  char v26 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v25);
  char v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v4 - 8);
  char v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  uint64_t v6 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for DownloadTaskIdentifier();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v29 = v13;
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v31 = &protocol witness table for DownloadTaskIdentifier<A>;
  uint64_t v32 = AssociatedConformanceWitness;
  uint64_t v15 = MEMORY[0x1E4FBB1B0];
  uint64_t v33 = MEMORY[0x1E4FBB1B0];
  uint64_t v20 = type metadata accessor for DiskAssetCache();
  AssetBackgroundSessionDescriptor.name.getter();
  sub_1ACE74E28();
  swift_bridgeObjectRelease();
  uint64_t v29 = v13;
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v31 = &protocol witness table for DownloadTaskIdentifier<A>;
  uint64_t v32 = AssociatedConformanceWitness;
  uint64_t v33 = v15;
  type metadata accessor for InMemoryAssetCache();
  sub_1ACE759D8();
  sub_1ACA51EA4(&qword_1EB76DEE8, &qword_1EB76DEF0);
  uint64_t v16 = v21;
  uint64_t v17 = sub_1ACE511B8(5000000);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
  sub_1ACA51E1C();
  sub_1ACE75E28();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1ACABEAC4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, *MEMORY[0x1E4FBCC58], v28);
  uint64_t v18 = sub_1ACE76D28();
  LOBYTE(v29) = 0;
  return DiskAssetCache.__allocating_init(cacheDirectory:memoryBuffer:writeQueue:cacheDeleteUrgency:)((uint64_t)v11, v17, v18, 0x800uLL);
}

uint64_t AssetBackgroundSessionDescriptor.name.getter()
{
  return sub_1ACE76228();
}

uint64_t dispatch thunk of AssetBackgroundSessionDescriptor.create(session:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AssetBackgroundSessionDescriptor.load(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of AssetBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t Optional<A>.isEmpty.getter(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v6, v1, v3);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  char v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    char v9 = sub_1ACE76A98();
    uint64_t v2 = v8;
    uint64_t v1 = v7;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v9 & 1;
}

uint64_t Publisher.cache<A>(location:cache:overwrite:alwaysAttemptRefresh:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v29 = a7;
  int v27 = a3;
  int v28 = a4;
  uint64_t v26 = a8;
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)v24 - v16;
  __n128 v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v22 + 16))(v21, v24[1], a5, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, a6);
  return Publishers.CachedAssetPublisher.init(upstream:location:cache:overwrite:alwaysAttemptRefresh:)((uint64_t)v21, (uint64_t)v17, (uint64_t)v13, v27, v28, a5, a6, v26);
}

uint64_t Publishers.CachedAssetPublisher.init(upstream:location:cache:overwrite:alwaysAttemptRefresh:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a8, a1, a6);
  uint64_t v14 = (int *)type metadata accessor for Publishers.CachedAssetPublisher();
  uint64_t v15 = a8 + v14[13];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v15, a2, AssociatedTypeWitness);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8 + v14[14], a3, a7);
  *(unsigned char *)(a8 + v14[15]) = a4;
  *(unsigned char *)(a8 + v14[16]) = a5;
  return result;
}

uint64_t type metadata accessor for Publishers.CachedAssetPublisher()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CachedAssetPublisher.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.CachedAssetPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a1;
  uint64_t v39 = a4;
  uint64_t v37 = *(void *)(*(void *)(a2 + 24) - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v11 = v10;
  uint64_t v33 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v34 = (char *)&v32 - v13;
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a2 + 32);
  v40[0] = v14;
  v40[1] = v11;
  v40[2] = v24;
  uint64_t v41 = v23;
  uint64_t v25 = v24;
  uint64_t WitnessTable = v9;
  uint64_t v43 = v39;
  uint64_t v26 = _s20CachedAssetPublisherV5InnerCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v38, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v4, v14);
  uint64_t v27 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v34, v4 + *(int *)(a2 + 52), AssociatedTypeWitness);
  uint64_t v28 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v4 + *(int *)(a2 + 56), v33);
  LODWORD(v14) = *(unsigned __int8 *)(v4 + *(int *)(a2 + 60));
  int v29 = *(unsigned __int8 *)(v4 + *(int *)(a2 + 64));
  swift_allocObject();
  uint64_t v30 = sub_1ACD2073C((uint64_t)v22, (uint64_t)v18, v27, v28, v14, v29);
  uint64_t v41 = v26;
  uint64_t WitnessTable = swift_getWitnessTable();
  v40[0] = v30;
  sub_1ACE75778();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
}

uint64_t _s20CachedAssetPublisherV5InnerCMa()
{
  return swift_getGenericMetadata();
}

char *sub_1ACD206A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return sub_1ACD2073C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1ACD2071C()
{
  return swift_getAssociatedConformanceWitness();
}

char *sub_1ACD2073C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v28 = a5;
  int v29 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v7 = *(void **)v6;
  uint64_t v8 = *(void *)(*(void *)v6 + 80);
  uint64_t v25 = sub_1ACE76FD8();
  uint64_t v9 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v11 = (char *)&v22 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *((void *)v6 + 2) = v12;
  uint64_t v13 = &v6[v7[20]];
  uint64_t v14 = *(void *)(v8 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v13, 1, 1, v8);
  uint64_t v16 = &v6[*(void *)(*(void *)v6 + 168)];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  uint64_t v17 = *(void *)(*(void *)v6 + 176);
  *(void *)&v6[v17] = sub_1ACE757C8();
  (*(void (**)(char *, uint64_t))(*(void *)(v7[12] - 8) + 32))(&v6[*(void *)(*(void *)v6 + 136)], v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v11, v24, v8);
  v15(v11, 0, 1, v8);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v13, v11, v25);
  swift_endAccess();
  uint64_t v18 = &v6[*(void *)(*(void *)v6 + 184)];
  uint64_t v19 = v7[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v18, v26, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(&v6[*(void *)(*(void *)v6 + 192)], v27, v19);
  v6[*(void *)(*(void *)v6 + 144)] = v28;
  v6[*(void *)(*(void *)v6 + 152)] = v29;
  return v6;
}

uint64_t sub_1ACD20AC0(void *a1)
{
  __n128 v3 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 168);
  swift_beginAccess();
  sub_1ACC05270(v4, (uint64_t)v8);
  uint64_t v5 = v9;
  sub_1ACC052CC((uint64_t)v8);
  if (v5)
  {
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1ACE75798();
  }
  else
  {
    sub_1ACA3E158((uint64_t)a1, (uint64_t)v8);
    swift_beginAccess();
    sub_1ACC053E4((uint64_t)v8, v4);
    swift_endAccess();
    uint64_t v7 = (void *)((char *)v1 + *(void *)(*v1 + 176));
    swift_beginAccess();
    *uint64_t v7 = sub_1ACE757C8();
    os_unfair_lock_unlock(v3);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1ACE75808();
  }
}

uint64_t sub_1ACD20C14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1ACE76FD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v16[-v8];
  uint64_t v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v2 + *(void *)(*v2 + 168);
  swift_beginAccess();
  sub_1ACC05270(v11, (uint64_t)v16);
  unint64_t v12 = v17;
  sub_1ACC052CC((uint64_t)v16);
  os_unfair_lock_unlock(v10);
  if (v12 < 2) {
    return sub_1ACE757C8();
  }
  uint64_t v14 = *v2;
  if (*((unsigned char *)v2 + *(void *)(*v2 + 144))) {
    goto LABEL_6;
  }
  (*(void (**)(char *, void))(*(void *)(v4 + 112) + 24))((char *)v2 + *(void *)(*v2 + 184), *(void *)(v4 + 88));
  int v15 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v9, 1, AssociatedTypeWitness);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  if (v15 == 1)
  {
    uint64_t v14 = *v2;
LABEL_6:
    (*(void (**)(uint64_t, char *, void))(*(void *)(v4 + 112) + 32))(a1, (char *)v2 + *(void *)(v14 + 184), *(void *)(v4 + 88));
  }
  return sub_1ACE75788();
}

void sub_1ACD20EFC()
{
  uint64_t v1 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v1);
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 168);
  swift_beginAccess();
  sub_1ACC05270(v2, (uint64_t)v3);
  if ((unint64_t)v4 >= 2)
  {
    sub_1ACC052CC((uint64_t)v3);
    memset(v3, 0, sizeof(v3));
    long long v4 = xmmword_1ACE8BD70;
    swift_beginAccess();
    sub_1ACC053E4((uint64_t)v3, v2);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    sub_1ACE75768();
  }
  else
  {
    sub_1ACC052CC((uint64_t)v3);
    os_unfair_lock_unlock(v1);
  }
}

void sub_1ACD21034(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v74 = a1;
  uint64_t v76 = *(void **)v1;
  uint64_t v3 = v76[13];
  uint64_t v4 = v76[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v69 = sub_1ACE757A8();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v67 = (char *)v61 - v6;
  uint64_t v72 = sub_1ACE76FD8();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v8 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v65 = (char *)v61 - v10;
  uint64_t v73 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v11);
  os_unfair_lock_t v66 = (os_unfair_lock_t)((char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)v61 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1ACE76FD8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v61 - v18;
  uint64_t v75 = v15;
  uint64_t v77 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v70 = (char *)v61 - v21;
  uint64_t v22 = (os_unfair_lock_s *)(*((void *)v2 + 2) + 16);
  os_unfair_lock_lock(v22);
  uint64_t v23 = (uint64_t)&v2[*(void *)(*(void *)v2 + 168)];
  swift_beginAccess();
  sub_1ACC05270(v23, (uint64_t)&v82);
  if (v83 == 1)
  {
    uint64_t v32 = v22;
    goto LABEL_7;
  }
  if (v83)
  {
    sub_1ACA3AABC(&v82, (uint64_t)&v78);
    os_unfair_lock_unlock(v22);
    __swift_project_boxed_opaque_existential_1(&v78, v81);
    sub_1ACE75808();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v78);
    return;
  }
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v63 = v3;
  os_unfair_lock_unlock(v22);
  uint64_t v24 = v22;
  uint64_t v25 = v76;
  (*(void (**)(char *, void))(v76[14] + 24))(&v2[*(void *)(*(void *)v2 + 184)], v76[11]);
  uint64_t v26 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v19, 1, v75) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    os_unfair_lock_lock(v24);
    uint64_t v27 = &v2[*(void *)(*(void *)v2 + 160)];
    swift_beginAccess();
    uint64_t v28 = v71;
    int v29 = v27;
    uint64_t v30 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v8, v29, v72);
    uint64_t v31 = v73;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v8, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v30);
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      long long v81 = xmmword_1ACE8BD70;
      swift_beginAccess();
      sub_1ACC053E4((uint64_t)&v78, v23);
      swift_endAccess();
      uint64_t v32 = v24;
LABEL_7:
      os_unfair_lock_unlock(v32);
      return;
    }
    uint64_t v46 = v24;
    os_unfair_lock_t v47 = v66;
    (*(void (**)(os_unfair_lock_t, char *, uint64_t))(v31 + 32))(v66, v8, v4);
    uint64_t v48 = (uint64_t *)&v2[*(void *)(*(void *)v2 + 176)];
    swift_beginAccess();
    uint64_t v49 = *v48;
    sub_1ACE757D8();
    if (sub_1ACE757B8()) {
      goto LABEL_29;
    }
    sub_1ACE757D8();
    char v50 = sub_1ACE757B8();
    uint64_t v51 = sub_1ACE757D8();
    if (v50)
    {
LABEL_28:
      *uint64_t v48 = v51;
LABEL_29:
      swift_endAccess();
      os_unfair_lock_unlock(v46);
      uint64_t v78 = v2;
      swift_getWitnessTable();
      sub_1ACE75D18();
      (*(void (**)(os_unfair_lock_t, uint64_t))(v31 + 8))(v47, v4);
      return;
    }
    uint64_t v52 = v74;
    if (sub_1ACE757B8())
    {
LABEL_19:
      uint64_t v51 = sub_1ACE757D8();
      goto LABEL_28;
    }
    if (((v49 | v52) & 0x8000000000000000) == 0)
    {
      uint64_t v51 = v49 + v52;
      if (!__OFADD__(v49, v52))
      {
        if ((v51 & 0x8000000000000000) == 0) {
          goto LABEL_28;
        }
        goto LABEL_35;
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  os_unfair_lock_t v66 = v24;
  uint64_t v33 = v70;
  (*(void (**)(void))(v77 + 32))();
  uint64_t v34 = v26;
  uint64_t v35 = v25[15];
  sub_1ACE75788();
  uint64_t v36 = *(void *)v2;
  uint64_t v37 = v62;
  if (v2[*(void *)(*(void *)v2 + 152)] != 1)
  {
LABEL_12:
    uint64_t v43 = v34;
    uint64_t v44 = v66;
    os_unfair_lock_lock(v66);
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    long long v81 = xmmword_1ACE8BD70;
    swift_beginAccess();
    sub_1ACC053E4((uint64_t)&v78, v23);
    swift_endAccess();
    os_unfair_lock_unlock(v44);
    uint64_t v45 = v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v67, 1, 1, v37);
    sub_1ACE75768();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v69);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v33, v43);
    return;
  }
  v61[1] = v35;
  uint64_t v38 = &v2[*(void *)(v36 + 160)];
  swift_beginAccess();
  uint64_t v39 = v71;
  uint64_t v40 = v65;
  uint64_t v41 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v65, v38, v72);
  uint64_t v42 = v73;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v40, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    uint64_t v34 = v75;
    uint64_t v33 = v70;
    goto LABEL_12;
  }
  uint64_t v53 = v64;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v64, v40, v4);
  os_unfair_lock_lock(v66);
  uint64_t v54 = (uint64_t *)&v2[*(void *)(*(void *)v2 + 176)];
  swift_beginAccess();
  uint64_t v55 = *v54;
  sub_1ACE757D8();
  char v56 = sub_1ACE757B8();
  uint64_t v57 = v77;
  if (v56)
  {
LABEL_32:
    swift_endAccess();
    os_unfair_lock_unlock(v66);
    uint64_t v78 = v2;
    swift_getWitnessTable();
    sub_1ACE75D18();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v53, v4);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v70, v75);
    return;
  }
  sub_1ACE757D8();
  char v58 = sub_1ACE757B8();
  uint64_t v59 = sub_1ACE757D8();
  if (v58)
  {
LABEL_31:
    uint64_t *v54 = v59;
    goto LABEL_32;
  }
  uint64_t v60 = v74;
  if (sub_1ACE757B8()) {
    goto LABEL_26;
  }
  if ((v55 | v60) < 0) {
    goto LABEL_34;
  }
  uint64_t v59 = v55 + v60;
  if (__OFADD__(v55, v60))
  {
LABEL_26:
    uint64_t v59 = sub_1ACE757D8();
    goto LABEL_31;
  }
  if ((v59 & 0x8000000000000000) == 0) {
    goto LABEL_31;
  }
LABEL_36:
  __break(1u);
}

void sub_1ACD21B68()
{
  uint64_t v1 = (os_unfair_lock_s *)(v0[2] + 16);
  os_unfair_lock_lock(v1);
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 168);
  swift_beginAccess();
  sub_1ACC05270(v2, (uint64_t)&v3);
  if ((unint64_t)v5 >= 2)
  {
    sub_1ACA3AABC(&v3, (uint64_t)v6);
    long long v3 = 0uLL;
    uint64_t v4 = 0;
    long long v5 = xmmword_1ACE8BD70;
    swift_beginAccess();
    sub_1ACC053E4((uint64_t)&v3, v2);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1ACE75798();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  else
  {
    sub_1ACC052CC((uint64_t)&v3);
    os_unfair_lock_unlock(v1);
  }
}

uint64_t *sub_1ACD21C68()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 160);
  uint64_t v3 = sub_1ACE76FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_1ACC052CC((uint64_t)v0 + *(void *)(*v0 + 168));
  uint64_t v4 = (uint64_t)v0 + *(void *)(*v0 + 184);
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v4, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 192), v5);
  return v0;
}

uint64_t sub_1ACD21E40()
{
  sub_1ACD21C68();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACD21E94(void *a1)
{
  return sub_1ACD20AC0(a1);
}

uint64_t sub_1ACD21EB8(uint64_t a1)
{
  return sub_1ACD20C14(a1);
}

void sub_1ACD21EDC()
{
}

void sub_1ACD21F00(uint64_t a1)
{
}

void sub_1ACD21F24()
{
}

uint64_t sub_1ACD21F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CachedAssetPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1ACD21F5C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1ACD22090(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = v14 + v16;
  uint64_t v18 = *(void *)(v15 + 64);
  unint64_t v19 = v18 + ((v14 + v16 + v13) & ~v16) + 2;
  uint64_t v20 = (*(unsigned char *)(v10 + 80) | *(unsigned char *)(v7 + 80) | *(unsigned char *)(v15 + 80));
  if (v20 <= 7
    && v19 <= 0x18
    && ((*(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v15 + 80)) & 0x100000) == 0)
  {
    uint64_t v34 = a1;
    uint64_t v25 = ~v11;
    uint64_t v32 = AssociatedTypeWitness;
    uint64_t v33 = ~v16;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v34, a2, v6);
    unint64_t v26 = ((unint64_t)v34 + v12) & v25;
    unint64_t v27 = ((unint64_t)a2 + v12) & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v26, v27, v32);
    unint64_t v28 = (v26 + v17) & v33;
    unint64_t v29 = (v27 + v17) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16))(v28, v29, v5);
    uint64_t v30 = (unsigned char *)(v28 + v18);
    uint64_t v24 = v34;
    *uint64_t v30 = *(unsigned char *)(v29 + v18);
    v30[1] = *(unsigned char *)(v29 + v18 + 1);
  }
  else
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    uint64_t v24 = (uint64_t *)(v23 + ((v20 + 16) & ~v20));
    swift_retain();
  }
  return v24;
}

uint64_t sub_1ACD222E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 8);
  unint64_t v13 = (v10 + *(void *)(v9 + 56) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return v12(v13, v6);
}

uint64_t sub_1ACD223F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 48);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 16;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, v22, v8);
  uint64_t v23 = *(void *)(v18 + 48);
  uint64_t v24 = (unsigned char *)(v23 + v21);
  uint64_t v25 = (unsigned char *)(v23 + v22);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_1ACD22538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 40);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 24;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v21, v22, v8);
  uint64_t v23 = *(void *)(v18 + 40);
  uint64_t v24 = (unsigned char *)(v23 + v21);
  uint64_t v25 = (unsigned char *)(v23 + v22);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_1ACD22680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 32);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 32;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v22, v8);
  uint64_t v23 = *(void *)(v18 + 32);
  uint64_t v24 = (unsigned char *)(v23 + v21);
  uint64_t v25 = (unsigned char *)(v23 + v22);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_1ACD227C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = (v7 + v12 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v11 + 24);
  uint64_t v17 = *(void *)(v8 - 8);
  uint64_t v18 = v17 + 40;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(v21, v22, v8);
  uint64_t v23 = *(void *)(v18 + 24);
  uint64_t v24 = (unsigned char *)(v23 + v21);
  uint64_t v25 = (unsigned char *)(v23 + v22);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  return a1;
}

uint64_t sub_1ACD22910(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(v5 - 8);
  if (v11 <= v8) {
    unsigned int v13 = v8;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = *(unsigned int *)(v12 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v9 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = *(void *)(v12 + 64);
  if (v14 <= v13) {
    unsigned int v19 = v13;
  }
  else {
    unsigned int v19 = v14;
  }
  if (v19 <= 0xFE) {
    unsigned int v19 = 254;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(void *)(v7 + 64) + v15;
  if (a2 > v19)
  {
    uint64_t v21 = v18 + ((v16 + v17 + (v20 & ~v15)) & ~v17) + 2;
    char v22 = 8 * v21;
    if (v21 > 3) {
      goto LABEL_12;
    }
    unsigned int v24 = ((a2 - v19 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v24))
    {
      int v23 = *(_DWORD *)((char *)a1 + v21);
      if (!v23) {
        goto LABEL_29;
      }
      goto LABEL_19;
    }
    if (v24 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)((char *)a1 + v21);
      if (!*(unsigned __int16 *)((char *)a1 + v21)) {
        goto LABEL_29;
      }
      goto LABEL_19;
    }
    if (v24 >= 2)
    {
LABEL_12:
      int v23 = *((unsigned __int8 *)a1 + v21);
      if (!*((unsigned char *)a1 + v21)) {
        goto LABEL_29;
      }
LABEL_19:
      int v25 = (v23 - 1) << v22;
      if (v21 > 3) {
        int v25 = 0;
      }
      if (v18 + ((v16 + v17 + (v20 & ~v15)) & ~v17) == -2)
      {
        int v27 = 0;
      }
      else
      {
        if (v21 <= 3) {
          int v26 = v18 + ((v16 + v17 + (v20 & ~v15)) & ~v17) + 2;
        }
        else {
          int v26 = 4;
        }
        switch(v26)
        {
          case 2:
            int v27 = *a1;
            break;
          case 3:
            int v27 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v27 = *(_DWORD *)a1;
            break;
          default:
            int v27 = *(unsigned __int8 *)a1;
            break;
        }
      }
      int v36 = v19 + (v27 | v25);
      return (v36 + 1);
    }
  }
LABEL_29:
  if (v8 == v19)
  {
    unint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    unint64_t v29 = a1;
    uint64_t v30 = v8;
    uint64_t v31 = v6;
LABEL_31:
    return v28(v29, v30, v31);
  }
  unint64_t v33 = ((unint64_t)a1 + v20) & ~v15;
  if (v11 != v19)
  {
    unint64_t v29 = (unsigned __int16 *)((v33 + v16 + v17) & ~v17);
    if (v14 == v19)
    {
      unint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
      uint64_t v30 = v14;
      uint64_t v31 = v5;
      goto LABEL_31;
    }
    unsigned int v35 = *((unsigned __int8 *)v29 + v18);
    if (v35 < 2) {
      return 0;
    }
    int v36 = (v35 + 2147483646) & 0x7FFFFFFF;
    return (v36 + 1);
  }
  uint64_t v34 = *(uint64_t (**)(unint64_t))(v10 + 48);
  return v34(v33);
}

void sub_1ACD22C70(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v36 = v9;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= v10) {
    unsigned int v14 = v10;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(v7 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(void *)(v11 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v21 = *(void *)(v15 + 64);
  if (v16 <= v14) {
    unsigned int v22 = v14;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v15 + 84);
  }
  if (v22 <= 0xFE) {
    unsigned int v22 = 254;
  }
  size_t v23 = v21 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20) + 2;
  if (a3 <= v22)
  {
    int v24 = 0;
  }
  else if (v23 <= 3)
  {
    unsigned int v27 = ((a3 - v22 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v27))
    {
      int v24 = 4;
    }
    else if (v27 >= 0x100)
    {
      int v24 = 2;
    }
    else
    {
      int v24 = v27 > 1;
    }
  }
  else
  {
    int v24 = 1;
  }
  if (v22 < a2)
  {
    unsigned int v25 = ~v22 + a2;
    if (v23 < 4)
    {
      int v26 = (v25 >> (8 * v23)) + 1;
      if (v21 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20) != -2)
      {
        int v28 = v25 & ~(-1 << (8 * v23));
        bzero(a1, v23);
        if (v23 == 3)
        {
          *(_WORD *)a1 = v28;
          a1[2] = BYTE2(v28);
        }
        else if (v23 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *a1 = v28;
        }
      }
    }
    else
    {
      bzero(a1, v23);
      *(_DWORD *)a1 = v25;
      int v26 = 1;
    }
    switch(v24)
    {
      case 1:
        a1[v23] = v26;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v26;
        return;
      case 3:
        goto LABEL_51;
      case 4:
        *(_DWORD *)&a1[v23] = v26;
        return;
      default:
        return;
    }
  }
  switch(v24)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_51:
      __break(1u);
      JUMPOUT(0x1ACD2303CLL);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v10 == v22)
      {
        unint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        uint64_t v30 = a1;
        uint64_t v31 = a2;
        uint64_t v32 = v10;
        uint64_t v33 = v8;
LABEL_31:
        v29(v30, v31, v32, v33);
        return;
      }
      unint64_t v34 = (unint64_t)&a1[v17 + v18] & ~v18;
      if (v13 != v22)
      {
        uint64_t v30 = (unsigned char *)((v34 + v19 + v20) & ~v20);
        if (v16 != v22)
        {
          v30[v21] = a2 + 1;
          return;
        }
        unint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        uint64_t v31 = a2;
        uint64_t v32 = v16;
        uint64_t v33 = v7;
        goto LABEL_31;
      }
      unsigned int v35 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
      v35(v34, a2);
      return;
  }
}

uint64_t sub_1ACD23064()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1ACE76FD8();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1ACD23200()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACD2321C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACD2323C()
{
  return swift_getWitnessTable();
}

uint64_t EnumStringConvertible<>.description.getter()
{
  sub_1ACE764A8();
  return v1;
}

{
  sub_1ACE764A8();
  return sub_1ACE777C8();
}

uint64_t dispatch thunk of EpisodeAndShowProcessorDelegate.didMatch(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of InvertableEpisodeAndShowProcessorDelegate.unmatched(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ACD232FC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD23340()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD23454()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD2355C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD235AC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD23650()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD237B4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD238EC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD239E0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD23AD0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD23BE8()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD23CD4(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75F88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD2A204((unint64_t *)&unk_1EB772FC8, MEMORY[0x1E4F25200]);
  uint64_t v6 = sub_1ACE763A8();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_1ACE76398();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_1ACE843F0;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v13 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_1ACE761F8();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_1ACE843F0;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v23 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_1ACE761F8();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ArtworkRequest.with(format:)@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  if (*(unsigned __int8 *)(v2 + 152) == a1)
  {
    return sub_1ACA69E2C(v2, a2);
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t v7 = *(void **)(v2 + 56);
    uint64_t v23 = *(void **)(v2 + 72);
    uint64_t v24 = *(void **)(v2 + 88);
    uint64_t v29 = *(void **)(v2 + 120);
    uint64_t v8 = *(void *)(v2 + 136);
    unint64_t v27 = *(void **)(v2 + 104);
    uint64_t v28 = *(void *)(v2 + 144);
    char v9 = *(unsigned char *)(v2 + 153);
    char v10 = *(unsigned char *)(v2 + 154);
    unsigned __int8 v11 = *(unsigned char *)(v2 + 32);
    char v12 = *(unsigned char *)(v2 + 64);
    char v13 = *(unsigned char *)(v2 + 80);
    char v14 = *(unsigned char *)(v2 + 96);
    char v26 = *(unsigned char *)(v2 + 112);
    *(void *)&long long v35 = *(void *)v2;
    *((void *)&v35 + 1) = v4;
    uint64_t v36 = v5;
    uint64_t v37 = v6;
    unsigned __int8 v38 = v11;
    long long v39 = *(_OWORD *)(v2 + 40);
    v15.i32[1] = DWORD1(v39);
    uint64_t v40 = v7;
    char v41 = v12;
    uint64_t v42 = v23;
    char v43 = v13;
    uint64_t v44 = v24;
    char v45 = v14;
    uint64_t v46 = v27;
    char v47 = v26;
    uint64_t v48 = v29;
    v15.i32[0] = *(_DWORD *)(v2 + 128);
    char v25 = vmovl_u8(v15).u8[0];
    __int32 v49 = v15.i32[0];
    uint64_t v50 = v8;
    uint64_t v51 = v28;
    unsigned __int8 v52 = a1;
    char v53 = v9;
    char v54 = v10;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    double v16 = *(double *)(v2 + 176);
    double v17 = *(double *)(v2 + 184);
    double v18 = *(double *)(v2 + 192);
    char v19 = *(unsigned char *)(v2 + 200);
    char v34 = *(unsigned char *)(v2 + 201);
    char v30 = *(unsigned char *)(v2 + 202);
    char v31 = v19;
    uint64_t v20 = *(void *)(v2 + 208);
    uint64_t v21 = v2 + 216;
    char v33 = *(unsigned char *)(v2 + 203);
    sub_1ACAAAFAC(v21, (uint64_t)v32);
    swift_bridgeObjectRetain();
    sub_1ACACD80C(v5, v6, v11);
    sub_1ACAAE1F8(v7, v12);
    sub_1ACAAE1F8(v23, v13);
    sub_1ACAAE1F8(v24, v14);
    sub_1ACAAE1F8(v27, v26);
    sub_1ACAAE1F8(v29, v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(&v35, v31, &v34, v30, v20, &v33, (uint64_t)v32, a2, v16, v17, v18);
  }
}

uint64_t sub_1ACD24278(double a1)
{
  if ((*(void *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    return 0;
  }
  sub_1ACD27F1C((uint64_t)&v2, a1);
  if ((v3 & 1) == 0) {
    return v2;
  }
  uint64_t v2 = 0;
  unint64_t v3 = 0xE000000000000000;
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE762C8();
  sub_1ACE762C8();
  sub_1ACE762C8();
  uint64_t result = sub_1ACE77498();
  __break(1u);
  return result;
}

uint64_t ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)@<X0>(long long *a1@<X0>, char a2@<W1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>)
{
  long long v46 = *a1;
  long long v47 = a1[1];
  uint64_t v48 = *((void *)a1 + 4);
  double v18 = *((double *)a1 + 5);
  double v19 = *((double *)a1 + 6);
  long long v42 = *(long long *)((char *)a1 + 120);
  long long v43 = *(long long *)((char *)a1 + 136);
  long long v44 = *(long long *)((char *)a1 + 152);
  uint64_t v45 = *((void *)a1 + 21);
  long long v38 = *(long long *)((char *)a1 + 56);
  long long v39 = *(long long *)((char *)a1 + 72);
  long long v40 = *(long long *)((char *)a1 + 88);
  long long v41 = *(long long *)((char *)a1 + 104);
  char v20 = *a3;
  char v21 = *a6;
  *(_OWORD *)(a8 + 216) = 0u;
  uint64_t v22 = a8 + 216;
  *(unsigned char *)(a8 + 201) = 16;
  *(_OWORD *)(a8 + 232) = 0u;
  *(void *)(a8 + 248) = 0;
  sub_1ACD24AD0(0x5379616C70736964, 0xEC000000656C6163, a11);
  sub_1ACD24AD0(0x6874646977, 0xE500000000000000, a9);
  sub_1ACD24AD0(0x746867696568, 0xE600000000000000, a10);
  sub_1ACD24AD0(0x69772E6C65646F6DLL, 0xEB00000000687464, v18);
  sub_1ACD24AD0(0x65682E6C65646F6DLL, 0xEC00000074686769, v19);
  v51.width = 0.0;
  v51.height = 0.0;
  v50.width = a9;
  v50.height = a10;
  if (CGSizeEqualToSize(v50, v51))
  {
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1ACE754C8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EB772EF8);
    uint64_t v24 = sub_1ACE75498();
    os_log_type_t v25 = sub_1ACE76BE8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = a7;
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl(&dword_1AC9D5000, v24, v25, "Request has an invalid size of 0, this will be convered to the preferred size but may represent an error earlier.", v27, 2u);
      uint64_t v28 = v27;
      a7 = v26;
      MEMORY[0x1AD11B340](v28, -1, -1);
    }
  }
  if (v18 == 0.0 || v19 == 0.0)
  {
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1ACE754C8();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB772EF8);
    char v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76BE8();
    if (os_log_type_enabled(v30, v31))
    {
      char v32 = v20;
      uint64_t v33 = a7;
      char v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v34 = 0;
      _os_log_impl(&dword_1AC9D5000, v30, v31, "Model has an invalid dimension of 0, this will be convered to the preferred size but may represent an error earlier.", v34, 2u);
      long long v35 = v34;
      a7 = v33;
      char v20 = v32;
      MEMORY[0x1AD11B340](v35, -1, -1);
    }
  }
  *(_OWORD *)a8 = v46;
  *(_OWORD *)(a8 + 16) = v47;
  *(void *)(a8 + 32) = v48;
  *(double *)(a8 + 40) = v18;
  *(double *)(a8 + 48) = v19;
  *(_OWORD *)(a8 + 120) = v42;
  *(_OWORD *)(a8 + 136) = v43;
  *(_OWORD *)(a8 + 152) = v44;
  *(void *)(a8 + 168) = v45;
  *(_OWORD *)(a8 + 56) = v38;
  *(_OWORD *)(a8 + 72) = v39;
  *(_OWORD *)(a8 + 88) = v40;
  *(_OWORD *)(a8 + 104) = v41;
  *(double *)(a8 + 176) = a9;
  *(double *)(a8 + 184) = a10;
  *(double *)(a8 + 192) = a11;
  *(unsigned char *)(a8 + 200) = a2 & 1;
  *(unsigned char *)(a8 + 201) = v20;
  *(unsigned char *)(a8 + 202) = a4 & 1;
  *(unsigned char *)(a8 + 203) = v21;
  *(void *)(a8 + 208) = a5;
  return sub_1ACBB135C(a7, v22);
}

uint64_t ArtworkRequest.resized(to:displayScale:)@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  long long v11 = *(_OWORD *)(v5 + 128);
  long long v12 = *(_OWORD *)(v5 + 96);
  long long v39 = *(_OWORD *)(v5 + 112);
  long long v40 = v11;
  long long v13 = *(_OWORD *)(v5 + 128);
  long long v14 = *(_OWORD *)(v5 + 160);
  long long v41 = *(_OWORD *)(v5 + 144);
  long long v42 = v14;
  long long v15 = *(_OWORD *)(v5 + 64);
  long long v16 = *(_OWORD *)(v5 + 32);
  long long v35 = *(_OWORD *)(v5 + 48);
  long long v36 = v15;
  long long v17 = *(_OWORD *)(v5 + 64);
  long long v18 = *(_OWORD *)(v5 + 96);
  long long v37 = *(_OWORD *)(v5 + 80);
  long long v38 = v18;
  long long v19 = *(_OWORD *)v5;
  long long v20 = *(_OWORD *)(v5 + 32);
  long long v33 = *(_OWORD *)(v5 + 16);
  long long v34 = v20;
  long long v21 = *(_OWORD *)v5;
  v31[8] = v13;
  v31[9] = v41;
  v31[10] = *(_OWORD *)(v5 + 160);
  long long v32 = v21;
  v31[4] = v17;
  v31[5] = v37;
  v31[6] = v12;
  v31[7] = v39;
  v31[0] = v19;
  v31[1] = v33;
  v31[2] = v16;
  v31[3] = v35;
  sub_1ACA69E2C(v5, (uint64_t)v29);
  if (a2) {
    double v22 = v30;
  }
  else {
    double v22 = a1;
  }
  sub_1ACACDD64((uint64_t)&v32);
  sub_1ACA69E88((uint64_t)v29);
  char v23 = *(unsigned char *)(v5 + 200);
  char v28 = *(unsigned char *)(v5 + 201);
  char v24 = *(unsigned char *)(v5 + 202);
  uint64_t v25 = *(void *)(v5 + 208);
  char v27 = *(unsigned char *)(v5 + 203);
  sub_1ACAAAFAC(v5 + 216, (uint64_t)v29);
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v31, v23, &v28, v24, v25, &v27, (uint64_t)v29, a3, a4, a5, v22);
}

uint64_t ArtworkRequest.model.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[9];
  long long v26 = v1[10];
  long long v5 = v1[3];
  long long v6 = v1[5];
  long long v20 = v1[4];
  long long v7 = v20;
  long long v21 = v6;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v22 = v1[6];
  long long v10 = v22;
  long long v23 = v9;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  long long v12 = v1[3];
  long long v14 = *v1;
  long long v13 = v1[1];
  long long v18 = v1[2];
  long long v15 = v18;
  long long v19 = v12;
  a1[8] = v24;
  a1[9] = v4;
  a1[10] = v1[10];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v2;
  *a1 = v14;
  a1[1] = v13;
  a1[2] = v15;
  a1[3] = v5;
  return sub_1ACACDD64((uint64_t)v17);
}

double ArtworkRequest.targetSize.getter()
{
  return *(double *)(v0 + 176);
}

double ArtworkRequest.displayScale.getter()
{
  return *(double *)(v0 + 192);
}

void ArtworkRequest.displayScale.setter(double a1)
{
  *(double *)(v1 + 192) = a1;
}

uint64_t (*ArtworkRequest.displayScale.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.retainAspectRatio.getter()
{
  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t ArtworkRequest.retainAspectRatio.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 200) = result;
  return result;
}

uint64_t (*ArtworkRequest.retainAspectRatio.modify())()
{
  return nullsub_1;
}

void ArtworkRequest.cropCodeOverride.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 201);
}

unsigned char *ArtworkRequest.cropCodeOverride.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 201) = *result;
  return result;
}

uint64_t (*ArtworkRequest.cropCodeOverride.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.destination.getter()
{
  return *(unsigned __int8 *)(v0 + 202);
}

uint64_t ArtworkRequest.destination.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 202) = result & 1;
  return result;
}

uint64_t (*ArtworkRequest.destination.modify())()
{
  return nullsub_1;
}

void ArtworkRequest.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 203);
}

unsigned char *ArtworkRequest.priority.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 203) = *result;
  return result;
}

uint64_t (*ArtworkRequest.priority.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.effects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArtworkRequest.effects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 208) = a1;
  return result;
}

uint64_t (*ArtworkRequest.effects.modify())()
{
  return nullsub_1;
}

uint64_t ArtworkRequest.trace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACAAAFAC(v1 + 216, a1);
}

uint64_t ArtworkRequest.trace.setter(uint64_t a1)
{
  return sub_1ACBB135C(a1, v1 + 216);
}

uint64_t (*ArtworkRequest.trace.modify())()
{
  return nullsub_1;
}

void sub_1ACD24AD0(uint64_t a1, unint64_t a2, double a3)
{
  if ((~*(void *)&a3 & 0x7FF0000000000000) == 0)
  {
    if (qword_1EB772F18 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1ACE754C8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB772EF8);
    swift_bridgeObjectRetain_n();
    long long v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BF8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      if ((*(void *)&a3 & 0xFFFFFFFFFFFFFLL) != 0) {
        uint64_t v11 = 5136718;
      }
      else {
        uint64_t v11 = 0x7974696E69666E69;
      }
      if ((*(void *)&a3 & 0xFFFFFFFFFFFFFLL) != 0) {
        unint64_t v12 = 0xE300000000000000;
      }
      else {
        unint64_t v12 = 0xE800000000000000;
      }
      sub_1ACA3189C(v11, v12, &v13);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(a1, a2, &v13);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v7, v8, "ArtworkRequest received %s for %s. While simulated, this crash should be investigated since it effectively opts the caller into the default size of artwork.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v10, -1, -1);
      MEMORY[0x1AD11B340](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t ArtworkRequest.replacingEffects(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ACA69E2C(v2, a2);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 208) = a1;
  return result;
}

uint64_t ArtworkRequest.bucketed(with:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  double v7 = (*(double (**)(uint64_t, uint64_t, double, double))(v6 + 8))(v5, v6, *(double *)(v2 + 176), *(double *)(v2 + 184));
  double v9 = v8;
  long long v10 = *(_OWORD *)(v2 + 128);
  long long v11 = *(_OWORD *)(v2 + 96);
  long long v37 = *(_OWORD *)(v2 + 112);
  long long v38 = v10;
  long long v12 = *(_OWORD *)(v2 + 128);
  long long v13 = *(_OWORD *)(v2 + 160);
  long long v39 = *(_OWORD *)(v2 + 144);
  long long v40 = v13;
  long long v14 = *(_OWORD *)(v2 + 64);
  long long v15 = *(_OWORD *)(v2 + 32);
  long long v33 = *(_OWORD *)(v2 + 48);
  long long v34 = v14;
  long long v16 = *(_OWORD *)(v2 + 64);
  long long v17 = *(_OWORD *)(v2 + 96);
  long long v35 = *(_OWORD *)(v2 + 80);
  long long v36 = v17;
  long long v18 = *(_OWORD *)v2;
  long long v19 = *(_OWORD *)(v2 + 32);
  long long v31 = *(_OWORD *)(v2 + 16);
  long long v32 = v19;
  long long v20 = *(_OWORD *)v2;
  v29[8] = v12;
  v29[9] = v39;
  v29[10] = *(_OWORD *)(v2 + 160);
  long long v30 = v20;
  v29[4] = v16;
  v29[5] = v35;
  v29[6] = v11;
  v29[7] = v37;
  v29[0] = v18;
  v29[1] = v31;
  v29[2] = v15;
  v29[3] = v33;
  sub_1ACA69E2C(v2, (uint64_t)v27);
  double v21 = v28;
  sub_1ACACDD64((uint64_t)&v30);
  sub_1ACA69E88((uint64_t)v27);
  char v22 = *(unsigned char *)(v2 + 200);
  char v26 = *(unsigned char *)(v3 + 201);
  LOBYTE(v5) = *(unsigned char *)(v3 + 202);
  uint64_t v23 = *(void *)(v3 + 208);
  char v25 = *(unsigned char *)(v3 + 203);
  sub_1ACAAAFAC(v3 + 216, (uint64_t)v27);
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v29, v22, &v26, v5, v23, &v25, (uint64_t)v27, a2, v7, v9, v21);
}

uint64_t ArtworkRequest.with(libraryEntity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(v4 + 8);
  double v9 = *(void **)(v4 + 56);
  long long v24 = *(void **)(v4 + 72);
  char v25 = *(void **)(v4 + 88);
  long long v30 = *(void **)(v4 + 120);
  uint64_t v10 = *(void *)(v4 + 136);
  double v28 = *(void **)(v4 + 104);
  uint64_t v29 = *(void *)(v4 + 144);
  char v11 = *(unsigned char *)(v4 + 152);
  char v12 = *(unsigned char *)(v4 + 153);
  char v13 = *(unsigned char *)(v4 + 154);
  char v14 = *(unsigned char *)(v4 + 64);
  char v15 = *(unsigned char *)(v4 + 80);
  char v16 = *(unsigned char *)(v4 + 96);
  char v27 = *(unsigned char *)(v4 + 112);
  *(void *)&long long v37 = *(void *)v4;
  *((void *)&v37 + 1) = v8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  unsigned __int8 v40 = a3;
  long long v41 = *(_OWORD *)(v4 + 40);
  v17.i32[1] = DWORD1(v41);
  long long v42 = v9;
  char v43 = v14;
  long long v44 = v24;
  char v45 = v15;
  long long v46 = v25;
  char v47 = v16;
  uint64_t v48 = v28;
  char v49 = v27;
  CGSize v50 = v30;
  v17.i32[0] = *(_DWORD *)(v4 + 128);
  char v26 = vmovl_u8(v17).u8[0];
  __int32 v51 = v17.i32[0];
  uint64_t v52 = v10;
  uint64_t v53 = v29;
  char v54 = v11;
  char v55 = v12;
  char v56 = v13;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  double v18 = *(double *)(v4 + 176);
  double v19 = *(double *)(v4 + 184);
  double v20 = *(double *)(v4 + 192);
  char v21 = *(unsigned char *)(v4 + 200);
  char v36 = *(unsigned char *)(v4 + 201);
  char v31 = *(unsigned char *)(v4 + 202);
  char v32 = v21;
  uint64_t v22 = *(void *)(v4 + 208);
  char v35 = *(unsigned char *)(v4 + 203);
  sub_1ACAAAFAC(v4 + 216, (uint64_t)v34);
  swift_bridgeObjectRetain();
  sub_1ACA75154(a1, a2, a3);
  sub_1ACAAE1F8(v9, v14);
  sub_1ACAAE1F8(v24, v15);
  sub_1ACAAE1F8(v25, v16);
  sub_1ACAAE1F8(v28, v27);
  sub_1ACAAE1F8(v30, v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(&v37, v32, &v36, v31, v22, &v35, (uint64_t)v34, a4, v18, v19, v20);
}

uint64_t ArtworkRequest.withOriginalSize.getter@<X0>(uint64_t a1@<X8>)
{
  double v3 = *(double *)(v1 + 40);
  double v4 = *(double *)(v1 + 48);
  double v5 = *(double *)(v1 + 192);
  uint64_t v6 = *(void *)(v1 + 8);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  char v11 = *(unsigned char *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  char v13 = *(unsigned char *)(v1 + 96);
  uint64_t v14 = *(void *)(v1 + 104);
  char v15 = *(unsigned char *)(v1 + 112);
  uint64_t v16 = *(void *)(v1 + 120);
  char v17 = *(unsigned char *)(v1 + 152);
  char v18 = *(unsigned char *)(v1 + 153);
  char v19 = *(unsigned char *)(v1 + 154);
  *(void *)&long long v28 = *(void *)v1;
  *((void *)&v28 + 1) = v6;
  long long v29 = *(_OWORD *)(v1 + 16);
  LOBYTE(v30) = v7;
  *((double *)&v30 + 1) = v3;
  *(double *)&long long v31 = v4;
  *((void *)&v31 + 1) = v8;
  LOBYTE(v32) = v9;
  *((void *)&v32 + 1) = v10;
  LOBYTE(v33) = v11;
  *((void *)&v33 + 1) = v12;
  LOBYTE(v34) = v13;
  *((void *)&v34 + 1) = v14;
  LOBYTE(v35) = v15;
  *((void *)&v35 + 1) = v16;
  *(_DWORD *)char v36 = *(_DWORD *)(v1 + 128);
  *(_OWORD *)&v36[8] = *(_OWORD *)(v1 + 136);
  v36[24] = v17;
  v36[25] = v18;
  v36[26] = v19;
  long long v37 = *(_OWORD *)(v1 + 160);
  v27[8] = *(_OWORD *)v36;
  v27[9] = *(_OWORD *)&v36[16];
  v27[10] = v37;
  v27[4] = v32;
  v27[5] = v33;
  v27[6] = v34;
  v27[7] = v35;
  v27[0] = v28;
  v27[1] = v29;
  v27[2] = v30;
  v27[3] = v31;
  char v20 = *(unsigned char *)(v1 + 200);
  char v26 = *(unsigned char *)(v1 + 201);
  char v21 = *(unsigned char *)(v1 + 202);
  uint64_t v22 = *(void *)(v1 + 208);
  char v25 = *(unsigned char *)(v1 + 203);
  sub_1ACAAAFAC(v1 + 216, (uint64_t)v24);
  sub_1ACACDD64((uint64_t)&v28);
  swift_bridgeObjectRetain();
  return ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v27, v20, &v26, v21, v22, &v25, (uint64_t)v24, a1, v3, v4, v5);
}

uint64_t ArtworkRequest.withoutEffects.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1ACA69E2C(v1, a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = MEMORY[0x1E4FBC860];
  return result;
}

unint64_t sub_1ACD2523C(char a1)
{
  unint64_t result = 0x6C65646F6DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6953746567726174;
      break;
    case 2:
      unint64_t result = 0x5379616C70736964;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x74616E6974736564;
      break;
    case 6:
      unint64_t result = 0x73746365666665;
      break;
    case 7:
      unint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1ACD2535C(char a1)
{
  unint64_t result = 0x6C65646F6DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6953746567726174;
      break;
    case 2:
      unint64_t result = 0x5379616C70736964;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x74616E6974736564;
      break;
    case 6:
      unint64_t result = 0x73746365666665;
      break;
    case 7:
      unint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACD2547C(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF66E8(*a1, *a2);
}

uint64_t sub_1ACD25488()
{
  return sub_1ACD23650();
}

uint64_t sub_1ACD25494()
{
  return sub_1ACBD536C();
}

uint64_t sub_1ACD2549C()
{
  return sub_1ACD23650();
}

uint64_t sub_1ACD254A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACD2A0C8();
  *a1 = result;
  return result;
}

unint64_t sub_1ACD254D4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1ACD2523C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1ACD25500()
{
  return sub_1ACD2535C(*v0);
}

uint64_t sub_1ACD25508@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACD2A0C8();
  *a1 = result;
  return result;
}

uint64_t sub_1ACD25530(uint64_t a1)
{
  unint64_t v2 = sub_1ACD28B34();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD2556C(uint64_t a1)
{
  unint64_t v2 = sub_1ACD28B34();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArtworkRequest.hash(into:)()
{
  ArtworkModel.hash(into:)();
  sub_1ACE77B58();
  sub_1ACE77B58();
  sub_1ACE77B58();
  sub_1ACE77B38();
  if (*(unsigned char *)(v0 + 201) == 16)
  {
    sub_1ACE77B38();
  }
  else
  {
    sub_1ACE77B38();
    CropCode.rawValue.getter();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
  }
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t result = sub_1ACE77B28();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    do
    {
      sub_1ACE76108();
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ArtworkRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5290);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD28B34();
  sub_1ACE77C78();
  long long v9 = v3[9];
  long long v25 = v3[8];
  long long v26 = v9;
  long long v27 = v3[10];
  long long v10 = v3[5];
  long long v21 = v3[4];
  long long v22 = v10;
  long long v11 = v3[7];
  long long v23 = v3[6];
  long long v24 = v11;
  long long v12 = v3[1];
  long long v17 = *v3;
  long long v13 = v3[2];
  long long v20 = v3[3];
  long long v18 = v12;
  long long v19 = v13;
  char v16 = 0;
  sub_1ACD28B88();
  sub_1ACE77788();
  if (!v2)
  {
    long long v17 = v3[11];
    char v16 = 1;
    type metadata accessor for CGSize(0);
    sub_1ACD2A204(&qword_1E99F52A0, type metadata accessor for CGSize);
    sub_1ACE77788();
    *(void *)&long long v17 = *((void *)v3 + 24);
    char v16 = 2;
    sub_1ACAD02DC();
    sub_1ACE77788();
    LOBYTE(v17) = 3;
    sub_1ACE77758();
    LOBYTE(v17) = *((unsigned char *)v3 + 201);
    char v16 = 4;
    sub_1ACAFABB8();
    sub_1ACE77728();
    LOBYTE(v17) = *((unsigned char *)v3 + 202);
    char v16 = 5;
    sub_1ACD28BDC();
    sub_1ACE77788();
    *(void *)&long long v17 = *((void *)v3 + 26);
    char v16 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771868);
    sub_1ACD28D2C(&qword_1E99F52B0, (void (*)(void))sub_1ACD28C30);
    sub_1ACE77788();
    LOBYTE(v17) = *((unsigned char *)v3 + 203);
    char v16 = 7;
    sub_1ACBB1480();
    sub_1ACE77788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ArtworkRequest.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t ArtworkRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771988);
  uint64_t v5 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v31 = 16;
  memset(v35, 0, sizeof(v35));
  uint64_t v36 = 0;
  uint64_t v8 = a1[3];
  long long v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ACD28B34();
  sub_1ACE77C48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    return sub_1ACB3E38C((uint64_t)v35);
  }
  else
  {
    uint64_t v12 = a2;
    char v16 = 0;
    sub_1ACD28C84();
    uint64_t v9 = v13;
    sub_1ACE77698();
    v28[8] = v25;
    v28[9] = v26;
    v28[10] = v27;
    v28[4] = v21;
    v28[5] = v22;
    v28[6] = v23;
    v28[7] = v24;
    v28[0] = v17;
    v28[1] = v18;
    v28[2] = v19;
    v28[3] = v20;
    type metadata accessor for CGSize(0);
    char v14 = 1;
    sub_1ACD2A204((unint64_t *)&unk_1EB771908, type metadata accessor for CGSize);
    sub_1ACE77698();
    v28[11] = v15;
    char v14 = 2;
    sub_1ACAD005C();
    sub_1ACE77698();
    uint64_t v29 = v15;
    LOBYTE(v15) = 3;
    char v30 = sub_1ACE77668() & 1;
    char v14 = 4;
    sub_1ACAFAA68();
    sub_1ACE77638();
    char v31 = v15;
    char v14 = 5;
    sub_1ACD28CD8();
    sub_1ACE77698();
    char v32 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771868);
    char v14 = 6;
    sub_1ACD28D2C(&qword_1EB771870, (void (*)(void))sub_1ACD28D9C);
    sub_1ACE77698();
    uint64_t v34 = v15;
    char v14 = 7;
    sub_1ACBB1528();
    sub_1ACE77698();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v9);
    char v33 = v15;
    sub_1ACA69E2C((uint64_t)v28, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    return sub_1ACA69E88((uint64_t)v28);
  }
}

uint64_t sub_1ACD26068@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkRequest.init(from:)(a1, a2);
}

uint64_t sub_1ACD26080(void *a1)
{
  return ArtworkRequest.encode(to:)(a1);
}

uint64_t sub_1ACD26098()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD260DC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD26118@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACAAAFAC(v1 + 216, a1);
}

uint64_t sub_1ACD26124(uint64_t a1)
{
  return sub_1ACBB135C(a1, v1 + 216);
}

uint64_t (*sub_1ACD2612C())()
{
  return nullsub_1;
}

uint64_t sub_1ACD26150@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkRequest.with(format:)(*a1, a2);
}

uint64_t ArtworkRequest.key.getter()
{
  CropCode.rawValue.getter();
  sub_1ACA4F4AC();
  swift_bridgeObjectRetain();
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACD2660C();
  sub_1ACE777C8();
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACD26690();
  sub_1ACE777C8();
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE76928();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE76928();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACD24278(*(double *)(v0 + 192));
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  sub_1ACE762C8();
  if (*(unsigned char *)(v0 + 201) != 16)
  {
    sub_1ACE77458();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
  }
  sub_1ACE762C8();
  sub_1ACE77458();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 208);
  if (*(void *)(v1 + 16))
  {
    Array<A>.cacheKey.getter(v1);
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = sub_1ACE76178();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1ACD2660C()
{
  double v1 = v0[5];
  double v2 = v0[24];
  if (v0[22] * v2 < v1) {
    double v1 = v0[22] * v2;
  }
  uint64_t result = sub_1ACD24278(v1);
  if (v4)
  {
    if (600.0 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (600.0 < 9.22337204e18)
    {
      return (uint64_t)600.0;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACD26690()
{
  uint64_t v1 = sub_1ACD2660C();
  double v2 = *(double *)(v0 + 184);
  if (v1 >= 1) {
    double v2 = ceil(v2 * (double)v1 / *(double *)(v0 + 176));
  }
  uint64_t result = sub_1ACD24278(v2);
  if (v4)
  {
    if (600.0 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (600.0 < 9.22337204e18)
    {
      return (uint64_t)600.0;
    }
    __break(1u);
  }
  return result;
}

uint64_t Array<A>.cacheKey.getter(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v1, 0);
    unint64_t v2 = *(void *)(v9 + 16);
    uint64_t v3 = 16 * v2;
    do
    {
      unint64_t v4 = *(void *)(v9 + 24);
      unint64_t v5 = v2 + 1;
      if (v2 >= v4 >> 1) {
        sub_1ACC82D44(v4 > 1, v2 + 1, 1);
      }
      *(void *)(v9 + 16) = v5;
      uint64_t v6 = v9 + v3;
      *(void *)(v6 + 32) = 0x64657272756C62;
      *(void *)(v6 + 40) = 0xE700000000000000;
      v3 += 16;
      unint64_t v2 = v5;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
  uint64_t v7 = sub_1ACE76138();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1ACD26864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ArtworkRequest.key.getter();
  *a1 = result;
  return result;
}

uint64_t static ArtworkRequest.CodingError.== infix(_:_:)()
{
  return 1;
}

uint64_t ArtworkRequest.CodingError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ArtworkRequest.CodingError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t ArtworkRequest.stableFilePrefix.getter()
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1ACE75F78();
  uint64_t v20 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE75F88();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE76218();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  if (*(unsigned __int8 *)(v0 + 32) != 255)
  {
    *(void *)&long long v21 = 0;
    *((void *)&v21 + 1) = 0xE000000000000000;
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
  }
  sub_1ACE76208();
  uint64_t v11 = sub_1ACE761C8();
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v13 >> 60 != 15)
  {
    sub_1ACD2A204(&qword_1EB772FC0, MEMORY[0x1E4F251D8]);
    sub_1ACE75F48();
    switch(v13 >> 62)
    {
      case 1uLL:
        if (v11 >> 32 < (int)v11) {
          __break(1u);
        }
        sub_1ACA3985C(v11, v13);
        sub_1ACB4368C((int)v11, v11 >> 32);
        goto LABEL_9;
      case 2uLL:
        uint64_t v14 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        sub_1ACA39848(v11, v13);
        swift_retain();
        swift_retain();
        sub_1ACB4368C(v14, v15);
        swift_release();
        swift_release();
LABEL_9:
        sub_1ACAB2EF0(v11, v13);
        goto LABEL_12;
      case 3uLL:
        *(void *)((char *)&v21 + 6) = 0;
        *(void *)&long long v21 = 0;
        goto LABEL_11;
      default:
        *(void *)&long long v21 = v11;
        WORD4(v21) = v13;
        BYTE10(v21) = BYTE2(v13);
        BYTE11(v21) = BYTE3(v13);
        BYTE12(v21) = BYTE4(v13);
        BYTE13(v21) = BYTE5(v13);
LABEL_11:
        sub_1ACE75F28();
        sub_1ACAB2EF0(v11, v13);
LABEL_12:
        sub_1ACE75F38();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
        uint64_t v16 = sub_1ACD23CD4((uint64_t)v6);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
        *(void *)&long long v21 = v16;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
        sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
        sub_1ACE76138();
        swift_bridgeObjectRelease();
        sub_1ACE762C8();
        swift_bridgeObjectRelease();
        sub_1ACAB2EF0(v11, v13);
        break;
    }
  }
  return v22;
}

uint64_t static ArtworkRequest.comparablePrefix(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v9 = 45;
  unint64_t v10 = 0xE100000000000000;
  v8[2] = &v9;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACD280A4(0x7FFFFFFFFFFFFFFFLL, 1, sub_1ACD28DF0, (uint64_t)v8, a1, a2);
  unint64_t v5 = *(void *)(v4 + 16);
  if (v5 >= 2) {
    unint64_t v5 = 2;
  }
  uint64_t v9 = v4;
  unint64_t v10 = v4 + 32;
  uint64_t v11 = 0;
  uint64_t v12 = (2 * v5) | 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770720);
  sub_1ACA51EA4(&qword_1EB770718, &qword_1EB770720);
  sub_1ACD28E48();
  uint64_t v6 = sub_1ACE76498();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t ArtworkRequest.fileName.getter()
{
  uint64_t v4 = ArtworkRequest.stableFilePrefix.getter();
  uint64_t v5 = v1;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  sub_1ACA69E2C(v0, (uint64_t)&v4);
  sub_1ACA69E88((uint64_t)&v4);
  sub_1ACD2660C();
  sub_1ACE777C8();
  sub_1ACE762C8();
  sub_1ACD26690();
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  CropCode.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 208);
  if (*(void *)(v2 + 16))
  {
    Array<A>.cacheKey.getter(v2);
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void ArtworkRequest.fileFormat.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x3020200u >> (8 * *(unsigned char *)(v1 + 152));
}

id ArtworkRequest.encode(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA569F0(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(id *)v8;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  id v9 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  unint64_t v10 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_contentsAtPath_, v10);

  if (v11)
  {
    id v9 = (id)sub_1ACE74F88();
  }
  else
  {
    sub_1ACD28E9C();
    swift_allocError();
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t ArtworkRequest.decode(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for ArtworkContent();
  swift_storeEnumTagMultiPayload();
  return sub_1ACA3985C(a1, a2);
}

void sub_1ACD27428(unsigned char *a1@<X8>)
{
  *a1 = 0x3020200u >> (8 * *(unsigned char *)(v1 + 152));
}

id sub_1ACD27444(uint64_t a1)
{
  return ArtworkRequest.encode(_:)(a1);
}

uint64_t sub_1ACD2745C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for ArtworkContent();
  swift_storeEnumTagMultiPayload();
  return sub_1ACA3985C(a1, a2);
}

uint64_t ArtworkRequest.inMemorySize.getter()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACA5780C(v1, v2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(v3 + 8 * v6 + 32);
      BOOL v9 = __OFADD__(v7, v8);
      v7 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) == 0) {
      return v7;
    }
    sub_1ACE77488();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ArtworkRequest.remoteUrl.getter()
{
  sub_1ACA69E2C((uint64_t)v0, (uint64_t)&v12);
  sub_1ACA69E88((uint64_t)&v12);
  uint64_t v1 = v0[1];
  uint64_t v12 = *v0;
  uint64_t v13 = v1;
  CropCode.rawValue.getter();
  sub_1ACA4F4AC();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1ACE77068();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v2;
  uint64_t v13 = v4;
  sub_1ACD2660C();
  sub_1ACE777C8();
  uint64_t v5 = sub_1ACE77068();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5;
  uint64_t v13 = v7;
  sub_1ACD26690();
  sub_1ACE777C8();
  uint64_t v8 = sub_1ACE77068();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  uint64_t v13 = v10;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE77068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACE74EF8();
  return swift_bridgeObjectRelease();
}

void sub_1ACD278A8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 203);
}

PodcastsFoundation::ArtworkRequest::Destination_optional __swiftcall ArtworkRequest.Destination.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PodcastsFoundation_ArtworkRequest_Destination_unspecified;
  }
  else {
    v2.value = PodcastsFoundation_ArtworkRequest_Destination_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t ArtworkRequest.Destination.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6669636570736E75;
  }
  else {
    return 0x79616C70736964;
  }
}

uint64_t sub_1ACD27948(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6669636570736E75;
  }
  else {
    uint64_t v3 = 0x79616C70736964;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000646569;
  }
  if (*a2) {
    uint64_t v5 = 0x6669636570736E75;
  }
  else {
    uint64_t v5 = 0x79616C70736964;
  }
  if (*a2) {
    unint64_t v6 = 0xEB00000000646569;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACD279FC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD27A88()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD27B00()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD27B88@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACD27BE8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x79616C70736964;
  if (*v1) {
    uint64_t v2 = 0x6669636570736E75;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000646569;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACD27C30()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACD27C90()
{
  return sub_1ACE764C8();
}

BOOL ArtworkRequest.Effect.init(rawValue:)()
{
  uint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t ArtworkRequest.Effect.rawValue.getter()
{
  return 0x64657272756C62;
}

uint64_t sub_1ACD27D40()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD27D94()
{
  return sub_1ACE76108();
}

uint64_t sub_1ACD27DAC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD27DFC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ACD27E50(void *a1@<X8>)
{
  *a1 = 0x64657272756C62;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1ACD27E6C()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACD27ECC()
{
  return sub_1ACE764C8();
}

BOOL sub_1ACD27F1C(uint64_t a1, double a2)
{
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    uint64_t v12 = 0;
    BOOL result = 1;
    goto LABEL_25;
  }
  if (v4 == 2047) {
    goto LABEL_28;
  }
  uint64_t v7 = sub_1ACE76958();
  if (v7 > 63) {
    goto LABEL_28;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1ACE76938();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit64(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      uint64_t v12 = 0x8000000000000000;
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v12 = 0;
    BOOL result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 63)
  {
    if (v12 < -64 || v12 > 64) {
      goto LABEL_11;
    }
  }
  else if (v12 < -64 || v12 > 64)
  {
    goto LABEL_11;
  }
  if (v12 < 0) {
    goto LABEL_32;
  }
  if ((unint64_t)v12 < 0x40)
  {
    unint64_t v14 = v5 << v12;
    if (v8 != 63) {
      goto LABEL_17;
    }
LABEL_34:
    if (a2 < 0.0 && !v14) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 63) {
    goto LABEL_27;
  }
  uint64_t v13 = 0;
  unint64_t v14 = 0;
  if (v8 < 0) {
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    uint64_t v12 = v14 | v13;
    if (a2 >= 0.0) {
      break;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      LOBYTE(v6) = 0;
      uint64_t v12 = -v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
      goto LABEL_11;
    }
    unint64_t v14 = v5 >> -(char)v12;
    if (v8 == 63) {
      goto LABEL_34;
    }
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    uint64_t v13 = 0;
  }
  if (v12 < 0) {
    goto LABEL_31;
  }
  LOBYTE(v6) = 0;
LABEL_25:
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1ACD280A4(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1ACD28548(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1ACE76368();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1ACE76298();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1ACE76298();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1ACE76388();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1ACA43CF8(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1ACA43CF8((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  long long v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1ACE76298();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1ACE76388();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1ACA43CF8(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1ACA43CF8((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    unsigned __int8 v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1ACE77488();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACD28548(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1ACE76388();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1ACA43CF8(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1ACA43CF8((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

BOOL _s18PodcastsFoundation14ArtworkRequestV2eeoiySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a1[9];
  v56[8] = a1[8];
  v56[9] = v4;
  v56[10] = a1[10];
  long long v5 = a1[5];
  v56[4] = a1[4];
  v56[5] = v5;
  long long v6 = a1[6];
  v56[7] = a1[7];
  v56[6] = v6;
  long long v7 = a1[1];
  v56[0] = *a1;
  v56[1] = v7;
  long long v8 = a1[2];
  v56[3] = a1[3];
  v56[2] = v8;
  long long v9 = a2[9];
  v53[8] = a2[8];
  v53[9] = v9;
  v53[10] = a2[10];
  long long v10 = a2[5];
  v53[4] = a2[4];
  v53[5] = v10;
  long long v11 = a2[6];
  v53[7] = a2[7];
  v53[6] = v11;
  long long v12 = a2[1];
  v53[0] = *a2;
  v53[1] = v12;
  long long v13 = a2[2];
  v53[3] = a2[3];
  v53[2] = v13;
  BOOL v14 = _s18PodcastsFoundation12ArtworkModelV2eeoiySbAC_ACtFZ_0((uint64_t)v56, (uint64_t)v53);
  sub_1ACA69E2C((uint64_t)a1, (uint64_t)v56);
  sub_1ACA69E2C((uint64_t)a2, (uint64_t)v53);
  if (!v14)
  {
    sub_1ACA69E88((uint64_t)v53);
    sub_1ACA69E88((uint64_t)v56);
    goto LABEL_10;
  }
  double v15 = v57;
  double v16 = v58;
  sub_1ACA69E88((uint64_t)v56);
  double v17 = v54;
  double v18 = v55;
  sub_1ACA69E88((uint64_t)v53);
  if (v15 != v17)
  {
LABEL_10:
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v51);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v49);
    goto LABEL_11;
  }
  sub_1ACA69E2C((uint64_t)a1, (uint64_t)v51);
  sub_1ACA69E2C((uint64_t)a2, (uint64_t)v49);
  if (v16 != v18)
  {
LABEL_11:
    sub_1ACA69E88((uint64_t)v49);
    sub_1ACA69E88((uint64_t)v51);
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v48);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v47);
    goto LABEL_12;
  }
  double v19 = v52;
  sub_1ACA69E88((uint64_t)v51);
  double v20 = v50;
  sub_1ACA69E88((uint64_t)v49);
  sub_1ACA69E2C((uint64_t)a1, (uint64_t)v48);
  sub_1ACA69E2C((uint64_t)a2, (uint64_t)v47);
  if (v19 != v20)
  {
LABEL_12:
    sub_1ACA69E88((uint64_t)v47);
    sub_1ACA69E88((uint64_t)v48);
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v45);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v43);
    goto LABEL_13;
  }
  int v21 = v48[200];
  sub_1ACA69E88((uint64_t)v48);
  int v22 = v47[200];
  sub_1ACA69E88((uint64_t)v47);
  sub_1ACA69E2C((uint64_t)a1, (uint64_t)v45);
  sub_1ACA69E2C((uint64_t)a2, (uint64_t)v43);
  if (v21 != v22) {
    goto LABEL_13;
  }
  int v23 = v44;
  if (v46 == 16)
  {
    sub_1ACA69E88((uint64_t)v43);
    sub_1ACA69E88((uint64_t)v45);
    if (v23 == 16) {
      goto LABEL_21;
    }
    goto LABEL_14;
  }
  if (v44 == 16)
  {
LABEL_13:
    sub_1ACA69E88((uint64_t)v43);
    sub_1ACA69E88((uint64_t)v45);
LABEL_14:
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v41);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v39);
    goto LABEL_15;
  }
  v41[0] = v46;
  v39[0] = v44;
  uint64_t v26 = CropCode.rawValue.getter();
  uint64_t v28 = v27;
  if (v26 != CropCode.rawValue.getter() || v28 != v29)
  {
    char v35 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ACA69E88((uint64_t)v43);
    sub_1ACA69E88((uint64_t)v45);
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v41);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v39);
    if (v35) {
      goto LABEL_22;
    }
LABEL_15:
    sub_1ACA69E88((uint64_t)v39);
    sub_1ACA69E88((uint64_t)v41);
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v37);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v36);
    BOOL v24 = 0;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease_n();
  sub_1ACA69E88((uint64_t)v43);
  sub_1ACA69E88((uint64_t)v45);
LABEL_21:
  sub_1ACA69E2C((uint64_t)a1, (uint64_t)v41);
  sub_1ACA69E2C((uint64_t)a2, (uint64_t)v39);
LABEL_22:
  if (v42) {
    uint64_t v30 = 0x6669636570736E75;
  }
  else {
    uint64_t v30 = 0x79616C70736964;
  }
  if (v42) {
    unint64_t v31 = 0xEB00000000646569;
  }
  else {
    unint64_t v31 = 0xE700000000000000;
  }
  if (v40) {
    uint64_t v32 = 0x6669636570736E75;
  }
  else {
    uint64_t v32 = 0x79616C70736964;
  }
  if (v40) {
    unint64_t v33 = 0xEB00000000646569;
  }
  else {
    unint64_t v33 = 0xE700000000000000;
  }
  if (v30 == v32 && v31 == v33)
  {
    swift_bridgeObjectRelease_n();
    sub_1ACA69E88((uint64_t)v39);
    sub_1ACA69E88((uint64_t)v41);
    sub_1ACA69E2C((uint64_t)a1, (uint64_t)v37);
    sub_1ACA69E2C((uint64_t)a2, (uint64_t)v36);
LABEL_38:
    BOOL v24 = sub_1ACA88444(v38, v36[26]);
    goto LABEL_16;
  }
  char v34 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACA69E88((uint64_t)v39);
  sub_1ACA69E88((uint64_t)v41);
  sub_1ACA69E2C((uint64_t)a1, (uint64_t)v37);
  sub_1ACA69E2C((uint64_t)a2, (uint64_t)v36);
  BOOL v24 = 0;
  if (v34) {
    goto LABEL_38;
  }
LABEL_16:
  sub_1ACA69E88((uint64_t)v37);
  sub_1ACA69E88((uint64_t)v36);
  return v24;
}

unint64_t sub_1ACD28B34()
{
  unint64_t result = qword_1EB770F80;
  if (!qword_1EB770F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F80);
  }
  return result;
}

unint64_t sub_1ACD28B88()
{
  unint64_t result = qword_1E99F5298;
  if (!qword_1E99F5298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5298);
  }
  return result;
}

unint64_t sub_1ACD28BDC()
{
  unint64_t result = qword_1E99F52A8;
  if (!qword_1E99F52A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52A8);
  }
  return result;
}

unint64_t sub_1ACD28C30()
{
  unint64_t result = qword_1E99F52B8;
  if (!qword_1E99F52B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52B8);
  }
  return result;
}

unint64_t sub_1ACD28C84()
{
  unint64_t result = qword_1EB770F00;
  if (!qword_1EB770F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F00);
  }
  return result;
}

unint64_t sub_1ACD28CD8()
{
  unint64_t result = qword_1EB770F98;
  if (!qword_1EB770F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F98);
  }
  return result;
}

uint64_t sub_1ACD28D2C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB771868);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACD28D9C()
{
  unint64_t result = qword_1EB770FA0;
  if (!qword_1EB770FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770FA0);
  }
  return result;
}

uint64_t sub_1ACD28DF0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1ACE77848() & 1;
  }
}

unint64_t sub_1ACD28E48()
{
  unint64_t result = qword_1EB76E018;
  if (!qword_1EB76E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76E018);
  }
  return result;
}

unint64_t sub_1ACD28E9C()
{
  unint64_t result = qword_1E99F52C0;
  if (!qword_1E99F52C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52C0);
  }
  return result;
}

unint64_t sub_1ACD28EF4()
{
  unint64_t result = qword_1EB76F240;
  if (!qword_1EB76F240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB76F240);
  }
  return result;
}

unint64_t sub_1ACD28F4C()
{
  unint64_t result = qword_1E99F52C8;
  if (!qword_1E99F52C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52C8);
  }
  return result;
}

unint64_t sub_1ACD28FA4()
{
  unint64_t result = qword_1E99F52D0;
  if (!qword_1E99F52D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52D0);
  }
  return result;
}

unint64_t sub_1ACD28FFC()
{
  unint64_t result = qword_1E99F52D8;
  if (!qword_1E99F52D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52D8);
  }
  return result;
}

uint64_t destroy for ArtworkRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255) {
    sub_1ACA74630(*(void *)(a1 + 16), *(void *)(a1 + 24), v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(a1 + 56), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(a1 + 72), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(a1 + 88), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 112);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(a1 + 104), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 128);
  if (v7 != 255) {
    sub_1ACA74648(*(id *)(a1 + 120), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 240))
  {
    return __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  }
  return result;
}

uint64_t initializeWithCopy for ArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    sub_1ACA75154(v6, v7, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v8 = (id *)(a2 + 56);
  int v9 = *(unsigned __int8 *)(a2 + 64);
  if (v9 == 255)
  {
    *(void *)(a1 + 56) = *v8;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    id v10 = *v8;
    sub_1ACA7516C(*v8, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 56) = v10;
    *(unsigned char *)(a1 + 64) = v9;
  }
  long long v11 = (id *)(a2 + 72);
  int v12 = *(unsigned __int8 *)(a2 + 80);
  if (v12 == 255)
  {
    *(void *)(a1 + 72) = *v11;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    id v13 = *v11;
    sub_1ACA7516C(*v11, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = v12;
  }
  BOOL v14 = (id *)(a2 + 88);
  int v15 = *(unsigned __int8 *)(a2 + 96);
  if (v15 == 255)
  {
    *(void *)(a1 + 88) = *v14;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    id v16 = *v14;
    sub_1ACA7516C(*v14, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 88) = v16;
    *(unsigned char *)(a1 + 96) = v15;
  }
  double v17 = (id *)(a2 + 104);
  int v18 = *(unsigned __int8 *)(a2 + 112);
  if (v18 == 255)
  {
    *(void *)(a1 + 104) = *v17;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    id v19 = *v17;
    sub_1ACA7516C(*v17, *(unsigned char *)(a2 + 112));
    *(void *)(a1 + 104) = v19;
    *(unsigned char *)(a1 + 112) = v18;
  }
  double v20 = (id *)(a2 + 120);
  int v21 = *(unsigned __int8 *)(a2 + 128);
  if (v21 == 255)
  {
    *(void *)(a1 + 120) = *v20;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  }
  else
  {
    id v22 = *v20;
    sub_1ACA7516C(*v20, *(unsigned char *)(a2 + 128));
    *(void *)(a1 + 120) = v22;
    *(unsigned char *)(a1 + 128) = v21;
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v23 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v23;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  uint64_t v24 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v24;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v25 = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v25;
    *(void *)(a1 + 248) = v26;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 216, a2 + 216, v25);
  }
  else
  {
    long long v27 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v27;
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  return a1;
}

uint64_t assignWithCopy for ArtworkRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  int v5 = (long long *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      long long v15 = *v5;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *uint64_t v4 = v15;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      sub_1ACA75154(v12, v13, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1ACA75B3C(a1 + 16);
    char v14 = *(unsigned char *)(a2 + 32);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 32) = v14;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    sub_1ACA75154(v7, v8, *(unsigned char *)(a2 + 32));
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v6;
    sub_1ACA74630(v9, v10, v11);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v16 = (id *)(a1 + 56);
  double v17 = (id *)(a2 + 56);
  int v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      id v24 = *v17;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *id v16 = v24;
    }
    else
    {
      id v22 = *v17;
      sub_1ACA7516C(*v17, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v22;
      *(unsigned char *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_1ACA75B90(a1 + 56);
    char v23 = *(unsigned char *)(a2 + 64);
    *id v16 = *v17;
    *(unsigned char *)(a1 + 64) = v23;
  }
  else
  {
    id v19 = *v17;
    sub_1ACA7516C(*v17, *(unsigned char *)(a2 + 64));
    double v20 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v19;
    char v21 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v18;
    sub_1ACA74648(v20, v21);
  }
  uint64_t v25 = (id *)(a1 + 72);
  uint64_t v26 = (id *)(a2 + 72);
  int v27 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v27 == 255)
    {
      id v33 = *v26;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v25 = v33;
    }
    else
    {
      id v31 = *v26;
      sub_1ACA7516C(*v26, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v31;
      *(unsigned char *)(a1 + 80) = v27;
    }
  }
  else if (v27 == 255)
  {
    sub_1ACA75B90(a1 + 72);
    char v32 = *(unsigned char *)(a2 + 80);
    *uint64_t v25 = *v26;
    *(unsigned char *)(a1 + 80) = v32;
  }
  else
  {
    id v28 = *v26;
    sub_1ACA7516C(*v26, *(unsigned char *)(a2 + 80));
    uint64_t v29 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v28;
    char v30 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v27;
    sub_1ACA74648(v29, v30);
  }
  char v34 = (id *)(a1 + 88);
  char v35 = (id *)(a2 + 88);
  int v36 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v36 == 255)
    {
      id v42 = *v35;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *char v34 = v42;
    }
    else
    {
      id v40 = *v35;
      sub_1ACA7516C(*v35, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v40;
      *(unsigned char *)(a1 + 96) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_1ACA75B90(a1 + 88);
    char v41 = *(unsigned char *)(a2 + 96);
    *char v34 = *v35;
    *(unsigned char *)(a1 + 96) = v41;
  }
  else
  {
    id v37 = *v35;
    sub_1ACA7516C(*v35, *(unsigned char *)(a2 + 96));
    uint64_t v38 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v37;
    char v39 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v36;
    sub_1ACA74648(v38, v39);
  }
  uint64_t v43 = (id *)(a1 + 104);
  unsigned __int8 v44 = (id *)(a2 + 104);
  int v45 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v45 == 255)
    {
      id v51 = *v44;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *uint64_t v43 = v51;
    }
    else
    {
      id v49 = *v44;
      sub_1ACA7516C(*v44, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v49;
      *(unsigned char *)(a1 + 112) = v45;
    }
  }
  else if (v45 == 255)
  {
    sub_1ACA75B90(a1 + 104);
    char v50 = *(unsigned char *)(a2 + 112);
    *uint64_t v43 = *v44;
    *(unsigned char *)(a1 + 112) = v50;
  }
  else
  {
    id v46 = *v44;
    sub_1ACA7516C(*v44, *(unsigned char *)(a2 + 112));
    uint64_t v47 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v46;
    char v48 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v45;
    sub_1ACA74648(v47, v48);
  }
  double v52 = (id *)(a1 + 120);
  uint64_t v53 = (id *)(a2 + 120);
  int v54 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v54 == 255)
    {
      id v60 = *v53;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      id *v52 = v60;
    }
    else
    {
      id v58 = *v53;
      sub_1ACA7516C(*v53, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v58;
      *(unsigned char *)(a1 + 128) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_1ACA75B90(a1 + 120);
    char v59 = *(unsigned char *)(a2 + 128);
    id *v52 = *v53;
    *(unsigned char *)(a1 + 128) = v59;
  }
  else
  {
    id v55 = *v53;
    sub_1ACA7516C(*v53, *(unsigned char *)(a2 + 128));
    char v56 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v55;
    char v57 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v54;
    sub_1ACA74648(v56, v57);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(unsigned char *)(a1 + 131) = *(unsigned char *)(a2 + 131);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = *(void *)(a2 + 240);
  if (!*(void *)(a1 + 240))
  {
    if (v61)
    {
      *(void *)(a1 + 240) = v61;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      (**(void (***)(uint64_t, uint64_t))(v61 - 8))(a1 + 216, a2 + 216);
      return a1;
    }
LABEL_49:
    long long v62 = *(_OWORD *)(a2 + 216);
    long long v63 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v62;
    *(_OWORD *)(a1 + 232) = v63;
    return a1;
  }
  if (!v61)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
    goto LABEL_49;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 216), (uint64_t *)(a2 + 216));
  return a1;
}

uint64_t assignWithTake for ArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = (_OWORD *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    int v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 != 255)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(unsigned char *)(a1 + 32) = v7;
      sub_1ACA74630(v8, v9, v6);
      goto LABEL_6;
    }
    sub_1ACA75B3C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v10 = (void *)(a2 + 56);
  int v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    int v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      uint64_t v13 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v10;
      *(unsigned char *)(a1 + 64) = v12;
      sub_1ACA74648(v13, v11);
      goto LABEL_11;
    }
    sub_1ACA75B90(a1 + 56);
  }
  *(void *)(a1 + 56) = *v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_11:
  char v14 = (void *)(a2 + 72);
  int v15 = *(unsigned __int8 *)(a1 + 80);
  if (v15 != 255)
  {
    int v16 = *(unsigned __int8 *)(a2 + 80);
    if (v16 != 255)
    {
      double v17 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v14;
      *(unsigned char *)(a1 + 80) = v16;
      sub_1ACA74648(v17, v15);
      goto LABEL_16;
    }
    sub_1ACA75B90(a1 + 72);
  }
  *(void *)(a1 + 72) = *v14;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_16:
  int v18 = (void *)(a2 + 88);
  int v19 = *(unsigned __int8 *)(a1 + 96);
  if (v19 != 255)
  {
    int v20 = *(unsigned __int8 *)(a2 + 96);
    if (v20 != 255)
    {
      char v21 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v18;
      *(unsigned char *)(a1 + 96) = v20;
      sub_1ACA74648(v21, v19);
      goto LABEL_21;
    }
    sub_1ACA75B90(a1 + 88);
  }
  *(void *)(a1 + 88) = *v18;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_21:
  id v22 = (void *)(a2 + 104);
  int v23 = *(unsigned __int8 *)(a1 + 112);
  if (v23 != 255)
  {
    int v24 = *(unsigned __int8 *)(a2 + 112);
    if (v24 != 255)
    {
      uint64_t v25 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v22;
      *(unsigned char *)(a1 + 112) = v24;
      sub_1ACA74648(v25, v23);
      goto LABEL_26;
    }
    sub_1ACA75B90(a1 + 104);
  }
  *(void *)(a1 + 104) = *v22;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_26:
  uint64_t v26 = (void *)(a2 + 120);
  int v27 = *(unsigned __int8 *)(a1 + 128);
  if (v27 != 255)
  {
    int v28 = *(unsigned __int8 *)(a2 + 128);
    if (v28 != 255)
    {
      uint64_t v29 = *(void **)(a1 + 120);
      *(void *)(a1 + 120) = *v26;
      *(unsigned char *)(a1 + 128) = v28;
      sub_1ACA74648(v29, v27);
      goto LABEL_31;
    }
    sub_1ACA75B90(a1 + 120);
  }
  *(void *)(a1 + 120) = *v26;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
LABEL_31:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  uint64_t v30 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  uint64_t v31 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v31;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 240)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 216);
  }
  long long v32 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v32;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 256)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 256) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 256) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest()
{
  return &type metadata for ArtworkRequest;
}

ValueMetadata *type metadata accessor for ArtworkRequest.CodingError()
{
  return &type metadata for ArtworkRequest.CodingError;
}

unsigned char *storeEnumTagSinglePayload for ArtworkRequest.Destination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD29DB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest.Destination()
{
  return &type metadata for ArtworkRequest.Destination;
}

unsigned char *_s18PodcastsFoundation14ArtworkRequestV6EffectOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1ACD29E84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest.Effect()
{
  return &type metadata for ArtworkRequest.Effect;
}

unsigned char *storeEnumTagSinglePayload for ArtworkRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD29F88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkRequest.CodingKeys()
{
  return &type metadata for ArtworkRequest.CodingKeys;
}

unint64_t sub_1ACD29FC4()
{
  unint64_t result = qword_1E99F52E0;
  if (!qword_1E99F52E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52E0);
  }
  return result;
}

unint64_t sub_1ACD2A01C()
{
  unint64_t result = qword_1EB770B18;
  if (!qword_1EB770B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770B18);
  }
  return result;
}

unint64_t sub_1ACD2A074()
{
  unint64_t result = qword_1EB770F88;
  if (!qword_1EB770F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F88);
  }
  return result;
}

uint64_t sub_1ACD2A0C8()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACD2A114()
{
  unint64_t result = qword_1E99F52E8;
  if (!qword_1E99F52E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F52E8);
  }
  return result;
}

unint64_t sub_1ACD2A168()
{
  unint64_t result = qword_1EB770F90;
  if (!qword_1EB770F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770F90);
  }
  return result;
}

uint64_t sub_1ACD2A1BC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACD2A1F4()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD2A204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DownloadStateChecker.init(context:episodePropertiesToReport:showPropertiesToReport:allEpisodes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  return result;
}

void DownloadStateChecker.report(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 16);
  char v10 = *(unsigned char *)(v3 + 24);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v7;
  *(void *)(v11 + 32) = v9;
  *(unsigned char *)(v11 + 40) = v10;
  *(void *)(v11 + 48) = a1;
  *(void *)(v11 + 56) = a2;
  *(void *)(v11 + 64) = a3;
  v14[4] = sub_1ACB51AEC;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1ACA6DA9C;
  v14[3] = &block_descriptor_68;
  int v12 = _Block_copy(v14);
  id v13 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v12);
  _Block_release(v12);
}

uint64_t sub_1ACD2A38C(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1ACD355DC;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1ACADC690;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_9_3;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlockAndWait_, v7);
  _Block_release(v7);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    if (v12)
    {
      swift_release();
      return v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACD2A4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1ACD355DC;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1ACB58DC4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC525DC;
  aBlock[3] = &block_descriptor_19;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_performBlockAndWait_, v7);
  _Block_release(v7);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    if (v12)
    {
      swift_release();
      return v10;
    }
  }
  __break(1u);
  return result;
}

id sub_1ACD2A66C(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v2 = (void *)sub_1ACE74E18();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_1ACE74F28();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_1ACE74D78();

    swift_willThrow();
    uint64_t v9 = sub_1ACE74F28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_1ACD2A7C4(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(char *, void), uint64_t a7)
{
  uint64_t v28 = a7;
  v27[3] = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F5320);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  id v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  uint64_t v14 = *(void *)(a5 + 16);
  int v15 = self;
  int v16 = v15;
  if (v14)
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_1ACB02BC0(v17);
    swift_bridgeObjectRelease();
    id v18 = (id)sub_1ACE76978();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v16, sel_predicateForPodcastUuids_, v18);
  }
  else
  {
    id v20 = objc_msgSend(v15, sel_predicateForPodcastToAutoRemove);
    id v18 = objc_msgSend(v16, sel_predicateForPodcastsToAutodownload);
    id v19 = [v20 OR:v18];
  }
  objc_msgSend(v13, sel_setPredicate_, v19);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  unint64_t v21 = sub_1ACE76EE8();
  unint64_t v22 = sub_1ACC2BD50(v21);

  swift_bridgeObjectRelease();
  if (v22)
  {
    id v23 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1ACD35198(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  sub_1ACE75098();
  uint64_t v25 = type metadata accessor for DownloadStateReport();
  *(void *)&v12[*(int *)(v25 + 20)] = v24;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 0, 1, v25);
  a6(v12, 0);
  return sub_1ACA50E78((uint64_t)v12, (uint64_t *)&unk_1E99F5320);
}

uint64_t sub_1ACD2AB34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

id sub_1ACD2AB8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned __int8 v44 = a2;
  id v3 = v2;
  uint64_t v4 = *v2;
  uint64_t v6 = v3[1];
  uint64_t v5 = v3[2];
  id v46 = a1;
  uint64_t v47 = v5;
  char v7 = *((unsigned char *)v3 + 24);
  id result = objc_msgSend(a1, sel_uuid);
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = sub_1ACE761B8();
    uint64_t v12 = v11;

    id v13 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
    id v14 = objc_msgSend(v13, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");

    MEMORY[0x1F4188790](v15);
    v38[2] = v10;
    v38[3] = v12;
    uint64_t v39 = v4;
    uint64_t v40 = v6;
    uint64_t v16 = v47;
    uint64_t v41 = v47;
    char v42 = v7;
    id v43 = v14;
    uint64_t v17 = sub_1ACD2A38C((uint64_t)sub_1ACD35378, (uint64_t)v38);
    uint64_t v18 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v18);
    uint64_t v39 = v4;
    uint64_t v40 = v6;
    uint64_t v41 = v16;
    char v42 = v7;
    uint64_t v19 = v45;
    id v20 = v46;
    id v43 = v46;
    uint64_t v21 = sub_1ACD34EC4(v17, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1ACD35390);
    id result = (id)swift_bridgeObjectRelease();
    if (!v19)
    {
      uint64_t v22 = v47;
      id v23 = objc_msgSend(v20, sel_uuid);
      if (v23)
      {
        uint64_t v24 = v23;
        uint64_t v45 = sub_1ACE761B8();
        unint64_t v26 = v25;
      }
      else
      {
        unint64_t v26 = 0xE300000000000000;
        uint64_t v45 = 4999502;
      }
      v49[0] = v4;
      v49[1] = v6;
      v49[2] = v22;
      LOBYTE(v50) = v7;
      uint64_t v27 = sub_1ACD2B05C(v22, v20);
      uint64_t v28 = v20;
      uint64_t v29 = self;
      id v30 = objc_msgSend(v29, sel_predicateForPodcastsToAutodownload);
      uint64_t v31 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
      uint64_t v50 = v31;
      v49[0] = v28;
      id v32 = v28;
      NSPredicate.explain(with:)(v49, &v51);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      uint64_t v33 = v51;
      id v34 = objc_msgSend(v29, sel_predicateForPodcastToAutoRemove);
      uint64_t v50 = v31;
      v49[0] = v32;
      id v35 = v32;
      NSPredicate.explain(with:)(v49, &v48);

      id result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      uint64_t v36 = v48;
      id v37 = v44;
      *unsigned __int8 v44 = v45;
      v37[1] = v26;
      v37[2] = v27;
      v37[3] = v21;
      v37[4] = v33;
      v37[5] = v36;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1ACD2AED0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, char a7@<W6>, void *a8@<X7>, void *a9@<X8>)
{
  uint64_t v16 = (void *)sub_1ACE76178();
  id v17 = objc_msgSend(a4, sel_episodeForUuid_, v16);

  if (v17)
  {
    v27[0] = (unint64_t)a4;
    v27[1] = a5;
    v27[2] = a6;
    char v28 = a7 & 1;
    uint64_t v18 = sub_1ACD2B05C(a5, v17);
    sub_1ACD2B254(a8, v17, v27);
    if (v9)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v19 = v27[0];
      sub_1ACD2B388(a8, v17, &v29);
      unint64_t v20 = v29;
      sub_1ACD2B4B4(v17, &v26);

      uint64_t v21 = v26;
      *a9 = a1;
      a9[1] = a2;
      a9[2] = v18;
      a9[3] = a3;
      a9[4] = v19;
      a9[5] = v20;
      a9[6] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    a9[6] = 0;
    double result = 0.0;
    *((_OWORD *)a9 + 1) = 0u;
    *((_OWORD *)a9 + 2) = 0u;
    *(_OWORD *)a9 = 0u;
  }
  return result;
}

uint64_t sub_1ACD2B05C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1ACD353B8(a1, v3);

  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    sub_1ACC82D44(0, v5, 0);
    uint64_t v6 = v4 + 32;
    do
    {
      sub_1ACA3AAD4(v6, (uint64_t)v20, qword_1EB7725E0);
      sub_1ACA3AAD4((uint64_t)v20, (uint64_t)&v17, qword_1EB7725E0);
      if (v18)
      {
        sub_1ACA3AA44(&v17, v19);
        sub_1ACA33128((uint64_t)v19, (uint64_t)&v17);
        uint64_t v7 = sub_1ACE76228();
        unint64_t v9 = v8;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      }
      else
      {
        sub_1ACA50E78((uint64_t)&v17, qword_1EB7725E0);
        unint64_t v9 = 0xE300000000000000;
        uint64_t v7 = 4999502;
      }
      sub_1ACA50E78((uint64_t)v20, qword_1EB7725E0);
      uint64_t v10 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC82D44(0, v10[2] + 1, 1);
        uint64_t v10 = v21;
      }
      unint64_t v12 = v10[2];
      unint64_t v11 = v10[3];
      if (v12 >= v11 >> 1)
      {
        sub_1ACC82D44(v11 > 1, v12 + 1, 1);
        uint64_t v10 = v21;
      }
      void v10[2] = v12 + 1;
      id v13 = &v10[2 * v12];
      v13[4] = v7;
      v13[5] = v9;
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  id v14 = (void *)swift_bridgeObjectRetain();
  uint64_t v15 = sub_1ACD35520(v14, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

id sub_1ACD2B254@<X0>(id a1@<X1>, void *a2@<X0>, unint64_t *a3@<X8>)
{
  id result = objc_msgSend(a1, sel_uuid);
  if (result)
  {
    unint64_t v8 = result;
    id v9 = objc_msgSend(self, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, result, objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(a1, sel_episodeLimitResolvedValue), 0, 0);

    v12[3] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    v12[0] = a2;
    id v10 = a2;
    NSPredicate.explain(with:)(v12, (uint64_t *)&v13);

    id result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    if (v3) {
      return result;
    }
    unint64_t v11 = v13;
  }
  else
  {
    unint64_t v11 = 0xF000000000000007;
  }
  *a3 = v11;
  return result;
}

id sub_1ACD2B388@<X0>(id a1@<X1>, void *a2@<X0>, unint64_t *a3@<X8>)
{
  id result = objc_msgSend(a1, sel_uuid);
  if (result)
  {
    unint64_t v8 = result;
    id v9 = objc_msgSend(self, sel_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_, result, objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(a1, sel_episodeLimitResolvedValue));

    v12[3] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    v12[0] = a2;
    id v10 = a2;
    NSPredicate.explain(with:)(v12, (uint64_t *)&v13);

    id result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    if (v3) {
      return result;
    }
    unint64_t v11 = v13;
  }
  else
  {
    unint64_t v11 = 0xF000000000000007;
  }
  *a3 = v11;
  return result;
}

uint64_t sub_1ACD2B4B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v20 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = sub_1ACE75208();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  id v10 = objc_msgSend(v9, sel_episodeLimitForKey_, @"MTPodcastEpisodeLimitDefaultKey");

  uint64_t v11 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  sub_1ACE75088();
  sub_1ACE751D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ACE8F1F0;
  *(void *)(v12 + 32) = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
  *(void *)(v12 + 40) = sub_1ACDF6920((uint64_t)v10);
  v22[0] = v12;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  unint64_t v13 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22[3] = v11;
  v22[0] = v20;
  id v15 = v20;
  uint64_t v16 = v21;
  NSPredicate.explain(with:)(v22, &v23);

  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  if (!v16) {
    void *v18 = v23;
  }
  return result;
}

uint64_t sub_1ACD2B78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void *a1@<X8>)@<X3>, void (*a5)(void *a1@<X8>)@<X4>, int a6@<W5>, uint64_t a7@<X6>, unint64_t *a8@<X8>)
{
  uint64_t v485 = a7;
  int v474 = a6;
  v487 = a4;
  v488 = a5;
  v484 = a8;
  uint64_t v482 = sub_1ACE75208();
  v480 = *(void (**)(void *@<X8>))(v482 - 8);
  MEMORY[0x1F4188790](v482);
  uint64_t v12 = (char *)&v463 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE750A8();
  v481 = *(void (***)(uint64_t, uint64_t))(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v463 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F80);
  uint64_t v16 = (uint64_t)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  long long v17 = self;
  uint64_t v471 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = (void *)sub_1ACE76178();
  id v20 = objc_msgSend(v17, sel_predicateForPodcastUUID_, v19);

  objc_msgSend((id)v16, sel_setPredicate_, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  uint64_t v21 = sub_1ACE76EE8();
  v478 = 0;
  uint64_t v31 = v21;
  v491 = v17;
  uint64_t v476 = (uint64_t)v15;
  v477 = v12;
  uint64_t v479 = v13;
  uint64_t v32 = (uint64_t)v487;
  uint64_t v470 = v18;
  if (!sub_1ACAEB6B4())
  {
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v54 = sub_1ACA397A4(0);
    unint64_t v55 = sub_1ACA37FF0(v54);

    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v25 = 0;
    uint64_t v479 = 0;
    v480 = 0;
    uint64_t v27 = 0;
    char v28 = 0;
    uint64_t v56 = 0;
    char v57 = 0;
    uint64_t v30 = 0;
    unint64_t v29 = 0;
    unint64_t *v484 = v55;
LABEL_16:
    sub_1ACA76F34(v24);
    sub_1ACA76F34(v26);
    sub_1ACA76F34(v25);
    sub_1ACA76F34((uint64_t)v480);
    sub_1ACA76F34(v27);
    sub_1ACA76F34((uint64_t)v28);
    sub_1ACA76F34(v479);
    sub_1ACA76F34(v56);
    sub_1ACA76F34((uint64_t)v57);
    sub_1ACA76F34(v30);
    return sub_1ACA76F34((uint64_t)v29);
  }
  BOOL v33 = sub_1ACAEB6A0(v31);
  uint64_t v469 = a3;
  if (!v33) {
    goto LABEL_443;
  }
  char v34 = v474;
  id v35 = v488;
  if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_445;
  }
  uint64_t v36 = *(void *)(v31 + 32);
  swift_unknownObjectRetain();
LABEL_8:
  id v37 = v491;
  swift_bridgeObjectRelease();
  self;
  uint64_t v38 = swift_dynamicCastObjCClass();
  if (!v38)
  {
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  uint64_t v39 = (void *)v38;
  uint64_t v468 = v36;
  id v40 = objc_msgSend(v37, sel_predicateForAutoDownloadEnabled);
  unsigned int v41 = objc_msgSend(v40, sel_evaluateWithObject_, v39);

  id v483 = (id)v16;
  if (v41)
  {
    id v42 = objc_msgSend(v39, sel_uuid);
    if (!v42) {
      goto LABEL_457;
    }
    id v43 = v42;
    unsigned __int8 v44 = self;
    id v45 = objc_msgSend(v44, sel_predicateForEpisodesThatShouldBeAutodownloadedForShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v43, objc_msgSend(v39, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(v39, sel_episodeLimitResolvedValue), 0, 0);

    uint64_t v46 = v469;
    unint64_t v493 = v469;
    v494 = (void (*)(void *@<X8>))v32;
    v495 = v35;
    char v47 = v474 & 1;
    char v496 = v474 & 1;
    v472 = (void (*)(void *@<X8>))sub_1ACD2EFB0((uint64_t)v45, v469);

    id v48 = objc_msgSend(v39, sel_uuid);
    if (!v48) {
      goto LABEL_458;
    }
    id v49 = v48;
    id v50 = objc_msgSend(v44, sel_predicateForAutomaticDownloadsOnShow_deletePlayedEpisodes_episodeLimit_serialNextEpisodesSort_includePlayableWithoutAccount_, v48, objc_msgSend(v39, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(v39, sel_episodeLimitResolvedValue), 0, 0);

    unint64_t v493 = v46;
    v494 = (void (*)(void *@<X8>))v32;
    v495 = v35;
    char v496 = v47;
    uint64_t v490 = sub_1ACD2EFB0((uint64_t)v50, v46);

    uint64_t v51 = &selRef_supportsMetrics;
    double v52 = (void (*)(void *@<X8>))v32;
    char v34 = v474;
    id v37 = v491;
    uint64_t v53 = &selRef_addBagKey_valueType_;
  }
  else
  {
    uint64_t v59 = sub_1ACA395F4(0);
    if (sub_1ACAEB6AC(v59)) {
      v472 = (void (*)(void *@<X8>))sub_1ACA6C680(v59);
    }
    else {
      v472 = (void (*)(void *@<X8>))MEMORY[0x1E4FBC870];
    }
    uint64_t v51 = &selRef_supportsMetrics;
    double v52 = (void (*)(void *@<X8>))v32;
    uint64_t v53 = &selRef_addBagKey_valueType_;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_1ACA395F4(0);
    if (sub_1ACAEB6AC(v60))
    {
      uint64_t v490 = sub_1ACA6C680(v60);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v490 = MEMORY[0x1E4FBC870];
    }
  }
  id v61 = objc_msgSend(v37, sel_predicateForPodcastToAutoRemove);
  unsigned int v62 = objc_msgSend(v61, v53[327], v39);

  if (v62)
  {
    id v63 = [v39 v51[65]];
    if (!v63) {
      goto LABEL_459;
    }
    uint64_t v64 = v63;
    id v65 = objc_msgSend(self, sel_predicateForAutomaticDeletionOnShow_deletePlayedEpisodes_episodeLimit_, v63, objc_msgSend(v39, sel_deletePlayedEpisodesResolvedValue), objc_msgSend(v39, sel_episodeLimitResolvedValue));

    uint64_t v66 = v469;
    unint64_t v493 = v469;
    v494 = v52;
    uint64_t v67 = v488;
    v495 = v488;
    char v496 = v34 & 1;
    uint64_t v489 = sub_1ACD2EFB0((uint64_t)v65, v469);
  }
  else
  {
    uint64_t v68 = sub_1ACA395F4(0);
    if (sub_1ACAEB6AC(v68))
    {
      uint64_t v489 = sub_1ACA6C680(v68);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v489 = MEMORY[0x1E4FBC870];
    }
    uint64_t v66 = v469;
    uint64_t v67 = v488;
  }
  unint64_t v493 = v66;
  v494 = v52;
  v495 = v67;
  int v69 = v34 & 1;
  char v496 = v34 & 1;
  id v70 = [v39 v51[65]];
  if (!v70) {
    goto LABEL_455;
  }
  uint64_t v71 = v70;
  uint64_t v72 = self;
  id v73 = objc_msgSend(v72, sel_predicateForDownloadedEpisodesOnPodcastUuid_, v71);

  uint64_t v486 = sub_1ACD2EFB0((uint64_t)v73, v66);
  id v74 = objc_msgSend(v72, sel_predicateForDownloadBehavior_, 2);
  id v75 = [v39 v51[65]];
  if (v75)
  {
    uint64_t v76 = v75;
    id v77 = objc_msgSend(v72, sel_predicateForAllEpisodesOnPodcastUuid_, v75);

    id v78 = objc_msgSend(v74, sel_AND_, v77);
    unint64_t v493 = v66;
    v494 = v52;
    uint64_t v79 = v488;
    v495 = v488;
    char v496 = v69;
    v491 = (void *)sub_1ACD2EFB0((uint64_t)v78, v66);

    id v80 = objc_msgSend(v72, sel_predicateForHasValidPersistentId_, 1);
    unint64_t v493 = v66;
    v494 = v52;
    v495 = v79;
    LODWORD(v467) = v69;
    char v496 = v69;
    uint64_t v475 = sub_1ACD2EFB0((uint64_t)v80, v66);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
    uint64_t v81 = swift_allocObject();
    int64_t v473 = sub_1ACC19764(v81, 2);
    uint64_t v16 = v82;
    uint64_t v83 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
    uint64_t v84 = v476;
    sub_1ACE75088();
    uint64_t v85 = v477;
    sub_1ACE751D8();
    uint64_t v86 = swift_allocObject();
    sub_1ACC19764(v86, 2);
    uint64_t v88 = v87;
    *size_t v87 = _sSo9MTEpisodeC18PodcastsFoundationE43predicateForAutomaticallyDownloadedEpisodesSo11NSPredicateCyFZ_0();
    uint64_t v89 = v485;
    uint64_t v485 = v83;
    v88[1] = sub_1ACDF6920(v89);
    sub_1ACC1704C();
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
    uint64_t v90 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    uint64_t v91 = self;
    id v92 = objc_msgSend(v91, sel_andPredicateWithSubpredicates_, v90);

    (*((void (**)(void *, uint64_t))v480 + 1))(v85, v482);
    v481[1](v84, v479);
    *(void *)uint64_t v16 = v92;
    uint64_t v93 = v471;
    uint64_t v94 = v470;
    uint64_t v95 = v72;
    int v96 = (void *)sub_1ACE76178();
    id v97 = objc_msgSend(v95, sel_predicateForAllEpisodesOnPodcastUuid_, v96);

    *(void *)(v16 + 8) = v97;
    sub_1ACC1704C();
    uint64_t v98 = (void *)sub_1ACE76558();
    swift_bridgeObjectRelease();
    id v99 = objc_msgSend(v91, sel_andPredicateWithSubpredicates_, v98);

    uint64_t v100 = v478;
    uint64_t v101 = DownloadStateChecker.episodesToBePurged(in:for:)(v66, v93, v94);
    if (v100)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v105 = 0;
      uint64_t v106 = 0;
      uint64_t v107 = 0;
      uint64_t v108 = 0;
      uint64_t v109 = 0;
      uint64_t v475 = 0;
      uint64_t v490 = 0;
      v491 = 0;
      uint64_t v479 = 0;
      v480 = 0;
      uint64_t v489 = 0;
      uint64_t v110 = 0;
      uint64_t v56 = 0;
      char v57 = 0;
      v481 = 0;
      uint64_t v482 = 0;
LABEL_2:
      uint64_t v22 = sub_1ACA397A4(0);
      unint64_t v23 = sub_1ACA37FF0(v22);

      sub_1ACA76F34((uint64_t)v105);
      sub_1ACA76F34((uint64_t)v106);
      sub_1ACA76F34(v107);
      sub_1ACA76F34(v108);
      sub_1ACA76F34(v109);
      unint64_t *v484 = v23;
      uint64_t v24 = v475;
      uint64_t v25 = v490;
      uint64_t v26 = (uint64_t)v491;
      uint64_t v27 = v489;
      char v28 = v110;
LABEL_3:
      unint64_t v29 = v481;
      uint64_t v30 = v482;
      goto LABEL_16;
    }
    uint64_t v111 = v103;
    int v112 = v104;
    v481 = v102;
    id v463 = v95;
    v478 = 0;
    unint64_t v493 = v66;
    v494 = v487;
    v495 = v488;
    char v496 = v467;
    uint64_t v31 = (uint64_t)&v493;
    uint64_t v482 = v101;
    uint64_t v113 = sub_1ACD2EFB0((uint64_t)v99, v66);
    if (*(void *)(v482 + 16) <= *(void *)(v113 + 16) >> 3)
    {
      unint64_t v493 = v113;
      sub_1ACC416A4(v482);
      uint64_t v114 = v493;
    }
    else
    {
      uint64_t v114 = sub_1ACB88D10(v482, v113);
    }
    if ((unint64_t)v481[2] <= *(void *)(v114 + 16) >> 3)
    {
      unint64_t v493 = v114;
      sub_1ACC416A4((uint64_t)v481);
      uint64_t v115 = v493;
    }
    else
    {
      uint64_t v115 = sub_1ACB88D10((uint64_t)v481, v114);
    }
    if (*(void *)(v111 + 16) <= *(void *)(v115 + 16) >> 3)
    {
      unint64_t v493 = v115;
      sub_1ACC416A4(v111);
      uint64_t v116 = v493;
    }
    else
    {
      uint64_t v116 = sub_1ACB88D10(v111, v115);
    }
    unint64_t v117 = v112[2];
    unint64_t v118 = *(void *)(v116 + 16);
    uint64_t v479 = v111;
    id v466 = v99;
    v477 = v112;
    if (v117 > v118 >> 3)
    {
      uint64_t v476 = sub_1ACB88D10((uint64_t)v112, v116);
    }
    else
    {
      unint64_t v493 = v116;
      sub_1ACC416A4((uint64_t)v112);
      uint64_t v476 = v493;
    }
    unint64_t v493 = MEMORY[0x1E4FBC868];
    uint64_t v32 = v486 + 56;
    uint64_t v119 = 1 << *(unsigned char *)(v486 + 32);
    uint64_t v120 = -1;
    if (v119 < 64) {
      uint64_t v120 = ~(-1 << v119);
    }
    unint64_t v121 = v120 & *(void *)(v486 + 56);
    int64_t v122 = (unint64_t)(v119 + 63) >> 6;
    swift_bridgeObjectRetain();
    v488 = 0;
    int64_t v123 = 0;
    while (1)
    {
      if (v121)
      {
        unint64_t v127 = __clz(__rbit64(v121));
        v121 &= v121 - 1;
        unint64_t v128 = v127 | (v123 << 6);
      }
      else
      {
        int64_t v129 = v123 + 1;
        if (__OFADD__(v123, 1)) {
          goto LABEL_428;
        }
        if (v129 >= v122)
        {
LABEL_74:
          swift_release();
          v487 = 0;
          int64_t v144 = 0;
          uint64_t v145 = (uint64_t)v491;
          uint64_t v32 = (uint64_t)v491 + 56;
          uint64_t v146 = 1 << *((unsigned char *)v491 + 32);
          uint64_t v147 = -1;
          if (v146 < 64) {
            uint64_t v147 = ~(-1 << v146);
          }
          unint64_t v148 = v147 & *((void *)v491 + 7);
          int64_t v149 = (unint64_t)(v146 + 63) >> 6;
          while (1)
          {
            if (v148)
            {
              unint64_t v153 = __clz(__rbit64(v148));
              v148 &= v148 - 1;
              unint64_t v154 = v153 | (v144 << 6);
            }
            else
            {
              int64_t v155 = v144 + 1;
              if (__OFADD__(v144, 1)) {
                goto LABEL_429;
              }
              if (v155 >= v149)
              {
LABEL_102:
                swift_release();
                uint64_t v170 = sub_1ACCAEA4C(v486, (uint64_t)v472);
                uint64_t v31 = 0;
                int64_t v171 = 0;
                uint64_t v172 = *(void *)(v170 + 56);
                v491 = (void *)(v170 + 56);
                uint64_t v173 = 1 << *(unsigned char *)(v170 + 32);
                uint64_t v174 = -1;
                if (v173 < 64) {
                  uint64_t v174 = ~(-1 << v173);
                }
                unint64_t v175 = v174 & v172;
                int64_t v176 = (unint64_t)(v173 + 63) >> 6;
                while (1)
                {
                  if (v175)
                  {
                    unint64_t v180 = __clz(__rbit64(v175));
                    v175 &= v175 - 1;
                    unint64_t v181 = v180 | (v171 << 6);
                  }
                  else
                  {
                    int64_t v182 = v171 + 1;
                    if (__OFADD__(v171, 1)) {
                      goto LABEL_430;
                    }
                    if (v182 >= v176)
                    {
LABEL_130:
                      uint64_t v467 = v31;
                      swift_release();
                      uint64_t v31 = 0;
                      int64_t v196 = 0;
                      uint64_t v32 = v490 + 56;
                      uint64_t v197 = 1 << *(unsigned char *)(v490 + 32);
                      uint64_t v198 = -1;
                      if (v197 < 64) {
                        uint64_t v198 = ~(-1 << v197);
                      }
                      unint64_t v199 = v198 & *(void *)(v490 + 56);
                      int64_t v200 = (unint64_t)(v197 + 63) >> 6;
                      while (1)
                      {
                        if (v199)
                        {
                          unint64_t v204 = __clz(__rbit64(v199));
                          v199 &= v199 - 1;
                          unint64_t v205 = v204 | (v196 << 6);
                        }
                        else
                        {
                          int64_t v206 = v196 + 1;
                          if (__OFADD__(v196, 1)) {
                            goto LABEL_431;
                          }
                          if (v206 >= v200)
                          {
LABEL_158:
                            uint64_t v465 = v31;
                            swift_release();
                            v221 = 0;
                            int64_t v222 = 0;
                            uint64_t v32 = v489 + 56;
                            uint64_t v223 = 1 << *(unsigned char *)(v489 + 32);
                            uint64_t v224 = -1;
                            if (v223 < 64) {
                              uint64_t v224 = ~(-1 << v223);
                            }
                            unint64_t v225 = v224 & *(void *)(v489 + 56);
                            int64_t v226 = (unint64_t)(v223 + 63) >> 6;
                            while (1)
                            {
                              if (v225)
                              {
                                uint64_t v230 = (uint64_t)v221;
                                unint64_t v231 = __clz(__rbit64(v225));
                                v225 &= v225 - 1;
                                unint64_t v232 = v231 | (v222 << 6);
                              }
                              else
                              {
                                int64_t v233 = v222 + 1;
                                if (__OFADD__(v222, 1)) {
                                  goto LABEL_432;
                                }
                                uint64_t v234 = v475;
                                if (v233 >= v226)
                                {
LABEL_186:
                                  v464 = v221;
                                  swift_release();
                                  uint64_t v249 = sub_1ACCAEA4C(v486, v234);
                                  uint64_t v31 = 0;
                                  int64_t v250 = 0;
                                  uint64_t v251 = *(void *)(v249 + 56);
                                  v491 = (void *)(v249 + 56);
                                  uint64_t v252 = 1 << *(unsigned char *)(v249 + 32);
                                  uint64_t v253 = -1;
                                  if (v252 < 64) {
                                    uint64_t v253 = ~(-1 << v252);
                                  }
                                  unint64_t v254 = v253 & v251;
                                  int64_t v255 = (unint64_t)(v252 + 63) >> 6;
                                  while (1)
                                  {
                                    if (v254)
                                    {
                                      unint64_t v256 = __clz(__rbit64(v254));
                                      v254 &= v254 - 1;
                                      unint64_t v257 = v256 | (v250 << 6);
                                    }
                                    else
                                    {
                                      int64_t v258 = v250 + 1;
                                      if (__OFADD__(v250, 1)) {
                                        goto LABEL_433;
                                      }
                                      if (v258 >= v255)
                                      {
LABEL_214:
                                        uint64_t v475 = v31;
                                        swift_release();
                                        uint64_t v32 = v482 + 56;
                                        uint64_t v272 = 1 << *(unsigned char *)(v482 + 32);
                                        uint64_t v273 = -1;
                                        if (v272 < 64) {
                                          uint64_t v273 = ~(-1 << v272);
                                        }
                                        unint64_t v274 = v273 & *(void *)(v482 + 56);
                                        uint64_t v489 = (unint64_t)(v272 + 63) >> 6;
                                        swift_bridgeObjectRetain();
                                        uint64_t v490 = 0;
                                        v491 = 0;
                                        uint64_t v275 = 0;
                                        while (1)
                                        {
                                          if (v274)
                                          {
                                            unint64_t v277 = __clz(__rbit64(v274));
                                            v274 &= v274 - 1;
                                            unint64_t v278 = v277 | (v275 << 6);
                                            uint64_t v279 = v482;
                                          }
                                          else
                                          {
                                            uint64_t v280 = v275 + 1;
                                            uint64_t v279 = v482;
                                            if (__OFADD__(v275, 1)) {
                                              goto LABEL_434;
                                            }
                                            if (v280 >= v489)
                                            {
LABEL_250:
                                              swift_release();
                                              uint64_t v32 = (uint64_t)(v481 + 7);
                                              uint64_t v304 = 1 << *((unsigned char *)v481 + 32);
                                              uint64_t v305 = -1;
                                              if (v304 < 64) {
                                                uint64_t v305 = ~(-1 << v304);
                                              }
                                              unint64_t v306 = v305 & (unint64_t)v481[7];
                                              v480 = (void (*)(void *@<X8>))((unint64_t)(v304 + 63) >> 6);
                                              swift_bridgeObjectRetain();
                                              v307 = 0;
                                              uint64_t v489 = 0;
                                              uint64_t v308 = 0;
                                              while (1)
                                              {
                                                if (v306)
                                                {
                                                  unint64_t v310 = __clz(__rbit64(v306));
                                                  v306 &= v306 - 1;
                                                  unint64_t v311 = v310 | (v308 << 6);
                                                  v312 = v481;
                                                }
                                                else
                                                {
                                                  uint64_t v313 = v308 + 1;
                                                  v312 = v481;
                                                  if (__OFADD__(v308, 1)) {
                                                    goto LABEL_435;
                                                  }
                                                  if (v313 >= (uint64_t)v480)
                                                  {
LABEL_286:
                                                    v480 = v307;
                                                    swift_release();
                                                    uint64_t v32 = v479;
                                                    uint64_t v337 = *(void *)(v479 + 56);
                                                    v472 = (void (*)(void *@<X8>))(v479 + 56);
                                                    uint64_t v338 = 1 << *(unsigned char *)(v479 + 32);
                                                    uint64_t v339 = -1;
                                                    if (v338 < 64) {
                                                      uint64_t v339 = ~(-1 << v338);
                                                    }
                                                    unint64_t v340 = v339 & v337;
                                                    int64_t v473 = (unint64_t)(v338 + 63) >> 6;
                                                    swift_bridgeObjectRetain();
                                                    char v28 = 0;
                                                    uint64_t v16 = 0;
                                                    int64_t v341 = 0;
                                                    while (1)
                                                    {
                                                      if (v340)
                                                      {
                                                        unint64_t v343 = __clz(__rbit64(v340));
                                                        v340 &= v340 - 1;
                                                        unint64_t v344 = v343 | (v341 << 6);
                                                      }
                                                      else
                                                      {
                                                        int64_t v345 = v341 + 1;
                                                        if (__OFADD__(v341, 1)) {
                                                          goto LABEL_436;
                                                        }
                                                        if (v345 >= v473)
                                                        {
LABEL_322:
                                                          uint64_t v479 = v16;
                                                          swift_release();
                                                          swift_bridgeObjectRelease();
                                                          swift_bridgeObjectRelease();
                                                          swift_bridgeObjectRelease();
                                                          v368 = 0;
                                                          char v57 = 0;
                                                          uint64_t v16 = 0;
                                                          uint64_t v369 = v477[7];
                                                          v481 = (void (**)(uint64_t, uint64_t))(v477 + 7);
                                                          uint64_t v370 = 1 << *((unsigned char *)v477 + 32);
                                                          uint64_t v371 = -1;
                                                          if (v370 < 64) {
                                                            uint64_t v371 = ~(-1 << v370);
                                                          }
                                                          uint64_t v32 = v371 & v369;
                                                          uint64_t v482 = (unint64_t)(v370 + 63) >> 6;
                                                          while (1)
                                                          {
                                                            v373 = &selRef_rangeOfCharacterFromSet_options_range_;
                                                            v374 = &selRef_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_displayType_showSpecificUpsellCopy_;
                                                            if (v32)
                                                            {
                                                              uint64_t v375 = (uint64_t)v57;
                                                              unint64_t v376 = __clz(__rbit64(v32));
                                                              v32 &= v32 - 1;
                                                              unint64_t v377 = v376 | (v16 << 6);
                                                            }
                                                            else
                                                            {
                                                              uint64_t v378 = v16 + 1;
                                                              if (__OFADD__(v16, 1)) {
                                                                goto LABEL_437;
                                                              }
                                                              uint64_t v32 = (uint64_t)v483;
                                                              if (v378 >= v482)
                                                              {
LABEL_358:
                                                                swift_release();
                                                                v481 = 0;
                                                                uint64_t v482 = 0;
                                                                uint64_t v404 = 0;
                                                                uint64_t v405 = *(void *)(v476 + 56);
                                                                int64_t v473 = v476 + 56;
                                                                uint64_t v406 = 1 << *(unsigned char *)(v476 + 32);
                                                                uint64_t v407 = -1;
                                                                if (v406 < 64) {
                                                                  uint64_t v407 = ~(-1 << v406);
                                                                }
                                                                uint64_t v16 = v407 & v405;
                                                                v477 = (void *)((unint64_t)(v406 + 63) >> 6);
                                                                v472 = v368;
                                                                if ((v407 & v405) != 0)
                                                                {
LABEL_361:
                                                                  unint64_t v408 = __clz(__rbit64(v16));
                                                                  v16 &= v16 - 1;
                                                                  unint64_t v409 = v408 | (v404 << 6);
                                                                  goto LABEL_362;
                                                                }
                                                                while (1)
                                                                {
                                                                  uint64_t v413 = v404 + 1;
                                                                  if (__OFADD__(v404, 1)) {
                                                                    goto LABEL_438;
                                                                  }
                                                                  uint64_t v31 = (uint64_t)v484;
                                                                  if (v413 >= (uint64_t)v477) {
                                                                    goto LABEL_396;
                                                                  }
                                                                  unint64_t v414 = *(void *)(v473 + 8 * v413);
                                                                  ++v404;
                                                                  if (!v414)
                                                                  {
                                                                    uint64_t v404 = v413 + 1;
                                                                    if (v413 + 1 >= (uint64_t)v477) {
                                                                      goto LABEL_396;
                                                                    }
                                                                    unint64_t v414 = *(void *)(v473 + 8 * v404);
                                                                    if (!v414)
                                                                    {
                                                                      uint64_t v404 = v413 + 2;
                                                                      if (v413 + 2 >= (uint64_t)v477) {
                                                                        goto LABEL_396;
                                                                      }
                                                                      unint64_t v414 = *(void *)(v473 + 8 * v404);
                                                                      if (!v414)
                                                                      {
                                                                        uint64_t v415 = v413 + 3;
                                                                        if (v415 >= (uint64_t)v477)
                                                                        {
LABEL_396:
                                                                          swift_bridgeObjectRelease();
                                                                          swift_release();
                                                                          if (v474)
                                                                          {
                                                                            sub_1ACE761B8();
                                                                            v439 = sub_1ACDA72B4();
                                                                            v440 = (void *)sub_1ACE76178();
                                                                            id v441 = objc_msgSend(v463, v374[335], v440);

                                                                            v442 = v373[298];
                                                                            v443 = v439;
                                                                            objc_msgSend(v439, v442, v441);

                                                                            uint64_t v100 = v478;
                                                                            uint64_t v444 = sub_1ACE76EE8();
                                                                            if (v100)
                                                                            {
                                                                              uint64_t v56 = (uint64_t)v368;
                                                                              uint64_t v110 = v28;

                                                                              swift_unknownObjectRelease();
                                                                              swift_bridgeObjectRelease();
                                                                              uint64_t v106 = v487;
                                                                              uint64_t v105 = v488;
                                                                              uint64_t v107 = v467;
                                                                              uint64_t v108 = v465;
                                                                              uint64_t v109 = (uint64_t)v464;
                                                                              goto LABEL_2;
                                                                            }
                                                                            uint64_t v446 = v444;
                                                                            v477 = v443;
                                                                            uint64_t v447 = sub_1ACAEB6B4();
                                                                            v445 = v488;
                                                                            uint64_t v486 = v447;
                                                                            if (v447)
                                                                            {
                                                                              if (v486 < 1) {
                                                                                goto LABEL_454;
                                                                              }
                                                                              LODWORD(v485) = sub_1ACAEE5C4(v446);
                                                                              uint64_t v448 = 0;
                                                                              v478 = (void *)v446;
                                                                              do
                                                                              {
                                                                                if (v485) {
                                                                                  id v449 = *(id *)(v446 + 8 * v448 + 32);
                                                                                }
                                                                                else {
                                                                                  id v449 = (id)MEMORY[0x1AD119490](v448, v446);
                                                                                }
                                                                                v450 = v449;
                                                                                id v451 = objc_msgSend(v449, sel_uuid);
                                                                                if (v451)
                                                                                {
                                                                                  v452 = v451;
                                                                                  uint64_t v453 = sub_1ACE761B8();
                                                                                  uint64_t v455 = v454;

                                                                                  uint64_t v456 = v493;
                                                                                  swift_bridgeObjectRetain();
                                                                                  uint64_t v457 = v453;
                                                                                  LOBYTE(v453) = sub_1ACE2A828(v453, v455, v456);
                                                                                  swift_bridgeObjectRelease();
                                                                                  if (v453)
                                                                                  {
                                                                                    swift_bridgeObjectRelease();
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0D58);
                                                                                    uint64_t v458 = swift_allocObject();
                                                                                    uint64_t v459 = sub_1ACC19754(v458, 1);
                                                                                    unsigned char *v460 = 13;
                                                                                    uint64_t v461 = nullsub_1(v459);
                                                                                    sub_1ACC51794(v461, v457, v455);
                                                                                  }
                                                                                  v445 = v488;
                                                                                  uint64_t v446 = (uint64_t)v478;
                                                                                }
                                                                                ++v448;
                                                                              }
                                                                              while (v486 != v448);
                                                                            }
                                                                            uint64_t v56 = (uint64_t)v368;

                                                                            swift_bridgeObjectRelease();
                                                                            swift_unknownObjectRelease();
                                                                            uint64_t v31 = (uint64_t)v484;
                                                                          }
                                                                          else
                                                                          {
                                                                            uint64_t v56 = (uint64_t)v368;

                                                                            swift_unknownObjectRelease();
                                                                            v445 = v488;
                                                                          }
                                                                          unint64_t v462 = v493;
                                                                          sub_1ACA76F34((uint64_t)v445);
                                                                          sub_1ACA76F34((uint64_t)v487);
                                                                          sub_1ACA76F34(v467);
                                                                          sub_1ACA76F34(v465);
                                                                          sub_1ACA76F34((uint64_t)v464);
                                                                          *(void *)uint64_t v31 = v462;
                                                                          uint64_t v24 = v475;
                                                                          uint64_t v25 = v490;
                                                                          uint64_t v26 = (uint64_t)v491;
                                                                          uint64_t v27 = v489;
                                                                          goto LABEL_3;
                                                                        }
                                                                        unint64_t v414 = *(void *)(v473 + 8 * v415);
                                                                        if (!v414)
                                                                        {
                                                                          while (1)
                                                                          {
                                                                            uint64_t v404 = v415 + 1;
                                                                            if (__OFADD__(v415, 1)) {
                                                                              goto LABEL_451;
                                                                            }
                                                                            if (v404 >= (uint64_t)v477) {
                                                                              goto LABEL_396;
                                                                            }
                                                                            unint64_t v414 = *(void *)(v473 + 8 * v404);
                                                                            ++v415;
                                                                            if (v414) {
                                                                              goto LABEL_377;
                                                                            }
                                                                          }
                                                                        }
                                                                        uint64_t v404 = v415;
                                                                      }
                                                                    }
                                                                  }
LABEL_377:
                                                                  uint64_t v16 = (v414 - 1) & v414;
                                                                  unint64_t v409 = __clz(__rbit64(v414)) + (v404 << 6);
LABEL_362:
                                                                  v410 = (uint64_t *)(*(void *)(v476 + 48) + 16 * v409);
                                                                  uint64_t v412 = *v410;
                                                                  uint64_t v411 = v410[1];
                                                                  swift_bridgeObjectRetain();
                                                                  if (sub_1ACCEA330(v412, v411, v486))
                                                                  {
                                                                    swift_bridgeObjectRetain();
                                                                    sub_1ACA76F34(v482);
                                                                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                                                                    unint64_t v417 = v493;
                                                                    unint64_t v492 = v493;
                                                                    unint64_t v493 = 0x8000000000000000;
                                                                    unint64_t v419 = sub_1ACA657FC(v412, v411);
                                                                    uint64_t v420 = *(void *)(v417 + 16);
                                                                    BOOL v421 = (v418 & 1) == 0;
                                                                    uint64_t v422 = v420 + v421;
                                                                    if (__OFADD__(v420, v421)) {
                                                                      goto LABEL_452;
                                                                    }
                                                                    char v423 = v418;
                                                                    if (*(void *)(v417 + 24) >= v422)
                                                                    {
                                                                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                                                                      {
                                                                        sub_1ACD09650();
                                                                        unint64_t v417 = v492;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      sub_1ACD034CC(v422, isUniquelyReferenced_nonNull_native);
                                                                      unint64_t v417 = v492;
                                                                      uint64_t v424 = sub_1ACA657FC(v412, v411);
                                                                      if ((v423 & 1) != (v425 & 1)) {
                                                                        goto LABEL_460;
                                                                      }
                                                                      unint64_t v419 = v424;
                                                                    }
                                                                    unint64_t v493 = v417;
                                                                    swift_bridgeObjectRelease();
                                                                    v426 = (void *)v493;
                                                                    swift_bridgeObjectRetain();
                                                                    if ((v423 & 1) == 0)
                                                                    {
                                                                      sub_1ACD0FF30(v419, v412, v411, MEMORY[0x1E4FBC860], v426);
                                                                      swift_bridgeObjectRetain();
                                                                    }
                                                                    swift_bridgeObjectRelease();
                                                                    sub_1ACB1E72C(12);
                                                                    swift_bridgeObjectRelease();
                                                                    sub_1ACA76F34((uint64_t)v481);
                                                                    char v427 = swift_isUniquelyReferenced_nonNull_native();
                                                                    unint64_t v428 = v493;
                                                                    unint64_t v492 = v493;
                                                                    unint64_t v493 = 0x8000000000000000;
                                                                    unint64_t v430 = sub_1ACA657FC(v412, v411);
                                                                    uint64_t v431 = *(void *)(v428 + 16);
                                                                    BOOL v432 = (v429 & 1) == 0;
                                                                    uint64_t v433 = v431 + v432;
                                                                    if (__OFADD__(v431, v432)) {
                                                                      goto LABEL_453;
                                                                    }
                                                                    char v434 = v429;
                                                                    if (*(void *)(v428 + 24) >= v433)
                                                                    {
                                                                      if ((v427 & 1) == 0)
                                                                      {
                                                                        sub_1ACD09650();
                                                                        unint64_t v428 = v492;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      sub_1ACD034CC(v433, v427);
                                                                      unint64_t v428 = v492;
                                                                      uint64_t v435 = sub_1ACA657FC(v412, v411);
                                                                      if ((v434 & 1) != (v436 & 1)) {
                                                                        goto LABEL_460;
                                                                      }
                                                                      unint64_t v430 = v435;
                                                                    }
                                                                    unint64_t v493 = v428;
                                                                    swift_bridgeObjectRelease();
                                                                    v437 = (void *)v493;
                                                                    swift_bridgeObjectRetain();
                                                                    if ((v434 & 1) == 0)
                                                                    {
                                                                      sub_1ACD0FF30(v430, v412, v411, MEMORY[0x1E4FBC860], v437);
                                                                      swift_bridgeObjectRetain();
                                                                    }
                                                                    uint64_t v438 = v437[7];
                                                                    swift_bridgeObjectRelease();
                                                                    uint64_t v31 = v438 + 8 * v430;
                                                                    sub_1ACB1E72C(0);
                                                                    swift_bridgeObjectRelease();
                                                                    v481 = (void (**)(uint64_t, uint64_t))sub_1ACD2F1AC;
                                                                    uint64_t v482 = (uint64_t)sub_1ACD2F1AC;
                                                                    v373 = &selRef_rangeOfCharacterFromSet_options_range_;
                                                                    v374 = &selRef_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_displayType_showSpecificUpsellCopy_;
                                                                    v368 = v472;
                                                                    uint64_t v32 = (uint64_t)v483;
                                                                    if (v16) {
                                                                      goto LABEL_361;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    v373 = &selRef_rangeOfCharacterFromSet_options_range_;
                                                                    v374 = &selRef_insertNewPodcastInManagedObjectContext_subscribed_feedUrl_showType_showTypeInFeed_title_author_provider_imageUrl_description_displayType_showSpecificUpsellCopy_;
                                                                    if (v16) {
                                                                      goto LABEL_361;
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              unint64_t v379 = (unint64_t)v481[v378];
                                                              ++v16;
                                                              if (!v379)
                                                              {
                                                                uint64_t v16 = v378 + 1;
                                                                if (v378 + 1 >= v482) {
                                                                  goto LABEL_358;
                                                                }
                                                                unint64_t v379 = (unint64_t)v481[v16];
                                                                if (!v379)
                                                                {
                                                                  uint64_t v16 = v378 + 2;
                                                                  if (v378 + 2 >= v482) {
                                                                    goto LABEL_358;
                                                                  }
                                                                  unint64_t v379 = (unint64_t)v481[v16];
                                                                  if (!v379)
                                                                  {
                                                                    uint64_t v380 = v378 + 3;
                                                                    if (v380 >= v482) {
                                                                      goto LABEL_358;
                                                                    }
                                                                    unint64_t v379 = (unint64_t)v481[v380];
                                                                    if (!v379)
                                                                    {
                                                                      while (1)
                                                                      {
                                                                        uint64_t v16 = v380 + 1;
                                                                        if (__OFADD__(v380, 1)) {
                                                                          break;
                                                                        }
                                                                        if (v16 >= v482) {
                                                                          goto LABEL_358;
                                                                        }
                                                                        unint64_t v379 = (unint64_t)v481[v16];
                                                                        ++v380;
                                                                        if (v379) {
                                                                          goto LABEL_341;
                                                                        }
                                                                      }
LABEL_450:
                                                                      __break(1u);
LABEL_451:
                                                                      __break(1u);
LABEL_452:
                                                                      __break(1u);
LABEL_453:
                                                                      __break(1u);
LABEL_454:
                                                                      __break(1u);
LABEL_455:
                                                                      __break(1u);
                                                                      goto LABEL_456;
                                                                    }
                                                                    uint64_t v16 = v380;
                                                                  }
                                                                }
                                                              }
LABEL_341:
                                                              uint64_t v375 = (uint64_t)v57;
                                                              uint64_t v32 = (v379 - 1) & v379;
                                                              unint64_t v377 = __clz(__rbit64(v379)) + (v16 << 6);
                                                            }
                                                            v381 = (uint64_t *)(v477[6] + 16 * v377);
                                                            uint64_t v383 = *v381;
                                                            uint64_t v382 = v381[1];
                                                            swift_bridgeObjectRetain_n();
                                                            sub_1ACA76F34((uint64_t)v368);
                                                            char v384 = swift_isUniquelyReferenced_nonNull_native();
                                                            uint64_t v31 = v493;
                                                            unint64_t v492 = v493;
                                                            unint64_t v493 = 0x8000000000000000;
                                                            unint64_t v386 = sub_1ACA657FC(v383, v382);
                                                            uint64_t v387 = *(void *)(v31 + 16);
                                                            BOOL v388 = (v385 & 1) == 0;
                                                            uint64_t v389 = v387 + v388;
                                                            if (__OFADD__(v387, v388)) {
                                                              goto LABEL_426;
                                                            }
                                                            char v390 = v385;
                                                            if (*(void *)(v31 + 24) >= v389)
                                                            {
                                                              if ((v384 & 1) == 0)
                                                              {
                                                                sub_1ACD09650();
                                                                uint64_t v31 = v492;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              sub_1ACD034CC(v389, v384);
                                                              uint64_t v31 = v492;
                                                              uint64_t v391 = sub_1ACA657FC(v383, v382);
                                                              if ((v390 & 1) != (v392 & 1)) {
                                                                goto LABEL_460;
                                                              }
                                                              unint64_t v386 = v391;
                                                            }
                                                            unint64_t v493 = v31;
                                                            swift_bridgeObjectRelease();
                                                            v393 = (void *)v493;
                                                            swift_bridgeObjectRetain();
                                                            if ((v390 & 1) == 0)
                                                            {
                                                              sub_1ACD0FF30(v386, v383, v382, MEMORY[0x1E4FBC860], v393);
                                                              swift_bridgeObjectRetain();
                                                            }
                                                            swift_bridgeObjectRelease();
                                                            sub_1ACB1E72C(11);
                                                            swift_bridgeObjectRelease();
                                                            sub_1ACA76F34(v375);
                                                            char v394 = swift_isUniquelyReferenced_nonNull_native();
                                                            uint64_t v31 = v493;
                                                            unint64_t v492 = v493;
                                                            unint64_t v493 = 0x8000000000000000;
                                                            unint64_t v396 = sub_1ACA657FC(v383, v382);
                                                            uint64_t v397 = *(void *)(v31 + 16);
                                                            BOOL v398 = (v395 & 1) == 0;
                                                            uint64_t v399 = v397 + v398;
                                                            if (__OFADD__(v397, v398)) {
                                                              goto LABEL_427;
                                                            }
                                                            char v400 = v395;
                                                            if (*(void *)(v31 + 24) >= v399)
                                                            {
                                                              if ((v394 & 1) == 0)
                                                              {
                                                                sub_1ACD09650();
                                                                uint64_t v31 = v492;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              sub_1ACD034CC(v399, v394);
                                                              uint64_t v31 = v492;
                                                              uint64_t v401 = sub_1ACA657FC(v383, v382);
                                                              if ((v400 & 1) != (v402 & 1)) {
                                                                goto LABEL_460;
                                                              }
                                                              unint64_t v396 = v401;
                                                            }
                                                            unint64_t v493 = v31;
                                                            swift_bridgeObjectRelease();
                                                            v403 = (void *)v493;
                                                            swift_bridgeObjectRetain();
                                                            if ((v400 & 1) == 0)
                                                            {
                                                              sub_1ACD0FF30(v396, v383, v382, MEMORY[0x1E4FBC860], v403);
                                                              swift_bridgeObjectRetain();
                                                            }
                                                            uint64_t v372 = v403[7];
                                                            swift_bridgeObjectRelease();
                                                            uint64_t v31 = v372 + 8 * v396;
                                                            sub_1ACB1E72C(0);
                                                            swift_bridgeObjectRelease();
                                                            char v57 = sub_1ACD2F1AC;
                                                            v368 = sub_1ACD2F1AC;
                                                          }
                                                        }
                                                        unint64_t v346 = *((void *)v472 + v345);
                                                        ++v341;
                                                        if (!v346)
                                                        {
                                                          int64_t v341 = v345 + 1;
                                                          if (v345 + 1 >= v473) {
                                                            goto LABEL_322;
                                                          }
                                                          unint64_t v346 = *((void *)v472 + v341);
                                                          if (!v346)
                                                          {
                                                            int64_t v341 = v345 + 2;
                                                            if (v345 + 2 >= v473) {
                                                              goto LABEL_322;
                                                            }
                                                            unint64_t v346 = *((void *)v472 + v341);
                                                            if (!v346)
                                                            {
                                                              int64_t v347 = v345 + 3;
                                                              if (v347 >= v473) {
                                                                goto LABEL_322;
                                                              }
                                                              unint64_t v346 = *((void *)v472 + v347);
                                                              if (!v346)
                                                              {
                                                                while (1)
                                                                {
                                                                  int64_t v341 = v347 + 1;
                                                                  if (__OFADD__(v347, 1)) {
                                                                    break;
                                                                  }
                                                                  if (v341 >= v473) {
                                                                    goto LABEL_322;
                                                                  }
                                                                  unint64_t v346 = *((void *)v472 + v341);
                                                                  ++v347;
                                                                  if (v346) {
                                                                    goto LABEL_305;
                                                                  }
                                                                }
LABEL_449:
                                                                __break(1u);
                                                                goto LABEL_450;
                                                              }
                                                              int64_t v341 = v347;
                                                            }
                                                          }
                                                        }
LABEL_305:
                                                        unint64_t v340 = (v346 - 1) & v346;
                                                        unint64_t v344 = __clz(__rbit64(v346)) + (v341 << 6);
                                                      }
                                                      v348 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v344);
                                                      uint64_t v350 = *v348;
                                                      uint64_t v349 = v348[1];
                                                      swift_bridgeObjectRetain_n();
                                                      sub_1ACA76F34((uint64_t)v28);
                                                      char v351 = swift_isUniquelyReferenced_nonNull_native();
                                                      uint64_t v31 = v493;
                                                      unint64_t v492 = v493;
                                                      unint64_t v493 = 0x8000000000000000;
                                                      uint64_t v32 = sub_1ACA657FC(v350, v349);
                                                      uint64_t v353 = *(void *)(v31 + 16);
                                                      BOOL v354 = (v352 & 1) == 0;
                                                      uint64_t v355 = v353 + v354;
                                                      if (__OFADD__(v353, v354)) {
                                                        goto LABEL_424;
                                                      }
                                                      char v356 = v352;
                                                      if (*(void *)(v31 + 24) >= v355)
                                                      {
                                                        if ((v351 & 1) == 0)
                                                        {
                                                          sub_1ACD09650();
                                                          uint64_t v31 = v492;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        sub_1ACD034CC(v355, v351);
                                                        uint64_t v31 = v492;
                                                        uint64_t v357 = sub_1ACA657FC(v350, v349);
                                                        if ((v356 & 1) != (v358 & 1)) {
                                                          goto LABEL_460;
                                                        }
                                                        uint64_t v32 = v357;
                                                      }
                                                      unint64_t v493 = v31;
                                                      swift_bridgeObjectRelease();
                                                      v359 = (void *)v493;
                                                      swift_bridgeObjectRetain();
                                                      if ((v356 & 1) == 0)
                                                      {
                                                        sub_1ACD0FF30(v32, v350, v349, MEMORY[0x1E4FBC860], v359);
                                                        swift_bridgeObjectRetain();
                                                      }
                                                      swift_bridgeObjectRelease();
                                                      sub_1ACB1E72C(10);
                                                      swift_bridgeObjectRelease();
                                                      sub_1ACA76F34(v16);
                                                      uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
                                                      uint64_t v31 = v493;
                                                      unint64_t v492 = v493;
                                                      unint64_t v493 = 0x8000000000000000;
                                                      uint64_t v16 = sub_1ACA657FC(v350, v349);
                                                      uint64_t v361 = *(void *)(v31 + 16);
                                                      BOOL v362 = (v360 & 1) == 0;
                                                      uint64_t v363 = v361 + v362;
                                                      if (__OFADD__(v361, v362)) {
                                                        goto LABEL_425;
                                                      }
                                                      char v364 = v360;
                                                      if (*(void *)(v31 + 24) >= v363)
                                                      {
                                                        if ((v32 & 1) == 0)
                                                        {
                                                          sub_1ACD09650();
                                                          uint64_t v31 = v492;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        sub_1ACD034CC(v363, v32);
                                                        uint64_t v31 = v492;
                                                        uint64_t v365 = sub_1ACA657FC(v350, v349);
                                                        if ((v364 & 1) != (v366 & 1)) {
                                                          goto LABEL_460;
                                                        }
                                                        uint64_t v16 = v365;
                                                      }
                                                      uint64_t v32 = v479;
                                                      unint64_t v493 = v31;
                                                      swift_bridgeObjectRelease();
                                                      v367 = (void *)v493;
                                                      swift_bridgeObjectRetain();
                                                      if ((v364 & 1) == 0)
                                                      {
                                                        sub_1ACD0FF30(v16, v350, v349, MEMORY[0x1E4FBC860], v367);
                                                        swift_bridgeObjectRetain();
                                                      }
                                                      uint64_t v342 = v367[7];
                                                      swift_bridgeObjectRelease();
                                                      uint64_t v31 = v342 + 8 * v16;
                                                      sub_1ACB1E72C(0);
                                                      swift_bridgeObjectRelease();
                                                      uint64_t v16 = (uint64_t)sub_1ACD2F1AC;
                                                      char v28 = sub_1ACD2F1AC;
                                                    }
                                                  }
                                                  unint64_t v314 = *(void *)(v32 + 8 * v313);
                                                  ++v308;
                                                  if (!v314)
                                                  {
                                                    uint64_t v308 = v313 + 1;
                                                    if (v313 + 1 >= (uint64_t)v480) {
                                                      goto LABEL_286;
                                                    }
                                                    unint64_t v314 = *(void *)(v32 + 8 * v308);
                                                    if (!v314)
                                                    {
                                                      uint64_t v308 = v313 + 2;
                                                      if (v313 + 2 >= (uint64_t)v480) {
                                                        goto LABEL_286;
                                                      }
                                                      unint64_t v314 = *(void *)(v32 + 8 * v308);
                                                      if (!v314)
                                                      {
                                                        uint64_t v315 = v313 + 3;
                                                        if (v315 >= (uint64_t)v480) {
                                                          goto LABEL_286;
                                                        }
                                                        unint64_t v314 = *(void *)(v32 + 8 * v315);
                                                        if (!v314)
                                                        {
                                                          while (1)
                                                          {
                                                            uint64_t v308 = v315 + 1;
                                                            if (__OFADD__(v315, 1)) {
                                                              break;
                                                            }
                                                            if (v308 >= (uint64_t)v480) {
                                                              goto LABEL_286;
                                                            }
                                                            unint64_t v314 = *(void *)(v32 + 8 * v308);
                                                            ++v315;
                                                            if (v314) {
                                                              goto LABEL_269;
                                                            }
                                                          }
LABEL_448:
                                                          __break(1u);
                                                          goto LABEL_449;
                                                        }
                                                        uint64_t v308 = v315;
                                                      }
                                                    }
                                                  }
LABEL_269:
                                                  unint64_t v306 = (v314 - 1) & v314;
                                                  unint64_t v311 = __clz(__rbit64(v314)) + (v308 << 6);
                                                }
                                                v316 = (uint64_t *)((char *)v312[6] + 16 * v311);
                                                uint64_t v318 = *v316;
                                                uint64_t v317 = v316[1];
                                                swift_bridgeObjectRetain_n();
                                                sub_1ACA76F34((uint64_t)v307);
                                                uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
                                                uint64_t v31 = v493;
                                                unint64_t v492 = v493;
                                                unint64_t v493 = 0x8000000000000000;
                                                unint64_t v320 = sub_1ACA657FC(v318, v317);
                                                uint64_t v321 = *(void *)(v31 + 16);
                                                BOOL v322 = (v319 & 1) == 0;
                                                uint64_t v323 = v321 + v322;
                                                if (__OFADD__(v321, v322)) {
                                                  goto LABEL_422;
                                                }
                                                char v324 = v319;
                                                if (*(void *)(v31 + 24) >= v323)
                                                {
                                                  if ((v16 & 1) == 0)
                                                  {
                                                    sub_1ACD09650();
                                                    uint64_t v31 = v492;
                                                  }
                                                }
                                                else
                                                {
                                                  sub_1ACD034CC(v323, v16);
                                                  uint64_t v31 = v492;
                                                  uint64_t v325 = sub_1ACA657FC(v318, v317);
                                                  if ((v324 & 1) != (v326 & 1)) {
                                                    goto LABEL_460;
                                                  }
                                                  unint64_t v320 = v325;
                                                }
                                                unint64_t v493 = v31;
                                                swift_bridgeObjectRelease();
                                                v327 = (void *)v493;
                                                swift_bridgeObjectRetain();
                                                if ((v324 & 1) == 0)
                                                {
                                                  sub_1ACD0FF30(v320, v318, v317, MEMORY[0x1E4FBC860], v327);
                                                  swift_bridgeObjectRetain();
                                                }
                                                swift_bridgeObjectRelease();
                                                sub_1ACB1E72C(9);
                                                swift_bridgeObjectRelease();
                                                sub_1ACA76F34(v489);
                                                uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
                                                uint64_t v31 = v493;
                                                unint64_t v492 = v493;
                                                unint64_t v493 = 0x8000000000000000;
                                                unint64_t v329 = sub_1ACA657FC(v318, v317);
                                                uint64_t v330 = *(void *)(v31 + 16);
                                                BOOL v331 = (v328 & 1) == 0;
                                                uint64_t v332 = v330 + v331;
                                                if (__OFADD__(v330, v331)) {
                                                  goto LABEL_423;
                                                }
                                                char v333 = v328;
                                                if (*(void *)(v31 + 24) >= v332)
                                                {
                                                  if ((v16 & 1) == 0)
                                                  {
                                                    sub_1ACD09650();
                                                    uint64_t v31 = v492;
                                                  }
                                                }
                                                else
                                                {
                                                  sub_1ACD034CC(v332, v16);
                                                  uint64_t v31 = v492;
                                                  uint64_t v334 = sub_1ACA657FC(v318, v317);
                                                  if ((v333 & 1) != (v335 & 1)) {
                                                    goto LABEL_460;
                                                  }
                                                  unint64_t v329 = v334;
                                                }
                                                unint64_t v493 = v31;
                                                swift_bridgeObjectRelease();
                                                v336 = (void *)v493;
                                                swift_bridgeObjectRetain();
                                                if ((v333 & 1) == 0)
                                                {
                                                  sub_1ACD0FF30(v329, v318, v317, MEMORY[0x1E4FBC860], v336);
                                                  swift_bridgeObjectRetain();
                                                }
                                                uint64_t v309 = v336[7];
                                                swift_bridgeObjectRelease();
                                                uint64_t v31 = v309 + 8 * v329;
                                                sub_1ACB1E72C(0);
                                                swift_bridgeObjectRelease();
                                                uint64_t v489 = (uint64_t)sub_1ACD2F1AC;
                                                v307 = sub_1ACD2F1AC;
                                              }
                                            }
                                            unint64_t v281 = *(void *)(v32 + 8 * v280);
                                            ++v275;
                                            if (!v281)
                                            {
                                              uint64_t v275 = v280 + 1;
                                              if (v280 + 1 >= v489) {
                                                goto LABEL_250;
                                              }
                                              unint64_t v281 = *(void *)(v32 + 8 * v275);
                                              if (!v281)
                                              {
                                                uint64_t v275 = v280 + 2;
                                                if (v280 + 2 >= v489) {
                                                  goto LABEL_250;
                                                }
                                                unint64_t v281 = *(void *)(v32 + 8 * v275);
                                                if (!v281)
                                                {
                                                  uint64_t v282 = v280 + 3;
                                                  if (v282 >= v489) {
                                                    goto LABEL_250;
                                                  }
                                                  unint64_t v281 = *(void *)(v32 + 8 * v282);
                                                  if (!v281)
                                                  {
                                                    while (1)
                                                    {
                                                      uint64_t v275 = v282 + 1;
                                                      if (__OFADD__(v282, 1)) {
                                                        break;
                                                      }
                                                      if (v275 >= v489) {
                                                        goto LABEL_250;
                                                      }
                                                      unint64_t v281 = *(void *)(v32 + 8 * v275);
                                                      ++v282;
                                                      if (v281) {
                                                        goto LABEL_233;
                                                      }
                                                    }
LABEL_447:
                                                    __break(1u);
                                                    goto LABEL_448;
                                                  }
                                                  uint64_t v275 = v282;
                                                }
                                              }
                                            }
LABEL_233:
                                            unint64_t v274 = (v281 - 1) & v281;
                                            unint64_t v278 = __clz(__rbit64(v281)) + (v275 << 6);
                                          }
                                          v283 = (uint64_t *)(*(void *)(v279 + 48) + 16 * v278);
                                          uint64_t v285 = *v283;
                                          uint64_t v284 = v283[1];
                                          swift_bridgeObjectRetain_n();
                                          sub_1ACA76F34((uint64_t)v491);
                                          uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
                                          uint64_t v31 = v493;
                                          unint64_t v492 = v493;
                                          unint64_t v493 = 0x8000000000000000;
                                          unint64_t v287 = sub_1ACA657FC(v285, v284);
                                          uint64_t v288 = *(void *)(v31 + 16);
                                          BOOL v289 = (v286 & 1) == 0;
                                          uint64_t v290 = v288 + v289;
                                          if (__OFADD__(v288, v289)) {
                                            goto LABEL_420;
                                          }
                                          char v291 = v286;
                                          if (*(void *)(v31 + 24) >= v290)
                                          {
                                            if ((v16 & 1) == 0)
                                            {
                                              sub_1ACD09650();
                                              uint64_t v31 = v492;
                                            }
                                          }
                                          else
                                          {
                                            sub_1ACD034CC(v290, v16);
                                            uint64_t v31 = v492;
                                            uint64_t v292 = sub_1ACA657FC(v285, v284);
                                            if ((v291 & 1) != (v293 & 1)) {
                                              goto LABEL_460;
                                            }
                                            unint64_t v287 = v292;
                                          }
                                          unint64_t v493 = v31;
                                          swift_bridgeObjectRelease();
                                          v294 = (void *)v493;
                                          swift_bridgeObjectRetain();
                                          if ((v291 & 1) == 0)
                                          {
                                            sub_1ACD0FF30(v287, v285, v284, MEMORY[0x1E4FBC860], v294);
                                            swift_bridgeObjectRetain();
                                          }
                                          swift_bridgeObjectRelease();
                                          sub_1ACB1E72C(8);
                                          swift_bridgeObjectRelease();
                                          sub_1ACA76F34(v490);
                                          uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
                                          uint64_t v31 = v493;
                                          unint64_t v492 = v493;
                                          unint64_t v493 = 0x8000000000000000;
                                          unint64_t v296 = sub_1ACA657FC(v285, v284);
                                          uint64_t v297 = *(void *)(v31 + 16);
                                          BOOL v298 = (v295 & 1) == 0;
                                          uint64_t v299 = v297 + v298;
                                          if (__OFADD__(v297, v298)) {
                                            goto LABEL_421;
                                          }
                                          char v300 = v295;
                                          if (*(void *)(v31 + 24) >= v299)
                                          {
                                            if ((v16 & 1) == 0)
                                            {
                                              sub_1ACD09650();
                                              uint64_t v31 = v492;
                                            }
                                          }
                                          else
                                          {
                                            sub_1ACD034CC(v299, v16);
                                            uint64_t v31 = v492;
                                            uint64_t v301 = sub_1ACA657FC(v285, v284);
                                            if ((v300 & 1) != (v302 & 1)) {
                                              goto LABEL_460;
                                            }
                                            unint64_t v296 = v301;
                                          }
                                          unint64_t v493 = v31;
                                          swift_bridgeObjectRelease();
                                          v303 = (void *)v493;
                                          swift_bridgeObjectRetain();
                                          if ((v300 & 1) == 0)
                                          {
                                            sub_1ACD0FF30(v296, v285, v284, MEMORY[0x1E4FBC860], v303);
                                            swift_bridgeObjectRetain();
                                          }
                                          uint64_t v276 = v303[7];
                                          swift_bridgeObjectRelease();
                                          uint64_t v31 = v276 + 8 * v296;
                                          sub_1ACB1E72C(0);
                                          swift_bridgeObjectRelease();
                                          uint64_t v490 = (uint64_t)sub_1ACD2F1AC;
                                          v491 = sub_1ACD2F1AC;
                                        }
                                      }
                                      unint64_t v259 = *((void *)v491 + v258);
                                      ++v250;
                                      if (!v259)
                                      {
                                        int64_t v250 = v258 + 1;
                                        if (v258 + 1 >= v255) {
                                          goto LABEL_214;
                                        }
                                        unint64_t v259 = *((void *)v491 + v250);
                                        if (!v259)
                                        {
                                          int64_t v250 = v258 + 2;
                                          if (v258 + 2 >= v255) {
                                            goto LABEL_214;
                                          }
                                          unint64_t v259 = *((void *)v491 + v250);
                                          if (!v259)
                                          {
                                            int64_t v260 = v258 + 3;
                                            if (v260 >= v255) {
                                              goto LABEL_214;
                                            }
                                            unint64_t v259 = *((void *)v491 + v260);
                                            if (!v259)
                                            {
                                              while (1)
                                              {
                                                int64_t v250 = v260 + 1;
                                                if (__OFADD__(v260, 1)) {
                                                  break;
                                                }
                                                if (v250 >= v255) {
                                                  goto LABEL_214;
                                                }
                                                unint64_t v259 = *((void *)v491 + v250);
                                                ++v260;
                                                if (v259) {
                                                  goto LABEL_205;
                                                }
                                              }
LABEL_446:
                                              __break(1u);
                                              goto LABEL_447;
                                            }
                                            int64_t v250 = v260;
                                          }
                                        }
                                      }
LABEL_205:
                                      unint64_t v254 = (v259 - 1) & v259;
                                      unint64_t v257 = __clz(__rbit64(v259)) + (v250 << 6);
                                    }
                                    v261 = (uint64_t *)(*(void *)(v249 + 48) + 16 * v257);
                                    uint64_t v263 = *v261;
                                    uint64_t v262 = v261[1];
                                    swift_bridgeObjectRetain();
                                    sub_1ACA76F34(v31);
                                    uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
                                    uint64_t v31 = v493;
                                    unint64_t v492 = v493;
                                    unint64_t v493 = 0x8000000000000000;
                                    uint64_t v16 = sub_1ACA657FC(v263, v262);
                                    uint64_t v265 = *(void *)(v31 + 16);
                                    BOOL v266 = (v264 & 1) == 0;
                                    uint64_t v267 = v265 + v266;
                                    if (__OFADD__(v265, v266)) {
                                      goto LABEL_419;
                                    }
                                    char v268 = v264;
                                    if (*(void *)(v31 + 24) >= v267)
                                    {
                                      if ((v32 & 1) == 0)
                                      {
                                        sub_1ACD09650();
                                        uint64_t v31 = v492;
                                      }
                                    }
                                    else
                                    {
                                      sub_1ACD034CC(v267, v32);
                                      uint64_t v31 = v492;
                                      uint64_t v269 = sub_1ACA657FC(v263, v262);
                                      if ((v268 & 1) != (v270 & 1)) {
                                        goto LABEL_460;
                                      }
                                      uint64_t v16 = v269;
                                    }
                                    unint64_t v493 = v31;
                                    swift_bridgeObjectRelease();
                                    v271 = (void *)v493;
                                    swift_bridgeObjectRetain();
                                    if ((v268 & 1) == 0)
                                    {
                                      sub_1ACD0FF30(v16, v263, v262, MEMORY[0x1E4FBC860], v271);
                                      swift_bridgeObjectRetain();
                                    }
                                    swift_bridgeObjectRelease();
                                    sub_1ACB1E72C(5);
                                    swift_bridgeObjectRelease();
                                    uint64_t v31 = (uint64_t)sub_1ACD2F1AC;
                                  }
                                }
                                unint64_t v235 = *(void *)(v32 + 8 * v233);
                                ++v222;
                                if (!v235)
                                {
                                  int64_t v222 = v233 + 1;
                                  if (v233 + 1 >= v226) {
                                    goto LABEL_186;
                                  }
                                  unint64_t v235 = *(void *)(v32 + 8 * v222);
                                  if (!v235)
                                  {
                                    int64_t v222 = v233 + 2;
                                    if (v233 + 2 >= v226) {
                                      goto LABEL_186;
                                    }
                                    unint64_t v235 = *(void *)(v32 + 8 * v222);
                                    if (!v235)
                                    {
                                      int64_t v236 = v233 + 3;
                                      if (v236 >= v226) {
                                        goto LABEL_186;
                                      }
                                      unint64_t v235 = *(void *)(v32 + 8 * v236);
                                      if (!v235)
                                      {
                                        while (1)
                                        {
                                          int64_t v222 = v236 + 1;
                                          if (__OFADD__(v236, 1)) {
                                            break;
                                          }
                                          if (v222 >= v226) {
                                            goto LABEL_186;
                                          }
                                          unint64_t v235 = *(void *)(v32 + 8 * v222);
                                          ++v236;
                                          if (v235) {
                                            goto LABEL_177;
                                          }
                                        }
LABEL_445:
                                        __break(1u);
                                        goto LABEL_446;
                                      }
                                      int64_t v222 = v236;
                                    }
                                  }
                                }
LABEL_177:
                                uint64_t v230 = (uint64_t)v221;
                                unint64_t v225 = (v235 - 1) & v235;
                                unint64_t v232 = __clz(__rbit64(v235)) + (v222 << 6);
                              }
                              v237 = (uint64_t *)(*(void *)(v489 + 48) + 16 * v232);
                              uint64_t v239 = *v237;
                              uint64_t v238 = v237[1];
                              swift_bridgeObjectRetain();
                              sub_1ACA76F34(v230);
                              uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
                              uint64_t v31 = v493;
                              unint64_t v492 = v493;
                              unint64_t v493 = 0x8000000000000000;
                              unint64_t v241 = sub_1ACA657FC(v239, v238);
                              uint64_t v242 = *(void *)(v31 + 16);
                              BOOL v243 = (v240 & 1) == 0;
                              uint64_t v244 = v242 + v243;
                              if (__OFADD__(v242, v243)) {
                                goto LABEL_418;
                              }
                              char v245 = v240;
                              if (*(void *)(v31 + 24) >= v244)
                              {
                                if ((v16 & 1) == 0)
                                {
                                  sub_1ACD09650();
                                  uint64_t v31 = v492;
                                }
                              }
                              else
                              {
                                sub_1ACD034CC(v244, v16);
                                uint64_t v31 = v492;
                                uint64_t v246 = sub_1ACA657FC(v239, v238);
                                if ((v245 & 1) != (v247 & 1)) {
                                  goto LABEL_460;
                                }
                                unint64_t v241 = v246;
                              }
                              unint64_t v493 = v31;
                              swift_bridgeObjectRelease();
                              v248 = (void *)v493;
                              swift_bridgeObjectRetain();
                              if ((v245 & 1) == 0)
                              {
                                sub_1ACD0FF30(v241, v239, v238, MEMORY[0x1E4FBC860], v248);
                                swift_bridgeObjectRetain();
                              }
                              uint64_t v227 = v248[7];
                              swift_bridgeObjectRelease();
                              uint64_t v31 = v227 + 8 * v241;
                              sub_1ACB1F034();
                              uint64_t v228 = *(void *)(*(void *)v31 + 16);
                              sub_1ACB1F0D8(v228);
                              uint64_t v229 = sub_1ACB1F5B0(v228, 2);
                              nullsub_1(v229);
                              swift_bridgeObjectRelease();
                              v221 = sub_1ACD2F1AC;
                            }
                          }
                          unint64_t v207 = *(void *)(v32 + 8 * v206);
                          ++v196;
                          if (!v207)
                          {
                            int64_t v196 = v206 + 1;
                            if (v206 + 1 >= v200) {
                              goto LABEL_158;
                            }
                            unint64_t v207 = *(void *)(v32 + 8 * v196);
                            if (!v207)
                            {
                              int64_t v196 = v206 + 2;
                              if (v206 + 2 >= v200) {
                                goto LABEL_158;
                              }
                              unint64_t v207 = *(void *)(v32 + 8 * v196);
                              if (!v207)
                              {
                                int64_t v208 = v206 + 3;
                                if (v208 >= v200) {
                                  goto LABEL_158;
                                }
                                unint64_t v207 = *(void *)(v32 + 8 * v208);
                                if (!v207)
                                {
                                  while (1)
                                  {
                                    int64_t v196 = v208 + 1;
                                    if (__OFADD__(v208, 1)) {
                                      break;
                                    }
                                    if (v196 >= v200) {
                                      goto LABEL_158;
                                    }
                                    unint64_t v207 = *(void *)(v32 + 8 * v196);
                                    ++v208;
                                    if (v207) {
                                      goto LABEL_149;
                                    }
                                  }
LABEL_442:
                                  __break(1u);
LABEL_443:
                                  uint64_t v36 = MEMORY[0x1AD119490](0, v31);
                                  char v34 = v474;
                                  id v35 = v488;
                                  goto LABEL_8;
                                }
                                int64_t v196 = v208;
                              }
                            }
                          }
LABEL_149:
                          unint64_t v199 = (v207 - 1) & v207;
                          unint64_t v205 = __clz(__rbit64(v207)) + (v196 << 6);
                        }
                        v209 = (uint64_t *)(*(void *)(v490 + 48) + 16 * v205);
                        uint64_t v211 = *v209;
                        uint64_t v210 = v209[1];
                        swift_bridgeObjectRetain();
                        sub_1ACA76F34(v31);
                        uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
                        uint64_t v31 = v493;
                        unint64_t v492 = v493;
                        unint64_t v493 = 0x8000000000000000;
                        unint64_t v213 = sub_1ACA657FC(v211, v210);
                        uint64_t v214 = *(void *)(v31 + 16);
                        BOOL v215 = (v212 & 1) == 0;
                        uint64_t v216 = v214 + v215;
                        if (__OFADD__(v214, v215)) {
                          goto LABEL_417;
                        }
                        char v217 = v212;
                        if (*(void *)(v31 + 24) >= v216)
                        {
                          if ((v16 & 1) == 0)
                          {
                            sub_1ACD09650();
                            uint64_t v31 = v492;
                          }
                        }
                        else
                        {
                          sub_1ACD034CC(v216, v16);
                          uint64_t v31 = v492;
                          uint64_t v218 = sub_1ACA657FC(v211, v210);
                          if ((v217 & 1) != (v219 & 1)) {
                            goto LABEL_460;
                          }
                          unint64_t v213 = v218;
                        }
                        unint64_t v493 = v31;
                        swift_bridgeObjectRelease();
                        v220 = (void *)v493;
                        swift_bridgeObjectRetain();
                        if ((v217 & 1) == 0)
                        {
                          sub_1ACD0FF30(v213, v211, v210, MEMORY[0x1E4FBC860], v220);
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v201 = v220[7];
                        swift_bridgeObjectRelease();
                        sub_1ACB1F034();
                        uint64_t v202 = *(void *)(*(void *)(v201 + 8 * v213) + 16);
                        sub_1ACB1F0D8(v202);
                        uint64_t v203 = sub_1ACB1F5B0(v202, 1);
                        nullsub_1(v203);
                        swift_bridgeObjectRelease();
                        uint64_t v31 = (uint64_t)sub_1ACD2F1AC;
                      }
                    }
                    unint64_t v183 = *((void *)v491 + v182);
                    ++v171;
                    if (!v183)
                    {
                      int64_t v171 = v182 + 1;
                      if (v182 + 1 >= v176) {
                        goto LABEL_130;
                      }
                      unint64_t v183 = *((void *)v491 + v171);
                      if (!v183)
                      {
                        int64_t v171 = v182 + 2;
                        if (v182 + 2 >= v176) {
                          goto LABEL_130;
                        }
                        unint64_t v183 = *((void *)v491 + v171);
                        if (!v183)
                        {
                          int64_t v184 = v182 + 3;
                          if (v184 >= v176) {
                            goto LABEL_130;
                          }
                          unint64_t v183 = *((void *)v491 + v184);
                          if (!v183)
                          {
                            while (1)
                            {
                              int64_t v171 = v184 + 1;
                              if (__OFADD__(v184, 1)) {
                                break;
                              }
                              if (v171 >= v176) {
                                goto LABEL_130;
                              }
                              unint64_t v183 = *((void *)v491 + v171);
                              ++v184;
                              if (v183) {
                                goto LABEL_121;
                              }
                            }
LABEL_441:
                            __break(1u);
                            goto LABEL_442;
                          }
                          int64_t v171 = v184;
                        }
                      }
                    }
LABEL_121:
                    unint64_t v175 = (v183 - 1) & v183;
                    unint64_t v181 = __clz(__rbit64(v183)) + (v171 << 6);
                  }
                  uint64_t v185 = (uint64_t *)(*(void *)(v170 + 48) + 16 * v181);
                  uint64_t v187 = *v185;
                  uint64_t v186 = v185[1];
                  swift_bridgeObjectRetain();
                  sub_1ACA76F34(v31);
                  uint64_t v32 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v31 = v493;
                  unint64_t v492 = v493;
                  unint64_t v493 = 0x8000000000000000;
                  uint64_t v16 = sub_1ACA657FC(v187, v186);
                  uint64_t v189 = *(void *)(v31 + 16);
                  BOOL v190 = (v188 & 1) == 0;
                  uint64_t v191 = v189 + v190;
                  if (__OFADD__(v189, v190)) {
                    goto LABEL_416;
                  }
                  char v192 = v188;
                  if (*(void *)(v31 + 24) >= v191)
                  {
                    if ((v32 & 1) == 0)
                    {
                      sub_1ACD09650();
                      uint64_t v31 = v492;
                    }
                  }
                  else
                  {
                    sub_1ACD034CC(v191, v32);
                    uint64_t v31 = v492;
                    uint64_t v193 = sub_1ACA657FC(v187, v186);
                    if ((v192 & 1) != (v194 & 1)) {
                      goto LABEL_460;
                    }
                    uint64_t v16 = v193;
                  }
                  unint64_t v493 = v31;
                  swift_bridgeObjectRelease();
                  v195 = (void *)v493;
                  swift_bridgeObjectRetain();
                  if ((v192 & 1) == 0)
                  {
                    sub_1ACD0FF30(v16, v187, v186, MEMORY[0x1E4FBC860], v195);
                    swift_bridgeObjectRetain();
                  }
                  uint64_t v177 = v195[7];
                  swift_bridgeObjectRelease();
                  sub_1ACB1F034();
                  uint64_t v178 = *(void *)(*(void *)(v177 + 8 * v16) + 16);
                  sub_1ACB1F0D8(v178);
                  uint64_t v179 = sub_1ACB1F5B0(v178, 3);
                  nullsub_1(v179);
                  swift_bridgeObjectRelease();
                  uint64_t v31 = (uint64_t)sub_1ACD2F1AC;
                }
              }
              unint64_t v156 = *(void *)(v32 + 8 * v155);
              ++v144;
              if (!v156)
              {
                int64_t v144 = v155 + 1;
                if (v155 + 1 >= v149) {
                  goto LABEL_102;
                }
                unint64_t v156 = *(void *)(v32 + 8 * v144);
                if (!v156)
                {
                  int64_t v144 = v155 + 2;
                  if (v155 + 2 >= v149) {
                    goto LABEL_102;
                  }
                  unint64_t v156 = *(void *)(v32 + 8 * v144);
                  if (!v156)
                  {
                    int64_t v157 = v155 + 3;
                    if (v157 >= v149) {
                      goto LABEL_102;
                    }
                    unint64_t v156 = *(void *)(v32 + 8 * v157);
                    if (!v156)
                    {
                      while (1)
                      {
                        int64_t v144 = v157 + 1;
                        if (__OFADD__(v157, 1)) {
                          break;
                        }
                        if (v144 >= v149) {
                          goto LABEL_102;
                        }
                        unint64_t v156 = *(void *)(v32 + 8 * v144);
                        ++v157;
                        if (v156) {
                          goto LABEL_93;
                        }
                      }
LABEL_440:
                      __break(1u);
                      goto LABEL_441;
                    }
                    int64_t v144 = v157;
                  }
                }
              }
LABEL_93:
              unint64_t v148 = (v156 - 1) & v156;
              unint64_t v154 = __clz(__rbit64(v156)) + (v144 << 6);
            }
            uint64_t v158 = (uint64_t *)(*(void *)(v145 + 48) + 16 * v154);
            uint64_t v160 = *v158;
            uint64_t v159 = v158[1];
            swift_bridgeObjectRetain();
            sub_1ACA76F34((uint64_t)v487);
            uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v31 = v493;
            unint64_t v492 = v493;
            unint64_t v493 = 0x8000000000000000;
            unint64_t v162 = sub_1ACA657FC(v160, v159);
            uint64_t v163 = *(void *)(v31 + 16);
            BOOL v164 = (v161 & 1) == 0;
            uint64_t v165 = v163 + v164;
            if (__OFADD__(v163, v164)) {
              goto LABEL_415;
            }
            char v166 = v161;
            if (*(void *)(v31 + 24) >= v165)
            {
              if ((v16 & 1) == 0)
              {
                sub_1ACD09650();
                uint64_t v31 = v492;
              }
            }
            else
            {
              sub_1ACD034CC(v165, v16);
              uint64_t v31 = v492;
              uint64_t v167 = sub_1ACA657FC(v160, v159);
              if ((v166 & 1) != (v168 & 1)) {
                goto LABEL_460;
              }
              unint64_t v162 = v167;
            }
            unint64_t v493 = v31;
            swift_bridgeObjectRelease();
            uint64_t v169 = (void *)v493;
            swift_bridgeObjectRetain();
            if ((v166 & 1) == 0)
            {
              sub_1ACD0FF30(v162, v160, v159, MEMORY[0x1E4FBC860], v169);
              swift_bridgeObjectRetain();
            }
            uint64_t v150 = v169[7];
            swift_bridgeObjectRelease();
            uint64_t v31 = v150 + 8 * v162;
            sub_1ACB1F034();
            uint64_t v151 = *(void *)(*(void *)v31 + 16);
            sub_1ACB1F0D8(v151);
            uint64_t v152 = sub_1ACB1F5B0(v151, 4);
            nullsub_1(v152);
            swift_bridgeObjectRelease();
            v487 = sub_1ACD2F1AC;
            uint64_t v145 = (uint64_t)v491;
          }
        }
        unint64_t v130 = *(void *)(v32 + 8 * v129);
        ++v123;
        if (!v130)
        {
          int64_t v123 = v129 + 1;
          if (v129 + 1 >= v122) {
            goto LABEL_74;
          }
          unint64_t v130 = *(void *)(v32 + 8 * v123);
          if (!v130)
          {
            int64_t v123 = v129 + 2;
            if (v129 + 2 >= v122) {
              goto LABEL_74;
            }
            unint64_t v130 = *(void *)(v32 + 8 * v123);
            if (!v130)
            {
              int64_t v131 = v129 + 3;
              if (v131 >= v122) {
                goto LABEL_74;
              }
              unint64_t v130 = *(void *)(v32 + 8 * v131);
              if (!v130)
              {
                while (1)
                {
                  int64_t v123 = v131 + 1;
                  if (__OFADD__(v131, 1)) {
                    goto LABEL_439;
                  }
                  if (v123 >= v122) {
                    goto LABEL_74;
                  }
                  unint64_t v130 = *(void *)(v32 + 8 * v123);
                  ++v131;
                  if (v130) {
                    goto LABEL_65;
                  }
                }
              }
              int64_t v123 = v131;
            }
          }
        }
LABEL_65:
        unint64_t v121 = (v130 - 1) & v130;
        unint64_t v128 = __clz(__rbit64(v130)) + (v123 << 6);
      }
      uint64_t v132 = (uint64_t *)(*(void *)(v486 + 48) + 16 * v128);
      uint64_t v134 = *v132;
      uint64_t v133 = v132[1];
      swift_bridgeObjectRetain();
      sub_1ACA76F34((uint64_t)v488);
      uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = v493;
      unint64_t v492 = v493;
      unint64_t v493 = 0x8000000000000000;
      unint64_t v136 = sub_1ACA657FC(v134, v133);
      uint64_t v137 = *(void *)(v31 + 16);
      BOOL v138 = (v135 & 1) == 0;
      uint64_t v139 = v137 + v138;
      if (__OFADD__(v137, v138))
      {
        __break(1u);
LABEL_415:
        __break(1u);
LABEL_416:
        __break(1u);
LABEL_417:
        __break(1u);
LABEL_418:
        __break(1u);
LABEL_419:
        __break(1u);
LABEL_420:
        __break(1u);
LABEL_421:
        __break(1u);
LABEL_422:
        __break(1u);
LABEL_423:
        __break(1u);
LABEL_424:
        __break(1u);
LABEL_425:
        __break(1u);
LABEL_426:
        __break(1u);
LABEL_427:
        __break(1u);
LABEL_428:
        __break(1u);
LABEL_429:
        __break(1u);
LABEL_430:
        __break(1u);
LABEL_431:
        __break(1u);
LABEL_432:
        __break(1u);
LABEL_433:
        __break(1u);
LABEL_434:
        __break(1u);
LABEL_435:
        __break(1u);
LABEL_436:
        __break(1u);
LABEL_437:
        __break(1u);
LABEL_438:
        __break(1u);
LABEL_439:
        __break(1u);
        goto LABEL_440;
      }
      char v140 = v135;
      if (*(void *)(v31 + 24) >= v139)
      {
        if ((v16 & 1) == 0)
        {
          sub_1ACD09650();
          uint64_t v31 = v492;
        }
      }
      else
      {
        sub_1ACD034CC(v139, v16);
        uint64_t v31 = v492;
        uint64_t v141 = sub_1ACA657FC(v134, v133);
        if ((v140 & 1) != (v142 & 1)) {
          goto LABEL_460;
        }
        unint64_t v136 = v141;
      }
      unint64_t v493 = v31;
      swift_bridgeObjectRelease();
      uint64_t v143 = (void *)v493;
      swift_bridgeObjectRetain();
      if ((v140 & 1) == 0)
      {
        sub_1ACD0FF30(v136, v134, v133, MEMORY[0x1E4FBC860], v143);
        swift_bridgeObjectRetain();
      }
      uint64_t v124 = v143[7];
      swift_bridgeObjectRelease();
      uint64_t v31 = v124 + 8 * v136;
      sub_1ACB1F034();
      uint64_t v125 = *(void *)(*(void *)v31 + 16);
      sub_1ACB1F0D8(v125);
      uint64_t v126 = sub_1ACB1F5B0(v125, 0);
      nullsub_1(v126);
      swift_bridgeObjectRelease();
      v488 = sub_1ACD2F1AC;
    }
  }
LABEL_456:
  __break(1u);
LABEL_457:
  __break(1u);
LABEL_458:
  __break(1u);
LABEL_459:
  __break(1u);
LABEL_460:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t DownloadStateChecker.episodesToBePurged(in:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v73[12] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v66 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F52F0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68[3] = (id)MEMORY[0x1E4FBC870];
  uint64_t v69 = MEMORY[0x1E4FBC870];
  v68[2] = (id)MEMORY[0x1E4FBC870];
  v68[1] = (id)MEMORY[0x1E4FBC870];
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v72 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F52F8);
  sub_1ACE76EB8();
  uint64_t v67 = v3;
  if (v3) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = v11;
  uint64_t v16 = v66;
  uint64_t v60 = v13;
  uint64_t v17 = *(void *)(v73[0] + 16);
  if (v17)
  {
    uint64_t v18 = v60;
    id v65 = (char *)v60 + *(int *)(v10 + 48);
    uint64_t v19 = v15;
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v53[1] = v73[0];
    uint64_t v21 = v73[0] + v20;
    id v64 = self;
    id v63 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v56 = (void (**)(uint64_t *, char *, uint64_t))(v16 + 16);
    unsigned int v62 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v61 = *(void *)(v19 + 72);
    unint64_t v59 = *(void *)"GJ\b@";
    uint64_t v55 = *MEMORY[0x1E4F289D0];
    *(void *)&long long v22 = 136315138;
    long long v58 = v22;
    uint64_t v57 = MEMORY[0x1E4FBC840] + 8;
    long long v54 = xmmword_1ACE843F0;
    uint64_t v66 = v7;
    while (1)
    {
      sub_1ACA3AAD4(v21, (uint64_t)v18, &qword_1E99F52F0);
      uint64_t v24 = *v18;
      uint64_t v23 = v18[1];
      (*v63)(v9, v65, v7);
      v73[0] = 65542;
      uint64_t v25 = (void *)sub_1ACE74E18();
      v68[0] = 0;
      id v26 = objc_msgSend(v64, sel_fileHandleForReadingFromURL_error_, v25, v68);

      if (!v26)
      {
        id v37 = v68[0];
        uint64_t v36 = (void *)sub_1ACE74D78();

        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      id v27 = v68[0];
      int v28 = objc_msgSend(v26, sel_fileDescriptor);
      int v29 = ffsctl(v28, v59, v73, 0);
      if (v29)
      {
        Swift::Int32 v30 = v29;
        sub_1ACA50D4C(0, &qword_1EB771CC0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4B0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v54;
        *(void *)(inited + 32) = sub_1ACE761B8();
        *(void *)(inited + 40) = v32;
        *(void *)(inited + 72) = v66;
        uint64_t v7 = v66;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
        (*v56)(boxed_opaque_existential_1, v9, v7);
        v74.value._rawValue = (void *)sub_1ACA3625C(inited);
        NSError.init(fsctlCode:userInfo:)(v34, v30, v74);
        uint64_t v36 = v35;
        swift_willThrow();
        swift_bridgeObjectRelease();

LABEL_12:
        uint64_t v67 = 0;
        if (qword_1EB768C48 != -1) {
          swift_once();
        }
        uint64_t v38 = sub_1ACE754C8();
        __swift_project_value_buffer(v38, (uint64_t)qword_1EB768C28);
        id v39 = v36;
        id v40 = v36;
        unsigned int v41 = sub_1ACE75498();
        os_log_type_t v42 = sub_1ACE76BE8();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          v73[0] = v44;
          *(_DWORD *)uint64_t v43 = v58;
          v68[0] = v36;
          id v45 = v36;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
          uint64_t v46 = sub_1ACE76228();
          *(void *)(v43 + 4) = sub_1ACA3189C(v46, v47, v73);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1AC9D5000, v41, v42, "Unable to evaluate media for purgeability: %s", (uint8_t *)v43, 0xCu);
          swift_arrayDestroy();
          uint64_t v48 = v44;
          uint64_t v7 = v66;
          MEMORY[0x1AD11B340](v48, -1, -1);
          MEMORY[0x1AD11B340](v43, -1, -1);
        }
        else
        {
        }
        (*v62)(v9, v7);
        uint64_t v18 = v60;
        goto LABEL_7;
      }

      if ((v73[0] & 0x8000) == 0 || (v73[0] & 6) == 0)
      {
        id v49 = v67;
        sub_1ACCA17E8();
        if (v49)
        {
          swift_bridgeObjectRelease();
          uint64_t v36 = v49;
          goto LABEL_12;
        }
        if ((v50 & 0x800) != 0 && (v50 & 6) != 0)
        {
          uint64_t v67 = 0;
        }
        else
        {
          sub_1ACCA17E8();
          if ((v51 & 0x400) != 0 && (v51 & 6) != 0)
          {
            uint64_t v67 = 0;
          }
          else
          {
            sub_1ACCA17E8();
            uint64_t v67 = 0;
            if ((v52 & 0x200) == 0 || (v52 & 6) == 0)
            {
              (*v62)(v9, v7);
              swift_bridgeObjectRelease();
              goto LABEL_7;
            }
          }
        }
      }
      sub_1ACD3007C(v73, v24, v23);
      swift_bridgeObjectRelease();
      (*v62)(v9, v7);
LABEL_7:
      v21 += v61;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        return v69;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1ACD2EFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v6, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ACE84830;
  sub_1ACE761B8();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v9 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithKey_ascending_, v9, 1);

  *(void *)(v7 + 32) = v10;
  v15[5] = v7;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v11 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v11);

  objc_msgSend(v6, sel_setResultType_, 2);
  sub_1ACA4E0D0(v5);
  uint64_t v12 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v12);

  v15[2] = a2;
  v15[3] = v6;
  uint64_t v13 = sub_1ACD2A4FC((uint64_t)sub_1ACD355F0, (uint64_t)v15);

  return v13;
}

void sub_1ACD2F1AC(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

void sub_1ACD2F1BC(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E1A0);
  unint64_t v2 = sub_1ACE76EE8();
  uint64_t v3 = sub_1ACC2BF44(v2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v21 = a1;
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      id v6 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v8 = *(void *)(v3 + 8 * v5 + 32);
        uint64_t v25 = sub_1ACE761B8();
        uint64_t v26 = v9;
        swift_bridgeObjectRetain();
        sub_1ACE771F8();
        if (*(void *)(v8 + 16) && (unint64_t v10 = sub_1ACA65B48((uint64_t)v22), (v11 & 1) != 0))
        {
          sub_1ACA33128(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v23);
        }
        else
        {
          long long v23 = 0u;
          long long v24 = 0u;
        }
        sub_1ACA6A0F8((uint64_t)v22);
        if (*((void *)&v24 + 1))
        {
          if (swift_dynamicCast()) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v23, qword_1EB7725E0);
        }
        uint64_t v25 = 0;
        uint64_t v26 = 0;
LABEL_15:
        swift_bridgeObjectRelease();
        uint64_t v12 = v26;
        if (v26)
        {
          uint64_t v13 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v6 = sub_1ACA41EA0(0, v6[2] + 1, 1, v6);
          }
          unint64_t v15 = v6[2];
          unint64_t v14 = v6[3];
          if (v15 >= v14 >> 1) {
            id v6 = sub_1ACA41EA0((void *)(v14 > 1), v15 + 1, 1, v6);
          }
          v6[2] = v15 + 1;
          uint64_t v7 = &v6[2 * v15];
          void v7[4] = v13;
          v7[5] = v12;
        }
        if (v4 == ++v5)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_27;
        }
      }
    }
    swift_bridgeObjectRelease();
    id v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_27:
    uint64_t v16 = sub_1ACB02BC0((uint64_t)v6);
    swift_bridgeObjectRelease();
    a1 = v21;
  }
  else
  {
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE754C8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB768C28);
    uint64_t v18 = sub_1ACE75498();
    os_log_type_t v19 = sub_1ACE76BE8();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v20 = 0;
      _os_log_impl(&dword_1AC9D5000, v18, v19, "Unable to fetch episodes: Result is unexpected", v20, 2u);
      MEMORY[0x1AD11B340](v20, -1, -1);
    }

    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  *a1 = v16;
}

void sub_1ACD2F654(uint64_t a1@<X2>, unint64_t *a2@<X8>)
{
  id v73 = (char *)a1;
  long long v58 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v68 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1ACE74F28();
  uint64_t v71 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v60 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5318);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v69 = (uint64_t *)((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F52F0);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v55 - v11;
  sub_1ACE761B8();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v14 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1ACE8F1F0;
  uint64_t v17 = self;
  *(void *)(v16 + 32) = objc_msgSend(v17, sel_predicateForDownloaded_excludeHidden_, 1, 0);
  uint64_t v18 = (void *)sub_1ACE76178();
  id v19 = objc_msgSend(v17, sel_predicateForAllEpisodesOnPodcastUuid_, v18);

  *(void *)(v16 + 40) = v19;
  uint64_t v75 = v16;
  sub_1ACE76598();
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  unint64_t v20 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v20);

  objc_msgSend(v15, sel_setPredicate_, v21);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v22 = v74;
  unint64_t v23 = sub_1ACE76EE8();
  if (v22)
  {

    return;
  }
  unint64_t v24 = v23;
  uint64_t v25 = v71;
  uint64_t v57 = 0;
  id v64 = v12;
  id v73 = v10;
  uint64_t v62 = v7;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1ACE77508();
  }
  else
  {
    uint64_t v26 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v27 = v58;
  uint64_t v28 = (uint64_t)v69;
  uint64_t v29 = v62;
  if (!v26)
  {

    swift_bridgeObjectRelease();
    unint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_29:
    swift_bridgeObjectRelease();
    *id v27 = v31;
    return;
  }
  uint64_t v67 = v26;
  if (v26 >= 1)
  {
    id v56 = v15;
    uint64_t v30 = 0;
    uint64_t v61 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 6);
    unint64_t v59 = (void (**)(char *, uint64_t, uint64_t))(v25 + 4);
    uint64_t v71 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
    unint64_t v72 = v24 & 0xC000000000000001;
    uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
    unint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v32 = v67;
    unint64_t v65 = v24;
    do
    {
      unint64_t v74 = v31;
      if (v72) {
        id v33 = (id)MEMORY[0x1AD119490](v30, v24);
      }
      else {
        id v33 = *(id *)(v24 + 8 * v30 + 32);
      }
      char v34 = v33;
      id v35 = objc_msgSend(v33, sel_uuid);
      if (v35)
      {
        uint64_t v36 = v35;
        uint64_t v37 = sub_1ACE761B8();
        uint64_t v39 = v38;

        id v40 = objc_msgSend(v34, sel_assetURL);
        if (v40)
        {
          unsigned int v41 = v40;
          sub_1ACE761B8();

          sub_1ACE74EF8();
          uint64_t v42 = v63;
          uint64_t v43 = (uint64_t)v68;
          swift_bridgeObjectRelease();
          if ((*v61)(v43, 1, v42) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1ACA50E78(v43, &qword_1EB7731B0);
            uint64_t v44 = 1;
            uint64_t v29 = v62;
          }
          else
          {
            id v45 = v60;
            uint64_t v46 = *v59;
            (*v59)(v60, v43, v42);
            uint64_t v47 = v62;
            uint64_t v48 = (char *)v69 + *(int *)(v62 + 48);
            *uint64_t v69 = v37;
            v69[1] = v39;
            id v49 = v45;
            uint64_t v28 = (uint64_t)v69;
            uint64_t v50 = v42;
            uint64_t v29 = v47;
            v46(v48, (uint64_t)v49, v50);
            uint64_t v44 = 0;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = 1;
        }
        unint64_t v24 = v65;
        uint64_t v32 = v67;
      }
      else
      {
        uint64_t v44 = 1;
      }
      (*v71)(v28, v44, 1, v29);

      BOOL v51 = (*v70)(v28, 1, v29) == 1;
      unint64_t v31 = v74;
      if (v51)
      {
        sub_1ACA50E78(v28, &qword_1E99F5318);
      }
      else
      {
        uint64_t v52 = (uint64_t)v64;
        sub_1ACA50E14(v28, (uint64_t)v64, &qword_1E99F52F0);
        sub_1ACA50E14(v52, (uint64_t)v73, &qword_1E99F52F0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = sub_1ACA43F40(0, *(void *)(v31 + 16) + 1, 1, v31);
        }
        unint64_t v54 = *(void *)(v31 + 16);
        unint64_t v53 = *(void *)(v31 + 24);
        if (v54 >= v53 >> 1) {
          unint64_t v31 = sub_1ACA43F40(v53 > 1, v54 + 1, 1, v31);
        }
        *(void *)(v31 + 16) = v54 + 1;
        sub_1ACA50E14((uint64_t)v73, v31+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v54, &qword_1E99F52F0);
      }
      ++v30;
    }
    while (v32 != v30);

    swift_bridgeObjectRelease();
    id v27 = v58;
    goto LABEL_29;
  }
  __break(1u);
}

void sub_1ACD2FD90(unint64_t *a1@<X8>)
{
  sub_1ACD2F654(*(void *)(v1 + 32), a1);
}

uint64_t sub_1ACD2FDB0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1ACE77188();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1ACE77178();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1ACD32648(v7, result + 1, (uint64_t *)&unk_1E99F5300, (unint64_t *)&qword_1EB768F50, 0x1E4F28ED0, (void (*)(unint64_t))sub_1ACBEBF5C);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1ACBEBF5C(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1ACD32A08((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE76F58();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1ACE76F68();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        id v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1ACE76F68();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1ACD32A8C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1ACD3007C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1ACE77B18();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  uint64_t v8 = sub_1ACE77B78();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1ACE77848() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1ACE77848() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1ACD32C14(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t destroy for DownloadStateChecker(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadStateChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadStateChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DownloadStateChecker(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadStateChecker(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadStateChecker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadStateChecker()
{
  return &type metadata for DownloadStateChecker;
}

uint64_t sub_1ACD30438(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1ACE77B18();
  sub_1ACE77B58();
  uint64_t v6 = sub_1ACE77B78();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1ACD32DB0(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1ACD30558(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1ACE77B18();
  sub_1ACE77B38();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_1ACE77B78();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1ACD32F00(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)(v7 + 48);
  while (1)
  {
    uint64_t v13 = (void *)(v12 + 16 * v10);
    uint64_t v14 = v13[1];
    if (v14) {
      break;
    }
    if (!a3) {
      goto LABEL_15;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (!a3) {
    goto LABEL_6;
  }
  BOOL v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_1ACE77848() & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
  uint64_t v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1ACD30724(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1ACE77B08();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1ACD330B8(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1ACD30820(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE75118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1ACD35660((unint64_t *)&qword_1EB766C80);
  swift_bridgeObjectRetain();
  char v34 = a2;
  uint64_t v11 = sub_1ACE760E8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_1ACD35660((unint64_t *)&unk_1E99F3ED0);
      char v22 = sub_1ACE76168();
      uint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      uint64_t v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1ACD331DC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1ACD30B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1ACE77B18();
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  int v10 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v48 = v8;
  uint64_t v49 = v7;
  sub_1ACE76108();
  int v46 = v10;
  sub_1ACE77B38();
  if (v10 != 1) {
    sub_1ACE77B58();
  }
  sub_1ACA8F4F4(a2 + 32, (uint64_t)v53);
  sub_1ACA8F4F4((uint64_t)v53, (uint64_t)v63);
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  uint64_t v42 = v3;
  if (v64 > 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
  }
  uint64_t v11 = sub_1ACE77B78();
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v6 + 56;
  if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v45 = v9;
    uint64_t v47 = ~v12;
    uint64_t v15 = *(void *)(v6 + 48);
    do
    {
      uint64_t v16 = v15 + 72 * v13;
      uint64_t v17 = *(void *)(v16 + 16);
      char v18 = *(unsigned char *)(v16 + 24);
      uint64_t v19 = *(void *)(v16 + 32);
      uint64_t v20 = *(void *)(v16 + 40);
      uint64_t v21 = *(void *)(v16 + 48);
      uint64_t v22 = *(void *)(v16 + 56);
      uint64_t v23 = *(void *)(v16 + 64);
      BOOL v24 = *(void *)v16 == v49 && *(void *)(v16 + 8) == v48;
      if (!v24 && (sub_1ACE77848() & 1) == 0) {
        goto LABEL_9;
      }
      if (v18)
      {
        if (!v46) {
          goto LABEL_9;
        }
      }
      else
      {
        char v25 = v46;
        if (v17 != v45) {
          char v25 = 1;
        }
        if (v25) {
          goto LABEL_9;
        }
      }
      if (v21)
      {
        if (v21 == 1)
        {
          sub_1ACA8F4F4((uint64_t)v53, (uint64_t)v56);
          if (v57 == 1) {
            goto LABEL_37;
          }
        }
        else if (v21 == 2)
        {
          sub_1ACA8F4F4((uint64_t)v53, (uint64_t)v51);
          if (v52 == 2) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1ACA8F4F4((uint64_t)v53, (uint64_t)v58);
          if (v60 >= 3 && ((v19 & 1) == 0) != v58[0])
          {
            int v26 = v61;
            uint64_t v27 = v62;
            BOOL v28 = v20 == v59 && v21 == v60;
            if (v28 || (sub_1ACE77848()) && ((v22 ^ v26) & 1) == 0 && v23 == v27)
            {
LABEL_37:
              swift_bridgeObjectRelease();
              sub_1ACC44F40((void *)v43);
              uint64_t v29 = *(void *)(*v42 + 48) + 72 * v13;
              uint64_t v30 = *(void *)(v29 + 8);
              uint64_t v31 = *(void *)(v29 + 16);
              char v32 = *(unsigned char *)(v29 + 24);
              uint64_t v33 = *(void *)(v29 + 32);
              uint64_t v34 = *(void *)(v29 + 40);
              unint64_t v35 = *(void *)(v29 + 48);
              uint64_t v36 = *(void *)(v29 + 56);
              uint64_t v37 = *(void *)(v29 + 64);
              *(void *)uint64_t v44 = *(void *)v29;
              *(void *)(v44 + 8) = v30;
              *(void *)(v44 + 16) = v31;
              *(unsigned char *)(v44 + 24) = v32;
              *(void *)(v44 + 32) = v33;
              *(void *)(v44 + 40) = v34;
              *(void *)(v44 + 48) = v35;
              *(void *)(v44 + 56) = v36;
              *(void *)(v44 + 64) = v37;
              swift_bridgeObjectRetain();
              sub_1ACA50D88(v33, v34, v35);
              return 0;
            }
          }
        }
      }
      else
      {
        sub_1ACA8F4F4((uint64_t)v53, (uint64_t)v54);
        if (!v55) {
          goto LABEL_37;
        }
      }
LABEL_9:
      unint64_t v13 = (v13 + 1) & v47;
    }
    while (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v50 = *v42;
  *uint64_t v42 = 0x8000000000000000;
  sub_1ACB99C68((void *)v43);
  sub_1ACD33454(v43, v13, isUniquelyReferenced_nonNull_native);
  *uint64_t v42 = v50;
  swift_bridgeObjectRelease();
  long long v40 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v44 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v44 + 48) = v40;
  *(void *)(v44 + 64) = *(void *)(v43 + 64);
  long long v41 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v43;
  *(_OWORD *)(v44 + 16) = v41;
  return 1;
}

uint64_t sub_1ACD30F04(uint64_t a1, uint64_t a2, __int16 a3)
{
  char v7 = a3 & 1;
  uint64_t v8 = *v3;
  sub_1ACE77B18();
  uint64_t v27 = v3;
  uint64_t v28 = a1;
  char v26 = v7;
  sub_1ACE77B38();
  if ((a3 & 1) == 0) {
    sub_1ACE77B58();
  }
  char v9 = HIBYTE(a3);
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1ACE77B78();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v27;
    *uint64_t v27 = 0x8000000000000000;
    uint64_t v21 = a2;
    sub_1ACD337F0(a2, a3 & 0xFF01, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v27 = v29;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    uint64_t v23 = v28;
    char v24 = v26;
    goto LABEL_28;
  }
  uint64_t v13 = ~v11;
  while (1)
  {
    uint64_t v15 = *(void *)(v8 + 48) + 16 * v12;
    if ((*(unsigned char *)(v15 + 8) & 1) == 0) {
      break;
    }
    if (a3) {
      goto LABEL_12;
    }
LABEL_6:
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_25;
    }
  }
  if ((a3 & 1) != 0 || *(void *)v15 != a2) {
    goto LABEL_6;
  }
LABEL_12:
  unint64_t v16 = 0xEB00000000737365;
  uint64_t v17 = 0x4C74736567677573;
  switch(*(unsigned char *)(v15 + 9))
  {
    case 1:
      unint64_t v16 = 0xE700000000000000;
      uint64_t v17 = 0x6C61727475656ELL;
      break;
    case 2:
      uint64_t v17 = 0x657469726F766166;
      unint64_t v16 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v16 = 0xE700000000000000;
      uint64_t v17 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  uint64_t v18 = 0x4C74736567677573;
  unint64_t v19 = 0xEB00000000737365;
  switch(HIBYTE(a3))
  {
    case 1:
      unint64_t v19 = 0xE700000000000000;
      if (v17 == 0x6C61727475656ELL) {
        goto LABEL_23;
      }
      goto LABEL_5;
    case 2:
      uint64_t v18 = 0x657469726F766166;
      unint64_t v19 = 0xE900000000000064;
      goto LABEL_20;
    case 3:
      unint64_t v19 = 0xE700000000000000;
      if (v17 == 0x6E776F6E6B6E75) {
        goto LABEL_23;
      }
      goto LABEL_5;
    default:
LABEL_20:
      if (v17 != v18) {
        goto LABEL_5;
      }
LABEL_23:
      if (v16 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
LABEL_5:
      char v14 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v23 = a1;
      uint64_t result = 0;
      uint64_t v25 = *(void *)(*v27 + 48) + 16 * v12;
      uint64_t v21 = *(void *)v25;
      char v24 = *(unsigned char *)(v25 + 8);
      char v9 = *(unsigned char *)(v25 + 9);
      break;
  }
LABEL_28:
  *(void *)uint64_t v23 = v21;
  *(unsigned char *)(v23 + 8) = v24;
  *(unsigned char *)(v23 + 9) = v9;
  return result;
}

uint64_t sub_1ACD31300(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1ACE77188();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1ACE77178();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1ACD32648(v7, result + 1, &qword_1EB769020, (unint64_t *)&qword_1EB768ED8, 0x1E4F1C118, (void (*)(unint64_t))sub_1ACBED420);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1ACBED420(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1ACD32A08((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE76F58();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1ACE76F68();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1ACE76F68();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1ACD33BD8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1ACD315CC(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1ACE77B18();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1ACE77B78();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1ACD33D60(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_24;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xEC00000073747361;
    uint64_t v10 = 0x63646F5079616C70;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xEB00000000747361;
        break;
      case 2:
        uint64_t v10 = 0x7461745379616C70;
        unint64_t v9 = 0xEB000000006E6F69;
        break;
      case 3:
        uint64_t v10 = 0x6269726373627573;
        unint64_t v9 = 0xE900000000000065;
        break;
      case 4:
        unint64_t v9 = 0xE800000000000000;
        uint64_t v10 = 0x6D65744979616C70;
        break;
      default:
        break;
    }
    uint64_t v11 = 0x63646F5079616C70;
    unint64_t v12 = 0xEC00000073747361;
    switch((char)a2)
    {
      case 1:
        uint64_t v13 = 7631713;
        goto LABEL_11;
      case 2:
        uint64_t v11 = 0x7461745379616C70;
        uint64_t v13 = 7237481;
LABEL_11:
        unint64_t v12 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        if (v10 != v11) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        uint64_t v11 = 0x6269726373627573;
        unint64_t v12 = 0xE900000000000065;
        goto LABEL_14;
      case 4:
        unint64_t v12 = 0xE800000000000000;
        if (v10 != 0x6D65744979616C70) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v10 != v11) {
          goto LABEL_16;
        }
LABEL_15:
        if (v9 != v12)
        {
LABEL_16:
          char v14 = sub_1ACE77848();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_23;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_24:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1ACD31990(uint64_t a1, unint64_t a2, char a3)
{
  int v6 = a3 & 1;
  uint64_t v7 = *v3;
  sub_1ACE77B18();
  sub_1ACE77B28();
  uint64_t v8 = sub_1ACE77B78();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v12 = v6 != 0;
    BOOL v13 = a2 > 3 && v6 != 0;
    BOOL v14 = a2 == 3 && v6 != 0;
    BOOL v15 = a2 == 2 && v6 != 0;
    BOOL v16 = a2 == 1 && v6 != 0;
    if (a2) {
      BOOL v12 = 0;
    }
    while (1)
    {
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v10;
      if (*(unsigned char *)(v17 + 8) == 1)
      {
        switch(*(void *)v17)
        {
          case 1:
            if (v16) {
              goto LABEL_30;
            }
            goto LABEL_18;
          case 2:
            if (v15) {
              goto LABEL_30;
            }
            goto LABEL_18;
          case 3:
            if (v14) {
              goto LABEL_30;
            }
            goto LABEL_18;
          case 4:
            if (v13) {
              goto LABEL_30;
            }
            goto LABEL_18;
          default:
            if (v12) {
              goto LABEL_30;
            }
            goto LABEL_18;
        }
      }
      if (!v6) {
        break;
      }
LABEL_18:
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_31;
      }
    }
LABEL_30:
    uint64_t result = 0;
    uint64_t v19 = *(void *)(*v3 + 48) + 16 * v10;
    a2 = *(void *)v19;
    LOBYTE(v6) = *(unsigned char *)(v19 + 8);
  }
  else
  {
LABEL_31:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1ACD34138(a2, v6, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1ACD31B70(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v8 = *v4;
  sub_1ACE77B18();
  id v27 = v4;
  if (a4)
  {
    sub_1ACE77B28();
    swift_bridgeObjectRetain();
    if (a4 == 1)
    {
      sub_1ACA50CB8(a2, a3, 1);
      sub_1ACE76F78();
      sub_1ACA50D28(a2, a3, 1);
    }
    else
    {
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = sub_1ACE77B78();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v27;
    *id v27 = 0x8000000000000000;
    sub_1ACA50CB8(a2, a3, a4);
    sub_1ACD34340(a2, a3, a4, v11, isUniquelyReferenced_nonNull_native);
    *id v27 = v30;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = a4;
    return result;
  }
  uint64_t v12 = ~v10;
  uint64_t v28 = ~v10;
  while (1)
  {
    uint64_t v13 = *(void *)(v8 + 48) + 24 * v11;
    BOOL v14 = *(void **)v13;
    if (!*(unsigned char *)(v13 + 16))
    {
      if (!a4 && v14 == a2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      goto LABEL_8;
    }
    uint64_t v15 = *(void *)(v13 + 8);
    if (*(unsigned char *)(v13 + 16) != 1) {
      break;
    }
    if (a4 == 1)
    {
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F68);
      sub_1ACA50CB8(a2, a3, 1);
      sub_1ACA50CB8(v14, v15, 1);
      char v16 = sub_1ACE76F68();
      uint64_t v12 = v28;
      sub_1ACA50D28(a2, a3, 1);
      sub_1ACA50D28(v14, v15, 1);
      if (v16)
      {
        swift_bridgeObjectRelease();
        id v20 = a2;
        uint64_t v21 = a3;
        char v22 = 1;
        goto LABEL_26;
      }
    }
LABEL_8:
    unint64_t v11 = (v11 + 1) & v12;
    if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_24;
    }
  }
  if (a4 != 2) {
    goto LABEL_8;
  }
  BOOL v17 = v14 == a2 && v15 == a3;
  if (!v17 && (sub_1ACE77848() & 1) == 0) {
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  id v20 = a2;
  uint64_t v21 = a3;
  char v22 = 2;
LABEL_26:
  sub_1ACA50D28(v20, v21, v22);
LABEL_27:
  uint64_t v23 = *(void *)(*v27 + 48) + 24 * v11;
  id v24 = *(void **)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  *(void *)a1 = *(void *)v23;
  *(void *)(a1 + 8) = v25;
  char v26 = *(unsigned char *)(v23 + 16);
  *(unsigned char *)(a1 + 16) = v26;
  sub_1ACA50CB8(v24, v25, v26);
  return 0;
}

uint64_t sub_1ACD31EC4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1ACE77188();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1ACA50D4C(0, &qword_1EB76E0F0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1ACE77178();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1ACD32648(v7, result + 1, &qword_1E99F5310, &qword_1EB76E0F0, 0x1E4F1C9E8, (void (*)(unint64_t))sub_1ACBEE134);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1ACBEE134(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1ACD32A08((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE76F58();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1ACA50D4C(0, &qword_1EB76E0F0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1ACE76F68();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1ACE76F68();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1ACD345F4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1ACD32190(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1ACE77B18();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1ACE77B78();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)&aStdq_7[8 * (char)a2];
    while (*(void *)&aStdq_7[8 * *(char *)(*(void *)(v6 + 48) + v9)] != v11)
    {
      char v12 = sub_1ACE77848();
      swift_bridgeObjectRelease_n();
      if (v12) {
        goto LABEL_8;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1ACD3477C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1ACD3232C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACE771D8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      sub_1ACA6A09C(*(void *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      char v11 = MEMORY[0x1AD1193A0](v16, a2);
      sub_1ACA6A0F8((uint64_t)v16);
      if (v11) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_1ACA6A0F8(a2);
    sub_1ACA6A09C(*(void *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1ACA6A09C(a2, (uint64_t)v16);
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1ACD34924((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_1ACD324A8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1ACE77B18();
  swift_bridgeObjectRetain();
  sub_1ACE77D08();
  uint64_t v8 = sub_1ACE77B78();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1ACD34A90(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    *(void *)&long long v13 = a2;
    *((void *)&v13 + 1) = a3;
    uint64_t result = 1;
    goto LABEL_8;
  }
  if ((sub_1ACE77CF8() & 1) == 0)
  {
    uint64_t v11 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((sub_1ACE77CF8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  long long v13 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
LABEL_8:
  *a1 = v13;
  return result;
}

uint64_t sub_1ACD32618(uint64_t a1, uint64_t a2)
{
  return sub_1ACD32648(a1, a2, &qword_1EB769020, (unint64_t *)&qword_1EB768ED8, 0x1E4F1C118, (void (*)(unint64_t))sub_1ACBED420);
}

uint64_t sub_1ACD32648(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v8 = sub_1ACE77228();
    uint64_t v21 = v8;
    sub_1ACE77138();
    if (sub_1ACE771A8())
    {
      sub_1ACA50D4C(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          uint64_t v8 = v21;
        }
        uint64_t result = sub_1ACE76F58();
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (sub_1ACE771A8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v8;
}

__n128 sub_1ACD32850(uint64_t a1, uint64_t a2)
{
  sub_1ACE77B18();
  int v4 = *(unsigned __int8 *)(a1 + 24);
  sub_1ACE76108();
  sub_1ACE77B38();
  if (v4 != 1) {
    sub_1ACE77B58();
  }
  sub_1ACA8F4F4(a1 + 32, (uint64_t)v10);
  sub_1ACA8F4F4((uint64_t)v10, (uint64_t)v11);
  if (v12 > 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
  }
  sub_1ACE77B78();
  unint64_t v5 = sub_1ACE77118();
  *(void *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  uint64_t v6 = *(void *)(a2 + 48) + 72 * v5;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 16);
  long long v8 = *(_OWORD *)(a1 + 32);
  long long v9 = *(_OWORD *)(a1 + 48);
  *(void *)(v6 + 64) = *(void *)(a1 + 64);
  *(_OWORD *)(v6 + 32) = v8;
  *(_OWORD *)(v6 + 48) = v9;
  *(__n128 *)(v6 + 16) = result;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1ACD32A08(uint64_t a1, uint64_t a2)
{
  sub_1ACE76F58();
  unint64_t result = sub_1ACE77118();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1ACD32A8C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1ACBEBF5C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1ACBEEC5C();
      goto LABEL_14;
    }
    sub_1ACBF0568(v8);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1ACE76F58();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1ACE76F68();

    if (v13)
    {
LABEL_13:
      sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1ACE76F68();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1ACD32C14(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1ACBEBF68();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1ACBEEC68();
      goto LABEL_22;
    }
    sub_1ACBF0574();
  }
  uint64_t v11 = *v4;
  sub_1ACE77B18();
  sub_1ACE76108();
  unint64_t result = sub_1ACE77B78();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    id v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1ACE77848(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1ACE77848();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1ACD32DB0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1ACBEC248();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1ACBEEE1C();
      goto LABEL_14;
    }
    sub_1ACBF0824();
  }
  uint64_t v8 = *v3;
  sub_1ACE77B18();
  sub_1ACE77B58();
  unint64_t result = sub_1ACE77B78();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1ACD32F00(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1ACBEC4F4();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1ACBEEFB4();
      goto LABEL_22;
    }
    sub_1ACBF0AA0();
  }
  uint64_t v11 = *v4;
  sub_1ACE77B18();
  sub_1ACE77B38();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
  }
  unint64_t result = sub_1ACE77B78();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v11 + 48);
    do
    {
      BOOL v16 = (void *)(v15 + 16 * a3);
      uint64_t v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          BOOL v18 = *v16 == v8 && v17 == a2;
          if (v18 || (unint64_t result = sub_1ACE77848(), (result & 1) != 0))
          {
LABEL_21:
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
            unint64_t result = sub_1ACE77A58();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_21;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_22:
  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v20 = (uint64_t *)(*(void *)(v19 + 48) + 16 * a3);
  uint64_t *v20 = v8;
  v20[1] = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_1ACD330B8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1ACBEC800();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1ACBEF164();
      goto LABEL_14;
    }
    sub_1ACBF0D78();
  }
  uint64_t v8 = *v3;
  unint64_t result = sub_1ACE77B08();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1ACD331DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1ACE75118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1ACBECA90();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1ACBEF2FC();
      goto LABEL_12;
    }
    sub_1ACBF0FDC();
  }
  uint64_t v12 = *v3;
  sub_1ACD35660((unint64_t *)&qword_1EB766C80);
  uint64_t v13 = sub_1ACE760E8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1ACD35660((unint64_t *)&unk_1E99F3ED0);
      char v21 = sub_1ACE76168();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1ACE77A58();
  __break(1u);
  return result;
}

uint64_t sub_1ACD33454(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v36 = result;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_45;
  }
  if (a3)
  {
    sub_1ACBECE50();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1ACBEF5A0();
      goto LABEL_45;
    }
    sub_1ACBF135C();
  }
  uint64_t v8 = *v3;
  sub_1ACE77B18();
  uint64_t v9 = *(void *)(v5 + 16);
  int v10 = *(unsigned __int8 *)(v5 + 24);
  uint64_t v40 = *(void *)(v5 + 8);
  uint64_t v41 = *(void *)v5;
  sub_1ACE76108();
  int v38 = v10;
  sub_1ACE77B38();
  if (v10 != 1) {
    sub_1ACE77B58();
  }
  sub_1ACA8F4F4(v5 + 32, (uint64_t)v44);
  sub_1ACA8F4F4((uint64_t)v44, (uint64_t)v54);
  if (v55 > 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
  }
  uint64_t result = sub_1ACE77B78();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v11;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v37 = v9;
    uint64_t v39 = ~v11;
    uint64_t v13 = *(void *)(v8 + 48);
    do
    {
      uint64_t v14 = v13 + 72 * a2;
      uint64_t result = *(void *)v14;
      uint64_t v15 = *(void *)(v14 + 16);
      char v16 = *(unsigned char *)(v14 + 24);
      uint64_t v17 = *(void *)(v14 + 32);
      uint64_t v18 = *(void *)(v14 + 40);
      uint64_t v19 = *(void *)(v14 + 48);
      uint64_t v20 = *(void *)(v14 + 56);
      uint64_t v21 = *(void *)(v14 + 64);
      if (*(void *)v14 != v41 || *(void *)(v14 + 8) != v40)
      {
        uint64_t result = sub_1ACE77848();
        if ((result & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v16)
      {
        if (!v38) {
          goto LABEL_16;
        }
      }
      else
      {
        char v23 = v38;
        if (v15 != v37) {
          char v23 = 1;
        }
        if (v23) {
          goto LABEL_16;
        }
      }
      if (v19)
      {
        if (v19 == 1)
        {
          uint64_t result = sub_1ACA8F4F4((uint64_t)v44, (uint64_t)v47);
          if (v48 == 1) {
            goto LABEL_44;
          }
        }
        else if (v19 == 2)
        {
          uint64_t result = sub_1ACA8F4F4((uint64_t)v44, (uint64_t)v42);
          if (v43 == 2) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t result = sub_1ACA8F4F4((uint64_t)v44, (uint64_t)v49);
          if (v51 >= 3 && ((v17 & 1) == 0) != v49[0])
          {
            int v24 = v52;
            uint64_t v25 = v53;
            BOOL v26 = v18 == v50 && v19 == v51;
            if (v26 || (uint64_t result = sub_1ACE77848(), (result & 1) != 0))
            {
              if (((v20 ^ v24) & 1) == 0 && v21 == v25)
              {
LABEL_44:
                uint64_t result = sub_1ACE77A58();
                __break(1u);
                break;
              }
            }
          }
        }
      }
      else
      {
        uint64_t result = sub_1ACA8F4F4((uint64_t)v44, (uint64_t)v45);
        if (!v46) {
          goto LABEL_44;
        }
      }
LABEL_16:
      a2 = (a2 + 1) & v39;
    }
    while (((*(void *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_45:
  uint64_t v27 = *v35;
  *(void *)(*v35 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v28 = *(void *)(v27 + 48) + 72 * a2;
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v36;
  long long v29 = *(_OWORD *)(v36 + 16);
  long long v30 = *(_OWORD *)(v36 + 32);
  long long v31 = *(_OWORD *)(v36 + 48);
  *(void *)(v28 + 64) = *(void *)(v36 + 64);
  *(_OWORD *)(v28 + 32) = v30;
  *(_OWORD *)(v28 + 48) = v31;
  *(_OWORD *)(v28 + 16) = v29;
  uint64_t v32 = *(void *)(v27 + 16);
  BOOL v33 = __OFADD__(v32, 1);
  uint64_t v34 = v32 + 1;
  if (v33) {
    __break(1u);
  }
  else {
    *(void *)(v27 + 16) = v34;
  }
  return result;
}

uint64_t sub_1ACD337F0(uint64_t result, __int16 a2, unint64_t a3, char a4)
{
  uint64_t v6 = result;
  char v7 = a2;
  uint64_t v8 = HIBYTE(a2);
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1ACBED050();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (uint64_t)sub_1ACBEF7C8();
        goto LABEL_32;
      }
      sub_1ACBF152C();
    }
    uint64_t v11 = *v4;
    sub_1ACE77B18();
    sub_1ACE77B38();
    if ((v7 & 1) == 0) {
      sub_1ACE77B58();
    }
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1ACE77B78();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v13 = ~v12;
      do
      {
        uint64_t v15 = *(void *)(v11 + 48) + 16 * a3;
        if (*(unsigned char *)(v15 + 8))
        {
          if (v7) {
            goto LABEL_19;
          }
        }
        else if ((v7 & 1) == 0 && *(void *)v15 == v6)
        {
LABEL_19:
          unint64_t v16 = 0xEB00000000737365;
          uint64_t v17 = 0x4C74736567677573;
          switch(*(unsigned char *)(v15 + 9))
          {
            case 1:
              unint64_t v16 = 0xE700000000000000;
              uint64_t v17 = 0x6C61727475656ELL;
              break;
            case 2:
              uint64_t v17 = 0x657469726F766166;
              unint64_t v16 = 0xE900000000000064;
              break;
            case 3:
              unint64_t v16 = 0xE700000000000000;
              uint64_t v17 = 0x6E776F6E6B6E75;
              break;
            default:
              break;
          }
          uint64_t v18 = 0x4C74736567677573;
          unint64_t v19 = 0xEB00000000737365;
          switch(v8)
          {
            case 1:
              unint64_t v19 = 0xE700000000000000;
              if (v17 == 0x6C61727475656ELL) {
                goto LABEL_28;
              }
              goto LABEL_12;
            case 2:
              uint64_t v18 = 0x657469726F766166;
              unint64_t v19 = 0xE900000000000064;
              goto LABEL_27;
            case 3:
              unint64_t v19 = 0xE700000000000000;
              if (v17 == 0x6E776F6E6B6E75) {
                goto LABEL_28;
              }
              goto LABEL_12;
            default:
LABEL_27:
              if (v17 != v18) {
                goto LABEL_12;
              }
LABEL_28:
              if (v16 == v19) {
                goto LABEL_35;
              }
LABEL_12:
              char v14 = sub_1ACE77848();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v14 & 1) == 0) {
                break;
              }
              goto LABEL_36;
          }
        }
        a3 = (a3 + 1) & v13;
      }
      while (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_32:
  uint64_t v20 = *v25;
  *(void *)(*v25 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = *(void *)(v20 + 48) + 16 * a3;
  *(void *)uint64_t v21 = v6;
  *(unsigned char *)(v21 + 8) = v7 & 1;
  *(unsigned char *)(v21 + 9) = v8;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_35:
    swift_bridgeObjectRelease_n();
LABEL_36:
    sub_1ACE77A58();
    __break(1u);
    JUMPOUT(0x1ACD33BA8);
  }
  *(void *)(v20 + 16) = v24;
  return result;
}

void sub_1ACD33BD8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1ACBED420(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1ACBEF978();
      goto LABEL_14;
    }
    sub_1ACBF18C4(v8);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1ACE76F58();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1ACE76F68();

    if (v13)
    {
LABEL_13:
      sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1ACE76F68();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1ACD33D60(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1ACBED42C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1ACBEF984();
        goto LABEL_28;
      }
      sub_1ACBF18D0();
    }
    uint64_t v8 = *v3;
    sub_1ACE77B18();
    sub_1ACE76108();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1ACE77B78();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xEC00000073747361;
        uint64_t v12 = 0x63646F5079616C70;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xEB00000000747361;
            break;
          case 2:
            uint64_t v12 = 0x7461745379616C70;
            unint64_t v11 = 0xEB000000006E6F69;
            break;
          case 3:
            uint64_t v12 = 0x6269726373627573;
            unint64_t v11 = 0xE900000000000065;
            break;
          case 4:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x6D65744979616C70;
            break;
          default:
            break;
        }
        uint64_t v13 = 0x63646F5079616C70;
        unint64_t v14 = 0xEC00000073747361;
        switch(v5)
        {
          case 1:
            unint64_t v14 = 0xEB00000000747361;
            if (v12 != 0x63646F5079616C70) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 2:
            uint64_t v13 = 0x7461745379616C70;
            unint64_t v14 = 0xEB000000006E6F69;
            goto LABEL_21;
          case 3:
            unint64_t v14 = 0xE900000000000065;
            if (v12 != 0x6269726373627573) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            unint64_t v14 = 0xE800000000000000;
            if (v12 != 0x6D65744979616C70) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v12 != v13) {
              goto LABEL_23;
            }
LABEL_22:
            if (v11 == v14) {
              goto LABEL_31;
            }
LABEL_23:
            char v15 = sub_1ACE77848();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_32;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_28:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    sub_1ACE77A58();
    __break(1u);
    JUMPOUT(0x1ACD340FCLL);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_1ACD34138(uint64_t result, unsigned __int8 a2, unint64_t a3, char a4)
{
  unint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1ACBED7A4();
    }
    else
    {
      if (v9 > v8)
      {
        uint64_t result = (uint64_t)sub_1ACBEF990();
        goto LABEL_24;
      }
      sub_1ACBF1C14();
    }
    uint64_t v10 = *v4;
    sub_1ACE77B18();
    sub_1ACE77B28();
    uint64_t result = sub_1ACE77B78();
    uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
    a3 = result & ~v11;
    if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v12 = ~v11;
      while (1)
      {
        uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
        if (*(unsigned char *)(v13 + 8) == 1)
        {
          switch(*(void *)v13)
          {
            case 1:
              if ((a2 & (v7 == 1)) != 0) {
                goto LABEL_23;
              }
              goto LABEL_11;
            case 2:
              if ((a2 & (v7 == 2)) != 0) {
                goto LABEL_23;
              }
              goto LABEL_11;
            case 3:
              if ((a2 & (v7 == 3)) != 0) {
                goto LABEL_23;
              }
              goto LABEL_11;
            case 4:
              if ((a2 & (v7 > 3)) != 0) {
                goto LABEL_23;
              }
              goto LABEL_11;
            default:
              if ((a2 & (v7 == 0)) != 0) {
                goto LABEL_23;
              }
              goto LABEL_11;
          }
        }
        if ((a2 & 1) == 0) {
          break;
        }
LABEL_11:
        a3 = (a3 + 1) & v12;
        if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          goto LABEL_24;
        }
      }
LABEL_23:
      uint64_t result = sub_1ACE77A58();
      __break(1u);
    }
  }
LABEL_24:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = *(void *)(v14 + 48) + 16 * a3;
  *(void *)uint64_t v15 = v7;
  *(unsigned char *)(v15 + 8) = a2 & 1;
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
    JUMPOUT(0x1ACD3432CLL);
  }
  *(void *)(v14 + 16) = v18;
  return result;
}

void sub_1ACD34340(void *a1, uint64_t a2, char a3, unint64_t a4, char a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a5 & 1) != 0) {
    goto LABEL_31;
  }
  if (a5)
  {
    sub_1ACBEDDD0();
  }
  else
  {
    if (v10 > v9)
    {
      sub_1ACBEFCF8();
      goto LABEL_31;
    }
    sub_1ACBF223C();
  }
  uint64_t v11 = *v5;
  sub_1ACE77B18();
  if (a3)
  {
    sub_1ACE77B28();
    if (a3 == 1)
    {
      id v12 = a1;
      sub_1ACE76F78();
      sub_1ACA50D28(a1, a2, 1);
    }
    else
    {
      sub_1ACE76108();
    }
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  uint64_t v13 = sub_1ACE77B78();
  uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
  a4 = v13 & ~v14;
  if ((*(void *)(v11 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v15 = ~v14;
    do
    {
      uint64_t v16 = *(void *)(v11 + 48) + 24 * a4;
      BOOL v17 = *(void **)v16;
      if (*(unsigned char *)(v16 + 16))
      {
        uint64_t v18 = *(void *)(v16 + 8);
        if (*(unsigned char *)(v16 + 16) == 1)
        {
          if (a3 == 1)
          {
            sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F68);
            sub_1ACA50CB8(a1, a2, 1);
            sub_1ACA50CB8(v17, v18, 1);
            char v19 = sub_1ACE76F68();
            sub_1ACA50D28(a1, a2, 1);
            sub_1ACA50D28(v17, v18, 1);
            if (v19) {
              goto LABEL_30;
            }
          }
        }
        else if (a3 == 2)
        {
          BOOL v20 = v17 == a1 && v18 == a2;
          if (v20 || (sub_1ACE77848() & 1) != 0)
          {
LABEL_30:
            sub_1ACE77A58();
            __break(1u);
            break;
          }
        }
      }
      else if (!a3 && v17 == a1)
      {
        goto LABEL_30;
      }
      a4 = (a4 + 1) & v15;
    }
    while (((*(void *)(v11 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_31:
  uint64_t v21 = *v26;
  *(void *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v22 = *(void *)(v21 + 48) + 24 * a4;
  *(void *)uint64_t v22 = a1;
  *(void *)(v22 + 8) = a2;
  *(unsigned char *)(v22 + 16) = a3;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v21 + 16) = v25;
  }
}

void sub_1ACD345F4(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1ACBEE134(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1ACBEFEB8();
      goto LABEL_14;
    }
    sub_1ACBF2574(v8);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1ACE76F58();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1ACA50D4C(0, &qword_1EB76E0F0);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1ACE76F68();

    if (v13)
    {
LABEL_13:
      sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1ACE76F68();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1ACD3477C(uint64_t result, unint64_t a2, char a3)
{
  int v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_1ACBEE3DC();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1ACBF0068();
      goto LABEL_13;
    }
    sub_1ACBF27F8();
  }
  uint64_t v9 = *v3;
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1ACE77B78();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    uint64_t v12 = *(void *)&aStdq_7[8 * v6];
    while (*(void *)&aStdq_7[8 * *(char *)(*(void *)(v9 + 48) + a2)] != v12)
    {
      char v13 = sub_1ACE77848();
      uint64_t result = swift_bridgeObjectRelease_n();
      if (v13) {
        goto LABEL_17;
      }
      a2 = (a2 + 1) & v11;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_13;
      }
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  swift_bridgeObjectRelease_n();
LABEL_17:
  uint64_t result = sub_1ACE77A58();
  __break(1u);
  return result;
}

uint64_t sub_1ACD34924(uint64_t result, unint64_t a2, char a3)
{
  int v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1ACBEE6B0();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1ACBF0200();
      goto LABEL_12;
    }
    sub_1ACBF2A98();
  }
  uint64_t v9 = *v3;
  uint64_t result = sub_1ACE771D8();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_1ACA6A09C(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = MEMORY[0x1AD1193A0](v19, v6);
      uint64_t result = sub_1ACA6A0F8((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1ACE77A58();
  __break(1u);
  return result;
}

uint64_t sub_1ACD34A90(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_14;
  }
  if (a4)
  {
    sub_1ACBEE97C();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_1ACBF03D0();
      goto LABEL_14;
    }
    sub_1ACBF2D2C();
  }
  uint64_t v10 = *v4;
  sub_1ACE77B18();
  sub_1ACE77D08();
  uint64_t result = sub_1ACE77B78();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t result = sub_1ACE77CF8();
    if (result)
    {
LABEL_13:
      uint64_t result = sub_1ACE77A58();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v11;
      while (1)
      {
        a3 = (a3 + 1) & v12;
        if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t result = sub_1ACE77CF8();
        if (result) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v14 = (uint64_t *)(*(void *)(v13 + 48) + 16 * a3);
  *uint64_t v14 = v7;
  v14[1] = a2;
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v17;
  }
  return result;
}

uint64_t sub_1ACD34C10(void *a1, void *a2, char a3, void *a4)
{
  uint64_t v5 = a1[2];
  if (!v5 || (uint64_t v39 = a2[2]) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = a2[5];
  uint64_t v40 = a2[4];
  uint64_t v10 = (void *)*a4;
  swift_bridgeObjectRetain();
  uint64_t v41 = v7;
  unint64_t v12 = sub_1ACA657FC(v7, v8);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    char v16 = v11;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v37 = v5 - 1;
    while (1)
    {
      if (v10[3] >= v15)
      {
        if ((a3 & 1) == 0) {
          sub_1ACD06660();
        }
      }
      else
      {
        sub_1ACCFD548(v15, a3 & 1);
        uint64_t v19 = sub_1ACA657FC(v41, v8);
        if ((v16 & 1) != (v20 & 1)) {
          goto LABEL_26;
        }
        unint64_t v12 = v19;
      }
      uint64_t v21 = (void *)*a4;
      if (v16)
      {
        uint64_t v22 = 16 * v12;
        uint64_t v23 = (uint64_t *)(v21[7] + 16 * v12);
        uint64_t v25 = *v23;
        uint64_t v24 = v23[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v26 = (void *)(v21[7] + v22);
        swift_bridgeObjectRelease();
        *BOOL v26 = v25;
        v26[1] = v24;
      }
      else
      {
        v21[(v12 >> 6) + 8] |= 1 << v12;
        uint64_t v27 = (uint64_t *)(v21[6] + 16 * v12);
        *uint64_t v27 = v41;
        v27[1] = v8;
        uint64_t v28 = (void *)(v21[7] + 16 * v12);
        *uint64_t v28 = v40;
        v28[1] = v9;
        uint64_t v29 = v21[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_25;
        }
        v21[2] = v31;
      }
      if (v37 == v18) {
        break;
      }
      if ((unint64_t)(v18 + 1) >= a1[2]) {
        goto LABEL_24;
      }
      if (v39 == ++v18) {
        break;
      }
      uint64_t v32 = a1[v17 + 6];
      uint64_t v8 = a1[v17 + 7];
      swift_bridgeObjectRetain();
      uint64_t v9 = a2[v17 + 7];
      uint64_t v40 = a2[v17 + 6];
      uint64_t v10 = (void *)*a4;
      swift_bridgeObjectRetain();
      uint64_t v41 = v32;
      unint64_t v12 = sub_1ACA657FC(v32, v8);
      char v16 = v33;
      uint64_t v34 = v10[2];
      BOOL v35 = (v33 & 1) == 0;
      a3 = 1;
      v17 += 2;
      uint64_t v15 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1ACE77A68();
  __break(1u);
  return result;
}

uint64_t sub_1ACD34EC4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v38 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v11++, 1)) {
      break;
    }
    if (v11 >= v38) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v38) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_15;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v38) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_15;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v38) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_15:
        int64_t v11 = v16;
      }
      else
      {
        int64_t v25 = v11 + 4;
        if (v11 + 4 >= v38)
        {
LABEL_31:
          swift_release();
          return (uint64_t)v32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v25);
        for (v11 += 4; !v15; ++v25)
        {
          int64_t v11 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_34;
          }
          if (v11 >= v38) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v11);
        }
      }
    }
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_17:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v33, v18, v19, v20);
    if (v3)
    {
      BOOL v26 = v32;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v26;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((void)v34)
    {
      long long v31 = v34;
      uint64_t v29 = v35;
      long long v30 = v36;
      uint64_t v27 = v33;
      uint64_t v28 = v37;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1ACA43E08(0, v32[2] + 1, 1, v32);
        uint64_t v32 = (void *)result;
      }
      unint64_t v22 = v32[2];
      unint64_t v21 = v32[3];
      long long v23 = v31;
      if (v22 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_1ACA43E08((void *)(v21 > 1), v22 + 1, 1, v32);
        long long v23 = v31;
        uint64_t v32 = (void *)result;
      }
      v32[2] = v22 + 1;
      uint64_t v24 = &v32[7 * v22];
      v24[4] = v27;
      *(_OWORD *)(v24 + 5) = v23;
      v24[7] = v29;
      *((_OWORD *)v24 + 4) = v30;
      v24[10] = v28;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1ACD35198(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return v5;
    }
    uint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC83408(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v7 = 0;
    uint64_t v5 = v25;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1AD119490](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      unint64_t v9 = v8;
      sub_1ACD2AB8C(v8, &v21);
      if (v2)
      {
        swift_release();

        return v5;
      }
      uint64_t v10 = v4;

      uint64_t v11 = v21;
      long long v12 = v22;
      uint64_t v13 = v23;
      long long v14 = v24;
      uint64_t v25 = v5;
      unint64_t v16 = *(void *)(v5 + 16);
      unint64_t v15 = *(void *)(v5 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v19 = v24;
        long long v20 = v22;
        sub_1ACC83408(v15 > 1, v16 + 1, 1);
        long long v14 = v19;
        long long v12 = v20;
        uint64_t v5 = v25;
      }
      *(void *)(v5 + 16) = v16 + 1;
      uint64_t v17 = v5 + 48 * v16;
      *(void *)(v17 + 32) = v11;
      ++v7;
      *(_OWORD *)(v17 + 40) = v12;
      *(void *)(v17 + 56) = v13;
      *(_OWORD *)(v17 + 64) = v14;
      uint64_t v4 = v10;
      BOOL v18 = v10 == v7;
      uint64_t v2 = 0;
      if (v18) {
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACD35378@<X0>(unint64_t *a1@<X8>)
{
  return sub_1ACD2B78C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void *@<X8>))(v1 + 40), *(void (**)(void *@<X8>))(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 64), a1);
}

double sub_1ACD35390@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1ACD2AED0(a1, a2, a3, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned char *)(v4 + 40), *(void **)(v4 + 48), a4);
}

uint64_t sub_1ACD353B8(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1ACC83340(0, v2, 0);
    uint64_t v3 = v14;
    uint64_t v6 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_1ACE76178();
      id v8 = objc_msgSend(a2, sel_valueForKey_, v7);

      if (v8)
      {
        sub_1ACE770C8();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v12, 0, sizeof(v12));
      }
      sub_1ACA50E14((uint64_t)v12, (uint64_t)v13, qword_1EB7725E0);
      swift_bridgeObjectRelease();
      uint64_t v14 = v3;
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1ACC83340(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v14;
      }
      v6 += 16;
      *(void *)(v3 + 16) = v10 + 1;
      sub_1ACA50E14((uint64_t)v13, v3 + 32 * v10 + 32, qword_1EB7725E0);
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1ACD35520(void *a1, void *a2)
{
  if (a2[2] >= a1[2]) {
    uint64_t v4 = a1[2];
  }
  else {
    uint64_t v4 = a2[2];
  }
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5330);
    uint64_t v5 = sub_1ACE77558();
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1ACD34C10(a1, a2, 1, &v7);
  return v7;
}

uint64_t sub_1ACD355CC()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD355E0()
{
  return swift_deallocObject();
}

void sub_1ACD355F0(uint64_t *a1@<X8>)
{
}

uint64_t sub_1ACD355F8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD35608()
{
  uint64_t v1 = *(void **)(v0 + 16);
  (*(void (**)(uint64_t *__return_ptr))(v0 + 24))(&v4);
  uint64_t v2 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  return result;
}

uint64_t sub_1ACD35650()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD35660(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1ACE75118();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NSUserDefaults.lastExecution(of:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)&v9[0] = 0;
  *((void *)&v9[0] + 1) = 0xE000000000000000;
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE762C8();
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_objectForKey_, v3, v9[0]);

  if (v4)
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1ACA9D6FC((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    uint64_t v5 = sub_1ACE750A8();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_1ACA65828((uint64_t)v10);
    uint64_t v8 = sub_1ACE750A8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

id sub_1ACD3585C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE761B8();
  id v5 = a1;
  NSUserDefaults.lastExecution(of:)((uint64_t)v4);

  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    uint64_t v8 = (void *)sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return v8;
}

void NSUserDefaults.recordExecution(of:at:)()
{
  uint64_t v1 = (void *)sub_1ACE75008();
  sub_1ACE77268();
  sub_1ACE762C8();
  sub_1ACE762C8();
  id v2 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
}

uint64_t sub_1ACD35A88(void *a1)
{
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE761B8();
  sub_1ACE75078();
  id v6 = a1;
  NSUserDefaults.recordExecution(of:at:)();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1ACD35BA0()
{
  switch(*(void *)(v0 + OBJC_IVAR___MTContentKeyRequest_requestType))
  {
    case 0:
      int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
      id v2 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v3 = &selRef_podcastsLicenseStreamingStart;
      uint64_t v4 = &selRef_podcastsLicenseOfflineStart;
      goto LABEL_6;
    case 1:
      int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
      id v2 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v3 = &selRef_podcastsLicenseStreamingRenew;
      uint64_t v4 = &selRef_podcastsLicenseOfflineRenew;
      goto LABEL_6;
    case 2:
      int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___MTContentKeyRequest_offlineRequest);
      id v2 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v3 = &selRef_podcastsLicenseStreamingStop;
      uint64_t v4 = &selRef_podcastsLicenseOfflineStop;
LABEL_6:
      if (v1) {
        uint64_t v3 = v4;
      }
      break;
    case 3:
      id v2 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v3 = &selRef_podcastsLicenseOfflineStopNonce;
      break;
    default:
      sub_1ACE77A18();
      __break(1u);
      JUMPOUT(0x1ACD35D4CLL);
  }
  id v5 = [v2 *v3];

  return v5;
}

uint64_t Data.inMemorySize.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      BOOL v4 = __OFSUB__(HIDWORD(a1), a1);
      int v5 = HIDWORD(a1) - a1;
      if (v4)
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        sub_1ACE77488();
        __break(1u);
        JUMPOUT(0x1ACD35E20);
      }
      uint64_t result = v5;
LABEL_6:
      if (result < 0) {
        goto LABEL_10;
      }
      return result;
    case 2uLL:
      uint64_t v8 = a1 + 16;
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(v8 + 8);
      uint64_t result = v7 - v6;
      if (!__OFSUB__(v7, v6)) {
        goto LABEL_6;
      }
      goto LABEL_9;
    case 3uLL:
      return result;
    default:
      return BYTE6(a2);
  }
}

uint64_t String.inMemorySize.getter(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACA5780C(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(void *)(v4 + 8 * v7 + 32);
      BOOL v10 = __OFADD__(v8, v9);
      v8 += v9;
      if (v10)
      {
        __break(1u);
        return result;
      }
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    if ((v8 & 0x8000000000000000) == 0) {
      return v8;
    }
    sub_1ACE77488();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1ACD35F20()
{
  return String.inMemorySize.getter(*v0, v0[1]);
}

uint64_t sub_1ACD35F28()
{
  return Data.inMemorySize.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t Double.inMemorySize.getter()
{
  return 8;
}

uint64_t sub_1ACD35F38()
{
  return 8;
}

uint64_t Float.inMemorySize.getter()
{
  return 4;
}

uint64_t sub_1ACD35F48()
{
  return 4;
}

uint64_t Array<A>.inMemorySize.getter()
{
  sub_1ACE76688();
  swift_getWitnessTable();
  sub_1ACE76428();
  return v1;
}

uint64_t sub_1ACD35FEC(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v1 + 24) + 8))(*(void *)(v1 + 16), *(void *)(v1 + 24));
  if (__CFADD__(*a1, result)) {
    __break(1u);
  }
  else {
    *a1 += result;
  }
  return result;
}

uint64_t sub_1ACD36050()
{
  return Array<A>.inMemorySize.getter();
}

uint64_t Dictionary<>.inMemorySize.getter()
{
  sub_1ACE76088();
  swift_getWitnessTable();
  sub_1ACE76428();
  return v1;
}

uint64_t sub_1ACD36108(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getTupleTypeMetadata2();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  if (__CFADD__(*a1, result)) {
    __break(1u);
  }
  else {
    *a1 += result;
  }
  return result;
}

uint64_t sub_1ACD361A0(void *a1, uint64_t a2)
{
  return sub_1ACD36108(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1ACD361C0()
{
  return Dictionary<>.inMemorySize.getter();
}

uint64_t sub_1ACD361D8(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75F88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD36F38((unint64_t *)&unk_1EB772FC8, MEMORY[0x1E4F25200]);
  uint64_t v6 = sub_1ACE763A8();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACC82D44(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_1ACE76398();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_1ACE843F0;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v13 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_1ACE761F8();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_1ACE843F0;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v23 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_1ACE761F8();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_1ACC82D44(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t URL.hasiPodLibraryScheme.getter()
{
  uint64_t v0 = sub_1ACE74EE8();
  if (v1)
  {
    if (v0 == 0x62696C2D646F7069 && v1 == 0xEC00000079726172) {
      char v2 = 1;
    }
    else {
      char v2 = sub_1ACE77848();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t URL.contained(within:)()
{
  sub_1ACE74EC8();
  sub_1ACE74EC8();
  char v0 = sub_1ACE76348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

Swift::String_optional __swiftcall URL.md5()()
{
  v25[4] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1ACE75F78();
  uint64_t v24 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE75F88();
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x1F4188790](v3);
  int v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE76218();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74EC8();
  sub_1ACE76208();
  uint64_t v10 = sub_1ACE761C8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (v12 >> 60 != 15)
  {
    sub_1ACD36F38(&qword_1EB772FC0, MEMORY[0x1E4F251D8]);
    sub_1ACE75F48();
    switch(v12 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10) {
          __break(1u);
        }
        sub_1ACA3985C(v10, v12);
        sub_1ACB4368C((int)v10, v10 >> 32);
        goto LABEL_7;
      case 2uLL:
        uint64_t v15 = *(void *)(v10 + 16);
        uint64_t v16 = *(void *)(v10 + 24);
        sub_1ACA39848(v10, v12);
        swift_retain();
        swift_retain();
        sub_1ACB4368C(v15, v16);
        swift_release();
        swift_release();
LABEL_7:
        sub_1ACAB2EF0(v10, v12);
        goto LABEL_10;
      case 3uLL:
        memset(v25, 0, 14);
        goto LABEL_9;
      default:
        v25[0] = v10;
        LOWORD(v25[1]) = v12;
        BYTE2(v25[1]) = BYTE2(v12);
        BYTE3(v25[1]) = BYTE3(v12);
        BYTE4(v25[1]) = BYTE4(v12);
        BYTE5(v25[1]) = BYTE5(v12);
LABEL_9:
        sub_1ACE75F28();
        sub_1ACAB2EF0(v10, v12);
LABEL_10:
        sub_1ACE75F38();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v2, v0);
        uint64_t v17 = sub_1ACD361D8((uint64_t)v5);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
        v25[0] = v17;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
        sub_1ACA8B0C0();
        uint64_t v13 = sub_1ACE76138();
        uint64_t v14 = v18;
        sub_1ACAB2EF0(v10, v12);
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v19 = v13;
  uint64_t v20 = v14;
  result.value._object = v20;
  result.value._countAndFlagsBits = v19;
  return result;
}

Swift::Int64_optional __swiftcall URL.volumeAvailableCapacityForOpportunisticUsage()()
{
  Swift::Int64 v0 = sub_1ACD36B8C(MEMORY[0x1E4F1C808], MEMORY[0x1E4F273F8]);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

Swift::Int_optional __swiftcall URL.volumeAvailableCapacity()()
{
  Swift::Int v0 = sub_1ACD36B8C(MEMORY[0x1E4F1C810], MEMORY[0x1E4F273F0]);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

Swift::Int_optional __swiftcall URL.volumeTotalCapacity()()
{
  Swift::Int v0 = sub_1ACD36B8C(MEMORY[0x1E4F1C948], MEMORY[0x1E4F273E8]);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_1ACD36B8C(void **a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = sub_1ACE74C88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_1ACE74E68();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  *(void *)(inited + 32) = v8;
  id v10 = v8;
  sub_1ACA6CDF4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1ACE74DE8();
  uint64_t v11 = swift_bridgeObjectRelease();
  uint64_t v12 = a2(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

Swift::Bool __swiftcall URL.isVolumeAvailableCapacityForOpportunisticUsageAbove(threshold:)(Swift::Int64_optional threshold)
{
  return sub_1ACD36EEC(threshold.value, threshold.is_nil, (uint64_t (*)(void))URL.volumeAvailableCapacityForOpportunisticUsage());
}

Swift::Bool __swiftcall URL.isVolumeAvailableCapacityAbove(threshold:)(Swift::Int64_optional threshold)
{
  return sub_1ACD36EEC(threshold.value, threshold.is_nil, (uint64_t (*)(void))URL.volumeAvailableCapacity());
}

uint64_t sub_1ACD36EEC(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  if (a2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a1;
  }
  return v6 & 1 | (v7 < v5);
}

uint64_t sub_1ACD36F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall TraceInterval.end()()
{
  (*(void (**)(void, void))(v0 + 8))(0, 0);
}

uint64_t dispatch thunk of TraceInterval.end(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of Trace.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Trace.emit(event:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of Trace.start(interval:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

BOOL MTEpisode.bookmarksSyncType.getter()
{
  id v1 = objc_msgSend(v0, sel_priceType);
  if (v1)
  {
    char v2 = v1;
    sub_1ACE761B8();
  }
  uint64_t v3 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  uint64_t v4 = MTEpisodePriceTypeFromPersistentString(v3);

  return (unint64_t)(v4 - 2) < 3;
}

uint64_t sub_1ACD37124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = v1 + qword_1EB767C08;
  swift_beginAccess();
  sub_1ACA3AAD4(v9, (uint64_t)v8, &qword_1EB7726E8);
  uint64_t v10 = sub_1ACE753F8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1ACA50E78((uint64_t)v8, &qword_1EB7726E8);
  if (qword_1EB768FB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_1EB768FA8;
  swift_retain();
  sub_1ACE753B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1ACABEA08((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1ACD37368(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = a4 & 1;
  uint64_t v8 = sub_1ACE753F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 24);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1ACA72530(a2, a3, v7);
    unint64_t v13 = sub_1ACA664F4(a2, a3, v7);
    if (v14)
    {
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1ACA91B68(a2, a3, v7);
      return v15;
    }
    swift_bridgeObjectRelease();
    sub_1ACA91B68(a2, a3, v7);
  }
  uint64_t v51 = v9;
  uint64_t v52 = a2;
  uint64_t v49 = v8;
  uint64_t v46 = a1 + 24;
  LODWORD(v50) = sub_1ACE76E18();
  if (qword_1EB768FB0 != -1) {
    goto LABEL_21;
  }
LABEL_6:
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + qword_1EB767C00);
  uint64_t v17 = *(void *)(a1 + qword_1EB767C00 + 8);
  int v18 = *(unsigned __int8 *)(a1 + qword_1EB767C00 + 16);
  id v19 = (id)qword_1EB768FA8;
  sub_1ACD37124((uint64_t)v11);
  uint64_t v44 = v17;
  uint64_t v45 = v16;
  int v43 = v18;
  sub_1ACE753A8();

  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v51 += 8;
  uint64_t v42 = v20;
  v20((uint64_t)v11, v49);
  uint64_t v47 = v11;
  uint64_t v48 = a1;
  unint64_t v21 = *(void *)(a1 + 16);
  if (!(v21 >> 62))
  {
    a1 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!a1) {
      goto LABEL_16;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  a1 = sub_1ACE77508();
  if (a1)
  {
LABEL_8:
    uint64_t v11 = (char *)(v21 & 0xC000000000000001);
    uint64_t v22 = 4;
    do
    {
      uint64_t v23 = v22 - 4;
      if (v11)
      {
        uint64_t v24 = MEMORY[0x1AD119490](v22 - 4, v21);
        uint64_t v25 = v22 - 3;
        if (__OFADD__(v23, 1)) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v24 = *(void *)(v21 + 8 * v22);
        swift_retain();
        uint64_t v25 = v22 - 3;
        if (__OFADD__(v23, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_once();
          goto LABEL_6;
        }
      }
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v24 + 64))(v53, v52, a3, v7);
      swift_release();
      unsigned int v26 = v54;
      if (v54 <= 0xFDu)
      {
        uint64_t v50 = v53[1];
        uint64_t v39 = v53[0];
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      ++v22;
    }
    while (v25 != a1);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v39 = 0;
  uint64_t v50 = 0;
  unsigned int v26 = 192;
LABEL_18:
  char v27 = v7;
  int v40 = v7;
  BOOL v41 = v7 != 0;
  uint64_t v28 = v48;
  uint64_t v29 = *(void *)(v48 + 32);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB767660);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 64) = MEMORY[0x1E4FBC860];
  id v30 = objc_allocWithZone(MEMORY[0x1E4F28FD0]);
  uint64_t v31 = v52;
  sub_1ACA72530(v52, a3, v27);
  uint64_t v32 = v39;
  uint64_t v33 = v50;
  sub_1ACB7BB40(v39, v50, v26);
  swift_bridgeObjectRetain();
  id v34 = objc_msgSend(v30, sel_init);
  *(void *)(v15 + 16) = v31;
  *(void *)(v15 + 24) = a3;
  *(unsigned char *)(v15 + 32) = v41;
  *(void *)(v15 + 40) = v32;
  *(void *)(v15 + 48) = v33;
  *(unsigned char *)(v15 + 56) = v26;
  *(void *)(v15 + 72) = v29;
  *(void *)(v15 + 80) = v34;
  swift_beginAccess();
  LOBYTE(v30) = v40;
  sub_1ACA72530(v31, a3, v40);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = *(void *)(v28 + 24);
  *(void *)(v28 + 24) = 0x8000000000000000;
  sub_1ACD0EF08(v15, v31, a3, (char)v30, isUniquelyReferenced_nonNull_native);
  *(void *)(v28 + 24) = v55;
  swift_bridgeObjectRelease();
  sub_1ACA91B68(v31, a3, (char)v30);
  swift_endAccess();
  sub_1ACE76E08();
  id v36 = (id)qword_1EB768FA8;
  uint64_t v37 = (uint64_t)v47;
  sub_1ACD37124((uint64_t)v47);
  sub_1ACE753A8();

  v42(v37, v49);
  sub_1ACB7BB6C(v32, v50, v26);
  return v15;
}

uint64_t sub_1ACD37888(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation26ModernEpisodeDownloadStateO2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t ModernEpisodeDownloadStateMachine.currentState.getter()
{
  return swift_retain();
}

uint64_t sub_1ACD378AC(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(a1 + 80);
  swift_retain();
  objc_msgSend(v4, sel_lock);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unsigned int v7 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v8 = *(void **)(a1 + 80);
  sub_1ACB7BB40(v5, v6, v7);
  objc_msgSend(v8, sel_unlock);
  switch(v7 >> 6)
  {
    case 1u:
    case 2u:
    case 3u:
      break;
    default:
      sub_1ACB7BB6C(v5, v6, v7);
      break;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768DC0);
  swift_allocObject();
  *(void *)(v2 + 24) = sub_1ACE75938();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = *(void **)(a1 + 80);
  swift_retain();
  objc_msgSend(v10, sel_lock);
  sub_1ACD37DC8(v2, (uint64_t)sub_1ACD381B4, v9, a1);
  objc_msgSend(*(id *)(a1 + 80), sel_unlock);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1ACD37AA8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    objc_msgSend(*(id *)(a1 + 80), sel_lock);
    swift_beginAccess();
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    unsigned int v5 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v6 = *(void **)(a1 + 80);
    sub_1ACB7BB40(v3, v4, v5);
    objc_msgSend(v6, sel_unlock);
    char v7 = 2;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    switch(v5 >> 6)
    {
      case 1u:
        char v7 = 0;
        uint64_t v9 = v4 & 1;
        uint64_t v8 = v3;
        break;
      case 2u:
        char v7 = 1;
        uint64_t v8 = v3;
        uint64_t v9 = v4;
        break;
      case 3u:
        break;
      default:
        sub_1ACB7BB6C(v3, v4, v5);
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        break;
    }
    sub_1ACE758E8();
    swift_release();
    return sub_1ACD38020(v8, v9, v7);
  }
  return result;
}

uint64_t ModernEpisodeDownloadStateMachine.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ModernEpisodeDownloadStateMachine.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB767660);
  sub_1ACE76D08();
  type metadata accessor for ModernEpisodeDownloadStateMachine();
  uint64_t v0 = swift_allocObject();
  sub_1ACD378AC(v2);
  return v0;
}

{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EB767660);
  sub_1ACE76D08();
  type metadata accessor for ModernEpisodeDownloadStateMachine();
  uint64_t v0 = swift_allocObject();
  sub_1ACD378AC(v2);
  return v0;
}

uint64_t sub_1ACD37DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_unknownObjectWeakInit();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  sub_1ACA3AAD4((uint64_t)v14, (uint64_t)v13, qword_1EB7686C0);
  char v7 = (void *)(a4 + 64);
  swift_beginAccess();
  uint64_t v8 = *(void **)(a4 + 64);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a4 + 64) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1ACA43F54(0, v8[2] + 1, 1, (unint64_t)v8);
    *char v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_1ACA43F54((void *)(v10 > 1), v11 + 1, 1, (unint64_t)v8);
    *char v7 = v8;
  }
  v8[2] = v11 + 1;
  sub_1ACD381BC((uint64_t)v13, (uint64_t)&v8[3 * v11 + 4]);
  swift_endAccess();
  return sub_1ACA50E78((uint64_t)v14, qword_1EB7686C0);
}

uint64_t _s18PodcastsFoundation26ModernEpisodeDownloadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        if (a1 != a4 || a2 != a5) {
          return sub_1ACE77848();
        }
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6) {
    return 0;
  }
  char v7 = ((a2 & 1) == 0) ^ a5;
  if (*(double *)&a1 != *(double *)&a4) {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1ACD37F80@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACD37FBC(a1);
}

uint64_t type metadata accessor for ModernEpisodeDownloadStateMachine()
{
  return self;
}

uint64_t sub_1ACD37FBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1ACD37368(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1ACD37FF8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ModernEpisodeDownloadState(uint64_t a1)
{
  return sub_1ACD38020(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1ACD38020(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s18PodcastsFoundation26ModernEpisodeDownloadStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1ACD37FF8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModernEpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1ACD37FF8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1ACD38020(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ModernEpisodeDownloadState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1ACD38020(v4, v5, v6);
  return a1;
}

uint64_t sub_1ACD38124(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1ACD3813C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModernEpisodeDownloadState()
{
  return &type metadata for ModernEpisodeDownloadState;
}

uint64_t method lookup function for ModernEpisodeDownloadStateMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModernEpisodeDownloadStateMachine);
}

uint64_t sub_1ACD3817C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACD381B4(uint64_t a1)
{
  return sub_1ACD37AA8(a1);
}

uint64_t sub_1ACD381BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB7686C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACD38224@<X0>(id a1@<X0>, void *a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  char v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v8 = (uint64_t *)((char *)&v107 - v7);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v107 - v13;
  id v15 = objc_msgSend(a1, sel_url);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_1ACE761B8();

    sub_1ACE74EF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  }
  id v18 = objc_msgSend(a1, sel_interest);
  id v19 = &off_1E5E65000;
  if (v18)
  {
    uint64_t v20 = v18;
    id v21 = objc_msgSend(v18, sel_adamID);
    objc_msgSend(v20, sel_interestValue);
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v20, sel_lastUpdatedDate);
    uint64_t v25 = type metadata accessor for InterestModel();
    sub_1ACE75078();

    *char v8 = v21;
    v8[1] = v23;
    unsigned int v26 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v27 = v25;
    id v19 = &off_1E5E65000;
    v26(v8, 0, 1, v27);
  }
  else
  {
    uint64_t v28 = type metadata accessor for InterestModel();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 1, 1, v28);
  }
  id v119 = [a1 (SEL)v19[508]];
  id v29 = objc_msgSend(a1, sel_name);
  uint64_t v118 = sub_1ACE761B8();
  uint64_t v117 = v30;

  sub_1ACA3AAD4((uint64_t)v14, (uint64_t)v12, &qword_1EB7731B0);
  id v31 = objc_msgSend(a1, sel_color);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v116 = sub_1ACE761B8();
    uint64_t v115 = v33;
  }
  else
  {
    uint64_t v116 = 0;
    uint64_t v115 = 0;
  }
  sub_1ACA3AAD4((uint64_t)v8, (uint64_t)v6, &qword_1E99F5338);
  id v34 = objc_msgSend(a1, sel_podcasts);
  sub_1ACB3E8C8();
  sub_1ACD3AE84((unint64_t *)&qword_1E99F22C8, (void (*)(uint64_t))sub_1ACB3E8C8);
  uint64_t v35 = sub_1ACE76988();

  int64_t v122 = v12;
  int64_t v123 = v6;
  id v125 = a1;
  uint64_t v120 = v14;
  unint64_t v121 = v8;
  if ((v35 & 0xC000000000000001) != 0)
  {
    id v36 = (unint64_t *)MEMORY[0x1E4FBC870];
    int64_t v129 = (unint64_t *)MEMORY[0x1E4FBC870];
    sub_1ACE77138();
    uint64_t v37 = sub_1ACE771A8();
    if (v37)
    {
      do
      {
        uint64_t v133 = v37;
        swift_dynamicCast();
        unsigned __int8 v38 = objc_msgSend(v130, sel_subscribed);
        id v39 = v130;
        if (v38)
        {
          int v40 = v129;
          unint64_t v41 = v129[2];
          if (v129[3] <= v41)
          {
            sub_1ACBED044(v41 + 1);
            int v40 = v129;
          }
          uint64_t result = sub_1ACE76F58();
          int v43 = v40 + 7;
          uint64_t v44 = -1 << *((unsigned char *)v40 + 32);
          unint64_t v45 = result & ~v44;
          unint64_t v46 = v45 >> 6;
          if (((-1 << v45) & ~v40[(v45 >> 6) + 7]) != 0)
          {
            unint64_t v47 = __clz(__rbit64((-1 << v45) & ~v40[(v45 >> 6) + 7])) | v45 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v48 = 0;
            unint64_t v49 = (unint64_t)(63 - v44) >> 6;
            do
            {
              if (++v46 == v49 && (v48 & 1) != 0)
              {
                __break(1u);
                __break(1u);
                goto LABEL_70;
              }
              BOOL v50 = v46 == v49;
              if (v46 == v49) {
                unint64_t v46 = 0;
              }
              v48 |= v50;
              unint64_t v51 = v43[v46];
            }
            while (v51 == -1);
            unint64_t v47 = __clz(__rbit64(~v51)) + (v46 << 6);
          }
          *(unint64_t *)((char *)v43 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
          *(void *)(v40[6] + 8 * v47) = v39;
          ++v40[2];
        }
        else
        {
        }
        uint64_t v37 = sub_1ACE771A8();
      }
      while (v37);
      id v36 = v129;
      a1 = v125;
    }
    swift_release();
    id v19 = &off_1E5E65000;
    if (((unint64_t)v36 & 0xC000000000000001) != 0) {
      goto LABEL_33;
    }
LABEL_30:
    uint64_t v113 = v36[2];
    goto LABEL_34;
  }
  id v36 = sub_1ACD392BC(v35);
  if (((unint64_t)v36 & 0xC000000000000001) == 0) {
    goto LABEL_30;
  }
LABEL_33:
  uint64_t v113 = sub_1ACE77178();
LABEL_34:
  swift_release();
  id v52 = objc_msgSend(a1, sel_artworkPrimaryColor);
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v112 = sub_1ACE761B8();
    uint64_t v111 = v54;
  }
  else
  {
    uint64_t v112 = 0;
    uint64_t v111 = 0;
  }
  id v55 = objc_msgSend(a1, sel_artworkTemplateURL);
  if (v55)
  {
    id v56 = v55;
    uint64_t v110 = sub_1ACE761B8();
    uint64_t v109 = v57;
  }
  else
  {
    uint64_t v110 = 0;
    uint64_t v109 = 0;
  }
  id v58 = objc_msgSend(a1, sel_artworkHeightNumber);
  uint64_t v59 = v58;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  if (v58)
  {
    objc_msgSend(v58, sel_doubleValue);
    uint64_t v61 = v62;
  }
  id v63 = objc_msgSend(a1, sel_artworkWidthNumber);
  unint64_t v64 = v63;
  if (v63)
  {
    objc_msgSend(v63, sel_doubleValue);
    uint64_t v60 = v65;
  }
  id v66 = objc_msgSend(a1, sel_parent);
  id v114 = v66;
  if (v66)
  {
    uint64_t v67 = v66;
    id v108 = [v66 (SEL)v19[508]];
  }
  else
  {
    id v108 = 0;
  }
  id v68 = objc_msgSend(a1, sel_children);
  type metadata accessor for MTCategory();
  sub_1ACD3AE84(&qword_1E99F22D0, (void (*)(uint64_t))type metadata accessor for MTCategory);
  uint64_t v69 = sub_1ACE76988();

  unint64_t v128 = v69 & 0xC000000000000001;
  if ((v69 & 0xC000000000000001) != 0)
  {
    uint64_t v70 = sub_1ACE77178();
    if (v70) {
      goto LABEL_49;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    uint64_t v73 = MEMORY[0x1E4FBC860];
LABEL_69:
    BOOL v93 = v114 == 0;
    uint64_t v94 = sub_1ACDF7368(v73);

    swift_bridgeObjectRelease();
    sub_1ACA50E78((uint64_t)v121, &qword_1E99F5338);
    sub_1ACA50E78((uint64_t)v120, &qword_1EB7731B0);
    uint64_t v95 = v124;
    uint64_t v96 = v118;
    void *v124 = v119;
    v95[1] = v96;
    v95[2] = v117;
    id v97 = (int *)type metadata accessor for CategoryModel();
    sub_1ACA50E14((uint64_t)v122, (uint64_t)v95 + v97[6], &qword_1EB7731B0);
    uint64_t v98 = (void *)((char *)v95 + v97[7]);
    uint64_t v99 = v115;
    *uint64_t v98 = v116;
    v98[1] = v99;
    uint64_t result = sub_1ACA50E14((uint64_t)v123, (uint64_t)v95 + v97[8], &qword_1E99F5338);
    *(void *)((char *)v95 + v97[9]) = v113;
    uint64_t v100 = (void *)((char *)v95 + v97[10]);
    uint64_t v101 = v111;
    uint64_t *v100 = v112;
    v100[1] = v101;
    uint64_t v102 = (void *)((char *)v95 + v97[11]);
    uint64_t v103 = v109;
    uint64_t *v102 = v110;
    v102[1] = v103;
    uint64_t v104 = (char *)v95 + v97[12];
    *(void *)uint64_t v104 = v61;
    v104[8] = v59 == 0;
    uint64_t v105 = (char *)v95 + v97[13];
    *(void *)uint64_t v105 = v60;
    v105[8] = v64 == 0;
    uint64_t v106 = (char *)v95 + v97[14];
    *(void *)uint64_t v106 = v108;
    v106[8] = v93;
    *(void *)((char *)v95 + v97[15]) = v94;
    return result;
  }
  uint64_t v70 = *(void *)(v69 + 16);
  if (!v70) {
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v133 = MEMORY[0x1E4FBC860];
  sub_1ACC82F78(0, v70 & ~(v70 >> 63), 0);
  if (v128)
  {
    uint64_t result = sub_1ACE77128();
    unsigned __int8 v72 = 1;
  }
  else
  {
    uint64_t result = sub_1ACDC4144(v69);
    unsigned __int8 v72 = v74 & 1;
  }
  id v130 = (id)result;
  uint64_t v131 = v71;
  unsigned __int8 v132 = v72;
  if ((v70 & 0x8000000000000000) == 0)
  {
    uint64_t v75 = v69 & 0xFFFFFFFFFFFFFF8;
    if (v69 < 0) {
      uint64_t v75 = v69;
    }
    uint64_t v126 = v75;
    uint64_t v127 = v69;
    do
    {
      while (1)
      {
        uint64_t v81 = v64;
        uint64_t v82 = v59;
        uint64_t v83 = (uint64_t)v130;
        uint64_t v84 = v131;
        uint64_t v85 = v132;
        sub_1ACDC3C68((uint64_t)v130, v131, v132, v69);
        size_t v87 = v86;
        id v88 = objc_msgSend(v86, sel_adamID);

        uint64_t v89 = v133;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1ACC82F78(0, *(void *)(v89 + 16) + 1, 1);
          uint64_t v89 = v133;
        }
        unint64_t v91 = *(void *)(v89 + 16);
        unint64_t v90 = *(void *)(v89 + 24);
        if (v91 >= v90 >> 1)
        {
          uint64_t result = sub_1ACC82F78(v90 > 1, v91 + 1, 1);
          uint64_t v89 = v133;
        }
        *(void *)(v89 + 16) = v91 + 1;
        *(void *)(v89 + 8 * v91 + 32) = v88;
        if (v128) {
          break;
        }
        uint64_t v69 = v127;
        uint64_t v76 = (void *)sub_1ACDC3B6C(v83, v84, v85, v127);
        uint64_t v78 = v77;
        char v80 = v79;
        sub_1ACA6D674(v83, v84, v85);
        id v130 = v76;
        uint64_t v131 = v78;
        unsigned __int8 v132 = v80 & 1;
        uint64_t v59 = v82;
        unint64_t v64 = v81;
        if (!--v70) {
          goto LABEL_68;
        }
      }
      uint64_t v69 = v127;
      if ((v85 & 1) == 0) {
        goto LABEL_71;
      }
      if (sub_1ACE77148()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      uint64_t v59 = v82;
      unint64_t v64 = v81;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5340);
      id v92 = (void (*)(unint64_t **, void))sub_1ACE769E8();
      sub_1ACE771C8();
      v92(&v129, 0);
      --v70;
    }
    while (v70);
LABEL_68:
    sub_1ACA6D674((uint64_t)v130, v131, v132);
    swift_bridgeObjectRelease();
    uint64_t v73 = v133;
    goto LABEL_69;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t CategoryModel.adamID.getter()
{
  return *(void *)v0;
}

uint64_t CategoryModel.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryModel();
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 24), a1, &qword_1EB7731B0);
}

uint64_t type metadata accessor for CategoryModel()
{
  uint64_t result = qword_1EB76F068;
  if (!qword_1EB76F068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CategoryModel.color.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.interest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryModel();
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 32), a1, &qword_1E99F5338);
}

uint64_t CategoryModel.followedShowsCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 36));
}

uint64_t CategoryModel.artworkPrimaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.artworkTemplateURL.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryModel.artworkHeight.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 48));
}

uint64_t CategoryModel.artworkWidth.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 52));
}

uint64_t CategoryModel.parent.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CategoryModel() + 56));
}

uint64_t CategoryModel.children.getter()
{
  type metadata accessor for CategoryModel();
  return swift_bridgeObjectRetain();
}

BOOL CategoryModel.isFavorited.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (double *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for CategoryModel();
  sub_1ACA3AAD4(v0 + *(int *)(v4 + 32), (uint64_t)v3, &qword_1E99F5338);
  uint64_t v5 = type metadata accessor for InterestModel();
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1ACA50E78((uint64_t)v3, &qword_1E99F5338);
    return 0;
  }
  else
  {
    double v7 = v3[1];
    sub_1ACD3AE24((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for InterestModel);
    return v7 == 1.0;
  }
}

uint64_t CategoryModel.hash(into:)()
{
  sub_1ACE77B58();
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t CategoryModel.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD391D4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD39228()
{
  sub_1ACE77B58();
  return sub_1ACE76108();
}

uint64_t sub_1ACD3926C()
{
  return sub_1ACE77B78();
}

unint64_t *sub_1ACD392BC(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    char v6 = sub_1ACD39420((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    double v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    char v6 = sub_1ACD39420((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x1AD11B340](v7, -1, -1);
  }
  return v6;
}

unint64_t *sub_1ACD39420(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    uint64_t result = (unint64_t *)objc_msgSend(*(id *)(*(void *)(a3 + 48) + 8 * v13), sel_subscribed);
    if (result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_1ACB85EC0(v4, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation13CategoryModelV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for CategoryModel();
  MEMORY[0x1F4188790](v4 - 8);
  int64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = *a2;
  sub_1ACA979A0((uint64_t)a1, (uint64_t)&v15 - v8);
  sub_1ACA979A0((uint64_t)a2, (uint64_t)v6);
  if (v10 == v11)
  {
    if (*((void *)v9 + 1) == *((void *)v6 + 1) && *((void *)v9 + 2) == *((void *)v6 + 2)) {
      char v13 = 1;
    }
    else {
      char v13 = sub_1ACE77848();
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1ACD3AE24((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CategoryModel);
  sub_1ACD3AE24((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CategoryModel);
  return v13 & 1;
}

uint64_t sub_1ACD396E0()
{
  return sub_1ACD3AE84(&qword_1EB76F060, (void (*)(uint64_t))type metadata accessor for CategoryModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1ACE74F28();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    id v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (_OWORD *)((char *)v4 + v16);
    id v21 = (_OWORD *)((char *)a2 + v16);
    uint64_t v22 = type metadata accessor for InterestModel();
    uint64_t v23 = *(void *)(v22 - 8);
    id v24 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      _OWORD *v20 = *v21;
      uint64_t v26 = *(int *)(v22 + 24);
      uint64_t v27 = (char *)v20 + v26;
      uint64_t v28 = (char *)v21 + v26;
      uint64_t v29 = sub_1ACE750A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v30 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    id v31 = (uint64_t *)((char *)v4 + v30);
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *id v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[11];
    uint64_t v35 = a3[12];
    id v36 = (uint64_t *)((char *)v4 + v34);
    uint64_t v37 = (uint64_t *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *id v36 = *v37;
    v36[1] = v38;
    id v39 = (char *)v4 + v35;
    int v40 = (char *)a2 + v35;
    *(void *)id v39 = *(void *)v40;
    v39[8] = v40[8];
    uint64_t v41 = a3[13];
    uint64_t v42 = a3[14];
    int v43 = (char *)v4 + v41;
    uint64_t v44 = (char *)a2 + v41;
    *(void *)int v43 = *(void *)v44;
    v43[8] = v44[8];
    unint64_t v45 = (char *)v4 + v42;
    unint64_t v46 = (char *)a2 + v42;
    *(void *)unint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for CategoryModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = type metadata accessor for InterestModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = v7 + *(int *)(v8 + 24);
    uint64_t v10 = sub_1ACE750A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CategoryModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  id v18 = (_OWORD *)(a1 + v14);
  uint64_t v19 = (_OWORD *)(a2 + v14);
  uint64_t v20 = type metadata accessor for InterestModel();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    _OWORD *v18 = *v19;
    uint64_t v24 = *(int *)(v20 + 24);
    uint64_t v25 = (char *)v18 + v24;
    uint64_t v26 = (char *)v19 + v24;
    uint64_t v27 = sub_1ACE750A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v28 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = (void *)(a1 + v32);
  uint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a1 + v33;
  uint64_t v38 = a2 + v33;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a3[13];
  uint64_t v40 = a3[14];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a1 + v40;
  uint64_t v44 = a2 + v40;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CategoryModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for InterestModel();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      *uint64_t v19 = *v20;
      v19[1] = v20[1];
      uint64_t v50 = *(int *)(v21 + 24);
      unint64_t v51 = (char *)v19 + v50;
      id v52 = (char *)v20 + v50;
      uint64_t v53 = sub_1ACE750A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
      goto LABEL_13;
    }
    sub_1ACD3AE24((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for InterestModel);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
    memcpy(v19, v20, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  uint64_t v26 = *(int *)(v21 + 24);
  uint64_t v27 = (char *)v19 + v26;
  uint64_t v28 = (char *)v20 + v26;
  uint64_t v29 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[12];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)v39;
  v38[8] = v39[8];
  *(void *)uint64_t v38 = v40;
  uint64_t v41 = a3[13];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)v43;
  v42[8] = v43[8];
  *(void *)uint64_t v42 = v44;
  uint64_t v45 = a3[14];
  unint64_t v46 = (char *)a1 + v45;
  unint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = *(void *)v47;
  v46[8] = v47[8];
  *(void *)unint64_t v46 = v48;
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CategoryModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  int v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for InterestModel();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    _OWORD *v13 = *v14;
    uint64_t v18 = *(int *)(v15 + 24);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    uint64_t v21 = sub_1ACE750A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v22 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v23 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[13];
  uint64_t v27 = a3[14];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  return a1;
}

uint64_t assignWithTake for CategoryModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for InterestModel();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      void *v21 = *v22;
      v21[1] = v22[1];
      uint64_t v54 = *(int *)(v23 + 24);
      id v55 = (char *)v21 + v54;
      id v56 = (char *)v22 + v54;
      uint64_t v57 = sub_1ACE750A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
      goto LABEL_13;
    }
    sub_1ACD3AE24((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for InterestModel);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
    memcpy(v21, v22, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  uint64_t v28 = *(int *)(v23 + 24);
  uint64_t v29 = (char *)v21 + v28;
  uint64_t v30 = (char *)v22 + v28;
  uint64_t v31 = sub_1ACE750A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  uint64_t v33 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[11];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[12];
  uint64_t v44 = a3[13];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  uint64_t v47 = a1 + v44;
  uint64_t v48 = a2 + v44;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = a3[14];
  uint64_t v50 = a3[15];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = a2 + v49;
  *(void *)uint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  *(void *)(a1 + v50) = *(void *)(a2 + v50);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD3AA08);
}

uint64_t sub_1ACD3AA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CategoryModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD3AB50);
}

uint64_t sub_1ACD3AB50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5338);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1ACD3AC84()
{
  sub_1ACD3ADD0(319, (unint64_t *)&qword_1EB7734D0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F)
  {
    sub_1ACD3ADD0(319, &qword_1EB76F120, (void (*)(uint64_t))type metadata accessor for InterestModel);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1ACD3ADD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1ACE76FD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1ACD3AE24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACD3AE84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

PodcastsFoundation::FairPlayVersion_optional __swiftcall FairPlayVersion.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FairPlayVersion.rawValue.getter()
{
  if (*v0) {
    return 12918;
  }
  else {
    return 12662;
  }
}

id sub_1ACD3AF4C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FairPlayMigrationController()), sel_init);
  qword_1EB76C730 = (uint64_t)result;
  return result;
}

id static FairPlayMigrationController.shared.getter()
{
  if (qword_1EB769548 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EB76C730;
  return v0;
}

uint64_t FairPlayMigrationController.migrateIfNecessary(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACD3B788(a1, a2, (uint64_t)&unk_1F0399018, (uint64_t)sub_1ACD3B26C, (uint64_t)&block_descriptor_69);
}

uint64_t sub_1ACD3B178()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACD3B1B0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x1AD11B470](v7);
  if (v8)
  {
    id v9 = v8;
    swift_retain();
    sub_1ACD44ADC((uint64_t)v9, v9, a2, a3, a4);
    swift_release();
  }
  else
  {
    a2();
  }
}

uint64_t sub_1ACD3B250()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC8D0]);
}

void sub_1ACD3B26C()
{
  sub_1ACD3B1B0(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACD3B278(char a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) == 0) {
    return a3();
  }
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a3;
  void v8[3] = a4;
  v8[4] = a5;
  swift_retain();
  sub_1ACD3B330((uint64_t)sub_1ACD465FC, (uint64_t)v8);
  return swift_release();
}

void sub_1ACD3B330(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v12 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7, v9);
  id v13 = v12;
  LOBYTE(v12) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = sub_1ACE754C8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D598);
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76BD8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v30 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v31);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v15, v16, "%s Beginning migration from legacy FairPlay to V2.", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v18, -1, -1);
    MEMORY[0x1AD11B340](v17, -1, -1);
  }

  uint64_t v19 = *(void *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 24);
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher), v19);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v21;
  v22[3] = a1;
  void v22[4] = a2;
  void v22[5] = ObjectType;
  uint64_t v23 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(v20 + 24);
  swift_retain();
  swift_retain();
  v23(sub_1ACD4664C, v22, v19, v20);
  swift_release();
  swift_release();
  uint64_t v24 = self;
  id v25 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  int v26 = (void *)sub_1ACE76178();
  swift_bridgeObjectRetain();
  int v27 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setValue_forKey_, v26, v27);

  id v28 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v29 = (char *)objc_msgSend(v28, sel_fairPlayMigrationRetryCount);
  if (__OFADD__(v29, 1))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v28, sel_setFairPlayMigrationRetryCount_, v29 + 1);
  }
}

uint64_t FairPlayMigrationController.rollbackIfNecessary(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACD3B788(a1, a2, (uint64_t)&unk_1F0399068, (uint64_t)sub_1ACD3BF24, (uint64_t)&block_descriptor_10_3);
}

uint64_t sub_1ACD3B788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v20 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(v5 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  os_log_type_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v20;
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = a2;
  v16[5] = ObjectType;
  aBlock[4] = v21;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = v22;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1ACE75E08();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v14, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  swift_release();
  return swift_release();
}

void sub_1ACD3BA80(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1AD11B470](v6);
  if (!v7) {
    return;
  }
  uint64_t v8 = (void *)v7;
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D598);
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BD8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = a4;
    uint64_t v14 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v33 = v15;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v33);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v10, v11, "%s Determining rollback status.", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v15;
    a2 = v14;
    a4 = v13;
    MEMORY[0x1AD11B340](v16, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }

  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel__applePodcastsFoundationSharedUserDefaults);
  NSUserDefaults.fairPlayVersion.getter((BOOL *)&v33);

  int v19 = v33;
  id v20 = objc_msgSend(v17, sel__applePodcastsFoundationSharedUserDefaults);
  char v21 = sub_1ACABCA90();
  if (v21 == 2)
  {
    uint64_t v22 = qword_1E99F1900;
    uint64_t v23 = off_1E99F1908;
    swift_bridgeObjectRetain();
    LOBYTE(v22) = sub_1ACABCBA4(v22, (uint64_t)v23, 1);

    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_15;
    }
  }
  else
  {
    char v24 = v21;

    if (v24) {
      goto LABEL_15;
    }
  }
  if (v19)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    int v26 = (void *)swift_allocObject();
    v26[2] = a2;
    v26[3] = a3;
    v26[4] = a4;
    swift_retain();
    sub_1ACD3C2F4((uint64_t)sub_1ACD44A2C, (uint64_t)v26);

    swift_release();
    return;
  }
  char v25 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_14;
  }
LABEL_15:
  int v27 = sub_1ACE75498();
  os_log_type_t v28 = sub_1ACE76BD8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v33 = v31;
    *(_DWORD *)uint64_t v29 = 136315650;
    sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v33);
    sub_1ACE76FF8();
    *(_WORD *)(v29 + 12) = 1026;
    sub_1ACE76FF8();
    *(_WORD *)(v29 + 18) = 2082;
    if (v19) {
      uint64_t v30 = 12918;
    }
    else {
      uint64_t v30 = 12662;
    }
    sub_1ACA3189C(v30, 0xE200000000000000, &v33);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v27, v28, "%s Rollback unnecessary, isFairPlayV2Enabled: %{BOOL,public}d, fairPlayVersion: %{public}s.", (uint8_t *)v29, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v31, -1, -1);
    MEMORY[0x1AD11B340](v29, -1, -1);
  }

  a2();
}

uint64_t sub_1ACD3BF08()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC8D0]);
}

void sub_1ACD3BF24()
{
  sub_1ACD3BA80(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACD3BF30(void *a1, unsigned __int8 a2, char a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, const char *a7, const char *a8)
{
  if (a3)
  {
    sub_1ACBFC4D0(a1, a2);
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1ACE754C8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB76D598);
    sub_1ACBFC4D0(a1, a2);
    sub_1ACBFC4D0(a1, a2);
    int v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76C08();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v28);
      sub_1ACE76FF8();
      *(_WORD *)(v21 + 12) = 2080;
      unsigned __int8 v27 = a2;
      sub_1ACD46494();
      uint64_t v23 = sub_1ACE77A98();
      uint64_t v26 = sub_1ACA3189C(v23, v24, &v28);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACD46438(a1, a2, 1);
      sub_1ACD46438(a1, a2, 1);
      _os_log_impl(&dword_1AC9D5000, v19, v20, a8, (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v22, -1, -1);
      MEMORY[0x1AD11B340](v21, -1, -1);

      sub_1ACD46438(a1, a2, 1);
    }
    else
    {
      sub_1ACD46438(a1, a2, 1);
      sub_1ACD46438(a1, a2, 1);
      sub_1ACBFC4F4(a1, a2);
    }
  }
  else
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1ACE754C8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB76D598);
    os_log_type_t v11 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76C08();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v26 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v28 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v26);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v11, v12, a7, v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v14, -1, -1);
      MEMORY[0x1AD11B340](v13, -1, -1);
    }
  }
  return a4();
}

uint64_t sub_1ACD3C2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  os_log_type_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v12 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *os_log_type_t v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7, v9);
  id v13 = v12;
  LOBYTE(v12) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 24);
    uint64_t v16 = *(void *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher), v15);
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v17;
    v18[3] = a1;
    v18[4] = a2;
    v18[5] = ObjectType;
    int v19 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(v16 + 16);
    swift_retain();
    swift_retain();
    v19(sub_1ACD44A7C, v18, v15, v16);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACD3C518(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  __n128 v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

void sub_1ACD3C5AC(void *a1, char a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v78 = a6;
  uint64_t v11 = type metadata accessor for FairPlayMigrationData(0);
  uint64_t v76 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v76 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v70 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE75DC8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE75E48();
  uint64_t v72 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v71 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x1AD11B470](a3 + 16);
  if (v19)
  {
    uint64_t v20 = (char *)v19;
    if (a2)
    {
      uint64_t v28 = a1;
      if (qword_1EB76D5B8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1ACE754C8();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EB76D598);
      uint64_t v30 = a1;
      uint64_t v31 = a1;
      uint64_t v32 = sub_1ACE75498();
      os_log_type_t v33 = sub_1ACE76BE8();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = a1;
        uint64_t v35 = swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        aBlock[0] = v78;
        *(_DWORD *)uint64_t v35 = 136315394;
        uint64_t v79 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        sub_1ACE76FF8();
        *(_WORD *)(v35 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v36 = sub_1ACE77A98();
        uint64_t v79 = sub_1ACA3189C(v36, v37, aBlock);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACAC1E88(v34, 1);
        sub_1ACAC1E88(v34, 1);
        _os_log_impl(&dword_1AC9D5000, v32, v33, "%s Unable to migrate, no migration data found with error %{public}s.", (uint8_t *)v35, 0x16u);
        uint64_t v38 = v78;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v38, -1, -1);
        uint64_t v39 = v35;
        a1 = v34;
        MEMORY[0x1AD11B340](v39, -1, -1);
      }
      else
      {
        sub_1ACAC1E88(a1, 1);
        sub_1ACAC1E88(a1, 1);
      }

      uint64_t v61 = a1;
      a4(a1, 1, 1);

      sub_1ACAC1E88(a1, 1);
      sub_1ACAC1E88(a1, 1);
    }
    else
    {
      uint64_t v66 = v13;
      uint64_t v21 = qword_1EB76D5B8;
      swift_bridgeObjectRetain();
      if (v21 != -1) {
        swift_once();
      }
      uint64_t v64 = v17;
      uint64_t v65 = v14;
      uint64_t v68 = a5;
      uint64_t v22 = sub_1ACE754C8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB76D598);
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1ACE75498();
      os_log_type_t v24 = sub_1ACE76BD8();
      BOOL v25 = os_log_type_enabled(v23, v24);
      uint64_t v67 = (void (*)(void, void, void))a4;
      id v63 = v16;
      if (v25)
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        aBlock[0] = v27;
        *(_DWORD *)uint64_t v26 = 136315394;
        uint64_t v79 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        sub_1ACE76FF8();
        *(_WORD *)(v26 + 12) = 2048;
        uint64_t v79 = a1[2];
        sub_1ACE76FF8();
        sub_1ACAC1E88(a1, 0);
        _os_log_impl(&dword_1AC9D5000, v23, v24, "%s Fetched migration data for %ld episodes.", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v27, -1, -1);
        MEMORY[0x1AD11B340](v26, -1, -1);
      }
      else
      {
        sub_1ACAC1E88(a1, 0);
      }

      uint64_t v40 = swift_allocObject();
      uint64_t v41 = MEMORY[0x1E4FBC860];
      uint64_t v77 = v40;
      *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      uint64_t v43 = dispatch_group_create();
      uint64_t v69 = (char *)a1;
      uint64_t v44 = a1[2];
      uint64_t v45 = v20;
      uint64_t v46 = (uint64_t)v70;
      if (v44)
      {
        uint64_t v47 = *(unsigned __int8 *)(v76 + 80);
        uint64_t v48 = &v69[(v47 + 32) & ~v47];
        uint64_t v49 = *(void *)(v76 + 72);
        uint64_t v75 = (v47 + 48) & ~v47;
        uint64_t v76 = v49;
        unint64_t v50 = (v12 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v73 = v50 + 8;
        uint64_t v74 = v47 | 7;
        do
        {
          dispatch_group_enter(v43);
          sub_1ACD46E10((uint64_t)v48, v46, type metadata accessor for FairPlayMigrationData);
          uint64_t v51 = (void *)swift_allocObject();
          v51[2] = v45;
          v51[3] = v77;
          v51[4] = v43;
          _OWORD v51[5] = v42;
          sub_1ACD46DA8(v46, (uint64_t)v51 + v75, type metadata accessor for FairPlayMigrationData);
          *(void *)((char *)v51 + v50) = v78;
          swift_retain();
          swift_retain();
          uint64_t v52 = v45;
          uint64_t v53 = v43;
          sub_1ACD3E268(v48, sub_1ACD46814, (uint64_t)v51);
          swift_release();
          v48 += v76;
          --v44;
        }
        while (v44);
      }
      uint64_t v62 = v42;
      sub_1ACAC1E88(v69, 0);
      uint64_t v76 = *(void *)&v45[OBJC_IVAR___PFFairPlayMigrationController_internalQueue];
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v77;
      v54[3] = v42;
      uint64_t v55 = v68;
      v54[4] = v67;
      v54[5] = v55;
      v54[6] = v78;
      aBlock[4] = (uint64_t)sub_1ACD46904;
      aBlock[5] = (uint64_t)v54;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1ACA6DA9C;
      aBlock[3] = (uint64_t)&block_descriptor_115;
      id v56 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v57 = v45;
      id v58 = v71;
      sub_1ACE75E08();
      uint64_t v79 = MEMORY[0x1E4FBC860];
      sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
      uint64_t v59 = v63;
      uint64_t v60 = v66;
      sub_1ACE770E8();
      sub_1ACE76C68();
      _Block_release(v56);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v60);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v64);

      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    a4(0, 2, 1);
  }
}

void sub_1ACD3CF28(uint64_t a1, NSObject *a2, uint64_t a3, NSObject *a4, void **a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v47 = a3;
  uint64_t v48 = a7;
  unint64_t v50 = a6;
  uint64_t v51 = a5;
  uint64_t v49 = a2;
  uint64_t v9 = type metadata accessor for FairPlayMigrationData(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (uint64_t *)((char *)&v46 - v17);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5388);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(a1, (uint64_t)v21, &qword_1E99F5388);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = a4;
    uint64_t v22 = *(void **)v21;
    unsigned __int8 v23 = v21[8];
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    os_log_type_t v24 = v51 + 2;
    uint64_t v25 = sub_1ACE754C8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB76D598);
    sub_1ACD46E10((uint64_t)v50, (uint64_t)v11, type metadata accessor for FairPlayMigrationData);
    sub_1ACBFC4D0(v22, v23);
    sub_1ACBFC4D0(v22, v23);
    uint64_t v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76BE8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v51 = v24;
      uint64_t v29 = v28;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v52 = v30;
      *(_DWORD *)uint64_t v29 = 136315650;
      uint64_t v53 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v52);
      sub_1ACE76FF8();
      *(_WORD *)(v29 + 12) = 2048;
      uint64_t v31 = *v11;
      sub_1ACD470D0((uint64_t)v11, type metadata accessor for FairPlayMigrationData);
      uint64_t v53 = v31;
      sub_1ACE76FF8();
      *(_WORD *)(v29 + 22) = 2080;
      uint64_t v53 = (uint64_t)v22;
      unsigned __int8 v54 = v23;
      sub_1ACD46494();
      uint64_t v32 = sub_1ACE77A98();
      uint64_t v53 = sub_1ACA3189C(v32, v33, &v52);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACBFC4F4(v22, v23);
      sub_1ACBFC4F4(v22, v23);
      _os_log_impl(&dword_1AC9D5000, v26, v27, "%s Failed to migrate %lld with error %s.", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v30, -1, -1);
      uint64_t v34 = v29;
      os_log_type_t v24 = v51;
      MEMORY[0x1AD11B340](v34, -1, -1);
    }
    else
    {
      sub_1ACD470D0((uint64_t)v11, type metadata accessor for FairPlayMigrationData);
      sub_1ACBFC4F4(v22, v23);
      sub_1ACBFC4F4(v22, v23);
    }

    uint64_t v40 = v49;
    uint64_t v41 = *v50;
    swift_beginAccess();
    uint64_t v42 = *v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *os_log_type_t v24 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v42 = sub_1ACA42BF4(0, v42[2] + 1, 1, v42);
      *os_log_type_t v24 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1ACA42BF4((void *)(v44 > 1), v45 + 1, 1, v42);
      *os_log_type_t v24 = v42;
    }
    v42[2] = v45 + 1;
    v42[v45 + 4] = v41;
    swift_endAccess();
    dispatch_group_leave(v40);
    sub_1ACBFC4F4(v22, v23);
  }
  else
  {
    sub_1ACD46DA8((uint64_t)v21, (uint64_t)v18, type metadata accessor for FairPlayMigrationData.ValidatedData);
    sub_1ACD46E10((uint64_t)v18, (uint64_t)v15, type metadata accessor for FairPlayMigrationData.ValidatedData);
    unint64_t v35 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v36 = (v14 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v47;
    sub_1ACD46DA8((uint64_t)v15, v38 + v35, type metadata accessor for FairPlayMigrationData.ValidatedData);
    *(void *)(v38 + v36) = a4;
    *(void *)(v38 + v37) = v51;
    *(void *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v48;
    swift_retain();
    uint64_t v39 = a4;
    swift_retain();
    sub_1ACD3D980(v18, (void (*)(id, uint64_t))sub_1ACD47000, v38);
    swift_release();
    sub_1ACD470D0((uint64_t)v18, type metadata accessor for FairPlayMigrationData.ValidatedData);
  }
}

void sub_1ACD3D4EC(void *a1, __int16 a2, uint64_t a3, uint64_t *a4, NSObject *a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 0x100) != 0)
  {
    sub_1ACBFC4D0(a1, a2);
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v40 = (void **)(a6 + 16);
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D598);
    sub_1ACD46E10((uint64_t)a4, (uint64_t)v14, type metadata accessor for FairPlayMigrationData.ValidatedData);
    sub_1ACBFC4D0(a1, a2);
    sub_1ACBFC4D0(a1, a2);
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v39 = a5;
      uint64_t v25 = v24;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v41 = v38;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v42 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v41);
      sub_1ACE76FF8();
      *(_WORD *)(v25 + 12) = 2048;
      uint64_t v26 = *v14;
      sub_1ACD470D0((uint64_t)v14, type metadata accessor for FairPlayMigrationData.ValidatedData);
      uint64_t v42 = v26;
      sub_1ACE76FF8();
      *(_WORD *)(v25 + 22) = 2080;
      uint64_t v42 = (uint64_t)a1;
      char v43 = a2;
      sub_1ACD46494();
      uint64_t v27 = sub_1ACE77A98();
      uint64_t v42 = sub_1ACA3189C(v27, v28, &v41);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACD47184(a1, a2, 1);
      sub_1ACD47184(a1, a2, 1);
      _os_log_impl(&dword_1AC9D5000, v22, v23, "%s Failed to migrate %lld with error %s.", (uint8_t *)v25, 0x20u);
      uint64_t v29 = v38;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      uint64_t v30 = v25;
      a5 = v39;
      MEMORY[0x1AD11B340](v30, -1, -1);
    }
    else
    {
      sub_1ACD470D0((uint64_t)v14, type metadata accessor for FairPlayMigrationData.ValidatedData);
      sub_1ACD47184(a1, a2, 1);
      sub_1ACD47184(a1, a2, 1);
    }

    uint64_t v31 = *a4;
    uint64_t v32 = v40;
    swift_beginAccess();
    unint64_t v33 = *v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v32 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v33 = sub_1ACA42BF4(0, v33[2] + 1, 1, v33);
      *uint64_t v32 = v33;
    }
    unint64_t v36 = v33[2];
    unint64_t v35 = v33[3];
    if (v36 >= v35 >> 1)
    {
      unint64_t v33 = sub_1ACA42BF4((void *)(v35 > 1), v36 + 1, 1, v33);
      *uint64_t v32 = v33;
    }
    v33[2] = v36 + 1;
    v33[v36 + 4] = v31;
    swift_endAccess();
    dispatch_group_leave(a5);
    sub_1ACD47184(a1, a2, 1);
  }
  else
  {
    uint64_t v15 = (void *)(a3 + 16);
    uint64_t v16 = *a4;
    swift_beginAccess();
    uint64_t v17 = *(void **)(a3 + 16);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v15 = v17;
    if ((v18 & 1) == 0)
    {
      uint64_t v17 = sub_1ACA42BF4(0, v17[2] + 1, 1, v17);
      *uint64_t v15 = v17;
    }
    unint64_t v20 = v17[2];
    unint64_t v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      uint64_t v17 = sub_1ACA42BF4((void *)(v19 > 1), v20 + 1, 1, v17);
      *uint64_t v15 = v17;
    }
    _OWORD v17[2] = v20 + 1;
    v17[v20 + 4] = v16;
    swift_endAccess();
    dispatch_group_leave(a5);
  }
}

void sub_1ACD3D980(uint64_t *a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v78 = a3;
  char v80 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v72 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE74F28();
  uint64_t v73 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char **)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v75 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  uint64_t v77 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (char *)&v70 - v17;
  char v18 = (void *)sub_1ACE75EC8();
  uint64_t v19 = *(v18 - 1);
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (void **)((char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = v3;
  os_log_type_t v23 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, void *, __n128))(v19 + 104))(v22, *MEMORY[0x1E4FBCBF0], v18, v20);
  id v24 = v23;
  uint64_t v25 = sub_1ACE75EF8();
  (*(void (**)(void *, void *))(v19 + 8))(v22, v18);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v71 = v9;
  uint64_t v26 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  sub_1ACE74EB8();
  id v27 = objc_allocWithZone(MEMORY[0x1E4FB8620]);
  unint64_t v28 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  char v18 = objc_msgSend(v27, sel_initWithPath_, v28);

  uint64_t v29 = (char *)sub_1ACD3FC38(*(uint64_t *)((char *)a1 + *(int *)(v26 + 36)), *(uint64_t *)((char *)a1 + *(int *)(v26 + 36) + 8));
  if (!v29)
  {
    uint64_t v42 = v18;
    sub_1ACD43FC0(a1, v42, v80, v78, v79);

    return;
  }
  uint64_t v30 = v29;
  id v31 = objc_msgSend(v29, sel_keyData);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_1ACE74F88();
    uint64_t v70 = v18;
    uint64_t v34 = v15;
    uint64_t v35 = v33;
    unint64_t v37 = v36;

    uint64_t v38 = a1[2];
    unint64_t v39 = a1[3];
    sub_1ACA3985C(v38, v39);
    sub_1ACA3985C(v35, v37);
    char v40 = sub_1ACD6EE5C(v35, v37, v38, v39);
    sub_1ACA50850(v38, v39);
    sub_1ACA50850(v35, v37);
    uint64_t v41 = v35;
    uint64_t v15 = v34;
    char v18 = v70;
    sub_1ACA50850(v41, v37);
    if (v40)
    {
      sub_1ACD3FDA8(*a1);
      v80(0, 0);

      return;
    }
  }
  else
  {
    uint64_t v43 = a1[2];
    unint64_t v44 = a1[3];
    sub_1ACA3985C(v43, v44);
    sub_1ACAB2EF0(0, 0xF000000000000000);
    sub_1ACAB2EF0(v43, v44);
  }
  id v45 = objc_msgSend(v30, sel_renewalDate);
  if (!v45)
  {
    uint64_t v49 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v75, 1, 1, v76);
    goto LABEL_13;
  }
  uint64_t v46 = v45;
  sub_1ACE75078();

  uint64_t v25 = v76;
  uint64_t v47 = v77;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  uint64_t v49 = (uint64_t)v75;
  v48(v75, v15, v76);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v49, 1, v25) == 1)
  {
LABEL_13:

    sub_1ACA50E78(v49, (uint64_t *)&unk_1EB773140);
    return;
  }
  v48(v74, (char *)v49, v25);
  if ((sub_1ACE75018() & 1) == 0)
  {
    uint64_t v75 = v30;
    uint64_t v9 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
    id v50 = objc_msgSend(v18, sel_filePath);
    sub_1ACE761B8();

    uint64_t v51 = (uint64_t)v72;
    sub_1ACE74EF8();
    swift_bridgeObjectRelease();
    uint64_t v52 = v73;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v51, 1, v7) != 1)
    {
      uint64_t v65 = v71;
      (*(void (**)(char **, uint64_t, uint64_t))(v52 + 32))(v71, v51, v7);
      uint64_t v66 = v79;
      uint64_t v67 = *(void **)(v79 + OBJC_IVAR___PFFairPlayMigrationController_invalidationManager);
      uint64_t v68 = (void *)sub_1ACE74E18();
      objc_msgSend(v67, sel_markKeyForInvalidationAt_shouldRemove_, v68, 1);

      (*(void (**)(char **, uint64_t))(v52 + 8))(v65, v7);
LABEL_21:
      uint64_t v30 = v75;
      uint64_t v69 = v18;
      sub_1ACD43FC0(a1, v69, v80, v78, v66);

      goto LABEL_22;
    }
    sub_1ACA50E78(v51, &qword_1EB7731B0);
    if (qword_1EB76D5B8 == -1)
    {
LABEL_16:
      uint64_t v53 = sub_1ACE754C8();
      __swift_project_value_buffer(v53, (uint64_t)qword_1EB76D598);
      unsigned __int8 v54 = v18;
      uint64_t v55 = sub_1ACE75498();
      os_log_type_t v56 = sub_1ACE76BE8();
      int v57 = v56;
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v58 = swift_slowAlloc();
        LODWORD(v72) = v57;
        uint64_t v59 = v58;
        uint64_t v73 = swift_slowAlloc();
        uint64_t v82 = v73;
        *(_DWORD *)uint64_t v59 = 136315651;
        uint64_t v81 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v82);
        sub_1ACE76FF8();
        *(_WORD *)(v59 + 12) = 2160;
        uint64_t v81 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v59 + 22) = 2081;
        uint64_t v71 = (char **)(v59 + 24);
        id v60 = [v54 v9[322]];
        uint64_t v61 = sub_1ACE761B8();
        unint64_t v63 = v62;

        uint64_t v81 = sub_1ACA3189C(v61, v63, &v82);
        uint64_t v25 = v76;
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v55, (os_log_type_t)v72, "%s Unable to invalidate key, invalid key store path %{private,mask.hash}s.", (uint8_t *)v59, 0x20u);
        uint64_t v64 = v73;
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v64, -1, -1);
        MEMORY[0x1AD11B340](v59, -1, -1);
      }
      else
      {
      }
      uint64_t v66 = v79;
      goto LABEL_21;
    }
LABEL_24:
    swift_once();
    goto LABEL_16;
  }
  sub_1ACD4006C(*a1, (uint64_t)v80, v78);
LABEL_22:

  (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v25);
}

uint64_t sub_1ACD3E268(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  int64_t v196 = a2;
  uint64_t v197 = a3;
  uint64_t v198 = a1;
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5388);
  MEMORY[0x1F4188790](v194);
  v195 = (char *)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for FairPlayMigrationData(0);
  uint64_t v175 = *(void *)(v187 - 8);
  uint64_t v5 = *(void *)(v175 + 64);
  MEMORY[0x1F4188790](v187);
  unint64_t v193 = (unint64_t)&v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v192 = (uint64_t *)((char *)&v161 - v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v185 = (uint64_t *)((char *)&v161 - v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v179 = (uint64_t *)((char *)&v161 - v11);
  MEMORY[0x1F4188790](v12);
  int64_t v176 = (uint64_t (*)(uint64_t))((char *)&v161 - v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v177 = (uint64_t *)((char *)&v161 - v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v183 = (uint64_t)&v161 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v184 = (uint64_t)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE750A8();
  uint64_t v189 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v181 = (char *)&v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v178 = (char *)&v161 - v23;
  uint64_t v173 = v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v186 = (char *)&v161 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1ACE74F28();
  uint64_t v190 = *(void *)(v30 - 8);
  uint64_t v191 = v30;
  uint64_t v31 = *(void *)(v190 + 64);
  MEMORY[0x1F4188790](v30);
  unint64_t v180 = (char *)&v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  int64_t v182 = (char *)&v161 - v33;
  MEMORY[0x1F4188790](v34);
  unint64_t v36 = (char *)&v161 - v35;
  uint64_t v37 = sub_1ACE75EC8();
  uint64_t v38 = *(void *)(v37 - 8);
  __n128 v39 = MEMORY[0x1F4188790](v37);
  uint64_t v41 = (uint64_t *)((char *)&v161 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v168 = v3;
  uint64_t v42 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  void *v41 = v42;
  uint64_t v43 = *(void (**)(void, __n128))(v38 + 104);
  unsigned int v170 = *MEMORY[0x1E4FBCBF0];
  uint64_t v171 = v38 + 104;
  uint64_t v169 = (void (*)(void *, void, uint64_t))v43;
  v43(v41, v39);
  id v172 = v42;
  uint64_t v44 = sub_1ACE75EF8();
  id v45 = *(void (**)(void *, uint64_t))(v38 + 8);
  uint64_t v174 = v37;
  v45(v41, v37);
  if ((v44 & 1) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v44 = (uint64_t)v198;
  if (v198[4])
  {
    uint64_t v167 = v20;
    char v188 = v36;
    sub_1ACE74EF8();
    uint64_t v47 = v190;
    uint64_t v46 = v191;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v29, 1, v191) == 1)
    {
      sub_1ACA50E78((uint64_t)v29, &qword_1EB7731B0);
LABEL_12:
      uint64_t v44 = (uint64_t)v198;
      goto LABEL_13;
    }
    char v166 = (uint64_t (*)(void *, uint64_t))v45;
    uint64_t v48 = v47 + 32;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    id v50 = v188;
    v49(v188, v29, v46);
    if ((sub_1ACE74D98() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
      goto LABEL_12;
    }
    uint64_t v51 = v198;
    unint64_t v52 = v198[2];
    if (v52 >> 60 == 15)
    {
      if (qword_1EB76D5B8 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1ACE754C8();
      __swift_project_value_buffer(v53, (uint64_t)qword_1EB76D598);
      unsigned __int8 v54 = v185;
      sub_1ACD46E10((uint64_t)v51, (uint64_t)v185, type metadata accessor for FairPlayMigrationData);
      uint64_t v55 = sub_1ACE75498();
      os_log_type_t v56 = sub_1ACE76BE8();
      BOOL v57 = os_log_type_enabled(v55, v56);
      uint64_t v58 = v190;
      if (v57)
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        aBlock[0] = v60;
        *(_DWORD *)uint64_t v59 = 136315651;
        uint64_t v200 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        sub_1ACE76FF8();
        *(_WORD *)(v59 + 12) = 2160;
        uint64_t v200 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v59 + 22) = 2049;
        uint64_t v61 = *v54;
        sub_1ACD470D0((uint64_t)v54, type metadata accessor for FairPlayMigrationData);
        uint64_t v200 = v61;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v55, v56, "%s Unable to migrate %{private,mask.hash}lld, no legacy key found.", (uint8_t *)v59, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v60, -1, -1);
        MEMORY[0x1AD11B340](v59, -1, -1);
      }
      else
      {
        sub_1ACD470D0((uint64_t)v54, type metadata accessor for FairPlayMigrationData);
      }

      uint64_t v87 = v191;
      id v88 = v188;
      uint64_t v89 = (uint64_t)v195;
      *(void *)v195 = 7;
      *(unsigned char *)(v89 + 8) = 2;
      swift_storeEnumTagMultiPayload();
      v196(v89);
    }
    else
    {
      uint64_t v185 = (uint64_t *)v49;
      char v192 = (uint64_t *)v48;
      uint64_t v74 = v198[1];
      uint64_t v75 = v184;
      sub_1ACA3AAD4((uint64_t)v198 + *(int *)(v187 + 28), v184, (uint64_t *)&unk_1EB773140);
      uint64_t v76 = v189;
      uint64_t v77 = v167;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48))(v75, 1, v167) != 1)
      {
        unint64_t v90 = *(void (**)(unint64_t, char *, uint64_t))(v76 + 32);
        uint64_t v179 = (uint64_t *)(v76 + 32);
        uint64_t v165 = v90;
        v90((unint64_t)v186, (char *)v75, v77);
        unint64_t v91 = self;
        uint64_t v184 = v74;
        unint64_t v92 = v52;
        sub_1ACA3985C(v74, v52);
        id v93 = objc_msgSend(v91, sel_ams_sharedAccountStore);
        id v94 = objc_msgSend(v93, sel_ams_activeiTunesAccount);

        if (v94)
        {
          id v95 = objc_msgSend(v94, sel_ams_DSID);

          if (v95)
          {
            int64_t v176 = type metadata accessor for FairPlayMigrationData;
            sub_1ACD46E10((uint64_t)v198, v183, type metadata accessor for FairPlayMigrationData);
            id v164 = v95;
            uint64_t v97 = v190 + 16;
            uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v190 + 16);
            unint64_t v193 = v92;
            uint64_t v98 = v191;
            v96(v182, v188, v191);
            uint64_t v99 = v76 + 16;
            uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
            uint64_t v101 = v178;
            v100(v178, v186, v167);
            sub_1ACD46E10(v183, (uint64_t)v177, v176);
            uint64_t v163 = v96;
            v96(v180, v182, v98);
            uint64_t v102 = v101;
            uint64_t v103 = v167;
            unint64_t v162 = v100;
            v100(v181, v102, v167);
            unint64_t v104 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
            unint64_t v105 = (v5 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v106 = (v105 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v161 = v97;
            unint64_t v107 = (*(unsigned __int8 *)(v97 + 64) + v106 + 16) & ~(unint64_t)*(unsigned __int8 *)(v97 + 64);
            uint64_t v175 = v99;
            unint64_t v108 = (v31 + *(unsigned __int8 *)(v99 + 64) + v107) & ~(unint64_t)*(unsigned __int8 *)(v99 + 64);
            uint64_t v109 = swift_allocObject();
            uint64_t v110 = v197;
            *(void *)(v109 + 16) = v196;
            *(void *)(v109 + 24) = v110;
            sub_1ACD46DA8(v183, v109 + v104, v176);
            uint64_t v111 = v164;
            *(void *)(v109 + v105) = v164;
            uint64_t v112 = (void *)(v109 + v106);
            uint64_t v113 = v184;
            unint64_t v114 = v193;
            void *v112 = v184;
            v112[1] = v114;
            unint64_t v115 = v193;
            ((void (*)(unint64_t, char *, uint64_t))v185)(v109 + v107, v182, v191);
            char v192 = (uint64_t *)v109;
            v165(v109 + v108, v178, v103);
            uint64_t v116 = v172;
            void *v41 = v172;
            uint64_t v117 = v174;
            v169(v41, v170, v174);
            sub_1ACA39848(v113, v115);
            swift_retain();
            id v118 = v111;
            id v119 = v116;
            sub_1ACA39848(v113, v115);
            swift_retain();
            id v120 = v118;
            LOBYTE(v118) = sub_1ACE75EF8();
            uint64_t result = v166(v41, v117);
            if (v118)
            {
              unint64_t v121 = (void *)((char *)v198 + *(int *)(v187 + 32));
              uint64_t v122 = v121[1];
              if (v122)
              {
                uint64_t v123 = *v121;
                uint64_t v124 = v177;
                uint64_t v125 = *v177;
                uint64_t v126 = (int *)type metadata accessor for FairPlayMigrationData.ValidatedData(0);
                uint64_t v127 = v195;
                uint64_t v128 = v191;
                v163(&v195[v126[7]], v180, v191);
                uint64_t v129 = v167;
                v162(&v127[v126[8]], v181, v167);
                *(void *)uint64_t v127 = v125;
                *((void *)v127 + 1) = v120;
                uint64_t v130 = v184;
                unint64_t v131 = v193;
                *((void *)v127 + 2) = v184;
                *((void *)v127 + 3) = v131;
                unsigned __int8 v132 = &v127[v126[9]];
                *(void *)unsigned __int8 v132 = v123;
                *((void *)v132 + 1) = v122;
                swift_storeEnumTagMultiPayload();
                sub_1ACA39848(v130, v131);
                id v133 = v120;
                swift_bridgeObjectRetain();
                v196((uint64_t)v127);
                sub_1ACA50E78((uint64_t)v127, &qword_1E99F5388);
                swift_release();
                swift_release();
                sub_1ACD470D0((uint64_t)v124, type metadata accessor for FairPlayMigrationData);

                sub_1ACAB2EF0(v130, v131);
                uint64_t v134 = *(void (**)(char *, uint64_t))(v190 + 8);
                v134(v180, v128);
                char v135 = *(void (**)(char *, uint64_t))(v189 + 8);
                v135(v181, v129);
                sub_1ACAB2EF0(v130, v131);

                v135(v186, v129);
                return ((uint64_t (*)(char *, uint64_t))v134)(v188, v128);
              }
              else
              {
                uint64_t v147 = *(void **)(v168 + OBJC_IVAR___PFFairPlayMigrationController_metadataLoader);
                id v148 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
                int64_t v149 = v188;
                uint64_t v150 = (void *)sub_1ACE74E18();
                id v151 = objc_msgSend(v148, sel_initWithURL_options_, v150, 0);

                uint64_t v152 = swift_allocObject();
                swift_unknownObjectWeakInit();
                unint64_t v153 = (void *)swift_allocObject();
                v153[2] = v152;
                v153[3] = sub_1ACD46BC8;
                v153[4] = v192;
                aBlock[4] = (uint64_t)sub_1ACD46D64;
                aBlock[5] = (uint64_t)v153;
                aBlock[0] = MEMORY[0x1E4F143A8];
                aBlock[1] = 1107296256;
                aBlock[2] = (uint64_t)sub_1ACC3C930;
                aBlock[3] = (uint64_t)&block_descriptor_125;
                unint64_t v154 = _Block_copy(aBlock);
                swift_retain();
                swift_release();
                objc_msgSend(v147, sel_keyIdentifiersFrom_completion_, v151, v154);
                _Block_release(v154);
                swift_release();
                swift_release();

                sub_1ACD470D0((uint64_t)v177, type metadata accessor for FairPlayMigrationData);
                uint64_t v155 = v184;
                unint64_t v156 = v193;
                sub_1ACAB2EF0(v184, v193);
                uint64_t v157 = v191;
                uint64_t v158 = *(void (**)(char *, uint64_t))(v190 + 8);
                v158(v180, v191);
                uint64_t v159 = *(void (**)(char *, uint64_t))(v189 + 8);
                uint64_t v160 = v167;
                v159(v181, v167);
                sub_1ACAB2EF0(v155, v156);

                v159(v186, v160);
                return ((uint64_t (*)(char *, uint64_t))v158)(v149, v157);
              }
            }
            else
            {
              __break(1u);
            }
            return result;
          }
        }
        if (qword_1EB76D5B8 != -1) {
          swift_once();
        }
        uint64_t v136 = sub_1ACE754C8();
        __swift_project_value_buffer(v136, (uint64_t)qword_1EB76D598);
        uint64_t v137 = v176;
        sub_1ACD46E10((uint64_t)v198, (uint64_t)v176, type metadata accessor for FairPlayMigrationData);
        BOOL v138 = sub_1ACE75498();
        os_log_type_t v139 = sub_1ACE76BE8();
        BOOL v140 = os_log_type_enabled(v138, v139);
        uint64_t v58 = v190;
        if (v140)
        {
          uint64_t v141 = swift_slowAlloc();
          uint64_t v142 = swift_slowAlloc();
          aBlock[0] = v142;
          *(_DWORD *)uint64_t v141 = 136315651;
          uint64_t v200 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
          sub_1ACE76FF8();
          *(_WORD *)(v141 + 12) = 2160;
          uint64_t v200 = 1752392040;
          sub_1ACE76FF8();
          *(_WORD *)(v141 + 22) = 2049;
          uint64_t v143 = *(void *)v137;
          sub_1ACD470D0((uint64_t)v137, type metadata accessor for FairPlayMigrationData);
          uint64_t v200 = v143;
          sub_1ACE76FF8();
          _os_log_impl(&dword_1AC9D5000, v138, v139, "%s Unable to migrate %{private,mask.hash}lld, no DSID found.", (uint8_t *)v141, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v142, -1, -1);
          MEMORY[0x1AD11B340](v141, -1, -1);
        }
        else
        {
          sub_1ACD470D0((uint64_t)v137, type metadata accessor for FairPlayMigrationData);
        }

        uint64_t v87 = v191;
        id v88 = v188;
        uint64_t v144 = v167;
        uint64_t v145 = v184;
        uint64_t v146 = (uint64_t)v195;
        *(void *)v195 = 1;
        *(unsigned char *)(v146 + 8) = 2;
        swift_storeEnumTagMultiPayload();
        v196(v146);
        sub_1ACAB2EF0(v145, v92);
        sub_1ACA50E78(v146, &qword_1E99F5388);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v186, v144);
        return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v88, v87);
      }
      sub_1ACA3985C(v74, v52);
      sub_1ACA50E78(v75, (uint64_t *)&unk_1EB773140);
      uint64_t v78 = v74;
      if (qword_1EB76D5B8 != -1) {
        swift_once();
      }
      uint64_t v79 = sub_1ACE754C8();
      __swift_project_value_buffer(v79, (uint64_t)qword_1EB76D598);
      char v80 = v179;
      sub_1ACD46E10((uint64_t)v198, (uint64_t)v179, type metadata accessor for FairPlayMigrationData);
      uint64_t v81 = sub_1ACE75498();
      os_log_type_t v82 = sub_1ACE76BE8();
      BOOL v83 = os_log_type_enabled(v81, v82);
      uint64_t v58 = v190;
      if (v83)
      {
        uint64_t v84 = swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        aBlock[0] = v85;
        *(_DWORD *)uint64_t v84 = 136315651;
        uint64_t v200 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        unint64_t v193 = v52;
        sub_1ACE76FF8();
        *(_WORD *)(v84 + 12) = 2160;
        uint64_t v200 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v84 + 22) = 2049;
        uint64_t v86 = *v80;
        sub_1ACD470D0((uint64_t)v80, type metadata accessor for FairPlayMigrationData);
        uint64_t v200 = v86;
        unint64_t v52 = v193;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v81, v82, "%s Unable to migrate %{private,mask.hash}lld, no legacy key renewal data found.", (uint8_t *)v84, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v85, -1, -1);
        MEMORY[0x1AD11B340](v84, -1, -1);
      }
      else
      {
        sub_1ACD470D0((uint64_t)v80, type metadata accessor for FairPlayMigrationData);
      }

      uint64_t v87 = v191;
      id v88 = v188;
      uint64_t v89 = (uint64_t)v195;
      *(void *)v195 = 8;
      *(unsigned char *)(v89 + 8) = 2;
      swift_storeEnumTagMultiPayload();
      v196(v89);
      sub_1ACAB2EF0(v78, v52);
    }
    sub_1ACA50E78(v89, &qword_1E99F5388);
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v88, v87);
  }
LABEL_13:
  if (qword_1EB76D5B8 != -1) {
LABEL_45:
  }
    swift_once();
  uint64_t v62 = sub_1ACE754C8();
  __swift_project_value_buffer(v62, (uint64_t)qword_1EB76D598);
  unint64_t v63 = v192;
  sub_1ACD46E10(v44, (uint64_t)v192, type metadata accessor for FairPlayMigrationData);
  uint64_t v64 = v193;
  sub_1ACD46E10(v44, v193, type metadata accessor for FairPlayMigrationData);
  uint64_t v65 = sub_1ACE75498();
  os_log_type_t v66 = sub_1ACE76BE8();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    aBlock[0] = v68;
    *(_DWORD *)uint64_t v67 = 136315907;
    uint64_t v200 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
    sub_1ACE76FF8();
    *(_WORD *)(v67 + 12) = 2160;
    uint64_t v200 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v67 + 22) = 2049;
    uint64_t v69 = *v63;
    sub_1ACD470D0((uint64_t)v63, type metadata accessor for FairPlayMigrationData);
    uint64_t v200 = v69;
    sub_1ACE76FF8();
    *(_WORD *)(v67 + 32) = 2082;
    if (*(void *)(v64 + 32))
    {
      uint64_t v70 = *(void *)(v64 + 24);
      unint64_t v71 = *(void *)(v64 + 32);
    }
    else
    {
      unint64_t v71 = 0xE300000000000000;
      uint64_t v70 = 7104878;
    }
    swift_bridgeObjectRetain();
    uint64_t v200 = sub_1ACA3189C(v70, v71, aBlock);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACD470D0(v64, type metadata accessor for FairPlayMigrationData);
    _os_log_impl(&dword_1AC9D5000, v65, v66, "%s Unable to migrate %{private,mask.hash}lld, no or invalid asset url (%{public}s) found.", (uint8_t *)v67, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v68, -1, -1);
    MEMORY[0x1AD11B340](v67, -1, -1);
  }
  else
  {
    sub_1ACD470D0((uint64_t)v63, type metadata accessor for FairPlayMigrationData);
    sub_1ACD470D0(v64, type metadata accessor for FairPlayMigrationData);
  }

  uint64_t v72 = (uint64_t)v195;
  *(void *)v195 = 4;
  *(unsigned char *)(v72 + 8) = 2;
  swift_storeEnumTagMultiPayload();
  v196(v72);
  return sub_1ACA50E78(v72, &qword_1E99F5388);
}

uint64_t sub_1ACD3FA34(void *a1, uint64_t a2, char a3, void (*a4)(void), uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5388);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *(void *)uint64_t v20 = a1;
    v20[8] = a2;
    swift_storeEnumTagMultiPayload();
    sub_1ACBFC4D0(a1, a2);
  }
  else
  {
    uint64_t v36 = a11;
    unint64_t v37 = a9;
    uint64_t v35 = *a6;
    uint64_t v21 = (int *)type metadata accessor for FairPlayMigrationData.ValidatedData(0);
    uint64_t v22 = v21[7];
    uint64_t v34 = a8;
    uint64_t v23 = a4;
    uint64_t v24 = &v20[v22];
    uint64_t v25 = sub_1ACE74F28();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, a10, v25);
    uint64_t v26 = &v20[v21[8]];
    uint64_t v27 = sub_1ACE750A8();
    uint64_t v28 = v26;
    a4 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v28, v36, v27);
    uint64_t v29 = v34;
    *(void *)uint64_t v20 = v35;
    *((void *)v20 + 1) = a7;
    unint64_t v30 = v37;
    *((void *)v20 + 2) = v29;
    *((void *)v20 + 3) = v30;
    uint64_t v31 = &v20[v21[9]];
    *(void *)uint64_t v31 = a1;
    *((void *)v31 + 1) = a2;
    swift_storeEnumTagMultiPayload();
    sub_1ACD46D98(a1, a2, 0);
    id v32 = a7;
    sub_1ACA3985C(v29, v30);
  }
  a4(v20);
  return sub_1ACA50E78((uint64_t)v20, &qword_1E99F5388);
}

uint64_t sub_1ACD3FC38(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = a1;
  v5[3] = a2;
  v5[4] = &v12;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1ACD47168;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1ACD471EC;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACC48764;
  aBlock[3] = &block_descriptor_144;
  uint64_t v7 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_enumerateKeyEntriesUsingBlock_, v7);
  _Block_release(v7);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

id sub_1ACD3FDA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75EC8();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4FBCBF0], v4, v6);
  id v10 = v9;
  LOBYTE(v9) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if (v9)
  {
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = sub_1ACE754C8();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D598);
  uint64_t v12 = sub_1ACE75498();
  os_log_type_t v13 = sub_1ACE76BD8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v14 = 136315651;
    uint64_t v17 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v18);
    sub_1ACE76FF8();
    *(_WORD *)(v14 + 12) = 2160;
    uint64_t v17 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v14 + 22) = 2049;
    uint64_t v17 = a1;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v12, v13, "%s Removing legacy key for %{private,mask.hash}lld", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v15, -1, -1);
    MEMORY[0x1AD11B340](v14, -1, -1);
  }

  return objc_msgSend(*(id *)(v2 + OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage), sel_removeKeyDataForStoreTrackID_, a1);
}

uint64_t sub_1ACD4006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = sub_1ACE75EC8();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v4 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v10 + 104))(v13, *MEMORY[0x1E4FBCBF0], v9, v11);
  id v15 = v14;
  LOBYTE(v14) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  if (v14)
  {
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = sub_1ACE754C8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D598);
  uint64_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76BD8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = ObjectType;
    uint64_t v21 = a2;
    uint64_t v22 = v20;
    uint64_t v30 = v20;
    *(_DWORD *)uint64_t v19 = 136315651;
    uint64_t v29 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v30);
    sub_1ACE76FF8();
    *(_WORD *)(v19 + 12) = 2160;
    uint64_t v29 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v19 + 22) = 2049;
    uint64_t v29 = a1;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "%s Invalidating legacy key for %{private,mask.hash}lld", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    a2 = v21;
    uint64_t ObjectType = v28;
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);
  }

  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v24;
  v25[3] = a2;
  v25[4] = a3;
  void v25[5] = ObjectType;
  swift_retain();
  swift_retain();
  sub_1ACC360E4(a1, (uint64_t)sub_1ACD46364, (uint64_t)v25);
  swift_release();
  return swift_release();
}

uint64_t sub_1ACD403D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __n128 v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1AD11B470](a2 + 16);
  if (!v16) {
    return a3(0, 258);
  }
  uint64_t v17 = (void *)v16;
  uint64_t v28 = a3;
  uint64_t v29 = v13;
  uint64_t v30 = v12;
  if (*(void *)(a1 + 16))
  {
    uint64_t v27 = v9;
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1ACE754C8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB76D598);
    uint64_t v19 = sub_1ACE75498();
    os_log_type_t v20 = sub_1ACE76BE8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      aBlock[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v26 = v21 + 4;
      uint64_t v31 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v19, v20, "%s Unable to invalidate and remove legacy FairPlay key.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v22, -1, -1);
      MEMORY[0x1AD11B340](v21, -1, -1);
    }

    uint64_t v9 = v27;
  }
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v28;
  *(void *)(v23 + 24) = a4;
  aBlock[4] = (uint64_t)sub_1ACD463A8;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_66_0;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v11, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);

  return swift_release();
}

uint64_t sub_1ACD4082C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __n128 v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1AD11B470](a2 + 16);
  if (!v16) {
    return a3(0, 2, 1);
  }
  uint64_t v17 = (void *)v16;
  v21[1] = *(void *)(v16 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a3;
  v18[4] = a4;
  aBlock[4] = sub_1ACD46D8C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_131;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1ACE75E08();
  v21[2] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  v21[0] = v12;
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, void))(v13 + 8))(v15, v21[0]);

  return swift_release();
}

uint64_t sub_1ACD40B3C(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  if (!a1 || !a1[2]) {
    return a2(6, 2, 1);
  }
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  swift_bridgeObjectRetain();
  a2(v3, v4, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ACD40BCC(unint64_t a1, char a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5, uint64_t a6)
{
  uint64_t v68 = a6;
  uint64_t v11 = sub_1ACE75DC8();
  uint64_t v12 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v71 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1ACE75E48();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v69 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v77 = (char *)MEMORY[0x1AD11B470](a3 + 16);
  if (v77)
  {
    if (a2)
    {
      id v29 = (id)a1;
      if (qword_1EB76D5B8 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1ACE754C8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EB76D598);
      id v31 = (id)a1;
      id v32 = (id)a1;
      uint64_t v33 = sub_1ACE75498();
      os_log_type_t v34 = sub_1ACE76BE8();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = a4;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        aBlock[0] = v37;
        *(_DWORD *)uint64_t v36 = 136315394;
        uint64_t v78 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        sub_1ACE76FF8();
        *(_WORD *)(v36 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v38 = sub_1ACE77A98();
        uint64_t v78 = sub_1ACA3189C(v38, v39, aBlock);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACAC1E88((id)a1, 1);
        sub_1ACAC1E88((id)a1, 1);
        _os_log_impl(&dword_1AC9D5000, v33, v34, "%s Unable to rollback, no episode data found with error %{public}s.", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v37, -1, -1);
        uint64_t v40 = v36;
        a4 = v35;
        MEMORY[0x1AD11B340](v40, -1, -1);
      }
      else
      {
        sub_1ACAC1E88((id)a1, 1);
        sub_1ACAC1E88((id)a1, 1);
      }

      id v41 = (id)a1;
      a4(a1, 1, 1);

      sub_1ACAC1E88((id)a1, 1);
      sub_1ACAC1E88((id)a1, 1);
    }
    else
    {
      uint64_t v67 = a5;
      swift_bridgeObjectRetain();
      dispatch_group_t v74 = dispatch_group_create();
      uint64_t v15 = swift_allocObject();
      uint64_t v16 = MEMORY[0x1E4FBC860];
      uint64_t v76 = v15;
      *(void *)(v15 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v17 = swift_allocObject();
      uint64_t v75 = (__objc2_class **)v17;
      *(void *)(v17 + 16) = v16;
      uint64_t v65 = (void *)(v17 + 16);
      if (a1 >> 62)
      {
LABEL_36:
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1ACE77508();
        sub_1ACAC1E88((id)a1, 0);
      }
      else
      {
        uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      os_log_type_t v66 = v12;
      if (v18)
      {
        uint64_t v63 = v11;
        uint64_t v64 = a4;
        unint64_t v73 = a1 & 0xC000000000000001;
        uint64_t v11 = 4;
        uint64_t v19 = v76;
        while (1)
        {
          a4 = (void (*)(void, void, void))(v11 - 4);
          if (v73) {
            os_log_type_t v20 = (void (**)(char *, uint64_t))MEMORY[0x1AD119490](v11 - 4, a1);
          }
          else {
            os_log_type_t v20 = (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v11);
          }
          uint64_t v12 = v20;
          uint64_t v21 = v11 - 3;
          if (__OFADD__(a4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (!*(void (**)(char *, uint64_t))((char *)v20 + OBJC_IVAR___PFFairPlayAsset_keyStore)) {
            break;
          }
          self;
          uint64_t v22 = swift_dynamicCastObjCClass();
          if (!v22) {
            break;
          }
          uint64_t v23 = (char *)v22;
          swift_unknownObjectRetain();
          dispatch_group_t v24 = v74;
          dispatch_group_enter(v74);
          uint64_t v25 = v12;
          swift_retain();
          uint64_t v26 = (void *)a1;
          uint64_t v27 = v75;
          swift_retain();
          uint64_t v28 = v24;
          sub_1ACD45100(v23, (uint64_t)v77, v19, v25, v27, v28);
          swift_unknownObjectRelease();

          a1 = (unint64_t)v26;
          swift_release();
          swift_release();

          ++v11;
          if (v21 == v18)
          {
            sub_1ACAC1E88(v26, 0);
            a4 = v64;
            uint64_t v11 = v63;
            goto LABEL_27;
          }
        }
        sub_1ACAC1E88((id)a1, 0);
        if (qword_1EB76D5B8 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_1ACE754C8();
        __swift_project_value_buffer(v42, (uint64_t)qword_1EB76D598);
        uint64_t v43 = v12;
        uint64_t v44 = sub_1ACE75498();
        os_log_type_t v45 = sub_1ACE76BE8();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          aBlock[0] = v47;
          *(_DWORD *)uint64_t v46 = 136315651;
          uint64_t v78 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
          sub_1ACE76FF8();
          *(_WORD *)(v46 + 12) = 2160;
          uint64_t v78 = 1752392040;
          sub_1ACE76FF8();
          *(_WORD *)(v46 + 22) = 2049;
          uint64_t v78 = *(uint64_t *)((char *)v43 + OBJC_IVAR___PFFairPlayAsset_adamID);
          sub_1ACE76FF8();

          _os_log_impl(&dword_1AC9D5000, v44, v45, "%s Unable to migrate %{private,mask.hash}lld, no key store found.", (uint8_t *)v46, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1AD11B340](v47, -1, -1);
          MEMORY[0x1AD11B340](v46, -1, -1);
        }
        else
        {
        }
        a4 = v64;
        uint64_t v48 = v68;
        uint64_t v49 = *(uint64_t *)((char *)v43 + OBJC_IVAR___PFFairPlayAsset_adamID);
        id v50 = (void **)v65;
        swift_beginAccess();
        uint64_t v51 = *v50;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char *v50 = v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v51 = sub_1ACA42BF4(0, v51[2] + 1, 1, v51);
          *uint64_t v65 = v51;
        }
        unint64_t v54 = v51[2];
        unint64_t v53 = v51[3];
        if (v54 >= v53 >> 1)
        {
          uint64_t v51 = sub_1ACA42BF4((void *)(v53 > 1), v54 + 1, 1, v51);
          *uint64_t v65 = v51;
        }
        v51[2] = v54 + 1;
        v51[v54 + 4] = v49;
        swift_endAccess();

        uint64_t v11 = v63;
      }
      else
      {
        sub_1ACAC1E88((id)a1, 0);
LABEL_27:
        uint64_t v48 = v68;
      }
      id v55 = v77;
      unint64_t v73 = *(void *)&v77[OBJC_IVAR___PFFairPlayMigrationController_internalQueue];
      os_log_type_t v56 = (void *)swift_allocObject();
      BOOL v57 = v75;
      v56[2] = v76;
      v56[3] = v57;
      uint64_t v58 = v67;
      v56[4] = a4;
      v56[5] = v58;
      v56[6] = v48;
      aBlock[4] = (uint64_t)sub_1ACD44AD0;
      aBlock[5] = (uint64_t)v56;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1ACA6DA9C;
      aBlock[3] = (uint64_t)&block_descriptor_40_0;
      uint64_t v59 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v60 = v69;
      sub_1ACE75E08();
      uint64_t v78 = MEMORY[0x1E4FBC860];
      sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
      sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
      uint64_t v61 = v71;
      sub_1ACE770E8();
      dispatch_group_t v62 = v74;
      sub_1ACE76C68();
      _Block_release(v59);

      v66[1](v61, v11);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v72);

      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    a4(0, 2, 1);
  }
}

void sub_1ACD415EC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v7 = *(void *)(a4 + OBJC_IVAR___PFFairPlayAsset_adamID);
  if ((a2 & 0x100) != 0) {
    uint64_t v8 = (void **)(a5 + 16);
  }
  else {
    uint64_t v8 = (void **)(a3 + 16);
  }
  swift_beginAccess();
  uint64_t v9 = *v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_1ACA42BF4(0, v9[2] + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v12 = v9[2];
  unint64_t v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_1ACA42BF4((void *)(v11 > 1), v12 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  void v9[2] = v12 + 1;
  v9[v12 + 4] = v7;
  swift_endAccess();
  dispatch_group_leave(a6);
}

uint64_t sub_1ACD416E0(uint64_t a1, uint64_t a2, void (*a3)(void, void, void), uint64_t a4, uint64_t a5, const char *a6)
{
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v10 = (uint64_t *)(a1 + 16);
  unint64_t v11 = (uint64_t *)(a2 + 16);
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB76D598);
  swift_retain_n();
  swift_retain_n();
  uint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76C08();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v29[0] = v27;
    *(_DWORD *)uint64_t v15 = 136316163;
    sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, v29);
    sub_1ACE76FF8();
    *(_WORD *)(v15 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v15 + 22) = 2081;
    swift_beginAccess();
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v28 = a3;
    uint64_t v17 = MEMORY[0x1AD118740](v16, MEMORY[0x1E4FBC1C8]);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v17, v19, v29);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v15 + 42) = 2081;
    swift_beginAccess();
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x1AD118740](v20, MEMORY[0x1E4FBC1C8]);
    unint64_t v23 = v22;
    a3 = v28;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v21, v23, v29);
    unint64_t v11 = (uint64_t *)(a2 + 16);
    sub_1ACE76FF8();
    swift_release_n();
    uint64_t v10 = (uint64_t *)(a1 + 16);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v13, v14, a6, (uint8_t *)v15, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v27, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  swift_beginAccess();
  uint64_t v24 = *v10;
  swift_beginAccess();
  uint64_t v25 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v24, v25, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1ACD41A94(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v11 = a3 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1AD11B470](v11);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    sub_1ACD41B2C(a6, a7, a4, a5);
  }
  else
  {
    a4(0, 258);
  }
}

uint64_t sub_1ACD41B2C(void *a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE750A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = MEMORY[0x1F4188790](v16).n128_u64[0];
  unint64_t v19 = (char *)&v70 - v18;
  id v20 = objc_msgSend(a1, sel_adamID, v17);
  if (v20)
  {
    uint64_t v21 = v20;
    id v79 = objc_msgSend(v20, sel_integerValue);

    id v22 = objc_msgSend(a1, sel_keyData);
    if (v22)
    {
      unint64_t v23 = v22;
      uint64_t v76 = a4;
      uint64_t v77 = sub_1ACE74F88();
      unint64_t v78 = v24;

      id v25 = objc_msgSend(a1, sel_renewalDate);
      if (v25)
      {
        uint64_t v26 = v25;
        sub_1ACE75078();

        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v27(v11, v15, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v27(v19, v11, v12);
          id v28 = objc_msgSend(a1, sel_accountDSID);
          if (v28)
          {
            id v29 = v28;
            id v75 = *(id *)(v5 + OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage);
            id v30 = objc_msgSend(a1, sel_identifier);
            if (!v30)
            {
              sub_1ACE761B8();
              id v30 = (id)sub_1ACE76178();
              swift_bridgeObjectRelease();
            }
            uint64_t v74 = sub_1ACE74F68();
            uint64_t v73 = sub_1ACE75008();
            id v72 = objc_msgSend(v29, sel_longLongValue);
            uint64_t v70 = *(void *)(v5 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
            id v31 = (void *)swift_allocObject();
            id v71 = v29;
            id v32 = v79;
            uint64_t v33 = (void *)v80;
            v31[2] = v80;
            v31[3] = a1;
            os_log_type_t v34 = v81;
            v31[4] = v32;
            v31[5] = v34;
            v31[6] = v76;
            v31[7] = ObjectType;
            aBlock[4] = (uint64_t)sub_1ACD46428;
            aBlock[5] = (uint64_t)v31;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1ACD42B04;
            aBlock[3] = (uint64_t)&block_descriptor_72;
            uint64_t v35 = _Block_copy(aBlock);
            id v36 = v33;
            id v37 = a1;
            swift_retain();
            swift_release();
            id v38 = v32;
            unint64_t v39 = (void *)v74;
            uint64_t v40 = (void *)v73;
            objc_msgSend(v75, sel_saveKeyDataWithKeyIdentifier_storeTrackID_keyData_renewalDate_dsid_responseQueue_completion_, v30, v38, v74, v73, v72, v70, v35);
            sub_1ACA50850(v77, v78);
            _Block_release(v35);
          }
          else
          {
            if (qword_1EB76D5B8 != -1) {
              swift_once();
            }
            uint64_t v64 = sub_1ACE754C8();
            __swift_project_value_buffer(v64, (uint64_t)qword_1EB76D598);
            uint64_t v65 = sub_1ACE75498();
            os_log_type_t v66 = sub_1ACE76BE8();
            if (os_log_type_enabled(v65, v66))
            {
              uint64_t v67 = swift_slowAlloc();
              uint64_t v68 = swift_slowAlloc();
              aBlock[0] = v68;
              *(_DWORD *)uint64_t v67 = 136315651;
              uint64_t v83 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
              sub_1ACE76FF8();
              *(_WORD *)(v67 + 12) = 2160;
              uint64_t v83 = 1752392040;
              sub_1ACE76FF8();
              *(_WORD *)(v67 + 22) = 2049;
              uint64_t v83 = (uint64_t)v79;
              sub_1ACE76FF8();
              _os_log_impl(&dword_1AC9D5000, v65, v66, "%s Unable to rollback %{private,mask.hash}ld, no DSID found.", (uint8_t *)v67, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x1AD11B340](v68, -1, -1);
              MEMORY[0x1AD11B340](v67, -1, -1);
            }

            unint64_t v69 = v78;
            v81(1, 258);
            sub_1ACA50850(v77, v69);
          }
          return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }
      sub_1ACA50E78((uint64_t)v11, (uint64_t *)&unk_1EB773140);
      if (qword_1EB76D5B8 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1ACE754C8();
      __swift_project_value_buffer(v57, (uint64_t)qword_1EB76D598);
      uint64_t v58 = sub_1ACE75498();
      os_log_type_t v59 = sub_1ACE76BE8();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        aBlock[0] = v61;
        *(_DWORD *)uint64_t v60 = 136315651;
        uint64_t v83 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        sub_1ACE76FF8();
        *(_WORD *)(v60 + 12) = 2160;
        uint64_t v83 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v60 + 22) = 2049;
        uint64_t v83 = (uint64_t)v79;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v58, v59, "%s Unable to rollback %{private,mask.hash}ld, no renewal date found.", (uint8_t *)v60, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v61, -1, -1);
        MEMORY[0x1AD11B340](v60, -1, -1);
      }

      uint64_t v63 = v77;
      unint64_t v62 = v78;
      v81(5, 258);
      return sub_1ACA50850(v63, v62);
    }
    else
    {
      if (qword_1EB76D5B8 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1ACE754C8();
      __swift_project_value_buffer(v51, (uint64_t)qword_1EB76D598);
      unint64_t v52 = sub_1ACE75498();
      os_log_type_t v53 = sub_1ACE76BE8();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        aBlock[0] = v55;
        *(_DWORD *)uint64_t v54 = 136315651;
        uint64_t v83 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
        sub_1ACE76FF8();
        *(_WORD *)(v54 + 12) = 2160;
        uint64_t v83 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v54 + 22) = 2049;
        uint64_t v83 = (uint64_t)v79;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v52, v53, "%s Unable to rollback %{private,mask.hash}ld, no key data found.", (uint8_t *)v54, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v55, -1, -1);
        MEMORY[0x1AD11B340](v54, -1, -1);
      }

      return ((uint64_t (*)(uint64_t, uint64_t))v81)(3, 258);
    }
  }
  else
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1ACE754C8();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EB76D598);
    id v42 = a1;
    uint64_t v43 = sub_1ACE75498();
    os_log_type_t v44 = sub_1ACE76BE8();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      aBlock[0] = v80;
      *(_DWORD *)uint64_t v45 = 136315651;
      uint64_t v83 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
      sub_1ACE76FF8();
      *(_WORD *)(v45 + 12) = 2160;
      uint64_t v83 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v45 + 22) = 2081;
      id v46 = objc_msgSend(v42, sel_identifier);
      uint64_t v47 = sub_1ACE761B8();
      unint64_t v49 = v48;

      uint64_t v83 = sub_1ACA3189C(v47, v49, aBlock);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v43, v44, "%s Unable to rollback %{private,mask.hash}s, no adam ID found.", (uint8_t *)v45, 0x20u);
      uint64_t v50 = v80;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v50, -1, -1);
      MEMORY[0x1AD11B340](v45, -1, -1);
    }
    else
    {
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v81)(2, 258);
  }
}

void sub_1ACD42684(char a1, void *a2, id a3, uint64_t a4, void (*a5)(void, void))
{
  if (a1)
  {
    id v7 = objc_msgSend(a3, sel_identifier);
    if (!v7)
    {
      sub_1ACE761B8();
      id v7 = (id)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    id v8 = objc_msgSend(a2, sel_removeKeyForIdentifier_, v7);

    if (v8)
    {
      uint64_t v9 = qword_1EB76D5B8;
      id v10 = v8;
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1ACE754C8();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D598);
      id v12 = v10;
      uint64_t v13 = sub_1ACE75498();
      os_log_type_t v14 = sub_1ACE76BE8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        id v25 = a5;
        uint64_t v16 = swift_slowAlloc();
        v26[0] = v16;
        *(_DWORD *)uint64_t v15 = 136315907;
        sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, v26);
        sub_1ACE76FF8();
        *(_WORD *)(v15 + 12) = 2160;
        sub_1ACE76FF8();
        *(_WORD *)(v15 + 22) = 2049;
        sub_1ACE76FF8();
        *(_WORD *)(v15 + 32) = 2082;
        swift_getErrorValue();
        uint64_t v17 = sub_1ACE77A98();
        sub_1ACA3189C(v17, v18, v26);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AC9D5000, v13, v14, "%s Unable to remove key from key store for %{private,mask.hash}ld with error %{public}s.", (uint8_t *)v15, 0x2Au);
        swift_arrayDestroy();
        uint64_t v19 = v16;
        a5 = v25;
        MEMORY[0x1AD11B340](v19, -1, -1);
        MEMORY[0x1AD11B340](v15, -1, -1);
      }
      else
      {
      }
    }
    a5(0, 0);
  }
  else
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1ACE754C8();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D598);
    uint64_t v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v26[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315651;
      sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, v26);
      sub_1ACE76FF8();
      *(_WORD *)(v23 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v23 + 22) = 2049;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v21, v22, "%s Unable to rollback %{private,mask.hash}ld, could not save in the database.", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v24, -1, -1);
      MEMORY[0x1AD11B340](v23, -1, -1);
    }

    a5(0, 256);
  }
}

uint64_t sub_1ACD42B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1ACD42B58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = *(void **)(v3 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7, v9);
  id v13 = v12;
  LOBYTE(v12) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = sub_1ACE754C8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB76D598);
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76BD8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    v27[1] = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v15, v16, "%s Determining reattempting migration status.", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v18, -1, -1);
    MEMORY[0x1AD11B340](v17, -1, -1);
  }

  id v19 = objc_msgSend(self, sel_sharedInstance);
  id v20 = objc_msgSend(v19, sel_privateQueueContext);

  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  void v21[3] = a2;
  v21[4] = ObjectType;
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v22;
  v23[3] = sub_1ACD46534;
  v23[4] = v21;
  v23[5] = v20;
  v23[6] = ObjectType;
  aBlock[4] = (uint64_t)sub_1ACD46588;
  aBlock[5] = (uint64_t)v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_85_1;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v25 = v20;
  swift_release();
  objc_msgSend(v25, sel_performBlock_, v24);
  _Block_release(v24);

  return swift_release();
}

uint64_t sub_1ACD42F38(char a1, uint64_t (*a2)(uint64_t))
{
  if ((a1 & 1) == 0)
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1ACE754C8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB76D598);
    __n128 v6 = sub_1ACE75498();
    os_log_type_t v12 = sub_1ACE76BD8();
    if (!os_log_type_enabled(v6, v12)) {
      goto LABEL_12;
    }
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v22);
    sub_1ACE76FF8();
    *(_WORD *)(v13 + 12) = 1026;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v6, v12, "%s Should not reattempt migration, hasLegacyKeys: %{BOOL,public}d.", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v14, -1, -1);
    uint64_t v10 = v13;
    goto LABEL_11;
  }
  id v3 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v4 = (uint64_t)objc_msgSend(v3, sel_fairPlayMigrationRetryCount);

  if (v4 > 5)
  {
    if (qword_1EB76D5B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB76D598);
    __n128 v6 = sub_1ACE75498();
    os_log_type_t v7 = sub_1ACE76BD8();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_12;
    }
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v22);
    sub_1ACE76FF8();
    *(_WORD *)(v8 + 12) = 2050;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v6, v7, "%s Should not reattempt migration, migrationRetryCount: %{public}ld.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v9, -1, -1);
    uint64_t v10 = v8;
LABEL_11:
    MEMORY[0x1AD11B340](v10, -1, -1);
LABEL_12:

    uint64_t v15 = 0;
    return a2(v15);
  }
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1ACE754C8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D598);
  uint64_t v18 = sub_1ACE75498();
  os_log_type_t v19 = sub_1ACE76BD8();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v22);
    sub_1ACE76FF8();
    *(_WORD *)(v20 + 12) = 2048;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v18, v19, "%s Migration should be reattempted, migrationRetryCount: %ld.", (uint8_t *)v20, 0x16u);
    uint64_t v15 = 1;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v21, -1, -1);
    MEMORY[0x1AD11B340](v20, -1, -1);
  }
  else
  {

    uint64_t v15 = 1;
  }
  return a2(v15);
}

uint64_t sub_1ACD433EC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v30 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1AD11B470](a1 + 16);
  if (!v13) {
    return a2();
  }
  uint64_t v14 = (char *)v13;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v29 = v10;
  sub_1ACE761B8();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  os_log_type_t v16 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_initWithEntityName_, v16);

  sub_1ACA50D4C(0, &qword_1EB772598);
  uint64_t v18 = sub_1ACE76ED8();
  id v28 = v17;
  uint64_t v19 = v18;
  v25[2] = *(void *)&v14[OBJC_IVAR___PFFairPlayMigrationController_internalQueue];
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v27;
  v20[2] = v26;
  v20[3] = v21;
  v20[4] = v19;
  aBlock[4] = sub_1ACD465C4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_97_0;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v23 = v30;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v23, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v9);

  return swift_release();
}

id FairPlayMigrationController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ACD43BF0(char *a1, char *a2)
{
  return sub_1ACCF65C4(*a1, *a2);
}

unint64_t sub_1ACD43C00()
{
  unint64_t result = qword_1E99F5350;
  if (!qword_1E99F5350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5350);
  }
  return result;
}

uint64_t sub_1ACD43C54()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD43CB4()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD43CF8()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::FairPlayVersion_optional sub_1ACD43D54(Swift::String *a1)
{
  return FairPlayVersion.init(rawValue:)(*a1);
}

void sub_1ACD43D60(uint64_t *a1@<X8>)
{
  uint64_t v2 = 12662;
  if (*v1) {
    uint64_t v2 = 12918;
  }
  *a1 = v2;
  a1[1] = 0xE200000000000000;
}

uint64_t type metadata accessor for FairPlayMigrationController()
{
  return self;
}

uint64_t method lookup function for FairPlayMigrationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayMigrationController);
}

unsigned char *storeEnumTagSinglePayload for FairPlayVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD43E88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayVersion()
{
  return &type metadata for FairPlayVersion;
}

uint64_t sub_1ACD43EC0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ACD43EF8(void *a1, unsigned char *a2, uint64_t a3, uint64_t a4, void **a5)
{
  id v10 = objc_msgSend(a1, sel_identifier);
  uint64_t v11 = sub_1ACE761B8();
  uint64_t v13 = v12;

  if (v11 == a3 && v13 == a4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v15 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_8:
    os_log_type_t v16 = *a5;
    *a5 = a1;
    id v17 = a1;

    *a2 = 1;
  }
}

void sub_1ACD43FC0(uint64_t *a1, id a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a4;
  id v42 = a3;
  uint64_t v8 = type metadata accessor for FairPlayMigrationData.ValidatedData(0);
  MEMORY[0x1F4188790](v8);
  id v10 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v41 - v12);
  uint64_t v14 = sub_1ACE75EC8();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(a5 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  void *v18 = v19;
  (*(void (**)(void *, void, uint64_t, __n128))(v15 + 104))(v18, *MEMORY[0x1E4FBCBF0], v14, v16);
  id v20 = v19;
  LOBYTE(v19) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v21 = (void *)sub_1ACE74F68();
  uint64_t v22 = (void *)sub_1ACE76178();
  uint64_t v23 = *a1;
  id v24 = objc_allocWithZone(MEMORY[0x1E4F28ED0]);
  id v25 = objc_msgSend(v24, sel_initWithLongLong_, v23, v41);
  uint64_t v26 = (void *)sub_1ACE75008();
  a2 = objc_msgSend(a2, sel_saveKey_forIdentifier_adamID_withRenewalDate_accountDSID_keyServerProtocolType_, v21, v22, v25, v26, a1[1], 2);

  if (a2)
  {
    uint64_t v27 = qword_1EB76D5B8;
    id v10 = (uint64_t *)a2;
    if (v27 == -1)
    {
LABEL_4:
      uint64_t v28 = sub_1ACE754C8();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EB76D598);
      sub_1ACD46E10((uint64_t)a1, (uint64_t)v13, type metadata accessor for FairPlayMigrationData.ValidatedData);
      uint64_t v29 = sub_1ACE75498();
      os_log_type_t v30 = sub_1ACE76BE8();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        v44[0] = v32;
        *(_DWORD *)uint64_t v31 = 136315651;
        uint64_t v43 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, v44);
        sub_1ACE76FF8();
        *(_WORD *)(v31 + 12) = 2160;
        uint64_t v43 = 1752392040;
        sub_1ACE76FF8();
        *(_WORD *)(v31 + 22) = 2049;
        uint64_t v33 = *v13;
        sub_1ACD470D0((uint64_t)v13, type metadata accessor for FairPlayMigrationData.ValidatedData);
        uint64_t v43 = v33;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v29, v30, "%s Unable to migrate %{private,mask.hash}lld, unable to save with error.", (uint8_t *)v31, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v32, -1, -1);
        MEMORY[0x1AD11B340](v31, -1, -1);
      }
      else
      {
        sub_1ACD470D0((uint64_t)v13, type metadata accessor for FairPlayMigrationData.ValidatedData);
      }

      uint64_t v40 = v10;
      v42(a2, 256);

      return;
    }
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  sub_1ACD3FDA8(v23);
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1ACE754C8();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EB76D598);
  sub_1ACD46E10((uint64_t)a1, (uint64_t)v10, type metadata accessor for FairPlayMigrationData.ValidatedData);
  uint64_t v35 = sub_1ACE75498();
  os_log_type_t v36 = sub_1ACE76BD8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v44[0] = v38;
    *(_DWORD *)uint64_t v37 = 136315651;
    uint64_t v43 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, v44);
    sub_1ACE76FF8();
    *(_WORD *)(v37 + 12) = 2160;
    uint64_t v43 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v37 + 22) = 2049;
    uint64_t v39 = *v10;
    sub_1ACD470D0((uint64_t)v10, type metadata accessor for FairPlayMigrationData.ValidatedData);
    uint64_t v43 = v39;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v35, v36, "%s Finished migrating %{private,mask.hash}lld.", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v38, -1, -1);
    MEMORY[0x1AD11B340](v37, -1, -1);
  }
  else
  {
    sub_1ACD470D0((uint64_t)v10, type metadata accessor for FairPlayMigrationData.ValidatedData);
  }

  v42(0, 0);
}

id sub_1ACD44620(void *a1, void *a2, void *a3, uint64_t a4, void *a5, char *a6)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v35 = a2;
  os_log_type_t v36 = a3;
  uint64_t v34 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v33 = sub_1ACE76CE8();
  uint64_t v7 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v32 = OBJC_IVAR___PFFairPlayMigrationController_internalQueue;
  v31[1] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v12 = a6;
  sub_1ACE75E08();
  v42[0] = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v33);
  uint64_t v13 = (void *)sub_1ACE76D28();
  *(void *)&a6[v32] = v13;
  uint64_t v15 = v34;
  uint64_t v14 = v35;
  *(void *)&v12[OBJC_IVAR___PFFairPlayMigrationController_metadataLoader] = v34;
  *(void *)&v12[OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage] = v14;
  __n128 v16 = (objc_class *)type metadata accessor for DispatchingFairPlayInvalidationManaging();
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  uint64_t v18 = v36;
  *(void *)&v17[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_wrappedInstance] = v36;
  *(void *)&v17[OBJC_IVAR___PFDispatchingFairPlayInvalidationManaging_responseQueue] = v13;
  v43.receiver = v17;
  v43.super_class = v16;
  id v19 = v15;
  id v20 = v14;
  id v21 = v13;
  id v22 = v18;
  *(void *)&v12[OBJC_IVAR___PFFairPlayMigrationController_invalidationManager] = objc_msgSendSuper2(&v43, sel_init);
  v42[3] = type metadata accessor for CoreDataFairPlayEpisodeDataFetcher();
  v42[4] = &off_1F039A7F0;
  v42[0] = v37;
  uint64_t v23 = (objc_class *)type metadata accessor for DispatchingFairPlayEpisodeDataFetching();
  id v24 = (char *)objc_allocWithZone(v23);
  sub_1ACA3E158((uint64_t)v42, (uint64_t)&v24[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_wrappedInstance]);
  *(void *)&v24[OBJC_IVAR____TtC18PodcastsFoundation38DispatchingFairPlayEpisodeDataFetching_responseQueue] = v21;
  v41.receiver = v24;
  v41.super_class = v23;
  id v25 = v21;
  swift_retain();
  id v26 = objc_msgSendSuper2(&v41, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);

  uint64_t v27 = &v12[OBJC_IVAR___PFFairPlayMigrationController_fairPlayEpisodeDataFetcher];
  *((void *)v27 + 3) = v23;
  *((void *)v27 + 4) = &off_1F0394770;
  *(void *)uint64_t v27 = v26;
  uint64_t v28 = v38;
  *(void *)&v12[OBJC_IVAR___PFFairPlayMigrationController_legacyDownloadRenewalManager] = v38;
  id v29 = v28;

  v40.receiver = v12;
  v40.super_class = ObjectType;
  return objc_msgSendSuper2(&v40, sel_init);
}

uint64_t sub_1ACD449F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD44A2C(void *a1, unsigned __int8 a2, char a3)
{
  return sub_1ACD3BF30(a1, a2, a3 & 1, *(uint64_t (**)(void))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), "%s Finished rollback.", "%s Rollback failed with error %s.");
}

uint64_t sub_1ACD44A60()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACD44A7C(uint64_t a1, char a2)
{
  return sub_1ACD46664(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1ACD40BCC);
}

uint64_t sub_1ACD44A94()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACD44AD0()
{
  return sub_1ACD46910("%s Finished rollback. Successfully rolled back %{private,mask.hash}s, failed to rollback %{private,mask.hash}s");
}

uint64_t sub_1ACD44ADC(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1ACE75EC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a2;
  v14[3] = a3;
  id v42 = a3;
  v14[4] = a4;
  v14[5] = a5;
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  void *v13 = v15;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v16 = a2;
  swift_retain();
  id v17 = v15;
  char v18 = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v18)
  {
    uint64_t v41 = a5;
    if (qword_1EB76D5B8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v19 = sub_1ACE754C8();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB76D598);
  id v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76BD8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v40[1] = v20;
    id v24 = (uint8_t *)v23;
    id v25 = v16;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v44 = v26;
    *(_DWORD *)id v24 = 136315138;
    uint64_t v43 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v44);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v21, v22, "%s Determining migration status.", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v26;
    id v16 = v25;
    MEMORY[0x1AD11B340](v27, -1, -1);
    MEMORY[0x1AD11B340](v24, -1, -1);
  }

  if (qword_1EB76C580 != -1)
  {
    swift_once();
    if (_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0()) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t v35 = sub_1ACE75498();
    os_log_type_t v36 = sub_1ACE76BD8();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v44 = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v43 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v44);
      sub_1ACE76FF8();
      *(_WORD *)(v37 + 12) = 1026;
      LODWORD(v43) = 0;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v35, v36, "%s Migration unnecessary, fairPlayV2Enabled: %{BOOL,public}d.", (uint8_t *)v37, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v38, -1, -1);
      MEMORY[0x1AD11B340](v37, -1, -1);
    }

    v42();
    return swift_release();
  }
  if ((_s18PodcastsFoundation25FairPlayRolloutControllerC9isEnabledSbyF_0() & 1) == 0) {
    goto LABEL_20;
  }
LABEL_7:
  id v28 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  NSUserDefaults.fairPlayVersion.getter((BOOL *)&v44);

  if ((_BYTE)v44) {
    uint64_t v29 = 12918;
  }
  else {
    uint64_t v29 = 12662;
  }
  if (v44)
  {
    char v30 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      sub_1ACD42B58((uint64_t)sub_1ACD46528, (uint64_t)v14);
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = sub_1ACE75498();
  os_log_type_t v32 = sub_1ACE76BD8();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v44 = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v43 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, &v44);
    sub_1ACE76FF8();
    *(_WORD *)(v33 + 12) = 2082;
    uint64_t v43 = sub_1ACA3189C(v29, 0xE200000000000000, &v44);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v31, v32, "%s Should attempt migration, fairPlayVersion: %{public}s.", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v33, -1, -1);
  }

  sub_1ACD3B278(1, (uint64_t)v16, v42, a4, v41);
  return swift_release();
}

void sub_1ACD45100(char *a1, uint64_t a2, uint64_t a3, void *a4, __objc2_class **a5, void *a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v125 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1ACE74F28();
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  uint64_t v124 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v129 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v133 = (char *)&v120 - v18;
  uint64_t v19 = sub_1ACE750A8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v131 = v19;
  uint64_t v132 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v128 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  id v24 = (char *)&v120 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v130 = (char *)&v120 - v26;
  uint64_t v27 = sub_1ACE75EC8();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v30 = (id *)((char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = (void *)swift_allocObject();
  void v31[2] = a3;
  v31[3] = a4;
  v31[4] = a5;
  v31[5] = a6;
  BOOL v138 = v31;
  uint64_t v134 = a2;
  os_log_type_t v32 = *(void **)(a2 + OBJC_IVAR___PFFairPlayMigrationController_internalQueue);
  *char v30 = v32;
  (*(void (**)(void *, void, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E4FBCBF0], v27);
  uint64_t v135 = a3;
  swift_retain();
  id v33 = a4;
  uint64_t v136 = a5;
  uint64_t v137 = (uint64_t)v33;
  swift_retain();
  uint64_t v34 = a6;
  id v35 = v32;
  LOBYTE(a6) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v28 + 8))(v30, v27);
  if ((a6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  id v142 = 0;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = &v142;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_1ACD46288;
  *(void *)(v37 + 24) = v36;
  aBlock[4] = (uint64_t)sub_1ACD462D4;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACC48764;
  aBlock[3] = (uint64_t)&block_descriptor_52;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateKeyEntriesUsingBlock_, v38);
  _Block_release(v38);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v38)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    swift_once();
    goto LABEL_12;
  }
  a5 = &off_1E5E65000;
  if (!v142)
  {
    sub_1ACD415EC(0, 0, v135, v137, (uint64_t)v136, v34);

    uint64_t v63 = self;
    id v64 = objc_msgSend(v63, sel__applePodcastsFoundationSharedUserDefaults);
    goto LABEL_35;
  }
  uint64_t v39 = a1;
  uint64_t v123 = v34;
  uint64_t v34 = v142;
  id v40 = [v34 adamID];
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v122 = v36;
    id v42 = objc_msgSend(v40, sel_longLongValue);

    uint64_t v43 = *(void **)(v134 + OBJC_IVAR___PFFairPlayMigrationController_secureKeyRequestStorage);
    id v44 = [v34 identifier];
    uint64_t v45 = sub_1ACE761B8();
    uint64_t v47 = v46;

    uint64_t v121 = (uint64_t)v42;
    aBlock[0] = (uint64_t)v42;
    uint64_t v48 = sub_1ACE777C8();
    uint64_t v50 = v49;
    id v51 = objc_allocWithZone((Class)type metadata accessor for ContentKeyRequest(0));
    id v52 = sub_1ACC4C37C(v45, v47, v48, v50, 0, 1, 0);
    os_log_type_t v53 = (char *)objc_msgSend(v43, sel_retrieveKeyDataFor_, v52);

    if (!v53)
    {
      sub_1ACD41B2C(v34, (uint64_t)a1, (void (*)(void, void))sub_1ACD46260, (uint64_t)v138);
LABEL_32:

      goto LABEL_33;
    }
    uint64_t v54 = (uint64_t *)&v53[OBJC_IVAR___MTContentKeyResponse_keyData];
    swift_beginAccess();
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    sub_1ACA39848(*v54, v56);
    id v57 = [v34 keyData];
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v59 = sub_1ACE74F88();
      unint64_t v61 = v60;

      id v62 = v133;
      if (v56 >> 60 == 15)
      {
        if (v61 >> 60 == 15) {
          goto LABEL_29;
        }
        goto LABEL_20;
      }
      if (v61 >> 60 == 15)
      {
LABEL_20:
        sub_1ACAB2EF0(v55, v56);
        sub_1ACAB2EF0(v59, v61);
        goto LABEL_21;
      }
      sub_1ACA3985C(v55, v56);
      char v83 = sub_1ACD6EE5C(v55, v56, v59, v61);
      sub_1ACAB2EF0(v59, v61);
      sub_1ACAB2EF0(v55, v56);
      sub_1ACAB2EF0(v55, v56);
      if ((v83 & 1) == 0)
      {
LABEL_21:
        id v75 = [v34 renewalDate];
        if (v75)
        {
          uint64_t v76 = v75;
          sub_1ACE75078();

          uint64_t v77 = v132;
          unint64_t v78 = *(void (**)(id, char *, uint64_t))(v132 + 32);
          id v79 = v24;
          uint64_t v80 = v131;
          v78(v62, v79, v131);
          (*(void (**)(id, void, uint64_t, uint64_t))(v77 + 56))(v62, 0, 1, v80);
          uint64_t v81 = *(unsigned int (**)(id, uint64_t, uint64_t))(v77 + 48);
          if (v81(v62, 1, v80) != 1)
          {
            id v133 = v39;
            os_log_type_t v82 = v130;
            v78(v130, (char *)v62, v80);
            id v62 = v129;
            sub_1ACA3AAD4((uint64_t)&v53[OBJC_IVAR___MTContentKeyResponse_renewalDate], (uint64_t)v129, (uint64_t *)&unk_1EB773140);
            if (v81(v62, 1, v80) != 1)
            {
              id v120 = v53;
              uint64_t v89 = v128;
              v78(v128, (char *)v62, v80);
              a5 = &off_1E5E65000;
              if (sub_1ACE75018())
              {
                unint64_t v90 = v82;
                id v91 = v133;
                id v92 = objc_msgSend(v133, sel_filePath);
                sub_1ACE761B8();

                uint64_t v93 = (uint64_t)v125;
                sub_1ACE74EF8();
                swift_bridgeObjectRelease();
                uint64_t v94 = v126;
                uint64_t v95 = v127;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v93, 1, v127) == 1)
                {
                  sub_1ACA50E78(v93, &qword_1EB7731B0);
                  if (qword_1EB76D5B8 != -1) {
                    swift_once();
                  }
                  uint64_t v96 = sub_1ACE754C8();
                  __swift_project_value_buffer(v96, (uint64_t)qword_1EB76D598);
                  id v97 = v91;
                  uint64_t v98 = sub_1ACE75498();
                  os_log_type_t v99 = sub_1ACE76BE8();
                  if (os_log_type_enabled(v98, v99))
                  {
                    uint64_t v100 = swift_slowAlloc();
                    uint64_t v134 = swift_slowAlloc();
                    v140[0] = v134;
                    *(_DWORD *)uint64_t v100 = 136315651;
                    uint64_t v139 = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, v140);
                    sub_1ACE76FF8();
                    *(_WORD *)(v100 + 12) = 2160;
                    uint64_t v139 = 1752392040;
                    sub_1ACE76FF8();
                    *(_WORD *)(v100 + 22) = 2081;
                    id v101 = objc_msgSend(v97, sel_filePath);
                    uint64_t v102 = sub_1ACE761B8();
                    unint64_t v104 = v103;

                    uint64_t v105 = v102;
                    a5 = &off_1E5E65000;
                    uint64_t v139 = sub_1ACA3189C(v105, v104, v140);
                    uint64_t v89 = v128;
                    sub_1ACE76FF8();

                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_1AC9D5000, v98, v99, "%s Unable to invalidate key, invalid key store path %{private,mask.hash}s.", (uint8_t *)v100, 0x20u);
                    uint64_t v106 = v134;
                    swift_arrayDestroy();
                    MEMORY[0x1AD11B340](v106, -1, -1);
                    unint64_t v90 = v130;
                    MEMORY[0x1AD11B340](v100, -1, -1);
                  }
                  else
                  {
                  }
                }
                else
                {
                  unint64_t v115 = v124;
                  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v124, v93, v95);
                  uint64_t v116 = *(void **)(v134 + OBJC_IVAR___PFFairPlayMigrationController_invalidationManager);
                  uint64_t v117 = (void *)sub_1ACE74E18();
                  objc_msgSend(v116, sel_markKeyForInvalidationAt_shouldRemove_, v117, 1);

                  (*(void (**)(char *, uint64_t))(v94 + 8))(v115, v95);
                }
                sub_1ACD415EC(0, 0, v135, v137, (uint64_t)v136, v123);

                uint64_t v118 = v131;
                id v119 = *(void (**)(char *, uint64_t))(v132 + 8);
                v119(v89, v131);
                v119(v90, v118);
              }
              else
              {
                uint64_t v107 = swift_allocObject();
                swift_unknownObjectWeakInit();
                unint64_t v108 = (void *)swift_allocObject();
                v108[2] = v107;
                v108[3] = sub_1ACD46260;
                v108[4] = v138;
                v108[5] = v34;
                id v109 = v133;
                v108[6] = v133;
                uint64_t v110 = v34;
                uint64_t v111 = v89;
                uint64_t v112 = v110;
                id v113 = v109;
                swift_retain();
                swift_retain();
                sub_1ACD4006C(v121, (uint64_t)sub_1ACD4632C, (uint64_t)v108);

                swift_release();
                unint64_t v114 = *(void (**)(char *, uint64_t))(v132 + 8);
                v114(v111, v80);
                v114(v130, v80);
                swift_release();
              }
              goto LABEL_34;
            }
            (*(void (**)(char *, uint64_t))(v132 + 8))(v82, v80);

            goto LABEL_27;
          }
        }
        else
        {
          (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v132 + 56))(v62, 1, 1, v131);
        }

LABEL_27:
        sub_1ACA50E78((uint64_t)v62, (uint64_t *)&unk_1EB773140);
LABEL_33:
        a5 = &off_1E5E65000;
LABEL_34:

        uint64_t v63 = self;
        id v64 = [v63 (SEL)a5[407]];
        goto LABEL_35;
      }
    }
    else
    {
      id v62 = v133;
      if (v56 >> 60 != 15)
      {
        uint64_t v59 = 0;
        unint64_t v61 = 0xF000000000000000;
        goto LABEL_20;
      }
    }
LABEL_29:
    id v84 = [v34 identifier];
    if (!v84)
    {
      sub_1ACE761B8();
      id v84 = (id)sub_1ACE76178();
      swift_bridgeObjectRelease();
    }

    sub_1ACD415EC(0, 0, v135, v137, (uint64_t)v136, v123);
    goto LABEL_32;
  }
  if (qword_1EB76D5B8 != -1) {
    goto LABEL_48;
  }
LABEL_12:
  uint64_t v65 = sub_1ACE754C8();
  __swift_project_value_buffer(v65, (uint64_t)qword_1EB76D598);
  os_log_type_t v66 = v34;
  uint64_t v67 = sub_1ACE75498();
  os_log_type_t v68 = sub_1ACE76BE8();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    aBlock[0] = v134;
    *(_DWORD *)uint64_t v69 = 136315651;
    v140[0] = sub_1ACA3189C(0xD000000000000028, 0x80000001ACED01C0, aBlock);
    sub_1ACE76FF8();
    *(_WORD *)(v69 + 12) = 2160;
    v140[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v69 + 22) = 2081;
    id v70 = [v66 identifier];
    uint64_t v71 = sub_1ACE761B8();
    unint64_t v73 = v72;

    v140[0] = sub_1ACA3189C(v71, v73, aBlock);
    sub_1ACE76FF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v67, v68, "%s Unable to rollback %{private,mask.hash}s, no adam ID found.", (uint8_t *)v69, 0x20u);
    uint64_t v74 = v134;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v74, -1, -1);
    MEMORY[0x1AD11B340](v69, -1, -1);

    a5 = &off_1E5E65000;
  }
  else
  {
  }
  sub_1ACD415EC(2, 258, v135, v137, (uint64_t)v136, v123);

  uint64_t v63 = self;
  id v64 = [v63 (SEL)a5[407]];
LABEL_35:
  id v85 = v64;
  uint64_t v86 = (void *)sub_1ACE76178();
  swift_bridgeObjectRetain();
  uint64_t v87 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v85, sel_setValue_forKey_, v86, v87);

  id v88 = [v63 (SEL)a5[407]];
  objc_msgSend(v88, sel_setFairPlayMigrationRetryCount_, 0);
  swift_release();
  swift_release();
}

uint64_t sub_1ACD46210()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACD46260(uint64_t a1, __int16 a2)
{
  sub_1ACD415EC(a1, a2 & 0x1FF, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(NSObject **)(v2 + 40));
}

uint64_t sub_1ACD46278()
{
  return swift_deallocObject();
}

void sub_1ACD46288(void *a1, unsigned char *a2)
{
  unsigned int v4 = *(void ***)(v2 + 16);
  uint64_t v5 = *v4;
  *unsigned int v4 = a1;
  id v6 = a1;

  *a2 = 1;
}

uint64_t sub_1ACD462C4()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD462D4(uint64_t a1, uint64_t a2)
{
  return sub_1ACC4873C(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1ACD462DC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1ACD4632C(uint64_t a1, __int16 a2)
{
  sub_1ACD41A94(a1, a2 & 0x1FF, *(void *)(v2 + 16), *(void (**)(void, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1ACD46348()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACD46364(uint64_t a1)
{
  return sub_1ACD403D0(a1, *(void *)(v1 + 16), *(uint64_t (**)(void, uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACD46370()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD463A8()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

uint64_t sub_1ACD463E0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACD46428(char a1)
{
  sub_1ACD42684(a1, *(void **)(v1 + 16), *(id *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void, void))(v1 + 40));
}

void sub_1ACD46438(void *a1, unsigned __int8 a2, char a3)
{
  if (a3)
  {
    sub_1ACBFC4F4(a1, a2);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1ACD46494()
{
  unint64_t result = qword_1E99F5380;
  if (!qword_1E99F5380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5380);
  }
  return result;
}

uint64_t sub_1ACD464E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD46528(char a1)
{
  return sub_1ACD3B278(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1ACD46534(char a1)
{
  return sub_1ACD42F38(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1ACD46540()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ACD46588()
{
  return sub_1ACD433EC(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACD46598()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1ACD465C4()
{
  return (*(uint64_t (**)(BOOL))(v0 + 16))(*(void *)(v0 + 32) != 0);
}

uint64_t sub_1ACD465FC(void *a1, unsigned __int8 a2, char a3)
{
  return sub_1ACD3BF30(a1, a2, a3 & 1, *(uint64_t (**)(void))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), "%s Finished migration.", "%s Migration failed with error %s.");
}

uint64_t sub_1ACD46630()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACD4664C(uint64_t a1, char a2)
{
  return sub_1ACD46664(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1ACD3C5AC);
}

uint64_t sub_1ACD46664(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void, void, void, void, void))
{
  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1ACD4667C()
{
  uint64_t v1 = type metadata accessor for FairPlayMigrationData(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);

  swift_release();
  swift_release();
  uint64_t v3 = v0 + v2;
  unint64_t v4 = *(void *)(v0 + v2 + 16);
  if (v4 >> 60 != 15) {
    sub_1ACA50850(*(void *)(v3 + 8), v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + *(int *)(v1 + 28);
  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACD46814(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FairPlayMigrationData(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (void **)v1[5];
  uint64_t v9 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACD3CF28(a1, v5, v6, v7, v8, (void *)((char *)v1 + v4), v9);
}

uint64_t objectdestroy_36Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD46904()
{
  return sub_1ACD46910("%s Finished migration. Successfully migrated %{private,mask.hash}s, failed to migrate %{private,mask.hash}s");
}

uint64_t sub_1ACD46910(const char *a1)
{
  return sub_1ACD416E0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void, void, void))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_1ACD46938()
{
  uint64_t v1 = type metadata accessor for FairPlayMigrationData(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v17 = sub_1ACE74F28();
  uint64_t v3 = *(void *)(v17 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v5 = sub_1ACE750A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_release();
  uint64_t v8 = v0 + ((v2 + 32) & ~v2);
  unint64_t v9 = *(void *)(v8 + 16);
  if (v9 >> 60 != 15) {
    sub_1ACA50850(*(void *)(v8 + 8), v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v8 + *(int *)(v1 + 28);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  unint64_t v11 = (v16 + ((v2 + 32) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (v12 + v4 + 16) & ~v4;
  swift_bridgeObjectRelease();

  sub_1ACA50850(*(void *)(v0 + v12), *(void *)(v0 + v12 + 8));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v13, v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v13 + v15 + v7) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_1ACD46BC8(void *a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for FairPlayMigrationData(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_1ACE750A8() - 8);
  return sub_1ACD3FA34(a1, a2, v6, *(void (**)(void))(v3 + 16), *(void *)(v3 + 24), (uint64_t *)(v3 + v8), *(void **)(v3 + v9), *(void *)(v3 + v10), *(void *)(v3 + v10 + 8), v3 + v12, v3 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
}

uint64_t sub_1ACD46D48()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1ACD46D64(uint64_t a1)
{
  return sub_1ACD4082C(a1, *(void *)(v1 + 16), *(uint64_t (**)(void, uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACD46D70()
{
  return objectdestroy_2Tm_2(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1ACD46D8C()
{
  return sub_1ACD40B3C(*(void **)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 24));
}

id sub_1ACD46D98(void *a1, unsigned __int8 a2, char a3)
{
  if (a3) {
    return sub_1ACBFC4D0(a1, a2);
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1ACD46DA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACD46E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACD46E78()
{
  uint64_t v1 = (int *)(type metadata accessor for FairPlayMigrationData.ValidatedData(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = v0 + v2;

  sub_1ACA50850(*(void *)(v4 + 16), *(void *)(v4 + 24));
  unint64_t v5 = v0 + v2 + v1[9];
  uint64_t v6 = sub_1ACE74F28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v4 + v1[10];
  uint64_t v8 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1ACD47000(void *a1, __int16 a2)
{
  __int16 v4 = a2 & 0x1FF;
  uint64_t v5 = *(void *)(type metadata accessor for FairPlayMigrationData.ValidatedData(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  unint64_t v9 = *(NSObject **)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACD3D4EC(a1, v4, v8, (uint64_t *)(v2 + v6), v9, v10);
}

uint64_t sub_1ACD470D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACD47130()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACD47168(void *a1, unsigned char *a2)
{
  sub_1ACD43EF8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void ***)(v2 + 32));
}

uint64_t sub_1ACD47174()
{
  return swift_deallocObject();
}

void sub_1ACD47184(id a1, unsigned __int8 a2, char a3)
{
  if (a3) {
    sub_1ACBFC4F4(a1, a2);
  }
}

ValueMetadata *type metadata accessor for FairPlayMigrationError()
{
  return &type metadata for FairPlayMigrationError;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

uint64_t FileBasedAssetLocation.fileURL(in:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v14[1] = a3;
  uint64_t v5 = sub_1ACE74DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v14[0] - 8);
  MEMORY[0x1F4188790](v14[0]);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v15[1] = v12;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F276C0], v5);
  sub_1ACA4F4AC();
  sub_1ACE74F18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 24))(v15, a1, a2);
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, void))(v9 + 8))(v11, v14[0]);
}

float NetworkTaskPriority.rawValue.getter()
{
  return flt_1ACE852C0[*v0];
}

uint64_t static NetworkTaskPriority.dispatchQueuePriority()@<X0>(char *a1@<X8>)
{
  uint64_t result = qos_class_self();
  char v3 = 3;
  switch((int)result)
  {
    case 9:
      char v3 = 0;
      break;
    case 25:
      char v3 = 2;
      break;
    case 33:
      break;
    default:
      char v3 = 1;
      break;
  }
  *a1 = v3;
  return result;
}

PodcastsFoundation::FileFormat_optional __swiftcall FileFormat.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FileFormat.rawValue.getter()
{
  uint64_t result = 6778480;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6778986;
      break;
    case 2:
      uint64_t result = 1734701162;
      break;
    case 3:
      uint64_t result = 1667851624;
      break;
    case 4:
      uint64_t result = 7633012;
      break;
    case 5:
      uint64_t result = 0x7473696C70;
      break;
    case 6:
      uint64_t result = 0x69736D617A616873;
      break;
    case 7:
      uint64_t result = 1819112564;
      break;
    case 8:
      uint64_t result = 7105912;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACD47740(unsigned __int8 *a1, char *a2)
{
  return sub_1ACCF58E4(*a1, *a2);
}

uint64_t sub_1ACD4774C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD47794()
{
  return sub_1ACBD5730();
}

uint64_t sub_1ACD4779C()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::FileFormat_optional sub_1ACD477E0(Swift::String *a1)
{
  return FileFormat.init(rawValue:)(*a1);
}

uint64_t sub_1ACD477EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FileFormat.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACD47814()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACD47874()
{
  return sub_1ACE764C8();
}

uint64_t NetworkTaskPriority.description.getter()
{
  uint64_t result = 0x756F72676B636142;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7974696C697455;
      break;
    case 2:
      uint64_t result = 0x74696E4972657355;
      break;
    case 3:
      uint64_t result = 0x65746E4972657355;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t NetworkTaskPriority.debugDescription.getter()
{
  return 0;
}

PodcastsFoundation::NetworkTaskPriority_optional __swiftcall NetworkTaskPriority.init(rawValue:)(Swift::Float rawValue)
{
  if (rawValue == 0.4)
  {
    *uint64_t v1 = 0;
  }
  else if (rawValue == 0.6)
  {
    *uint64_t v1 = 1;
  }
  else
  {
    if (rawValue == 1.0) {
      char v2 = 3;
    }
    else {
      char v2 = 4;
    }
    if (rawValue == 0.8) {
      char v3 = 2;
    }
    else {
      char v3 = v2;
    }
    *uint64_t v1 = v3;
  }
  return result;
}

void *static NetworkTaskPriority.allCases.getter()
{
  return &unk_1F0381210;
}

PodcastsFoundation::NetworkTaskPriority_optional sub_1ACD47BB8(Swift::Float *a1)
{
  return NetworkTaskPriority.init(rawValue:)(*a1);
}

float sub_1ACD47BC0@<S0>(float *a1@<X8>)
{
  float result = flt_1ACE852C0[*v1];
  *a1 = result;
  return result;
}

void sub_1ACD47BD8(void *a1@<X8>)
{
  *a1 = &unk_1F0380BE8;
}

uint64_t sub_1ACD47BE8()
{
  return sub_1ACE76518();
}

uint64_t sub_1ACD47C48()
{
  return sub_1ACE764D8();
}

uint64_t sub_1ACD47C98()
{
  uint64_t result = 0x756F72676B636142;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7974696C697455;
      break;
    case 2:
      uint64_t result = 0x74696E4972657355;
      break;
    case 3:
      uint64_t result = 0x65746E4972657355;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1ACD47D48(char *a1, char *a2)
{
  return flt_1ACE852C0[*a1] == flt_1ACE852C0[*a2];
}

uint64_t sub_1ACD47D6C()
{
  return sub_1ACD2355C();
}

uint64_t sub_1ACD47D78()
{
  return sub_1ACE77B48();
}

uint64_t sub_1ACD47DB0()
{
  return sub_1ACD2355C();
}

uint64_t FileBasedAssetLocation<>.decode(_:)(uint64_t a1, unint64_t a2)
{
  return a1;
}

unint64_t sub_1ACD47DFC()
{
  unint64_t result = qword_1E99F5390;
  if (!qword_1E99F5390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5390);
  }
  return result;
}

unint64_t sub_1ACD47E54()
{
  unint64_t result = qword_1E99F5398;
  if (!qword_1E99F5398)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F53A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5398);
  }
  return result;
}

unint64_t sub_1ACD47EB4()
{
  unint64_t result = qword_1E99F53A8;
  if (!qword_1E99F53A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F53A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FileFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD47FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileFormat()
{
  return &type metadata for FileFormat;
}

uint64_t dispatch thunk of KeyedAssetLocation.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.fileName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.fileFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.encode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileBasedAssetLocation.decode(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of NetworkAssetLocation.remoteUrl.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NetworkAssetLocation.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unsigned char *storeEnumTagSinglePayload for NetworkTaskPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD4818CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkTaskPriority()
{
  return &type metadata for NetworkTaskPriority;
}

unint64_t sub_1ACD481C4()
{
  unint64_t result = qword_1EB771290;
  if (!qword_1EB771290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771290);
  }
  return result;
}

unint64_t sub_1ACD48218()
{
  unint64_t result = qword_1E99F53B0;
  if (!qword_1E99F53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F53B0);
  }
  return result;
}

uint64_t FileBasedAssetLocation<>.encode(_:)(uint64_t a1, unint64_t a2)
{
  return FileBasedAssetLocation<>.decode(_:)(a1, a2);
}

uint64_t MTEpisodeEntitlementState.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1ACD483F4(a1, a2);
}

uint64_t MTEpisodeEntitlementState.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 1701147238;
    case 2:
      return 0x6C7469746E656E75;
    case 1:
      return 0x64656C7469746E65;
  }
  type metadata accessor for MTEpisodeEntitlementState(0);
  uint64_t result = sub_1ACE77A18();
  __break(1u);
  return result;
}

uint64_t sub_1ACD48334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1ACD483F4(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1ACD48364()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 1701147238;
  }
  if (v1 == 2) {
    return 0x6C7469746E656E75;
  }
  if (v1 == 1) {
    return 0x64656C7469746E65;
  }
  uint64_t result = sub_1ACE77A18();
  __break(1u);
  return result;
}

uint64_t sub_1ACD483F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701147238 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C7469746E65 && a2 == 0xE800000000000000 || (sub_1ACE77848() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C7469746E656E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 0;
    }
  }
}

unint64_t sub_1ACD48560()
{
  unint64_t result = qword_1E99F53B8;
  if (!qword_1E99F53B8)
  {
    type metadata accessor for MTEpisodeEntitlementState(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F53B8);
  }
  return result;
}

uint64_t SHSignature.inMemorySize.getter()
{
  id v1 = objc_msgSend(v0, sel_dataRepresentation);
  uint64_t v2 = sub_1ACE74F88();
  unint64_t v4 = v3;

  uint64_t v5 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        sub_1ACE77488();
        __break(1u);
        JUMPOUT(0x1ACD486C4);
      }
      uint64_t v5 = HIDWORD(v2) - (int)v2;
LABEL_6:
      if (v5 < 0) {
        goto LABEL_10;
      }
LABEL_7:
      sub_1ACA50850(v2, v4);
      return v5;
    case 2uLL:
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_9;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v5 = BYTE6(v4);
      goto LABEL_7;
  }
}

uint64_t sub_1ACD486D4()
{
  return SHSignature.inMemorySize.getter();
}

uint64_t sub_1ACD486F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v27 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v30 = a2;
  uint64_t v18 = *(unsigned __int8 *)(a2 + 809);
  sub_1ACD489F8(v18, (uint64_t)&v27 - v16);
  sub_1ACD551DC(v31, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
  uint64_t v31 = v5;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v9 + 32);
    v19(v14, v7, v8);
    uint64_t v20 = v8;
  }
  else
  {
    uint64_t v28 = v8;
    uint64_t v21 = *v7;
    unint64_t v22 = v7[1];
    sub_1ACD489F8(v18, (uint64_t)v11);
    sub_1ACE74F98();
    if (v3)
    {
      uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
      id v24 = v11;
      uint64_t v20 = v28;
      v23(v24, v28);
      sub_1ACA50850(v21, v22);
      return ((uint64_t (*)(char *, uint64_t))v23)(v17, v20);
    }
    sub_1ACA50850(v21, v22);
    uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v9 + 32);
    uint64_t v25 = v11;
    uint64_t v20 = v28;
    v19(v14, (uint64_t *)v25, v28);
  }
  sub_1ACC504D4((uint64_t)v14, (uint64_t)v17, v30 + 264);
  if (v3)
  {
    uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v14, v20);
    return ((uint64_t (*)(char *, uint64_t))v23)(v17, v20);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v20);
  v19(v29, (uint64_t *)v17, v20);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACD489F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a1;
  v17[1] = a2;
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v17 - v11;
  id v13 = objc_msgSend(self, sel_defaultManager);
  id v14 = objc_msgSend(v13, sel_temporaryDirectory);

  sub_1ACE74E98();
  sub_1ACE75108();
  sub_1ACE750C8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1ACE74E38();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  _OWORD v17[2] = 0x6D726F662E706D74;
  v17[3] = 0xEB000000002E7461;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_1ACD48CD0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  sub_1ACA3AAD4(a2, a3 + 256, &qword_1E99F5440);
  sub_1ACA69E2C(a2, (uint64_t)&v28);
  v46[8] = v36;
  v46[9] = v37;
  v46[10] = v38;
  v46[4] = v32;
  v46[5] = v33;
  v46[6] = v34;
  v46[7] = v35;
  v46[0] = v28;
  v46[1] = v29;
  v46[2] = v30;
  v46[3] = v31;
  v27[8] = v36;
  v27[9] = v37;
  v27[10] = v38;
  _DWORD v27[4] = v32;
  v27[5] = v33;
  v27[6] = v34;
  v27[7] = v35;
  v27[0] = v28;
  v27[1] = v29;
  void v27[2] = v30;
  unint64_t v27[3] = v31;
  char v12 = v39;
  char v26 = v40;
  char v13 = v41;
  uint64_t v14 = v43;
  char v25 = v42;
  sub_1ACA3AAD4((uint64_t)&v44, (uint64_t)v24, &qword_1EB772EA0);
  sub_1ACACDD64((uint64_t)v46);
  swift_bridgeObjectRetain();
  ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v27, v12, &v26, v13, v14, &v25, (uint64_t)v24, (uint64_t)v45, a4, a5, a6);
  sub_1ACA50E78(a2, &qword_1E99F5440);
  sub_1ACA69E88((uint64_t)&v28);
  long long v15 = v45[13];
  *(_OWORD *)(a3 + 192) = v45[12];
  *(_OWORD *)(a3 + 208) = v15;
  long long v16 = v45[15];
  *(_OWORD *)(a3 + 224) = v45[14];
  *(_OWORD *)(a3 + 240) = v16;
  long long v17 = v45[9];
  *(_OWORD *)(a3 + 128) = v45[8];
  *(_OWORD *)(a3 + 144) = v17;
  long long v18 = v45[11];
  *(_OWORD *)(a3 + 160) = v45[10];
  *(_OWORD *)(a3 + 176) = v18;
  long long v19 = v45[5];
  *(_OWORD *)(a3 + 64) = v45[4];
  *(_OWORD *)(a3 + 80) = v19;
  long long v20 = v45[7];
  *(_OWORD *)(a3 + 96) = v45[6];
  *(_OWORD *)(a3 + 112) = v20;
  long long v21 = v45[1];
  *(_OWORD *)a3 = v45[0];
  *(_OWORD *)(a3 + 16) = v21;
  long long v22 = v45[3];
  *(_OWORD *)(a3 + 32) = v45[2];
  *(_OWORD *)(a3 + 48) = v22;
  *(double *)(a3 + 1608) = a4;
  *(double *)(a3 + 1616) = a5;
  *(double *)(a3 + 1624) = a6;
  return sub_1ACA3AABC(a1, a3 + 1632);
}

uint64_t sub_1ACD48EA0()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5550);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v45 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5558);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v41 - v12;
  uint64_t v14 = v0 + 16;
  BOOL v15 = CGSizeEqualToSize(v0[27], v0[11]);
  sub_1ACA3AAD4(v1, (uint64_t)v50, &qword_1E99F5448);
  if (!v15)
  {
    sub_1ACA50E78((uint64_t)v50, &qword_1E99F5448);
    goto LABEL_5;
  }
  double v16 = *(double *)&v50[56];
  double v17 = *(double *)&v50[24];
  sub_1ACA50E78((uint64_t)v50, &qword_1E99F5448);
  if (v16 != v17)
  {
LABEL_5:
    char v42 = v7;
    uint64_t v43 = v3;
    uint64_t v24 = sub_1ACD50660(v47);
    uint64_t v44 = v13;
    MEMORY[0x1F4188790](v24);
    *((void *)&v41 - 2) = v14;
    *((void *)&v41 - 1) = v47;
    char v26 = (uint64_t *)&v25[4];
    uint64_t v27 = v25 + 6;
    os_unfair_lock_lock(v25 + 6);
    sub_1ACD53F5C(v26, (uint64_t *)v48);
    os_unfair_lock_unlock(v27);
    uint64_t v28 = *(void *)&v48[0];
    sub_1ACA50E78((uint64_t)v47, &qword_1E99F54C0);
    uint64_t v49 = v28;
    sub_1ACA3E158(v1 + 1632, (uint64_t)v48);
    long long v41 = *(_OWORD *)(v1 + 1608);
    uint64_t v29 = *(void *)(v1 + 1624);
    sub_1ACA3AAD4(v1, (uint64_t)v47, &qword_1E99F5448);
    sub_1ACA3AABC(v48, (uint64_t)v46);
    uint64_t v30 = swift_allocObject();
    memcpy((void *)(v30 + 16), v47, 0x688uLL);
    sub_1ACA3AABC(v46, v30 + 1688);
    *(_OWORD *)(v30 + 1728) = v41;
    *(void *)(v30 + 1744) = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704E8);
    type metadata accessor for ArtworkContent();
    sub_1ACA51EA4((unint64_t *)&qword_1EB7704E0, &qword_1EB7704E8);
    uint64_t v31 = v2;
    long long v32 = v42;
    sub_1ACE75C28();
    swift_release();
    swift_release();
    sub_1ACA69E2C(v1, (uint64_t)v47);
    sub_1ACA3AAD4((uint64_t)&v47[27], (uint64_t)v48, &qword_1EB772EA0);
    sub_1ACA69E88((uint64_t)v47);
    uint64_t v33 = v43;
    long long v34 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    long long v35 = v45;
    v34(v45, v32, v31);
    sub_1ACA3AAD4((uint64_t)v48, (uint64_t)v47, &qword_1EB772EA0);
    v34(v10, v35, v31);
    sub_1ACA3AAD4((uint64_t)v47, (uint64_t)&v10[v8[9]], &qword_1EB772EA0);
    long long v36 = &v10[v8[10]];
    *(void *)long long v36 = "DiskResizeOperation";
    *((void *)v36 + 1) = 19;
    v36[16] = 2;
    v10[v8[12]] = 0;
    sub_1ACA50E78((uint64_t)v47, &qword_1EB772EA0);
    long long v37 = *(void (**)(char *, uint64_t))(v33 + 8);
    v37(v35, v31);
    long long v38 = &v10[v8[11]];
    *(void *)long long v38 = 0;
    *((void *)v38 + 1) = 0xE000000000000000;
    v10[v8[13]] = 0;
    uint64_t v39 = (uint64_t)v44;
    sub_1ACA50E14((uint64_t)v10, (uint64_t)v44, &qword_1E99F5558);
    sub_1ACA50E78((uint64_t)v48, &qword_1EB772EA0);
    v37(v32, v31);
    sub_1ACA51EA4(&qword_1E99F5560, &qword_1E99F5558);
    uint64_t v23 = sub_1ACE75AD8();
    sub_1ACA50E78(v39, &qword_1E99F5558);
    return v23;
  }
  uint64_t v18 = sub_1ACD50660(v47);
  MEMORY[0x1F4188790](v18);
  *((void *)&v41 - 2) = v14;
  *((void *)&v41 - 1) = v47;
  long long v20 = (uint64_t *)&v19[4];
  long long v21 = v19 + 6;
  os_unfair_lock_lock(v19 + 6);
  sub_1ACD53F5C(v20, (uint64_t *)v48);
  os_unfair_lock_unlock(v21);
  uint64_t v22 = *(void *)&v48[0];
  sub_1ACA50E78((uint64_t)v47, &qword_1E99F54C0);
  v47[0] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704E8);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7704E0, &qword_1EB7704E8);
  uint64_t v23 = sub_1ACE75AD8();
  swift_release();
  return v23;
}

uint64_t sub_1ACD4944C@<X0>(void (*a1)(unsigned char *, unsigned char *, uint64_t)@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v121 = a3;
  id v113 = a1;
  uint64_t v106 = a4;
  uint64_t v11 = sub_1ACE75448();
  uint64_t v102 = *(void *)(v11 - 8);
  uint64_t v103 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v105 = &v100[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v111 = &v100[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  double v17 = &v100[-v16];
  uint64_t v123 = type metadata accessor for ArtworkContent();
  MEMORY[0x1F4188790](v123);
  uint64_t v112 = (uint64_t *)&v100[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v120 = sub_1ACE74F28();
  uint64_t v122 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v110 = &v100[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  unint64_t v108 = (uint64_t *)&v100[-v21];
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = &v100[-v23];
  uint64_t v25 = sub_1ACE753F8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v125 = v25;
  uint64_t v126 = v26;
  MEMORY[0x1F4188790](v25);
  id v109 = &v100[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v28);
  id v119 = &v100[-v29];
  MEMORY[0x1F4188790](v30);
  long long v32 = &v100[-v31];
  uint64_t v33 = sub_1ACE75118();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  long long v36 = &v100[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v116 = a2;
  sub_1ACA3AAD4(a2 + 216, (uint64_t)v127, &qword_1EB772EA0);
  uint64_t v37 = v128;
  if (v128)
  {
    uint64_t v38 = v129;
    __swift_project_boxed_opaque_existential_1(v127, v128);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    unint64_t v41 = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v127);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v127, &qword_1EB772EA0);
    sub_1ACE75108();
    uint64_t v39 = sub_1ACE750C8();
    unint64_t v41 = v42;
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v36, v33);
  }
  unint64_t v114 = v24;
  unint64_t v115 = v17;
  if (qword_1EB76D3D0 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_1ACE75438();
  uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1EB76D3B8);
  sub_1ACE75428();
  sub_1ACE753C8();
  swift_bridgeObjectRetain();
  uint64_t v104 = v44;
  uint64_t v45 = sub_1ACE75428();
  int v46 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v47 = *(void (**)(void, void, void))(v126 + 16);
    unint64_t v117 = (v126 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v118 = v47;
    uint64_t v48 = v119;
    v47(v119, v32, v125);
    uint64_t v49 = swift_slowAlloc();
    uint64_t v107 = v32;
    uint64_t v50 = v39;
    id v51 = (uint8_t *)v49;
    uint64_t v52 = swift_slowAlloc();
    int v101 = v46;
    uint64_t v53 = v52;
    v127[0] = v52;
    *(_DWORD *)id v51 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v54 = v50;
    long long v32 = v107;
    v134[0] = sub_1ACA3189C(v54, v41, v127);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v55 = sub_1ACE753D8();
    unint64_t v56 = v48;
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v45, (os_signpost_type_t)v101, v55, "ResizeImage", "[identifier=%{name=identifier}s] Resize", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v53, -1, -1);
    MEMORY[0x1AD11B340](v51, -1, -1);

    uint64_t v57 = v125;
    uint64_t v58 = v126;
    (*(void (**)(unsigned char *, uint64_t))(v126 + 8))(v48, v125);
    unint64_t v60 = v117;
    uint64_t v59 = v118;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v57 = v125;
    uint64_t v58 = v126;
    uint64_t v59 = *(void (**)(void, void, void))(v126 + 16);
    unint64_t v60 = (v126 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    unint64_t v56 = v119;
  }
  uint64_t v61 = v116;
  unint64_t v117 = v60;
  uint64_t v118 = v59;
  v59(v56, v32, v57);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v116 = sub_1ACE75468();
  uint64_t v63 = *(unsigned char **)(v58 + 8);
  uint64_t v62 = v58 + 8;
  uint64_t v107 = v63;
  ((void (*)(unsigned char *, uint64_t))v63)(v32, v57);
  sub_1ACA69E2C(v61, (uint64_t)v127);
  sub_1ACA3AAD4((uint64_t)&v130, (uint64_t)v131, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)v127);
  uint64_t v64 = v132;
  uint64_t v65 = v122;
  if (v132)
  {
    uint64_t v66 = v133;
    __swift_project_boxed_opaque_existential_1(v131, v132);
    __swift_project_boxed_opaque_existential_1(v121, v121[3]);
    swift_getDynamicType();
    uint64_t v67 = sub_1ACE77D48();
    (*(void (**)(void *__return_ptr, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 24))(v134, "ResizeImage", 11, 2, v67, v68, v64, v66);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v131);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v131, &qword_1EB772EA0);
    memset(v134, 0, 40);
  }
  uint64_t v69 = v124;
  uint64_t v70 = v120;
  uint64_t v71 = v112;
  sub_1ACD551DC((uint64_t)v113, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v126 = v62;
    unint64_t v72 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32);
    unint64_t v73 = v114;
    uint64_t v74 = v114;
    id v75 = v71;
  }
  else
  {
    uint64_t v76 = *v71;
    unint64_t v77 = v71[1];
    unint64_t v78 = v108;
    sub_1ACD4A0BC(4, (uint64_t)v108);
    sub_1ACE74F98();
    if (v69)
    {
      (*(void (**)(uint64_t *, uint64_t))(v65 + 8))(v78, v70);
      sub_1ACA50850(v76, v77);
      swift_release();
      return sub_1ACA50E78((uint64_t)v134, qword_1EB76AD60);
    }
    uint64_t v126 = v62;
    sub_1ACA50850(v76, v77);
    unint64_t v72 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32);
    id v75 = v78;
    unint64_t v73 = v114;
    uint64_t v74 = v114;
  }
  id v113 = v72;
  v72(v74, v75, v70);
  uint64_t v79 = v121[3];
  uint64_t v80 = v121[4];
  __swift_project_boxed_opaque_existential_1(v121, v79);
  uint64_t v81 = (uint64_t)v115;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double, double, double))(v80 + 8))(v73, v79, v80, a5, a6, a7);
  os_log_type_t v82 = v111;
  sub_1ACA3AAD4(v81, (uint64_t)v111, &qword_1EB7731B0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48))(v82, 1, v70) == 1)
  {
    sub_1ACA50E78((uint64_t)v82, &qword_1EB7731B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5568);
    sub_1ACA51EA4(&qword_1E99F5570, &qword_1E99F5568);
    swift_allocError();
    *char v83 = 0;
    swift_willThrow();
    swift_release();
    sub_1ACA50E78(v81, &qword_1EB7731B0);
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v73, v70);
    return sub_1ACA50E78((uint64_t)v134, qword_1EB76AD60);
  }
  uint64_t v121 = (void *)(v65 + 32);
  v113(v110, v82, v70);
  sub_1ACA3AAD4((uint64_t)v134, (uint64_t)v127, qword_1EB76AD60);
  if (v128)
  {
    __swift_project_boxed_opaque_existential_1(v127, v128);
    TraceInterval.end()();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v127);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v127, qword_1EB76AD60);
  }
  id v85 = v105;
  uint64_t v86 = v109;
  uint64_t v87 = sub_1ACE75428();
  sub_1ACE75458();
  os_signpost_type_t v88 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v90 = v102;
    uint64_t v89 = v103;
    int v91 = (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 88))(v85, v103);
    int v92 = *MEMORY[0x1E4FBD340];
    uint64_t v124 = v69;
    if (v91 == v92)
    {
      uint64_t v93 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v85, v89);
      uint64_t v93 = "";
    }
    uint64_t v94 = v119;
    uint64_t v95 = v109;
    uint64_t v96 = v125;
    v118(v119, v109, v125);
    id v97 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v97 = 0;
    os_signpost_id_t v98 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v87, v88, v98, "ResizeImage", v93, v97, 2u);
    MEMORY[0x1AD11B340](v97, -1, -1);

    os_log_type_t v99 = (void (*)(unsigned char *, uint64_t))v107;
    ((void (*)(unsigned char *, uint64_t))v107)(v95, v96);
    sub_1ACA50E78((uint64_t)v115, &qword_1EB7731B0);
    uint64_t v70 = v120;
    (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v114, v120);
    sub_1ACA50E78((uint64_t)v134, qword_1EB76AD60);
    swift_release();
    v99(v94, v96);
  }
  else
  {

    ((void (*)(unsigned char *, uint64_t))v107)(v86, v125);
    sub_1ACA50E78((uint64_t)v115, &qword_1EB7731B0);
    (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v114, v70);
    sub_1ACA50E78((uint64_t)v134, qword_1EB76AD60);
    swift_release();
  }
  v113(v106, v110, v70);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ACD4A0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a1;
  v17[1] = a2;
  uint64_t v2 = sub_1ACE75118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v17 - v11;
  id v13 = objc_msgSend(self, sel_defaultManager);
  id v14 = objc_msgSend(v13, sel_temporaryDirectory);

  sub_1ACE74E98();
  sub_1ACE75108();
  sub_1ACE750C8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1ACE74E38();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  _OWORD v17[2] = 0x697365722E706D74;
  v17[3] = 0xEB000000002E657ALL;
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE74E48();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_1ACD4A3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5730);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5738);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2240);
  sub_1ACA51EA4(&qword_1E99F5740, &qword_1E99F2240);
  sub_1ACE75B58();
  uint64_t v8 = type metadata accessor for TranscriptData.TimeBombedURLs();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5748);
  uint64_t v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(void *)(v9 + 16) = v10;
  *(unsigned char *)(v9 + 24) = 1;
  *(_OWORD *)(v9 + 32) = xmmword_1ACE8BD70;
  *(unsigned char *)(v9 + 48) = 2;
  *(void *)(v9 + *(void *)(*(void *)v9 + 144)) = MEMORY[0x1E4FBC860];
  sub_1ACA50E14((uint64_t)v3, v9 + *(void *)(*(void *)v9 + 136), &qword_1E99F5730);
  sub_1ACA51EA4(&qword_1E99F5750, &qword_1E99F5738);
  sub_1ACA51EA4(&qword_1E99F5758, &qword_1E99F5748);
  uint64_t v11 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5760);
  sub_1ACA51EA4(&qword_1E99F5768, &qword_1E99F5760);
  uint64_t v12 = sub_1ACE75948();
  swift_release();
  uint64_t v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5770);
  sub_1ACA51EA4(&qword_1E99F5778, &qword_1E99F5770);
  sub_1ACE75AE8();
  return swift_release();
}

uint64_t sub_1ACD4A750@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v15[1] = a2;
  void v15[2] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5408);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54D0);
  sub_1ACA51EA4(&qword_1E99F5500, &qword_1E99F54D0);
  sub_1ACE75B58();
  uint64_t v9 = type metadata accessor for ArtworkContent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5508);
  uint64_t v10 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)(v10 + 16) = v11;
  *(unsigned char *)(v10 + 24) = 1;
  *(_OWORD *)(v10 + 32) = xmmword_1ACE8BD70;
  *(unsigned char *)(v10 + 48) = 2;
  *(void *)(v10 + *(void *)(*(void *)v10 + 144)) = MEMORY[0x1E4FBC860];
  sub_1ACA50E14((uint64_t)v4, v10 + *(void *)(*(void *)v10 + 136), &qword_1E99F5408);
  sub_1ACA51EA4(&qword_1E99F5510, &qword_1E99F54F8);
  sub_1ACA51EA4(&qword_1E99F5518, &qword_1E99F5508);
  uint64_t v12 = sub_1ACE75CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5520);
  sub_1ACA51EA4(&qword_1E99F5528, &qword_1E99F5520);
  uint64_t v13 = sub_1ACE75948();
  swift_release();
  uint64_t v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5530);
  sub_1ACA51EA4(&qword_1E99F5538, &qword_1E99F5530);
  sub_1ACE75AE8();
  return swift_release();
}

void *sub_1ACD4AAEC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1ACE77508())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD119490](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1ACD4AC14@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v32 = a6;
  uint64_t v31 = a3(0);
  uint64_t v36 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v33 = a2 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v34 = (unint64_t)(v16 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  if (!v18) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    sub_1ACD551DC(*(void *)(a2 + 48) + *(void *)(v36 + 72) * i, (uint64_t)v14, v35);
    sub_1ACD54E44((uint64_t)v14, (uint64_t)v11, a5);
    char v26 = a1(v11);
    if (v6)
    {
      sub_1ACD54C74((uint64_t)v11, a5);
      return swift_release();
    }
    if (v26)
    {
      swift_release();
      uint64_t v27 = v32;
      sub_1ACD54E44((uint64_t)v11, v32, a5);
      uint64_t v28 = 0;
      uint64_t v29 = v31;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v27, v28, 1, v29);
    }
    uint64_t result = sub_1ACD54C74((uint64_t)v11, a5);
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v20++, 1)) {
      break;
    }
    if (v20 >= v34) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v33 + 8 * v20);
    if (!v24)
    {
      int64_t v25 = v20 + 1;
      if (v20 + 1 >= v34) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v25);
      if (v24) {
        goto LABEL_16;
      }
      int64_t v25 = v20 + 2;
      if (v20 + 2 >= v34) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v25);
      if (v24) {
        goto LABEL_16;
      }
      int64_t v25 = v20 + 3;
      if (v20 + 3 >= v34) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v25);
      if (v24)
      {
LABEL_16:
        int64_t v20 = v25;
        goto LABEL_17;
      }
      int64_t v25 = v20 + 4;
      if (v20 + 4 < v34)
      {
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v20 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_31;
            }
            if (v20 >= v34) {
              goto LABEL_28;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v20);
            ++v25;
            if (v24) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v29 = v31;
      uint64_t v27 = v32;
      swift_release();
      uint64_t v28 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v27, v28, 1, v29);
    }
LABEL_17:
    unint64_t v18 = (v24 - 1) & v24;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1ACD4AF18@<X0>(uint64_t (*a1)(long long *)@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v7 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    sub_1ACA69E2C(*(void *)(a2 + 48) + (i << 8), (uint64_t)v44);
    long long v40 = v44[12];
    long long v41 = v44[13];
    long long v42 = v44[14];
    long long v43 = v44[15];
    long long v36 = v44[8];
    long long v37 = v44[9];
    long long v38 = v44[10];
    long long v39 = v44[11];
    long long v32 = v44[4];
    long long v33 = v44[5];
    long long v34 = v44[6];
    long long v35 = v44[7];
    long long v28 = v44[0];
    long long v29 = v44[1];
    long long v30 = v44[2];
    long long v31 = v44[3];
    char v19 = a1(&v28);
    if (v3)
    {
      sub_1ACA69E88((uint64_t)&v28);
      return swift_release();
    }
    if (v19)
    {
      uint64_t result = swift_release();
      long long v20 = v41;
      a3[12] = v40;
      a3[13] = v20;
      long long v21 = v43;
      a3[14] = v42;
      a3[15] = v21;
      long long v22 = v37;
      a3[8] = v36;
      a3[9] = v22;
      long long v23 = v39;
      a3[10] = v38;
      a3[11] = v23;
      long long v24 = v33;
      a3[4] = v32;
      a3[5] = v24;
      long long v25 = v35;
      a3[6] = v34;
      a3[7] = v25;
      long long v26 = v29;
      *a3 = v28;
      a3[1] = v26;
      long long v27 = v31;
      a3[2] = v30;
      a3[3] = v27;
      return result;
    }
    uint64_t result = sub_1ACA69E88((uint64_t)&v28);
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v13 >= v11) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_28:
    uint64_t result = swift_release();
    a3[14] = 0u;
    a3[15] = 0u;
    a3[12] = 0u;
    a3[13] = 0u;
    a3[10] = 0u;
    a3[11] = 0u;
    a3[8] = 0u;
    a3[9] = 0u;
    a3[6] = 0u;
    a3[7] = 0u;
    a3[4] = 0u;
    a3[5] = 0u;
    a3[2] = 0u;
    a3[3] = 0u;
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1ACD4B1DC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTMLRequest();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4548);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v8 + 52)))(a1);
  sub_1ACD551DC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4((uint64_t)&v7[*(int *)(v5 + 44)], (uint64_t)v23, &qword_1EB772EA0);
  sub_1ACD54C74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5678);
  *(void *)&v19[0] = sub_1ACE77D48();
  *((void *)&v19[0] + 1) = v10;
  sub_1ACE762C8();
  unsigned long long v11 = v19[0];
  sub_1ACA3AAD4((uint64_t)v23, (uint64_t)v22, &qword_1EB772EA0);
  *(void *)&v19[0] = v9;
  sub_1ACA3AAD4((uint64_t)v22, (uint64_t)v19 + 8, &qword_1EB772EA0);
  *(void *)&long long v20 = "FetchFromSource";
  *((void *)&v20 + 1) = 15;
  v21[0] = 2;
  v21[24] = 0;
  unsigned long long v18 = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  unsigned long long v14 = v18;
  unint64_t v13 = v14 >> 64;
  unint64_t v12 = v14;
  sub_1ACA50E78((uint64_t)v22, &qword_1EB772EA0);
  *(_OWORD *)&v21[8] = __PAIR128__(v13, v12);
  v21[25] = 0;
  long long v15 = v20;
  a2[2] = v19[2];
  a2[3] = v15;
  long long v16 = v19[1];
  *a2 = v19[0];
  a2[1] = v16;
  a2[4] = *(_OWORD *)v21;
  *(_OWORD *)((char *)a2 + 74) = *(_OWORD *)&v21[10];
  sub_1ACA50E78((uint64_t)v23, &qword_1EB772EA0);
  return swift_release();
}

uint64_t sub_1ACD4B3D0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45B0);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v8 + 52)))(a1);
  sub_1ACD551DC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4((uint64_t)&v7[*(int *)(v5 + 44)], (uint64_t)v23, &qword_1EB772EA0);
  sub_1ACD54C74((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5728);
  *(void *)&v19[0] = sub_1ACE77D48();
  *((void *)&v19[0] + 1) = v10;
  sub_1ACE762C8();
  unsigned long long v11 = v19[0];
  sub_1ACA3AAD4((uint64_t)v23, (uint64_t)v22, &qword_1EB772EA0);
  *(void *)&v19[0] = v9;
  sub_1ACA3AAD4((uint64_t)v22, (uint64_t)v19 + 8, &qword_1EB772EA0);
  *(void *)&long long v20 = "FetchFromSource";
  *((void *)&v20 + 1) = 15;
  v21[0] = 2;
  v21[24] = 0;
  unsigned long long v18 = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  unsigned long long v14 = v18;
  unint64_t v13 = v14 >> 64;
  unint64_t v12 = v14;
  sub_1ACA50E78((uint64_t)v22, &qword_1EB772EA0);
  *(_OWORD *)&v21[8] = __PAIR128__(v13, v12);
  v21[25] = 0;
  long long v15 = v20;
  a2[2] = v19[2];
  a2[3] = v15;
  long long v16 = v19[1];
  *a2 = v19[0];
  a2[1] = v16;
  a2[4] = *(_OWORD *)v21;
  *(_OWORD *)((char *)a2 + 74) = *(_OWORD *)&v21[10];
  sub_1ACA50E78((uint64_t)v23, &qword_1EB772EA0);
  return swift_release();
}

uint64_t sub_1ACD4B5C4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a1 + 256))();
  sub_1ACA69E2C(a1, (uint64_t)v11);
  sub_1ACA3AAD4((uint64_t)&v14, (uint64_t)v15, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55C8);
  *(void *)&v11[0] = sub_1ACE77D48();
  *((void *)&v11[0] + 1) = v5;
  sub_1ACE762C8();
  long long v6 = v11[0];
  sub_1ACA3AAD4((uint64_t)v15, (uint64_t)v10, &qword_1EB772EA0);
  *(void *)&v11[0] = v4;
  sub_1ACA3AAD4((uint64_t)v10, (uint64_t)v11 + 8, &qword_1EB772EA0);
  *(void *)&long long v12 = "FetchFromSource";
  *((void *)&v12 + 1) = 15;
  v13[0] = 2;
  unsigned char v13[24] = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACA50E78((uint64_t)v10, &qword_1EB772EA0);
  *(_OWORD *)&v13[8] = v6;
  v13[25] = 0;
  long long v7 = v12;
  a2[2] = v11[2];
  a2[3] = v7;
  long long v8 = v11[1];
  *a2 = v11[0];
  a2[1] = v8;
  a2[4] = *(_OWORD *)v13;
  *(_OWORD *)((char *)a2 + 74) = *(_OWORD *)&v13[10];
  sub_1ACA50E78((uint64_t)v15, &qword_1EB772EA0);
  return swift_release();
}

uint64_t sub_1ACD4B738(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4570);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v58 = (uint64_t (*)())((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55E8);
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55F0);
  uint64_t v64 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  unsigned long long v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55F8);
  uint64_t v66 = *(void *)(v12 - 8);
  uint64_t v67 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = (uint64_t (*)(void))type metadata accessor for TTMLRequest();
  uint64_t v14 = *((void *)v59 - 1);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v59);
  long long v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v58 - v18;
  uint64_t v65 = a1;
  uint64_t v20 = *a1;
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v68 = (uint64_t)&v58 - v18;
  uint64_t v69 = a2;
  if (v21 && (unint64_t v22 = sub_1ACA6673C(a2), (v23 & 1) != 0))
  {
    uint64_t v24 = a2;
    uint64_t v25 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
    sub_1ACD551DC(a2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    long long v26 = v59;
    sub_1ACA3AAD4((uint64_t)&v19[*((int *)v59 + 9)], (uint64_t)&v73, &qword_1EB772EA0);
    uint64_t v89 = v25;
    swift_retain();
    sub_1ACD54C74((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    if (*((void *)&v74 + 1))
    {
      sub_1ACA3AABC(&v73, (uint64_t)&v84);
      uint64_t v27 = sub_1ACD551DC(v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
      MEMORY[0x1F4188790](v27);
      swift_bridgeObjectRetain();
      long long v28 = v58;
      uint64_t v29 = v70;
      sub_1ACD4AC14((uint64_t (*)(char *))sub_1ACD54B84, v20, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t (*)(void))type metadata accessor for TTMLRequest, (uint64_t)v58);
      swift_bridgeObjectRelease();
      sub_1ACD54C74((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
      if ((*(unsigned int (**)(uint64_t (*)(), uint64_t, uint64_t (*)(void)))(v14 + 48))(v28, 1, v26) == 1)
      {
        sub_1ACA50E78((uint64_t)v28, &qword_1E99F4570);
      }
      else
      {
        os_log_type_t v82 = v26;
        char v83 = &protocol witness table for TTMLRequest;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v81);
        sub_1ACD54E44((uint64_t)v28, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
        sub_1ACA3AABC(&v81, (uint64_t)&v73);
        uint64_t v48 = __swift_project_boxed_opaque_existential_1(&v73, *((uint64_t *)&v74 + 1));
        sub_1ACA3AAD4((uint64_t)v48 + *((int *)v26 + 9), (uint64_t)&v71, &qword_1EB772EA0);
        if (v72)
        {
          sub_1ACA3AABC(&v71, (uint64_t)v78);
          uint64_t v70 = v29;
          uint64_t v49 = *((void *)&v85 + 1);
          uint64_t v50 = v86;
          __swift_project_boxed_opaque_existential_1(&v84, *((uint64_t *)&v85 + 1));
          uint64_t v51 = v79;
          uint64_t v52 = v80;
          __swift_project_boxed_opaque_existential_1(v78, v79);
          uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v53, v54, v49, v50);
          long long v26 = v59;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v78);
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v71, &qword_1EB772EA0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v73);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v84);
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v73, &qword_1EB772EA0);
    }
    uint64_t v55 = v89;
    uint64_t v56 = v68;
    sub_1ACD551DC(v69, v68, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    sub_1ACA3AAD4(v56 + *((int *)v26 + 9), (uint64_t)&v81, &qword_1EB772EA0);
    sub_1ACD54C74(v56, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    sub_1ACA3AAD4((uint64_t)&v81, (uint64_t)v78, &qword_1EB772EA0);
    *(void *)&long long v73 = v55;
    sub_1ACA3AAD4((uint64_t)v78, (uint64_t)&v73 + 8, &qword_1EB772EA0);
    *(void *)&long long v76 = "FromUniquePipeline";
    *((void *)&v76 + 1) = 18;
    LOBYTE(v77[0]) = 2;
    BYTE8(v77[1]) = 0;
    swift_retain();
    sub_1ACA50E78((uint64_t)v78, &qword_1EB772EA0);
    *((void *)&v77[0] + 1) = 0;
    *(void *)&v77[1] = 0xE000000000000000;
    BYTE9(v77[1]) = 0;
    long long v86 = v75;
    long long v87 = v76;
    long long v84 = v73;
    long long v85 = v74;
    v88[0] = v77[0];
    *(_OWORD *)((char *)v88 + 10) = *(_OWORD *)((char *)v77 + 10);
    sub_1ACA50E78((uint64_t)&v81, &qword_1EB772EA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5658);
    sub_1ACA51EA4(&qword_1E99F5660, &qword_1E99F5658);
    uint64_t v43 = sub_1ACE75AD8();
    swift_release();
    sub_1ACA50E78((uint64_t)&v84, &qword_1E99F5658);
  }
  else
  {
    uint64_t v30 = *(void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4558) + 48));
    uint64_t v58 = type metadata accessor for TTMLRequest;
    sub_1ACD551DC(a2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    unint64_t v31 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v30;
    uint64_t v59 = (uint64_t (*)(void))type metadata accessor for TTMLRequest;
    sub_1ACD54E44((uint64_t)v19, v32 + v31, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1ACD54B58;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1ACD54B58;
    *(void *)(v34 + 24) = v32;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55D0);
    sub_1ACA51EA4(&qword_1E99F5600, &qword_1E99F55D0);
    long long v35 = v11;
    sub_1ACE75AF8();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5608);
    sub_1ACA51EA4(&qword_1E99F5610, &qword_1E99F55F0);
    sub_1ACE75B58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5618);
    uint64_t v36 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
    uint64_t v37 = swift_allocObject();
    *(_DWORD *)(v37 + 16) = 0;
    *(void *)(v36 + 16) = v37;
    *(unsigned char *)(v36 + 24) = 1;
    *(_OWORD *)(v36 + 32) = xmmword_1ACE8BD70;
    *(unsigned char *)(v36 + 48) = 2;
    *(void *)(v36 + 112) = MEMORY[0x1E4FBC860];
    sub_1ACA51EA4(&qword_1E99F5620, &qword_1E99F55E8);
    sub_1ACA51EA4(&qword_1E99F5628, &qword_1E99F5618);
    *(_OWORD *)(v36 + 56) = 0u;
    *(_OWORD *)(v36 + 72) = 0u;
    *(_OWORD *)(v36 + 88) = 0u;
    *(void *)(v36 + 104) = 0;
    uint64_t v38 = v62;
    uint64_t v39 = sub_1ACE75CE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v38);
    *(void *)&long long v84 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5630);
    sub_1ACA51EA4(&qword_1E99F5638, &qword_1E99F5630);
    uint64_t v40 = sub_1ACE75948();
    swift_release();
    *(void *)&long long v84 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5640);
    sub_1ACA51EA4(&qword_1E99F5648, &qword_1E99F5640);
    long long v41 = v63;
    sub_1ACE75AE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v89);
    sub_1ACA51EA4(&qword_1E99F5650, &qword_1E99F55F8);
    uint64_t v42 = v67;
    uint64_t v43 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v42);
    uint64_t v44 = v68;
    sub_1ACD551DC(v69, v68, (uint64_t (*)(void))v58);
    swift_retain();
    uint64_t v45 = v65;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v84 = *v45;
    uint64_t *v45 = 0x8000000000000000;
    sub_1ACD0E428(v43, v44, isUniquelyReferenced_nonNull_native);
    uint64_t *v45 = v84;
    swift_bridgeObjectRelease();
    sub_1ACD54C74(v44, v59);
    swift_release();
  }
  return v43;
}

uint64_t sub_1ACD4C30C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4568);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t (*)())((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5698);
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F56A0);
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  unsigned long long v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F56A8);
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest();
  uint64_t v14 = *((void *)v61 - 1);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v61);
  long long v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v60 - v18;
  uint64_t v68 = a1;
  uint64_t v20 = *a1;
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v71 = (uint64_t)&v60 - v18;
  uint64_t v72 = a2;
  if (v21 && (unint64_t v22 = sub_1ACA666E8(a2), (v23 & 1) != 0))
  {
    uint64_t v24 = a2;
    uint64_t v25 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
    sub_1ACD551DC(a2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    long long v26 = v61;
    sub_1ACA3AAD4((uint64_t)&v19[*((int *)v61 + 9)], (uint64_t)&v75, &qword_1EB772EA0);
    uint64_t v70 = v25;
    swift_retain();
    sub_1ACD54C74((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    if (*((void *)&v76 + 1))
    {
      sub_1ACA3AABC(&v75, (uint64_t)&v86);
      uint64_t v27 = sub_1ACD551DC(v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
      MEMORY[0x1F4188790](v27);
      swift_bridgeObjectRetain();
      long long v28 = v60;
      uint64_t v29 = v91;
      sub_1ACD4AC14((uint64_t (*)(char *))sub_1ACD54F58, v20, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, (uint64_t)v60);
      uint64_t v91 = v29;
      swift_bridgeObjectRelease();
      sub_1ACD54C74((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
      if ((*(unsigned int (**)(uint64_t (*)(), uint64_t, uint64_t (*)(void)))(v14 + 48))(v28, 1, v26) == 1)
      {
        sub_1ACA50E78((uint64_t)v28, &qword_1E99F4568);
      }
      else
      {
        long long v84 = v26;
        long long v85 = &protocol witness table for ShazamSignatureRequest;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v83);
        sub_1ACD54E44((uint64_t)v28, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
        sub_1ACA3AABC(&v83, (uint64_t)&v75);
        uint64_t v50 = __swift_project_boxed_opaque_existential_1(&v75, *((uint64_t *)&v76 + 1));
        sub_1ACA3AAD4((uint64_t)v50 + *((int *)v26 + 9), (uint64_t)&v73, &qword_1EB772EA0);
        if (v74)
        {
          sub_1ACA3AABC(&v73, (uint64_t)v80);
          uint64_t v51 = *((void *)&v87 + 1);
          uint64_t v52 = v88;
          __swift_project_boxed_opaque_existential_1(&v86, *((uint64_t *)&v87 + 1));
          uint64_t v53 = v81;
          uint64_t v54 = v82;
          __swift_project_boxed_opaque_existential_1(v80, v81);
          uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v54);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v55, v56, v51, v52);
          long long v26 = v61;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v80);
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v73, &qword_1EB772EA0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v75);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v75, &qword_1EB772EA0);
    }
    uint64_t v58 = v70;
    uint64_t v57 = v71;
    sub_1ACD551DC(v72, v71, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    sub_1ACA3AAD4(v57 + *((int *)v26 + 9), (uint64_t)&v83, &qword_1EB772EA0);
    sub_1ACD54C74(v57, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    sub_1ACA3AAD4((uint64_t)&v83, (uint64_t)v80, &qword_1EB772EA0);
    *(void *)&long long v75 = v58;
    sub_1ACA3AAD4((uint64_t)v80, (uint64_t)&v75 + 8, &qword_1EB772EA0);
    *(void *)&long long v78 = "FromUniquePipeline";
    *((void *)&v78 + 1) = 18;
    LOBYTE(v79[0]) = 2;
    BYTE8(v79[1]) = 0;
    swift_retain();
    sub_1ACA50E78((uint64_t)v80, &qword_1EB772EA0);
    *((void *)&v79[0] + 1) = 0;
    *(void *)&v79[1] = 0xE000000000000000;
    BYTE9(v79[1]) = 0;
    long long v88 = v77;
    long long v89 = v78;
    long long v86 = v75;
    long long v87 = v76;
    v90[0] = v79[0];
    *(_OWORD *)((char *)v90 + 10) = *(_OWORD *)((char *)v79 + 10);
    sub_1ACA50E78((uint64_t)&v83, &qword_1EB772EA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5708);
    sub_1ACA51EA4(&qword_1E99F5710, &qword_1E99F5708);
    uint64_t v45 = sub_1ACE75AD8();
    swift_release();
    sub_1ACA50E78((uint64_t)&v86, &qword_1E99F5708);
  }
  else
  {
    uint64_t v30 = *(void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45C0) + 48));
    uint64_t v60 = type metadata accessor for ShazamSignatureRequest;
    sub_1ACD551DC(a2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    unint64_t v31 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v30;
    uint64_t v61 = (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest;
    sub_1ACD54E44((uint64_t)v19, v32 + v31, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1ACD54EAC;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1ACD54EAC;
    *(void *)(v34 + 24) = v32;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5680);
    sub_1ACA51EA4(&qword_1E99F56B0, &qword_1E99F5680);
    long long v35 = v11;
    sub_1ACE75AF8();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F56B8);
    sub_1ACA51EA4(&qword_1E99F56C0, &qword_1E99F56A0);
    uint64_t v36 = v65;
    sub_1ACE75B58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F56C8);
    uint64_t v37 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
    uint64_t v38 = swift_allocObject();
    *(_DWORD *)(v38 + 16) = 0;
    *(void *)(v37 + 16) = v38;
    *(unsigned char *)(v37 + 24) = 1;
    *(_OWORD *)(v37 + 32) = xmmword_1ACE8BD70;
    *(unsigned char *)(v37 + 48) = 2;
    uint64_t v39 = MEMORY[0x1E4FBC860];
    *(void *)(v37 + 56) = 0;
    *(void *)(v37 + 64) = v39;
    sub_1ACA51EA4(&qword_1E99F56D0, &qword_1E99F5698);
    sub_1ACA51EA4(&qword_1E99F56D8, &qword_1E99F56C8);
    uint64_t v40 = v64;
    uint64_t v41 = sub_1ACE75CE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v40);
    *(void *)&long long v86 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F56E0);
    sub_1ACA51EA4(&qword_1E99F56E8, &qword_1E99F56E0);
    uint64_t v42 = sub_1ACE75948();
    swift_release();
    *(void *)&long long v86 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F56F0);
    sub_1ACA50D4C(0, &qword_1E99F13D0);
    sub_1ACA51EA4(&qword_1E99F56F8, &qword_1E99F56F0);
    uint64_t v43 = v66;
    sub_1ACE75AE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v36);
    sub_1ACA51EA4(&qword_1E99F5700, &qword_1E99F56A8);
    uint64_t v44 = v70;
    uint64_t v45 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v44);
    uint64_t v46 = v71;
    sub_1ACD551DC(v72, v71, (uint64_t (*)(void))v60);
    swift_retain();
    uint64_t v47 = v68;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v86 = *v47;
    *uint64_t v47 = 0x8000000000000000;
    sub_1ACD0E5F4(v45, v46, isUniquelyReferenced_nonNull_native);
    *uint64_t v47 = v86;
    swift_bridgeObjectRelease();
    sub_1ACD54C74(v46, v61);
    swift_release();
  }
  return v45;
}

uint64_t sub_1ACD4CEE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54D0);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54D8);
  uint64_t v93 = *(void **)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned long long v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v13 = sub_1ACA66828((_OWORD *)a2), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    sub_1ACA69E2C(a2, (uint64_t)&v78);
    sub_1ACA3AAD4((uint64_t)&v90 + 8, (uint64_t)&v65, &qword_1EB772EA0);
    swift_retain();
    sub_1ACA69E88((uint64_t)&v78);
    if (*((void *)&v66 + 1))
    {
      sub_1ACA3AABC(&v65, (uint64_t)v75);
      uint64_t v16 = sub_1ACA69E2C(a2, (uint64_t)&v65);
      MEMORY[0x1F4188790](v16);
      swift_bridgeObjectRetain();
      sub_1ACD4AF18((uint64_t (*)(long long *))sub_1ACD53E38, v12, &v78);
      swift_bridgeObjectRelease();
      sub_1ACA69E88((uint64_t)&v65);
      if (*((void *)&v78 + 1))
      {
        uint64_t v72 = &type metadata for ArtworkRequest;
        long long v73 = &protocol witness table for ArtworkRequest;
        uint64_t v17 = (_OWORD *)swift_allocObject();
        *(void *)&long long v71 = v17;
        long long v18 = v90;
        v17[13] = v89;
        v17[14] = v18;
        long long v19 = v92;
        v17[15] = v91;
        v17[16] = v19;
        long long v20 = v86;
        v17[9] = v85;
        v17[10] = v20;
        long long v21 = v88;
        v17[11] = v87;
        v17[12] = v21;
        long long v22 = v82[1];
        v17[5] = v82[0];
        v17[6] = v22;
        long long v23 = v84;
        v17[7] = v83;
        v17[8] = v23;
        long long v24 = v79;
        v17[1] = v78;
        _OWORD v17[2] = v24;
        long long v25 = v81;
        v17[3] = v80;
        void v17[4] = v25;
        sub_1ACA3AABC(&v71, (uint64_t)v74);
        long long v26 = __swift_project_boxed_opaque_existential_1(v74, v74[3]);
        sub_1ACA3AAD4((uint64_t)(v26 + 27), (uint64_t)&v60, &qword_1EB772EA0);
        if (v61)
        {
          sub_1ACA3AABC(&v60, (uint64_t)v62);
          uint64_t v27 = v76;
          uint64_t v28 = v77;
          uint64_t v93 = __swift_project_boxed_opaque_existential_1(v75, v76);
          uint64_t v56 = v3;
          uint64_t v29 = a2;
          uint64_t v30 = v63;
          uint64_t v31 = v64;
          __swift_project_boxed_opaque_existential_1(v62, v63);
          uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
          uint64_t v33 = v31;
          a2 = v29;
          uint64_t v34 = v32(v30, v33);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v34, v35, v27, v28);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v60, &qword_1EB772EA0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
      }
      else
      {
        sub_1ACA50E78((uint64_t)&v78, &qword_1E99F54F0);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v65, &qword_1EB772EA0);
    }
    sub_1ACA69E2C(a2, (uint64_t)&v78);
    sub_1ACA3AAD4((uint64_t)&v90 + 8, (uint64_t)v75, &qword_1EB772EA0);
    sub_1ACA69E88((uint64_t)&v78);
    sub_1ACA3AAD4((uint64_t)v75, (uint64_t)v74, &qword_1EB772EA0);
    *(void *)&long long v65 = v15;
    sub_1ACA3AAD4((uint64_t)v74, (uint64_t)&v65 + 8, &qword_1EB772EA0);
    *(void *)&long long v68 = "FromUniquePipeline";
    *((void *)&v68 + 1) = 18;
    LOBYTE(v69) = 2;
    LOBYTE(v70[2]) = 0;
    swift_retain();
    sub_1ACA50E78((uint64_t)v74, &qword_1EB772EA0);
    v70[0] = 0;
    v70[1] = 0xE000000000000000;
    BYTE1(v70[2]) = 0;
    long long v80 = v67;
    long long v81 = v68;
    long long v78 = v65;
    long long v79 = v66;
    v82[0] = v69;
    *(_OWORD *)((char *)v82 + 10) = *(_OWORD *)((char *)v70 + 2);
    sub_1ACA50E78((uint64_t)v75, &qword_1EB772EA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5468);
    sub_1ACA51EA4(&qword_1E99F5470, &qword_1E99F5468);
    uint64_t v50 = sub_1ACE75AD8();
    swift_release();
    sub_1ACA50E78((uint64_t)&v78, &qword_1E99F5468);
  }
  else
  {
    uint64_t v36 = *(void *)(a2 + 2200);
    sub_1ACA69E2C(a2, (uint64_t)&v78);
    uint64_t v37 = swift_allocObject();
    uint64_t v55 = a2;
    uint64_t v38 = v37;
    long long v39 = v90;
    *(_OWORD *)(v37 + 216) = v89;
    *(_OWORD *)(v37 + 232) = v39;
    long long v40 = v92;
    *(_OWORD *)(v37 + 248) = v91;
    *(_OWORD *)(v37 + 264) = v40;
    long long v41 = v86;
    *(_OWORD *)(v37 + 152) = v85;
    *(_OWORD *)(v37 + 168) = v41;
    long long v42 = v88;
    *(_OWORD *)(v37 + 184) = v87;
    *(_OWORD *)(v37 + 200) = v42;
    long long v43 = v82[1];
    *(_OWORD *)(v37 + 88) = v82[0];
    *(_OWORD *)(v37 + 104) = v43;
    long long v44 = v84;
    *(_OWORD *)(v37 + 120) = v83;
    *(_OWORD *)(v37 + 136) = v44;
    long long v45 = v79;
    *(_OWORD *)(v37 + 24) = v78;
    *(_OWORD *)(v37 + 40) = v45;
    long long v46 = v81;
    *(_OWORD *)(v37 + 56) = v80;
    *(void *)(v37 + 16) = v36;
    *(_OWORD *)(v37 + 72) = v46;
    uint64_t v47 = swift_allocObject();
    uint64_t v54 = v9;
    *(void *)(v47 + 16) = sub_1ACD53DEC;
    *(void *)(v47 + 24) = v38;
    uint64_t v48 = swift_allocObject();
    uint64_t v56 = v3;
    *(void *)(v48 + 16) = sub_1ACD53DEC;
    *(void *)(v48 + 24) = v38;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54C0);
    sub_1ACA51EA4(&qword_1E99F54E0, &qword_1E99F54C0);
    sub_1ACE75AF8();
    swift_release();
    swift_release();
    sub_1ACD4A750((uint64_t)sub_1ACD4EE3C, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);
    sub_1ACA51EA4(&qword_1E99F54E8, &qword_1E99F54D8);
    uint64_t v49 = v54;
    uint64_t v50 = sub_1ACE75AD8();
    ((void (*)(char *, uint64_t))v93[1])(v11, v49);
    sub_1ACA69E2C(v55, (uint64_t)&v78);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v65 = *a1;
    *a1 = 0x8000000000000000;
    sub_1ACD0F06C(v50, &v78, isUniquelyReferenced_nonNull_native);
    *a1 = v65;
    swift_bridgeObjectRelease();
    sub_1ACA69E88((uint64_t)&v78);
    swift_release();
  }
  return v50;
}

uint64_t sub_1ACD4D694(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54D0);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54D8);
  uint64_t v93 = *(void **)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned long long v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v13 = sub_1ACA66828((_OWORD *)a2), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    sub_1ACA69E2C(a2, (uint64_t)&v78);
    sub_1ACA3AAD4((uint64_t)&v90 + 8, (uint64_t)&v65, &qword_1EB772EA0);
    swift_retain();
    sub_1ACA69E88((uint64_t)&v78);
    if (*((void *)&v66 + 1))
    {
      sub_1ACA3AABC(&v65, (uint64_t)v75);
      uint64_t v16 = sub_1ACA69E2C(a2, (uint64_t)&v65);
      MEMORY[0x1F4188790](v16);
      swift_bridgeObjectRetain();
      sub_1ACD4AF18((uint64_t (*)(long long *))sub_1ACD55244, v12, &v78);
      swift_bridgeObjectRelease();
      sub_1ACA69E88((uint64_t)&v65);
      if (*((void *)&v78 + 1))
      {
        uint64_t v72 = &type metadata for ArtworkRequest;
        long long v73 = &protocol witness table for ArtworkRequest;
        uint64_t v17 = (_OWORD *)swift_allocObject();
        *(void *)&long long v71 = v17;
        long long v18 = v90;
        v17[13] = v89;
        v17[14] = v18;
        long long v19 = v92;
        v17[15] = v91;
        v17[16] = v19;
        long long v20 = v86;
        v17[9] = v85;
        v17[10] = v20;
        long long v21 = v88;
        v17[11] = v87;
        v17[12] = v21;
        long long v22 = v82[1];
        v17[5] = v82[0];
        v17[6] = v22;
        long long v23 = v84;
        v17[7] = v83;
        v17[8] = v23;
        long long v24 = v79;
        v17[1] = v78;
        _OWORD v17[2] = v24;
        long long v25 = v81;
        v17[3] = v80;
        void v17[4] = v25;
        sub_1ACA3AABC(&v71, (uint64_t)v74);
        long long v26 = __swift_project_boxed_opaque_existential_1(v74, v74[3]);
        sub_1ACA3AAD4((uint64_t)(v26 + 27), (uint64_t)&v60, &qword_1EB772EA0);
        if (v61)
        {
          sub_1ACA3AABC(&v60, (uint64_t)v62);
          uint64_t v27 = v76;
          uint64_t v28 = v77;
          uint64_t v93 = __swift_project_boxed_opaque_existential_1(v75, v76);
          uint64_t v56 = v3;
          uint64_t v29 = a2;
          uint64_t v30 = v63;
          uint64_t v31 = v64;
          __swift_project_boxed_opaque_existential_1(v62, v63);
          uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
          uint64_t v33 = v31;
          a2 = v29;
          uint64_t v34 = v32(v30, v33);
          (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 16))("SwitchingToUniquePipelineTrace", 30, 2, v34, v35, v27, v28);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
        }
        else
        {
          sub_1ACA50E78((uint64_t)&v60, &qword_1EB772EA0);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
      }
      else
      {
        sub_1ACA50E78((uint64_t)&v78, &qword_1E99F54F0);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v65, &qword_1EB772EA0);
    }
    sub_1ACA69E2C(a2, (uint64_t)&v78);
    sub_1ACA3AAD4((uint64_t)&v90 + 8, (uint64_t)v75, &qword_1EB772EA0);
    sub_1ACA69E88((uint64_t)&v78);
    sub_1ACA3AAD4((uint64_t)v75, (uint64_t)v74, &qword_1EB772EA0);
    *(void *)&long long v65 = v15;
    sub_1ACA3AAD4((uint64_t)v74, (uint64_t)&v65 + 8, &qword_1EB772EA0);
    *(void *)&long long v68 = "FromUniquePipeline";
    *((void *)&v68 + 1) = 18;
    LOBYTE(v69) = 2;
    LOBYTE(v70[2]) = 0;
    swift_retain();
    sub_1ACA50E78((uint64_t)v74, &qword_1EB772EA0);
    v70[0] = 0;
    v70[1] = 0xE000000000000000;
    BYTE1(v70[2]) = 0;
    long long v80 = v67;
    long long v81 = v68;
    long long v78 = v65;
    long long v79 = v66;
    v82[0] = v69;
    *(_OWORD *)((char *)v82 + 10) = *(_OWORD *)((char *)v70 + 2);
    sub_1ACA50E78((uint64_t)v75, &qword_1EB772EA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5468);
    sub_1ACA51EA4(&qword_1E99F5470, &qword_1E99F5468);
    uint64_t v50 = sub_1ACE75AD8();
    swift_release();
    sub_1ACA50E78((uint64_t)&v78, &qword_1E99F5468);
  }
  else
  {
    uint64_t v36 = *(void *)(a2 + 1344);
    sub_1ACA69E2C(a2, (uint64_t)&v78);
    uint64_t v37 = swift_allocObject();
    uint64_t v55 = a2;
    uint64_t v38 = v37;
    long long v39 = v90;
    *(_OWORD *)(v37 + 216) = v89;
    *(_OWORD *)(v37 + 232) = v39;
    long long v40 = v92;
    *(_OWORD *)(v37 + 248) = v91;
    *(_OWORD *)(v37 + 264) = v40;
    long long v41 = v86;
    *(_OWORD *)(v37 + 152) = v85;
    *(_OWORD *)(v37 + 168) = v41;
    long long v42 = v88;
    *(_OWORD *)(v37 + 184) = v87;
    *(_OWORD *)(v37 + 200) = v42;
    long long v43 = v82[1];
    *(_OWORD *)(v37 + 88) = v82[0];
    *(_OWORD *)(v37 + 104) = v43;
    long long v44 = v84;
    *(_OWORD *)(v37 + 120) = v83;
    *(_OWORD *)(v37 + 136) = v44;
    long long v45 = v79;
    *(_OWORD *)(v37 + 24) = v78;
    *(_OWORD *)(v37 + 40) = v45;
    long long v46 = v81;
    *(_OWORD *)(v37 + 56) = v80;
    *(void *)(v37 + 16) = v36;
    *(_OWORD *)(v37 + 72) = v46;
    uint64_t v47 = swift_allocObject();
    uint64_t v54 = v9;
    *(void *)(v47 + 16) = sub_1ACD5451C;
    *(void *)(v47 + 24) = v38;
    uint64_t v48 = swift_allocObject();
    uint64_t v56 = v3;
    *(void *)(v48 + 16) = sub_1ACD5451C;
    *(void *)(v48 + 24) = v38;
    swift_retain_n();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54C0);
    sub_1ACA51EA4(&qword_1E99F54E0, &qword_1E99F54C0);
    sub_1ACE75AF8();
    swift_release();
    swift_release();
    sub_1ACD4A750((uint64_t)sub_1ACD55280, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);
    sub_1ACA51EA4(&qword_1E99F54E8, &qword_1E99F54D8);
    uint64_t v49 = v54;
    uint64_t v50 = sub_1ACE75AD8();
    ((void (*)(char *, uint64_t))v93[1])(v11, v49);
    sub_1ACA69E2C(v55, (uint64_t)&v78);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v65 = *a1;
    *a1 = 0x8000000000000000;
    sub_1ACD0F06C(v50, &v78, isUniquelyReferenced_nonNull_native);
    *a1 = v65;
    swift_bridgeObjectRelease();
    sub_1ACA69E88((uint64_t)&v78);
    swift_release();
  }
  return v50;
}

uint64_t sub_1ACD4DE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACD551DC(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v9 = v6;
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 24));
  sub_1ACD54BB4((uint64_t *)(a1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 24));
  return sub_1ACD54C74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACD4DF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ACD551DC(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v9 = v6;
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 24));
  sub_1ACD54F88((uint64_t *)(a1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 24));
  return sub_1ACD54C74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t sub_1ACD4E018(os_unfair_lock_s *a1, uint64_t a2)
{
  sub_1ACA69E2C(a2, (uint64_t)v5);
  uint64_t v3 = (uint64_t *)&a1[4];
  a1 += 6;
  os_unfair_lock_lock(a1);
  sub_1ACD53F40(v3);
  os_unfair_lock_unlock(a1);
  return sub_1ACA69E88((uint64_t)v5);
}

uint64_t sub_1ACD4E090(os_unfair_lock_s *a1, uint64_t a2)
{
  sub_1ACA69E2C(a2, (uint64_t)v5);
  uint64_t v3 = (uint64_t *)&a1[4];
  a1 += 6;
  os_unfair_lock_lock(a1);
  sub_1ACD55288(v3);
  os_unfair_lock_unlock(a1);
  return sub_1ACA69E88((uint64_t)v5);
}

uint64_t sub_1ACD4E108(uint64_t *a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1ACA6673C(a2);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *a1;
    uint64_t v12 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACD08874();
      uint64_t v9 = v12;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for TTMLRequest();
    sub_1ACD54C74(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v4, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    sub_1ACB1C870(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACD4E200(uint64_t *a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1ACA666E8(a2);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *a1;
    uint64_t v12 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACD088A8();
      uint64_t v9 = v12;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for ShazamSignatureRequest();
    sub_1ACD54C74(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v4, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    sub_1ACB1CE44(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACD4E2F8(uint64_t *a1, _OWORD *a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1ACA66828(a2);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *a1;
    uint64_t v10 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ACD09820();
      uint64_t v9 = v10;
    }
    sub_1ACA69E88(*(void *)(v9 + 48) + (v4 << 8));
    sub_1ACB1DBA4(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACD4E3C0()
{
  uint64_t v1 = (id *)v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54B0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  long long v44 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v43 = (char *)&v37 - v8;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54B8);
  MEMORY[0x1F4188790](v39);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v42 = (uint64_t)&v37 - v12;
  uint64_t v38 = v0 + 8;
  sub_1ACD504A0(v50);
  unint64_t v13 = *(os_unfair_lock_s **)(v0 + 2208);
  uint64_t v45 = v0 + 8;
  long long v46 = v50;
  char v14 = (uint64_t *)&v13[4];
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1ACD53DB8(v14, (uint64_t *)v49);
  os_unfair_lock_unlock(v15);
  id v16 = v49[0];
  sub_1ACA50E78((uint64_t)v50, &qword_1E99F54C0);
  v50[0] = v16;
  v49[0] = *v1;
  id v17 = v49[0];
  uint64_t v18 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  id v19 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704E8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7704E0, &qword_1EB7704E8);
  sub_1ACC42D88((unint64_t *)&qword_1EB7669D0, (unint64_t *)&qword_1EB7734B0);
  long long v20 = v43;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  swift_release();
  sub_1ACA69E2C(v38, (uint64_t)v50);
  sub_1ACA3AAD4((uint64_t)&v51, (uint64_t)v49, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)v50);
  uint64_t v21 = sub_1ACE76D38();
  uint64_t v23 = v22;
  uint64_t v24 = v40;
  uint64_t v25 = v41;
  long long v26 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v27 = v44;
  v26(v44, v20, v41);
  sub_1ACA3AAD4((uint64_t)v49, (uint64_t)v50, &qword_1EB772EA0);
  v26(v10, v27, v25);
  uint64_t v28 = (int *)v39;
  sub_1ACA3AAD4((uint64_t)v50, (uint64_t)&v10[*(int *)(v39 + 36)], &qword_1EB772EA0);
  uint64_t v29 = &v10[v28[10]];
  *(void *)uint64_t v29 = "QueueHop";
  *((void *)v29 + 1) = 8;
  v29[16] = 2;
  v10[v28[12]] = 0;
  uint64_t v47 = v21;
  uint64_t v48 = v23;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v30 = v47;
  uint64_t v31 = v48;
  sub_1ACA50E78((uint64_t)v50, &qword_1EB772EA0);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v24 + 8);
  v32(v44, v25);
  uint64_t v33 = &v10[v28[11]];
  *(void *)uint64_t v33 = v30;
  *((void *)v33 + 1) = v31;
  v10[v28[13]] = 0;
  uint64_t v34 = v42;
  sub_1ACA50E14((uint64_t)v10, v42, &qword_1E99F54B8);
  sub_1ACA50E78((uint64_t)v49, &qword_1EB772EA0);
  v32(v43, v25);
  sub_1ACA51EA4(&qword_1E99F54C8, &qword_1E99F54B8);
  uint64_t v35 = sub_1ACE75AD8();
  sub_1ACA50E78(v34, &qword_1E99F54B8);
  return v35;
}

uint64_t sub_1ACD4E8A4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54B0);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v43 = (char *)&v36 - v7;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54B8);
  MEMORY[0x1F4188790](v37);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (uint64_t)&v36 - v11;
  uint64_t v38 = v0;
  uint64_t v12 = (uint64_t)(v0 + 1);
  v46[0] = sub_1ACD52548();
  unint64_t v13 = *v0;
  v48[0] = v13;
  uint64_t v14 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  id v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704E8);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB7704E0, &qword_1EB7704E8);
  sub_1ACC42D88((unint64_t *)&qword_1EB7669D0, (unint64_t *)&qword_1EB7734B0);
  id v16 = v43;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v3, &qword_1EB7669C8);

  swift_release();
  sub_1ACA69E2C(v12, (uint64_t)v46);
  sub_1ACA3AAD4((uint64_t)&v47, (uint64_t)v48, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)v46);
  uint64_t v17 = sub_1ACE76D38();
  uint64_t v19 = v18;
  long long v20 = v39;
  uint64_t v21 = v40;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v23 = v16;
  uint64_t v24 = v41;
  v22(v39, v23, v41);
  sub_1ACA3AAD4((uint64_t)v48, (uint64_t)v46, &qword_1EB772EA0);
  v22(v9, v20, v24);
  uint64_t v25 = v37;
  sub_1ACA3AAD4((uint64_t)v46, (uint64_t)&v9[*(int *)(v37 + 36)], &qword_1EB772EA0);
  long long v26 = &v9[*(int *)(v25 + 40)];
  *(void *)long long v26 = "QueueHop";
  *((void *)v26 + 1) = 8;
  v26[16] = 2;
  uint64_t v27 = v25;
  v9[*(int *)(v25 + 48)] = 0;
  uint64_t v44 = v17;
  uint64_t v45 = v19;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v28 = v44;
  uint64_t v29 = v45;
  sub_1ACA50E78((uint64_t)v46, &qword_1EB772EA0);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v21 + 8);
  v30(v20, v24);
  uint64_t v31 = &v9[*(int *)(v27 + 44)];
  *(void *)uint64_t v31 = v28;
  *((void *)v31 + 1) = v29;
  v9[*(int *)(v27 + 52)] = 0;
  uint64_t v32 = (uint64_t)v9;
  uint64_t v33 = v42;
  sub_1ACA50E14(v32, v42, &qword_1E99F54B8);
  sub_1ACA50E78((uint64_t)v48, &qword_1EB772EA0);
  v30(v43, v24);
  sub_1ACA51EA4(&qword_1E99F54C8, &qword_1E99F54B8);
  uint64_t v34 = sub_1ACE75AD8();
  sub_1ACA50E78(v33, &qword_1E99F54B8);
  return v34;
}

uint64_t sub_1ACD4ED40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD4ED98(a1, (uint64_t (*)(void))type metadata accessor for TranscriptData.TimeBombedURLs, (uint64_t (*)(void))type metadata accessor for TranscriptData.TimeBombedURLs, a2);
}

uint64_t sub_1ACD4ED6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD4ED98(a1, (uint64_t (*)(void))type metadata accessor for ArtworkContent, (uint64_t (*)(void))type metadata accessor for ArtworkContent, a2);
}

uint64_t sub_1ACD4ED98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  sub_1ACD551DC(a1, a4, a2);
  uint64_t v6 = a3(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a4, 0, 1, v6);
}

uint64_t sub_1ACD4EE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(a1, a2, &qword_1E99F5730);
}

uint64_t sub_1ACD4EE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(a1, a2, &qword_1E99F5408);
}

uint64_t sub_1ACD4EE60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4540) - 8;
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTMLRequest();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55D0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55D8);
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v45 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (uint64_t *)((char *)&v43 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4558);
  sub_1ACD4F368((uint64_t)v9);
  uint64_t v17 = *(os_unfair_lock_s **)(v1 + *(int *)(v16 + 48));
  uint64_t v52 = v1;
  uint64_t v53 = v9;
  uint64_t v18 = (uint64_t)&v17[4];
  uint64_t v19 = v17 + 6;
  os_unfair_lock_lock(v17 + 6);
  sub_1ACD54B14(v18, &v56);
  os_unfair_lock_unlock(v19);
  uint64_t v20 = v56;
  sub_1ACA50E78((uint64_t)v9, &qword_1E99F55D0);
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4560);
  uint64_t v22 = v1 + v21[20];
  uint64_t v23 = v2 + v21[19];
  LOBYTE(v9) = *(unsigned char *)(v2 + v21[21]);
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 56);
  uint64_t v26 = (uint64_t)v15 + v11[15];
  long long v49 = *(_OWORD *)(v23 + 8);
  long long v50 = *(_OWORD *)(v23 + 24);
  long long v51 = *(_OWORD *)(v23 + 40);
  sub_1ACD551DC(v22, v26, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  *id v15 = v20;
  uint64_t v27 = (char *)v15 + v11[16];
  *(void *)uint64_t v27 = v24;
  *(_OWORD *)(v27 + 8) = v49;
  *(_OWORD *)(v27 + 24) = v50;
  *(_OWORD *)(v27 + 40) = v51;
  *((void *)v27 + 7) = v25;
  *((unsigned char *)v15 + v11[17]) = (_BYTE)v9;
  *((unsigned char *)v15 + v11[18]) = 0;
  uint64_t v28 = v22;
  uint64_t v29 = v44;
  sub_1ACD551DC(v28, v44, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4(v29 + *(int *)(v5 + 44), (uint64_t)v61, &qword_1EB772EA0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1ACD54C74(v29, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v30 = *(void *)(v23 + 56);
  uint64_t v56 = *(void *)v23;
  long long v31 = *(_OWORD *)(v23 + 8);
  long long v50 = *(_OWORD *)(v23 + 24);
  long long v57 = v31;
  long long v58 = v50;
  long long v51 = *(_OWORD *)(v23 + 40);
  long long v59 = v51;
  uint64_t v60 = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55E0);
  uint64_t v56 = sub_1ACE76228();
  *(void *)&long long v57 = v32;
  sub_1ACE762C8();
  uint64_t v34 = v56;
  uint64_t v33 = v57;
  uint64_t v35 = v45;
  sub_1ACA3AAD4((uint64_t)v15, v45, &qword_1E99F55D8);
  sub_1ACA3AAD4((uint64_t)v61, (uint64_t)&v56, &qword_1EB772EA0);
  uint64_t v36 = v46;
  sub_1ACA3AAD4(v35, v46, &qword_1E99F55D8);
  uint64_t v37 = (int *)v47;
  sub_1ACA3AAD4((uint64_t)&v56, v36 + *(int *)(v47 + 44), &qword_1EB772EA0);
  uint64_t v38 = v36 + v37[12];
  *(void *)uint64_t v38 = "Cache";
  *(void *)(v38 + 8) = 5;
  *(unsigned char *)(v38 + 16) = 2;
  *(unsigned char *)(v36 + v37[14]) = 0;
  uint64_t v54 = v34;
  uint64_t v55 = v33;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v54;
  uint64_t v40 = v55;
  sub_1ACA50E78((uint64_t)&v56, &qword_1EB772EA0);
  sub_1ACA50E78(v35, &qword_1E99F55D8);
  uint64_t v41 = (uint64_t *)(v36 + v37[13]);
  uint64_t *v41 = v39;
  v41[1] = v40;
  *(unsigned char *)(v36 + v37[15]) = 0;
  sub_1ACA50E14(v36, v48, &qword_1E99F4540);
  sub_1ACA50E78((uint64_t)v61, &qword_1EB772EA0);
  return sub_1ACA50E78((uint64_t)v15, &qword_1E99F55D8);
}

uint64_t sub_1ACD4F368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55D0) - 8;
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for TTMLRequest() - 8;
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4548);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5668);
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v8 = v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5670);
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v49 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v43 - v15;
  sub_1ACA3AAD4(v2, (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1E99F4548);
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1ACA50E14((uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_1E99F4548);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5658);
  sub_1ACA51EA4(&qword_1E99F5660, &qword_1E99F5658);
  uint64_t v45 = v10;
  sub_1ACE75A38();
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4550);
  uint64_t v20 = v2 + v19[20];
  uint64_t v21 = v2 + v19[19];
  LOBYTE(v2) = *(unsigned char *)(v2 + v19[21]);
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 56);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  long long v43 = *(_OWORD *)(v21 + 8);
  long long v25 = *(_OWORD *)(v21 + 40);
  long long v53 = *(_OWORD *)(v21 + 24);
  long long v54 = v25;
  uint64_t v26 = v46;
  v24(v16, v10, v46);
  sub_1ACD551DC(v20, (uint64_t)&v16[v12[15]], (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v27 = &v16[v12[16]];
  *(void *)uint64_t v27 = v22;
  *(_OWORD *)(v27 + 8) = v43;
  *(_OWORD *)(v27 + 24) = v53;
  *(_OWORD *)(v27 + 40) = v54;
  *((void *)v27 + 7) = v23;
  v16[v12[17]] = v2;
  v16[v12[18]] = 0;
  uint64_t v28 = (uint64_t)v16;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v44 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29(v45, v26);
  uint64_t v30 = v47;
  sub_1ACD551DC(v20, v47, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4(v30 + *(int *)(v48 + 44), (uint64_t)v62, &qword_1EB772EA0);
  sub_1ACD54C74(v30, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v31 = *(void *)(v21 + 56);
  uint64_t v57 = *(void *)v21;
  long long v58 = *(_OWORD *)(v21 + 8);
  long long v53 = *(_OWORD *)(v21 + 24);
  long long v59 = v53;
  long long v54 = *(_OWORD *)(v21 + 40);
  long long v60 = v54;
  uint64_t v61 = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55E0);
  uint64_t v57 = sub_1ACE76228();
  *(void *)&long long v58 = v32;
  sub_1ACE762C8();
  uint64_t v34 = v57;
  uint64_t v33 = v58;
  uint64_t v35 = v49;
  sub_1ACA3AAD4(v28, v49, &qword_1E99F5670);
  sub_1ACA3AAD4((uint64_t)v62, (uint64_t)&v57, &qword_1EB772EA0);
  uint64_t v36 = v50;
  sub_1ACA3AAD4(v35, v50, &qword_1E99F5670);
  uint64_t v37 = (int *)v51;
  sub_1ACA3AAD4((uint64_t)&v57, v36 + *(int *)(v51 + 44), &qword_1EB772EA0);
  uint64_t v38 = v36 + v37[12];
  *(void *)uint64_t v38 = "Cache";
  *(void *)(v38 + 8) = 5;
  *(unsigned char *)(v38 + 16) = 2;
  *(unsigned char *)(v36 + v37[14]) = 0;
  uint64_t v55 = v34;
  uint64_t v56 = v33;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v55;
  uint64_t v40 = v56;
  sub_1ACA50E78((uint64_t)&v57, &qword_1EB772EA0);
  sub_1ACA50E78(v35, &qword_1E99F5670);
  uint64_t v41 = (uint64_t *)(v36 + v37[13]);
  uint64_t *v41 = v39;
  v41[1] = v40;
  *(unsigned char *)(v36 + v37[15]) = 0;
  sub_1ACA50E14(v36, v52, &qword_1E99F55D0);
  sub_1ACA50E78((uint64_t)v62, &qword_1EB772EA0);
  return sub_1ACA50E78(v28, &qword_1E99F5670);
}

uint64_t sub_1ACD4F980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45A8) - 8;
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5680);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5688);
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v45 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v43 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45C0);
  sub_1ACD4FE88((uint64_t)v9);
  unint64_t v17 = *(os_unfair_lock_s **)(v1 + *(int *)(v16 + 48));
  uint64_t v52 = v1;
  long long v53 = v9;
  uint64_t v18 = (uint64_t)&v17[4];
  uint64_t v19 = v17 + 6;
  os_unfair_lock_lock(v17 + 6);
  sub_1ACD54C10(v18, &v56);
  os_unfair_lock_unlock(v19);
  uint64_t v20 = v56;
  sub_1ACA50E78((uint64_t)v9, &qword_1E99F5680);
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45C8);
  uint64_t v22 = v1 + v21[20];
  uint64_t v23 = v2 + v21[19];
  LOBYTE(v9) = *(unsigned char *)(v2 + v21[21]);
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 56);
  uint64_t v26 = (uint64_t)v15 + v11[15];
  long long v49 = *(_OWORD *)(v23 + 8);
  long long v50 = *(_OWORD *)(v23 + 24);
  long long v51 = *(_OWORD *)(v23 + 40);
  sub_1ACD551DC(v22, v26, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  *uint64_t v15 = v20;
  uint64_t v27 = (char *)v15 + v11[16];
  *(void *)uint64_t v27 = v24;
  *(_OWORD *)(v27 + 8) = v49;
  *(_OWORD *)(v27 + 24) = v50;
  *(_OWORD *)(v27 + 40) = v51;
  *((void *)v27 + 7) = v25;
  *((unsigned char *)v15 + v11[17]) = (_BYTE)v9;
  *((unsigned char *)v15 + v11[18]) = 0;
  uint64_t v28 = v22;
  uint64_t v29 = v44;
  sub_1ACD551DC(v28, v44, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4(v29 + *(int *)(v5 + 44), (uint64_t)v61, &qword_1EB772EA0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1ACD54C74(v29, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v30 = *(void *)(v23 + 56);
  uint64_t v56 = *(void *)v23;
  long long v31 = *(_OWORD *)(v23 + 8);
  long long v50 = *(_OWORD *)(v23 + 24);
  long long v57 = v31;
  long long v58 = v50;
  long long v51 = *(_OWORD *)(v23 + 40);
  long long v59 = v51;
  uint64_t v60 = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5690);
  uint64_t v56 = sub_1ACE76228();
  *(void *)&long long v57 = v32;
  sub_1ACE762C8();
  uint64_t v34 = v56;
  uint64_t v33 = v57;
  uint64_t v35 = v45;
  sub_1ACA3AAD4((uint64_t)v15, v45, &qword_1E99F5688);
  sub_1ACA3AAD4((uint64_t)v61, (uint64_t)&v56, &qword_1EB772EA0);
  uint64_t v36 = v46;
  sub_1ACA3AAD4(v35, v46, &qword_1E99F5688);
  uint64_t v37 = (int *)v47;
  sub_1ACA3AAD4((uint64_t)&v56, v36 + *(int *)(v47 + 44), &qword_1EB772EA0);
  uint64_t v38 = v36 + v37[12];
  *(void *)uint64_t v38 = "Cache";
  *(void *)(v38 + 8) = 5;
  *(unsigned char *)(v38 + 16) = 2;
  *(unsigned char *)(v36 + v37[14]) = 0;
  uint64_t v54 = v34;
  uint64_t v55 = v33;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v54;
  uint64_t v40 = v55;
  sub_1ACA50E78((uint64_t)&v56, &qword_1EB772EA0);
  sub_1ACA50E78(v35, &qword_1E99F5688);
  uint64_t v41 = (uint64_t *)(v36 + v37[13]);
  uint64_t *v41 = v39;
  v41[1] = v40;
  *(unsigned char *)(v36 + v37[15]) = 0;
  sub_1ACA50E14(v36, v48, &qword_1E99F45A8);
  sub_1ACA50E78((uint64_t)v61, &qword_1EB772EA0);
  return sub_1ACA50E78((uint64_t)v15, &qword_1E99F5688);
}

uint64_t sub_1ACD4FE88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5680) - 8;
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for ShazamSignatureRequest() - 8;
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45B0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5718);
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v8 = v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5720);
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v49 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v43 - v15;
  sub_1ACA3AAD4(v2, (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1E99F45B0);
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1ACA50E14((uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_1E99F45B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5708);
  sub_1ACA51EA4(&qword_1E99F5710, &qword_1E99F5708);
  uint64_t v45 = v10;
  sub_1ACE75A38();
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F45B8);
  uint64_t v20 = v2 + v19[20];
  uint64_t v21 = v2 + v19[19];
  LOBYTE(v2) = *(unsigned char *)(v2 + v19[21]);
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 56);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  long long v43 = *(_OWORD *)(v21 + 8);
  long long v25 = *(_OWORD *)(v21 + 40);
  long long v53 = *(_OWORD *)(v21 + 24);
  long long v54 = v25;
  uint64_t v26 = v46;
  v24(v16, v10, v46);
  sub_1ACD551DC(v20, (uint64_t)&v16[v12[15]], (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v27 = &v16[v12[16]];
  *(void *)uint64_t v27 = v22;
  *(_OWORD *)(v27 + 8) = v43;
  *(_OWORD *)(v27 + 24) = v53;
  *(_OWORD *)(v27 + 40) = v54;
  *((void *)v27 + 7) = v23;
  v16[v12[17]] = v2;
  v16[v12[18]] = 0;
  uint64_t v28 = (uint64_t)v16;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v44 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29(v45, v26);
  uint64_t v30 = v47;
  sub_1ACD551DC(v20, v47, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4(v30 + *(int *)(v48 + 44), (uint64_t)v62, &qword_1EB772EA0);
  sub_1ACD54C74(v30, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v31 = *(void *)(v21 + 56);
  uint64_t v57 = *(void *)v21;
  long long v58 = *(_OWORD *)(v21 + 8);
  long long v53 = *(_OWORD *)(v21 + 24);
  long long v59 = v53;
  long long v54 = *(_OWORD *)(v21 + 40);
  long long v60 = v54;
  uint64_t v61 = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5690);
  uint64_t v57 = sub_1ACE76228();
  *(void *)&long long v58 = v32;
  sub_1ACE762C8();
  uint64_t v34 = v57;
  uint64_t v33 = v58;
  uint64_t v35 = v49;
  sub_1ACA3AAD4(v28, v49, &qword_1E99F5720);
  sub_1ACA3AAD4((uint64_t)v62, (uint64_t)&v57, &qword_1EB772EA0);
  uint64_t v36 = v50;
  sub_1ACA3AAD4(v35, v50, &qword_1E99F5720);
  uint64_t v37 = (int *)v51;
  sub_1ACA3AAD4((uint64_t)&v57, v36 + *(int *)(v51 + 44), &qword_1EB772EA0);
  uint64_t v38 = v36 + v37[12];
  *(void *)uint64_t v38 = "Cache";
  *(void *)(v38 + 8) = 5;
  *(unsigned char *)(v38 + 16) = 2;
  *(unsigned char *)(v36 + v37[14]) = 0;
  uint64_t v55 = v34;
  uint64_t v56 = v33;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v55;
  uint64_t v40 = v56;
  sub_1ACA50E78((uint64_t)&v57, &qword_1EB772EA0);
  sub_1ACA50E78(v35, &qword_1E99F5720);
  uint64_t v41 = (uint64_t *)(v36 + v37[13]);
  uint64_t *v41 = v39;
  v41[1] = v40;
  *(unsigned char *)(v36 + v37[15]) = 0;
  sub_1ACA50E14(v36, v52, &qword_1E99F5680);
  sub_1ACA50E78((uint64_t)v62, &qword_1EB772EA0);
  return sub_1ACA50E78(v28, &qword_1E99F5720);
}

uint64_t sub_1ACD504A0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1ACD48EA0();
  char v4 = *(unsigned char *)(v1 + 1936);
  uint64_t v5 = *(void *)(v1 + 1672);
  sub_1ACA69E2C(v1 + 1680, (uint64_t)v15);
  uint64_t v14 = v3;
  v15[32] = v5;
  char v16 = v4;
  char v17 = 0;
  sub_1ACA69E2C(v1 + 1680, (uint64_t)__src);
  sub_1ACA3AAD4((uint64_t)&__src[27], (uint64_t)v13, &qword_1EB772EA0);
  swift_retain();
  sub_1ACA69E88((uint64_t)__src);
  __src[0] = *(void *)(v1 + 1672);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5540);
  __src[0] = sub_1ACE76228();
  __src[1] = v6;
  sub_1ACE762C8();
  uint64_t v7 = __src[0];
  uint64_t v8 = __src[1];
  sub_1ACA3AAD4((uint64_t)&v14, (uint64_t)v12, &qword_1E99F5548);
  sub_1ACA3AAD4((uint64_t)v13, (uint64_t)v11, &qword_1EB772EA0);
  sub_1ACA3AAD4((uint64_t)v12, (uint64_t)__src, &qword_1E99F5548);
  sub_1ACA3AAD4((uint64_t)v11, (uint64_t)&__src[35], &qword_1EB772EA0);
  __src[40] = "Cache";
  __src[41] = 5;
  LOBYTE(__src[42]) = 2;
  LOBYTE(__src[45]) = 0;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACA50E78((uint64_t)v11, &qword_1EB772EA0);
  sub_1ACA50E78((uint64_t)v12, &qword_1E99F5548);
  __src[43] = v7;
  __src[44] = v8;
  BYTE1(__src[45]) = 0;
  memcpy(a1, __src, 0x16AuLL);
  sub_1ACA50E78((uint64_t)v13, &qword_1EB772EA0);
  return sub_1ACA50E78((uint64_t)&v14, &qword_1E99F5548);
}

uint64_t sub_1ACD50660@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  char v16 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5550);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1ACD4E8A4();
  sub_1ACA3AAD4(v1, (uint64_t)v22, &qword_1E99F5430);
  uint64_t v7 = swift_allocObject();
  memcpy((void *)(v7 + 16), v22, 0x32AuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704E8);
  type metadata accessor for ArtworkContent();
  sub_1ACA51EA4((unint64_t *)&qword_1EB7704E0, &qword_1EB7704E8);
  sub_1ACE75C28();
  swift_release();
  swift_release();
  sub_1ACA51EA4(&qword_1E99F5578, &qword_1E99F5550);
  uint64_t v8 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  LOBYTE(v4) = *(unsigned char *)(v2 + 1080);
  uint64_t v9 = *(void *)(v2 + 816);
  sub_1ACA69E2C(v2 + 824, (uint64_t)v24);
  uint64_t v23 = v8;
  v24[32] = v9;
  char v25 = v4;
  char v26 = 0;
  sub_1ACA69E2C(v2 + 824, (uint64_t)v22);
  sub_1ACA3AAD4((uint64_t)&v22[27], (uint64_t)v21, &qword_1EB772EA0);
  swift_retain();
  sub_1ACA69E88((uint64_t)v22);
  v22[0] = *(void *)(v2 + 816);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5540);
  v22[0] = sub_1ACE76228();
  v22[1] = v10;
  sub_1ACE762C8();
  uint64_t v11 = v22[0];
  uint64_t v12 = v22[1];
  sub_1ACA3AAD4((uint64_t)&v23, (uint64_t)v20, &qword_1E99F5548);
  sub_1ACA3AAD4((uint64_t)v21, (uint64_t)v19, &qword_1EB772EA0);
  sub_1ACA3AAD4((uint64_t)v20, (uint64_t)v22, &qword_1E99F5548);
  sub_1ACA3AAD4((uint64_t)v19, (uint64_t)&v22[35], &qword_1EB772EA0);
  unsigned char v22[40] = "Cache";
  v22[41] = 5;
  LOBYTE(v22[42]) = 2;
  LOBYTE(v22[45]) = 0;
  uint64_t v17 = v11;
  uint64_t v18 = v12;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v13 = v17;
  uint64_t v14 = v18;
  sub_1ACA50E78((uint64_t)v19, &qword_1EB772EA0);
  sub_1ACA50E78((uint64_t)v20, &qword_1E99F5548);
  v22[43] = v13;
  v22[44] = v14;
  BYTE1(v22[45]) = 0;
  memcpy(v16, v22, 0x16AuLL);
  sub_1ACA50E78((uint64_t)v21, &qword_1EB772EA0);
  return sub_1ACA50E78((uint64_t)&v23, &qword_1E99F5548);
}

uint64_t CachingImageContentProvider.domain.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1E99F53D8);
}

uint64_t CachingImageContentProvider.taskImageSource.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for CachingImageContentProvider() + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_retain();
}

uint64_t type metadata accessor for CachingImageContentProvider()
{
  uint64_t result = qword_1EB76F840;
  if (!qword_1EB76F840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CachingImageContentProvider.resizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CachingImageContentProvider() + 24);
  return sub_1ACA3E158(v3, a1);
}

id CachingImageContentProvider.workQueue.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for CachingImageContentProvider() + 28));
  return v1;
}

uint64_t CachingImageContentProvider.init(domain:taskImageSource:resizer:workQueue:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  sub_1ACA3AAD4(a1, a5, &qword_1E99F53D8);
  uint64_t v10 = (int *)type metadata accessor for CachingImageContentProvider();
  *(_OWORD *)(a5 + v10[5]) = *a2;
  sub_1ACA3E158(a3, a5 + v10[6]);
  *(void *)(a5 + v10[7]) = a4;
  id v11 = a4;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1ACA38114(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53E0);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = v13;
  *(void *)(a5 + v10[8]) = v14;
  unint64_t v15 = sub_1ACA38114(v12);

  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(void *)(v16 + 16) = v15;
  __swift_destroy_boxed_opaque_existential_0(a3);
  uint64_t result = sub_1ACA50E78(a1, &qword_1E99F53D8);
  *(void *)(a5 + v10[9]) = v16;
  return result;
}

uint64_t CachingImageContentProvider.content(for:)(uint64_t a1, uint64_t a2)
{
  v3[3496] = v2;
  v3[3495] = a2;
  v3[3494] = a1;
  uint64_t v4 = type metadata accessor for ArtworkContent();
  v3[3497] = v4;
  v3[3498] = *(void *)(v4 - 8);
  v3[3499] = swift_task_alloc();
  v3[3500] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53F0);
  v3[3501] = v5;
  v3[3502] = *(void *)(v5 - 8);
  v3[3503] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53F8);
  v3[3504] = v6;
  v3[3505] = *(void *)(v6 - 8);
  v3[3506] = swift_task_alloc();
  v3[3507] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5400);
  v3[3508] = v7;
  v3[3509] = *(void *)(v7 - 8);
  v3[3510] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5408);
  v3[3511] = swift_task_alloc();
  v3[3512] = swift_task_alloc();
  v3[3513] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACD50E78, 0, 0);
}

uint64_t sub_1ACD50E78()
{
  uint64_t v61 = (void *)(v0 + 4440);
  long long v60 = (void *)(v0 + 6648);
  uint64_t v59 = v0 + 10536;
  uint64_t v49 = (void *)(v0 + 18256);
  __dst = (void *)(v0 + 19608);
  uint64_t v45 = v0 + 23416;
  uint64_t v63 = v0 + 24232;
  uint64_t v62 = (_OWORD *)(v0 + 27776);
  uint64_t v1 = *(char *)(*(void *)(v0 + 27960) + 32) + 1;
  uint64_t v48 = qword_1ACE9FD30[v1];
  ArtworkRequest.withOriginalSize.getter(v0 + 27424);
  sub_1ACA69E2C(v0 + 27424, v0 + 26656);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 26864) = MEMORY[0x1E4FBC860];
  sub_1ACA69E88(v0 + 27424);
  if (qword_1EB773090 != -1) {
    swift_once();
  }
  unsigned int v58 = 0x301u >> (8 * v1);
  uint64_t v2 = *(void *)(v0 + 27968);
  ArtworkRequest.with(format:)(byte_1EB773080, v0 + 27168);
  uint64_t v44 = (int *)type metadata accessor for CachingImageContentProvider();
  uint64_t v3 = (uint64_t *)(v2 + v44[5]);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  sub_1ACA69E2C(v0 + 27168, v0 + 25616);
  *(void *)(v0 + 25872) = v5;
  *(void *)(v0 + 25880) = v4;
  swift_retain();
  sub_1ACA69E88(v0 + 27168);
  sub_1ACA69E2C(v0 + 26656, v0 + 25344);
  *(void *)(v0 + 25600) = v5;
  *(void *)(v0 + 25608) = v4;
  sub_1ACA3AAD4(v0 + 25616, v0 + 24792, &qword_1E99F5410);
  sub_1ACA3AAD4(v0 + 25344, v0 + 25064, &qword_1E99F5410);
  *(unsigned char *)(v0 + 25336) = 0;
  swift_retain();
  sub_1ACA50E78(v0 + 25344, &qword_1E99F5410);
  sub_1ACA50E78(v0 + 25616, &qword_1E99F5410);
  uint64_t v51 = v44[7];
  uint64_t v46 = v2;
  uint64_t v6 = *(void **)(v2 + v51);
  sub_1ACA3AAD4(v0 + 24792, v0 + 24240, &qword_1E99F5418);
  *(void *)(v0 + 24232) = v6;
  id v7 = v6;
  sub_1ACA50E78(v0 + 24792, &qword_1E99F5418);
  LOBYTE(v6) = byte_1EB773080;
  sub_1ACA3AAD4(v63, v0 + 23672, &qword_1E99F5420);
  ArtworkRequest.with(format:)(v6, v45);
  *(unsigned char *)(v0 + 24225) = (_BYTE)v6;
  sub_1ACA50E78(v63, &qword_1E99F5420);
  uint64_t v43 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
  uint64_t v50 = *(void *)(v0 + 28080);
  uint64_t v53 = *(void *)(v0 + 28064);
  uint64_t v54 = *(void *)(v0 + 28072);
  uint64_t v52 = *(void *)(v0 + 28056);
  uint64_t v57 = *(void *)(v0 + 28048);
  uint64_t v55 = *(void *)(v0 + 28040);
  uint64_t v56 = *(void *)(v0 + 28032);
  uint64_t v64 = *(void *)(v0 + 27968);
  uint64_t v42 = *(double **)(v0 + 27960);
  uint64_t v8 = *(void *)(v43
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428) + 4 * ((v58 & 3) + 15)));
  sub_1ACA3AAD4(v45, v0 + 21784, &qword_1E99F5430);
  sub_1ACA3AAD4(v45, v0 + 22600, &qword_1E99F5430);
  sub_1ACA69E2C(v0 + 22600, v0 + 26400);
  swift_retain_n();
  sub_1ACA50E78(v0 + 22600, &qword_1E99F5430);
  *(void *)(v0 + 20424) = v8;
  memcpy(__dst, (const void *)(v0 + 21784), 0x32AuLL);
  *(_OWORD *)(v0 + 20624) = *(_OWORD *)(v0 + 26592);
  *(_OWORD *)(v0 + 20640) = *(_OWORD *)(v0 + 26608);
  *(_OWORD *)(v0 + 20656) = *(_OWORD *)(v0 + 26624);
  *(_OWORD *)(v0 + 20672) = *(_OWORD *)(v0 + 26640);
  *(_OWORD *)(v0 + 20560) = *(_OWORD *)(v0 + 26528);
  *(_OWORD *)(v0 + 20576) = *(_OWORD *)(v0 + 26544);
  *(_OWORD *)(v0 + 20592) = *(_OWORD *)(v0 + 26560);
  *(_OWORD *)(v0 + 20608) = *(_OWORD *)(v0 + 26576);
  *(_OWORD *)(v0 + 20496) = *(_OWORD *)(v0 + 26464);
  *(_OWORD *)(v0 + 20512) = *(_OWORD *)(v0 + 26480);
  *(_OWORD *)(v0 + 20528) = *(_OWORD *)(v0 + 26496);
  *(_OWORD *)(v0 + 20544) = *(_OWORD *)(v0 + 26512);
  *(_OWORD *)(v0 + 20432) = *(_OWORD *)(v0 + 26400);
  *(_OWORD *)(v0 + 20448) = *(_OWORD *)(v0 + 26416);
  *(_OWORD *)(v0 + 20464) = *(_OWORD *)(v0 + 26432);
  *(_OWORD *)(v0 + 20480) = *(_OWORD *)(v0 + 26448);
  swift_release();
  *(unsigned char *)(v0 + 20688) = 1;
  sub_1ACA50E78(v45, &qword_1E99F5430);
  uint64_t v9 = *(void *)(v64 + v44[8]);
  sub_1ACA3AAD4((uint64_t)__dst, v0 + 20696, &qword_1E99F5438);
  *(void *)(v0 + 16896) = v9;
  sub_1ACA3AAD4(v0 + 20696, v0 + 15808, &qword_1E99F5438);
  sub_1ACA69E2C(v0 + 21520, v0 + 25888);
  swift_retain();
  sub_1ACA50E78(v0 + 20696, &qword_1E99F5438);
  *(_OWORD *)(v0 + 15744) = *(_OWORD *)(v0 + 26080);
  *(_OWORD *)(v0 + 15760) = *(_OWORD *)(v0 + 26096);
  *(_OWORD *)(v0 + 15776) = *(_OWORD *)(v0 + 26112);
  *(_OWORD *)(v0 + 15792) = *(_OWORD *)(v0 + 26128);
  *(_OWORD *)(v0 + 15680) = *(_OWORD *)(v0 + 26016);
  *(_OWORD *)(v0 + 15696) = *(_OWORD *)(v0 + 26032);
  *(_OWORD *)(v0 + 15712) = *(_OWORD *)(v0 + 26048);
  *(_OWORD *)(v0 + 15728) = *(_OWORD *)(v0 + 26064);
  *(_OWORD *)(v0 + 15616) = *(_OWORD *)(v0 + 25952);
  *(_OWORD *)(v0 + 15632) = *(_OWORD *)(v0 + 25968);
  *(_OWORD *)(v0 + 15648) = *(_OWORD *)(v0 + 25984);
  *(_OWORD *)(v0 + 15664) = *(_OWORD *)(v0 + 26000);
  *(_OWORD *)(v0 + 15552) = *(_OWORD *)(v0 + 25888);
  *(_OWORD *)(v0 + 15568) = *(_OWORD *)(v0 + 25904);
  *(_OWORD *)(v0 + 15584) = *(_OWORD *)(v0 + 25920);
  *(_OWORD *)(v0 + 15600) = *(_OWORD *)(v0 + 25936);
  memcpy(v49, (const void *)(v0 + 15552), 0x548uLL);
  sub_1ACA50E78((uint64_t)__dst, &qword_1E99F5438);
  double v10 = v42[22];
  double v11 = v42[23];
  double v12 = v42[24];
  sub_1ACA3E158(v64 + v44[6], v0 + 27912);
  sub_1ACA3AAD4((uint64_t)v49, v0 + 16904, &qword_1E99F5440);
  sub_1ACD48CD0((long long *)(v0 + 27912), v0 + 16904, v59, v10, v11, v12);
  sub_1ACA50E78((uint64_t)v49, &qword_1E99F5440);
  uint64_t v13 = *(void *)(v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428) + 4 * v48));
  sub_1ACA3AAD4(v59, v0 + 13880, &qword_1E99F5448);
  sub_1ACA3AAD4(v59, v0 + 12208, &qword_1E99F5448);
  sub_1ACA69E2C(v0 + 12208, v0 + 26912);
  swift_retain_n();
  sub_1ACA50E78(v0 + 12208, &qword_1E99F5448);
  *(void *)(v0 + 8320) = v13;
  memcpy(v60, (const void *)(v0 + 13880), 0x688uLL);
  long long v14 = *(_OWORD *)(v0 + 27120);
  *(_OWORD *)(v0 + 8520) = *(_OWORD *)(v0 + 27104);
  *(_OWORD *)(v0 + 8536) = v14;
  long long v15 = *(_OWORD *)(v0 + 27152);
  *(_OWORD *)(v0 + 8552) = *(_OWORD *)(v0 + 27136);
  *(_OWORD *)(v0 + 8568) = v15;
  long long v16 = *(_OWORD *)(v0 + 27056);
  *(_OWORD *)(v0 + 8456) = *(_OWORD *)(v0 + 27040);
  *(_OWORD *)(v0 + 8472) = v16;
  long long v17 = *(_OWORD *)(v0 + 27088);
  *(_OWORD *)(v0 + 8488) = *(_OWORD *)(v0 + 27072);
  *(_OWORD *)(v0 + 8504) = v17;
  long long v18 = *(_OWORD *)(v0 + 26992);
  *(_OWORD *)(v0 + 8392) = *(_OWORD *)(v0 + 26976);
  *(_OWORD *)(v0 + 8408) = v18;
  long long v19 = *(_OWORD *)(v0 + 27024);
  *(_OWORD *)(v0 + 8424) = *(_OWORD *)(v0 + 27008);
  *(_OWORD *)(v0 + 8440) = v19;
  long long v20 = *(_OWORD *)(v0 + 26928);
  *(_OWORD *)(v0 + 8328) = *(_OWORD *)(v0 + 26912);
  *(_OWORD *)(v0 + 8344) = v20;
  long long v21 = *(_OWORD *)(v0 + 26960);
  *(_OWORD *)(v0 + 8360) = *(_OWORD *)(v0 + 26944);
  *(_OWORD *)(v0 + 8376) = v21;
  swift_release();
  *(unsigned char *)(v0 + 8584) = 0;
  sub_1ACA50E78(v59, &qword_1E99F5448);
  uint64_t v22 = *(void *)(v64 + v44[9]);
  sub_1ACA3AAD4((uint64_t)v60, v0 + 8592, &qword_1E99F5450);
  *(void *)(v0 + 4432) = v22;
  sub_1ACA3AAD4(v0 + 8592, v0 + 2488, &qword_1E99F5450);
  sub_1ACA69E2C(v0 + 10272, v0 + 26144);
  swift_retain();
  sub_1ACA50E78(v0 + 8592, &qword_1E99F5450);
  long long v23 = *(_OWORD *)(v0 + 26352);
  *(_OWORD *)(v0 + 2424) = *(_OWORD *)(v0 + 26336);
  *(_OWORD *)(v0 + 2440) = v23;
  long long v24 = *(_OWORD *)(v0 + 26384);
  *(_OWORD *)(v0 + 2456) = *(_OWORD *)(v0 + 26368);
  *(_OWORD *)(v0 + 2472) = v24;
  long long v25 = *(_OWORD *)(v0 + 26288);
  *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 26272);
  *(_OWORD *)(v0 + 2376) = v25;
  long long v26 = *(_OWORD *)(v0 + 26320);
  *(_OWORD *)(v0 + 2392) = *(_OWORD *)(v0 + 26304);
  *(_OWORD *)(v0 + 2408) = v26;
  long long v27 = *(_OWORD *)(v0 + 26224);
  *(_OWORD *)(v0 + 2296) = *(_OWORD *)(v0 + 26208);
  *(_OWORD *)(v0 + 2312) = v27;
  long long v28 = *(_OWORD *)(v0 + 26256);
  *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 26240);
  *(_OWORD *)(v0 + 2344) = v28;
  long long v29 = *(_OWORD *)(v0 + 26160);
  *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 26144);
  *(_OWORD *)(v0 + 2248) = v29;
  long long v30 = *(_OWORD *)(v0 + 26192);
  *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 26176);
  *(_OWORD *)(v0 + 2280) = v30;
  memcpy(v61, (const void *)(v0 + 2232), 0x8A0uLL);
  sub_1ACA50E78((uint64_t)v60, &qword_1E99F5450);
  uint64_t v31 = *(void **)(v46 + v51);
  sub_1ACA3AAD4((uint64_t)v61, v0 + 24, &qword_1E99F5458);
  *(void *)(v0 + 16) = v31;
  id v32 = v31;
  sub_1ACA50E78((uint64_t)v61, &qword_1E99F5458);
  uint64_t v33 = sub_1ACD4E3C0();
  sub_1ACA50E78(v0 + 16, &qword_1E99F5460);
  sub_1ACA3AAD4((uint64_t)(v42 + 27), v0 + 27872, &qword_1EB772EA0);
  *(void *)(v0 + 27680) = v33;
  sub_1ACA3AAD4(v0 + 27872, v0 + 27688, &qword_1EB772EA0);
  *(void *)(v0 + 27728) = "LoadArtworkContent";
  *(void *)(v0 + 27736) = 18;
  *(unsigned char *)(v0 + 27744) = 2;
  *(unsigned char *)(v0 + 27768) = 1;
  sub_1ACA50E78(v0 + 27872, &qword_1EB772EA0);
  *(void *)(v0 + 27752) = 0;
  *(void *)(v0 + 27760) = 0xE000000000000000;
  *(unsigned char *)(v0 + 27769) = 0;
  long long v34 = *(_OWORD *)(v0 + 27728);
  *(_OWORD *)(v0 + 27808) = *(_OWORD *)(v0 + 27712);
  *(_OWORD *)(v0 + 27824) = v34;
  long long v35 = *(_OWORD *)(v0 + 27696);
  *uint64_t v62 = *(_OWORD *)(v0 + 27680);
  *(_OWORD *)(v0 + 27792) = v35;
  *(_OWORD *)(v0 + 27840) = *(_OWORD *)(v0 + 27744);
  *(_OWORD *)(v0 + 27850) = *(_OWORD *)(v0 + 27754);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5468);
  sub_1ACA51EA4(&qword_1E99F5470, &qword_1E99F5468);
  sub_1ACE75B68();
  sub_1ACA50E78((uint64_t)v62, &qword_1E99F5468);
  uint64_t v36 = sub_1ACA51EA4(&qword_1E99F5478, &qword_1E99F5400);
  MEMORY[0x1AD117DF0](v53, v36);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v53);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v57, v52, v56);
  sub_1ACA51EA4(&qword_1E99F5480, &qword_1E99F53F8);
  sub_1ACE768F8();
  *(void *)(v0 + 28112) = MEMORY[0x1E4FBC860];
  uint64_t v37 = sub_1ACA51EA4(&qword_1E99F5488, &qword_1E99F53F0);
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 28120) = v38;
  void *v38 = v0;
  v38[1] = sub_1ACD519C8;
  uint64_t v39 = *(void *)(v0 + 28096);
  uint64_t v40 = *(void *)(v0 + 28008);
  return MEMORY[0x1F4187C78](v39, v40, v37);
}

uint64_t sub_1ACD519C8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 28128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3503];
    uint64_t v4 = v2[3502];
    uint64_t v5 = v2[3501];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1ACD52004;
  }
  else
  {
    uint64_t v6 = sub_1ACD51B10;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1ACD51B10()
{
  uint64_t v1 = v0[3512];
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[3498] + 48);
  int v3 = v2(v1, 1, v0[3497]);
  uint64_t v4 = v0[3514];
  if (v3 == 1)
  {
    uint64_t v33 = (uint64_t)(v0 + 3332);
    uint64_t v5 = v0[3507];
    uint64_t v6 = v0[3505];
    uint64_t v7 = v0[3504];
    (*(void (**)(void, void))(v0[3502] + 8))(v0[3503], v0[3501]);
    sub_1ACA50E78(v1, &qword_1E99F5408);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    if (*(void *)(v4 + 16))
    {
      uint64_t v8 = *(unsigned __int8 *)(v0[3498] + 80);
      sub_1ACD551DC(v0[3514] + ((v8 + 32) & ~v8), v0[3513], (uint64_t (*)(void))type metadata accessor for ArtworkContent);
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = 1;
    }
    uint64_t v23 = v0[3513];
    uint64_t v24 = v0[3511];
    uint64_t v25 = v0[3497];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[3498] + 56))(v23, v9, 1, v25);
    swift_bridgeObjectRelease();
    sub_1ACA3AAD4(v23, v24, &qword_1E99F5408);
    int v26 = v2(v24, 1, v25);
    uint64_t v27 = v0[3513];
    if (v26 == 1)
    {
      sub_1ACA50E78(v0[3511], &qword_1E99F5408);
      sub_1ACD52EC0();
      swift_allocError();
      *long long v28 = 1;
      swift_willThrow();
      sub_1ACA50E78(v27, &qword_1E99F5408);
      sub_1ACA69E88(v33);
    }
    else
    {
      uint64_t v30 = v0[3511];
      uint64_t v31 = v0[3494];
      sub_1ACA50E78(v27, &qword_1E99F5408);
      sub_1ACA69E88(v33);
      sub_1ACD54E44(v30, v31, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
  else
  {
    uint64_t v10 = v0[3500];
    uint64_t v11 = v0[3499];
    sub_1ACD54E44(v1, v10, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
    sub_1ACD551DC(v10, v11, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = v0[3514];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v13 = sub_1ACA440C0(0, *(void *)(v13 + 16) + 1, 1, v0[3514]);
    }
    unint64_t v15 = *(void *)(v13 + 16);
    unint64_t v14 = *(void *)(v13 + 24);
    if (v15 >= v14 >> 1) {
      unint64_t v13 = sub_1ACA440C0(v14 > 1, v15 + 1, 1, v13);
    }
    uint64_t v16 = v0[3500];
    uint64_t v17 = v0[3499];
    uint64_t v18 = v0[3498];
    *(void *)(v13 + 16) = v15 + 1;
    sub_1ACD54E44(v17, v13+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v15, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
    sub_1ACD54C74(v16, (uint64_t (*)(void))type metadata accessor for ArtworkContent);
    v0[3514] = v13;
    uint64_t v19 = sub_1ACA51EA4(&qword_1E99F5488, &qword_1E99F53F0);
    long long v20 = (void *)swift_task_alloc();
    v0[3515] = v20;
    void *v20 = v0;
    v20[1] = sub_1ACD519C8;
    uint64_t v21 = v0[3512];
    uint64_t v22 = v0[3501];
    return MEMORY[0x1F4187C78](v21, v22, v19);
  }
}

uint64_t sub_1ACD52004()
{
  (*(void (**)(void, void))(v0[3505] + 8))(v0[3507], v0[3504]);
  sub_1ACA69E88((uint64_t)(v0 + 3332));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1ACD52120(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1ACA50B84;
  return CachingImageContentProvider.content(for:)(a1, a2);
}

uint64_t sub_1ACD521C8()
{
  uint64_t v0 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v22[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (uint64_t *)&v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = (int *)type metadata accessor for CachingImageContentProvider();
  __swift_allocate_value_buffer((uint64_t)v6, qword_1E99F53C0);
  uint64_t v7 = __swift_project_value_buffer((uint64_t)v6, (uint64_t)qword_1E99F53C0);
  id v8 = objc_msgSend(self, sel_artworkAssetURL);
  sub_1ACE74E98();

  id v9 = objc_msgSend(self, sel_defaultCenter);
  sub_1ACDA7848((uint64_t)v2, 0x500000uLL, v9, v5);
  id v10 = objc_msgSend(self, sel_defaultSessionConfiguration);
  *(void *)(swift_allocObject() + 16) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  swift_allocObject();
  uint64_t v11 = sub_1ACE75A18();
  uint64_t v23 = &type metadata for CGImageResizer;
  uint64_t v24 = &protocol witness table for CGImageResizer;
  if (qword_1EB76A830 != -1) {
    swift_once();
  }
  double v12 = (void *)qword_1EB76A828;
  sub_1ACA3AAD4((uint64_t)v5, v7, &qword_1E99F53D8);
  unint64_t v13 = (uint64_t (**)(uint64_t))(v7 + v6[5]);
  void *v13 = sub_1ACD53D90;
  v13[1] = (uint64_t (*)(uint64_t))v11;
  sub_1ACA3E158((uint64_t)v22, v7 + v6[6]);
  *(void *)(v7 + v6[7]) = v12;
  id v14 = v12;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_1ACA38114(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53E0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 24) = 0;
  *(void *)(v17 + 16) = v16;
  *(void *)(v7 + v6[8]) = v17;
  unint64_t v18 = sub_1ACA38114(v15);

  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = v18;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  uint64_t result = sub_1ACA50E78((uint64_t)v5, &qword_1E99F53D8);
  *(void *)(v7 + v6[9]) = v19;
  return result;
}

uint64_t static CachingImageContentProvider.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E99F0100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for CachingImageContentProvider();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1E99F53C0);
  return sub_1ACD551DC(v3, a1, (uint64_t (*)(void))type metadata accessor for CachingImageContentProvider);
}

uint64_t sub_1ACD52548()
{
  uint64_t v1 = v0;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5580);
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v29 - v6;
  id v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5588);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v32 = (uint64_t)&v29 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5590);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v34 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(v1, (uint64_t)v37, &qword_1E99F5410);
  uint64_t v16 = swift_allocObject();
  memcpy((void *)(v16 + 16), v37, 0x110uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5468);
  uint64_t v33 = &protocol conformance descriptor for EmitLifecycle<A>;
  sub_1ACA51EA4(&qword_1E99F5470, &qword_1E99F5468);
  uint64_t v30 = v7;
  sub_1ACE75A38();
  sub_1ACA69E2C(v1, (uint64_t)v37);
  sub_1ACA3AAD4((uint64_t)&v37[216], (uint64_t)v38, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)v37);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  unint64_t v18 = v7;
  uint64_t v19 = v31;
  v17(v4, v18, v31);
  sub_1ACA3AAD4((uint64_t)v38, (uint64_t)v37, &qword_1EB772EA0);
  v17(v10, v4, v19);
  sub_1ACA3AAD4((uint64_t)v37, (uint64_t)&v10[v8[9]], &qword_1EB772EA0);
  long long v20 = &v10[v8[10]];
  *(void *)long long v20 = "FallbackPreferredSource";
  *((void *)v20 + 1) = 23;
  v20[16] = 2;
  v10[v8[12]] = 0;
  sub_1ACA50E78((uint64_t)v37, &qword_1EB772EA0);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v2 + 8);
  v21(v4, v19);
  uint64_t v22 = &v10[v8[11]];
  *(void *)uint64_t v22 = 0xD000000000000051;
  *((void *)v22 + 1) = 0x80000001ACED0260;
  v10[v8[13]] = 0;
  uint64_t v23 = v32;
  sub_1ACA50E14((uint64_t)v10, v32, &qword_1E99F5588);
  sub_1ACA50E78((uint64_t)v38, &qword_1EB772EA0);
  v21(v30, v19);
  LOBYTE(v10) = *(unsigned char *)(v1 + 544);
  sub_1ACA3AAD4(v1 + 272, (uint64_t)v38, &qword_1E99F5410);
  sub_1ACA3AAD4(v1, (uint64_t)v37, &qword_1E99F5418);
  uint64_t v24 = (unsigned char *)swift_allocObject();
  memcpy(v24 + 16, v38, 0x110uLL);
  v24[288] = (_BYTE)v10;
  memcpy(v24 + 296, v37, 0x221uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5598);
  sub_1ACA51EA4(&qword_1E99F55A0, &qword_1E99F5588);
  sub_1ACA51EA4(&qword_1E99F55A8, &qword_1E99F5598);
  uint64_t v25 = v34;
  sub_1ACE75B98();
  swift_release();
  sub_1ACA50E78(v23, &qword_1E99F5588);
  sub_1ACA51EA4(&qword_1E99F55B0, &qword_1E99F5590);
  uint64_t v26 = v35;
  uint64_t v27 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v26);
  return v27;
}

uint64_t sub_1ACD52A64@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  int v32 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5598);
  id v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5580);
  uint64_t v34 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F55B8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v30 = (char *)&v29 - v17;
  sub_1ACA3AAD4(a2, (uint64_t)v38, &qword_1E99F5410);
  uint64_t v18 = swift_allocObject();
  memcpy((void *)(v18 + 16), v38, 0x110uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5468);
  sub_1ACA51EA4(&qword_1E99F5470, &qword_1E99F5468);
  sub_1ACE75A38();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v32;
  *(void *)(v19 + 24) = a1;
  id v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACA51EA4(&qword_1E99F55C0, &qword_1E99F5580);
  uint64_t v21 = v30;
  uint64_t v22 = v31;
  sub_1ACE75CC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v22);
  sub_1ACA69E2C(v35, (uint64_t)v38);
  sub_1ACA3AAD4((uint64_t)&v38[216], (uint64_t)v37, &qword_1EB772EA0);
  sub_1ACA69E88((uint64_t)v38);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v24 = v33;
  v23(v33, v21, v13);
  sub_1ACA3AAD4((uint64_t)v37, (uint64_t)v38, &qword_1EB772EA0);
  v23(v10, v24, v13);
  sub_1ACA3AAD4((uint64_t)v38, (uint64_t)&v10[v8[11]], &qword_1EB772EA0);
  uint64_t v25 = &v10[v8[12]];
  *(void *)uint64_t v25 = "FallbackBackupSource";
  *((void *)v25 + 1) = 20;
  v25[16] = 2;
  v10[v8[14]] = 0;
  sub_1ACA50E78((uint64_t)v38, &qword_1EB772EA0);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v24, v13);
  uint64_t v27 = &v10[v8[13]];
  *(void *)uint64_t v27 = 0xD000000000000051;
  *((void *)v27 + 1) = 0x80000001ACED0260;
  v10[v8[15]] = 0;
  sub_1ACA50E14((uint64_t)v10, v36, &qword_1E99F5598);
  sub_1ACA50E78((uint64_t)v37, &qword_1EB772EA0);
  return ((uint64_t (*)(char *, uint64_t))v26)(v21, v13);
}

unint64_t sub_1ACD52EC0()
{
  unint64_t result = qword_1E99F5490;
  if (!qword_1E99F5490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5490);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CachingImageContentProvider(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
    uint64_t v9 = (char *)v7 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1ACE74F28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
    *(void *)&v9[v12[15]] = *(void *)&v10[v12[15]];
    *(void *)&v9[v12[16]] = *(void *)&v10[v12[16]];
    *(void *)&v9[v12[17]] = *(void *)&v10[v12[17]];
    *(void *)&v9[v12[18]] = *(void *)&v10[v12[18]];
    *(void *)&v9[v12[19]] = *(void *)&v10[v12[19]];
    uint64_t v13 = a3[5];
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)((char *)v7 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)v7 + v14;
    uint64_t v19 = (char *)a2 + v14;
    long long v20 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v7 + v14 + 24) = v20;
    uint64_t v21 = v20;
    uint64_t v27 = **(void (***)(char *, char *, uint64_t))(v20 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v27(v18, v19, v21);
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = *(void **)((char *)a2 + v22);
    *(uint64_t *)((char *)v7 + v22) = (uint64_t)v24;
    *(uint64_t *)((char *)v7 + v23) = *(uint64_t *)((char *)a2 + v23);
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    id v25 = v24;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for CachingImageContentProvider(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
  uint64_t v5 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + *(int *)(a2 + 24));

  swift_release();
  return swift_release();
}

void *initializeWithCopy for CachingImageContentProvider(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  id v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  uint64_t v26 = a3;
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  long long v18 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v18;
  uint64_t v19 = v18;
  id v25 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v25(v16, v17, v19);
  uint64_t v20 = v26[7];
  uint64_t v21 = v26[8];
  uint64_t v22 = *(void **)((char *)a2 + v20);
  *(void *)((char *)a1 + v20) = v22;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  *(void *)((char *)a1 + v26[9]) = *(void *)((char *)a2 + v26[9]);
  id v23 = v22;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CachingImageContentProvider(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  id v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  swift_retain();
  swift_release();
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  swift_retain();
  swift_release();
  uint64_t v11 = a3[5];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a2 + v15);
  uint64_t v17 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = v16;
  id v18 = v16;

  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for CachingImageContentProvider(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  id v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  uint64_t v11 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithTake for CachingImageContentProvider(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  id v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  swift_release();
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  swift_release();
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  swift_release();
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  swift_release();
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  swift_release();
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v11);
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);

  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachingImageContentProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD538CC);
}

uint64_t sub_1ACD538CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CachingImageContentProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD539A4);
}

uint64_t sub_1ACD539A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1ACD53A64()
{
  sub_1ACD53B24();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1ACD53B24()
{
  if (!qword_1EB76F048)
  {
    sub_1ACC42D88(&qword_1EB770710, &qword_1EB76E320);
    unint64_t v0 = type metadata accessor for CacheDomain();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB76F048);
    }
  }
}

uint64_t sub_1ACD53BD8()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD53C10(uint64_t a1, uint64_t a2)
{
  return sub_1ACE213CC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1ACD53C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  sub_1ACA3985C(v4, v3);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD53C78@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  unint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v6;
  a2[5] = v7;
  a2[6] = v8;
  return sub_1ACC79A74(v3, v2, v4, v5, v6, v7);
}

id sub_1ACD53CA0@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1ACD53CAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F54A0);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACDB59E4(a1, *a2, (uint64_t)v6);
  sub_1ACA51EA4(&qword_1E99F54A8, &qword_1E99F54A0);
  uint64_t v7 = sub_1ACE75AD8();
  sub_1ACA50E78((uint64_t)v6, &qword_1E99F54A0);
  return v7;
}

uint64_t sub_1ACD53D90(uint64_t a1)
{
  return sub_1ACD53CAC(a1, &v2);
}

uint64_t sub_1ACD53DB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACD4CEE0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1ACD53DEC()
{
  return sub_1ACD4E018(*(os_unfair_lock_s **)(v0 + 16), v0 + 24);
}

uint64_t sub_1ACD53DF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD53E30(uint64_t a1)
{
  return sub_1ACB5B220(a1, *(uint64_t (**)(void))(v1 + 16));
}

BOOL sub_1ACD53E38(_OWORD *a1)
{
  return _s18PodcastsFoundation14ArtworkRequestV2eeoiySbAC_ACtFZ_0(a1, *(_OWORD **)(v1 + 16));
}

uint64_t sub_1ACD53E68()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 72), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 88), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 104), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 120), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 136), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACD53F40(uint64_t *a1)
{
  return sub_1ACD4E2F8(a1, *(_OWORD **)(v1 + 16));
}

uint64_t sub_1ACD53F5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACD54408(a1, a2);
}

uint64_t sub_1ACD53F74()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 72), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 88), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 104), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 120), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 136), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v0 + 304);
  if (v7 != 255) {
    sub_1ACA74630(*(void *)(v0 + 288), *(void *)(v0 + 296), v7);
  }
  int v8 = *(unsigned __int8 *)(v0 + 336);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v0 + 328), v8);
  }
  int v9 = *(unsigned __int8 *)(v0 + 352);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v0 + 344), v9);
  }
  int v10 = *(unsigned __int8 *)(v0 + 368);
  if (v10 != 255) {
    sub_1ACA74648(*(id *)(v0 + 360), v10);
  }
  int v11 = *(unsigned __int8 *)(v0 + 384);
  if (v11 != 255) {
    sub_1ACA74648(*(id *)(v0 + 376), v11);
  }
  int v12 = *(unsigned __int8 *)(v0 + 400);
  if (v12 != 255) {
    sub_1ACA74648(*(id *)(v0 + 392), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 512)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 488);
  }
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(v0 + 560);
  if (v13 != 255) {
    sub_1ACA74630(*(void *)(v0 + 544), *(void *)(v0 + 552), v13);
  }
  int v14 = *(unsigned __int8 *)(v0 + 592);
  if (v14 != 255) {
    sub_1ACA74648(*(id *)(v0 + 584), v14);
  }
  int v15 = *(unsigned __int8 *)(v0 + 608);
  if (v15 != 255) {
    sub_1ACA74648(*(id *)(v0 + 600), v15);
  }
  int v16 = *(unsigned __int8 *)(v0 + 624);
  if (v16 != 255) {
    sub_1ACA74648(*(id *)(v0 + 616), v16);
  }
  int v17 = *(unsigned __int8 *)(v0 + 640);
  if (v17 != 255) {
    sub_1ACA74648(*(id *)(v0 + 632), v17);
  }
  int v18 = *(unsigned __int8 *)(v0 + 656);
  if (v18 != 255) {
    sub_1ACA74648(*(id *)(v0 + 648), v18);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 768)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 744);
  }

  swift_bridgeObjectRelease();
  int v19 = *(unsigned __int8 *)(v0 + 824);
  if (v19 != 255) {
    sub_1ACA74630(*(void *)(v0 + 808), *(void *)(v0 + 816), v19);
  }
  int v20 = *(unsigned __int8 *)(v0 + 856);
  if (v20 != 255) {
    sub_1ACA74648(*(id *)(v0 + 848), v20);
  }
  int v21 = *(unsigned __int8 *)(v0 + 872);
  if (v21 != 255) {
    sub_1ACA74648(*(id *)(v0 + 864), v21);
  }
  int v22 = *(unsigned __int8 *)(v0 + 888);
  if (v22 != 255) {
    sub_1ACA74648(*(id *)(v0 + 880), v22);
  }
  int v23 = *(unsigned __int8 *)(v0 + 904);
  if (v23 != 255) {
    sub_1ACA74648(*(id *)(v0 + 896), v23);
  }
  int v24 = *(unsigned __int8 *)(v0 + 920);
  if (v24 != 255) {
    sub_1ACA74648(*(id *)(v0 + 912), v24);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 1032)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 1008);
  }
  swift_release();
  swift_bridgeObjectRelease();
  int v25 = *(unsigned __int8 *)(v0 + 1096);
  if (v25 != 255) {
    sub_1ACA74630(*(void *)(v0 + 1080), *(void *)(v0 + 1088), v25);
  }
  int v26 = *(unsigned __int8 *)(v0 + 1128);
  if (v26 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1120), v26);
  }
  int v27 = *(unsigned __int8 *)(v0 + 1144);
  if (v27 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1136), v27);
  }
  int v28 = *(unsigned __int8 *)(v0 + 1160);
  if (v28 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1152), v28);
  }
  int v29 = *(unsigned __int8 *)(v0 + 1176);
  if (v29 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1168), v29);
  }
  int v30 = *(unsigned __int8 *)(v0 + 1192);
  if (v30 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1184), v30);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 1304)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 1280);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  int v31 = *(unsigned __int8 *)(v0 + 1384);
  if (v31 != 255) {
    sub_1ACA74630(*(void *)(v0 + 1368), *(void *)(v0 + 1376), v31);
  }
  int v32 = *(unsigned __int8 *)(v0 + 1416);
  if (v32 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1408), v32);
  }
  int v33 = *(unsigned __int8 *)(v0 + 1432);
  if (v33 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1424), v33);
  }
  int v34 = *(unsigned __int8 *)(v0 + 1448);
  if (v34 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1440), v34);
  }
  int v35 = *(unsigned __int8 *)(v0 + 1464);
  if (v35 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1456), v35);
  }
  int v36 = *(unsigned __int8 *)(v0 + 1480);
  if (v36 != 255) {
    sub_1ACA74648(*(id *)(v0 + 1472), v36);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 1592)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 1568);
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 1648);
  __swift_destroy_boxed_opaque_existential_0(v0 + 1688);
  return swift_deallocObject();
}

uint64_t sub_1ACD543DC@<X0>(void (*a1)(unsigned char *, unsigned char *, uint64_t)@<X0>, unsigned char *a2@<X8>)
{
  return sub_1ACD4944C(a1, v2 + 16, (void *)(v2 + 1688), a2, *(double *)(v2 + 1728), *(double *)(v2 + 1736), *(double *)(v2 + 1744));
}

uint64_t sub_1ACD54408@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1ACD4D694(a1, *(void *)(v2 + 16), *(void *)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 40), *(void *)(v0 + 48), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 80), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 104);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 96), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 120);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 112), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 136);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 128), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 152);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 144), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 264)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 240);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACD5451C()
{
  return sub_1ACD4E090(*(os_unfair_lock_s **)(v0 + 16), v0 + 24);
}

uint64_t sub_1ACD54528()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 72), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 88), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 104), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 120), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 136), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }

  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v0 + 312);
  if (v7 != 255) {
    sub_1ACA74630(*(void *)(v0 + 296), *(void *)(v0 + 304), v7);
  }
  int v8 = *(unsigned __int8 *)(v0 + 344);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v0 + 336), v8);
  }
  int v9 = *(unsigned __int8 *)(v0 + 360);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v0 + 352), v9);
  }
  int v10 = *(unsigned __int8 *)(v0 + 376);
  if (v10 != 255) {
    sub_1ACA74648(*(id *)(v0 + 368), v10);
  }
  int v11 = *(unsigned __int8 *)(v0 + 392);
  if (v11 != 255) {
    sub_1ACA74648(*(id *)(v0 + 384), v11);
  }
  int v12 = *(unsigned __int8 *)(v0 + 408);
  if (v12 != 255) {
    sub_1ACA74648(*(id *)(v0 + 400), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 520)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 496);
  }
  swift_release();
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(v0 + 584);
  if (v13 != 255) {
    sub_1ACA74630(*(void *)(v0 + 568), *(void *)(v0 + 576), v13);
  }
  int v14 = *(unsigned __int8 *)(v0 + 616);
  if (v14 != 255) {
    sub_1ACA74648(*(id *)(v0 + 608), v14);
  }
  int v15 = *(unsigned __int8 *)(v0 + 632);
  if (v15 != 255) {
    sub_1ACA74648(*(id *)(v0 + 624), v15);
  }
  int v16 = *(unsigned __int8 *)(v0 + 648);
  if (v16 != 255) {
    sub_1ACA74648(*(id *)(v0 + 640), v16);
  }
  int v17 = *(unsigned __int8 *)(v0 + 664);
  if (v17 != 255) {
    sub_1ACA74648(*(id *)(v0 + 656), v17);
  }
  int v18 = *(unsigned __int8 *)(v0 + 680);
  if (v18 != 255) {
    sub_1ACA74648(*(id *)(v0 + 672), v18);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 792)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 768);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD5476C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1ACD486F8(a1, v2 + 16, a2);
}

uint64_t sub_1ACD5478C@<X0>(_OWORD *a1@<X8>)
{
  return sub_1ACD4B5C4(v1 + 16, a1);
}

uint64_t sub_1ACD54794()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 72), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 88), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 104), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 120), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 136), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  swift_release();
  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v0 + 328);
  if (v7 != 255) {
    sub_1ACA74630(*(void *)(v0 + 312), *(void *)(v0 + 320), v7);
  }
  int v8 = *(unsigned __int8 *)(v0 + 360);
  if (v8 != 255) {
    sub_1ACA74648(*(id *)(v0 + 352), v8);
  }
  int v9 = *(unsigned __int8 *)(v0 + 376);
  if (v9 != 255) {
    sub_1ACA74648(*(id *)(v0 + 368), v9);
  }
  int v10 = *(unsigned __int8 *)(v0 + 392);
  if (v10 != 255) {
    sub_1ACA74648(*(id *)(v0 + 384), v10);
  }
  int v11 = *(unsigned __int8 *)(v0 + 408);
  if (v11 != 255) {
    sub_1ACA74648(*(id *)(v0 + 400), v11);
  }
  int v12 = *(unsigned __int8 *)(v0 + 424);
  if (v12 != 255) {
    sub_1ACA74648(*(id *)(v0 + 416), v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 536)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 512);
  }
  swift_release();
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(v0 + 600);
  if (v13 != 255) {
    sub_1ACA74630(*(void *)(v0 + 584), *(void *)(v0 + 592), v13);
  }
  int v14 = *(unsigned __int8 *)(v0 + 632);
  if (v14 != 255) {
    sub_1ACA74648(*(id *)(v0 + 624), v14);
  }
  int v15 = *(unsigned __int8 *)(v0 + 648);
  if (v15 != 255) {
    sub_1ACA74648(*(id *)(v0 + 640), v15);
  }
  int v16 = *(unsigned __int8 *)(v0 + 664);
  if (v16 != 255) {
    sub_1ACA74648(*(id *)(v0 + 656), v16);
  }
  int v17 = *(unsigned __int8 *)(v0 + 680);
  if (v17 != 255) {
    sub_1ACA74648(*(id *)(v0 + 672), v17);
  }
  int v18 = *(unsigned __int8 *)(v0 + 696);
  if (v18 != 255) {
    sub_1ACA74648(*(id *)(v0 + 688), v18);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 808)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 784);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD549D8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD52A64(*a1, v2 + 16, *(unsigned __int8 *)(v2 + 288), v2 + 296, a2);
}

uint64_t objectdestroy_38Tm()
{
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255) {
    sub_1ACA74630(*(void *)(v0 + 32), *(void *)(v0 + 40), v1);
  }
  int v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255) {
    sub_1ACA74648(*(id *)(v0 + 72), v2);
  }
  int v3 = *(unsigned __int8 *)(v0 + 96);
  if (v3 != 255) {
    sub_1ACA74648(*(id *)(v0 + 88), v3);
  }
  int v4 = *(unsigned __int8 *)(v0 + 112);
  if (v4 != 255) {
    sub_1ACA74648(*(id *)(v0 + 104), v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + 128);
  if (v5 != 255) {
    sub_1ACA74648(*(id *)(v0 + 120), v5);
  }
  int v6 = *(unsigned __int8 *)(v0 + 144);
  if (v6 != 255) {
    sub_1ACA74648(*(id *)(v0 + 136), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 256)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD54AD0()
{
  return swift_deallocObject();
}

id sub_1ACD54B08@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1ACD929B4(a1, *(unsigned char *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1ACD54B14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACD54C3C(a1, (uint64_t (*)(uint64_t, void, void))sub_1ACD4B738, a2);
}

uint64_t sub_1ACD54B40()
{
  return objectdestroy_51Tm((uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACD54B58()
{
  return sub_1ACD54ED8((uint64_t (*)(void))type metadata accessor for TTMLRequest, sub_1ACD4DE48);
}

uint64_t sub_1ACD54B84(uint64_t a1)
{
  return _s18PodcastsFoundation11TTMLRequestV2eeoiySbAC_ACtFZ_0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1ACD54BB4(uint64_t *a1)
{
  return sub_1ACD4E108(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACD54BD0()
{
  return objectdestroy_62Tm(&qword_1E99F4548, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
}

uint64_t sub_1ACD54BF0()
{
  return sub_1ACD5515C(&qword_1E99F4548, (uint64_t (*)(uint64_t))sub_1ACD4B1DC);
}

uint64_t sub_1ACD54C10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACD54C3C(a1, (uint64_t (*)(uint64_t, void, void))sub_1ACD4C30C, a2);
}

uint64_t sub_1ACD54C3C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, *(void *)(v3 + 16), *(void *)(v3 + 24));
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1ACD54C74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACD54CD4()
{
  return objectdestroy_51Tm((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t objectdestroy_51Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  swift_release();
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v1 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v1 + v3, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v1 + v3 + *(int *)(v2 + 36);
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v6);
  }
  return swift_deallocObject();
}

uint64_t sub_1ACD54E44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACD54EAC()
{
  return sub_1ACD54ED8((uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest, sub_1ACD4DF30);
}

uint64_t sub_1ACD54ED8(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

uint64_t sub_1ACD54F58(uint64_t a1)
{
  return _s18PodcastsFoundation22ShazamSignatureRequestV2eeoiySbAC_ACtFZ_0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1ACD54F88(uint64_t *a1)
{
  return sub_1ACD4E200(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACD54FA4()
{
  return objectdestroy_62Tm(&qword_1E99F45B0, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
}

uint64_t objectdestroy_62Tm(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v2 + v5, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v2 + v5, v6);
  }
  uint64_t v8 = a2(0);
  swift_bridgeObjectRelease();
  uint64_t v9 = v2 + v5 + *(int *)(v8 + 36);
  if (*(void *)(v9 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v9);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD5513C()
{
  return sub_1ACD5515C(&qword_1E99F45B0, (uint64_t (*)(uint64_t))sub_1ACD4B3D0);
}

uint64_t sub_1ACD5515C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4);
}

uint64_t sub_1ACD551DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_1ACD55244(_OWORD *a1)
{
  return sub_1ACD53E38(a1);
}

uint64_t sub_1ACD55288(uint64_t *a1)
{
  return sub_1ACD53F40(a1);
}

id FairPlayKeyLoading.receive(on:)(void *a1)
{
  uint64_t v3 = (objc_class *)type metadata accessor for DispatchingFairPlayKeyLoading();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = v1;
  *(void *)&v4[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = a1;
  v7.receiver = v4;
  v7.super_class = v3;
  id v5 = a1;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for DispatchingFairPlayKeyLoading()
{
  return self;
}

void sub_1ACD5533C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  type metadata accessor for FairPlayAsset();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACD56AF0(&qword_1E99F5790, (void (*)(uint64_t))type metadata accessor for FairPlayAsset);
  uint64_t v5 = sub_1ACE75FF8();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

id static DispatchingFairPlayKeyLoading.receive(on:loader:)(void *a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance] = a2;
  *(void *)&v5[OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue] = a1;
  v8.receiver = v5;
  v8.super_class = v2;
  swift_unknownObjectRetain();
  id v6 = a1;
  return objc_msgSendSuper2(&v8, sel_init);
}

void DispatchingFairPlayKeyLoading.createSession(asset:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_super v7 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1ACD5599C;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  id v11[2] = sub_1ACD559A8;
  _OWORD v11[3] = &block_descriptor_70;
  int v10 = _Block_copy(v11);
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v7, sel_createSessionWithAsset_completion_, a1, v10);
  _Block_release(v10);
}

uint64_t sub_1ACD5565C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACD55694(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  int v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a3 + 16);
  if (result)
  {
    int v17 = (void *)result;
    id v18 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue);

    int v19 = (void *)swift_allocObject();
    _OWORD v19[2] = a4;
    _OWORD v19[3] = a5;
    v19[4] = a1;
    v19[5] = a2;
    aBlock[4] = sub_1ACD56BD8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_98_0;
    int v20 = _Block_copy(aBlock);
    sub_1ACA6DEC8(a4);
    swift_unknownObjectRetain();
    id v21 = a2;
    sub_1ACE75E08();
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1ACD56AF0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v15, v12, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACD5599C(uint64_t a1, void *a2)
{
  return sub_1ACD55694(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1ACD559A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void DispatchingFairPlayKeyLoading.startKeyRequest(session:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1ACD55B2C(void *a1)
{
  return sub_1ACD55C6C(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F039A168, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_92_0);
}

void DispatchingFairPlayKeyLoading.renewKeyRequest(asset:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1ACD55C6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v11 = sub_1ACE75DC8();
  uint64_t v26 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1ACE75E48();
  uint64_t v14 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  int v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a2 + 16);
  if (result)
  {
    id v18 = (void *)result;
    id v19 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue);

    int v20 = (void *)swift_allocObject();
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a1;
    aBlock[4] = v23;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = v24;
    id v21 = _Block_copy(aBlock);
    sub_1ACA6DEC8(a3);
    id v22 = a1;
    sub_1ACE75E08();
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1ACD56AF0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v16, v13, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACD55F5C(void *a1)
{
  return sub_1ACD55C6C(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F039A118, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_86_0);
}

void DispatchingFairPlayKeyLoading.renewKeyRequests(assets:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(void **)(v3 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  type metadata accessor for FairPlayAsset();
  objc_super v7 = (void *)sub_1ACE76558();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = sub_1ACD564C0;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  id v11[2] = sub_1ACD5533C;
  _OWORD v11[3] = &block_descriptor_24_5;
  uint64_t v10 = _Block_copy(v11);
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v6, sel_renewKeyRequestsWithAssets_completion_, v7, v10);
  _Block_release(v10);
}

uint64_t sub_1ACD561B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1ACE75DC8();
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1AD11B470](a3 + 16);
  if (result)
  {
    int v17 = (void *)result;
    id v18 = *(id *)(result + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_responseQueue);

    id v19 = (void *)swift_allocObject();
    _OWORD v19[2] = a4;
    _OWORD v19[3] = a5;
    v19[4] = a1;
    v19[5] = a2;
    aBlock[4] = sub_1ACD56B50;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_80_0;
    int v20 = _Block_copy(aBlock);
    sub_1ACA6DEC8(a4);
    swift_bridgeObjectRetain();
    id v21 = a2;
    sub_1ACE75E08();
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1ACD56AF0((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA55D7C();
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v15, v12, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACD564C0(uint64_t a1, void *a2)
{
  return sub_1ACD561B8(a1, a2, v2[2], v2[3], v2[4]);
}

id DispatchingFairPlayKeyLoading.renewKey(session:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance), sel_renewKeyWithSession_, a1);
}

void DispatchingFairPlayKeyLoading.stopKeyRequest(asset:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1ACD565FC(void *a1)
{
  return sub_1ACD55C6C(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F039A078, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_74_0);
}

void DispatchingFairPlayKeyLoading.stopKeyRequest(session:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1ACD56740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v11 = v7;
  uint64_t v15 = *(void **)(v11 + OBJC_IVAR___PFDispatchingFairPlayKeyLoader_wrappedInstance);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v16;
  v17[3] = a2;
  void v17[4] = a3;
  v19[4] = a5;
  v19[5] = v17;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  _OWORD v19[2] = sub_1ACCB9FCC;
  _OWORD v19[3] = a6;
  id v18 = _Block_copy(v19);
  sub_1ACA6DEC8(a2);
  swift_release();
  objc_msgSend(v15, *a7, a1, v18);
  _Block_release(v18);
}

uint64_t sub_1ACD56870(void *a1)
{
  return sub_1ACD55C6C(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1F039A028, (uint64_t)sub_1ACCBB3FC, (uint64_t)&block_descriptor_68_1);
}

id DispatchingFairPlayKeyLoading.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DispatchingFairPlayKeyLoading.init()()
{
}

id DispatchingFairPlayKeyLoading.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DispatchingFairPlayKeyLoading(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DispatchingFairPlayKeyLoading);
}

uint64_t sub_1ACD56AB0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACD56AF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACD56B38()
{
  return objectdestroy_76Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1ACD56B50()
{
  return sub_1ACD56BE0();
}

uint64_t sub_1ACD56B60()
{
  return objectdestroy_76Tm(MEMORY[0x1E4FBC8F8]);
}

uint64_t objectdestroy_76Tm(void (*a1)(void))
{
  if (*(void *)(v1 + 16)) {
    swift_release();
  }
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_1ACD56BD8()
{
  return sub_1ACD56BE0();
}

uint64_t sub_1ACD56BE0()
{
  uint64_t v1 = (uint64_t (*)(void, void))v0[2];
  if (v1) {
    return v1(v0[4], v0[5]);
  }
  return result;
}

uint64_t ThinClientEpisodeStateModel.init(playState:bookmarkState:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1ACBE0C00(a1, a3);
  uint64_t result = type metadata accessor for ThinClientEpisodeStateModel();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for ThinClientEpisodeStateModel()
{
  uint64_t result = qword_1EB76F900;
  if (!qword_1EB76F900) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ThinClientEpisodeStateModel.playState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACBF21D4(v1, a1);
}

uint64_t ThinClientEpisodeStateModel.bookmarkState.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ThinClientEpisodeStateModel() + 20));
}

uint64_t _s18PodcastsFoundation27ThinClientEpisodeStateModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodePlayState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F2860);
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  int v17 = (char *)&v28 - v16;
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)&v28 - v19;
  sub_1ACBF21D4(a1, (uint64_t)&v28 - v19);
  uint64_t v29 = a2;
  sub_1ACBF21D4(a2, (uint64_t)v17);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1ACBF21D4((uint64_t)v20, (uint64_t)v11);
  sub_1ACBF21D4((uint64_t)v17, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_1ACA50E78((uint64_t)v17, (uint64_t *)&unk_1EB772D70);
    sub_1ACA50E78((uint64_t)v20, (uint64_t *)&unk_1EB772D70);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1ACA50E78((uint64_t)v11, (uint64_t *)&unk_1EB772D70);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1ACBF21D4((uint64_t)v11, (uint64_t)v14);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1ACA50E78((uint64_t)v17, (uint64_t *)&unk_1EB772D70);
    sub_1ACA50E78((uint64_t)v20, (uint64_t *)&unk_1EB772D70);
    sub_1ACAFDCDC((uint64_t)v14);
LABEL_6:
    sub_1ACA50E78((uint64_t)v11, &qword_1E99F2860);
    return 0;
  }
  sub_1ACC4A800(v21, (uint64_t)v7);
  char v23 = static EpisodePlayState.== infix(_:_:)((uint64_t)v14, (uint64_t)v7);
  sub_1ACAFDCDC((uint64_t)v7);
  sub_1ACA50E78((uint64_t)v17, (uint64_t *)&unk_1EB772D70);
  sub_1ACA50E78((uint64_t)v20, (uint64_t *)&unk_1EB772D70);
  sub_1ACAFDCDC((uint64_t)v14);
  sub_1ACA50E78((uint64_t)v11, (uint64_t *)&unk_1EB772D70);
  if (v23)
  {
LABEL_8:
    uint64_t v24 = *(int *)(type metadata accessor for ThinClientEpisodeStateModel() + 20);
    int v25 = *(unsigned __int8 *)(a1 + v24);
    int v26 = *(unsigned __int8 *)(v29 + v24);
    if (v25 == 2)
    {
      if (v26 != 2) {
        return 0;
      }
    }
    else if (v26 == 2 || ((v26 ^ v25) & 1) != 0)
    {
      return 0;
    }
    return 1;
  }
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for ThinClientEpisodeStateModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EpisodePlayState();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v11 = sub_1ACE750A8();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
        *((unsigned char *)a1 + *(int *)(v14 + 48)) = *((unsigned char *)a2 + *(int *)(v14 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for ThinClientEpisodeStateModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EpisodePlayState();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v4 = sub_1ACE750A8();
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
      if (!result)
      {
        int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
        return v5(a1, v4);
      }
    }
  }
  return result;
}

void *initializeWithCopy for ThinClientEpisodeStateModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EpisodePlayState();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v9 = sub_1ACE750A8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
      *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for ThinClientEpisodeStateModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EpisodePlayState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_1ACAFDCDC((uint64_t)a1);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v15 = sub_1ACE750A8();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
        *((unsigned char *)a1 + *(int *)(v20 + 48)) = *((unsigned char *)a2 + *(int *)(v20 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v14 = *(void *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v14);
      goto LABEL_18;
    }
    sub_1ACAFDCDC((uint64_t)a1);
LABEL_8:
    size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70) - 8) + 64);
    goto LABEL_9;
  }
  if (v10) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v11 = sub_1ACE750A8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
    *((unsigned char *)a1 + *(int *)(v18 + 48)) = *((unsigned char *)a2 + *(int *)(v18 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for ThinClientEpisodeStateModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EpisodePlayState();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v9 = sub_1ACE750A8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
      *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for ThinClientEpisodeStateModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EpisodePlayState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_1ACAFDCDC((uint64_t)a1);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v15 = sub_1ACE750A8();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
        *((unsigned char *)a1 + *(int *)(v20 + 48)) = *((unsigned char *)a2 + *(int *)(v20 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v14 = *(void *)(v7 + 64);
LABEL_9:
      memcpy(a1, a2, v14);
      goto LABEL_18;
    }
    sub_1ACAFDCDC((uint64_t)a1);
LABEL_8:
    size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70) - 8) + 64);
    goto LABEL_9;
  }
  if (v10) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v11 = sub_1ACE750A8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
    *((unsigned char *)a1 + *(int *)(v18 + 48)) = *((unsigned char *)a2 + *(int *)(v18 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ThinClientEpisodeStateModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD57FEC);
}

uint64_t sub_1ACD57FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 2u) {
      int v10 = 2;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 2;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 2u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ThinClientEpisodeStateModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD580CC);
}

uint64_t sub_1ACD580CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

void sub_1ACD5818C()
{
  sub_1ACD58220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1ACD58220()
{
  if (!qword_1EB772810)
  {
    type metadata accessor for EpisodePlayState();
    unint64_t v0 = sub_1ACE76FD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB772810);
    }
  }
}

uint64_t TranscriptModel.init(duration:paragraphs:speakers:ttmlData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = a3 & 1;
  *(void *)(a8 + 24) = a6;
  *(void *)(a8 + 32) = a7;
  *(void *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = a5;
  return result;
}

void __swiftcall TranscriptModel.Paragraph.init(startTime:endTime:sentences:speakerID:)(PodcastsFoundation::TranscriptModel::Paragraph *__return_ptr retstr, Swift::Double startTime, Swift::Double endTime, Swift::OpaquePointer sentences, Swift::String_optional speakerID)
{
  retstr->startTime = startTime;
  retstr->endTime = endTime;
  retstr->speakerID = speakerID;
  retstr->sentences = sentences;
}

PodcastsFoundation::TranscriptModel::Sentence __swiftcall TranscriptModel.Sentence.init(startTime:endTime:words:splitStyle:)(Swift::Double startTime, Swift::Double endTime, Swift::OpaquePointer words, PodcastsFoundation::TranscriptModel::Sentence::SplitStyle splitStyle)
{
  char v5 = *(unsigned char *)splitStyle;
  *(Swift::Double *)uint64_t v4 = startTime;
  *(Swift::Double *)(v4 + 8) = endTime;
  *(Swift::OpaquePointer *)(v4 + 16) = words;
  *(unsigned char *)(v4 + 24) = v5;
  result.endTime = endTime;
  result.startTime = startTime;
  result.words = words;
  result.splitStyle = splitStyle;
  return result;
}

void __swiftcall TranscriptModel.Word.init(startTime:endTime:text:isDescriptor:)(PodcastsFoundation::TranscriptModel::Word *__return_ptr retstr, Swift::Double startTime, Swift::Double endTime, Swift::String text, Swift::Bool isDescriptor)
{
  retstr->startTime = startTime;
  retstr->endTime = endTime;
  retstr->text = text;
  retstr->isDescriptor = isDescriptor;
}

double TranscriptModel.Word.startTime.getter()
{
  return *(double *)v0;
}

double TranscriptModel.Word.endTime.getter()
{
  return *(double *)(v0 + 8);
}

double TranscriptModel.Sentence.startTime.getter()
{
  return *(double *)v0;
}

double TranscriptModel.Sentence.endTime.getter()
{
  return *(double *)(v0 + 8);
}

double TranscriptModel.Paragraph.startTime.getter()
{
  return *(double *)v0;
}

double TranscriptModel.Paragraph.endTime.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1ACD582F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = v2 + 40 * v3;
      unint64_t v7 = *(void *)(v5 + 16);
      unint64_t v6 = *(void *)(v5 + 24);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1ACA5780C(v7, v6);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        do
        {
          uint64_t v12 = *(void *)(v8 + 8 * v10 + 32);
          BOOL v13 = __OFADD__(v11, v12);
          v11 += v12;
          if (v13)
          {
            __break(1u);
            goto LABEL_16;
          }
          ++v10;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        if (v11 < 0) {
          goto LABEL_17;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = 0;
      }
      BOOL v14 = __CFADD__(v4, v11 + 16);
      v4 += v11 + 16;
      if (v14) {
        break;
      }
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1ACD58458(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 48;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v22 = v2;
    uint64_t v23 = v1;
    while (1)
    {
      uint64_t v5 = *(void *)(v2 + 32 * v3);
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6) {
        break;
      }
      uint64_t v20 = 16;
LABEL_17:
      BOOL v19 = __CFADD__(v4, v20);
      v4 += v20;
      if (v19) {
        goto LABEL_25;
      }
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    uint64_t v24 = v4;
    uint64_t v7 = v5 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      uint64_t v10 = v7 + 40 * v8;
      unint64_t v12 = *(void *)(v10 + 16);
      unint64_t v11 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1ACA5780C(v12, v11);
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        do
        {
          uint64_t v17 = *(void *)(v13 + 8 * v15 + 32);
          BOOL v18 = __OFADD__(v16, v17);
          v16 += v17;
          if (v18)
          {
            __break(1u);
            return 0;
          }
          ++v15;
        }
        while (v14 != v15);
        swift_bridgeObjectRelease();
        if (v16 < 0) {
          goto LABEL_26;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = 0;
      }
      BOOL v19 = __CFADD__(v9, v16 + 16);
      v9 += v16 + 16;
      if (v19)
      {
        __break(1u);
        goto LABEL_24;
      }
      ++v8;
    }
    while (v8 != v6);
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v24;
    uint64_t v2 = v22;
    uint64_t v1 = v23;
    uint64_t v20 = v9 + 16;
    if (v9 < 0xFFFFFFFFFFFFFFF0) {
      goto LABEL_17;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_1ACE77488();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1ACD5862C(uint64_t a1)
{
  uint64_t v38 = *(void *)(a1 + 16);
  if (!v38) {
    return 0;
  }
  uint64_t v1 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v36 = v1;
LABEL_3:
  uint64_t v4 = *(void *)(v1 + 40 * v2 + 32);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v41 = v5;
  if (!v5) {
    goto LABEL_56;
  }
  uint64_t v34 = v2;
  uint64_t v35 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = v4 + 48;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v37 = v4 + 48;
  while (1)
  {
    uint64_t v9 = *(void *)(v6 + 32 * v7);
    uint64_t v43 = *(void *)(v9 + 16);
    if (v43) {
      break;
    }
    unint64_t v11 = 0;
LABEL_52:
    unint64_t v29 = v11 + 16;
    if (v11 >= 0xFFFFFFFFFFFFFFF0) {
      goto LABEL_66;
    }
    BOOL v28 = __CFADD__(v8, v29);
    v8 += v29;
    if (v28) {
      goto LABEL_67;
    }
    if (++v7 == v41)
    {
      uint64_t v30 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v5 = v30;
      uint64_t v2 = v34;
      uint64_t v3 = v35;
LABEL_56:
      BOOL v28 = __CFADD__(v5, 16);
      uint64_t v31 = v5 + 16;
      if (v28) {
        goto LABEL_68;
      }
      BOOL v28 = __CFADD__(v3, v31);
      v3 += v31;
      if (v28) {
        goto LABEL_69;
      }
      if (++v2 == v38)
      {
        uint64_t v32 = v3;
        swift_bridgeObjectRelease();
        return v32;
      }
      goto LABEL_3;
    }
  }
  uint64_t v39 = v7;
  uint64_t v40 = v8;
  uint64_t v42 = v9 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = 0;
  unint64_t v11 = 0;
  while (1)
  {
    uint64_t v12 = v42 + 40 * v10;
    unint64_t v14 = *(void *)(v12 + 16);
    unint64_t v13 = *(void *)(v12 + 24);
    if ((v13 & 0x1000000000000000) == 0) {
      break;
    }
    uint64_t v15 = sub_1ACE762E8();
    if (v15) {
      goto LABEL_12;
    }
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v23)
    {
LABEL_40:
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      while (1)
      {
        uint64_t v26 = *(void *)(v20 + 8 * v24 + 32);
        BOOL v27 = __OFADD__(v25, v26);
        v25 += v26;
        if (v27) {
          break;
        }
        if (v23 == ++v24)
        {
          swift_bridgeObjectRelease();
          if (v25 < 0) {
            goto LABEL_70;
          }
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
LABEL_48:
    BOOL v28 = __CFADD__(v11, v25 + 16);
    v11 += v25 + 16;
    if (v28) {
      goto LABEL_64;
    }
    if (++v10 == v43)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v1 = v36;
      uint64_t v6 = v37;
      uint64_t v7 = v39;
      uint64_t v8 = v40;
      goto LABEL_52;
    }
  }
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v15 = HIBYTE(v13) & 0xF;
  }
  else {
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15) {
    goto LABEL_46;
  }
LABEL_12:
  uint64_t v46 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1ACC878F0(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v44 = v10;
    unint64_t v45 = v11;
    uint64_t v16 = (v14 >> 59) & 1;
    if ((v13 & 0x1000000000000000) == 0) {
      LOBYTE(v16) = 1;
    }
    uint64_t v17 = 4 << v16;
    if ((v13 & 0x2000000000000000) != 0) {
      unint64_t v18 = HIBYTE(v13) & 0xF;
    }
    else {
      unint64_t v18 = v14 & 0xFFFFFFFFFFFFLL;
    }
    unint64_t v19 = 15;
    while (1)
    {
      while (1)
      {
        if ((v19 & 0xC) == v17)
        {
          if (v18 <= (unint64_t)sub_1ACD594BC(v19, v14, v13) >> 16)
          {
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
        }
        else if (v18 <= v19 >> 16)
        {
          goto LABEL_61;
        }
        if ((v13 & 0x1000000000000000) != 0)
        {
          sub_1ACE76328();
        }
        else if (!(v13 & 0x2000000000000000 | v14 & 0x1000000000000000))
        {
          sub_1ACE77388();
        }
        uint64_t v20 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ACC878F0(0, *(void *)(v46 + 16) + 1, 1);
          uint64_t v20 = v46;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1ACC878F0(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v46;
        }
        *(void *)(v20 + 16) = v22 + 1;
        *(void *)(v20 + 8 * v22 + 32) = 1;
        if ((v19 & 0xC) != v17) {
          break;
        }
        unint64_t v19 = sub_1ACD594BC(v19, v14, v13);
        if ((v13 & 0x1000000000000000) != 0) {
          goto LABEL_32;
        }
LABEL_19:
        unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
        if (!--v15) {
          goto LABEL_39;
        }
      }
      if ((v13 & 0x1000000000000000) == 0) {
        goto LABEL_19;
      }
LABEL_32:
      if (v18 <= v19 >> 16) {
        goto LABEL_63;
      }
      unint64_t v19 = sub_1ACE762F8();
      if (!--v15)
      {
LABEL_39:
        uint64_t v10 = v44;
        unint64_t v11 = v45;
        uint64_t v23 = *(void *)(v20 + 16);
        if (!v23) {
          goto LABEL_47;
        }
        goto LABEL_40;
      }
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t sub_1ACD58A8C(uint64_t a1)
{
  uint64_t v28 = a1 + 64;
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v3 = v2 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  uint64_t v5 = 0;
  while (1)
  {
    if (v3)
    {
      unint64_t v8 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      BOOL v10 = __OFADD__(v4++, 1);
      if (v10) {
        goto LABEL_44;
      }
      if (v4 >= v29)
      {
LABEL_40:
        swift_release();
        return v5;
      }
      unint64_t v11 = *(void *)(v28 + 8 * v4);
      if (!v11)
      {
        int64_t v12 = v4 + 1;
        if (v4 + 1 >= v29) {
          goto LABEL_40;
        }
        unint64_t v11 = *(void *)(v28 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 2;
          if (v4 + 2 >= v29) {
            goto LABEL_40;
          }
          unint64_t v11 = *(void *)(v28 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 3;
            if (v4 + 3 >= v29) {
              goto LABEL_40;
            }
            unint64_t v11 = *(void *)(v28 + 8 * v12);
            if (!v11)
            {
              int64_t v12 = v4 + 4;
              if (v4 + 4 >= v29) {
                goto LABEL_40;
              }
              unint64_t v11 = *(void *)(v28 + 8 * v12);
              if (!v11)
              {
                int64_t v12 = v4 + 5;
                if (v4 + 5 >= v29) {
                  goto LABEL_40;
                }
                unint64_t v11 = *(void *)(v28 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v4 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      goto LABEL_45;
                    }
                    if (v4 >= v29) {
                      goto LABEL_40;
                    }
                    unint64_t v11 = *(void *)(v28 + 8 * v4);
                    ++v12;
                    if (v11) {
                      goto LABEL_22;
                    }
                  }
                }
              }
            }
          }
        }
        int64_t v4 = v12;
      }
LABEL_22:
      unint64_t v3 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    unint64_t v13 = (unint64_t *)(*(void *)(a1 + 56) + 32 * v9);
    unint64_t v15 = *v13;
    unint64_t v14 = v13[1];
    unint64_t v17 = v13[2];
    unint64_t v16 = v13[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1ACA5780C(v15, v14);
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1ACA5780C(v17, v16);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v25 = 0;
      uint64_t v6 = 0;
      while (1)
      {
        uint64_t v26 = *(void *)(v23 + 8 * v25 + 32);
        BOOL v10 = __OFADD__(v6, v26);
        v6 += v26;
        if (v10) {
          break;
        }
        if (v24 == ++v25)
        {
          swift_bridgeObjectRelease();
          if (v6 < 0) {
            goto LABEL_46;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
LABEL_5:
    BOOL v7 = __CFADD__(v5, v6 + v21);
    v5 += v6 + v21;
    if (v7) {
      goto LABEL_43;
    }
  }
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  do
  {
    uint64_t v22 = *(void *)(v18 + 8 * v20 + 32);
    BOOL v10 = __OFADD__(v21, v22);
    v21 += v22;
    if (v10)
    {
      __break(1u);
      goto LABEL_42;
    }
    ++v20;
  }
  while (v19 != v20);
  swift_bridgeObjectRelease();
  if ((v21 & 0x8000000000000000) == 0) {
    goto LABEL_30;
  }
LABEL_46:
  uint64_t result = sub_1ACE77488();
  __break(1u);
  return result;
}

uint64_t TranscriptModel.duration.getter()
{
  return *(void *)v0;
}

uint64_t TranscriptModel.ttmlData.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1ACA3985C(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t TranscriptModel.paragraphs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptModel.speakers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptModel.inMemorySize.getter()
{
  uint64_t v1 = v0[3];
  unint64_t v2 = v0[4];
  uint64_t v3 = v0[6];
  uint64_t v4 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      BOOL v5 = __OFSUB__(HIDWORD(v1), v1);
      int v6 = HIDWORD(v1) - v1;
      if (v5) {
        goto LABEL_12;
      }
      uint64_t v4 = v6;
LABEL_6:
      if (v4 < 0) {
        goto LABEL_14;
      }
LABEL_7:
      uint64_t v10 = sub_1ACD5862C(v0[5]);
      uint64_t v11 = v4 + v10;
      if (__CFADD__(v4, v10))
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        sub_1ACE77488();
        __break(1u);
        JUMPOUT(0x1ACD58F1CLL);
      }
      uint64_t v12 = sub_1ACD58A8C(v3);
      BOOL v13 = __CFADD__(v11, v12);
      uint64_t result = v11 + v12;
      if (v13) {
        goto LABEL_11;
      }
      return result;
    case 2uLL:
      uint64_t v9 = v1 + 16;
      uint64_t v7 = *(void *)(v1 + 16);
      uint64_t v8 = *(void *)(v9 + 8);
      uint64_t v4 = v8 - v7;
      if (!__OFSUB__(v8, v7)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(v2);
      goto LABEL_7;
  }
}

uint64_t TranscriptModel.Paragraph.speakerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Paragraph.sentences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptModel.Paragraph.sentences.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*TranscriptModel.Paragraph.sentences.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptModel.Paragraph.inMemorySize.getter()
{
  uint64_t v1 = sub_1ACD58458(*(void *)(v0 + 32));
  BOOL v2 = __CFADD__(v1, 16);
  uint64_t result = v1 + 16;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACD58FE0()
{
  uint64_t v1 = sub_1ACD58458(*(void *)(v0 + 32));
  BOOL v2 = __CFADD__(v1, 16);
  uint64_t result = v1 + 16;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t TranscriptModel.Sentence.words.getter()
{
  return swift_bridgeObjectRetain();
}

void TranscriptModel.Sentence.splitStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t TranscriptModel.Sentence.inMemorySize.getter()
{
  uint64_t v1 = sub_1ACD582F8(*(void *)(v0 + 16));
  BOOL v2 = __CFADD__(v1, 16);
  uint64_t result = v1 + 16;
  if (v2) {
    __break(1u);
  }
  return result;
}

BOOL TranscriptModel.Sentence.SplitStyle.containsStartOfOriginalSentence.getter()
{
  return *v0 < 2u;
}

BOOL static TranscriptModel.Sentence.SplitStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptModel.Sentence.SplitStyle.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t TranscriptModel.Sentence.SplitStyle.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD590E4()
{
  uint64_t v1 = sub_1ACD582F8(*(void *)(v0 + 16));
  BOOL v2 = __CFADD__(v1, 16);
  uint64_t result = v1 + 16;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t TranscriptModel.Word.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Word.isDescriptor.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t TranscriptModel.Word.inMemorySize.getter()
{
  unint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1ACA5780C(v1, v2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(v3 + 8 * v6 + 32);
      BOOL v9 = __OFADD__(v7, v8);
      v7 += v8;
      if (v9)
      {
        __break(1u);
        return result;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) == 0) {
      return v7 + 16;
    }
    sub_1ACE77488();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
  return v7 + 16;
}

uint64_t TranscriptModel.Speaker.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Speaker.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptModel.Speaker.inMemorySize.getter()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  unint64_t v4 = v0[2];
  unint64_t v3 = v0[3];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1ACA5780C(v1, v2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(v5 + 8 * v8 + 32);
      BOOL v11 = __OFADD__(v9, v10);
      v9 += v10;
      if (v11)
      {
        __break(1u);
        goto LABEL_17;
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    if ((v9 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
LABEL_13:
    sub_1ACE77488();
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1ACA5780C(v4, v3);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    return v15 + v9;
  }
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  while (1)
  {
    uint64_t v16 = *(void *)(v12 + 8 * v14 + 32);
    BOOL v11 = __OFADD__(v15, v16);
    v15 += v16;
    if (v11) {
      break;
    }
    if (v13 == ++v14)
    {
      swift_bridgeObjectRelease();
      if ((v15 & 0x8000000000000000) == 0) {
        return v15 + v9;
      }
      goto LABEL_13;
    }
  }
LABEL_17:
  __break(1u);
  return result;
}

PodcastsFoundation::TranscriptModel::Speaker_optional __swiftcall TranscriptModel.speaker(for:)(PodcastsFoundation::TranscriptModel::Paragraph *a1)
{
  uint64_t v3 = v1;
  object = a1->speakerID.value._object;
  if (!object) {
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(v2 + 48);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_6;
  }
  uint64_t countAndFlagsBits = a1->speakerID.value._countAndFlagsBits;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACA657FC(countAndFlagsBits, (uint64_t)object);
  if ((v8 & 1) == 0)
  {
    a1 = (PodcastsFoundation::TranscriptModel::Paragraph *)swift_bridgeObjectRelease();
LABEL_6:
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    goto LABEL_7;
  }
  uint64_t v9 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v13 = v9[2];
  uint64_t v12 = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1 = (PodcastsFoundation::TranscriptModel::Paragraph *)swift_bridgeObjectRelease();
  *(void *)uint64_t v3 = v11;
  *(void *)(v3 + 8) = v10;
  *(void *)(v3 + 16) = v13;
  *(void *)(v3 + 24) = v12;
LABEL_7:
  result.value.id._object = v16;
  result.value.id._uint64_t countAndFlagsBits = v15;
  result.value.name._object = v14;
  result.value.name._uint64_t countAndFlagsBits = (uint64_t)a1;
  return result;
}

uint64_t sub_1ACD594BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1ACE76338();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1AD1184C0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t _s18PodcastsFoundation15TranscriptModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(a2 + 16) & 1) != 0 || (sub_1ACE77CF8() & 1) == 0)
  {
    return 0;
  }
  if ((sub_1ACD6EE5C(v2, v3, v6, v7) & 1) == 0 || (sub_1ACA88058(v5, v9) & 1) == 0) {
    return 0;
  }
  return sub_1ACC581E8(v4, v8);
}

uint64_t _s18PodcastsFoundation15TranscriptModelV4WordV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a2 + 32);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return v4 ^ v5 ^ 1u;
  }
  char v7 = sub_1ACE77848();
  uint64_t result = 0;
  if (v7) {
    return v4 ^ v5 ^ 1u;
  }
  return result;
}

uint64_t _s18PodcastsFoundation15TranscriptModelV7SpeakerV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1ACE77848(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1ACE77848();
    }
  }
  return result;
}

uint64_t _s18PodcastsFoundation15TranscriptModelV8SentenceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a2 + 24);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  return sub_1ACA87F88(*(void *)(a1 + 16), *(void *)(a2 + 16)) & (v5 == v4);
}

uint64_t _s18PodcastsFoundation15TranscriptModelV9ParagraphV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  if (v5)
  {
    if (!v7) {
      return 0;
    }
    BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v5 == v7;
    if (!v9 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  return sub_1ACA87E2C(v6, v8);
}

unint64_t sub_1ACD59818()
{
  unint64_t result = qword_1E99F5798;
  if (!qword_1E99F5798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5798);
  }
  return result;
}

uint64_t destroy for TranscriptModel(uint64_t a1)
{
  sub_1ACA50850(*(void *)(a1 + 24), *(void *)(a1 + 32));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_1ACA3985C(v4, v5);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptModel(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = *((void *)a2 + 3);
  unint64_t v6 = *((void *)a2 + 4);
  sub_1ACA3985C(v5, v6);
  uint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  sub_1ACA50850(v7, v8);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranscriptModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1ACA50850(v4, v5);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptModel()
{
  return &type metadata for TranscriptModel;
}

uint64_t destroy for TranscriptModel.Paragraph()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptModel.Paragraph(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TranscriptModel.Paragraph(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranscriptModel.Paragraph(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptModel.Paragraph()
{
  return &type metadata for TranscriptModel.Paragraph;
}

uint64_t destroy for TranscriptModel.Sentence()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptModel.Sentence(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptModel.Sentence(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for TranscriptModel.Sentence(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModel.Sentence(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModel.Sentence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModel.Sentence()
{
  return &type metadata for TranscriptModel.Sentence;
}

unsigned char *storeEnumTagSinglePayload for TranscriptModel.Sentence.SplitStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD59DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModel.Sentence.SplitStyle()
{
  return &type metadata for TranscriptModel.Sentence.SplitStyle;
}

uint64_t initializeWithCopy for TranscriptModel.Word(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptModel.Word(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for TranscriptModel.Word(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptModel.Word(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptModel.Word(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptModel.Word()
{
  return &type metadata for TranscriptModel.Word;
}

ValueMetadata *type metadata accessor for TranscriptModel.Speaker()
{
  return &type metadata for TranscriptModel.Speaker;
}

uint64_t dispatch thunk of ScoutingAligner.align(at:within:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1ACA7699C;
  v12.n128_f64[0] = a3;
  v13.n128_f64[0] = a4;
  v14.n128_f64[0] = a5;
  return v16(a1, a2, v12, v13, v14);
}

uint64_t dispatch thunk of LegacyPlayerController.startPlayback(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for DummyLegacyPlayerController()
{
  return &type metadata for DummyLegacyPlayerController;
}

id sub_1ACD5A0E8@<X0>(uint64_t a1@<X8>)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = *(id *)v1;
  if (*(void *)v1)
  {
    uint64_t v4 = 0;
    id v5 = 0;
    uint64_t v6 = 0;
    char v7 = 0;
    id v8 = *(id *)v1;
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(v1 + 16);
  id v5 = *(id *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  if (!v4)
  {
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  id v8 = *(id *)(v1 + 8);
  if (v6)
  {
    BOOL v9 = v8 == v5 && v4 == v6;
    if (!v9 && (sub_1ACE77848() & 1) == 0)
    {
      if (sub_1ACE77848()) {
        goto LABEL_11;
      }
      if ((sub_1ACE77848() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v7 = 2;
        goto LABEL_14;
      }
LABEL_19:
      id v11 = objc_msgSend(self, sel_sharedAccountStore);
      v15[0] = 0;
      id v8 = objc_msgSend(v11, sel_activeStoreAccountWithError_, v15);

      id v12 = v15[0];
      if (v8)
      {
        uint64_t v4 = 0;
        id v5 = 0;
        uint64_t v6 = 0;
        char v7 = 3;
      }
      else
      {
        __n128 v13 = v12;
        __n128 v14 = (void *)sub_1ACE74D78();

        swift_willThrow();
        id v8 = 0;
        uint64_t v4 = 0;
        id v5 = 0;
        uint64_t v6 = 0;
        char v7 = 4;
      }
      goto LABEL_14;
    }
LABEL_13:
    swift_bridgeObjectRetain();
    char v7 = 1;
    id v8 = v5;
    uint64_t v4 = v6;
    id v5 = 0;
    uint64_t v6 = 0;
    goto LABEL_14;
  }
LABEL_11:
  swift_bridgeObjectRetain();
  id v5 = 0;
  uint64_t v6 = 0;
  char v7 = 1;
LABEL_14:
  id v3 = 0;
LABEL_15:
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return v3;
}

uint64_t PlaybackUserContext.init(enqueuerDSID:requesterUserId:sharedUserId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1ACD5A304(uint64_t a1, uint64_t a2)
{
  sub_1ACBDBB20(a1, (uint64_t)v4);
  sub_1ACBDBB20(a2, (uint64_t)v5);
  return sub_1ACD5A9A4((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1ACD5A350()
{
  uint64_t result = 0x5344656C676E6973;
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t result = 0x6F48656C676E6973;
      break;
    case 2:
      uint64_t result = 0x6D6F4869746C756DLL;
      break;
    case 3:
      uint64_t result = 0x417972616D697270;
      break;
    case 4:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

id PlaybackUserContext.enqueuerDSID.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t PlaybackUserContext.requesterUserId.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaybackUserContext.sharedUserId.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for PlaybackUserContext(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PlaybackUserContext(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(void *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackUserContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PlaybackUserContext(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackUserContext(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackUserContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackUserContext()
{
  return &type metadata for PlaybackUserContext;
}

id sub_1ACD5A6E4(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:
      uint64_t result = result;
      break;
    case 1:
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for PlaybackUserContext.ContextType(uint64_t a1)
{
}

uint64_t initializeWithCopy for PlaybackUserContext.ContextType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1ACD5A6E4(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlaybackUserContext.ContextType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1ACD5A6E4(*(id *)a2, v4, v5, v6, v7);
  id v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1ACBDBC54(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PlaybackUserContext.ContextType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1ACBDBC54(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackUserContext.ContextType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackUserContext.ContextType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1ACD5A960(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1ACD5A978(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackUserContext.ContextType()
{
  return &type metadata for PlaybackUserContext.ContextType;
}

uint64_t sub_1ACD5A9A4(uint64_t a1, uint64_t a2)
{
  sub_1ACBDBB20(a1, (uint64_t)&v22);
  switch(v26)
  {
    case 1:
      uint64_t v4 = v22;
      uint64_t v5 = v23;
      sub_1ACBDBB20(a2, (uint64_t)&v19);
      if (v21 != 1) {
        goto LABEL_27;
      }
      if (v4 == v19.i64[0] && v5 == v19.i64[1]) {
        goto LABEL_28;
      }
      goto LABEL_20;
    case 2:
      uint64_t v7 = v22;
      uint64_t v8 = v23;
      uint64_t v9 = v24;
      uint64_t v10 = v25;
      sub_1ACBDBB20(a2, (uint64_t)&v19);
      if (v21 != 2) {
        goto LABEL_27;
      }
      int8x16_t v11 = v20;
      BOOL v12 = v7 == v19.i64[0] && v8 == v19.i64[1];
      if (v12 || (char v13 = 0, (sub_1ACE77848() & 1) != 0))
      {
        if (v9 == v11.i64[0] && v10 == v11.i64[1]) {
LABEL_28:
        }
          char v13 = 1;
        else {
LABEL_20:
        }
          char v13 = sub_1ACE77848();
      }
      break;
    case 3:
      sub_1ACBDBB20(a2, (uint64_t)&v19);
      if (v21 == 3) {
        goto LABEL_22;
      }
      goto LABEL_27;
    case 4:
      sub_1ACBDBB20(a2, (uint64_t)&v19);
      int8x16_t v15 = vorrq_s8(v19, v20);
      int8x8_t v16 = vorr_s8(*(int8x8_t *)v15.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
      if (v21 != 4 || *(void *)&v16 != 0) {
        goto LABEL_27;
      }
      goto LABEL_28;
    default:
      sub_1ACBDBB20(a2, (uint64_t)&v19);
      if (v21)
      {
LABEL_27:
        char v13 = 0;
      }
      else
      {
LABEL_22:
        sub_1ACAA3690();
        sub_1ACD5ABC8(a1, (void (*)(void, void, void, void, void))sub_1ACD5A6E4);
        sub_1ACD5ABC8(a2, (void (*)(void, void, void, void, void))sub_1ACD5A6E4);
        char v13 = sub_1ACE76F68();
        sub_1ACD5ABC8(a2, (void (*)(void, void, void, void, void))sub_1ACBDBC54);
        sub_1ACD5ABC8(a1, (void (*)(void, void, void, void, void))sub_1ACBDBC54);
      }
      break;
  }
  return v13 & 1;
}

uint64_t sub_1ACD5ABC8(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t ServerCategory.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.artworkPrimaryColor.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 48);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 64);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ServerCategory.artworkTemplateURL.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 48);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s18PodcastsFoundation14ServerCategoryC13artworkHeightSo8NSNumberCSgvg_0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 48);
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16)) != 0 && (*(unsigned char *)(v2 + 40) & 1) == 0) {
    return sub_1ACE76A58();
  }
  else {
    return 0;
  }
}

uint64_t _s18PodcastsFoundation14ServerCategoryC12artworkWidthSo8NSNumberCSgvg_0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 48);
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16)) != 0 && (*(unsigned char *)(v2 + 24) & 1) == 0) {
    return sub_1ACE76A58();
  }
  else {
    return 0;
  }
}

uint64_t ServerCategory.name.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.url.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.artwork.getter()
{
  if (*(void *)(*(void *)(v0 + 48) + 48)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t ServerCategory.color.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerCategory.parent.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = *(void *)(v2 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1ACE77508();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1AD119490](0, v3);
    goto LABEL_8;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = *(void *)(v3 + 32);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t ServerCategory.children.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1 && (uint64_t v2 = *(void *)(v1 + 24)) != 0)
  {
    unint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = sub_1ACA4ED80(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1ACDF77B0(v4);
  swift_bridgeObjectRelease();
  return v5;
}

id MediaCacheDeleteProcessor.managedObjectContext.getter()
{
  return *v0;
}

id MediaCacheDeleteProcessor.workQueue.getter()
{
  return *(id *)(v0 + 8);
}

double MediaCacheDeleteProcessor.debounceInterval.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t MediaCacheDeleteProcessor.isRunning.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = v1 + 4;
  unint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void MediaCacheDeleteProcessor.init(managedObjectContext:workQueue:userDefaults:debounceInterval:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A8B0);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 20) = 0;
  *(unsigned char *)(v10 + 16) = 0;
  MediaCacheDeleteProcessorDataSource.init(userDefaults:)((uint64_t)a3, v19);
  type metadata accessor for CoreDataEpisodeAndShowStorage();
  swift_allocObject();
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  __n128 v14 = CoreDataEpisodeAndShowStorage.init(context:)(v11);
  type metadata accessor for DebouncedEpisodeAndShowProcessor();
  uint64_t v15 = swift_allocObject();
  id v16 = v11;
  id v17 = v12;
  uint64_t v18 = sub_1ACBB3AA4((uint64_t)v19, (uint64_t)v14, (uint64_t)v16, (uint64_t)v17, 0, 100, v15);

  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(double *)(a4 + 16) = a5;
  *(void *)(a4 + 24) = v10;
  *(void *)(a4 + 32) = v18;
}

Swift::Bool __swiftcall MediaCacheDeleteProcessor.start()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = v1 + 4;
  uint64_t v4 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v3, &v10);
  os_unfair_lock_unlock(v4);
  if ((v10 & 1) == 0)
  {
    unsigned __int8 v5 = *(os_unfair_lock_s **)(v2 + 264);
    uint64_t v6 = v5 + 4;
    uint64_t v7 = v5 + 5;
    os_unfair_lock_lock(v5 + 5);
    sub_1ACA8ADD8(v6, v9);
    os_unfair_lock_unlock(v7);
    if (v9[0] - 2 < 2) {
      sub_1ACD781F8();
    }
    os_unfair_lock_lock(v4);
    sub_1ACBB3288(v3);
    os_unfair_lock_unlock(v4);
  }
  return 1;
}

ValueMetadata *type metadata accessor for MediaCacheDeleteProcessor()
{
  return &type metadata for MediaCacheDeleteProcessor;
}

id MTPodcast.showType.getter()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v0, sel_showTypeInFeed);
  id v3 = objc_msgSend(v1, sel_showTypeFromString_, v2);

  return v3;
}

Swift::Void __swiftcall EpisodeDownloadsRemover.removeDownloadedEpisode(uuid:)(Swift::String uuid)
{
  id v2 = (id)sub_1ACE76178();
  objc_msgSend(v1, sel_removeDownloadedEpisodeWithUuid_completion_, v2, 0);
}

Swift::Void __swiftcall MTEpisode.markAsBookmarked()()
{
  if ((objc_msgSend(v0, sel_isBookmarked) & 1) == 0)
  {
    sub_1ACE74FC8();
    objc_msgSend(v0, sel_markAsBookmarkedOnTimestamp_);
  }
}

Swift::Void __swiftcall MTEpisode.markAsBookmarked(onTimestamp:)(Swift::Double onTimestamp)
{
  objc_msgSend(v1, sel_setIsBookmarked_, 1);
  objc_msgSend(v1, sel_lastBookmarkedDate);
  if (v3 < onTimestamp)
  {
    objc_msgSend(v1, sel_setLastBookmarkedDate_, onTimestamp);
  }
}

Swift::Void __swiftcall MTEpisode.markAsUnbookmarked()()
{
  if (objc_msgSend(v0, sel_isBookmarked))
  {
    objc_msgSend(v0, sel_setIsBookmarked_, 0);
  }
}

uint64_t type metadata accessor for ThinClientStateCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACD5B930()
{
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  sub_1ACA798F8();
  uint64_t v0 = sub_1ACE76028();
  sub_1ACE75118();
  swift_getTupleTypeMetadata2();
  sub_1ACE76688();
  swift_getTupleTypeMetadata2();
  sub_1ACE765F8();
  sub_1ACE76028();
  return v0;
}

uint64_t sub_1ACD5BA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v84 = a3;
  uint64_t v80 = a2;
  uint64_t v82 = a6;
  uint64_t v75 = sub_1ACE76FD8();
  uint64_t v9 = MEMORY[0x1F4188790](v75);
  uint64_t v74 = (void (*)(uint64_t, char *, uint64_t))((char *)&v71 - v10);
  uint64_t v78 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  long long v71 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  long long v73 = (char *)&v71 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v76 = (char *)&v71 - v15;
  uint64_t v16 = sub_1ACE75118();
  uint64_t v83 = a5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_1ACE76FD8();
  uint64_t v72 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  char v21 = (char *)&v71 - v20;
  uint64_t v22 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v19);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v77 = (char *)&v71 - v26;
  uint64_t v81 = a1;
  uint64_t v85 = a1;
  uint64_t v27 = sub_1ACE76688();
  unint64_t v28 = sub_1ACA798F8();
  MEMORY[0x1AD118260](&v86, &v85, a4, &type metadata for AdamID, v27, v28);
  unint64_t v79 = v28;
  if (!v86) {
    goto LABEL_4;
  }
  swift_getWitnessTable();
  sub_1ACE76128();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v21, v18);
LABEL_4:
    uint64_t v30 = v80;
    uint64_t v29 = v81;
    if (qword_1E99EFEE8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1ACE754C8();
    __swift_project_value_buffer(v31, (uint64_t)qword_1E99F2BF8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76BD8();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = v83;
    if (v34)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v85 = v29;
      uint64_t v86 = v37;
      *(_DWORD *)uint64_t v36 = 136315394;
      sub_1ACA55E4C();
      uint64_t v78 = a4;
      uint64_t v38 = sub_1ACE770B8();
      uint64_t v85 = sub_1ACA3189C(v38, v39, &v86);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v85 = v29;
      unint64_t v40 = v79;
      MEMORY[0x1AD118260](&v85, v30, &type metadata for AdamID, v35, v79);
      uint64_t v41 = sub_1ACE76228();
      uint64_t v85 = sub_1ACA3189C(v41, v42, &v86);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v32, v33, "[StateCache] state for %s (consolidated) -> %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v37, -1, -1);
      MEMORY[0x1AD11B340](v36, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unint64_t v40 = v79;
    }
    uint64_t v86 = v29;
    return MEMORY[0x1AD118260](&v86, v30, &type metadata for AdamID, v35, v40);
  }
  uint64_t v75 = v22;
  uint64_t v44 = *(int *)(TupleTypeMetadata2 + 48);
  unint64_t v45 = v77;
  uint64_t v46 = &v77[v44];
  uint64_t v47 = TupleTypeMetadata2;
  long long v84 = &v21[v44];
  uint64_t v48 = *(void *)(v16 - 8);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v77, v21, v16);
  uint64_t v49 = v78;
  unint64_t v51 = v78 + 32;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
  uint64_t v52 = v83;
  v50(v46, v84, v83);
  uint64_t v80 = v47;
  uint64_t v53 = &v25[*(int *)(v47 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v25, v45, v16);
  long long v84 = *(char **)(v49 + 16);
  ((void (*)(char *, char *, uint64_t))v84)(v53, v46, v52);
  uint64_t v54 = v76;
  uint64_t v55 = v53;
  uint64_t v56 = v52;
  unint64_t v79 = v51;
  uint64_t v74 = (void (*)(uint64_t, char *, uint64_t))v50;
  v50(v76, v55, v52);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v16);
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v57 = sub_1ACE754C8();
  __swift_project_value_buffer(v57, (uint64_t)qword_1E99F2BF8);
  unsigned int v58 = v73;
  ((void (*)(char *, char *, uint64_t))v84)(v73, v54, v52);
  uint64_t v59 = sub_1ACE75498();
  os_log_type_t v60 = sub_1ACE76BD8();
  int v61 = v60;
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v62 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v72 = v63;
    *(_DWORD *)uint64_t v62 = 136315394;
    uint64_t v85 = v81;
    uint64_t v86 = v63;
    sub_1ACA55E4C();
    LODWORD(v81) = v61;
    uint64_t v64 = sub_1ACE770B8();
    uint64_t v85 = sub_1ACA3189C(v64, v65, &v86);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    ((void (*)(char *, char *, uint64_t))v84)(v71, v58, v56);
    uint64_t v66 = sub_1ACE76228();
    uint64_t v85 = sub_1ACA3189C(v66, v67, &v86);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    uint64_t v68 = v78;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v58, v56);
    _os_log_impl(&dword_1AC9D5000, v59, (os_log_type_t)v81, "[StateCache] state for %s (in-flight) -> %s", (uint8_t *)v62, 0x16u);
    uint64_t v69 = v72;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v69, -1, -1);
    uint64_t v54 = v76;
    MEMORY[0x1AD11B340](v62, -1, -1);
  }
  else
  {

    uint64_t v68 = v78;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v58, v52);
  }
  (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v80);
  uint64_t v70 = v82;
  v74(v82, v54, v56);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v70, 0, 1, v56);
}

uint64_t sub_1ACD5C3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1ACE75118();
  uint64_t v11 = *(void *)(a4 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v16 = *(void *)(v5 + 16);
  uint64_t v15 = v5 + 16;
  v41[0] = a1;
  uint64_t v17 = sub_1ACE76688();
  unint64_t v40 = sub_1ACA798F8();
  MEMORY[0x1AD118260](v43, v41, v16, &type metadata for AdamID, v17);
  uint64_t v18 = v43[0];
  if (!v43[0]) {
    uint64_t v18 = sub_1ACE765F8();
  }
  uint64_t v44 = v18;
  uint64_t v19 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v14, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v19, a2, v11);
  sub_1ACE76648();
  if (qword_1E99EFEE8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1E99F2BF8);
  char v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76BD8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v43[0] = v37;
    *(_DWORD *)uint64_t v23 = 136315650;
    v41[0] = a1;
    sub_1ACA55E4C();
    uint64_t v39 = v15;
    uint64_t v24 = a1;
    uint64_t v38 = v17;
    uint64_t v25 = sub_1ACE770B8();
    v41[0] = sub_1ACA3189C(v25, v26, v43);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v41[0] = a1;
    uint64_t v27 = sub_1ACE770B8();
    v41[0] = sub_1ACA3189C(v27, v28, v43);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    swift_beginAccess();
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = MEMORY[0x1AD118740](v29, TupleTypeMetadata2);
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = v30;
    a1 = v24;
    uint64_t v42 = sub_1ACA3189C(v33, v32, v43);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v21, v22, "[StateCache] %s appended in-flight update for adamID %s, new queue: %s", (uint8_t *)v23, 0x20u);
    uint64_t v34 = v37;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v34, -1, -1);
    MEMORY[0x1AD11B340](v23, -1, -1);
  }

  swift_beginAccess();
  v41[3] = a1;
  uint64_t v42 = v44;
  sub_1ACE76088();
  return sub_1ACE760B8();
}

PodcastsFoundation::PodcastEpisodeAttributes::MediaKind_optional ServerPodcastEpisode.mediaKind.getter@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v4 = *(void **)(v3 + 280);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 272);
    swift_bridgeObjectRetain();
    v6._uint64_t countAndFlagsBits = v5;
    v6._object = v4;
    result.value = PodcastEpisodeAttributes.MediaKind.init(rawValue:)(v6).value;
    char v8 = v9;
    if (v9 == 5) {
      char v8 = 0;
    }
  }
  else
  {
    char v8 = 0;
  }
  *a1 = v8;
  return result;
}

uint64_t ServerPodcastEpisode.author.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.byteSize.getter()
{
  return 0;
}

uint64_t ServerPodcastEpisode.category.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 248);
  if (!v1 || !*(void *)(v1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcastEpisode.isExplicit.getter()
{
  if (!*(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 224)
    || (swift_bridgeObjectRetain(), uint64_t v1 = sub_1ACE775B8(), swift_bridgeObjectRelease(), v1 != 1))
  {
    LOBYTE(v1) = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t ServerPodcastEpisode.guid.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.itemDescription.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  if (v1[23])
  {
    uint64_t v2 = v1[22];
  }
  else
  {
    uint64_t v3 = v1[14];
    if (v3)
    {
      uint64_t v2 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v2 = 0;
    }
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcastEpisode.pubDate.getter@<X0>(uint64_t a1@<X8>)
{
  return PodcastEpisodeAttributes.releaseDateResolved.getter(a1);
}

uint64_t ServerPodcastEpisode.firstTimeAvailableAsPaid.getter@<X0>(char *a1@<X8>)
{
  if (*(void *)(*(void *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 208))
  {
    char v6 = 2;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v6, a1);
    return swift_release();
  }
  else
  {
    uint64_t v4 = sub_1ACE750A8();
    uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    return v5(a1, 1, 1, v4);
  }
}

uint64_t ServerPodcastEpisode.firstTimeAvailableAsFree.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 208))
  {
    char v13 = 1;
    swift_retain();
    PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v13, v5);
    uint64_t v6 = sub_1ACE750A8();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      char v12 = 0;
      PodcastEpisodeAttributes.AvailabilityDates.subscript.getter(&v12, a1);
      sub_1ACA3E034((uint64_t)v5);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, v5, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    return swift_release();
  }
  else
  {
    uint64_t v8 = sub_1ACE750A8();
    char v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
}

uint64_t ServerPodcastEpisode.title.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.trackNum.getter()
{
  return 0;
}

uint64_t ServerPodcastEpisode.uti.getter()
{
  return PodcastEpisodeAttributes.uti.getter();
}

uint64_t ServerPodcastEpisode.itunesTitle.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.itemSummary.getter()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 112);
  if (!v1) {
    return 0;
  }
  if (v1[3]) {
    uint64_t v2 = v1[2];
  }
  else {
    uint64_t v2 = v1[4];
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ServerPodcastEpisode.seasonNumber.getter()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 360)) {
    return 0;
  }
  else {
    return *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 352);
  }
}

uint64_t ServerPodcastEpisode.episodeNumber.getter()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 344)) {
    return 0;
  }
  else {
    return *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 336);
  }
}

uint64_t ServerPodcastEpisode.episodeType.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = *(void **)(v1 + 168);
  if (!v2) {
    return 1819047270;
  }
  uint64_t v3 = *(void *)(v1 + 160);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v3;
  v4._object = v2;
  PodcastEpisodeAttributes.EpisodeType.init(rawValue:)(v4);
  return *(void *)&aFull_3[8 * v6];
}

uint64_t ServerPodcastEpisode.webpageURL.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.feedURL.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.episodeStoreId.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___MTServerPodcastEpisode_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerPodcastEpisode.priceType.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v2);
  swift_bridgeObjectRelease();
  return *(void *)&aStdq_8[8 * v2];
}

double ServerPodcastEpisode.duration.getter@<D0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  return sub_1ACD5DB3C(a1);
}

void ServerPodcastEpisode.enclosureURL.getter(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v1);
}

uint64_t ServerPodcastEpisode.entitledPriceType.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v2);
  swift_bridgeObjectRelease();
  return *(void *)&aStdq_8[8 * v2];
}

double sub_1ACD5DAB8(void *a1)
{
  id v1 = a1;
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v2, (Swift::Bool)&v8);
  double v4 = v3;
  char v6 = v5;

  swift_bridgeObjectRelease();
  double result = v4 / 1000.0;
  if (v6) {
    return 0.0;
  }
  return result;
}

double ServerPodcastEpisode.entitledDuration.getter@<D0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  return sub_1ACD5DB3C(a1);
}

double sub_1ACD5DB3C@<D0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v6);
  double v2 = v1;
  char v4 = v3;
  swift_bridgeObjectRelease();
  double result = v2 / 1000.0;
  if (v4) {
    return 0.0;
  }
  return result;
}

void ServerPodcastEpisode.entitledEnclosureURL.getter(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v1);
}

id sub_1ACD5DBD4(void *a1)
{
  id v1 = a1;
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(v2, (Swift::Bool)&v7);
  uint64_t v4 = v3;

  if (v4)
  {
    char v5 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = 0;
  }
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTemplateURL.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if (v2)
  {
    BOOL v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = v1[17];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  return v5;
}

double ServerPodcastEpisode.artworkWidth.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if ((!v2
     || (v1[15] == 0x65646F73697065 ? (BOOL v3 = v2 == 0xE700000000000000) : (BOOL v3 = 0), v3 || (sub_1ACE77848() & 1) != 0))
    && (uint64_t v4 = v1[17]) != 0
    && *(unsigned char *)(v4 + 24) != 1)
  {
    return (double)*(uint64_t *)(v4 + 16);
  }
  else
  {
    return (double)0;
  }
}

double ServerPodcastEpisode.artworkHeight.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if ((!v2
     || (v1[15] == 0x65646F73697065 ? (BOOL v3 = v2 == 0xE700000000000000) : (BOOL v3 = 0), v3 || (sub_1ACE77848() & 1) != 0))
    && (uint64_t v4 = v1[17]) != 0
    && *(unsigned char *)(v4 + 40) != 1)
  {
    return (double)*(uint64_t *)(v4 + 32);
  }
  else
  {
    return (double)0;
  }
}

uint64_t ServerPodcastEpisode.artworkBackgroundColor.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if (v2)
  {
    BOOL v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = v1[17];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 64);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTextPrimaryColor.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if (v2)
  {
    BOOL v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = v1[17];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 80);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTextSecondaryColor.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if (v2)
  {
    BOOL v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = v1[17];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 96);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.artworkTextTertiaryColor.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if (v2)
  {
    BOOL v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = v1[17];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 112);
  swift_bridgeObjectRetain();
  return v5;
}

id sub_1ACD5E190(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    uint64_t v4 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t ServerPodcastEpisode.artworkTextQuaternaryColor.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___MTServerPodcastEpisode_attributes);
  uint64_t v2 = v1[16];
  if (v2)
  {
    BOOL v3 = v1[15] == 0x65646F73697065 && v2 == 0xE700000000000000;
    if (!v3 && (sub_1ACE77848() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = v1[17];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 128);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t ServerPodcastEpisode.freeTranscriptIdentifier.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.entitledTranscriptIdentifier.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.freeTranscriptSnippet.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.entitledTranscriptSnippet.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v5);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v6);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerPodcastEpisode.freeTranscriptProvider.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v4);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = 0x656C707061;
  if ((v5 & 1) == 0) {
    uint64_t v2 = 0x72656469766F7270;
  }
  if (v5 == 2) {
    return 0;
  }
  else {
    return v2;
  }
}

id sub_1ACD5E754(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    char v7 = (void *)sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  return v7;
}

uint64_t ServerPodcastEpisode.entitledTranscriptProvider.getter@<X0>(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *a1@<X8>)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(a1, (Swift::Bool)&v4);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v1, (PodcastsFoundation::PriceType)&v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = 0x656C707061;
  if ((v5 & 1) == 0) {
    uint64_t v2 = 0x72656469766F7270;
  }
  if (v5 == 2) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t NSUserDefaults.codable<A>(_:for:)@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  char v9 = (void *)sub_1ACE76178();
  id v10 = objc_msgSend(v4, sel_dataForKey_, v9);

  if (v10)
  {
    uint64_t v11 = sub_1ACE74F88();
    unint64_t v13 = v12;

    sub_1ACE74CB8();
    swift_allocObject();
    sub_1ACE74CA8();
    sub_1ACE74C98();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, 0, 1, a3);
    swift_release();
    return sub_1ACA50850(v11, v13);
  }
  else
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1ACE754C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB768C00);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1ACE75498();
    os_log_type_t v16 = sub_1ACE76BD8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v20 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      sub_1ACA3189C(a1, a2, &v20);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v15, v16, "No user defaults value for key '%s'", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v18, -1, -1);
      MEMORY[0x1AD11B340](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, 1, 1, a3);
  }
}

uint64_t NSUserDefaults.setCodable<A>(value:forKey:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v4 = v3;
  sub_1ACE74CF8();
  swift_allocObject();
  sub_1ACE74CE8();
  sub_1ACE74CC8();
  uint64_t v7 = sub_1ACE74CD8();
  unint64_t v9 = v8;
  id v10 = (void *)sub_1ACE74F68();
  uint64_t v11 = (void *)sub_1ACE76178();
  objc_msgSend(v4, sel_setValue_forKey_, v10, v11);

  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE754C8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB768C00);
  swift_bridgeObjectRetain_n();
  unint64_t v13 = sub_1ACE75498();
  os_log_type_t v14 = sub_1ACE76BD8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v16, a3, &v19);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v13, v14, "Stored value for key '%s'", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v17, -1, -1);
    MEMORY[0x1AD11B340](v15, -1, -1);
    sub_1ACA50850(v7, v9);

    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1ACA50850(v7, v9);

    return swift_release();
  }
}

uint64_t AbandonedStreamIssueIdentifier.issues(for:)(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = type metadata accessor for DownloadConsistency.Issue(0);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1ACE74F28();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACD5F3E4, 0, 0);
}

uint64_t sub_1ACD5F3E4()
{
  uint64_t v56 = v0;
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  char v4 = (void *)v0[3];
  uint64_t v5 = v4[8];
  uint64_t v6 = v4[9];
  __swift_project_boxed_opaque_existential_1(v4 + 5, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  sub_1ACE74E28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v51 = v2 + 8;
  v7(v1, v3);
  sub_1ACB43880();
  uint64_t v52 = v7;
  uint64_t v8 = v0[13];
  (*(void (**)(uint64_t, void, void))(v0[8] + 32))(v8, v0[12], v0[7]);
  uint64_t v9 = v4[8];
  uint64_t v10 = v4[9];
  __swift_project_boxed_opaque_existential_1(v4 + 5, v9);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v12 = (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v10 + 64))(v8, MEMORY[0x1E4FBC860], 0, v9, v10);
  uint64_t v13 = v0[13];
  uint64_t v14 = swift_task_alloc();
  *(void *)(v14 + 16) = v13;
  uint64_t v15 = sub_1ACA9DA30((void (*)(uint64_t))sub_1ACD5FCC0, v14, v12);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = v0[8];
    uint64_t v50 = v0[5];
    uint64_t v54 = v11;
    sub_1ACC83390(0, v16, 0);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v17 += 16;
    uint64_t v18 = v19;
    unint64_t v20 = v15 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v49 = *(void *)(v17 + 56);
    uint64_t v21 = v51;
    uint64_t v53 = v19;
    do
    {
      uint64_t v22 = v21;
      uint64_t v23 = v7;
      uint64_t v24 = v18;
      v18(v0[10], v20, v0[7]);
      if (qword_1EB768C48 != -1) {
        swift_once();
      }
      uint64_t v25 = v0[9];
      uint64_t v26 = v0[10];
      uint64_t v27 = v0[7];
      uint64_t v28 = sub_1ACE754C8();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EB768C28);
      v24(v25, v26, v27);
      uint64_t v29 = sub_1ACE75498();
      os_log_type_t v30 = sub_1ACE76BC8();
      BOOL v31 = os_log_type_enabled(v29, v30);
      uint64_t v32 = v0[9];
      uint64_t v33 = v0[7];
      if (v31)
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v55 = v35;
        *(_DWORD *)uint64_t v34 = 136315138;
        sub_1ACD5FCE0();
        uint64_t v36 = sub_1ACE777C8();
        *(void *)(v34 + 4) = sub_1ACA3189C(v36, v37, &v55);
        uint64_t v21 = v51;
        swift_bridgeObjectRelease();
        v52(v32, v33);
        _os_log_impl(&dword_1AC9D5000, v29, v30, "Identified unowned stream file: %s", (uint8_t *)v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v35, -1, -1);
        uint64_t v38 = v34;
        uint64_t v7 = v52;
        MEMORY[0x1AD11B340](v38, -1, -1);
      }
      else
      {
        uint64_t v7 = v23;
        uint64_t v21 = v22;
        v7(v0[9], v0[7]);
      }

      uint64_t v39 = v0[10];
      uint64_t v41 = v0[6];
      uint64_t v40 = v0[7];
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A980);
      v53(v41 + *(int *)(v42 + 48), v39, v40);
      sub_1ACE75108();
      swift_storeEnumTagMultiPayload();
      v7(v39, v40);
      uint64_t v43 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC83390(0, *(void *)(v54 + 16) + 1, 1);
        uint64_t v43 = v54;
      }
      unint64_t v45 = *(void *)(v43 + 16);
      unint64_t v44 = *(void *)(v43 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_1ACC83390(v44 > 1, v45 + 1, 1);
        uint64_t v43 = v54;
      }
      uint64_t v46 = v0[6];
      *(void *)(v43 + 16) = v45 + 1;
      sub_1ACB7AD14(v46, v43+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v45);
      v20 += v49;
      --v16;
      uint64_t v18 = v53;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x1E4FBC860];
  }
  v52(v0[13], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(uint64_t))v0[1];
  return v47(v43);
}

uint64_t sub_1ACD5FA08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1ACE74DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE74EC8();
  char v8 = sub_1ACE76348();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1ACE74EC8();
  if (v8)
  {
    unint64_t v11 = sub_1ACE5B3AC(1uLL, v9, v10);
    unint64_t v13 = v12;
    v19[1] = a2;
    uint64_t v15 = v14;
    uint64_t v24 = a1;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    unint64_t v20 = v11;
    unint64_t v21 = v13;
    uint64_t v22 = v15;
    uint64_t v23 = v17;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F276C0], v4);
    sub_1ACD28E48();
  }
  else
  {
    unint64_t v20 = v9;
    unint64_t v21 = v10;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F276C0], v4);
    sub_1ACA4F4AC();
  }
  sub_1ACE74F08();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD5FC2C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1ACB3B4F4;
  return AbandonedStreamIssueIdentifier.issues(for:)(a1);
}

uint64_t sub_1ACD5FCC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACD5FA08(*(void *)(v1 + 16), a1);
}

unint64_t sub_1ACD5FCE0()
{
  unint64_t result = qword_1EB771B10;
  if (!qword_1EB771B10)
  {
    sub_1ACE74F28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771B10);
  }
  return result;
}

ValueMetadata *type metadata accessor for AbandonedStreamIssueIdentifier()
{
  return &type metadata for AbandonedStreamIssueIdentifier;
}

uint64_t dispatch thunk of DownloadConsistencyIssueResolutionStrategy.resolution(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void __swiftcall ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)(Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *__return_ptr retstr, Swift::Bool isSubscriptionActive)
{
  char v3 = v2;
  uint64_t v4 = (char *)isSubscriptionActive;
  if (!objc_msgSend(self, sel_isRunningOnInternalOS))
  {
LABEL_9:
    char v20 = 2;
    uint64_t v12 = sub_1ACD602A0(&v20);
    if (v12)
    {
      if ((v3 & 1) != 0 && *(void *)(v12 + 56)) {
        goto LABEL_21;
      }
      swift_release();
    }
    char v19 = 1;
    uint64_t v13 = sub_1ACD602A0(&v19);
    if (v13)
    {
      if (*(void *)(v13 + 56))
      {
        char v14 = 1;
LABEL_22:
        *uint64_t v4 = v14;
        swift_bridgeObjectRetain();
        swift_release();
        return;
      }
      swift_release();
    }
    char v18 = 0;
    uint64_t v15 = sub_1ACD602A0(&v18);
    swift_release();
    if (!v15)
    {
      char v17 = 2;
      uint64_t v16 = sub_1ACD602A0(&v17);
      if (v16)
      {
        if (*(void *)(v16 + 56))
        {
LABEL_21:
          char v14 = 2;
          goto LABEL_22;
        }
        swift_release();
      }
    }
    *uint64_t v4 = 0;
    swift_bridgeObjectRetain();
    return;
  }
  id v5 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t v6 = (void *)sub_1ACE76178();
  id v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (!v7)
  {

    goto LABEL_9;
  }
  sub_1ACE761B8();

  if (qword_1EB76D4C0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D4A8);
  uint64_t v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76BE8();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v11 = 0;
    _os_log_impl(&dword_1AC9D5000, v9, v10, "Warning: Using debug option - override asset URL for playback.", v11, 2u);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }

  *uint64_t v4 = 0;
}

void __swiftcall ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *__return_ptr retstr, PodcastsFoundation::PriceType a2)
{
  uint64_t v4 = (char *)a2;
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)(v3 + OBJC_IVAR___MTServerPodcastEpisode_relationships);
  swift_beginAccess();
  if (*v6
    && (uint64_t v7 = *(void *)(*v6 + OBJC_IVAR____TtC18PodcastsFoundation27PodcastEpisodeRelationships_transcripts)) != 0
    && (uint64_t v8 = *(void *)(v7 + 16)) != 0)
  {
    char v20 = v4;
    uint64_t v9 = v7 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v10 = 0;
    uint64_t v18 = v8;
    uint64_t v19 = v5;
    while (1)
    {
      uint64_t v12 = v9 + 48 * v10;
      uint64_t v13 = *(void *)(v12 + 24);
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14) {
        break;
      }
LABEL_6:
      if (++v10 == v8)
      {
        char v11 = 2;
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v20;
        goto LABEL_16;
      }
    }
    char v21 = *(unsigned char *)(v12 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)&aStdq_9[8 * v5];
    while (*(void *)&aStdq_9[8 * *(char *)(v13 + v15 + 32)] != v16)
    {
      char v17 = sub_1ACE77848();
      swift_bridgeObjectRelease_n();
      if (v17) {
        goto LABEL_15;
      }
      if (v14 == ++v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v8 = v18;
        uint64_t v5 = v19;
        uint64_t v9 = v7 + 32;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v4 = v20;
    char v11 = v21;
  }
  else
  {
    char v11 = 2;
  }
LABEL_16:
  *uint64_t v4 = v11;
}

void __swiftcall ServerPodcastEpisode.determineBestTranscriptMetadata(isSubscriptionActive:)(Swift::tuple_ttmlToken_String_optional_snippet_String_optional_source_PodcastsFoundation_TranscriptSource_optional *__return_ptr retstr, Swift::Bool isSubscriptionActive)
{
  ServerPodcastEpisode.determineBestChannelMetaData(isSubscriptionActive:)((Swift::tuple_priceType_PodcastsFoundation_PriceType_assetUrl_String_optional_durationInMilliseconds_Double_optional *)retstr, (Swift::Bool)&v4);
  swift_bridgeObjectRelease();
  ServerPodcastEpisode.determineBestTranscriptMetadata(for:)(v3, (PodcastsFoundation::PriceType)isSubscriptionActive);
}

uint64_t sub_1ACD602A0(char *a1)
{
  unint64_t v2 = *(void *)(*(void *)(v1 + OBJC_IVAR___MTServerPodcastEpisode_attributes) + 72);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *a1;
  unint64_t v14 = MEMORY[0x1E4FBC860];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_4:
      if (v4 >= 1)
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = 0;
          while (1)
          {
            MEMORY[0x1AD119490](v5, v2);
            swift_bridgeObjectRetain();
            unint64_t v6 = sub_1ACE775B8();
            swift_bridgeObjectRelease();
            if (v6 <= 3)
            {
              if (*(void *)&aStdq_9[8 * v6] == *(void *)&aStdq_9[8 * v3])
              {
                swift_bridgeObjectRelease_n();
LABEL_13:
                sub_1ACE773A8();
                sub_1ACE773E8();
                sub_1ACE773F8();
                sub_1ACE773B8();
                goto LABEL_8;
              }
              char v7 = sub_1ACE77848();
              swift_bridgeObjectRelease_n();
              if (v7) {
                goto LABEL_13;
              }
            }
            swift_unknownObjectRelease();
LABEL_8:
            if (v4 == ++v5) {
              goto LABEL_23;
            }
          }
        }
        unint64_t v8 = v2 + 32;
        while (1)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v9 = sub_1ACE775B8();
          swift_bridgeObjectRelease();
          if (v9 <= 3)
          {
            if (*(void *)&aStdq_9[8 * v9] == *(void *)&aStdq_9[8 * v3])
            {
              swift_bridgeObjectRelease_n();
LABEL_21:
              sub_1ACE773A8();
              sub_1ACE773E8();
              sub_1ACE773F8();
              sub_1ACE773B8();
              goto LABEL_16;
            }
            char v10 = sub_1ACE77848();
            swift_bridgeObjectRelease_n();
            if (v10) {
              goto LABEL_21;
            }
          }
          swift_release();
LABEL_16:
          v8 += 8;
          if (!--v4) {
            goto LABEL_23;
          }
        }
      }
      __break(1u);
      goto LABEL_35;
    }
  }
LABEL_23:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v2 = v14;
  if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v14 + 16)) {
      goto LABEL_26;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1ACE77508();
  uint64_t result = swift_release();
  if (!v13)
  {
LABEL_31:
    swift_release();
    return 0;
  }
LABEL_26:
  if ((v14 & 0xC000000000000001) != 0)
  {
LABEL_35:
    uint64_t v12 = MEMORY[0x1AD119490](0, v2);
    goto LABEL_29;
  }
  if (*(void *)(v14 + 16))
  {
    uint64_t v12 = *(void *)(v14 + 32);
    swift_retain();
LABEL_29:
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t ServerPodcastEpisode.alternatePaidURL()@<X0>(uint64_t a1@<X8>)
{
  char v6 = 2;
  uint64_t v2 = sub_1ACD602A0(&v6);
  if (v2)
  {
    if (*(void *)(v2 + 56))
    {
      swift_bridgeObjectRetain();
      sub_1ACE74EF8();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
  }
  uint64_t v4 = sub_1ACE74F28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, 1, 1, v4);
}

void sub_1ACD606A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  id v8 = objc_msgSend(self, sel_sharedInstance);
  id v9 = objc_msgSend(v8, sel_privateQueueContext);

  char v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = v9;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = v7;
  v13[4] = sub_1ACD63260;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_26_3;
  char v11 = _Block_copy(v13);
  id v12 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlock_, v11);
  _Block_release(v11);
}

void sub_1ACD60808(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  sub_1ACE761B8();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v6 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  id v8 = objc_msgSend(self, sel_predicateForEpisodeStoreTrackId_, a1);
  objc_msgSend(v7, sel_setPredicate_, v8);

  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1ACE754C8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB76D598);
  char v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BD8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v49[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315651;
    sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, v49);
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 22) = 2081;
    uint64_t v14 = sub_1ACE777C8();
    sub_1ACA3189C(v14, v15, v49);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v10, v11, "%s Fetching episode for adamId: %{private,mask.hash}s.", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }

  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  unint64_t v16 = sub_1ACE76EE8();
  unint64_t v17 = v16;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (v39 < 2) {
        goto LABEL_11;
      }
      goto LABEL_8;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1ACE75498();
    os_log_type_t v41 = sub_1ACE76BE8();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v49[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315651;
      sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, v49);
      sub_1ACE76FF8();
      *(_WORD *)(v42 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v42 + 22) = 2081;
      uint64_t v44 = sub_1ACE777C8();
      sub_1ACA3189C(v44, v45, v49);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v40, v41, "%s No episode found for adamId: %{private,mask.hash}s.", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v43, -1, -1);
      MEMORY[0x1AD11B340](v42, -1, -1);
    }

    sub_1ACD63270();
    uint64_t v46 = (void *)swift_allocError();
    *uint64_t v47 = 0;
    a3(v46, 1);

    goto LABEL_26;
  }
  uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v18) {
    goto LABEL_23;
  }
  if (v18 < 2) {
    goto LABEL_11;
  }
LABEL_8:
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1ACE75498();
  os_log_type_t v20 = sub_1ACE76BE8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v49[0] = v48;
    *(_DWORD *)uint64_t v21 = 136316163;
    sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, v49);
    sub_1ACE76FF8();
    *(_WORD *)(v21 + 12) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v21 + 22) = 2081;
    uint64_t v22 = sub_1ACE777C8();
    sub_1ACA3189C(v22, v23, v49);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2160;
    sub_1ACE76FF8();
    *(_WORD *)(v21 + 42) = 2081;
    uint64_t v24 = sub_1ACE777C8();
    sub_1ACA3189C(v24, v25, v49);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v19, v20, "%s More than one episode (%{private,mask.hash}s) found for adamId: %{private,mask.hash}s.", (uint8_t *)v21, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v48, -1, -1);
    MEMORY[0x1AD11B340](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_11:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v26 = (id)MEMORY[0x1AD119490](0, v17);
    goto LABEL_14;
  }
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v26 = *(id *)(v17 + 32);
LABEL_14:
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    id v28 = sub_1ACC48AAC(v27);
    if (v28)
    {
      uint64_t v29 = v28;
      a3(v28, 0);
    }
    else
    {

      sub_1ACD63270();
      os_log_type_t v30 = (void *)swift_allocError();
      *BOOL v31 = 1;
      a3(v30, 1);
    }
    uint64_t v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76BD8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v49[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315651;
      sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, v49);
      sub_1ACE76FF8();
      *(_WORD *)(v34 + 12) = 2160;
      sub_1ACE76FF8();
      *(_WORD *)(v34 + 22) = 2081;
      uint64_t v36 = sub_1ACE777C8();
      sub_1ACA3189C(v36, v37, v49);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v32, v33, "%s Finished fetching episode for adamId: %{private,mask.hash}s.", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v35, -1, -1);
      MEMORY[0x1AD11B340](v34, -1, -1);
    }

LABEL_26:
    return;
  }
  __break(1u);
}

uint64_t sub_1ACD61400(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  id v6 = objc_msgSend(self, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_privateQueueContext);

  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  void v8[3] = a2;
  v8[4] = v5;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v7;
  v9[3] = sub_1ACD6320C;
  v9[4] = v8;
  v9[5] = v5;
  v13[4] = sub_1ACD63420;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_20_2;
  char v10 = _Block_copy(v13);
  swift_retain();
  id v11 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);

  return swift_release();
}

void sub_1ACD615A0(unint64_t a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  if ((a2 & 1) == 0)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    unint64_t v5 = a1 >> 62;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1ACE77508();
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          goto LABEL_32;
        }
        for (uint64_t i = 0; i != v6; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v8 = (id)MEMORY[0x1AD119490](i, a1);
          }
          else {
            id v8 = *(id *)(a1 + 8 * i + 32);
          }
          uint64_t v9 = v8;
          id v10 = sub_1ACC48AAC(v8);

          if (v10)
          {
            MEMORY[0x1AD118700]();
            if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1ACE765C8();
            }
            sub_1ACE76628();
            sub_1ACE76598();
          }
        }
        sub_1ACAC1E88((id)a1, 0);
        uint64_t v6 = v19;
        if (!v5) {
          goto LABEL_18;
        }
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v6) {
        goto LABEL_4;
      }
    }
    sub_1ACAC1E88((id)a1, 0);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (!v5)
    {
LABEL_18:
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_22;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1ACE77508();
    sub_1ACAC1E88((id)a1, 0);
LABEL_22:
    if ((unint64_t)v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1ACE77508();
      swift_bridgeObjectRelease();
      if (v12 != v18)
      {
LABEL_24:
        if (qword_1EB76D5B8 == -1)
        {
LABEL_25:
          uint64_t v13 = sub_1ACE754C8();
          __swift_project_value_buffer(v13, (uint64_t)qword_1EB76D598);
          uint64_t v14 = sub_1ACE75498();
          os_log_type_t v15 = sub_1ACE76BE8();
          if (os_log_type_enabled(v14, v15))
          {
            unint64_t v16 = (uint8_t *)swift_slowAlloc();
            uint64_t v17 = swift_slowAlloc();
            uint64_t v19 = v17;
            *(_DWORD *)unint64_t v16 = 136315138;
            sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, &v19);
            sub_1ACE76FF8();
            swift_arrayDestroy();
            MEMORY[0x1AD11B340](v17, -1, -1);
            MEMORY[0x1AD11B340](v16, -1, -1);
          }

          goto LABEL_28;
        }
LABEL_32:
        swift_once();
        goto LABEL_25;
      }
    }
    else if (v12 != *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
LABEL_28:
    a3(v6, 0);
    swift_bridgeObjectRelease();
    return;
  }
  id v11 = (id)a1;
  a3(a1, 1);
  sub_1ACAC1E88((id)a1, 1);
}

uint64_t sub_1ACD61944(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  id v6 = objc_msgSend(self, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_privateQueueContext);

  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  void v8[3] = a2;
  v8[4] = v5;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v7;
  v9[3] = sub_1ACD62DFC;
  v9[4] = v8;
  v9[5] = v5;
  v13[4] = sub_1ACD62E10;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1ACA6DA9C;
  v13[3] = &block_descriptor_71;
  id v10 = _Block_copy(v13);
  swift_retain();
  id v11 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlock_, v10);
  _Block_release(v10);

  return swift_release();
}

void sub_1ACD61AE4(unint64_t a1, char a2, void (*a3)(int64_t, void), uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE74F28();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v55 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v51 = (char *)&v48 - v15;
  if ((a2 & 1) == 0)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      int64_t v16 = sub_1ACE77508();
    }
    else
    {
      int64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v54 = (id *)a1;
    uint64_t v49 = a4;
    uint64_t v50 = a3;
    unint64_t v48 = a1 >> 62;
    if (v16)
    {
      if (v16 < 1)
      {
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v17 = 0;
      unint64_t v18 = a1 & 0xC000000000000001;
      uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if (v18) {
          id v20 = (id)MEMORY[0x1AD119490](v17, a1);
        }
        else {
          id v20 = *(id *)(a1 + 8 * v17 + 32);
        }
        uint64_t v21 = v20;
        id v22 = objc_msgSend(v20, sel_assetURL, v48, v49, v50);
        if (v22)
        {
          unint64_t v23 = v22;
          uint64_t v24 = sub_1ACE761B8();
          uint64_t v26 = v25;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1ACA41EA0(0, v19[2] + 1, 1, v19);
          }
          unint64_t v28 = v19[2];
          unint64_t v27 = v19[3];
          if (v28 >= v27 >> 1) {
            uint64_t v19 = sub_1ACA41EA0((void *)(v27 > 1), v28 + 1, 1, v19);
          }
          void v19[2] = v28 + 1;
          uint64_t v29 = &v19[2 * v28];
          v29[4] = v24;
          v29[5] = v26;
          a1 = (unint64_t)v54;
        }
        else
        {
        }
        ++v17;
      }
      while (v16 != v17);
    }
    else
    {
      uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    }
    sub_1ACAC1E88((id)a1, 0);
    uint64_t v31 = v19[2];
    if (v31)
    {
      uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      os_log_type_t v33 = (void (**)(char *, char *, uint64_t))(v52 + 32);
      swift_bridgeObjectRetain();
      uint64_t v34 = v19 + 5;
      int64_t v16 = MEMORY[0x1E4FBC860];
      uint64_t v35 = v53;
      do
      {
        swift_bridgeObjectRetain();
        sub_1ACE74EF8();
        swift_bridgeObjectRelease();
        if ((*v32)(v11, 1, v35) == 1)
        {
          sub_1ACA7FA64((uint64_t)v11);
        }
        else
        {
          uint64_t v36 = *v33;
          unint64_t v37 = v51;
          (*v33)(v51, v11, v35);
          v36(v55, v37, v35);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v16 = sub_1ACA42368(0, *(void *)(v16 + 16) + 1, 1, v16);
          }
          unint64_t v39 = *(void *)(v16 + 16);
          unint64_t v38 = *(void *)(v16 + 24);
          if (v39 >= v38 >> 1) {
            int64_t v16 = sub_1ACA42368(v38 > 1, v39 + 1, 1, v16);
          }
          *(void *)(v16 + 16) = v39 + 1;
          unint64_t v40 = v16
              + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))
              + *(void *)(v52 + 72) * v39;
          uint64_t v35 = v53;
          v36((char *)v40, v55, v53);
        }
        v34 += 2;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      int64_t v16 = MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = v50;
    os_log_type_t v41 = v54;
    if (v48)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1ACE77508();
      sub_1ACAC1E88(v41, 0);
    }
    else
    {
      uint64_t v42 = *(void *)(((unint64_t)v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v42 == *(void *)(v16 + 16)) {
      goto LABEL_42;
    }
    if (qword_1EB76D5B8 == -1)
    {
LABEL_39:
      uint64_t v43 = sub_1ACE754C8();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EB76D598);
      uint64_t v44 = sub_1ACE75498();
      os_log_type_t v45 = sub_1ACE76BE8();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        uint64_t v57 = v47;
        *(_DWORD *)uint64_t v46 = 136315138;
        uint64_t v56 = sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, &v57);
        sub_1ACE76FF8();
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v47, -1, -1);
        MEMORY[0x1AD11B340](v46, -1, -1);
      }

LABEL_42:
      v4(v16, 0);
      swift_bridgeObjectRelease();
      return;
    }
LABEL_45:
    swift_once();
    goto LABEL_39;
  }
  os_log_type_t v30 = (id *)(id)a1;
  a3(a1, 1);
  sub_1ACAC1E88((id)a1, 1);
}

void sub_1ACD620F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB76D598);
  id v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76C08();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, aBlock);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v7, v8, "%s Fetching migration data for legacy FairPlay keys.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }

  id v11 = objc_msgSend(self, sel_sharedInstance);
  id v12 = objc_msgSend(v11, sel_privateQueueContext);

  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = v5;
  aBlock[4] = (uint64_t)sub_1ACD62E20;
  aBlock[5] = (uint64_t)v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1ACA6DA9C;
  aBlock[3] = (uint64_t)&block_descriptor_10_5;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v14);
  _Block_release(v14);
}

void sub_1ACD623A0(void *a1, void (*a2)(uint64_t, void))
{
  sub_1ACE761B8();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v5 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_1ACA50D4C(0, &qword_1EB772598);
  unint64_t v7 = sub_1ACE76EE8();
  id v8 = a1;
  uint64_t v9 = sub_1ACD62E2C(v7, v8);
  swift_bridgeObjectRelease();

  a2(v9, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1ACD626D0(uint64_t a1, void *a2)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE84820;
  uint64_t v5 = sub_1ACE761B8();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1ACADC3A8();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, a1);
  *(void *)(v4 + 96) = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768F50);
  *(void *)(v4 + 104) = sub_1ACBDF258();
  *(void *)(v4 + 72) = v8;
  uint64_t v9 = (void *)sub_1ACE76B88();
  id v10 = objc_msgSend(a2, sel_objectInEntity_predicate_, @"MTEpisode", v9);
  if (!v10) {
    goto LABEL_7;
  }
  id v11 = v10;
  self;
  id v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12)
  {

    return 0;
  }
  id v13 = objc_msgSend(v12, sel_assetURL);
  if (!v13)
  {

LABEL_7:
    return 0;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_1ACE761B8();

  return v15;
}

void sub_1ACD62888(uint64_t a1, void (*a2)(void))
{
  sub_1ACE761B8();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v4 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  id v6 = objc_msgSend(self, sel_predicateForDownloadedFairPlayEpisodes);
  objc_msgSend(v5, sel_setPredicate_, v6);

  if (qword_1EB76D5B8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE754C8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB76D598);
  id v8 = sub_1ACE75498();
  os_log_type_t v9 = sub_1ACE76BD8();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = v11;
    *(_DWORD *)id v10 = 136315138;
    sub_1ACA3189C(0xD000000000000038, 0x80000001ACED08A0, &v12);
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v8, v9, "%s Fetching all downloaded HLS episodes.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v11, -1, -1);
    MEMORY[0x1AD11B340](v10, -1, -1);
  }

  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  sub_1ACE76EE8();
  a2();
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CoreDataFairPlayEpisodeDataFetcher()
{
  return self;
}

void sub_1ACD62D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1ACD62D58(uint64_t a1, uint64_t a2)
{
  return sub_1ACD61400(a1, a2);
}

void sub_1ACD62D7C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1ACD62DA0(uint64_t a1, uint64_t a2)
{
  return sub_1ACD61944(a1, a2);
}

uint64_t sub_1ACD62DC4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACD62DFC(unint64_t a1, char a2)
{
  sub_1ACD61AE4(a1, a2 & 1, *(void (**)(int64_t, void))(v2 + 16), *(void *)(v2 + 24));
}

void sub_1ACD62E10()
{
  sub_1ACD62888(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_1ACD62E20()
{
  sub_1ACD623A0(*(void **)(v0 + 16), *(void (**)(uint64_t, void))(v0 + 24));
}

uint64_t sub_1ACD62E2C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v48 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FairPlayMigrationData(0);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v7);
  os_log_type_t v9 = (void *)((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    if (!v10) {
      return v11;
    }
    uint64_t v49 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1ACC83448(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0) {
      break;
    }
    v38[1] = v3;
    unint64_t v39 = a1;
    uint64_t v3 = 0;
    unint64_t v40 = a1 & 0xC000000000000001;
    uint64_t v41 = v10;
    uint64_t v11 = v49;
    id v13 = &selRef_rangeOfCharacterFromSet_options_range_;
    while (v10 != v3)
    {
      if (v40) {
        id v14 = (id)MEMORY[0x1AD119490](v3, a1);
      }
      else {
        id v14 = *(id *)(a1 + 8 * v3 + 32);
      }
      uint64_t v15 = v14;
      id v16 = [v14 v13[465]];
      id v17 = objc_msgSend(v15, sel_data);
      id v47 = v16;
      if (v17)
      {
        unint64_t v18 = v17;
        uint64_t v19 = sub_1ACE74F88();
        unint64_t v45 = v20;
        uint64_t v46 = v19;
      }
      else
      {
        unint64_t v45 = 0xF000000000000000;
        uint64_t v46 = 0;
      }
      id v21 = [v15 v13[465]];
      uint64_t v22 = sub_1ACD626D0((uint64_t)v21, v44);
      uint64_t v24 = v23;
      objc_msgSend(v15, sel_expirationDate);
      uint64_t v25 = v48;
      sub_1ACE74FA8();
      uint64_t v26 = sub_1ACE750A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
      id v27 = objc_msgSend(v15, sel_keyUri);
      if (v27)
      {
        unint64_t v28 = v27;
        uint64_t v29 = sub_1ACE761B8();
        uint64_t v31 = v30;
      }
      else
      {
        uint64_t v29 = 0;
        uint64_t v31 = 0;
      }
      a1 = v39;
      uint64_t v32 = (uint64_t)v48;
      uint64_t v33 = v46;
      void *v9 = v47;
      v9[1] = v33;
      void v9[2] = v45;
      v9[3] = v22;
      v9[4] = v24;
      uint64_t v34 = v43;
      sub_1ACA909B4(v32, (uint64_t)v9 + *(int *)(v43 + 28));

      uint64_t v35 = (void *)((char *)v9 + *(int *)(v34 + 32));
      *uint64_t v35 = v29;
      v35[1] = v31;
      uint64_t v49 = v11;
      unint64_t v37 = *(void *)(v11 + 16);
      unint64_t v36 = *(void *)(v11 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1ACC83448(v36 > 1, v37 + 1, 1);
        uint64_t v11 = v49;
      }
      ++v3;
      *(void *)(v11 + 16) = v37 + 1;
      sub_1ACD631A8((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v37);
      uint64_t v10 = v41;
      id v13 = &selRef_rangeOfCharacterFromSet_options_range_;
      if (v41 == v3) {
        return v11;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACD631A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FairPlayMigrationData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ACD6320C(unint64_t a1, char a2)
{
  sub_1ACD615A0(a1, a2 & 1, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1ACD63220()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACD63260()
{
  sub_1ACD60808(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

unint64_t sub_1ACD63270()
{
  unint64_t result = qword_1E99F5898;
  if (!qword_1E99F5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5898);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoreDataFairPlayEpisodeDataFetcher.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD63390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDataFairPlayEpisodeDataFetcher.Error()
{
  return &type metadata for CoreDataFairPlayEpisodeDataFetcher.Error;
}

unint64_t sub_1ACD633CC()
{
  unint64_t result = qword_1E99F58A0;
  if (!qword_1E99F58A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F58A0);
  }
  return result;
}

uint64_t static MTCategory.predicateForFavoritedCategories()()
{
  return sub_1ACD635D0();
}

id static MTCategory.predicateForFollowedShowCategoriesForCategoriesInLibrary()()
{
  uint64_t v0 = (void *)sub_1ACD635D0();
  uint64_t v1 = (void *)_s18PodcastsFoundation10MTCategoryC46predicateForPrimaryCategoriesFromFollowedShowsSo11NSPredicateCyFZ_0();
  id v2 = objc_msgSend(v0, sel_AND_, v1);

  return v2;
}

uint64_t static MTCategory.predicateForCategory(withAdamID:)(uint64_t a1)
{
  sub_1ACA9FDB0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE84820;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v3 = sub_1ACADC3A8();
  *(void *)(v2 + 32) = 0x44496D616461;
  *(void *)(v2 + 40) = 0xE600000000000000;
  uint64_t v4 = MEMORY[0x1E4FBC598];
  *(void *)(v2 + 96) = MEMORY[0x1E4FBC538];
  *(void *)(v2 + 104) = v4;
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 72) = a1;
  return sub_1ACE76B88();
}

uint64_t static MTCategory.predicateForNonFavoritedCategories()()
{
  return sub_1ACD635D0();
}

uint64_t sub_1ACD635A8()
{
  return sub_1ACD635D0();
}

uint64_t sub_1ACD635BC()
{
  return sub_1ACD635D0();
}

uint64_t sub_1ACD635D0()
{
  sub_1ACA9FDB0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84470;
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v2 = sub_1ACADC3A8();
  *(void *)(v0 + 32) = 0x7473657265746E69;
  *(void *)(v0 + 40) = 0xE800000000000000;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = 0x7473657265746E69;
  *(void *)(v0 + 80) = 0xE800000000000000;
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  strcpy((char *)(v0 + 112), "interestValue");
  *(_WORD *)(v0 + 126) = -4864;
  return sub_1ACE76B88();
}

uint64_t _s18PodcastsFoundation10MTCategoryC46predicateForPrimaryCategoriesFromFollowedShowsSo11NSPredicateCyFZ_0()
{
  sub_1ACA9FDB0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ACE84470;
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v2 = sub_1ACADC3A8();
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 32) = 0x7374736163646F70;
  *(void *)(v0 + 40) = 0xE800000000000000;
  uint64_t v3 = sub_1ACE761B8();
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v4;
  uint64_t v5 = sub_1ACE761B8();
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 112) = v5;
  *(void *)(v0 + 120) = v6;
  return sub_1ACE76B88();
}

uint64_t _s18PodcastsFoundation10MTCategoryC47predicateForCategoriesWithRelationshipToPodcast10withAdamIDSo11NSPredicateCs5Int64V_tFZ_0(uint64_t a1)
{
  sub_1ACA9FDB0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ACE84470;
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v4 = sub_1ACADC3A8();
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = 0x7374736163646F70;
  *(void *)(v2 + 40) = 0xE800000000000000;
  uint64_t v5 = sub_1ACE761B8();
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = v4;
  uint64_t v6 = MEMORY[0x1E4FBC1C8];
  *(void *)(v2 + 72) = v5;
  *(void *)(v2 + 80) = v7;
  uint64_t v8 = MEMORY[0x1E4FBC240];
  *(void *)(v2 + 136) = v6;
  *(void *)(v2 + 144) = v8;
  *(void *)(v2 + 112) = a1;
  return sub_1ACE76B88();
}

uint64_t PodcastStateMachine.__allocating_init(adamId:initialState:rules:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PodcastStateMachine();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 88) = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + 24) = 0;
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = 0;
  sub_1ACA8F4F4(a2, v6 + 48);
  *(void *)(v6 + 96) = a3;
  return v6;
}

uint64_t PodcastStateMachine.__allocating_init(uuid:initialState:rules:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PodcastStateMachine();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 88) = MEMORY[0x1E4FBC860];
  *(void *)(v8 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  *(void *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 24) = 1;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  sub_1ACA8F4F4(a3, v8 + 48);
  *(void *)(v8 + 96) = a4;
  return v8;
}

uint64_t PodcastState.dictionaryKey.getter()
{
  sub_1ACA8F4F4(v0, (uint64_t)v4);
  uint64_t v1 = 0x6E776F6E6B6E75;
  uint64_t v2 = 0x6465646461;
  if (v5 == 1) {
    uint64_t v2 = 0x676E69646461;
  }
  if (v5 != 2) {
    uint64_t v1 = v2;
  }
  if (v5) {
    return v1;
  }
  else {
    return 0x656C6261646461;
  }
}

uint64_t PodcastState.isSubscribed.getter()
{
  sub_1ACA8F4F4(v0, (uint64_t)v2);
  return (v3 > 2) & v2[0];
}

uint64_t PodcastState.hash(into:)()
{
  sub_1ACA8F4F4(v0, (uint64_t)v2);
  if (v3 <= 2) {
    return sub_1ACE77B28();
  }
  sub_1ACE77B28();
  sub_1ACE77B38();
  sub_1ACE76108();
  sub_1ACE77B38();
  return sub_1ACE77B58();
}

uint64_t PodcastState.hashValue.getter()
{
  sub_1ACE77B18();
  sub_1ACA8F4F4(v0, (uint64_t)v2);
  if (v3 > 2)
  {
    sub_1ACE77B28();
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  else
  {
    sub_1ACE77B28();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACD63BE8()
{
  sub_1ACA8F4F4(v0, (uint64_t)v2);
  return PodcastState.hashValue.getter();
}

uint64_t sub_1ACD63C20()
{
  sub_1ACA8F4F4(v0, (uint64_t)v2);
  return PodcastState.hash(into:)();
}

uint64_t sub_1ACD63C60()
{
  unint64_t v1 = *(void *)(v0 + 16);
  sub_1ACE77B18();
  sub_1ACE77B28();
  if (v1 > 2)
  {
    sub_1ACE77B38();
    sub_1ACE76108();
    sub_1ACE77B38();
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

BOOL sub_1ACD63D20(uint64_t a1, uint64_t a2)
{
  sub_1ACA8F4F4(a1, (uint64_t)v4);
  sub_1ACA8F4F4(a2, (uint64_t)v5);
  return _s18PodcastsFoundation12PodcastStateO2eeoiySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)v5);
}

uint64_t PodcastStateMachine.adamId.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PodcastStateMachine.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1ACD63DA8@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 104), sel_lock);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  unint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  uint64_t v8 = *(void **)(v1 + 104);
  sub_1ACA50D88(v3, v4, v5);
  id result = objc_msgSend(v8, sel_unlock);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

uint64_t PodcastStateMachine.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD63E58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1ACD63EB8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACD63EF0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ACD63F38())()
{
  return j__swift_endAccess;
}

uint64_t PodcastStateMachine.__allocating_init(adamId:uuid:initialState:rules:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  char v11 = a2 & 1;
  uint64_t v12 = swift_allocObject();
  PodcastStateMachine.init(adamId:uuid:initialState:rules:)(a1, v11, a3, a4, a5, a6);
  return v12;
}

uint64_t type metadata accessor for PodcastStateMachine()
{
  return self;
}

uint64_t PodcastStateMachine.init(adamId:uuid:initialState:rules:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  *(void *)(v6 + 88) = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  if ((a2 & 1) != 0 && !a4)
  {
    sub_1ACD65AFC(a5, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
    uint64_t result = sub_1ACE77498();
    __break(1u);
  }
  else
  {
    *(void *)(v6 + 16) = a1;
    *(unsigned char *)(v6 + 24) = a2 & 1;
    *(void *)(v6 + 32) = a3;
    *(void *)(v6 + 40) = a4;
    sub_1ACA8F4F4((uint64_t)a5, v6 + 48);
    *(void *)(v6 + 96) = a6;
    return v6;
  }
  return result;
}

uint64_t sub_1ACD64140(void *a1)
{
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 104), sel_lock);
  sub_1ACD641BC(v1, a1, &v4);
  objc_msgSend(*(id *)(v1 + 104), sel_unlock);
  return v4;
}

uint64_t sub_1ACD641BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = sub_1ACE754C8();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v64 = v8;
  uint64_t v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v10)
  {
    case 0:
      uint64_t result = sub_1ACA8F4F4((uint64_t)a2, (uint64_t)v77);
      if (v79) {
        break;
      }
      goto LABEL_18;
    case 1:
      uint64_t result = sub_1ACA8F4F4((uint64_t)a2, (uint64_t)v77);
      if (v79 == 1) {
        goto LABEL_18;
      }
      break;
    case 2:
      uint64_t result = sub_1ACA8F4F4((uint64_t)a2, (uint64_t)v77);
      if (v79 != 2) {
        break;
      }
LABEL_18:
      *a3 = 1;
      return result;
    default:
      uint64_t v12 = *(void *)(a1 + 72);
      uint64_t v85 = *(unsigned char **)(a1 + 80);
      uint64_t v14 = *(void *)(a1 + 48);
      uint64_t v13 = *(void *)(a1 + 56);
      uint64_t result = sub_1ACA8F4F4((uint64_t)a2, (uint64_t)v77);
      if (v79 >= 3 && ((v14 & 1) == 0) != v77[0])
      {
        int v15 = v80;
        id v16 = v81;
        if (v10 != v79 || v13 != v78)
        {
          LODWORD(v61) = v80;
          uint64_t result = sub_1ACE77848();
          if ((result & 1) == 0) {
            break;
          }
          int v15 = v61;
        }
        if (((v12 ^ v15) & 1) == 0 && v85 == v16) {
          goto LABEL_18;
        }
      }
      break;
  }
  uint64_t v17 = *(void *)(a1 + 96);
  sub_1ACA8F4F4((uint64_t)a2, (uint64_t)&v75);
  unint64_t v18 = 0xE700000000000000;
  uint64_t v19 = 0x6E776F6E6B6E75;
  unint64_t v20 = 0xE500000000000000;
  uint64_t v21 = 0x6465646461;
  if (v76 == 1)
  {
    uint64_t v21 = 0x676E69646461;
    unint64_t v20 = 0xE600000000000000;
  }
  if (v76 != 2)
  {
    uint64_t v19 = v21;
    unint64_t v18 = v20;
  }
  if (v76) {
    uint64_t v22 = v19;
  }
  else {
    uint64_t v22 = 0x656C6261646461;
  }
  if (v76) {
    uint64_t v23 = v18;
  }
  else {
    uint64_t v23 = 0xE700000000000000;
  }
  if (*(void *)(v17 + 16) && (uint64_t v24 = sub_1ACA657FC(v22, v23), (v25 & 1) != 0))
  {
    sub_1ACA3E158(*(void *)(v17 + 56) + 40 * v24, (uint64_t)&v82);
  }
  else
  {
    uint64_t v84 = 0;
    long long v82 = 0u;
    long long v83 = 0u;
  }
  uint64_t v85 = a3;
  uint64_t v61 = v3;
  swift_bridgeObjectRelease();
  if (!*((void *)&v83 + 1))
  {
    sub_1ACD65A9C((uint64_t)&v82);
    goto LABEL_37;
  }
  sub_1ACA8F4F4((uint64_t)&v82, (uint64_t)v72);
  uint64_t v26 = v73;
  uint64_t v27 = v74;
  __swift_project_boxed_opaque_existential_1(v72, v73);
  sub_1ACA8F4F4(a1 + 48, (uint64_t)&v82);
  unint64_t v28 = *(uint64_t (**)(long long *, void *, uint64_t, uint64_t))(v27 + 8);
  sub_1ACD65AFC(&v82, (void (*)(void, void, void, void, void))sub_1ACA50D88);
  char v29 = v28(&v82, a2, v26, v27);
  sub_1ACD65AFC(&v82, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
  if (v29)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
LABEL_37:
    uint64_t v30 = *(void *)(a1 + 48);
    uint64_t v31 = *(void *)(a1 + 56);
    unint64_t v32 = *(void *)(a1 + 64);
    sub_1ACA8F4F4((uint64_t)a2, a1 + 48);
    sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D88);
    sub_1ACA50D9C(v30, v31, v32);
    uint64_t result = sub_1ACD64D64();
    unsigned char *v85 = 1;
    return result;
  }
  if (qword_1E99EFFD8 != -1) {
    swift_once();
  }
  uint64_t v33 = v64;
  uint64_t v34 = __swift_project_value_buffer(v64, (uint64_t)qword_1E99F2DE8);
  swift_beginAccess();
  unint64_t v36 = v62;
  uint64_t v35 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v34, v33);
  sub_1ACA3E158((uint64_t)v72, (uint64_t)v71);
  swift_retain_n();
  sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D88);
  swift_retain();
  sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D88);
  unint64_t v37 = sub_1ACE75498();
  int v60 = sub_1ACE76BD8();
  BOOL v38 = os_log_type_enabled(v37, (os_log_type_t)v60);
  unint64_t v39 = v85;
  if (!v38)
  {
    swift_release_n();
    sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
    sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v33);
LABEL_47:
    *unint64_t v39 = 0;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
  }
  os_log_t v59 = v37;
  uint64_t v40 = swift_slowAlloc();
  uint64_t v41 = swift_slowAlloc();
  uint64_t v70 = v41;
  *(_DWORD *)uint64_t v40 = 136315906;
  char v42 = *(unsigned char *)(a1 + 24);
  uint64_t v58 = v41;
  if ((v42 & 1) == 0)
  {
    uint64_t DynamicType = *(void *)(a1 + 16);
    sub_1ACA55E4C();
    uint64_t v44 = sub_1ACE770B8();
    unint64_t v43 = v45;
    goto LABEL_46;
  }
  unint64_t v43 = *(void *)(a1 + 40);
  if (v43)
  {
    uint64_t v44 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
LABEL_46:
    uint64_t DynamicType = sub_1ACA3189C(v44, v43, &v70);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v46 = *(void *)(a1 + 56);
    unint64_t v47 = *(void *)(a1 + 64);
    uint64_t v48 = *(void *)(a1 + 72);
    uint64_t v49 = *(void *)(a1 + 80);
    uint64_t DynamicType = *(void *)(a1 + 48);
    uint64_t v66 = v46;
    unint64_t v67 = v47;
    uint64_t v68 = v48;
    uint64_t v69 = v49;
    sub_1ACA50D88(DynamicType, v46, v47);
    uint64_t v50 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v50, v51, &v70);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v40 + 22) = 2080;
    sub_1ACA8F4F4((uint64_t)a2, (uint64_t)&DynamicType);
    sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D88);
    uint64_t v52 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v52, v53, &v70);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
    sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
    *(_WORD *)(v40 + 32) = 2080;
    __swift_project_boxed_opaque_existential_1(v71, v71[3]);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v66 = v71[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F58B8);
    uint64_t v54 = sub_1ACE76228();
    uint64_t DynamicType = sub_1ACA3189C(v54, v55, &v70);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
    os_log_t v56 = v59;
    _os_log_impl(&dword_1AC9D5000, v59, (os_log_type_t)v60, "Denied state change for %s: %s -> %s, rule: %s", (uint8_t *)v40, 0x2Au);
    uint64_t v57 = v58;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v57, -1, -1);
    MEMORY[0x1AD11B340](v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    unint64_t v39 = v85;
    goto LABEL_47;
  }
  sub_1ACD65AFC(a2, (void (*)(void, void, void, void, void))sub_1ACA50D9C);
  swift_release_n();
  uint64_t result = sub_1ACE77498();
  __break(1u);
  return result;
}

id sub_1ACD64A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  objc_msgSend(*(id *)(v3 + 104), sel_lock);
  swift_unknownObjectWeakInit();
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  sub_1ACC2B780((uint64_t)v13, (uint64_t)v12);
  uint64_t v6 = (void *)(v3 + 88);
  swift_beginAccess();
  uint64_t v7 = *(void **)(v3 + 88);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 88) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1ACA440F4(0, v7[2] + 1, 1, (unint64_t)v7);
    void *v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_1ACA440F4((void *)(v9 > 1), v10 + 1, 1, (unint64_t)v7);
    void *v6 = v7;
  }
  v7[2] = v10 + 1;
  sub_1ACC2B810((uint64_t)v12, (uint64_t)&v7[3 * v10 + 4]);
  swift_endAccess();
  sub_1ACC2B84C((uint64_t)v13);
  return objc_msgSend(*(id *)(v3 + 104), sel_unlock);
}

id sub_1ACD64B70(uint64_t a1)
{
  uint64_t v3 = (id *)(v1 + 104);
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 104), sel_lock);
  unsigned __int8 v4 = (void *)(v1 + 88);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(v5 + 16);
  id result = (id)swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    *unsigned __int8 v4 = v6;
    swift_bridgeObjectRelease();
    return objc_msgSend(*v3, sel_unlock);
  }
  uint64_t v17 = (id *)(v1 + 104);
  unint64_t v9 = 0;
  uint64_t v10 = v5 + 32;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  while (v9 < *(void *)(v5 + 16))
  {
    sub_1ACC2B780(v10, (uint64_t)v19);
    uint64_t v12 = MEMORY[0x1AD11B470](v19);
    swift_unknownObjectRelease();
    sub_1ACC2B780((uint64_t)v19, (uint64_t)v18);
    if (v12)
    {
      uint64_t v13 = MEMORY[0x1AD11B470](v18);
      if (!v13)
      {
        sub_1ACC2B84C((uint64_t)v18);
LABEL_12:
        sub_1ACC2B810((uint64_t)v19, (uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1ACC83484(0, *(void *)(v11 + 16) + 1, 1);
        }
        uint64_t v11 = v20;
        unint64_t v16 = *(void *)(v20 + 16);
        unint64_t v15 = *(void *)(v20 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1ACC83484(v15 > 1, v16 + 1, 1);
          uint64_t v11 = v20;
        }
        *(void *)(v11 + 16) = v16 + 1;
        id result = (id)sub_1ACC2B810((uint64_t)v18, v11 + 24 * v16 + 32);
        goto LABEL_5;
      }
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      sub_1ACC2B84C((uint64_t)v18);
      if (v14 != a1) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1ACC2B84C((uint64_t)v18);
    }
    id result = (id)sub_1ACC2B84C((uint64_t)v19);
LABEL_5:
    ++v9;
    v10 += 24;
    if (v7 == v9)
    {
      uint64_t v6 = v20;
      uint64_t v3 = v17;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACD64D64()
{
  uint64_t v1 = sub_1ACE75DC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned __int8 v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA51E1C();
  unint64_t v9 = (void *)sub_1ACE76CF8();
  aBlock[4] = sub_1ACD65A4C;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_72;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACD65A54((unint64_t *)&qword_1EB7734E0, 255, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA55D7C();
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ACD65000(uint64_t a1)
{
  swift_beginAccess();
  objc_msgSend(*(id *)(a1 + 104), sel_lock);
  sub_1ACD650C8(a1);
  objc_msgSend(*(id *)(a1 + 104), sel_unlock);
  type metadata accessor for PodcastStateMachine();
  sub_1ACD65A54(qword_1EB76B910, v2, (void (*)(uint64_t))type metadata accessor for PodcastStateMachine);
  sub_1ACE75868();
  sub_1ACE75968();
  return swift_release();
}

uint64_t sub_1ACD650C8(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 88);
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease();
    *uint64_t v2 = v10;
    return swift_bridgeObjectRelease();
  }
  uint64_t v5 = v3 + 32;
  swift_bridgeObjectRetain();
  do
  {
    sub_1ACC2B780(v5, (uint64_t)v19);
    uint64_t v6 = MEMORY[0x1AD11B470](v19);
    swift_unknownObjectRelease();
    if (v6)
    {
      uint64_t v7 = v20;
      swift_retain();
      v7(a1);
      swift_release();
    }
    sub_1ACC2B84C((uint64_t)v19);
    v5 += 24;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  uint64_t v8 = *v2;
  uint64_t v9 = *(void *)(*v2 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_19;
  }
  unint64_t v12 = 0;
  uint64_t v13 = v8 + 32;
  while (v12 < *(void *)(v8 + 16))
  {
    sub_1ACC2B780(v13, (uint64_t)v19);
    uint64_t v14 = MEMORY[0x1AD11B470](v19);
    swift_unknownObjectRelease();
    if (v14)
    {
      sub_1ACC2B810((uint64_t)v19, (uint64_t)v18);
      uint64_t v15 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ACC83484(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v21;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1ACC83484(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v21;
      }
      *(void *)(v15 + 16) = v17 + 1;
      uint64_t result = sub_1ACC2B810((uint64_t)v18, v15 + 24 * v17 + 32);
    }
    else
    {
      uint64_t result = sub_1ACC2B84C((uint64_t)v19);
    }
    ++v12;
    v13 += 24;
    if (v9 == v12)
    {
      uint64_t v10 = v21;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t PodcastStateMachine.deinit()
{
  swift_bridgeObjectRelease();
  sub_1ACA50D9C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PodcastStateMachine.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1ACA50D9C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACD6537C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ACD653C0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PodcastStateMachine();
  uint64_t result = sub_1ACE75868();
  *a1 = result;
  return result;
}

BOOL _s18PodcastsFoundation12PodcastStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1ACA8F4F4(a1, (uint64_t)v17);
  uint64_t v3 = v19;
  switch(v19)
  {
    case 2:
      sub_1ACA8F4F4(a2, (uint64_t)v12);
      return v14 == 2;
    case 1:
      sub_1ACA8F4F4(a2, (uint64_t)v12);
      return v14 == 1;
    case 0:
      sub_1ACA8F4F4(a2, (uint64_t)v12);
      return !v14;
  }
  int v5 = v17[0];
  uint64_t v6 = v18;
  int v7 = v20;
  uint64_t v8 = v21;
  sub_1ACA8F4F4(a2, (uint64_t)v12);
  if (v14 < 3 || v5 != v12[0]) {
    return 0;
  }
  int v9 = v15;
  uint64_t v10 = v16;
  if (v6 == v13 && v3 == v14)
  {
    if (v7 != v15) {
      return 0;
    }
    return v8 == v10;
  }
  char v11 = sub_1ACE77848();
  BOOL result = 0;
  if ((v11 & 1) != 0 && ((v7 ^ v9) & 1) == 0) {
    return v8 == v10;
  }
  return result;
}

unint64_t sub_1ACD6553C()
{
  unint64_t result = qword_1E99F58A8;
  if (!qword_1E99F58A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F58A8);
  }
  return result;
}

uint64_t sub_1ACD65590@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 104);
  return swift_unknownObjectRetain();
}

unint64_t destroy for PodcastState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PodcastState(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PodcastState(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 2);
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  return a1;
}

uint64_t assignWithTake for PodcastState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PodcastState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

double sub_1ACD65870(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastState()
{
  return &type metadata for PodcastState;
}

uint64_t method lookup function for PodcastStateMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PodcastStateMachine);
}

uint64_t dispatch thunk of PodcastStateMachine.currentState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PodcastStateMachine.lock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PodcastStateMachine.lock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PodcastStateMachine.lock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of PodcastStateMachine.__allocating_init(adamId:uuid:initialState:rules:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 + 32);
  int v7 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, _OWORD *))(v5 + 216);
  long long v8 = *(_OWORD *)(a5 + 16);
  v10[0] = *(_OWORD *)a5;
  v10[1] = v8;
  uint64_t v11 = v6;
  return v7(a1, a2 & 1, a3, a4, v10);
}

uint64_t dispatch thunk of PodcastStateMachine.transition(to:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 224);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  uint64_t v7 = v2;
  return v3(v6) & 1;
}

uint64_t dispatch thunk of PodcastStateMachine.addStateTransitionObserver(_:action:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of PodcastStateMachine.removeStateTransitionActions(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

ValueMetadata *_s18PodcastsFoundation32StateMachineChangeObserverActionVMa_0()
{
  return &type metadata for StateMachineChangeObserverAction;
}

uint64_t sub_1ACD65A4C()
{
  return sub_1ACD65000(v0);
}

uint64_t sub_1ACD65A54(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACD65A9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F58B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1ACD65AFC(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t static MTEpisode.sortDescriptorsForUngroupedStation(orderedBy:)(int a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  switch(a1)
  {
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1ACE84830;
      uint64_t v24 = sub_1ACE761B8();
      uint64_t v27 = v4;
      sub_1ACE762C8();
      sub_1ACE761B8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      id v5 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v6 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(v5, sel_initWithKey_ascending_, v6, 0, v24, v27);

      *(void *)(v3 + 32) = v7;
      goto LABEL_9;
    case 1:
      id v8 = objc_msgSend(self, sel_sortDescriptorsForPubDateAscending_, 0);
      goto LABEL_5;
    case 3:
      id v8 = objc_msgSend(self, sel_sortDescriptorsForPubDateAscending_, 1);
LABEL_5:
      id v9 = v8;
      sub_1ACC53EB4();
      uint64_t v10 = sub_1ACE76578();

      return v10;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1ACE8F1F0;
      uint64_t v25 = sub_1ACE761B8();
      uint64_t v28 = v11;
      sub_1ACE762C8();
      sub_1ACE761B8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      id v12 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v13 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 1, v25, v28);

      *(void *)(v3 + 32) = v14;
      sub_1ACE761B8();
      id v15 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v16 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 1);
      goto LABEL_8;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1ACE8F1F0;
      uint64_t v26 = sub_1ACE761B8();
      uint64_t v29 = v18;
      sub_1ACE762C8();
      sub_1ACE761B8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      id v19 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      unsigned __int8 v20 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v21 = objc_msgSend(v19, sel_initWithKey_ascending_, v20, 0, v26, v29);

      *(void *)(v3 + 32) = v21;
      sub_1ACE761B8();
      id v22 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      uint64_t v16 = (void *)sub_1ACE76178();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v22, sel_initWithKey_ascending_, v16, 0);
LABEL_8:
      id v23 = v17;

      *(void *)(v3 + 40) = v23;
LABEL_9:
      sub_1ACE76598();
      uint64_t result = v3;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t EpisodeMediaType.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6F69647561;
  }
  if (a1 == 1) {
    return 0x6F65646976;
  }
  return 0x6C616E7265747865;
}

uint64_t sub_1ACD65F80(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6F65646976;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6C616E7265747865;
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0x6F69647561;
  }
  if (v2) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  uint64_t v8 = 0x6F65646976;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x6C616E7265747865;
    unint64_t v3 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6F69647561;
  }
  if (*a2) {
    unint64_t v10 = v3;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  if (v6 == v9 && v7 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1ACD66078()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD66114()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD6619C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD66234@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation16EpisodeMediaTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACD66264(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6F65646976;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6C616E7265747865;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6F69647561;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t EpisodeMediaType.init(from:)(void *a1)
{
  return sub_1ACD66458(a1);
}

uint64_t sub_1ACD662D4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1ACD66458(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t EpisodeMediaType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t sub_1ACD663F0(void *a1)
{
  return EpisodeMediaType.encode(to:)(a1);
}

uint64_t _s18PodcastsFoundation16EpisodeMediaTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1ACD66458(void *a1)
{
  uint64_t v3 = sub_1ACE77318();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v6 = (char *)&v18[-4] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    uint64_t v8 = sub_1ACE77858();
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    BOOL v13 = v8 == 0x6F69647561 && v9 == 0xE500000000000000;
    if (v13 || (sub_1ACE77848() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
LABEL_11:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      return v7;
    }
    if (v11 == 0x6F65646976 && v12 == 0xE500000000000000 || (sub_1ACE77848() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 1;
      goto LABEL_11;
    }
    if (v11 == 0x6C616E7265747865 && v12 == 0xE800000000000000
      || (sub_1ACE77848() & 1) != 0
      || v11 == 0x746E656D75636F64 && v12 == 0xE800000000000000
      || (sub_1ACE77848() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 2;
      goto LABEL_11;
    }
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACE77C28();
    strcpy((char *)v18, "Unknown case ");
    v18[7] = -4864;
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE77308();
    uint64_t v7 = sub_1ACE77328();
    swift_allocError();
    id v15 = v14;
    uint64_t v16 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F0EC8) + 48);
    *id v15 = &type metadata for EpisodeMediaType;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v16, v6, v3);
    (*(void (**)(void *, void, uint64_t))(*(void *)(v7 - 8) + 104))(v15, *MEMORY[0x1E4FBBA80], v7);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

unint64_t sub_1ACD66848()
{
  unint64_t result = qword_1E99F58C0;
  if (!qword_1E99F58C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F58C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EpisodeMediaType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD66968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeMediaType()
{
  return &type metadata for EpisodeMediaType;
}

uint64_t sub_1ACD669A0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  BOOL v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = a1(v14);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v4;
  aBlock[4] = a3;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = a4;
  id v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  return swift_release();
}

uint64_t sub_1ACD66C64(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1ACE758F8();
  LOBYTE(a3) = a3(a1);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0) {
    return sub_1ACE758E8();
  }
  return result;
}

BOOL sub_1ACD66CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v7 = *(void *)(updated - 8);
  MEMORY[0x1F4188790](updated - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 40);
  if (*(void *)(v10 + 16) && (uint64_t v11 = sub_1ACA6A1FC(a2), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  sub_1ACAC5F3C(a3, (uint64_t)v9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1ACA4239C(0, *(void *)(v13 + 16) + 1, 1, v13);
  }
  unint64_t v15 = *(void *)(v13 + 16);
  unint64_t v14 = *(void *)(v13 + 24);
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1ACA4239C(v14 > 1, v15 + 1, 1, v13);
  }
  *(void *)(v13 + 16) = v15 + 1;
  sub_1ACAC5FFC((uint64_t)v9, v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0x8000000000000000;
  sub_1ACD0D5A4(v13, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 40) = v20;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1ACD669A0(sub_1ACDF5520, (uint64_t)&unk_1F039B098, (uint64_t)sub_1ACD6D674, (uint64_t)&block_descriptor_88_1);
  uint64_t v17 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease();
  return v17 == 1;
}

BOOL sub_1ACD66F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v9 = *(void *)(updated - 8);
  MEMORY[0x1F4188790](updated - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 40);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1ACA657FC(a2, a3);
    if (v14)
    {
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  sub_1ACAC5F3C(a4, (uint64_t)v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_1ACA4239C(0, *(void *)(v15 + 16) + 1, 1, v15);
  }
  unint64_t v17 = *(void *)(v15 + 16);
  unint64_t v16 = *(void *)(v15 + 24);
  if (v17 >= v16 >> 1) {
    uint64_t v15 = sub_1ACA4239C(v16 > 1, v17 + 1, 1, v15);
  }
  *(void *)(v15 + 16) = v17 + 1;
  sub_1ACAC5FFC((uint64_t)v11, v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v17);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0x8000000000000000;
  sub_1ACD0F204(v15, a2, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 40) = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1ACD669A0(sub_1ACDF59C0, (uint64_t)&unk_1F039AFA8, (uint64_t)sub_1ACD6D5AC, (uint64_t)&block_descriptor_68_2);
  uint64_t v19 = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  return v19 == 1;
}

uint64_t sub_1ACD671B8(uint64_t a1, void *a2, int a3)
{
  int v22 = a3;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = a1;
  uint64_t v13 = *(os_unfair_lock_s **)(v3 + 32);
  uint64_t v27 = v3;
  uint64_t v28 = &v30;
  uint64_t v24 = sub_1ACD6D650;
  uint64_t v25 = &v26;
  char v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1ACD6D934(aBlock);
  os_unfair_lock_unlock(v14);
  uint64_t v15 = aBlock[0];
  sub_1ACA51E1C();
  unint64_t v16 = (void *)sub_1ACE76CF8();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  *(void *)(v17 + 24) = a2;
  char v18 = v22 & 1;
  *(unsigned char *)(v17 + 32) = v22 & 1;
  aBlock[4] = sub_1ACD6D95C;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_82;
  uint64_t v19 = _Block_copy(aBlock);
  sub_1ACAC5D58(a2, v18);
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v9, v19);
  _Block_release(v19);

  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v23);
}

uint64_t sub_1ACD674EC(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v24 = a4;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_1ACE75E48();
  uint64_t v12 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  char v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  uint64_t v15 = *(os_unfair_lock_s **)(v4 + 32);
  uint64_t v29 = v4;
  uint64_t v30 = v32;
  char v26 = sub_1ACD6D614;
  uint64_t v27 = &v28;
  unint64_t v16 = v15 + 4;
  os_unfair_lock_lock(v15 + 4);
  sub_1ACD6D630(aBlock);
  os_unfair_lock_unlock(v16);
  uint64_t v17 = aBlock[0];
  sub_1ACA51E1C();
  char v18 = (void *)sub_1ACE76CF8();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = a3;
  char v20 = v24 & 1;
  *(unsigned char *)(v19 + 32) = v24 & 1;
  aBlock[4] = sub_1ACAC5D4C;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_74_1;
  uint64_t v21 = _Block_copy(aBlock);
  sub_1ACAC5D58(a3, v20);
  swift_release();
  sub_1ACE75E08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v14, v11, v21);
  _Block_release(v21);

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v25);
}

uint64_t sub_1ACD67824(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v28 = result;
  uint64_t v29 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v31 = v3;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(result + 48) + 24 * v10;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    int v18 = *(unsigned __int8 *)(v15 + 16);
    sub_1ACE77B18();
    sub_1ACE77B28();
    if (v18 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
    }
    else
    {
      sub_1ACE77B58();
    }
    uint64_t v19 = sub_1ACE77B78();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_43:
      sub_1ACA91B68(v16, v17, v18);
      return 0;
    }
    uint64_t v22 = ~v20;
    uint64_t v23 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v25 = (uint64_t *)(v23 + 24 * v21);
      uint64_t v26 = *v25;
      if (*((unsigned char *)v25 + 16) == 1) {
        break;
      }
      if (v26 == v16) {
        char v24 = v18;
      }
      else {
        char v24 = 1;
      }
      if ((v24 & 1) == 0) {
        goto LABEL_40;
      }
LABEL_31:
      unint64_t v21 = (v21 + 1) & v22;
      if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_43;
      }
    }
    if ((v18 & 1) == 0) {
      goto LABEL_31;
    }
    BOOL v27 = v26 == v16 && v25[1] == v17;
    if (!v27 && (sub_1ACE77848() & 1) == 0) {
      goto LABEL_31;
    }
    sub_1ACA91B68(v16, v17, 1);
LABEL_40:
    uint64_t result = v28;
    int64_t v3 = v31;
    if (v7) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v11 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v11);
  int64_t v13 = v3 + 1;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v11 + 1;
  if (v11 + 1 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v11 + 2;
  if (v11 + 2 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v14 = v11 + 3;
  if (v14 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v14;
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v31 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v30) {
      return 1;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1ACD67AE4(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = a1 + 56;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(a1 + 56);
    int64_t v29 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = a2 + 56;
    while (1)
    {
LABEL_7:
      if (v8)
      {
        unint64_t v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v11 = v10 | (v4 << 6);
      }
      else
      {
        int64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_58;
        }
        if (v12 >= v29) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v12);
        ++v4;
        if (!v13)
        {
          int64_t v4 = v12 + 1;
          if (v12 + 1 >= v29) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13)
          {
            int64_t v4 = v12 + 2;
            if (v12 + 2 >= v29) {
              return 1;
            }
            unint64_t v13 = *(void *)(v5 + 8 * v4);
            if (!v13)
            {
              int64_t v4 = v12 + 3;
              if (v12 + 3 >= v29) {
                return 1;
              }
              unint64_t v13 = *(void *)(v5 + 8 * v4);
              if (!v13)
              {
                int64_t v14 = v12 + 4;
                if (v14 >= v29) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v5 + 8 * v14);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v4 = v14 + 1;
                    if (__OFADD__(v14, 1)) {
                      break;
                    }
                    if (v4 >= v29) {
                      return 1;
                    }
                    unint64_t v13 = *(void *)(v5 + 8 * v4);
                    ++v14;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_58:
                  __break(1u);
                  JUMPOUT(0x1ACD67D84);
                }
                int64_t v4 = v14;
              }
            }
          }
        }
LABEL_24:
        unint64_t v8 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
      }
      uint64_t v15 = *(void *)(a1 + 48) + 16 * v11;
      unint64_t v16 = *(void *)v15;
      char v17 = *(unsigned char *)(v15 + 8);
      sub_1ACE77B18();
      sub_1ACE77B28();
      uint64_t v18 = sub_1ACE77B78();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        return 0;
      }
      uint64_t v21 = ~v19;
      if (v16 > 3) {
        char v22 = v17;
      }
      else {
        char v22 = 0;
      }
      if (v16 == 3) {
        char v23 = v17;
      }
      else {
        char v23 = 0;
      }
      if (v16 == 2) {
        char v24 = v17;
      }
      else {
        char v24 = 0;
      }
      if (v16 == 1) {
        char v25 = v17;
      }
      else {
        char v25 = 0;
      }
      if (v16) {
        char v26 = 0;
      }
      else {
        char v26 = v17;
      }
      while (1)
      {
        uint64_t v27 = *(void *)(a2 + 48) + 16 * v20;
        if (*(unsigned char *)(v27 + 8) == 1)
        {
          switch(*(void *)v27)
          {
            case 1:
              if (v25) {
                goto LABEL_7;
              }
              goto LABEL_42;
            case 2:
              if (v24) {
                goto LABEL_7;
              }
              goto LABEL_42;
            case 3:
              if (v23) {
                goto LABEL_7;
              }
              goto LABEL_42;
            case 4:
              if (v22) {
                goto LABEL_7;
              }
              goto LABEL_42;
            default:
              if (v26) {
                goto LABEL_7;
              }
              goto LABEL_42;
          }
        }
        if ((v17 & 1) == 0) {
          break;
        }
LABEL_42:
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          return 0;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1ACD67D98(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_34;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    uint64_t v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    uint64_t result = sub_1ACE77B08();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_1ACD67F74(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    int64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    uint64_t v18 = sub_1ACE77B78();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    char v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1ACE77848() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1ACE77848() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1ACD68218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1ACD68224(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1ACD6824C@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_requests) + 16);
  return swift_retain();
}

char *RSSFeedUpdater.__allocating_init(ctx:ingesterProvider:externalFeedDownloader:)(void *a1, uint64_t a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  return RSSFeedUpdater.init(ctx:ingesterProvider:externalFeedDownloader:)(a1, a2, a3);
}

char *RSSFeedUpdater.init(ctx:ingesterProvider:externalFeedDownloader:)(void *a1, uint64_t a2, void *a3)
{
  id v61 = a3;
  uint64_t v62 = a2;
  unint64_t v55 = a1;
  uint64_t v4 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE76CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[0] = OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue;
  unint64_t v14 = sub_1ACA51E1C();
  int64_t v15 = *(void (**)(void))(v11 + 104);
  unsigned int v51 = *MEMORY[0x1E4FBCC68];
  uint64_t v57 = v10;
  uint64_t v52 = v11 + 104;
  uint64_t v50 = (void (*)(char *, void, uint64_t))v15;
  v15(v13);
  uint64_t v16 = v3;
  sub_1ACE75E08();
  *(void *)&long long aBlock = MEMORY[0x1E4FBC860];
  uint64_t v17 = sub_1ACA8F6D8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  uint64_t v19 = sub_1ACAC5D64((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  uint64_t v54 = v18;
  v49[1] = v19;
  uint64_t v60 = v4;
  uint64_t v56 = v17;
  uint64_t v20 = v49[0];
  sub_1ACE770E8();
  unint64_t v53 = v9;
  unint64_t v58 = v14;
  os_log_t v59 = v6;
  *(void *)&v3[v20] = sub_1ACE76D28();
  uint64_t v21 = OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_requests;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76C860);
  swift_allocObject();
  *(void *)&v16[v21] = sub_1ACB2E428();
  if (objc_msgSend(self, sel_isRunningOnHomepod))
  {
    if (qword_1E99EFE70 != -1) {
      swift_once();
    }
    char v22 = &qword_1E99F16E0;
  }
  else
  {
    if (qword_1EB76CBB8 != -1) {
      swift_once();
    }
    char v22 = &qword_1EB76CBB0;
  }
  BOOL v23 = (void *)*v22;
  uint64_t v24 = *(void *)(*v22 + OBJC_IVAR____TtC18PodcastsFoundation29FeedManagerLocalConfiguration_concurrentRSSUpdateLimit);
  uint64_t v25 = v62;
  sub_1ACA3E158(v62, (uint64_t)&aBlock);
  uint64_t v26 = *(void **)&v3[v20];
  type metadata accessor for RSSFeedUpdater.Queue();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = MEMORY[0x1E4FBC868];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  v27[13] = MEMORY[0x1E4FBC860];
  v27[14] = v28;
  v27[15] = 0;
  v27[16] = 0;
  void v27[2] = 0x7565755164656546;
  unint64_t v27[3] = 0xE900000000000065;
  _DWORD v27[4] = v24;
  int64_t v30 = v55;
  v27[5] = v55;
  sub_1ACA3AABC(&aBlock, (uint64_t)(v27 + 6));
  id v31 = v61;
  long long v27[11] = v61;
  v27[12] = v26;
  *(void *)&v16[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_feedQueue] = v27;
  *(void *)&v16[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_ctx] = v30;
  sub_1ACA3E158(v25, (uint64_t)&v16[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_ingesterProvider]);
  *(void *)&v16[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_externalFeedDownloader] = v31;
  v50(v13, v51, v57);
  id v32 = v30;
  swift_unknownObjectRetain_n();
  id v33 = v26;
  id v34 = v32;
  id v35 = v33;
  id v36 = v23;
  sub_1ACE75E08();
  *(void *)&long long aBlock = v29;
  sub_1ACE770E8();
  *(void *)&v16[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue] = sub_1ACE76D28();

  unint64_t v37 = (objc_class *)type metadata accessor for RSSFeedUpdater();
  v68.receiver = v16;
  v68.super_class = v37;
  BOOL v38 = (char *)objc_msgSendSuper2(&v68, sel_init);
  objc_msgSend(v31, sel_setDelegate_, v38);
  dispatch_suspend(*(dispatch_object_t *)&v38[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue]);
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1ACE754C8();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EB76D4C8);
  uint64_t v40 = sub_1ACE75498();
  os_log_type_t v41 = sub_1ACE76C08();
  if (os_log_type_enabled(v40, v41))
  {
    char v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v42 = 0;
    _os_log_impl(&dword_1AC9D5000, v40, v41, "Restoring background download tasks.", v42, 2u);
    MEMORY[0x1AD11B340](v42, -1, -1);
  }

  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v66 = sub_1ACD68B54;
  uint64_t v67 = v43;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v64 = sub_1ACA6DA9C;
  unint64_t v65 = &block_descriptor_73;
  uint64_t v44 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v61, sel_restoreBackgroundDownloadTasksWithCompletion_, v44);

  _Block_release(v44);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v62);
  uint64_t v45 = *(void *)&v38[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_feedQueue];
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v47 = *(void *)(v45 + 120);
  *(void *)(v45 + 120) = sub_1ACD68BCC;
  *(void *)(v45 + 128) = v46;
  sub_1ACA76F34(v47);
  return v38;
}

uint64_t type metadata accessor for RSSFeedUpdater.Queue()
{
  return self;
}

uint64_t type metadata accessor for RSSFeedUpdater()
{
  return self;
}

uint64_t sub_1ACD689F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1ACD68A28(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB76D4C8);
  int64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76C08();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1AC9D5000, v3, v4, "Finished restoring background download tasks.", v5, 2u);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }

  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](v1);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = objc_retain(*(id *)(v6
                                       + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue));

    dispatch_resume(v8);
  }
}

void sub_1ACD68B54()
{
  sub_1ACD68A28(v0);
}

void sub_1ACD68B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_1ACD69068(a1, a2);
  }
}

void sub_1ACD68BCC(uint64_t a1, uint64_t a2)
{
  sub_1ACD68B5C(a1, a2, v2);
}

void sub_1ACD68BD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75E48();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v11 = *(void *)(updated - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](updated - 8);
  uint64_t v13 = sub_1ACE74DD8();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    v27[1] = *(void *)&v2[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_pendingRestorationQueue];
    sub_1ACAC5F3C(a1, (uint64_t)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    sub_1ACAC5FFC((uint64_t)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
    aBlock[4] = sub_1ACD6C784;
    void aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_7_2;
    uint64_t v19 = _Block_copy(aBlock);
    uint64_t v20 = v2;
    sub_1ACE75E08();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v9, v6, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    swift_release();
  }
  else
  {
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D4C8);
    char v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1AC9D5000, v22, v23, "The feedUrl is an empty string. Cannot proceed with feed update.", v24, 2u);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }

    sub_1ACB18F1C();
    uint64_t v25 = (void *)swift_allocError();
    *uint64_t v26 = 7;
    FeedUpdateRequest.failRequest(_:)(v25);
  }
}

uint64_t sub_1ACD69068(uint64_t a1, uint64_t a2)
{
  int64_t v3 = (void *)a2;
  uint64_t v54 = a1;
  sub_1ACBE79EC(a2, (uint64_t)&v57);
  id v52 = v57;
  uint64_t updated = (void *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1F4188790](updated);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = sub_1ACE75EC8();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = v2;
  unint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue);
  *unint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t, __n128))(v11 + 104))(v14, *MEMORY[0x1E4FBCBF0], v10, v12);
  id v16 = v15;
  char v17 = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  sub_1ACBE79EC((uint64_t)v3, (uint64_t)v58);
  if (v59)
  {
    unint64_t v15 = v3;
    int64_t v3 = (void *)v58[0];
    id v18 = v52;
    if (qword_1EB769568 == -1)
    {
LABEL_4:
      uint64_t v19 = sub_1ACE754C8();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EB76D4C8);
      sub_1ACAC5F3C(v54, (uint64_t)v6);
      uint64_t v20 = sub_1ACE75498();
      os_log_type_t v21 = sub_1ACE76C08();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        unsigned int v51 = v3;
        uint64_t v23 = v22;
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 141558275;
        uint64_t v55 = 1752392040;
        uint64_t v56 = v24;
        sub_1ACE76FF8();
        *(_WORD *)(v23 + 12) = 2081;
        uint64_t v25 = sub_1ACE74DD8();
        uint64_t v55 = sub_1ACA3189C(v25, v26, &v56);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        sub_1ACAC5FA0((uint64_t)v6);
        _os_log_impl(&dword_1AC9D5000, v20, v21, "Update %{private,mask.hash}s failed", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v24, -1, -1);
        uint64_t v27 = v23;
        int64_t v3 = v51;
        MEMORY[0x1AD11B340](v27, -1, -1);
      }
      else
      {
        sub_1ACAC5FA0((uint64_t)v6);
      }

      uint64_t v42 = sub_1ACE74DD8();
      uint64_t v44 = v43;
      id v45 = v52;
      sub_1ACD674EC(v42, v44, v3, 1);
      sub_1ACD6D5DC((uint64_t)v15);
      sub_1ACD6D5DC((uint64_t)v15);
      return swift_bridgeObjectRelease();
    }
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v29 = v58[0];
  uint64_t v28 = v58[1];
  uint64_t v30 = v58[2];
  uint64_t v31 = v58[3];
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1ACE754C8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB76D4C8);
  sub_1ACAC5F3C(v54, (uint64_t)v9);
  id v33 = sub_1ACE75498();
  os_log_type_t v34 = sub_1ACE76C08();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    id v52 = updated;
    uint64_t v36 = v35;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v50 = v31;
    uint64_t v38 = v37;
    *(_DWORD *)uint64_t v36 = 141558275;
    uint64_t v55 = 1752392040;
    uint64_t v56 = v37;
    unsigned int v51 = (void *)v30;
    sub_1ACE76FF8();
    *(_WORD *)(v36 + 12) = 2081;
    uint64_t v39 = sub_1ACE74DD8();
    uint64_t v55 = sub_1ACA3189C(v39, v40, &v56);
    uint64_t v30 = (uint64_t)v51;
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACAC5FA0((uint64_t)v9);
    _os_log_impl(&dword_1AC9D5000, v33, v34, "Update %{private,mask.hash}s completed", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    uint64_t v41 = v38;
    uint64_t v31 = v50;
    MEMORY[0x1AD11B340](v41, -1, -1);
    MEMORY[0x1AD11B340](v36, -1, -1);
  }
  else
  {
    sub_1ACAC5FA0((uint64_t)v9);
  }

  sub_1ACD6C984(v29, v28, v30, v31, v54);
  uint64_t v46 = sub_1ACE74DD8();
  sub_1ACD674EC(v46, v47, 0, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ACD69638(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = sub_1ACE75EC8();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, unint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4FBCBF0], v4, v6);
  id v10 = v9;
  LOBYTE(v9) = sub_1ACE75EF8();
  __n128 v12 = *(void (**)(void *, unint64_t))(v5 + 8);
  uint64_t v11 = v5 + 8;
  v12(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  type metadata accessor for FeedUpdateRequest();
  uint64_t v11 = sub_1ACE74DD8();
  unint64_t v4 = v13;
  v25[0] = v11;
  v25[1] = v13;
  MEMORY[0x1F4188790](v11);
  v24[-4] = v14;
  v24[-3] = v25;
  v24[-2] = a1;
  MEMORY[0x1F4188790](v15);
  v24[-2] = sub_1ACD6D590;
  v24[-1] = v16;
  id v18 = v17 + 4;
  os_unfair_lock_lock(v17 + 4);
  sub_1ACB3A750(v24);
  os_unfair_lock_unlock(v18);
  if (v24[0])
  {
    swift_bridgeObjectRelease();
    sub_1ACD6B1B8(a1);
    return;
  }
  if (qword_1EB769568 != -1) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v19 = sub_1ACE754C8();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB76D4C8);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1ACE75498();
  os_log_type_t v21 = sub_1ACE76C08();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v25[0] = v23;
    *(_DWORD *)uint64_t v22 = 141558275;
    v24[0] = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v22 + 12) = 2081;
    swift_bridgeObjectRetain();
    v24[0] = sub_1ACA3189C(v11, v4, v25);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v20, v21, "There is already an rss feed update request for %{private,mask.hash}s. Dropping this redundant request.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v23, -1, -1);
    MEMORY[0x1AD11B340](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id RSSFeedUpdater.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RSSFeedUpdater.init()()
{
}

id RSSFeedUpdater.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RSSFeedUpdater();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1ACD69B2C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1ACE74DD8();
  uint64_t v16 = sub_1ACD6BE80(v14, v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_1ACBE3470(a3, a4, a5, v29);
    swift_release();
  }
  else
  {
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1ACE754C8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB76D4C8);
    uint64_t v18 = v11;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v20 = v10;
    v19(v13, a2, v10);
    os_log_type_t v21 = sub_1ACE75498();
    os_log_type_t v22 = sub_1ACE76BE8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = v13;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 141558275;
      uint64_t v30 = 1752392040;
      uint64_t v31 = v25;
      sub_1ACE76FF8();
      *(_WORD *)(v24 + 12) = 2081;
      uint64_t v26 = sub_1ACE74DD8();
      uint64_t v30 = sub_1ACA3189C(v26, v27, &v31);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v20);
      _os_log_impl(&dword_1AC9D5000, v21, v22, "Got a feed downloaded completion but the job does not exist in the queue for feedUrl: %{private,mask.hash}s. Cannot continue.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v25, -1, -1);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
    }
  }
}

uint64_t RSSFeedUpdater.didRestoreFeedUrlTask(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1ACE75DC8();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E48();
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = MEMORY[0x1F4188790](v9);
  v18[1] = *(void *)&v1[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(void *)(v14 + ((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  aBlock[4] = sub_1ACD6D268;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_13_0;
  unint64_t v15 = _Block_copy(aBlock);
  uint64_t v16 = v1;
  sub_1ACE75E08();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
  return swift_release();
}

uint64_t sub_1ACD6A350(uint64_t a1)
{
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1F4188790](updated);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  uint64_t v5 = sub_1ACE74DD8();
  unint64_t v7 = v6;
  if (qword_1EB769568 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB76D4C8);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1ACE75498();
  os_log_type_t v10 = sub_1ACE76C08();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v38 = v5;
    uint64_t v12 = v11;
    uint64_t v37 = swift_slowAlloc();
    v41[0] = v37;
    *(_DWORD *)uint64_t v12 = 141558275;
    uint64_t v40 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v12 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1ACA3189C(v38, v7, v41);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v9, v10, "Restored background task for %{private,mask.hash}s.", (uint8_t *)v12, 0x16u);
    uint64_t v13 = v37;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    uint64_t v14 = v12;
    uint64_t v5 = v38;
    MEMORY[0x1AD11B340](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v15 = &v4[updated[5]];
  uint64_t v16 = sub_1ACE74F28();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, v39, v16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(&v4[updated[6]], 1, 1, v16);
  uint64_t v18 = updated[18];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB770760);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = 0;
  *(void *)&v4[v18] = v19;
  uint64_t v20 = sub_1ACE75108();
  *(void *)&v4[updated[7]] = 0;
  uint64_t v21 = &v4[updated[8]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v4[updated[9]] = 0;
  v4[updated[10]] = 0;
  v4[updated[11]] = 0;
  *(void *)&v4[updated[12]] = 0;
  v4[updated[13]] = 0;
  uint64_t v22 = &v4[updated[14]];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = &v4[updated[15]];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  uint64_t v24 = &v4[updated[16]];
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v25 = &v4[updated[17]];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v41[0] = v5;
  v41[1] = v7;
  MEMORY[0x1F4188790](v20);
  *(&v36 - 4) = v26;
  *(&v36 - 3) = (uint64_t)v41;
  *(&v36 - 2) = (uint64_t)v4;
  MEMORY[0x1F4188790](v27);
  *(&v36 - 2) = (uint64_t)sub_1ACD6D590;
  *(&v36 - 1) = v28;
  uint64_t v30 = v29 + 4;
  os_unfair_lock_lock(v29 + 4);
  sub_1ACB3AEC4(&v40);
  os_unfair_lock_unlock(v30);
  if (v40)
  {
    swift_bridgeObjectRelease();
    sub_1ACD6C19C((uint64_t)v4);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1ACE75498();
    os_log_type_t v32 = sub_1ACE76C08();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v41[0] = v34;
      *(_DWORD *)uint64_t v33 = 141558275;
      uint64_t v40 = 1752392040;
      sub_1ACE76FF8();
      *(_WORD *)(v33 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1ACA3189C(v5, v7, v41);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v31, v32, "Tried to insert an rss feed update request that was restored from background for %{private,mask.hash}s but there was already one running. Dropping this redundant request.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v34, -1, -1);
      MEMORY[0x1AD11B340](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  return sub_1ACAC5FA0((uint64_t)v4);
}

uint64_t RSSFeedUpdater.perform(onFeedProcessingQueue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1ACE75DC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75E48();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_1ACB5C124;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_19_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t (*RSSFeedUpdater.sessionCompletionHandler.getter())()
{
  uint64_t result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_externalFeedDownloader), sel_sessionCompletionHandler);
  if (result)
  {
    *(void *)(swift_allocObject() + 16) = result;
    return sub_1ACD6D32C;
  }
  return result;
}

void RSSFeedUpdater.sessionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_externalFeedDownloader);
  if (a1)
  {
    void v6[4] = a1;
    v6[5] = a2;
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 1107296256;
    _OWORD v6[2] = sub_1ACA6DA9C;
    v6[3] = &block_descriptor_25;
    uint64_t v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v5 = 0;
  }
  objc_msgSend(v4, sel_setSessionCompletionHandler_, v5);
  sub_1ACA76F34(a1);
  _Block_release(v5);
}

void *sub_1ACD6B01C@<X0>(id *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result = objc_msgSend(*a1, sel_sessionCompletionHandler);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    uint64_t result = (void *)swift_allocObject();
    result[2] = sub_1ACD6D908;
    result[3] = v5;
    uint64_t v6 = sub_1ACB5C124;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())result;
  return result;
}

void sub_1ACD6B0C4(uint64_t a1, void **a2)
{
  uint64_t v3 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = *a2;
    void v7[4] = sub_1ACD6D6A4;
    v7[5] = v5;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    v7[2] = sub_1ACA6DA9C;
    v7[3] = &block_descriptor_94;
    uint64_t v3 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v6 = *a2;
  }
  objc_msgSend(v6, sel_setSessionCompletionHandler_, v3);
  _Block_release(v3);
}

uint64_t sub_1ACD6B1B8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1A88);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  unint64_t i = *(void *)(updated - 8);
  MEMORY[0x1F4188790](updated);
  id v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_1ACE75EC8();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v1 + 96);
  *unint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t, __n128))(v12 + 104))(v15, *MEMORY[0x1E4FBCBF0], v11, v13);
  id v17 = v16;
  char v18 = sub_1ACE75EF8();
  uint64_t v20 = *(void (**)(void *, uint64_t))(v12 + 8);
  uint64_t v19 = v12 + 8;
  v20(v15, v11);
  if (v18)
  {
    uint64_t v21 = v1 + 104;
    swift_beginAccess();
    uint64_t v22 = *(void *)(v1 + 104);
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v19 = v1;
    if (v23)
    {
      uint64_t v24 = v22 + ((*(unsigned __int8 *)(i + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(i + 80));
      uint64_t v25 = *(int *)(updated + 36);
      uint64_t v26 = a1;
      uint64_t v27 = *(void *)(i + 72);
      uint64_t v42 = v26;
      uint64_t v43 = v1;
      int v28 = *(unsigned __int8 *)(v26 + v25);
      swift_bridgeObjectRetain();
      for (unint64_t i = 0; i != v23; ++i)
      {
        sub_1ACAC5F3C(v24, (uint64_t)v10);
        if (v28)
        {
          char v29 = v10[*(int *)(updated + 36)];
          sub_1ACAC5FA0((uint64_t)v10);
          if ((v29 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_10;
          }
        }
        else
        {
          sub_1ACAC5FA0((uint64_t)v10);
        }
        v24 += v27;
      }
      swift_bridgeObjectRelease();
      unint64_t i = *(void *)(*(void *)v21 + 16);
LABEL_10:
      a1 = v42;
      uint64_t v19 = v43;
    }
    else
    {
      unint64_t i = 0;
    }
    swift_beginAccess();
    unint64_t v15 = v45;
    if (*(void *)(*(void *)v21 + 16) >= i)
    {
      uint64_t v30 = v44;
      sub_1ACAC5F3C(a1, v44);
      sub_1ACAC8DEC(i, i, v30);
      swift_endAccess();
      if (qword_1EB769568 == -1) {
        goto LABEL_14;
      }
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_20:
  swift_once();
LABEL_14:
  uint64_t v31 = sub_1ACE754C8();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EB76D4C8);
  sub_1ACAC5F3C(a1, (uint64_t)v15);
  swift_retain();
  os_log_type_t v32 = sub_1ACE75498();
  os_log_type_t v33 = sub_1ACE76C08();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    v47[0] = v44;
    *(_DWORD *)uint64_t v34 = 136315907;
    uint64_t v36 = *(void *)(v19 + 16);
    unint64_t v35 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1ACA3189C(v36, v35, v47);
    sub_1ACE76FF8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2160;
    uint64_t v46 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v34 + 22) = 2081;
    uint64_t v37 = sub_1ACE74DD8();
    uint64_t v46 = sub_1ACA3189C(v37, v38, v47);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACAC5FA0((uint64_t)v15);
    *(_WORD *)(v34 + 32) = 2048;
    uint64_t v46 = i;
    sub_1ACE76FF8();
    _os_log_impl(&dword_1AC9D5000, v32, v33, "%s: inserting %{private,mask.hash}s at index %ld", (uint8_t *)v34, 0x2Au);
    uint64_t v39 = v44;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v39, -1, -1);
    MEMORY[0x1AD11B340](v34, -1, -1);
  }
  else
  {
    swift_release();
    sub_1ACAC5FA0((uint64_t)v15);
  }

  return sub_1ACD6B6E8();
}

uint64_t sub_1ACD6B6E8()
{
  uint64_t v1 = v0;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  uint64_t v3 = *(void *)(updated - 8);
  MEMORY[0x1F4188790](updated);
  uint64_t v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v42[-v7];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v42[-v10];
  uint64_t v12 = sub_1ACE75EC8();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v17 = (void *)v1[12];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t, __n128))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v46 = v17;
  LOBYTE(v17) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(v1[14] + 16) >= v1[4]) {
    return result;
  }
  uint64_t v19 = v1 + 13;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v1[13] + 16)) {
    return result;
  }
  swift_beginAccess();
  if (!*(void *)(*v19 + 16)) {
    goto LABEL_12;
  }
  sub_1ACAC5F3C(*v19 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v11);
  sub_1ACACA290(0, 1);
  swift_endAccess();
  if (qword_1EB769568 != -1) {
LABEL_13:
  }
    swift_once();
  uint64_t v20 = sub_1ACE754C8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB76D4C8);
  sub_1ACAC5F3C((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  uint64_t v21 = sub_1ACE75498();
  os_log_type_t v22 = sub_1ACE76C08();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = updated;
    uint64_t v25 = v24;
    uint64_t v44 = swift_slowAlloc();
    v48[0] = v44;
    *(_DWORD *)uint64_t v25 = 136315651;
    int v43 = v23;
    uint64_t v26 = v1[2];
    unint64_t v27 = v1[3];
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1ACA3189C(v26, v27, v48);
    sub_1ACE76FF8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2160;
    uint64_t v47 = 1752392040;
    sub_1ACE76FF8();
    *(_WORD *)(v25 + 22) = 2081;
    uint64_t v28 = sub_1ACE74DD8();
    uint64_t v47 = sub_1ACA3189C(v28, v29, v48);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();
    sub_1ACAC5FA0((uint64_t)v8);
    _os_log_impl(&dword_1AC9D5000, v21, (os_log_type_t)v43, "%s: starting %{private,mask.hash}s", (uint8_t *)v25, 0x20u);
    uint64_t v30 = v44;
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v30, -1, -1);
    MEMORY[0x1AD11B340](v25, -1, -1);
  }
  else
  {
    swift_release();
    sub_1ACAC5FA0((uint64_t)v8);
  }

  sub_1ACAC5F3C((uint64_t)v11, (uint64_t)v5);
  uint64_t v31 = (void *)v1[5];
  sub_1ACA3E158((uint64_t)(v1 + 6), (uint64_t)v48);
  uint64_t v32 = v1[11];
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for RSSFeedUpdaterJob();
  swift_allocObject();
  id v34 = v46;
  id v35 = v31;
  swift_unknownObjectRetain();
  uint64_t v36 = sub_1ACBE8118((uint64_t)v5, v35, (uint64_t)v48, v32, v34, (uint64_t)sub_1ACD6D574, v33);

  swift_unknownObjectRelease();
  swift_release();
  uint64_t v37 = sub_1ACE74DD8();
  uint64_t v39 = v38;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v47 = v1[14];
  v1[14] = 0x8000000000000000;
  sub_1ACD0F1F8(v36, v37, v39, isUniquelyReferenced_nonNull_native);
  v1[14] = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v41 = sub_1ACBE144C();
  sub_1ACD6B6E8(v41);
  swift_release();
  return sub_1ACAC5FA0((uint64_t)v11);
}

uint64_t sub_1ACD6BCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1ACE75EC8();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + 96);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v10, *MEMORY[0x1E4FBCBF0], v6, v8);
  id v12 = v11;
  LOBYTE(v11) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v10, v6);
  if (v11)
  {
    type metadata accessor for FeedUpdateRequest();
    uint64_t v14 = sub_1ACE74DD8();
    uint64_t v16 = v15;
    swift_beginAccess();
    sub_1ACA69A68(v14, v16);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v17 = swift_release();
    char v18 = *(void (**)(uint64_t, uint64_t))(v3 + 120);
    if (v18)
    {
      swift_retain();
      v18(a1, a2);
      uint64_t v17 = sub_1ACA76F34((uint64_t)v18);
    }
    return sub_1ACD6B6E8(v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACD6BE80(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1ACE75EC8();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v2 + 96);
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t, __n128))(v6 + 104))(v9, *MEMORY[0x1E4FBCBF0], v5, v7);
  id v11 = v10;
  LOBYTE(v10) = sub_1ACE75EF8();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 112);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1ACA657FC(a1, a2);
    if (v14)
    {
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EB769568 != -1) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v16 = sub_1ACE754C8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB76D4C8);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1ACE75498();
  os_log_type_t v18 = sub_1ACE76BE8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 141558275;
    uint64_t v23 = 1752392040;
    uint64_t v24 = v20;
    sub_1ACE76FF8();
    *(_WORD *)(v19 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1ACA3189C(a1, a2, &v24);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v17, v18, "Job does not exist in the queue: %{private,mask.hash}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v20, -1, -1);
    MEMORY[0x1AD11B340](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_1ACD6C19C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t updated = type metadata accessor for FeedUpdateRequest();
  MEMORY[0x1F4188790](updated);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_1ACE75EC8();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  id v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = (void *)v2[12];
  *id v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7, v9);
  id v13 = v12;
  char v14 = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v14)
  {
    sub_1ACAC5F3C(a1, (uint64_t)v6);
    uint64_t v16 = (void *)v2[5];
    sub_1ACA3E158((uint64_t)(v2 + 6), (uint64_t)v27);
    uint64_t v17 = v2[11];
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for RSSFeedUpdaterJob();
    swift_allocObject();
    id v19 = v13;
    id v20 = v16;
    swift_unknownObjectRetain();
    uint64_t v21 = sub_1ACBE8118((uint64_t)v6, v20, (uint64_t)v27, v17, v19, (uint64_t)sub_1ACD6D574, v18);

    swift_unknownObjectRelease();
    swift_release();
    uint64_t v22 = sub_1ACE74DD8();
    uint64_t v24 = v23;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = v2[14];
    v2[14] = 0x8000000000000000;
    sub_1ACD0F1F8(v21, v22, v24, isUniquelyReferenced_nonNull_native);
    v2[14] = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACD6C460(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ACD6BCC8(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ACD6C4D4()
{
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACA76F34(*(void *)(v0 + 120));
  return v0;
}

uint64_t sub_1ACD6C52C()
{
  sub_1ACD6C4D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACD6C560()
{
  uint64_t updated = (int *)type metadata accessor for FeedUpdateRequest();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)updated - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)updated - 1) + 80);

  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1ACE75118();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  unint64_t v5 = v0 + v2 + updated[5];
  uint64_t v6 = sub_1ACE74F28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  unint64_t v9 = v0 + v2 + updated[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + updated[14])) {
    swift_release();
  }
  if (*(void *)(v3 + updated[15])) {
    swift_release();
  }
  if (*(void *)(v3 + updated[16])) {
    swift_release();
  }
  if (*(void *)(v3 + updated[17])) {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1ACD6C784()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeedUpdateRequest() - 8);
  sub_1ACD69638(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1ACD6C7E8@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = sub_1ACA69638(v3);
  swift_endAccess();
  uint64_t result = sub_1ACD669A0(sub_1ACDF5520, (uint64_t)&unk_1F039B098, (uint64_t)sub_1ACD6D674, (uint64_t)&block_descriptor_88_1);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v4) {
    uint64_t v6 = v4;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1ACD6C8B4@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_beginAccess();
  uint64_t v5 = sub_1ACA69970(v3, v4);
  swift_endAccess();
  uint64_t result = sub_1ACD669A0(sub_1ACDF59C0, (uint64_t)&unk_1F039AFA8, (uint64_t)sub_1ACD6D5AC, (uint64_t)&block_descriptor_68_2);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v5) {
    uint64_t v7 = v5;
  }
  *a2 = v7;
  return result;
}

void sub_1ACD6C984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v17 = self;
  unint64_t v9 = (void *)sub_1ACE76178();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE8FAB0;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  sub_1ACE771F8();
  uint64_t v12 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 96) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 72) = a2;
  sub_1ACE771F8();
  *(void *)(inited + 168) = v12;
  *(void *)(inited + 144) = a3;
  sub_1ACE771F8();
  *(void *)(inited + 240) = v12;
  *(void *)(inited + 216) = a4;
  sub_1ACE771F8();
  *(void *)(inited + 312) = v12;
  *(void *)(inited + 288) = a1;
  sub_1ACE771F8();
  uint64_t v13 = *(void *)(a5 + *(int *)(type metadata accessor for FeedUpdateRequest() + 48));
  type metadata accessor for MTFeedUpdateSource(0);
  *(void *)(inited + 384) = v14;
  *(void *)(inited + 360) = v13;
  sub_1ACE771F8();
  *(void *)(inited + 456) = v11;
  *(void *)(inited + 432) = 7566194;
  *(void *)(inited + 440) = 0xE300000000000000;
  sub_1ACA364E4(inited);
  uint64_t v15 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_recordEvent_dataSource_data_, v9, 0, v15);
}

void _s18PodcastsFoundation14RSSFeedUpdaterC24didDownloadFeedWithError_4data4task12requestedUrl18useBackgroundFetchys0I0_pSg_0B04DataVSgSo16NSURLSessionTaskCSgAK3URLVSgSbtF_0(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v57 = a2;
  unint64_t v58 = a3;
  char v59 = a4;
  uint64_t v55 = a1;
  uint64_t v6 = sub_1ACE75DC8();
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v62 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v61 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE74F28();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v47 - v18;
  sub_1ACA615AC(a5, (uint64_t)v12);
  uint64_t v20 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1ACA7FA64((uint64_t)v12);
    if (qword_1EB769568 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1ACE754C8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB76D4C8);
    uint64_t v22 = sub_1ACE75498();
    os_log_type_t v23 = sub_1ACE76BE8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1AC9D5000, v22, v23, "Tried to perform an RSS feed update without a URL.", v24, 2u);
      MEMORY[0x1AD11B340](v24, -1, -1);
    }
  }
  else
  {
    uint64_t v49 = v6;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v53 = v19;
    v25(v19, v12, v13);
    uint64_t v26 = v14;
    uint64_t v52 = v14;
    unint64_t v27 = v56;
    uint64_t v51 = *(void *)&v56[OBJC_IVAR____TtC18PodcastsFoundation14RSSFeedUpdater_workQueue];
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    unint64_t v29 = v19;
    uint64_t v30 = v20;
    uint64_t v48 = v20;
    v28(v16, v29, v20);
    unint64_t v31 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v32 = (v15 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = v8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v27;
    v25((char *)(v34 + v31), v16, v30);
    id v35 = v55;
    *(void *)(v34 + v32) = v55;
    uint64_t v36 = (uint64_t *)(v34 + v33);
    uint64_t v38 = v57;
    unint64_t v37 = v58;
    *uint64_t v36 = v57;
    v36[1] = v37;
    uint64_t v39 = v59;
    *(void *)(v34 + ((v33 + 23) & 0xFFFFFFFFFFFFFFF8)) = v59;
    aBlock[4] = sub_1ACD6D85C;
    void aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_109;
    uint64_t v40 = _Block_copy(aBlock);
    id v41 = v27;
    id v42 = v35;
    sub_1ACA39848(v38, v37);
    id v43 = v39;
    uint64_t v44 = v61;
    sub_1ACE75E08();
    uint64_t v63 = MEMORY[0x1E4FBC860];
    sub_1ACA8F6D8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACAC5D64((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    uint64_t v45 = v54;
    uint64_t v46 = v49;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v44, v45, v40);
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v50);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v48);
    swift_release();
  }
}

uint64_t sub_1ACD6D1C4()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1ACD6D268()
{
  uint64_t v1 = *(void *)(sub_1ACE74F28() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1ACD6A350(v2);
}

uint64_t sub_1ACD6D2F4()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ACD6D32C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

char *keypath_get_selector_sessionCompletionHandler()
{
  return sel_sessionCompletionHandler;
}

uint64_t method lookup function for RSSFeedUpdater(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RSSFeedUpdater);
}

uint64_t dispatch thunk of RSSFeedUpdater.updatingFeedURLs.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RSSFeedUpdater.__allocating_init(ctx:ingesterProvider:externalFeedDownloader:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RSSFeedUpdater.updateFeed(request:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

ValueMetadata *type metadata accessor for RSSFeedUpdater.UpdaterJobMetricsData()
{
  return &type metadata for RSSFeedUpdater.UpdaterJobMetricsData;
}

void destroy for RSSFeedUpdater.Result(uint64_t a1)
{
}

uint64_t initializeWithCopy for RSSFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1ACBE313C(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for RSSFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1ACBE313C(*(id *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1ACBE3224(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for RSSFeedUpdater.Result(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_1ACBE3224(v4, v6, v5, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for RSSFeedUpdater.Result()
{
  return &type metadata for RSSFeedUpdater.Result;
}

uint64_t sub_1ACD6D53C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACD6D574(uint64_t a1, uint64_t a2)
{
  return sub_1ACD6C460(a1, a2);
}

BOOL sub_1ACD6D590@<W0>(unsigned char *a1@<X8>)
{
  return sub_1ACD6D704(a1);
}

uint64_t sub_1ACD6D5AC()
{
  return sub_1ACD66C64(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1ACD67F74);
}

uint64_t sub_1ACD6D5DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACD6D614@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACD6C8B4(*(uint64_t **)(v1 + 24), a1);
}

void *sub_1ACD6D630@<X0>(void *a1@<X8>)
{
  return sub_1ACAC5888(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1ACD6D650@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACD6C7E8(*(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_1ACD6D674()
{
  return sub_1ACD66C64(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1ACD67D98);
}

uint64_t sub_1ACD6D6A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1ACD6D6CC()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1ACD6D704@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1ACD66F28(*(void *)(v1 + 16), **(void **)(v1 + 24), *(void *)(*(void *)(v1 + 24) + 8), *(void *)(v1 + 32));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1ACD6D740()
{
  uint64_t v1 = sub_1ACE74F28();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  unint64_t v6 = *(void *)(v0 + v5 + 8);
  if (v6 >> 60 != 15) {
    sub_1ACA50850(*(void *)(v0 + v5), v6);
  }

  return swift_deallocObject();
}

void sub_1ACD6D85C()
{
  uint64_t v1 = *(void *)(sub_1ACE74F28() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  unint64_t v6 = *(void **)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  unint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  sub_1ACD69B2C(v5, v0 + v2, v6, v7, v8, v9);
}

void *sub_1ACD6D934@<X0>(void *a1@<X8>)
{
  return sub_1ACD6D630(a1);
}

PodcastsFoundation::SectionContext_optional __swiftcall SectionContext.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t SectionContext.rawValue.getter()
{
  if (*v0) {
    return 0x72656C69617254;
  }
  else {
    return 0x6E6F73616553;
  }
}

uint64_t sub_1ACD6D9FC(char *a1, char *a2)
{
  return sub_1ACCF662C(*a1, *a2);
}

uint64_t sub_1ACD6DA08()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD6DA88()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD6DAF4()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::SectionContext_optional sub_1ACD6DB70(Swift::String *a1)
{
  return SectionContext.init(rawValue:)(*a1);
}

void sub_1ACD6DB7C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E6F73616553;
  if (*v1) {
    uint64_t v2 = 0x72656C69617254;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static EpisodeListenNowReason.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 8);
  double v3 = *(double *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (v2 & 1) != 0 || (*(unsigned char *)(a2 + 8))
  {
    double v9 = *(double *)a1;
    char v10 = v2;
    double v7 = v3;
    char v8 = v4;
    char v5 = static EpisodeListenNowReason.== infix(_:_:)(&v9, &v7);
  }
  else
  {
    char v5 = *(double *)a1 == v3;
  }
  return v5 & 1;
}

Swift::String __swiftcall EpisodeListenNowReason.stringDescriptionForPrototypeUpNext()()
{
  if (*(unsigned char *)(v0 + 8))
  {
    uint64_t v1 = 0;
    char v2 = (void *)0xE000000000000000;
  }
  else
  {
    sub_1ACE76928();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    uint64_t v1 = 0xD000000000000016;
    char v2 = (void *)0x80000001ACED0BA0;
  }
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

unint64_t sub_1ACD6DC9C()
{
  unint64_t result = qword_1E99F5978;
  if (!qword_1E99F5978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5978);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SectionContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD6DDBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionContext()
{
  return &type metadata for SectionContext;
}

ValueMetadata *type metadata accessor for EpisodeListenNowReason()
{
  return &type metadata for EpisodeListenNowReason;
}

id AccountsUtil.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AccountsUtil.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountsUtil();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AccountsUtil.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountsUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s18PodcastsFoundation12AccountsUtilC25userAllowsPersonalizationSbvgZ_0()
{
  id v0 = objc_msgSend(self, sel_ams_sharedAccountStore);
  id v1 = objc_msgSend(v0, sel_ams_activeiTunesAccount);

  if (!v1) {
    return 0;
  }
  if (objc_msgSend(v1, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E4F4D9D8]))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v4 = 0u;
    long long v5 = 0u;
  }
  sub_1ACA9D6FC((uint64_t)&v4, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0 && (v3 & 1) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)v6);
  }
  if (objc_msgSend(v1, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E4F4D9E0]))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v4 = 0u;
    long long v5 = 0u;
  }
  sub_1ACA9D6FC((uint64_t)&v4, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0 && v3 == 1)
    {
LABEL_16:

      return 0;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)v6);
  }
  if (objc_msgSend(v1, sel_ams_accountFlagValueForAccountFlag_, *MEMORY[0x1E4F4D9D0]))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {

    long long v4 = 0u;
    long long v5 = 0u;
  }
  sub_1ACA9D6FC((uint64_t)&v4, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast() & 1) != 0 && (v3) {
      return 0;
    }
  }
  else
  {
    sub_1ACA65828((uint64_t)v6);
  }
  return 1;
}

uint64_t type metadata accessor for AccountsUtil()
{
  return self;
}

id MTEpisode.attributedDescriptionFromHTML.getter()
{
  id v1 = objc_msgSend(v0, sel_itemDescriptionWithHTMLData);
  if (v1)
  {
    uint64_t v2 = sub_1ACE74F88();
    unint64_t v4 = v3;

    sub_1ACA50D4C(0, &qword_1EB770BA0);
    sub_1ACA50D4C(0, &qword_1EB7718F8);
    id v1 = (id)sub_1ACE76C48();
    sub_1ACA50850(v2, v4);
  }
  return v1;
}

void MTEpisode.attributedDescriptionFromHTML.setter(void *a1)
{
  v39[1] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    unint64_t v3 = self;
    v39[0] = 0;
    id v4 = a1;
    id v5 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v4, 1, v39);
    id v6 = v39[0];
    if (v5)
    {
      uint64_t v7 = sub_1ACE74F88();
      unint64_t v9 = v8;

      id v10 = objc_msgSend(v1, sel_itemDescriptionWithHTMLData);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_1ACE74F88();
        unint64_t v14 = v13;

        sub_1ACA3985C(v7, v9);
        sub_1ACA3985C(v7, v9);
        LOBYTE(v11) = sub_1ACD6EE5C(v7, v9, v12, v14);
        sub_1ACA50850(v12, v14);
        sub_1ACA50850(v7, v9);
        sub_1ACA50850(v7, v9);
        if (v11)
        {

          sub_1ACA50850(v7, v9);
          return;
        }
      }
      else
      {
        sub_1ACA3985C(v7, v9);
        sub_1ACAB2EF0(v7, v9);
        sub_1ACAB2EF0(0, 0xF000000000000000);
      }
      uint64_t v38 = (void *)sub_1ACE74F68();
      objc_msgSend(v1, sel_setItemDescriptionWithHTMLData_, v38);

      sub_1ACA50850(v7, v9);
    }
    else
    {
      uint64_t v20 = v6;
      uint64_t v21 = (void *)sub_1ACE74D78();

      swift_willThrow();
      if (qword_1EB768C20 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1ACE754C8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB768C00);
      id v23 = v1;
      id v24 = v21;
      id v25 = v23;
      id v26 = v21;
      unint64_t v27 = sub_1ACE75498();
      os_log_type_t v28 = sub_1ACE76BE8();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        v39[0] = v30;
        *(_DWORD *)uint64_t v29 = 136446466;
        id v31 = objc_msgSend(v25, sel_uuid);
        if (!v31)
        {
          id v32 = objc_msgSend(v25, sel_objectID);
          id v31 = objc_msgSend(v32, sel_description);
        }
        uint64_t v33 = sub_1ACE761B8();
        unint64_t v35 = v34;

        sub_1ACA3189C(v33, v35, (uint64_t *)v39);
        sub_1ACE76FF8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v36 = sub_1ACE77A98();
        sub_1ACA3189C(v36, v37, (uint64_t *)v39);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v27, v28, "Failed to encode NSAttributedString from kEpisodeDescriptionWithHTMLData for %{public}s with error: %{public}s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v30, -1, -1);
        MEMORY[0x1AD11B340](v29, -1, -1);
      }
      else
      {
      }
      objc_msgSend(v25, sel_setItemDescriptionWithHTMLData_, 0);
    }
  }
  else
  {
    id v15 = objc_msgSend(v1, sel_itemDescriptionWithHTMLData);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_1ACE74F88();
      unint64_t v19 = v18;

      sub_1ACA50850(v17, v19);
      objc_msgSend(v1, sel_setItemDescriptionWithHTMLData_, 0);
    }
  }
}

uint64_t sub_1ACD6EA58@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1ACA3985C(a2, a3);
      id v10 = (char *)sub_1ACE74B38();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1ACE74B58();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1ACE74B48();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1ACD6ECBCLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1ACA50850(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1ACE74B38();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1ACE74B58();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1ACE74B48();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1ACD6ECCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1ACD6EA58((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1ACD6EDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1ACE74B38();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1ACE74B58();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1ACE74B48();
  sub_1ACD6EA58(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1ACD6EE5C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1ACD6F0C4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1ACA3985C(a3, a4);
                  sub_1ACA3985C(a1, a2);
                  char v17 = sub_1ACD6EDA4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1ACA50850(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1ACA3985C(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1ACD6EDA4(v21, v22, v20, a3, a4);
                  sub_1ACA50850(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1ACA3985C(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1ACA3985C(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1ACD6ECCC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1ACA50850(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

char *keypath_get_selector_attributedDescriptionFromHTML()
{
  return sel_attributedDescriptionFromHTML;
}

id sub_1ACD6F100@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_attributedDescriptionFromHTML);
  *a2 = result;
  return result;
}

id sub_1ACD6F13C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAttributedDescriptionFromHTML_, *a1);
}

uint64_t LoggerTrace.init(logger:level:identifier:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a3;
  a5[1] = a4;
  uint64_t v8 = type metadata accessor for LoggerTrace(0);
  uint64_t v9 = (char *)a5 + *(int *)(v8 + 20);
  uint64_t v10 = sub_1ACE754C8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  *((unsigned char *)a5 + *(int *)(v8 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for LoggerTrace(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB772AB8);
}

uint64_t LoggerTrace.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LoggerTrace.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LoggerTrace.identifier.modify())()
{
  return nullsub_1;
}

uint64_t LoggerTrace.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoggerTrace(0) + 20);
  uint64_t v4 = sub_1ACE754C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t LoggerTrace.level.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LoggerTrace(0) + 24));
}

uint64_t LoggerTrace.emit(event:context:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v8 = type metadata accessor for LoggerTrace(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v43 - v12);
  uint64_t v14 = sub_1ACE754C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v43 - v19;
  if (a5)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v43 - v19, v5 + *(int *)(v8 + 20), v14, v20);
    int v22 = *(unsigned __int8 *)(v5 + *(int *)(v8 + 24));
    sub_1ACD71344(v5, (uint64_t)v13, type metadata accessor for LoggerTrace);
    swift_bridgeObjectRetain_n();
    int v23 = sub_1ACE75498();
    if (os_log_type_enabled(v23, (os_log_type_t)v22))
    {
      uint64_t v24 = swift_slowAlloc();
      int v44 = v22;
      uint64_t v25 = v24;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v50 = v43;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v45 = v14;
      uint64_t v26 = *v13;
      unint64_t v27 = v13[1];
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1ACA3189C(v26, v27, &v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACD713AC((uint64_t)v13, type metadata accessor for LoggerTrace);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v28 = sub_1ACE772A8();
      uint64_t v49 = sub_1ACA3189C(v28, v29, &v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1ACA3189C(v46, a5, &v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AC9D5000, v23, (os_log_type_t)v44, "[%s] %s - %s", (uint8_t *)v25, 0x20u);
      uint64_t v30 = v43;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v30, -1, -1);
      MEMORY[0x1AD11B340](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v21, v45);
    }
    sub_1ACD713AC((uint64_t)v13, type metadata accessor for LoggerTrace);

    swift_bridgeObjectRelease_n();
    id v41 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    id v42 = v21;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v5 + *(int *)(v8 + 20), v14, v20);
    os_log_type_t v32 = *(unsigned char *)(v5 + *(int *)(v8 + 24));
    sub_1ACD71344(v5, (uint64_t)v10, type metadata accessor for LoggerTrace);
    uint64_t v33 = sub_1ACE75498();
    if (os_log_type_enabled(v33, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v45 = v14;
      uint64_t v35 = v34;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v50 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      LODWORD(v46) = a3;
      uint64_t v37 = *v10;
      unint64_t v38 = v10[1];
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1ACA3189C(v37, v38, &v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACD713AC((uint64_t)v10, type metadata accessor for LoggerTrace);
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v39 = sub_1ACE772A8();
      uint64_t v49 = sub_1ACA3189C(v39, v40, &v50);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v33, v32, "[%s] %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v36, -1, -1);
      MEMORY[0x1AD11B340](v35, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v45);
    }
    sub_1ACD713AC((uint64_t)v10, type metadata accessor for LoggerTrace);

    id v41 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    id v42 = v17;
  }
  return v41(v42, v14);
}

uint64_t LoggerTrace.start(interval:context:)@<X0>(unint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for LoggerTrace(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v29 - v14;
  *((void *)&v37 + 1) = v16;
  unint64_t v38 = &protocol witness table for LoggerTrace;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
  sub_1ACD71344(v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for LoggerTrace);
  sub_1ACD6FBF8(a1, a2, (uint64_t)&v36, (uint64_t)&v32);
  if (*((void *)&v33 + 1))
  {
    *((void *)&v37 + 1) = &type metadata for LoggerTrace.ActivityInterval;
    unint64_t v38 = &off_1F039B3B8;
    uint64_t v18 = swift_allocObject();
    *(void *)&long long v36 = v18;
    long long v19 = v33;
    *(_OWORD *)(v18 + 16) = v32;
    *(_OWORD *)(v18 + 32) = v19;
    *(_OWORD *)(v18 + 48) = v34;
    *(void *)(v18 + 64) = v35;
    sub_1ACD71344(v5, (uint64_t)v15, type metadata accessor for LoggerTrace);
    sub_1ACD713AC((uint64_t)v15, type metadata accessor for LoggerTrace);
    sub_1ACA3AABC(&v36, (uint64_t)a4);
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1ACA3E158((uint64_t)a4, (uint64_t)&v32);
LABEL_7:
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76AD50);
    sub_1ACE77458();
    uint64_t v20 = v30;
    unint64_t v21 = v31;
    goto LABEL_8;
  }
  sub_1ACA50E78((uint64_t)&v32, &qword_1E99F5988);
  long long v36 = 0u;
  long long v37 = 0u;
  unint64_t v38 = 0;
  sub_1ACD71344(v5, (uint64_t)v15, type metadata accessor for LoggerTrace);
  sub_1ACD71344((uint64_t)v15, (uint64_t)v12, type metadata accessor for LoggerTrace);
  uint64_t v22 = sub_1ACE772A8();
  uint64_t v24 = v23;
  sub_1ACD713AC((uint64_t)v15, type metadata accessor for LoggerTrace);
  uint64_t v25 = type metadata accessor for LoggerTrace.LogInterval(0);
  a4[3] = v25;
  a4[4] = (uint64_t)&off_1F039B3C8;
  uint64_t v26 = __swift_allocate_boxed_opaque_existential_1(a4);
  sub_1ACD70318((uint64_t)v12, (uint64_t)v26);
  unint64_t v27 = (uint64_t *)((char *)v26 + *(int *)(v25 + 20));
  *unint64_t v27 = v22;
  v27[1] = v24;
  sub_1ACA50E78((uint64_t)&v36, qword_1EB76AD60);
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  *(void *)&long long v32 = 0;
  *((void *)&v32 + 1) = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76AD50);
  sub_1ACE77458();
  sub_1ACE762C8();
  sub_1ACE762C8();
  unint64_t v21 = *((void *)&v32 + 1);
  uint64_t v20 = v32;
  sub_1ACA3E158((uint64_t)a4, (uint64_t)&v32);
  if (!v21) {
    goto LABEL_7;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v32);
  LoggerTrace.emit(event:context:)((uint64_t)"START INTERVAL", 14, 2, v20, v21);
  return swift_bridgeObjectRelease();
}

double sub_1ACD6FBF8@<D0>(unint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  sub_1ACA3E158(a3, (uint64_t)v15);
  uint64_t v9 = sub_1ACD6FF04(&dword_1AC9D5000, a1, a2, v8);
  if (v9)
  {
    uint64_t v16 = v9;
    v14.opaque[0] = 0;
    v14.opaque[1] = 0;
    os_activity_scope_enter(v9, &v14);
    uint64_t v10 = v14.opaque[0];
    uint64_t v11 = v14.opaque[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3C8);
    uint64_t v12 = swift_allocObject();
    *(_DWORD *)(v12 + 36) = 0;
    *(void *)(v12 + 16) = v10;
    *(void *)(v12 + 24) = v11;
    *(unsigned char *)(v12 + 32) = 0;
    __swift_destroy_boxed_opaque_existential_0(a3);
    uint64_t v17 = v12;
    sub_1ACD7142C((uint64_t)v15, a4);
    sub_1ACD71464((uint64_t)v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    *(void *)(a4 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

uint64_t sub_1ACD6FD14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for LoggerTrace.LogInterval(0);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LoggerTrace(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD71344(v2, (uint64_t)v10, type metadata accessor for LoggerTrace);
  if (!a2)
  {
    sub_1ACD71344(v2, (uint64_t)v7, type metadata accessor for LoggerTrace.LogInterval);
LABEL_5:
    uint64_t v15 = (uint64_t *)&v7[*(int *)(v5 + 20)];
    uint64_t v13 = *v15;
    unint64_t v14 = v15[1];
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v11 = (uint64_t *)(v2 + *(int *)(v5 + 20));
  unint64_t v12 = v11[1];
  uint64_t v17 = *v11;
  unint64_t v18 = v12;
  swift_bridgeObjectRetain();
  sub_1ACE762C8();
  sub_1ACE762C8();
  uint64_t v13 = v17;
  unint64_t v14 = v18;
  sub_1ACD71344(v3, (uint64_t)v7, type metadata accessor for LoggerTrace.LogInterval);
  if (!v14) {
    goto LABEL_5;
  }
LABEL_6:
  sub_1ACD713AC((uint64_t)v7, type metadata accessor for LoggerTrace.LogInterval);
  LoggerTrace.emit(event:context:)((uint64_t)"END INTERVAL", 12, 2, v13, v14);
  swift_bridgeObjectRelease();
  return sub_1ACD713AC((uint64_t)v10, type metadata accessor for LoggerTrace);
}

unint64_t sub_1ACD6FF04@<X0>(void *dso@<X3>, unint64_t result@<X0>, char a3@<W2>, unint64_t a4@<X8>)
{
  unint64_t v5 = result;
  if ((a3 & 1) == 0)
  {
    if (result)
    {
      if (dso)
      {
        if (qword_1EB76AB38 != -1) {
          swift_once();
        }
        uint64_t v6 = qword_1EB7694C0;
        char v7 = dso;
        uint64_t v8 = (char *)v5;
        return (unint64_t)_os_activity_create(v7, v8, v6, OS_ACTIVITY_FLAG_DEFAULT);
      }
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_23;
  }
  a4 = HIDWORD(result);
  if (HIDWORD(result))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result >> 11 == 27)
  {
    __break(1u);
    return result;
  }
  LODWORD(a4) = WORD1(result);
  if (WORD1(result) > 0x10u) {
    goto LABEL_24;
  }
  if ((result & 0xFFFFFF80) == 0)
  {
    if (result > 0xFF)
    {
      __break(1u);
      goto LABEL_32;
    }
    unsigned int v9 = (result + 1);
    goto LABEL_13;
  }
LABEL_25:
  int v14 = (result & 0x3F) << 8;
  unsigned int v15 = (v14 | (result >> 6)) + 33217;
  unsigned int v16 = (v14 | (result >> 6) & 0x3F) << 8;
  unsigned int v17 = (((v16 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
  unsigned int v18 = (v16 | (result >> 12)) + 8487393;
  if (a4) {
    unsigned int v9 = v17;
  }
  else {
    unsigned int v9 = v18;
  }
  if (result < 0x800) {
    unsigned int v9 = v15;
  }
LABEL_13:
  *(void *)description = (v9 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v9) & 0x38)) & 0x38));
  if (dso)
  {
    if (qword_1EB76AB38 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_1EB7694C0;
    uint64_t v8 = description;
    char v7 = dso;
    return (unint64_t)_os_activity_create(v7, v8, v6, OS_ACTIVITY_FLAG_DEFAULT);
  }
LABEL_18:
  if (qword_1E99EFED0 != -1) {
LABEL_32:
  }
    swift_once();
  uint64_t v10 = sub_1ACE754C8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E99F2BC8);
  uint64_t v11 = sub_1ACE75498();
  os_log_type_t v12 = sub_1ACE76BE8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1AC9D5000, v11, v12, "FAILED TO CREATE OS_ACTIVITY", v13, 2u);
    MEMORY[0x1AD11B340](v13, -1, -1);
  }

  return 0;
}

void sub_1ACD70170(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    os_activity_scope_state_s v9 = *(os_activity_scope_state_s *)a1;
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v7);
    (*(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))("ACTIVITY_END", 12, 2, a3, a4, v7, v8);
    os_activity_scope_leave(&v9);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
  }
}

uint64_t sub_1ACD70254()
{
  qword_1EB7694C0 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

void sub_1ACD70290()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 48);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_1ACD7140C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t type metadata accessor for LoggerTrace.LogInterval(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1E99F5990);
}

uint64_t sub_1ACD70318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LoggerTrace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACD7037C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void *initializeBufferWithCopyOfBuffer for LoggerTrace(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    os_activity_scope_state_s v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1ACE754C8();
    os_log_type_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for LoggerTrace(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1ACE754C8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for LoggerTrace(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  os_activity_scope_state_s v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE754C8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for LoggerTrace(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE754C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for LoggerTrace(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE754C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for LoggerTrace(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE754C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggerTrace(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD707F0);
}

uint64_t sub_1ACD707F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1ACE754C8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LoggerTrace(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD708B4);
}

uint64_t sub_1ACD708B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1ACE754C8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1ACD7095C()
{
  uint64_t result = sub_1ACE754C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1ACD70A00(void *a1, void *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = type metadata accessor for LoggerTrace(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1ACE754C8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *((unsigned char *)v4 + *(int *)(v8 + 24)) = *((unsigned char *)a2 + *(int *)(v8 + 24));
    uint64_t v14 = *(int *)(a3 + 20);
    unsigned int v15 = (void *)((char *)v4 + v14);
    unsigned int v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *unsigned int v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1ACD70B28(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for LoggerTrace(0) + 20);
  uint64_t v3 = sub_1ACE754C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

void *sub_1ACD70BC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for LoggerTrace(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1ACE754C8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)((char *)a1 + v13);
  unsigned int v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1ACD70C98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for LoggerTrace(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE754C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(v6 + 24)) = *((unsigned char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1ACD70D80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for LoggerTrace(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1ACE754C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(v6 + 24)) = *((unsigned char *)a2 + *(int *)(v6 + 24));
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1ACD70E30(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for LoggerTrace(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1ACE754C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACD70EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1ACD70F0C);
}

uint64_t sub_1ACD70F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LoggerTrace(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1ACD70FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1ACD70FE4);
}

uint64_t sub_1ACD70FE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for LoggerTrace(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1ACD710A4()
{
  uint64_t result = type metadata accessor for LoggerTrace(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for LoggerTrace.ActivityInterval(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for LoggerTrace.ActivityInterval(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for LoggerTrace.ActivityInterval(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LoggerTrace.ActivityInterval(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggerTrace.ActivityInterval(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LoggerTrace.ActivityInterval(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoggerTrace.ActivityInterval()
{
  return &type metadata for LoggerTrace.ActivityInterval;
}

uint64_t sub_1ACD71344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ACD713AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1ACD7140C(uint64_t a1)
{
  sub_1ACD70170(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACD7142C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ACD71464(uint64_t a1)
{
  return a1;
}

uint64_t ShowsSortType.ascendingType.getter(unsigned int a1)
{
  if (!(_BYTE)a1) {
    return 1;
  }
  if (a1 == 2) {
    unsigned int v1 = 3;
  }
  else {
    unsigned int v1 = a1;
  }
  if (a1 == 4) {
    return 5;
  }
  else {
    return v1;
  }
}

uint64_t ShowsSortType.baseSortType.getter(int a1)
{
  if (a1 == 5) {
    int v1 = 4;
  }
  else {
    int v1 = a1;
  }
  if (a1 == 3) {
    unsigned int v2 = 2;
  }
  else {
    unsigned int v2 = v1;
  }
  if (a1 == 1) {
    return 0;
  }
  else {
    return v2;
  }
}

Swift::Bool __swiftcall ShowsSortType.baseSortTypeMatches(otherSort:)(PodcastsFoundation::ShowsSortType otherSort)
{
  if (v1 == 5) {
    char v2 = 4;
  }
  else {
    char v2 = v1;
  }
  if (v1 == 3) {
    char v3 = 2;
  }
  else {
    char v3 = v2;
  }
  if (v1 == 1) {
    unsigned __int8 v4 = 0;
  }
  else {
    unsigned __int8 v4 = v3;
  }
  if (otherSort == PodcastsFoundation_ShowsSortType_addedAscending) {
    PodcastsFoundation::ShowsSortType v5 = PodcastsFoundation_ShowsSortType_added;
  }
  else {
    PodcastsFoundation::ShowsSortType v5 = otherSort;
  }
  if (otherSort == PodcastsFoundation_ShowsSortType_updatedAscending) {
    char v6 = 2;
  }
  else {
    char v6 = v5;
  }
  if (otherSort == PodcastsFoundation_ShowsSortType_titleAscending) {
    char v7 = 0;
  }
  else {
    char v7 = v6;
  }
  return sub_1ACCF79A0(v4, v7);
}

Swift::Bool __swiftcall ShowsSortType.isAscending()()
{
  return (v0 < 6u) & v0;
}

Swift::Bool __swiftcall ShowsSortType.isDescending()()
{
  return (v0 & 1) == 0 && v0 < 5u;
}

uint64_t ShowsSortType.rawValue.getter(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x41656C746974;
      goto LABEL_7;
    case 2:
      uint64_t result = 0x64657461647075;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
      uint64_t result = 0x6465646461;
      break;
    case 5:
      uint64_t v3 = 0x416465646461;
LABEL_7:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6373000000000000;
      break;
    case 6:
      uint64_t result = 0x6C61756E616DLL;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACD71668()
{
  char v1 = *v0;
  sub_1ACE77B18();
  ShowsSortType.rawValue.getter(v1);
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACE77B78();
}

uint64_t sub_1ACD716CC()
{
  ShowsSortType.rawValue.getter(*v0);
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD71720()
{
  char v1 = *v0;
  sub_1ACE77B18();
  ShowsSortType.rawValue.getter(v1);
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACE77B78();
}

uint64_t sub_1ACD71780@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1ACD717B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShowsSortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ACD717DC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = ShowsSortType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ShowsSortType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACD718B8()
{
  unint64_t result = qword_1E99F59A0;
  if (!qword_1E99F59A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShowsSortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD719D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowsSortType()
{
  return &type metadata for ShowsSortType;
}

void sub_1ACD71A10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE750A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1ACE75E88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE75E78();
  if (sub_1ACE75E68())
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return;
  }
  unint64_t v10 = sub_1ACE75E58();
  unint64_t v11 = sub_1ACE75E58();
  unint64_t v12 = v10 - v11;
  if (v10 < v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
    os_unfair_lock_lock(v13);
    uint64_t v14 = *(void *)(v0 + 24);
    uint64_t v15 = v14 + 1;
    if (!__OFADD__(v14, 1))
    {
      *(void *)(v1 + 24) = v15;
      os_unfair_lock_unlock(v13);
      if (v15 >= 1)
      {
        uint64_t v25 = v7;
        uint64_t v26 = v6;
        double v16 = (double)v12 / 1000000000.0;
        uint64_t v17 = (void (**)(char *, uint64_t))(v3 + 8);
        CFStringRef v18 = (const __CFString *)*MEMORY[0x1E4F1D418];
        do
        {
          sub_1ACE75098();
          sub_1ACE74FB8();
          double v20 = v19;
          unint64_t v21 = *v17;
          (*v17)(v5, v2);
          CFRunLoopRunInMode(v18, v16, 1u);
          sub_1ACE75098();
          sub_1ACE74FB8();
          double v23 = v22;
          v21(v5, v2);
          double v16 = v16 - (v23 - v20);
          if (v16 < 0.0) {
            break;
          }
          os_unfair_lock_lock(v13);
          uint64_t v24 = *(void *)(v1 + 24);
          os_unfair_lock_unlock(v13);
        }
        while (v24);
        uint64_t v7 = v25;
        uint64_t v6 = v26;
      }
      goto LABEL_11;
    }
  }
  __break(1u);
}

void *sub_1ACD71CBC(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772F80);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v1[2] = v3;
  memset(&context.retain, 0, 64);
  context.version = 0;
  context.info = (void *)qword_1E9A22B70;
  if (__OFADD__(qword_1E9A22B70, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  ++qword_1E9A22B70;
  v1[3] = a1;
  uint64_t v4 = CFRunLoopGetCurrent();
  if (!v4)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  uint64_t v5 = v4;
  v1[4] = v4;
  uint64_t v6 = CFRunLoopSourceCreate((CFAllocatorRef)*MEMORY[0x1E4F1CFB0], 0, &context);
  if (!v6) {
    goto LABEL_7;
  }
  v1[5] = v6;
  CFRunLoopAddSource(v5, v6, (CFRunLoopMode)*MEMORY[0x1E4F1D410]);
  return v1;
}

uint64_t sub_1ACD71DC0()
{
  CFRunLoopRemoveSource(*(CFRunLoopRef *)(v0 + 32), *(CFRunLoopSourceRef *)(v0 + 40), (CFRunLoopMode)*MEMORY[0x1E4F1D410]);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RunLoopSemaphore()
{
  return self;
}

uint64_t destroy for SubscriptionStatus(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for SubscriptionStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionStatus(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for SubscriptionStatus(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SubscriptionStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1ACD72094(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1ACD720AC(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStatus()
{
  return &type metadata for SubscriptionStatus;
}

uint64_t dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PendingPlaybackControllerProtocol.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Sequence.cartesianProduct<A>(_:)(uint64_t a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  objc_super v68 = a2;
  uint64_t v60 = a1;
  uint64_t v63 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  char v59 = (char *)&v47 - v9;
  uint64_t v10 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v47 - v11;
  uint64_t v53 = *(void (***)(char *, uint64_t, uint64_t))(a3 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v58 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a3;
  uint64_t v62 = a5;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void (***)(char *, uint64_t))(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v72 = (char *)&v47 - v19;
  uint64_t v20 = sub_1ACE76FD8();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v64 = (char *)&v47 - v21;
  double v22 = v68;
  uint64_t v23 = *(v68 - 1);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v28 = (char *)&v47 - v27;
  uint64_t v73 = sub_1ACE765F8();
  (*(void (**)(char *, uint64_t, void *))(v23 + 16))(v26, v69, v22);
  uint64_t v29 = v72;
  sub_1ACE76398();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v31 = v64;
  uint64_t v63 = v28;
  uint64_t v57 = AssociatedConformanceWitness;
  sub_1ACE76FE8();
  uint64_t v32 = v66;
  uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  uint64_t v56 = v66 + 48;
  if (v55(v31, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    uint64_t v34 = v32 + 32;
    v53 += 2;
    uint64_t v54 = v35;
    uint64_t v52 = v8 - 8;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v34 - 16);
    ++v50;
    uint64_t v66 = v34;
    uint64_t v49 = (void (**)(char *, uint64_t))(v34 - 24);
    uint64_t v70 = AssociatedTypeWitness;
    uint64_t v71 = v15;
    v35(v29, v31, AssociatedTypeWitness);
    while (1)
    {
      (*v53)(v58, v60, v61);
      sub_1ACE76398();
      uint64_t v69 = swift_getAssociatedConformanceWitness();
      sub_1ACE76FE8();
      uint64_t v39 = *(void *)(v8 - 8);
      objc_super v68 = *(void **)(v39 + 48);
      int v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v68)(v12, 1, v8);
      uint64_t v41 = TupleTypeMetadata2;
      id v42 = v17;
      uint64_t v43 = v59;
      if (v40 != 1)
      {
        int v44 = *v51;
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v39 + 32);
        do
        {
          uint64_t v46 = &v43[*(int *)(v41 + 48)];
          v44(v43, v72, v70);
          (*v45)(v46, v12, v8);
          sub_1ACE76688();
          sub_1ACE76648();
          sub_1ACE76FE8();
        }
        while (((unsigned int (*)(char *, uint64_t, uint64_t))v68)(v12, 1, v8) != 1);
      }
      (*v50)(v42, v71);
      long long v36 = v72;
      uint64_t v37 = v70;
      (*v49)(v72, v70);
      unint64_t v38 = v64;
      sub_1ACE76FE8();
      uint64_t v17 = v42;
      if (v55(v38, 1, v37) == 1) {
        break;
      }
      v54(v36, v38, v37);
    }
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v63, v67);
  return v73;
}

uint64_t DebouncedEpisodeAndShowProcessor.__allocating_init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1(a2, v11);
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(a3 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a3, v13);
  *((void *)&v18 + 1) = v19;
  *(void *)&long long v18 = v10;
  uint64_t v16 = sub_1ACD79308(v9, v12, v15, a4, a5, v22, v11, v8, v13, v18, v14);

  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v16;
}

uint64_t DebouncedEpisodeAndShowProcessor.state.getter()
{
  return swift_retain();
}

uint64_t DebouncedEpisodeAndShowProcessor.init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v33 = *(void *)(a1 + 32);
  uint64_t v34 = a4;
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v13 + 16))(v12, v10);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v32 = *(void *)(a2 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a2, v14);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  long long v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
  uint64_t v21 = *(void *)(a3 + 24);
  uint64_t v20 = *(void *)(a3 + 32);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1(a3, v21);
  __n128 v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v26 + 16))(v25, v23);
  uint64_t v30 = v20;
  uint64_t v27 = v34;
  uint64_t v28 = sub_1ACD78C58((uint64_t)v12, (uint64_t)v18, (uint64_t)v25, v34, v35, v36, v14, v8, v21, v32, v33, v30);

  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v28;
}

void sub_1ACD72BEC()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 264);
  uint64_t v2 = v1 + 4;
  unint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v4);
  os_unfair_lock_unlock(v3);
  if (v4 - 2 < 2)
  {
    sub_1ACD781F8();
  }
}

void sub_1ACD72C80()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 264);
  uint64_t v2 = v1 + 4;
  unint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACA8ADD8(v2, &v4);
  os_unfair_lock_unlock(v3);
  if (v4 < 2u)
  {
    sub_1ACD785AC();
  }
}

uint64_t sub_1ACD72D10()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  sub_1ACA51EA4(&qword_1EB76DE50, &qword_1EB76DE60);
  sub_1ACE75A28();
  return swift_release();
}

uint64_t sub_1ACD72D98()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  sub_1ACA51EA4(&qword_1EB76DE50, &qword_1EB76DE60);
  sub_1ACE75A28();
  return swift_release();
}

uint64_t sub_1ACD72E20(uint64_t a1)
{
  return sub_1ACD72EFC(a1, (uint64_t)&unk_1F039B508, (void (*)(unsigned char *, uint64_t))sub_1ACA3AABC, (uint64_t)sub_1ACD79570, (uint64_t)&block_descriptor_74);
}

uint64_t sub_1ACD72E5C(uint64_t a1, uint64_t a2)
{
  sub_1ACA3E158(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_1ACD79AC8((uint64_t)v4, a1 + 152);
  return swift_endAccess();
}

uint64_t sub_1ACD72EC0(uint64_t a1)
{
  return sub_1ACD72EFC(a1, (uint64_t)&unk_1F039B558, (void (*)(unsigned char *, uint64_t))sub_1ACA3AABC, (uint64_t)sub_1ACD79580, (uint64_t)&block_descriptor_6_0);
}

uint64_t sub_1ACD72EFC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a5;
  uint64_t v9 = sub_1ACE75DC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v5 + 16);
  sub_1ACA3E158(a1, (uint64_t)v25);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v5;
  a3(v25, v16 + 24);
  aBlock[4] = a4;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = v20;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
  return swift_release();
}

uint64_t sub_1ACD731D4(uint64_t a1, uint64_t a2)
{
  sub_1ACA3E158(a2, (uint64_t)v4);
  a1 += 112;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(a1);
  sub_1ACA3AABC(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1ACD73240()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76CD8();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D870);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D988);
  uint64_t v32 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB98);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  uint64_t v34 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v16);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v17 + 16))(v39, v16, v17);
  id v37 = v39[0];
  id v38 = v39[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BA20);
  sub_1ACA51EA4(&qword_1EB76BA18, &qword_1EB76BA20);
  sub_1ACE75B58();
  swift_release();
  swift_release();
  v39[0] = *(id *)(v0 + 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  sub_1ACA51EA4(&qword_1EB76D868, &qword_1EB76D870);
  sub_1ACA51EA4(&qword_1EB76DE58, &qword_1EB76DE60);
  sub_1ACE75BA8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  long long v18 = v29;
  sub_1ACE76CC8();
  v39[0] = *(id *)(v0 + 16);
  id v19 = v39[0];
  uint64_t v20 = sub_1ACE76CA8();
  uint64_t v21 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v31, 1, 1, v20);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76D980, &qword_1EB76D988);
  sub_1ACA93A6C();
  id v22 = v19;
  uint64_t v23 = v18;
  uint64_t v24 = v30;
  sub_1ACE75CB8();
  sub_1ACA50E78(v21, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v24);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1ACD79AC4;
  *(void *)(v25 + 24) = v0;
  sub_1ACA51EA4(&qword_1EB76DB90, &qword_1EB76DB98);
  swift_retain();
  uint64_t v26 = v33;
  uint64_t v27 = sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v26);
  *(void *)(v1 + 224) = v27;
  return swift_release();
}

uint64_t sub_1ACD73814()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v47 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE76CD8();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D870);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D8C8);
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA18);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DBA8);
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  int v40 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D670);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  uint64_t v50 = v17;
  MEMORY[0x1F4188790](v16);
  id v42 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[0] = *(id *)(v0 + 208);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE98);
  sub_1ACA51EA4(&qword_1EB76DE90, &qword_1EB76DE98);
  v37[1] = MEMORY[0x1E4FBC848] + 8;
  sub_1ACE75B58();
  swift_release();
  uint64_t v19 = *(void *)(v0 + 88);
  uint64_t v20 = *(void *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1(v1 + 8, v1[11]);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v20 + 8))(v55, v19, v20);
  id v53 = v55[0];
  id v54 = v55[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76BA20);
  sub_1ACA51EA4(&qword_1EB76BA18, &qword_1EB76BA20);
  sub_1ACE75B58();
  swift_release();
  swift_release();
  v55[0] = *(id *)(v0 + 192);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  sub_1ACA51EA4(&qword_1EB76D8C0, &qword_1EB76D8C8);
  sub_1ACA51EA4(&qword_1EB76D868, &qword_1EB76D870);
  sub_1ACA51EA4(&qword_1EB76DE58, &qword_1EB76DE60);
  uint64_t v21 = v8;
  uint64_t v22 = v39;
  sub_1ACE75BC8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v21);
  uint64_t v23 = v43;
  sub_1ACE76CC8();
  v55[0] = *(id *)(v0 + 16);
  id v24 = v55[0];
  uint64_t v25 = sub_1ACE76CA8();
  uint64_t v26 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v47, 1, 1, v25);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DA10, &qword_1EB76DA18);
  sub_1ACA93A6C();
  id v27 = v24;
  uint64_t v28 = v40;
  uint64_t v29 = v23;
  uint64_t v30 = v44;
  sub_1ACE75CB8();
  sub_1ACA50E78(v26, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v52);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v30);
  sub_1ACA51EA4(&qword_1EB76DBA0, &qword_1EB76DBA8);
  swift_retain();
  uint64_t v31 = v42;
  uint64_t v32 = v46;
  sub_1ACE75AE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v32);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1ACD79AC0;
  *(void *)(v33 + 24) = v0;
  sub_1ACA51EA4(&qword_1EB76D668, &qword_1EB76D670);
  swift_retain();
  uint64_t v34 = v49;
  uint64_t v35 = sub_1ACE75D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v34);
  v1[27] = v35;
  return swift_release();
}

void sub_1ACD7405C(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(a1 + 264);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 5;
  os_unfair_lock_lock(v3 + 5);
  sub_1ACA8ADD8(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6 != 1;
}

BOOL static DebouncedEpisodeAndShowProcessor.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACD740E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EE80);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x1F4188790](v5);
  int v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770410);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770378);
  uint64_t v41 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75118();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE75108();
  uint64_t v15 = sub_1ACE750C8();
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1ACE754C8();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB768C28);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1ACE75498();
  os_log_type_t v20 = sub_1ACE76BC8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = v10;
    uint64_t v49 = v38;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = sub_1ACD788F8();
    id v48 = (id)sub_1ACA3189C(v22, v23, &v49);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    id v48 = (id)sub_1ACA3189C(v15, v17, &v49);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v19, v20, "%s Starting to rebuild predicate: %s", (uint8_t *)v21, 0x16u);
    uint64_t v24 = v38;
    swift_arrayDestroy();
    uint64_t v10 = v39;
    MEMORY[0x1AD11B340](v24, -1, -1);
    MEMORY[0x1AD11B340](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v25 = sub_1ACD74FD8(v15, v17);
  id v48 = *(id *)(v1 + 16);
  id v26 = v48;
  uint64_t v49 = v25;
  uint64_t v27 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v4, 1, 1, v27);
  id v28 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE18);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DE10, &qword_1EB76DE18);
  sub_1ACA93A6C();
  uint64_t v29 = v40;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  swift_release();
  sub_1ACA51EA4(&qword_1EB7704A8, &qword_1EB76EE80);
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  sub_1ACE75C48();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v31);
  sub_1ACA50D4C(0, &qword_1EB76E198);
  sub_1ACA51EA4(&qword_1EB770408, &qword_1EB770410);
  uint64_t v32 = v46;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v32);
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = v1;
  v33[3] = v15;
  v33[4] = v17;
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v1;
  v34[3] = v15;
  v34[4] = v17;
  sub_1ACA51EA4(&qword_1EB770370, &qword_1EB770378);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v35 = v47;
  uint64_t v36 = sub_1ACE75B88();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v35);
  *(void *)(v1 + 232) = v36;
  return swift_release();
}

void sub_1ACD74858(void *a1@<X8>)
{
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v2);

  *a1 = v3;
}

uint64_t sub_1ACD748EC(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = *a1;
  uint64_t v8 = a2 + 152;
  swift_beginAccess();
  sub_1ACD7996C(v8, (uint64_t)&v26);
  if (v27)
  {
    sub_1ACA3AABC(&v26, (uint64_t)v28);
    if (v7)
    {
      uint64_t v9 = v29;
      uint64_t v10 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v11 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v10 + 32);
      id v12 = v7;
      v11(a2, v7, v9, v10);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  else
  {
    sub_1ACA50E78((uint64_t)&v26, &qword_1EB76CEF8);
  }
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1ACE754C8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB768C28);
  id v14 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  id v15 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1ACE75498();
  os_log_type_t v17 = sub_1ACE76BC8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v19 = sub_1ACD788F8();
    *(void *)&long long v26 = sub_1ACA3189C(v19, v20, v28);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v26 = sub_1ACA3189C(a3, a4, v28);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2080;
    *(void *)&long long v26 = v7;
    id v21 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD38);
    uint64_t v22 = sub_1ACE76228();
    *(void *)&long long v26 = sub_1ACA3189C(v22, v23, v28);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v16, v17, "%s Completed predicate rebuild (%s):  %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v25, -1, -1);
    MEMORY[0x1AD11B340](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  *(void *)(a2 + 232) = 0;
  return swift_release();
}

uint64_t sub_1ACD74C44(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1ACE754C8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB768C28);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v9 = v7;
  uint64_t v10 = sub_1ACE75498();
  os_log_type_t v11 = sub_1ACE76BC8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v21 = a3;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v14 = sub_1ACD788F8();
    sub_1ACA3189C(v14, v15, v26);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(v21, a4, v26);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2112;
    v23[0] = v9;
    id v16 = v9;
    sub_1ACE76FF8();
    void *v13 = v9;

    _os_log_impl(&dword_1AC9D5000, v10, v11, "%s Received new predicate for build (%s): %@", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v22, -1, -1);
    MEMORY[0x1AD11B340](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_retain();
  sub_1ACE758F8();
  swift_release();
  os_log_type_t v17 = (void *)v26[0];
  v26[0] = (uint64_t)v9;
  swift_retain();
  sub_1ACE758E8();
  swift_release();
  swift_beginAccess();
  sub_1ACD7996C(a2 + 152, (uint64_t)v26);
  if (v26[3])
  {
    sub_1ACA3E158((uint64_t)v26, (uint64_t)v23);
    sub_1ACA50E78((uint64_t)v26, &qword_1EB76CEF8);
    uint64_t v18 = v24;
    uint64_t v19 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t, void *, id, uint64_t, uint64_t))(v19 + 8))(a2, v17, v9, v18, v19);

    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  }
  else
  {

    return sub_1ACA50E78((uint64_t)v26, &qword_1EB76CEF8);
  }
}

uint64_t sub_1ACD74FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770388);
  uint64_t v41 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770558);
  uint64_t v42 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7707D8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3E158(v2 + 24, (uint64_t)v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76FE88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76FDF0);
  if (swift_dynamicCast())
  {
    sub_1ACA3AABC(&v43, (uint64_t)v47);
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v40 = v6;
    uint64_t v41 = v10;
    uint64_t v13 = sub_1ACE754C8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB768C28);
    swift_retain_n();
    uint64_t v14 = sub_1ACE75498();
    os_log_type_t v15 = sub_1ACE76BC8();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v39 = v9;
      uint64_t v18 = v17;
      v46[0] = v17;
      *(_DWORD *)id v16 = 136315138;
      uint64_t v19 = sub_1ACD788F8();
      *(void *)&long long v43 = sub_1ACA3189C(v19, v20, v46);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v14, v15, "%s Using episode-only predicate", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v21 = v18;
      uint64_t v9 = v39;
      MEMORY[0x1AD11B340](v21, -1, -1);
      MEMORY[0x1AD11B340](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v29 = v48;
    uint64_t v30 = v49;
    __swift_project_boxed_opaque_existential_1(v47, v48);
    v46[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
    sub_1ACE759C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
    uint64_t v31 = v40;
    sub_1ACE75998();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v31);
    sub_1ACA51EA4(&qword_1EB7707D0, &qword_1EB7707D8);
    uint64_t v32 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v9);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    return v32;
  }
  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  sub_1ACA50E78((uint64_t)&v43, qword_1EB76FDF8);
  sub_1ACA3E158(v2 + 24, (uint64_t)v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76FE90);
  if (swift_dynamicCast())
  {
    sub_1ACA3AABC(&v43, (uint64_t)v47);
    if (qword_1EB768C48 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1ACE754C8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB768C28);
    swift_retain_n();
    unint64_t v23 = sub_1ACE75498();
    os_log_type_t v24 = sub_1ACE76BC8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v46[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v27 = sub_1ACD788F8();
      *(void *)&long long v43 = sub_1ACA3189C(v27, v28, v46);
      sub_1ACE76FF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AC9D5000, v23, v24, "%s Using per-show predicate", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v26, -1, -1);
      MEMORY[0x1AD11B340](v25, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_1ACD75850(v39, v40, v47, (uint64_t)v5);
    sub_1ACA51EA4(&qword_1EB770380, &qword_1EB770388);
    uint64_t v32 = sub_1ACE75AD8();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v3);
    goto LABEL_20;
  }
  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  sub_1ACA50E78((uint64_t)&v43, &qword_1E99F59B0);
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v33 = v6;
  uint64_t v34 = sub_1ACE754C8();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EB768C28);
  uint64_t v35 = sub_1ACE75498();
  os_log_type_t v36 = sub_1ACE76BE8();
  if (os_log_type_enabled(v35, v36))
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v37 = 0;
    _os_log_impl(&dword_1AC9D5000, v35, v36, "Received an invalid data source with the base protocol. Nothing will be evaluated", v37, 2u);
    MEMORY[0x1AD11B340](v37, -1, -1);
  }

  v47[0] = objc_msgSend(self, sel_falsePredicate, v39, v40);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v33);
  sub_1ACA51EA4(&qword_1EB7707D0, &qword_1EB7707D8);
  uint64_t v32 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v32;
}

uint64_t sub_1ACD75850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v58 = a1;
  uint64_t v72 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DC40);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  uint64_t v60 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769580);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v64 = v15;
  uint64_t v65 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v57 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DB80);
  uint64_t v69 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v61 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD20);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v67 = v19;
  uint64_t v68 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v62 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DA78);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v70 = v22;
  uint64_t v71 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v63 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v5[32];
  uint64_t v25 = v5[11];
  uint64_t v26 = v5[12];
  __swift_project_boxed_opaque_existential_1(v5 + 8, v25);
  uint64_t v49 = a3;
  uint64_t v28 = a3[3];
  uint64_t v27 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v28);
  uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v28, v27);
  uint64_t v30 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 40))(v29, v25, v26);

  *(void *)&v73[0] = v30;
  id v74 = (id)v5[2];
  id v31 = v74;
  uint64_t v55 = sub_1ACE76CA8();
  uint64_t v32 = *(void *)(v55 - 8);
  id v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v56 = v32 + 56;
  v54(v10, 1, 1, v55);
  id v53 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DDC8);
  uint64_t v51 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76DDC0, &qword_1EB76DDC8);
  unint64_t v52 = sub_1ACA93A6C();
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v10, &qword_1EB7669C8);

  swift_release();
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v58;
  v33[2] = v5;
  v33[3] = v34;
  v33[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DBF0);
  uint64_t v58 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4(&qword_1EB76DC38, &qword_1EB76DC40);
  sub_1ACA51EA4(&qword_1EB76DBE8, &qword_1EB76DBF0);
  uint64_t v35 = v57;
  uint64_t v36 = v59;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v36);
  sub_1ACA3E158((uint64_t)v49, (uint64_t)v73);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v5;
  sub_1ACA3AABC(v73, v37 + 24);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772260);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D958);
  sub_1ACA51EA4(&qword_1EB76DB88, &qword_1EB769580);
  sub_1ACA51EA4(&qword_1EB76D950, &qword_1EB76D958);
  uint64_t v38 = v61;
  uint64_t v39 = v64;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v39);
  uint64_t v40 = v53;
  *(void *)&v73[0] = v53;
  v54(v10, 1, 1, v55);
  sub_1ACA51EA4(&qword_1EB76DB78, &qword_1EB76DB80);
  id v41 = v40;
  uint64_t v42 = v62;
  uint64_t v43 = v66;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v10, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v43);
  sub_1ACA51EA4(&qword_1EB76DD18, &qword_1EB76DD20);
  long long v44 = v63;
  uint64_t v45 = v67;
  sub_1ACE75C48();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v45);
  sub_1ACA51EA4(&qword_1EB76DA70, &qword_1EB76DA78);
  uint64_t v46 = v70;
  sub_1ACE75B58();
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v44, v46);
}

uint64_t sub_1ACD760E0(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE754C8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB768C28);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_1ACE75498();
  os_log_type_t v9 = sub_1ACE76BD8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = sub_1ACD788F8();
    sub_1ACA3189C(v11, v12, &v19);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(a3, a4, &v19);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x1AD118740](v13, MEMORY[0x1E4FBB1A0]);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_1ACA3189C(v14, v16, &v19);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AC9D5000, v8, v9, "%s Building new predicate for shows (%s): %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v18, -1, -1);
    MEMORY[0x1AD11B340](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v19 = v6;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  sub_1ACA51EA4(&qword_1EB76E090, &qword_1EB7731B8);
  return sub_1ACE75728();
}

uint64_t sub_1ACD763FC(uint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = a1[1];
  uint64_t v16 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1ACE754C8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB768C28);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76BD8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = sub_1ACD788F8();
    sub_1ACA3189C(v10, v11, &v17);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v12 = v16;
    sub_1ACA3189C(v16, v4, &v17);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AC9D5000, v6, v7, "%s Constructing predicate for show %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v9, -1, -1);
    MEMORY[0x1AD11B340](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v12 = v16;
  }
  uint64_t v13 = a3[3];
  uint64_t v14 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v13);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 24))(v12, v4, v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE18);
  sub_1ACA51EA4(&qword_1EB76DE10, &qword_1EB76DE18);
  sub_1ACE75B68();
  return swift_release();
}

uint64_t sub_1ACD766BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D9A8);
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  os_log_type_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DCC0);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D938);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DAC8);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v48 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76DCE0);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v50 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1ACE758F8();
  swift_release();
  id v14 = v59[0];
  swift_beginAccess();
  sub_1ACD7996C(v0 + 152, (uint64_t)v59);
  if (v59[3])
  {
    sub_1ACA3E158((uint64_t)v59, (uint64_t)&v56);
    sub_1ACA50E78((uint64_t)v59, &qword_1EB76CEF8);
    uint64_t v15 = v57;
    uint64_t v16 = v58;
    __swift_project_boxed_opaque_existential_1(&v56, v57);
    (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v16 + 16))(v0, v14, v15, v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v56);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v59, &qword_1EB76CEF8);
  }
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 64), v17);
  v59[0] = (id)(*(uint64_t (**)(id, uint64_t, uint64_t))(v18 + 48))(v14, v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DDC8);
  id v35 = v14;
  uint64_t v42 = MEMORY[0x1E4F1AAE8];
  sub_1ACA51EA4(&qword_1EB76DDC0, &qword_1EB76DDC8);
  sub_1ACE75C08();
  swift_release();
  v59[0] = *(id *)(v0 + 16);
  id v19 = v59[0];
  uint64_t v40 = sub_1ACE76CA8();
  uint64_t v20 = *(void *)(v40 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v41 = v20 + 56;
  v39(v4, 1, 1, v40);
  uint64_t v38 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB76D9A0, &qword_1EB76D9A8);
  unint64_t v37 = sub_1ACA93A6C();
  id v36 = v19;
  uint64_t v21 = v43;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772580);
  uint64_t v43 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4(&qword_1EB76DCB8, &qword_1EB76DCC0);
  uint64_t v22 = v45;
  sub_1ACE75B58();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v22);
  swift_beginAccess();
  sub_1ACA3E158(v0 + 112, (uint64_t)v59);
  sub_1ACA3E158((uint64_t)v59, (uint64_t)&v56);
  uint64_t v23 = swift_allocObject();
  sub_1ACA3AABC(&v56, v23 + 16);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1ACD799D4;
  *(void *)(v24 + 24) = v23;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE28);
  sub_1ACA51EA4(&qword_1EB76D930, &qword_1EB76D938);
  sub_1ACA51EA4(&qword_1EB76DE20, &qword_1EB76DE28);
  uint64_t v25 = v48;
  uint64_t v26 = v47;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v26);
  uint64_t v27 = v36;
  v59[0] = v36;
  v39(v4, 1, 1, v40);
  sub_1ACA51EA4(&qword_1EB76DAC0, (uint64_t *)&unk_1EB76DAC8);
  id v28 = v27;
  uint64_t v29 = v50;
  uint64_t v30 = v51;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v30);
  sub_1ACA51EA4(&qword_1EB76DCD8, (uint64_t *)&unk_1EB76DCE0);
  swift_retain();
  uint64_t v31 = v53;
  uint64_t v32 = sub_1ACE75B88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v31);
  *(void *)(v1 + 240) = v32;
  swift_release();
  sub_1ACA3E158(v1 + 112, (uint64_t)&v56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76FE80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770108);
  if (swift_dynamicCast())
  {
    sub_1ACA3AABC(v54, (uint64_t)v59);
    sub_1ACD773A4((uint64_t)v59);

    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
  }
  else
  {
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));

    return sub_1ACA50E78((uint64_t)v54, &qword_1EB770110);
  }
}

uint64_t sub_1ACD770B0(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1ACE754C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB768C28);
  swift_retain();
  id v5 = v3;
  swift_retain();
  id v6 = v3;
  os_log_type_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v24[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = sub_1ACD788F8();
    sub_1ACA3189C(v11, v12, v24);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    id v13 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD38);
    uint64_t v14 = sub_1ACE76228();
    v21[0] = sub_1ACA3189C(v14, v15, v24);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v7, v8, "%s Finished update for new matches: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  *(void *)(a2 + 240) = 0;
  swift_release();
  swift_beginAccess();
  sub_1ACD7996C(a2 + 152, (uint64_t)v24);
  if (!v24[3]) {
    return sub_1ACA50E78((uint64_t)v24, &qword_1EB76CEF8);
  }
  sub_1ACA3E158((uint64_t)v24, (uint64_t)v21);
  sub_1ACA50E78((uint64_t)v24, &qword_1EB76CEF8);
  uint64_t v16 = v22;
  uint64_t v17 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  uint64_t v18 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v17 + 24);
  id v19 = v3;
  v18(a2, v3, v16, v17);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
}

uint64_t sub_1ACD773A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v53 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7703F0);
  uint64_t v6 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  os_log_type_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704C8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v49 = v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770430);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v47 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770420);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  uint64_t v56 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704D8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v57 = v17;
  uint64_t v58 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v51 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v1[11];
  uint64_t v21 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v20);
  swift_retain();
  sub_1ACE758F8();
  swift_release();
  uint64_t v22 = *(void **)&v59[0];
  id v23 = [*(id *)&v59[0] NOT];

  uint64_t v24 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v21 + 56))(v23, v20, v21);
  *(void *)&v59[0] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7704F8);
  v42[3] = MEMORY[0x1E4F1AAE8];
  sub_1ACA51EA4(&qword_1EB7704F0, &qword_1EB7704F8);
  sub_1ACE75C08();
  swift_release();
  *(void *)&v59[0] = v2[2];
  uint64_t v25 = *(void **)&v59[0];
  uint64_t v44 = sub_1ACE76CA8();
  uint64_t v26 = *(void *)(v44 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v45 = v26 + 56;
  v43(v5, 1, 1, v44);
  v42[2] = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1EB7703E8, &qword_1EB7703F0);
  v42[1] = sub_1ACA93A6C();
  v42[0] = v25;
  uint64_t v27 = v46;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v27);
  uint64_t v28 = v2[13];
  *(void *)(swift_allocObject() + 16) = v28;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770460);
  uint64_t v46 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4(&qword_1EB7704C0, &qword_1EB7704C8);
  sub_1ACA51EA4(&qword_1EB770458, &qword_1EB770460);
  uint64_t v29 = v47;
  uint64_t v30 = v48;
  sub_1ACE75C68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v30);
  sub_1ACA3E158(v53, (uint64_t)v59);
  uint64_t v31 = swift_allocObject();
  sub_1ACA3AABC(v59, v31 + 16);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1ACD79890;
  *(void *)(v32 + 24) = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE28);
  sub_1ACA51EA4(&qword_1EB770428, &qword_1EB770430);
  sub_1ACA51EA4(&qword_1EB76DE20, &qword_1EB76DE28);
  uint64_t v33 = v50;
  uint64_t v34 = v52;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v34);
  id v35 = (void *)v42[0];
  *(void *)&v59[0] = v42[0];
  v43(v5, 1, 1, v44);
  sub_1ACA51EA4(&qword_1EB770418, &qword_1EB770420);
  id v36 = v35;
  unint64_t v37 = v51;
  uint64_t v38 = v55;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v5, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v38);
  sub_1ACA51EA4(&qword_1EB7704D0, &qword_1EB7704D8);
  swift_retain();
  uint64_t v39 = v57;
  uint64_t v40 = sub_1ACE75B88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v39);
  v2[31] = v40;
  return swift_release();
}

BOOL sub_1ACD77C1C(void *a1)
{
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1ACE77508();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v1 != 0;
}

uint64_t *sub_1ACD77C80(uint64_t *result, uint64_t a2)
{
  uint64_t v3 = *result;
  if ((unint64_t)*result >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77508();
    double result = (uint64_t *)swift_bridgeObjectRelease();
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    *(void *)(v4 + 24) = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770788);
    sub_1ACA51EA4(&qword_1EB770780, &qword_1EB770788);
    sub_1ACE763B8();
    return (uint64_t *)swift_release();
  }
  __break(1u);
  return result;
}

uint64_t *sub_1ACD77D98@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *result;
  uint64_t v8 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1ACE77508();
    double result = (uint64_t *)swift_bridgeObjectRelease();
    if (v10 >= v8) {
      uint64_t v10 = v8;
    }
    if (v10 < v7) {
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1ACE77508();
    double result = (uint64_t *)swift_bridgeObjectRelease();
    if (v21 >= v7) {
      goto LABEL_8;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = a3;
  uint64_t v4 = a4;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62) {
    goto LABEL_24;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 >= v8) {
    uint64_t v10 = *result + a2;
  }
  else {
    uint64_t v10 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v7) {
    goto LABEL_32;
  }
  if (v9 < v7) {
    goto LABEL_28;
  }
LABEL_8:
  if (v7 < 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1ACE77508();
    double result = (uint64_t *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v11 < v10) {
    goto LABEL_30;
  }
  if (v10 < 0)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v5 & 0xC000000000000001) != 0 && v7 != v10)
  {
    if (v7 < (unint64_t)v10)
    {
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
      uint64_t v12 = v7;
      do
      {
        uint64_t v13 = v12 + 1;
        sub_1ACE772B8();
        uint64_t v12 = v13;
      }
      while (v10 != v13);
      goto LABEL_19;
    }
LABEL_33:
    __break(1u);
    return result;
  }
LABEL_19:
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1ACE77518();
    uint64_t v14 = v16;
    uint64_t v7 = v17;
    unint64_t v15 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (id *)((v5 & 0xFFFFFFFFFFFFFF8) + 32);
    unint64_t v15 = (2 * v10) | 1;
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = sub_1ACD78B1C(v14, v7, v15);
  swift_unknownObjectRelease();
  uint64_t v20 = sub_1ACDF74D0((uint64_t)v19);
  double result = (uint64_t *)swift_bridgeObjectRelease();
  *uint64_t v4 = v20;
  return result;
}

uint64_t sub_1ACD77FB0(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (qword_1EB768C48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1ACE754C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB768C28);
  swift_retain();
  id v5 = v3;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = sub_1ACE75498();
  os_log_type_t v8 = sub_1ACE76BC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = sub_1ACD788F8();
    sub_1ACA3189C(v11, v12, &v17);
    sub_1ACE76FF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    id v13 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD38);
    uint64_t v14 = sub_1ACE76228();
    sub_1ACA3189C(v14, v15, &v17);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AC9D5000, v7, v8, "%s Finished update for inverted matches: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v10, -1, -1);
    MEMORY[0x1AD11B340](v9, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  *(void *)(a2 + 248) = 0;
  return swift_release();
}

uint64_t sub_1ACD781F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  os_log_type_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(os_unfair_lock_s **)(v0 + 264);
  uint64_t v10 = v9 + 4;
  uint64_t v11 = v9 + 5;
  os_unfair_lock_lock(v9 + 5);
  sub_1ACBFB138(v10);
  os_unfair_lock_unlock(v11);
  aBlock[4] = sub_1ACD79B38;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_92_1;
  unint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  return swift_release();
}

uint64_t sub_1ACD784C8(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 264);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACBF8AA8(v2);
  os_unfair_lock_unlock(v3);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  sub_1ACA51EA4(&qword_1EB76DE50, &qword_1EB76DE60);
  sub_1ACE75A28();
  swift_release();
  swift_retain();
  sub_1ACE75A28();
  return swift_release();
}

uint64_t sub_1ACD785AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1ACE75DC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE75E48();
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  os_log_type_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(os_unfair_lock_s **)(v0 + 264);
  uint64_t v10 = v9 + 4;
  uint64_t v11 = v9 + 5;
  os_unfair_lock_lock(v9 + 5);
  sub_1ACBF9AD4(v10);
  os_unfair_lock_unlock(v11);
  aBlock[4] = sub_1ACD79B30;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_89_0;
  unint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1ACB23198((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v8, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  return swift_release();
}

void sub_1ACD7887C(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 264);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1ACD788E0(v2);
  os_unfair_lock_unlock(v3);
}

unsigned char *sub_1ACD788E0(unsigned char *result)
{
  if (*result == 2) {
    *double result = 3;
  }
  return result;
}

uint64_t sub_1ACD788F8()
{
  uint64_t v1 = v0;
  if (v0[35])
  {
    uint64_t v2 = v0[34];
  }
  else
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    __swift_project_boxed_opaque_existential_1(v0 + 3, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    uint64_t v2 = 91;
    v1[34] = 91;
    v1[35] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DebouncedEpisodeAndShowProcessor.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 112);
  sub_1ACA50E78(v0 + 152, &qword_1EB76CEF8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DebouncedEpisodeAndShowProcessor.__deallocating_deinit()
{
  DebouncedEpisodeAndShowProcessor.deinit();
  return swift_deallocClassInstance();
}

uint64_t DebouncedEpisodeAndShowProcessor.State.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t DebouncedEpisodeAndShowProcessor.State.hashValue.getter()
{
  return sub_1ACE77B78();
}

id *sub_1ACD78B1C(id *result, uint64_t a2, unint64_t a3)
{
  int64_t v12 = a3 >> 1;
  uint64_t v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return (id *)v4;
  }
  id v5 = result;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  double result = (id *)sub_1ACC82FB8(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    uint64_t v4 = v14;
    while (1)
    {
      uint64_t v7 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      if (a2 + v6 >= v12 || v6 >= v3) {
        goto LABEL_13;
      }
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v8 = *(void *)(v14 + 24);
      double result = (id *)*(&v5[a2] + v6);
      uint64_t v10 = result;
      if (v9 >= v8 >> 1) {
        double result = (id *)sub_1ACC82FB8(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      uint64_t v11 = v14 + 24 * v9;
      *(void *)(v11 + 32) = v10;
      *(void *)(v11 + 40) = 0;
      *(unsigned char *)(v11 + 48) = 1;
      ++v6;
      if (v7 == v3) {
        return (id *)v4;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1ACD78C58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v42 = a5;
  uint64_t v41 = a3;
  uint64_t v40 = sub_1ACE76CE8();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v38 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v36);
  unint64_t v37 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v20 - 8);
  v35[1] = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v48[3] = a8;
  v48[4] = a11;
  v35[0] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  void v47[3] = a7;
  v47[4] = a10;
  id v23 = __swift_allocate_boxed_opaque_existential_1(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v23, a2, a7);
  v46[3] = a9;
  v46[4] = a12;
  uint64_t v24 = __swift_allocate_boxed_opaque_existential_1(v46);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v24, v41, a9);
  *(_OWORD *)(a6 + 152) = 0u;
  *(_OWORD *)(a6 + 168) = 0u;
  *(void *)(a6 + 184) = 0;
  *(_OWORD *)(a6 + 216) = 0u;
  *(_OWORD *)(a6 + 232) = 0u;
  *(void *)(a6 + 248) = 0;
  *(void *)(a6 + 256) = 5;
  *(void *)(a6 + 272) = 0;
  *(void *)(a6 + 280) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE60);
  swift_allocObject();
  *(void *)(a6 + 192) = sub_1ACE758B8();
  swift_allocObject();
  *(void *)(a6 + 200) = sub_1ACE758B8();
  sub_1ACA3E158((uint64_t)v48, a6 + 24);
  sub_1ACA3E158((uint64_t)v47, a6 + 64);
  sub_1ACA3E158((uint64_t)v48, (uint64_t)v45);
  if (a4)
  {
    uint64_t v25 = (uint64_t)a4;
  }
  else
  {
    uint64_t v41 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
    unint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_1ACE77268();
    swift_bridgeObjectRelease();
    unint64_t v43 = 0xD00000000000001DLL;
    unint64_t v44 = 0x80000001ACECBA90;
    __swift_project_boxed_opaque_existential_1(v45, v45[3]);
    (*(void (**)(uint64_t))(v35[0] + 8))(a8);
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    v35[0] = v43;
    sub_1ACE75E08();
    unint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1ACB23198((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
    sub_1ACE770E8();
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x1E4FBCC58], v40);
    uint64_t v25 = sub_1ACE76D28();
  }
  id v26 = a4;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  *(void *)(a6 + 16) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3B8);
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 20) = 0;
  *(unsigned char *)(v27 + 16) = 3;
  *(void *)(a6 + 264) = v27;
  v45[0] = objc_msgSend(self, sel_falsePredicate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE98);
  swift_allocObject();
  *(void *)(a6 + 208) = sub_1ACE75938();
  sub_1ACA3E158((uint64_t)v46, a6 + 112);
  *(void *)(a6 + 104) = v42;
  uint64_t v28 = *(void *)(a6 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a6 + 64), *(void *)(a6 + 88));
  uint64_t v29 = *(void *)(a6 + 48);
  uint64_t v30 = *(void *)(a6 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(a6 + 24), v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
  (*(void (**)(void))(v28 + 24))();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a6 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(a6 + 64), *(void *)(a6 + 88));
  uint64_t v32 = *(void *)(a6 + 48);
  uint64_t v33 = *(void *)(a6 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(a6 + 24), v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
  (*(void (**)(void))(v31 + 32))();
  swift_bridgeObjectRelease();
  sub_1ACD73240();
  sub_1ACD73814();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  return a6;
}

uint64_t sub_1ACD79308(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, uint64_t a11)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  long long v32 = a10;
  uint64_t v13 = *(void *)(a9 - 8);
  uint64_t v30 = a11;
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebouncedEpisodeAndShowProcessor();
  uint64_t v26 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v28, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v29, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v31, a9);
  return sub_1ACD78C58((uint64_t)v25, (uint64_t)v20, (uint64_t)v15, v33, v34, v26, a7, a8, a9, v32, *((uint64_t *)&v32 + 1), v30);
}

uint64_t sub_1ACD79570()
{
  return sub_1ACD72E5C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1ACD79580()
{
  return sub_1ACD731D4(*(void *)(v0 + 16), v0 + 24);
}

unint64_t sub_1ACD79590()
{
  unint64_t result = qword_1E99F59A8;
  if (!qword_1E99F59A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59A8);
  }
  return result;
}

uint64_t type metadata accessor for DebouncedEpisodeAndShowProcessor()
{
  return self;
}

uint64_t method lookup function for DebouncedEpisodeAndShowProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DebouncedEpisodeAndShowProcessor);
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.__allocating_init(interval:dataSource:storage:delegate:workQueue:inverseBatchSize:)()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.requestPredicateBuild()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.set(observer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DebouncedEpisodeAndShowProcessor.set(delegate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

unsigned char *storeEnumTagSinglePayload for DebouncedEpisodeAndShowProcessor.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD79808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebouncedEpisodeAndShowProcessor.State()
{
  return &type metadata for DebouncedEpisodeAndShowProcessor.State;
}

uint64_t sub_1ACD79840()
{
  return swift_deallocObject();
}

uint64_t *sub_1ACD79850(uint64_t *a1)
{
  return sub_1ACD77C80(a1, *(void *)(v1 + 16));
}

uint64_t sub_1ACD79858()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1ACD79890(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_1ACD798EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD79924(void **a1)
{
  return sub_1ACD77FB0(a1, v1);
}

uint64_t sub_1ACD7992C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *sub_1ACD79964@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACD77D98(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACD7996C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76CEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACD799D4(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1ACD79A30(void **a1)
{
  return sub_1ACD770B0(a1, v1);
}

uint64_t sub_1ACD79A3C(uint64_t *a1)
{
  return sub_1ACD760E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1ACD79A4C(uint64_t *a1)
{
  return sub_1ACD763FC(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_1ACD79A5C(void **a1)
{
  return sub_1ACD748EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t objectdestroy_69Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACD79AAC(void **a1)
{
  return sub_1ACD74C44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1ACD79AB8(BOOL *a1@<X8>)
{
  sub_1ACD7405C(v1, a1);
}

uint64_t sub_1ACD79AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76CEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1ACD79B30()
{
  sub_1ACD7887C(v0);
}

uint64_t sub_1ACD79B38()
{
  return sub_1ACD784C8(v0);
}

uint64_t NSUserDefaults.debugTranscriptCacheEnabled.getter()
{
  return sub_1ACABCBA4(0xD00000000000001BLL, 0x80000001ACECE970, 1);
}

uint64_t NSUserDefaults.debugOverrideAssetURL.getter()
{
  uint64_t v1 = (void *)sub_1ACE76178();
  id v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1ACE761B8();

  return v3;
}

id sub_1ACD79C18()
{
  uint64_t v0 = (void *)sub_1ACE76178();
  return v0;
}

unint64_t static NSUserDefaults.showListShowsAllShowsKey.getter()
{
  return 0xD000000000000018;
}

id sub_1ACD79C74(void *a1)
{
  id v1 = a1;
  id v2 = (void *)sub_1ACE76178();
  id v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

id NSUserDefaults.showListShowsAllShows.getter()
{
  id v1 = (void *)sub_1ACE76178();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1ACD79D40(void *a1)
{
  id v1 = a1;
  id v2 = (void *)sub_1ACE766C8();
  id v3 = (id)sub_1ACE76178();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);
}

void NSUserDefaults.showListShowsAllShows.setter()
{
}

id NSUserDefaults.showListSortType.getter()
{
  id result = objc_msgSend(v0, sel_stringForKey_, @"kShowsSortOrderKey");
  if (result)
  {
    id v2 = result;
    sub_1ACE761B8();

    LODWORD(result) = _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
    if (result == 8) {
      return 0;
    }
    else {
      return (id)result;
    }
  }
  return result;
}

id sub_1ACD79E64@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_stringForKey_, @"kShowsSortOrderKey");
  if (result)
  {
    uint64_t v4 = result;
    sub_1ACE761B8();

    id result = (id)_s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
    if (result == 8) {
      char v5 = 0;
    }
    else {
      char v5 = (char)result;
    }
  }
  else
  {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void NSUserDefaults.showListSortType.setter()
{
  id v1 = (id)sub_1ACE76178();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setValue_forKey_, v1, @"kShowsSortOrderKey");
}

void (*NSUserDefaults.showListSortType.modify(uint64_t a1))()
{
  id v2 = v1;
  *(void *)a1 = v2;
  id v4 = objc_msgSend(v2, sel_stringForKey_, @"kShowsSortOrderKey");
  if (v4)
  {
    char v5 = v4;
    sub_1ACE761B8();

    char v6 = _s18PodcastsFoundation13ShowsSortTypeO8rawValueACSgSS_tcfC_0();
    if (v6 == 8) {
      char v7 = 0;
    }
    else {
      char v7 = v6;
    }
  }
  else
  {
    char v7 = 0;
  }
  *(unsigned char *)(a1 + 8) = v7;
  return sub_1ACD7A110;
}

void sub_1ACD7A110()
{
}

id sub_1ACD7A138(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_dictionaryForKey_, @"kEpisodeListSortOrderKey");
  if (v2)
  {
    id v3 = v2;
    sub_1ACE75FF8();

    id v4 = (void *)sub_1ACE75FC8();
    swift_bridgeObjectRelease();
  }
  else
  {

    id v4 = 0;
  }
  return v4;
}

uint64_t NSUserDefaults.episodeListSortTypeDictionary.getter()
{
  id v1 = objc_msgSend(v0, sel_dictionaryForKey_, @"kEpisodeListSortOrderKey");
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1ACE75FF8();

  return v3;
}

uint64_t sub_1ACD7A28C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1ACE75FF8();
    id v4 = a1;
    uint64_t v5 = sub_1ACE75FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = a1;
    uint64_t v5 = 0;
  }
  objc_msgSend(a1, sel_setValue_forKey_, v5, @"kEpisodeListSortOrderKey");

  return swift_unknownObjectRelease();
}

uint64_t NSUserDefaults.episodeListSortTypeDictionary.setter(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = sub_1ACE75FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  objc_msgSend(v1, sel_setValue_forKey_, v2, @"kEpisodeListSortOrderKey");
  return swift_unknownObjectRelease();
}

void sub_1ACD7A3F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_episodeListSortTypeDictionary);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1ACE75FF8();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
}

void sub_1ACD7A46C(void *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1) {
    uint64_t v3 = sub_1ACE75FC8();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setEpisodeListSortTypeDictionary_);
}

id sub_1ACD7A4F0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  NSUserDefaults.lastAppUseDate.getter((uint64_t)v4);

  uint64_t v6 = sub_1ACE750A8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    unint64_t v8 = (void *)sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return v8;
}

uint64_t NSUserDefaults.lastAppUseDate.getter@<X0>(uint64_t a1@<X8>)
{
  if (objc_msgSend(v1, sel_objectForKey_, @"MTLastAppUseDate"))
  {
    sub_1ACE770C8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1ACA9D6FC((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    uint64_t v3 = sub_1ACE750A8();
    int v4 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, v4 ^ 1u, 1, v3);
  }
  else
  {
    sub_1ACA50E78((uint64_t)v8, qword_1EB7725E0);
    uint64_t v6 = sub_1ACE750A8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

void sub_1ACD7A744(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (a3)
  {
    sub_1ACE75078();
    uint64_t v11 = sub_1ACE750A8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  }
  else
  {
    uint64_t v11 = sub_1ACE750A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  sub_1ACA72A5C((uint64_t)v10, (uint64_t)v7);
  sub_1ACE750A8();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  id v14 = a1;
  uint64_t v15 = 0;
  if (v13 != 1)
  {
    uint64_t v15 = sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  objc_msgSend(v14, sel_setObject_forKey_, v15, @"MTLastAppUseDate");
  swift_unknownObjectRelease();
  sub_1ACA50E78((uint64_t)v10, (uint64_t *)&unk_1EB773140);
}

uint64_t NSUserDefaults.lastAppUseDate.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA72A5C(a1, (uint64_t)v6);
  uint64_t v7 = sub_1ACE750A8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    uint64_t v9 = sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  objc_msgSend(v2, sel_setObject_forKey_, v9, @"MTLastAppUseDate");
  swift_unknownObjectRelease();
  return sub_1ACA50E78(a1, (uint64_t *)&unk_1EB773140);
}

uint64_t sub_1ACD7AA8C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_lastAppUseDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1ACE75078();

    uint64_t v5 = sub_1ACE750A8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1ACE750A8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

void sub_1ACD7AB54(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA72A5C(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1ACE75008();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setLastAppUseDate_, v10);
}

unint64_t static NSUserDefaults.debugTranscriptCacheEnabled.getter()
{
  return 0xD00000000000001BLL;
}

void sub_1ACD7AC9C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (void *)sub_1ACE766C8();
  id v4 = (id)sub_1ACE76178();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
}

void NSUserDefaults.debugTranscriptCacheEnabled.setter()
{
}

void sub_1ACD7AD3C()
{
  id v1 = (void *)sub_1ACE766C8();
  id v2 = (id)sub_1ACE76178();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);
}

void (*NSUserDefaults.debugTranscriptCacheEnabled.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1ACABCBA4(0xD00000000000001BLL, 0x80000001ACECE970, 1) & 1;
  return sub_1ACD7AE20;
}

void sub_1ACD7AE20(void **a1)
{
  uint64_t v1 = *a1;
  id v3 = (id)sub_1ACE766C8();
  id v2 = (void *)sub_1ACE76178();
  objc_msgSend(v1, sel_setValue_forKey_, v3, v2);
}

unint64_t static NSUserDefaults.debugOverrideAssetURL.getter()
{
  return 0xD000000000000015;
}

void sub_1ACD7AEC0(void **a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v4 = (void *)sub_1ACE76178();
  id v5 = objc_msgSend(v3, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1ACE761B8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

void sub_1ACD7AF58(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)sub_1ACE76178();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
  swift_unknownObjectRelease();
}

void NSUserDefaults.debugOverrideAssetURL.setter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = sub_1ACE76178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)sub_1ACE76178();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
  swift_unknownObjectRelease();
}

uint64_t (*NSUserDefaults.debugOverrideAssetURL.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  uint64_t v3 = (void *)sub_1ACE76178();
  id v4 = objc_msgSend(v1, sel_stringForKey_, v3);

  if (v4)
  {
    uint64_t v5 = sub_1ACE761B8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1ACD7B164;
}

uint64_t sub_1ACD7B164(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v6 = *(void **)(a1 + 16);
    uint64_t v7 = (void *)sub_1ACE76178();
    objc_msgSend(v6, sel_setValue_forKey_, v4, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      uint64_t v5 = sub_1ACE76178();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v8 = *(void **)(a1 + 16);
    uint64_t v7 = (void *)sub_1ACE76178();
    objc_msgSend(v8, sel_setValue_forKey_, v5, v7);
  }

  return swift_unknownObjectRelease();
}

char *keypath_get_selector_showListShowsAllShows()
{
  return sel_showListShowsAllShows;
}

id sub_1ACD7B290@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_showListShowsAllShows);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1ACD7B2C4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setShowListShowsAllShows_, *a1);
}

void sub_1ACD7B2DC()
{
}

char *keypath_get_selector_episodeListSortTypeDictionary()
{
  return sel_episodeListSortTypeDictionary;
}

char *keypath_get_selector_lastAppUseDate()
{
  return sel_lastAppUseDate;
}

uint64_t sub_1ACD7B32C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1ACABCBA4(0xD00000000000001BLL, 0x80000001ACECE970, 1);
  *a1 = result & 1;
  return result;
}

uint64_t AssetURLSessionProtocol.eraseToAnySession()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return AnyAssetBackgroundSession.init<A>(session:)((uint64_t)v8, AssociatedTypeWitness, a1, a2, a3);
}

uint64_t AnyAssetBackgroundSession.start(task:for:)()
{
  return (*v0)();
}

uint64_t AnyAssetBackgroundSession.init<A>(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1ACD7B614;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

uint64_t sub_1ACD7B58C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ACD7B614()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 16))();
}

uint64_t dispatch thunk of AssetURLSessionProtocol.start(task:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for AnyAssetBackgroundSession()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, unint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  int v23 = a8;
  uint64_t v22 = a6;
  HIDWORD(v21) = a4;
  MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, v10, a10);
  sub_1ACA3AAD4(a1, (uint64_t)v24, &qword_1EB772EA0);
  swift_bridgeObjectRetain();
  return EmitLifecycle.init(upstream:trace:name:verbose:context:definesInterval:)((uint64_t)v18, (uint64_t)v24, a2, a3, SBYTE4(v21), v23, v22, a7, a9, a5, a10);
}

uint64_t static EmitLifecycle.defaultVerbosity.getter()
{
  return 0;
}

uint64_t EmitLifecycle.init(upstream:trace:name:verbose:context:definesInterval:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v17 = *(void *)(a11 - 8);
  (*(void (**)(uint64_t))(v17 + 16))(a9);
  uint64_t v18 = (int *)type metadata accessor for EmitLifecycle();
  sub_1ACA3AAD4(a2, a9 + v18[9], &qword_1EB772EA0);
  uint64_t v19 = a9 + v18[10];
  *(void *)uint64_t v19 = a3;
  *(void *)(v19 + 8) = a4;
  *(unsigned char *)(v19 + 16) = a5;
  *(unsigned char *)(a9 + v18[12]) = a10;
  if (a8)
  {
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    uint64_t v20 = a7;
    unint64_t v21 = a8;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  sub_1ACA50E78(a2, &qword_1EB772EA0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a1, a11);
  int v23 = (void *)(a9 + v18[11]);
  *int v23 = v20;
  v23[1] = v21;
  *(unsigned char *)(a9 + v18[13]) = a6 & 1;
  return result;
}

uint64_t type metadata accessor for EmitLifecycle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t EmitLifecycle.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EmitLifecycle.trace.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(v2 + *(int *)(a1 + 36), a2, &qword_1EB772EA0);
}

uint64_t EmitLifecycle.name.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 40));
}

uint64_t EmitLifecycle.context.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t EmitLifecycle.definesInterval.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t EmitLifecycle.verbose.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t EmitLifecycle.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1ACA3AAD4(v5 + *(int *)(a2 + 36), (uint64_t)&v22, &qword_1EB772EA0);
  if (v24)
  {
    sub_1ACA3AABC(&v22, (uint64_t)v25);
    uint64_t v21 = *(void *)(a2 + 24);
    *(void *)&long long v22 = *(void *)(a2 + 16);
    *((void *)&v22 + 1) = a3;
    uint64_t v23 = v21;
    uint64_t v24 = a4;
    type metadata accessor for EmitLifecycle.LifecycleEmitting();
    sub_1ACA3E158((uint64_t)v25, (uint64_t)&v22);
    uint64_t v10 = v5 + *(int *)(a2 + 40);
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    int v13 = (uint64_t *)(v5 + *(int *)(a2 + 44));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(int *)(a2 + 52);
    int v17 = *(unsigned __int8 *)(v5 + *(int *)(a2 + 48));
    unsigned __int8 v18 = *(unsigned char *)(v5 + v16);
    char v19 = *(unsigned char *)(v10 + 16);
    swift_bridgeObjectRetain();
    *(void *)&long long v22 = sub_1ACD7DBC8(a1, (uint64_t)&v22, v11, v12, v19, v14, v15, v17, v18);
    swift_getWitnessTable();
    sub_1ACE75AB8();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  }
  else
  {
    sub_1ACA50E78((uint64_t)&v22, &qword_1EB772EA0);
    return sub_1ACE75AB8();
  }
}

uint64_t type metadata accessor for EmitLifecycle.LifecycleEmitting()
{
  return swift_getGenericMetadata();
}

uint64_t *EmitLifecycle.LifecycleEmitting.__allocating_init(subscriber:trace:name:context:definesInterval:verbose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  uint64_t v11 = sub_1ACD7DBC8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 88) - 8) + 8))(a1);
  return v11;
}

uint64_t sub_1ACD7BC7C(uint64_t a1)
{
  uint64_t v2 = sub_1ACE75518();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_1ACD7BDCC((uint64_t)v5);
}

uint64_t sub_1ACD7BD48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EB785948;
  swift_beginAccess();
  uint64_t v4 = sub_1ACE75518();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ACD7BDCC(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1EB785948;
  swift_beginAccess();
  uint64_t v4 = sub_1ACE75518();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1ACD7BE58())()
{
  return j__swift_endAccess;
}

uint64_t EmitLifecycle.LifecycleEmitting.subscriber.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 88) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 120));
}

uint64_t EmitLifecycle.LifecycleEmitting.trace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3E158(v1 + *(void *)(*(void *)v1 + 128), a1);
}

uint64_t EmitLifecycle.LifecycleEmitting.name.getter()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 136));
}

uint64_t EmitLifecycle.LifecycleEmitting.context.getter()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 144));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmitLifecycle.LifecycleEmitting.definesInterval.getter()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 152));
}

uint64_t EmitLifecycle.LifecycleEmitting.verbose.getter()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 160));
}

uint64_t *EmitLifecycle.LifecycleEmitting.init(subscriber:trace:name:context:definesInterval:verbose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  uint64_t v11 = *v9;
  uint64_t v12 = sub_1ACD7D8F4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v11 + 88) - 8) + 8))(a1);
  return v12;
}

uint64_t sub_1ACD7C070(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1ACE75518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  if (*((unsigned char *)v1 + *(void *)(*v1 + 160)) == 1)
  {
    uint64_t v9 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 128));
    uint64_t v27 = a1;
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    uint64_t v26 = __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v12 = (char *)v1 + *(void *)(*v1 + 136);
    uint64_t v13 = *(void *)v12;
    uint64_t v24 = *((void *)v12 + 1);
    uint64_t v25 = v13;
    uint64_t v14 = v12[16];
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1ACE77268();
    uint64_t v15 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 144));
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v29 = v17;
    unint64_t v30 = v16;
    sub_1ACE762C8();
    sub_1ACD7BD48((uint64_t)v7);
    uint64_t v18 = sub_1ACE754F8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v28 = v18;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v11 + 16))(v25, v24, v14, v29, v30, v10, v11);
    swift_bridgeObjectRelease();
    uint64_t v8 = *v2;
  }
  char v19 = *(os_unfair_lock_s **)((char *)v2 + *(void *)(v8 + 168));
  uint64_t v20 = (uint64_t)&v19[4];
  uint64_t v21 = v19 + 24;
  os_unfair_lock_lock(v19 + 24);
  sub_1ACD7C360(v20, (uint64_t)&v29);
  os_unfair_lock_unlock(v21);
  if (!v31) {
    return sub_1ACA50E78((uint64_t)&v29, &qword_1EB76DE38);
  }
  __swift_project_boxed_opaque_existential_1(&v29, v31);
  sub_1ACE75808();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v29);
}

uint64_t sub_1ACD7C360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACA3AAD4(a1, a2, &qword_1EB76DE38);
}

uint64_t sub_1ACD7C394()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(os_unfair_lock_s **)((char *)v0 + *(void *)(*v0 + 168));
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 24;
  os_unfair_lock_lock(v3 + 24);
  sub_1ACD7DC7C(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v7 = *(uint64_t **)(v1 + 80);
  long long v8 = *(_OWORD *)(v2 + 88);
  uint64_t v9 = type metadata accessor for EmitLifecycle.LifecycleEmitting();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = v0;
  swift_retain();
  sub_1ACE75778();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v7);
}

uint64_t sub_1ACD7C4E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = sub_1ACE75518();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a2;
  if (*((unsigned char *)a2 + *(void *)(*a2 + 152)) == 1)
  {
    uint64_t v12 = (uint64_t *)((char *)a2 + *(void *)(v11 + 128));
    uint64_t v13 = v12[4];
    uint64_t v34 = v12[3];
    uint64_t v33 = __swift_project_boxed_opaque_existential_1(v12, v34);
    uint64_t v14 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 136));
    uint64_t v37 = a3;
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    id v35 = v3;
    uint64_t v17 = *((unsigned __int8 *)v14 + 16);
    uint64_t v38 = sub_1ACE772A8();
    unint64_t v39 = v18;
    uint64_t v36 = a1;
    sub_1ACE762C8();
    sub_1ACD7BD48((uint64_t)v10);
    uint64_t v19 = sub_1ACE754F8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v40 = v19;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    uint64_t v20 = v15;
    a3 = v37;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v13 + 24))(&v38, v16, v20, v17, v38, v39, v34, v13);
    a1 = v36;
    swift_bridgeObjectRelease();
    sub_1ACD7EAE0((uint64_t)&v38, a1 + 40);
  }
  else if (*((unsigned char *)a2 + *(void *)(v11 + 160)) == 1)
  {
    uint64_t v21 = (uint64_t *)((char *)a2 + *(void *)(v11 + 128));
    uint64_t v22 = v21[3];
    uint64_t v23 = v21[4];
    id v35 = __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v24 = (uint64_t)a2 + *(void *)(*a2 + 136);
    uint64_t v25 = *(void *)v24;
    uint64_t v33 = *(void **)(v24 + 8);
    uint64_t v34 = v25;
    unsigned int v32 = *(unsigned __int8 *)(v24 + 16);
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    uint64_t v36 = a1;
    sub_1ACE77268();
    uint64_t v26 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 144));
    uint64_t v37 = a3;
    uint64_t v28 = *v26;
    unint64_t v27 = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v38 = v28;
    unint64_t v39 = v27;
    sub_1ACE762C8();
    sub_1ACD7BD48((uint64_t)v10);
    uint64_t v29 = sub_1ACE754F8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v40 = v29;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    (*(void (**)(uint64_t, void *, void, uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 16))(v34, v33, v32, v38, v39, v22, v23);
    a1 = v36;
    a3 = v37;
    swift_bridgeObjectRelease();
  }
  sub_1ACA50E78(a1, &qword_1EB76DE38);
  return sub_1ACA3E158(a3, a1);
}

void sub_1ACD7C8B8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + *(void *)(*(void *)v0 + 168));
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 24;
  os_unfair_lock_lock(v1 + 24);
  sub_1ACD7DC98(v2);
  os_unfair_lock_unlock(v3);
}

double sub_1ACD7C92C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1ACE75518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3AAD4(a1 + 40, (uint64_t)&v25, qword_1EB76AD60);
  if (!v26)
  {
    sub_1ACA50E78((uint64_t)&v25, qword_1EB76AD60);
    uint64_t v11 = (void *)(a2 + *(void *)(*(void *)a2 + 128));
    uint64_t v12 = v11[4];
    uint64_t v24 = v11[3];
    uint64_t v23 = __swift_project_boxed_opaque_existential_1(v11, v24);
    uint64_t v13 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 136));
    uint64_t v14 = *v13;
    uint64_t v21 = v13[1];
    uint64_t v22 = v14;
    unsigned int v20 = *((unsigned __int8 *)v13 + 16);
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1ACE77268();
    uint64_t v15 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 144));
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v27 = v17;
    unint64_t v28 = v16;
    sub_1ACE762C8();
    sub_1ACD7BD48((uint64_t)v7);
    uint64_t v18 = sub_1ACE754F8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)&long long v25 = v18;
    sub_1ACE777C8();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    sub_1ACE762C8();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 16))(v22, v21, v20, v27, v28, v24, v12);
    swift_bridgeObjectRelease();
    if (!*(void *)(a1 + 24)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  sub_1ACA3AABC(&v25, (uint64_t)&v27);
  uint64_t v8 = v29;
  uint64_t v9 = v30;
  __swift_project_boxed_opaque_existential_1(&v27, v29);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 8))(0x4C45434E4143, 0xE600000000000000, v8, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  if (*(void *)(a1 + 24))
  {
LABEL_3:
    sub_1ACA3E158(a1, (uint64_t)&v27);
    __swift_project_boxed_opaque_existential_1(&v27, v29);
    sub_1ACE75798();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  }
LABEL_4:
  sub_1ACA50E78(a1, &qword_1EB76DE38);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  sub_1ACA50E78(a1 + 40, qword_1EB76AD60);
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1ACD7CC5C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + *(void *)(*(void *)v0 + 168));
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 24;
  os_unfair_lock_lock(v1 + 24);
  sub_1ACD7DCB4(v2);
  os_unfair_lock_unlock(v3);
  return sub_1ACE75768();
}

double sub_1ACD7CD28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1ACE75518();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = sub_1ACE757A8();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v38[-v12];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v10 + 16))(&v38[-v12], a2, v9, v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v13, 1, AssociatedTypeWitness) == 1)
  {
    sub_1ACA3AAD4(a1 + 40, (uint64_t)&v47, qword_1EB76AD60);
    if (v48)
    {
      sub_1ACA3AABC(&v47, (uint64_t)&v49);
      uint64_t v14 = v51;
      uint64_t v15 = v52;
      __swift_project_boxed_opaque_existential_1(&v49, v51);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v15 + 8))(0x53534543435553, 0xE700000000000000, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v47, qword_1EB76AD60);
      uint64_t v18 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 128));
      uint64_t v19 = v18[3];
      uint64_t v20 = v18[4];
      __swift_project_boxed_opaque_existential_1(v18, v19);
      uint64_t v21 = *a3;
      uint64_t v22 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 136));
      uint64_t v23 = *v22;
      unint64_t v43 = (void *)v22[1];
      LODWORD(v42) = *((unsigned __int8 *)v22 + 16);
      uint64_t v24 = (uint64_t *)((char *)a3 + *(void *)(v21 + 144));
      uint64_t v25 = v24[1];
      uint64_t v49 = *v24;
      uint64_t v50 = v25;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      uint64_t v26 = v44;
      sub_1ACD7BD48((uint64_t)v44);
      uint64_t v27 = sub_1ACE754F8();
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v26, v46);
      *(void *)&long long v47 = v27;
      sub_1ACE777C8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      (*(void (**)(uint64_t, void *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16))(v23, v43, v42, v49, v50, v19, v20);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1ACA3AAD4(a1 + 40, (uint64_t)&v47, qword_1EB76AD60);
    if (v48)
    {
      sub_1ACA3AABC(&v47, (uint64_t)&v49);
      uint64_t v16 = v51;
      uint64_t v17 = v52;
      __swift_project_boxed_opaque_existential_1(&v49, v51);
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v17 + 8))(0x4552554C494146, 0xE700000000000000, v16, v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    }
    else
    {
      sub_1ACA50E78((uint64_t)&v47, qword_1EB76AD60);
      unint64_t v28 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 128));
      uint64_t v29 = v28[3];
      uint64_t v42 = v28[4];
      unint64_t v43 = __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v30 = *a3;
      uint64_t v31 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 136));
      uint64_t v32 = *v31;
      uint64_t v40 = v31[1];
      uint64_t v41 = v32;
      unsigned int v39 = *((unsigned __int8 *)v31 + 16);
      uint64_t v33 = (uint64_t *)((char *)a3 + *(void *)(v30 + 144));
      uint64_t v34 = v33[1];
      uint64_t v49 = *v33;
      uint64_t v50 = v34;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      id v35 = v44;
      sub_1ACD7BD48((uint64_t)v44);
      uint64_t v36 = sub_1ACE754F8();
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v35, v46);
      *(void *)&long long v47 = v36;
      sub_1ACE777C8();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      sub_1ACE762C8();
      (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v42 + 16))(v41, v40, v39, v49, v50, v29);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
  }
  sub_1ACA50E78(a1 + 40, qword_1EB76AD60);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  sub_1ACA50E78(a1, &qword_1EB76DE38);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_1ACD7D328(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_1ACE75518();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)((char *)v1 + *(void *)(v2 + 128));
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v7, v8);
  uint64_t v10 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 136));
  uint64_t v11 = *v10;
  uint64_t v18 = v10[1];
  uint64_t v19 = v11;
  HIDWORD(v17) = *((unsigned __int8 *)v10 + 16);
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1ACE77268();
  uint64_t v12 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 144));
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v14;
  unint64_t v24 = v13;
  sub_1ACE762C8();
  sub_1ACD7BD48((uint64_t)v6);
  uint64_t v15 = sub_1ACE754F8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v22 = v15;
  sub_1ACE777C8();
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  (*(void (**)(uint64_t, uint64_t, void, uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 16))(v19, v18, HIDWORD(v17), v23, v24, v8, v9);
  swift_bridgeObjectRelease();
  return sub_1ACE75788();
}

uint64_t *EmitLifecycle.LifecycleEmitting.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(os_unfair_lock_s **)((char *)v0 + *(void *)(*v0 + 168));
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 24;
  os_unfair_lock_lock(v3 + 24);
  sub_1ACD7D6F4(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = (uint64_t)v1 + qword_1EB785948;
  uint64_t v7 = sub_1ACE75518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 88) - 8) + 8))((uint64_t)v1 + *(void *)(*v1 + 120));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v1 + *(void *)(*v1 + 128));
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1ACD7D6F4(uint64_t a1)
{
  sub_1ACA3AAD4(a1 + 40, (uint64_t)&v4, qword_1EB76AD60);
  if (!v5) {
    return sub_1ACA50E78((uint64_t)&v4, qword_1EB76AD60);
  }
  sub_1ACA3AABC(&v4, (uint64_t)v6);
  uint64_t v1 = v7;
  uint64_t v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 8))(0x434F4C4C414544, 0xE700000000000000, v1, v2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t EmitLifecycle.LifecycleEmitting.__deallocating_deinit()
{
  EmitLifecycle.LifecycleEmitting.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1ACD7D808(uint64_t a1)
{
  return sub_1ACD7C070(a1);
}

uint64_t sub_1ACD7D82C()
{
  return sub_1ACD7C394();
}

uint64_t sub_1ACD7D850(uint64_t a1)
{
  return sub_1ACD7D328(a1);
}

uint64_t sub_1ACD7D874()
{
  return sub_1ACD7CC5C();
}

void sub_1ACD7D898()
{
}

uint64_t sub_1ACD7D8BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACD7BD48(a1);
}

uint64_t sub_1ACD7D8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return EmitLifecycle.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t *sub_1ACD7D8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  int v29 = a8;
  uint64_t v27 = a7;
  uint64_t v26 = a6;
  int v28 = a9;
  uint64_t v15 = *v9;
  uint64_t v16 = sub_1ACE75518();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACE75508();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v9 + qword_1EB785948, v19, v16);
  uint64_t v35 = 0;
  memset(v34, 0, sizeof(v34));
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  sub_1ACA50E14((uint64_t)v34, (uint64_t)v30, &qword_1EB76DE38);
  sub_1ACA50E14((uint64_t)v32, (uint64_t)&v31, qword_1EB76AD60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E3C0);
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 96) = 0;
  sub_1ACA3AAD4((uint64_t)v30, v20 + 16, &qword_1EB76DE30);
  sub_1ACA50E78((uint64_t)v30, &qword_1EB76DE30);
  *(uint64_t *)((char *)v9 + *(void *)(*v9 + 168)) = v20;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v15 + 88) - 8) + 16))((uint64_t)v9 + *(void *)(*v9 + 120), a1);
  sub_1ACA3E158(a2, (uint64_t)v9 + *(void *)(*v9 + 128));
  uint64_t v21 = (uint64_t)v9 + *(void *)(*v9 + 136);
  *(void *)uint64_t v21 = a3;
  *(void *)(v21 + 8) = a4;
  *(unsigned char *)(v21 + 16) = a5;
  __swift_destroy_boxed_opaque_existential_0(a2);
  uint64_t v22 = (uint64_t *)((char *)v9 + *(void *)(*v9 + 144));
  uint64_t v23 = v27;
  *uint64_t v22 = v26;
  v22[1] = v23;
  *((unsigned char *)v9 + *(void *)(*v9 + 152)) = v29;
  *((unsigned char *)v9 + *(void *)(*v9 + 160)) = v28;
  return v9;
}

uint64_t *sub_1ACD7DBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9)
{
  return sub_1ACD7D8F4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1ACD7DC7C(uint64_t a1)
{
  return sub_1ACD7C4E8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

double sub_1ACD7DC98(uint64_t a1)
{
  return sub_1ACD7C92C(a1, v1);
}

double sub_1ACD7DCB4(uint64_t a1)
{
  return sub_1ACD7CD28(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1ACD7DCD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACD7DCEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACD7DD08()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1ACD7DD28@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACD7BD48(a1);
}

uint64_t sub_1ACD7DD50()
{
  return 32;
}

__n128 sub_1ACD7DD5C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1ACD7DD68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACD7DE20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18 > 0x18)
  {
    uint64_t v9 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v12 = *(void *)(v11 + 24);
    if (v12 < 0xFFFFFFFF)
    {
      long long v13 = *(_OWORD *)v11;
      long long v14 = *(_OWORD *)(v11 + 16);
      *(void *)(v10 + 32) = *(void *)(v11 + 32);
      *(_OWORD *)unint64_t v10 = v13;
      *(_OWORD *)(v10 + 16) = v14;
    }
    else
    {
      *(void *)(v10 + 24) = v12;
      *(void *)(v10 + 32) = *(void *)(v11 + 32);
      (**(void (***)(unint64_t, unint64_t))(v12 - 8))(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8, v11);
    }
    unint64_t v15 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
    long long v17 = *(_OWORD *)v16;
    *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
    *(_OWORD *)unint64_t v15 = v17;
    unint64_t v18 = (v10 + 71) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = (v11 + 71) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v18 = *(void *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
    *(unsigned char *)(v18 + 17) = *(unsigned char *)(v19 + 17);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1ACD7DFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v4 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_0(v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD7E05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void *)(v8 + 24);
  if (v9 < 0xFFFFFFFF)
  {
    long long v10 = *(_OWORD *)v8;
    long long v11 = *(_OWORD *)(v8 + 16);
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    *(_OWORD *)unint64_t v7 = v10;
    *(_OWORD *)(v7 + 16) = v11;
  }
  else
  {
    *(void *)(v7 + 24) = v9;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  }
  unint64_t v12 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  long long v14 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(_OWORD *)unint64_t v12 = v14;
  unint64_t v15 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v15 = *(void *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  *(unsigned char *)(v15 + 17) = *(unsigned char *)(v16 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1ACD7E184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void *)(v8 + 24);
  if (*(void *)(v7 + 24) < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      *(void *)(v7 + 24) = v9;
      *(void *)(v7 + 32) = *(void *)(v8 + 32);
      (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
      goto LABEL_8;
    }
LABEL_7:
    long long v10 = *(_OWORD *)v8;
    long long v11 = *(_OWORD *)(v8 + 16);
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    *(_OWORD *)unint64_t v7 = v10;
    *(_OWORD *)(v7 + 16) = v11;
    goto LABEL_8;
  }
  if (v9 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_0(v7);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v7, (uint64_t *)v8);
LABEL_8:
  unint64_t v12 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  unint64_t v14 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(unsigned char *)(v14 + 17) = *(unsigned char *)(v15 + 17);
  return a1;
}

uint64_t sub_1ACD7E2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  unint64_t v11 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  char v13 = *(unsigned char *)(v12 + 16);
  *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
  *(unsigned char *)(v11 + 16) = v13;
  unint64_t v14 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(unsigned char *)(v14 + 17) = *(unsigned char *)(v15 + 17);
  return a1;
}

uint64_t sub_1ACD7E3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v7 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_0((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  unint64_t v11 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  unint64_t v13 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(unsigned char *)(v13 + 17) = *(unsigned char *)(v14 + 17);
  return a1;
}

uint64_t sub_1ACD7E4B8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18;
    unsigned int v9 = (a2 - v7 + 0xFFFF) >> (8 * v8);
    if (v8 <= 3) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v8);
        if (*(unsigned __int16 *)((char *)a1 + v8)) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACD7E630);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v8);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 <= 3)
        {
          int v16 = *a1;
        }
        else
        {
          int v15 = 0;
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1ACD7E644(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_30;
        default:
LABEL_30:
          if (a2)
          {
LABEL_31:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v20 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                void *v20 = a2 ^ 0x80000000;
                v20[1] = 0;
              }
              else
              {
                v20[1] = a2 - 1;
              }
            }
            else
            {
              unint64_t v19 = *(void (**)(void))(v6 + 56);
              v19();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 0xFFFF) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = v16 >> v11;
  bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8) + 18);
  if (v10 <= 3) {
    int v18 = v17 + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 > 3) {
    *(_DWORD *)a1 = v16;
  }
  else {
    *(_WORD *)a1 = v16;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1ACD7E860);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t sub_1ACD7E888()
{
  uint64_t result = sub_1ACE75518();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for EmitLifecycle.LifecycleEmitting(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EmitLifecycle.LifecycleEmitting);
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.combineIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.combineIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.combineIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.__allocating_init(subscriber:trace:name:context:definesInterval:verbose:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.request(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.receive(subscription:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.receive(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of EmitLifecycle.LifecycleEmitting.receive(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_1ACD7EAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76AD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ACD7EB48(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1ACC82D64(0, v1, 0);
  uint64_t v2 = v38;
  unint64_t result = sub_1ACC25F20(v3);
  uint64_t v6 = 0;
  uint64_t v7 = v3 + 64;
  uint64_t v29 = v3 + 80;
  int64_t v30 = v1;
  int v31 = v5;
  uint64_t v32 = v3 + 64;
  uint64_t v33 = v3;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v10 = result >> 6;
    if ((*(void *)(v7 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v34 = v6;
    uint64_t v35 = 1 << result;
    uint64_t v11 = *(void *)(v3 + 56);
    unsigned int v12 = (uint64_t *)(*(void *)(v3 + 48) + 96 * result);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[6];
    uint64_t v15 = v12[7];
    uint64_t v37 = v2;
    uint64_t v17 = v12[8];
    uint64_t v16 = v12[9];
    uint64_t v18 = v12[10];
    uint64_t v19 = *(void *)(v11 + 8 * result);
    int64_t v36 = result;
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v14, v15, v17, v16, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v14, v15, v17, v16, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1ACADC698(v14, v15, v17, v16, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v20 = v16;
    uint64_t v2 = v37;
    sub_1ACADC698(v14, v15, v17, v20, v18);
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v22 = *(void *)(v37 + 16);
    unint64_t v21 = *(void *)(v37 + 24);
    if (v22 >= v21 >> 1)
    {
      unint64_t result = sub_1ACC82D64(v21 > 1, v22 + 1, 1);
      uint64_t v2 = v37;
    }
    *(void *)(v2 + 16) = v22 + 1;
    uint64_t v23 = v2 + 16 * v22;
    *(void *)(v23 + 32) = v13;
    *(void *)(v23 + 40) = v19;
    uint64_t v3 = v33;
    int64_t v8 = 1 << *(unsigned char *)(v33 + 32);
    if (v36 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = v32;
    uint64_t v24 = *(void *)(v32 + 8 * v10);
    if ((v24 & v35) == 0) {
      goto LABEL_26;
    }
    int v5 = v31;
    if (*(_DWORD *)(v33 + 36) != v31) {
      goto LABEL_27;
    }
    unint64_t v25 = v24 & (-2 << (v36 & 0x3F));
    if (v25)
    {
      int64_t v8 = __clz(__rbit64(v25)) | v36 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v30;
    }
    else
    {
      unint64_t v26 = v10 + 1;
      unint64_t v27 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v30;
      if (v10 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v32 + 8 * v26);
        if (v28)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v10)
          {
            unint64_t v28 = *(void *)(v29 + 8 * v10++);
            if (v28)
            {
              unint64_t v26 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v34 + 1;
    unint64_t result = v8;
    if (v34 + 1 == v9) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t EpisodeStateDomain.rawValue.getter()
{
  uint64_t v1 = 0x7461745379616C70;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B72616D6B6F6F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64616F6C6E776F64;
  }
}

double PodcastStateModel.init(podcast:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1) {
    goto LABEL_10;
  }
  id v3 = a1;
  id v4 = objc_msgSend(v3, sel_uuid);
  if (!v4)
  {
LABEL_9:

LABEL_10:
    double result = 0.0;
    *(_OWORD *)(a2 + 27) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  int v5 = v4;
  uint64_t v6 = sub_1ACE761B8();
  uint64_t v8 = v7;

  uint64_t v9 = MTPodcast.identifier.getter();
  if (v11 == 0xFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v12 = v9;
  uint64_t v13 = v10;
  unsigned __int8 v14 = v11;
  unsigned __int16 v15 = (unsigned __int16)objc_msgSend(v3, sel_hidden);
  unsigned int v16 = objc_msgSend(v3, sel_subscribed);
  unsigned int v17 = objc_msgSend(v3, sel_isImplicitlyFollowed);

  if (v16) {
    __int16 v19 = 256;
  }
  else {
    __int16 v19 = 0;
  }
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 42) = v17 != 0;
  *(_WORD *)(a2 + 40) = v19 | v15;
  return result;
}

PodcastsFoundation::PodcastStateModel::SanitizedState __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PodcastStateModel.sanitizedState()()
{
  int v1 = v0[40];
  int v2 = v0[41];
  unsigned __int8 v3 = v0[42];
  if (v2 == 1)
  {
    if ((v3 & 1) == 0 && (v1 & 1) == 0) {
      return 0;
    }
    goto LABEL_7;
  }
  if (v3)
  {
    if (v1)
    {
LABEL_7:
      sub_1ACC6637C();
      swift_allocError();
      *int v5 = v2;
      v5[1] = v3;
      void v5[2] = v1;
      return swift_willThrow();
    }
    return 2;
  }
  else if (v1)
  {
    return 3;
  }
  else
  {
    return 1;
  }
}

PodcastsFoundation::EpisodeStateChanges __swiftcall EpisodeStateChanges.selectingUpdates(from:)(PodcastsFoundation::EpisodeStateDomain from)
{
  unsigned __int8 v3 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = v2[2];
  v11[16] = *(unsigned char *)from;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1ACD81834(v6, (uint64_t (*)(uint64_t *, uint64_t))sub_1ACC70560, (uint64_t)v11);
  swift_bridgeObjectRelease();
  *unsigned __int8 v3 = v4;
  v3[1] = v7;
  v3[2] = v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_bridgeObjectRetain();
  result.deleted._rawValue = v10;
  result.updated._rawValue = v9;
  result.inserted._rawValue = v8;
  return result;
}

BOOL EpisodeStateChanges.isEmpty.getter()
{
  if (*(void *)(*v0 + 16)) {
    return 0;
  }
  if (*(void *)(v0[1] + 16)) {
    return 0;
  }
  return *(void *)(v0[2] + 16) == 0;
}

double EpisodeStateModel.init(episode:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = MTEpisode.allEpisodeStateIdentifiers.getter();
  sub_1ACD7F9A8(a1, v4, (uint64_t)v13);
  uint64_t v5 = v14;
  __int16 v6 = v15;
  char v7 = v16;
  double result = *(double *)v13;
  long long v9 = v13[1];
  long long v10 = v13[2];
  long long v11 = v13[3];
  long long v12 = v13[4];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(void *)(a2 + 80) = v5;
  *(unsigned char *)(a2 + 90) = v7;
  *(_WORD *)(a2 + 88) = v6;
  return result;
}

PodcastsFoundation::EpisodeStateChanges __swiftcall EpisodeStateChanges.init(inserted:updated:deleted:)(Swift::OpaquePointer inserted, Swift::OpaquePointer updated, Swift::OpaquePointer deleted)
{
  v3->_rawValue = inserted._rawValue;
  v3[1]._rawValue = updated._rawValue;
  v3[2]._rawValue = deleted._rawValue;
  result.deleted = deleted;
  result.uint64_t updated = updated;
  result.inserted = inserted;
  return result;
}

uint64_t EpisodeStateDomain.propertiesToTrack.getter()
{
  if (*v0)
  {
    if (*v0 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1ACE8FAB0;
      *(void *)(v1 + 32) = sub_1ACE761B8();
      *(void *)(v1 + 40) = v2;
      *(void *)(v1 + 48) = sub_1ACE761B8();
      *(void *)(v1 + 56) = v3;
      *(void *)(v1 + 64) = sub_1ACE761B8();
      *(void *)(v1 + 72) = v4;
      *(void *)(v1 + 80) = sub_1ACE761B8();
      *(void *)(v1 + 88) = v5;
      *(void *)(v1 + 96) = sub_1ACE761B8();
      *(void *)(v1 + 104) = v6;
      *(void *)(v1 + 112) = sub_1ACE761B8();
      *(void *)(v1 + 120) = v7;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1ACE843F0;
      *(void *)(v1 + 32) = sub_1ACE761B8();
      *(void *)(v1 + 40) = v10;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1ACE84820;
    *(void *)(v1 + 32) = sub_1ACE761B8();
    *(void *)(v1 + 40) = v8;
    *(void *)(v1 + 48) = sub_1ACE761B8();
    *(void *)(v1 + 56) = v9;
  }
  return v1;
}

PodcastsFoundation::EpisodeStateDomain_optional __swiftcall EpisodeStateDomain.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1ACE775B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static EpisodeStateDomain.allCases.getter()
{
  return &unk_1F0381238;
}

uint64_t sub_1ACD7F380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ACCF5DE4(*a1, *a2);
}

uint64_t sub_1ACD7F38C()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD7F43C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD7F4D8()
{
  return sub_1ACE77B78();
}

PodcastsFoundation::EpisodeStateDomain_optional sub_1ACD7F584(Swift::String *a1)
{
  return EpisodeStateDomain.init(rawValue:)(*a1);
}

void sub_1ACD7F590(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xED00006574617453;
  int v3 = *v1;
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = 0x7461745379616C70;
  if (v3 != 1)
  {
    uint64_t v5 = 0x6B72616D6B6F6F62;
    unint64_t v4 = 0xED00006574617453;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x64616F6C6E776F64;
  }
  if (!v6) {
    unint64_t v2 = v4;
  }
  *a1 = v7;
  a1[1] = v2;
}

void sub_1ACD7F5FC(void *a1@<X8>)
{
  *a1 = &unk_1F0380BC0;
}

uint64_t EpisodeStateChanges.inserted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeStateChanges.updated.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeStateChanges.deleted.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1ACD7F624()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1ACA37924(MEMORY[0x1E4FBC860]);
  qword_1EB7675B0 = v0;
  *(void *)algn_1EB7675B8 = result;
  qword_1EB7675C0 = v0;
  return result;
}

uint64_t static EpisodeStateChanges.noChanges.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB7675D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&xmmword_1EB7675B0 + 1);
  uint64_t v3 = qword_1EB7675C0;
  *a1 = xmmword_1EB7675B0;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1ACD7F6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = EpisodeStateDomain.propertiesToTrack.getter();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACD80B64(v3, a2);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_release();
  return v5 != 0;
}

uint64_t EpisodeStateChanges.description.getter()
{
  uint64_t v1 = *v0;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = 32;
    do
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_1ACA6EA10(v5);
      v4 += 96;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v11;
  }
  MEMORY[0x1AD118740](v2, &type metadata for EpisodeStateIdentifier);
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1ACD7EB48(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768E90);
  MEMORY[0x1AD118740](v7, v8);
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACE762C8();
  uint64_t v9 = swift_bridgeObjectRetain();
  MEMORY[0x1AD118740](v9, &type metadata for EpisodeStateIdentifier);
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6465747265736E69;
}

uint64_t EpisodeStateModel.ids.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EpisodeStateModel.isDownloaded.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t EpisodeStateModel.isFromITunesSync.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t EpisodeStateModel.isBookmarked.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t EpisodeStateModel.isFromHiddenShow.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t EpisodeStateModel.isPartiallyPlayed.getter()
{
  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t EpisodeStateModel.isPlayedAndNotBackcatalog.getter()
{
  return *(unsigned __int8 *)(v0 + 13);
}

double EpisodeStateModel.position.getter()
{
  return *(double *)(v0 + 16);
}

double EpisodeStateModel.duration.getter()
{
  return *(double *)(v0 + 24);
}

double EpisodeStateModel.lastDatePlayed.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t EpisodeStateModel.shouldRemoveDownload.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t EpisodeStateModel.podcastStateModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  char v7 = *(unsigned char *)(v1 + 90);
  __int16 v8 = *(_WORD *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 42) = v7;
  *(_WORD *)(a1 + 40) = v8;
  return sub_1ACA3A9E8(v2, v3, v4, v5, v6);
}

void sub_1ACD7F9A8(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    unsigned int v6 = objc_msgSend(a1, sel_isDownloaded);
    unsigned int v7 = objc_msgSend(a1, sel_isFromITunesSync);
    unsigned int v8 = objc_msgSend(a1, sel_isBookmarked);
    id v9 = objc_msgSend(a1, sel_podcast);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = objc_msgSend(v9, sel_hidden);

      if (v11) {
        uint64_t v12 = 0x1000000;
      }
      else {
        uint64_t v12 = 0;
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
    if (objc_msgSend(a1, sel_isPartiallyPlayed))
    {
      uint64_t v13 = 0x100000000;
    }
    else
    {
      uint64_t v13 = 0x100000000;
      if ((objc_msgSend(a1, sel_isPartiallyPlayedBackCatalogItem) & 1) == 0
        && !objc_msgSend(a1, sel_isPlayheadPartiallyPlayed))
      {
        uint64_t v13 = 0;
      }
    }
    if (objc_msgSend(a1, sel_isPlayed))
    {
      if (objc_msgSend(a1, sel_isBackCatalogItem)) {
        uint64_t v14 = 0;
      }
      else {
        uint64_t v14 = 0x10000000000;
      }
    }
    else
    {
      uint64_t v14 = 0;
    }
    objc_msgSend(a1, sel_playhead);
    double v16 = v15;
    objc_msgSend(a1, sel_duration);
    uint64_t v18 = v17;
    objc_msgSend(a1, sel_lastDatePlayed);
    uint64_t v20 = v19;
    unsigned __int8 v21 = sub_1ACD7FC0C(a1);
    PodcastStateModel.init(podcast:)(objc_msgSend(a1, sel_podcast), (uint64_t)v30);

    uint64_t v22 = v31;
    __int16 v23 = v32;
    char v24 = v33;
    uint64_t v25 = 256;
    if (!v7) {
      uint64_t v25 = 0;
    }
    uint64_t v26 = v25 | v6;
    uint64_t v27 = 0x10000;
    if (!v8) {
      uint64_t v27 = 0;
    }
    long long v28 = v30[0];
    long long v29 = v30[1];
    *(void *)a3 = a2;
    *(void *)(a3 + 8) = v26 | v27 | v12 | v13 | v14;
    *(double *)(a3 + 16) = v16;
    *(void *)(a3 + 24) = v18;
    *(void *)(a3 + 32) = v20;
    *(void *)(a3 + 40) = v21 & 1;
    *(_OWORD *)(a3 + 48) = v28;
    *(_OWORD *)(a3 + 64) = v29;
    *(void *)(a3 + 80) = v22;
    *(unsigned char *)(a3 + 90) = v24;
    *(_WORD *)(a3 + 88) = v23;
  }
  else
  {
    swift_bridgeObjectRelease();

    *(_OWORD *)(a3 + 75) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
}

id sub_1ACD7FC0C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_podcast);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_uuid);
  if (v4)
  {
    uint64_t v5 = v4;
    if (objc_msgSend(a1, sel_isDownloaded)
      && objc_msgSend(v3, sel_deletePlayedEpisodesResolvedValue))
    {
      id v6 = objc_msgSend(self, sel_predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid_deletePlayedEpisodes_, v5, 1);

      id v7 = objc_msgSend(v6, sel_evaluateWithObject_, a1);
      uint64_t v5 = v3;
      uint64_t v3 = v6;
    }
    else
    {
      id v7 = 0;
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

uint64_t EpisodeStateModel.hash(into:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v14 = v2[7];
  uint64_t v15 = v2[6];
  uint64_t v12 = v2[8];
  uint64_t v13 = v2[9];
  uint64_t v16 = v2[10];
  swift_bridgeObjectRetain();
  sub_1ACD80F00(a1, v4);
  swift_bridgeObjectRelease();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B58();
  sub_1ACE77B58();
  sub_1ACE77B58();
  sub_1ACE77B38();
  if (!v16) {
    return sub_1ACE77B38();
  }
  sub_1ACE77B38();
  if ((_BYTE)v12)
  {
    uint64_t v6 = v14;
    uint64_t v5 = v15;
    uint64_t v7 = v13;
    sub_1ACE77B28();
    sub_1ACA3A9E8(v15, v14, v12, v13, v16);
    if (v12 == 1)
    {
      sub_1ACA3AA28(v15, v14, 1u);
      sub_1ACE76108();
      uint64_t v8 = v15;
      uint64_t v9 = v14;
      unsigned __int8 v10 = 1;
    }
    else
    {
      sub_1ACA3AA28(v15, v14, 2u);
      sub_1ACE76108();
      uint64_t v8 = v15;
      uint64_t v9 = v14;
      unsigned __int8 v10 = 2;
    }
    sub_1ACADC6D8(v8, v9, v10);
  }
  else
  {
    sub_1ACE77B28();
    uint64_t v5 = v15;
    sub_1ACE77B58();
    uint64_t v6 = v14;
    sub_1ACA3AA28(v15, v14, 0);
    swift_bridgeObjectRetain();
    uint64_t v7 = v13;
  }
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B38();
  return sub_1ACADC698(v5, v6, v12, v7, v16);
}

uint64_t EpisodeStateModel.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 9);
  char v3 = *((unsigned char *)v0 + 10);
  char v4 = *((unsigned char *)v0 + 11);
  char v5 = *((unsigned char *)v0 + 12);
  char v6 = *((unsigned char *)v0 + 13);
  uint64_t v7 = v0[4];
  char v8 = *((unsigned char *)v0 + 40);
  uint64_t v9 = v0[10];
  __int16 v10 = *((_WORD *)v0 + 44);
  char v11 = *((unsigned char *)v0 + 90);
  uint64_t v15 = *v0;
  char v16 = v1;
  char v17 = v2;
  char v18 = v3;
  char v19 = v4;
  char v20 = v5;
  char v21 = v6;
  long long v22 = *((_OWORD *)v0 + 1);
  uint64_t v23 = v7;
  char v24 = v8;
  long long v12 = *((_OWORD *)v0 + 4);
  long long v25 = *((_OWORD *)v0 + 3);
  long long v26 = v12;
  uint64_t v27 = v9;
  char v29 = v11;
  __int16 v28 = v10;
  sub_1ACE77B18();
  EpisodeStateModel.hash(into:)((uint64_t)v14);
  return sub_1ACE77B78();
}

uint64_t sub_1ACD8007C()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 9);
  char v3 = *((unsigned char *)v0 + 10);
  char v4 = *((unsigned char *)v0 + 11);
  char v5 = *((unsigned char *)v0 + 12);
  char v6 = *((unsigned char *)v0 + 13);
  uint64_t v7 = v0[4];
  char v8 = *((unsigned char *)v0 + 40);
  uint64_t v9 = v0[10];
  __int16 v10 = *((_WORD *)v0 + 44);
  char v11 = *((unsigned char *)v0 + 90);
  uint64_t v15 = *v0;
  char v16 = v1;
  char v17 = v2;
  char v18 = v3;
  char v19 = v4;
  char v20 = v5;
  char v21 = v6;
  long long v22 = *((_OWORD *)v0 + 1);
  uint64_t v23 = v7;
  char v24 = v8;
  long long v12 = *((_OWORD *)v0 + 4);
  long long v25 = *((_OWORD *)v0 + 3);
  long long v26 = v12;
  uint64_t v27 = v9;
  char v29 = v11;
  __int16 v28 = v10;
  sub_1ACE77B18();
  EpisodeStateModel.hash(into:)((uint64_t)v14);
  return sub_1ACE77B78();
}

uint64_t sub_1ACD80134()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 9);
  char v3 = *((unsigned char *)v0 + 10);
  char v4 = *((unsigned char *)v0 + 11);
  char v5 = *((unsigned char *)v0 + 12);
  char v6 = *((unsigned char *)v0 + 13);
  uint64_t v7 = v0[4];
  char v8 = *((unsigned char *)v0 + 40);
  uint64_t v9 = v0[10];
  __int16 v10 = *((_WORD *)v0 + 44);
  char v11 = *((unsigned char *)v0 + 90);
  uint64_t v15 = *v0;
  char v16 = v1;
  char v17 = v2;
  char v18 = v3;
  char v19 = v4;
  char v20 = v5;
  char v21 = v6;
  long long v22 = *((_OWORD *)v0 + 1);
  uint64_t v23 = v7;
  char v24 = v8;
  long long v12 = *((_OWORD *)v0 + 4);
  long long v25 = *((_OWORD *)v0 + 3);
  long long v26 = v12;
  uint64_t v27 = v9;
  char v29 = v11;
  __int16 v28 = v10;
  sub_1ACE77B18();
  EpisodeStateModel.hash(into:)((uint64_t)v14);
  return sub_1ACE77B78();
}

uint64_t PodcastStateModel.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1ACA3AA28(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

uint64_t PodcastStateModel.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PodcastStateModel.isHidden.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t PodcastStateModel.isFollowed.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t PodcastStateModel.isImplicitlyFollowed.getter()
{
  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t PodcastStateModel.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 8);
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      sub_1ACE77B28();
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      uint64_t v3 = v1;
      uint64_t v4 = v2;
      unsigned __int8 v5 = 1;
    }
    else
    {
      sub_1ACE77B28();
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      uint64_t v3 = v1;
      uint64_t v4 = v2;
      unsigned __int8 v5 = 2;
    }
    sub_1ACADC6D8(v3, v4, v5);
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  sub_1ACE77B38();
  sub_1ACE77B38();
  return sub_1ACE77B38();
}

uint64_t PodcastStateModel.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1ACE77B18();
  if (v3)
  {
    sub_1ACE77B28();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    if (v3 == 1) {
      unsigned __int8 v4 = 1;
    }
    else {
      unsigned __int8 v4 = 2;
    }
    sub_1ACADC6D8(v1, v2, v4);
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  swift_bridgeObjectRetain();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  sub_1ACE77B38();
  sub_1ACE77B38();
  sub_1ACE77B38();
  return sub_1ACE77B78();
}

uint64_t sub_1ACD804D0()
{
  return sub_1ACE77B78();
}

unint64_t PodcastStateModel.SanitizedState.rawValue.getter(char a1)
{
  unint64_t result = 0x6465776F6C6C6F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7972617262696CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x65726F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACD805DC(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0x6465776F6C6C6F66;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x6465776F6C6C6F66;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v5 = 0x7972617262696CLL;
      break;
    case 2:
      unint64_t v4 = 0x80000001ACEC42D0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v5 = 0x65726F7473;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x7972617262696CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001ACEC42D0;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x65726F7473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1ACE77848();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1ACD80770()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD8084C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD80910()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD809E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation17PodcastStateModelV09SanitizedD0O8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1ACD80A18(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6465776F6C6C6F66;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7972617262696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000001ACEC42D0;
      break;
    case 3:
      *a1 = 0x65726F7473;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1ACD80AB4()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACD80B14()
{
  return sub_1ACE764C8();
}

uint64_t sub_1ACD80B64(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1ACD80CEC((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    char v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1ACD80CEC((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1AD11B340](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1ACD80CEC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_1ACE77B18();
    swift_bridgeObjectRetain();
    sub_1ACE76108();
    uint64_t v10 = sub_1ACE77B78();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    char v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1ACE77848() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        char v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1ACE77848() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1ACB86490(a1, v5, v26, a4);
}

uint64_t sub_1ACD80F00(uint64_t a1, uint64_t a2)
{
  sub_1ACE77B78();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_22;
    }
    if (v10 >= v7)
    {
LABEL_20:
      swift_release();
      return sub_1ACE77B28();
    }
    unint64_t v15 = *(void *)(v3 + 8 * v10);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_18:
    uint64_t v17 = *(void *)(a2 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    int v20 = *(unsigned __int8 *)(v17 + 16);
    sub_1ACE77B18();
    sub_1ACE77B28();
    if (v20 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
    }
    else
    {
      sub_1ACE77B58();
    }
    uint64_t v11 = sub_1ACE77B78();
    uint64_t result = sub_1ACA91B68(v18, v19, v20);
    v9 ^= v11;
  }
  int64_t v16 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_20;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v16);
  if (v15)
  {
    ++v10;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_20;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t _s18PodcastsFoundation17PodcastStateModelV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  int v6 = *((unsigned __int8 *)a1 + 40);
  int v7 = *((unsigned __int8 *)a1 + 41);
  int v8 = *((unsigned __int8 *)a1 + 42);
  uint64_t v9 = *a2;
  int v10 = *((unsigned __int8 *)a2 + 16);
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  int v13 = *((unsigned __int8 *)a2 + 40);
  int v14 = *((unsigned __int8 *)a2 + 41);
  int v15 = *((unsigned __int8 *)a2 + 42);
  if (*((unsigned char *)a1 + 16))
  {
    if (*((unsigned char *)a1 + 16) == 1)
    {
      if (v10 != 1) {
        return 0;
      }
    }
    else if (v10 != 2)
    {
      return 0;
    }
    if (v3 != v9 || a1[1] != a2[1])
    {
      char v17 = sub_1ACE77848();
      uint64_t v16 = 0;
      if ((v17 & 1) == 0) {
        return v16;
      }
    }
  }
  else
  {
    uint64_t v16 = 0;
    if (*((unsigned char *)a2 + 16) || v3 != v9) {
      return v16;
    }
  }
  if (v4 == v11 && v5 == v12)
  {
    uint64_t v16 = 0;
    if (v6 != v13) {
      return v16;
    }
  }
  else
  {
    char v18 = sub_1ACE77848();
    uint64_t v16 = 0;
    if (v18 & 1) == 0 || ((v6 ^ v13)) {
      return v16;
    }
  }
  if (((v7 ^ v14) & 1) == 0) {
    return v8 ^ v15 ^ 1u;
  }
  return v16;
}

BOOL _s18PodcastsFoundation17EpisodeStateModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 9);
  int v4 = *(unsigned __int8 *)(a1 + 10);
  int v5 = *(unsigned __int8 *)(a1 + 11);
  int v44 = *(unsigned __int8 *)(a1 + 13);
  int v45 = *(unsigned __int8 *)(a1 + 12);
  double v7 = *(double *)(a1 + 16);
  double v6 = *(double *)(a1 + 24);
  double v8 = *(double *)(a1 + 32);
  int v43 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v37 = *(void *)(a1 + 48);
  uint64_t v38 = *(void *)(a1 + 56);
  uint64_t v41 = *(void *)(a1 + 72);
  uint64_t v39 = *(void *)(a1 + 64);
  uint64_t v40 = *(void *)(a1 + 80);
  int v34 = *(unsigned __int16 *)(a1 + 88);
  int v35 = *(unsigned __int8 *)(a1 + 90);
  int v9 = *(unsigned __int8 *)(a2 + 8);
  int v10 = *(unsigned __int8 *)(a2 + 9);
  int v11 = *(unsigned __int8 *)(a2 + 10);
  int v12 = *(unsigned __int8 *)(a2 + 11);
  int v13 = *(unsigned __int8 *)(a2 + 12);
  int v14 = *(unsigned __int8 *)(a2 + 13);
  double v16 = *(double *)(a2 + 16);
  double v15 = *(double *)(a2 + 24);
  double v17 = *(double *)(a2 + 32);
  int v42 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v28 = *(void *)(a2 + 48);
  uint64_t v29 = *(void *)(a2 + 56);
  uint64_t v30 = *(void *)(a2 + 64);
  uint64_t v31 = *(void *)(a2 + 72);
  uint64_t v36 = *(void *)(a2 + 80);
  int v32 = *(unsigned __int16 *)(a2 + 88);
  int v33 = *(unsigned __int8 *)(a2 + 90);
  char v18 = sub_1ACD67824(*(void *)a1, *(void *)a2);
  BOOL result = 0;
  if ((v18 & 1) != 0
    && ((v2 ^ v9) & 1) == 0
    && ((v3 ^ v10) & 1) == 0
    && ((v4 ^ v11) & 1) == 0
    && ((v5 ^ v12) & 1) == 0
    && ((v45 ^ v13) & 1) == 0
    && ((v44 ^ v14) & 1) == 0
    && v7 == v16
    && v6 == v15
    && v8 == v17
    && ((v43 ^ v42) & 1) == 0)
  {
    if (v40)
    {
      uint64_t v21 = v37;
      uint64_t v20 = v38;
      uint64_t v52 = v37;
      uint64_t v53 = v38;
      unsigned __int8 v22 = v39;
      uint64_t v54 = v39;
      uint64_t v55 = v41;
      uint64_t v56 = v40;
      __int16 v57 = v34;
      char v58 = (v34 | (v35 << 16)) >> 16;
      uint64_t v23 = v36;
      if (v36)
      {
        v46[0] = v28;
        v46[1] = v29;
        char v47 = v30;
        uint64_t v48 = v31;
        uint64_t v49 = v36;
        __int16 v50 = v32 & 0x101;
        char v51 = ((v32 | (v33 << 16)) >> 16) & 1;
        char v24 = _s18PodcastsFoundation17PodcastStateModelV2eeoiySbAC_ACtFZ_0(&v52, v46);
        uint64_t v25 = v52;
        uint64_t v26 = v53;
        unsigned __int8 v27 = v54;
        sub_1ACA3AA28(v37, v38, v39);
        swift_bridgeObjectRetain();
        sub_1ACADC6D8(v25, v26, v27);
        swift_bridgeObjectRelease();
        return (v24 & 1) != 0;
      }
      sub_1ACA3AA28(v37, v38, v39);
      swift_bridgeObjectRetain();
      sub_1ACA3AA28(v37, v38, v39);
      swift_bridgeObjectRetain();
      sub_1ACADC6D8(v37, v38, v39);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = v38;
      unsigned __int8 v22 = v39;
      uint64_t v23 = v36;
      uint64_t v21 = v37;
      if (!v36) {
        return 1;
      }
    }
    sub_1ACA3A9E8(v28, v29, v30, v31, v23);
    sub_1ACADC698(v21, v20, v22, v41, v40);
    sub_1ACADC698(v28, v29, v30, v31, v23);
    return 0;
  }
  return result;
}

uint64_t _s18PodcastsFoundation17PodcastStateModelV09SanitizedD0O8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE775B8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1ACD81560(uint64_t result, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t *, uint64_t))
{
  uint64_t v38 = (unint64_t *)result;
  uint64_t v39 = 0;
  int64_t v4 = 0;
  uint64_t v7 = a3[8];
  int v5 = a3 + 8;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *((unsigned char *)v5 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v40 = v5;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      uint64_t v44 = (v10 - 1) & v10;
      int64_t v62 = v4;
      unint64_t v11 = __clz(__rbit64(v10)) | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v32 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v32 >= v41) {
      return sub_1ACB49840(v38, a2, v39, (uint64_t)a3);
    }
    unint64_t v33 = v40[v32];
    int64_t v34 = v4 + 1;
    if (!v33)
    {
      int64_t v34 = v4 + 2;
      if (v4 + 2 >= v41) {
        return sub_1ACB49840(v38, a2, v39, (uint64_t)a3);
      }
      unint64_t v33 = v40[v34];
      if (!v33)
      {
        int64_t v34 = v4 + 3;
        if (v4 + 3 >= v41) {
          return sub_1ACB49840(v38, a2, v39, (uint64_t)a3);
        }
        unint64_t v33 = v40[v34];
        if (!v33) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v44 = (v33 - 1) & v33;
    int64_t v62 = v34;
    unint64_t v11 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_5:
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[6] + 96 * v11;
    uint64_t v14 = *(void *)v13;
    char v15 = *(unsigned char *)(v13 + 9);
    char v16 = *(unsigned char *)(v13 + 10);
    char v17 = *(unsigned char *)(v13 + 11);
    char v18 = *(unsigned char *)(v13 + 12);
    char v19 = *(unsigned char *)(v13 + 13);
    uint64_t v20 = *(void *)(v13 + 32);
    char v21 = *(unsigned char *)(v13 + 40);
    uint64_t v23 = *(void *)(v13 + 48);
    uint64_t v22 = *(void *)(v13 + 56);
    uint64_t v24 = *(void *)(v13 + 64);
    uint64_t v25 = *(void *)(v13 + 72);
    uint64_t v26 = *(void *)(v13 + 80);
    char v27 = *(unsigned char *)(v13 + 90);
    __int16 v28 = *(_WORD *)(v13 + 88);
    char v46 = *(unsigned char *)(v13 + 8);
    uint64_t v45 = v14;
    char v47 = v15;
    char v48 = v16;
    char v49 = v17;
    char v50 = v18;
    char v51 = v19;
    long long v52 = *(_OWORD *)(v13 + 16);
    uint64_t v53 = v20;
    char v54 = v21;
    uint64_t v55 = v23;
    uint64_t v56 = v22;
    uint64_t v57 = v24;
    uint64_t v58 = v25;
    uint64_t v59 = v26;
    char v61 = v27;
    __int16 v60 = v28;
    unint64_t v29 = v11;
    uint64_t v30 = *(void *)(v12 + 8 * v11);
    swift_bridgeObjectRetain();
    sub_1ACA3A9E8(v23, v22, v24, v25, v26);
    swift_bridgeObjectRetain();
    char v31 = a4(&v45, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = sub_1ACADC698(v23, v22, v24, v25, v26);
    int64_t v4 = v62;
    unint64_t v10 = v44;
    if (v31)
    {
      *(unint64_t *)((char *)v38 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      if (__OFADD__(v39++, 1))
      {
        __break(1u);
        return sub_1ACB49840(v38, a2, v39, (uint64_t)a3);
      }
    }
  }
  uint64_t v35 = v4 + 4;
  if (v4 + 4 >= v41) {
    return sub_1ACB49840(v38, a2, v39, (uint64_t)a3);
  }
  unint64_t v33 = v40[v35];
  if (v33)
  {
    int64_t v34 = v4 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v34 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v34 >= v41) {
      return sub_1ACB49840(v38, a2, v39, (uint64_t)a3);
    }
    unint64_t v33 = v40[v34];
    ++v35;
    if (v33) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1ACD81834(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t *, uint64_t), uint64_t a3)
{
  uint64_t v6 = (void *)isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1ACD81560((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1ACD81560((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1AD11B340](v11, -1, -1);
  }
  return a3;
}

unint64_t sub_1ACD819B0()
{
  unint64_t result = qword_1E99F59B8;
  if (!qword_1E99F59B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59B8);
  }
  return result;
}

unint64_t sub_1ACD81A08()
{
  unint64_t result = qword_1E99F59C0;
  if (!qword_1E99F59C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E99F59C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59C0);
  }
  return result;
}

unint64_t sub_1ACD81A68()
{
  unint64_t result = qword_1EB7671E8;
  if (!qword_1EB7671E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7671E8);
  }
  return result;
}

unint64_t sub_1ACD81AC0()
{
  unint64_t result = qword_1E99F59D0;
  if (!qword_1E99F59D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59D0);
  }
  return result;
}

unint64_t sub_1ACD81B18()
{
  unint64_t result = qword_1E99F59D8;
  if (!qword_1E99F59D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EpisodeStateDomain(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD81C38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeStateDomain()
{
  return &type metadata for EpisodeStateDomain;
}

ValueMetadata *type metadata accessor for EpisodeStateChanges()
{
  return &type metadata for EpisodeStateChanges;
}

uint64_t destroy for EpisodeStateModel(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    sub_1ACADC6D8(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for EpisodeStateModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 56);
    unsigned __int8 v7 = *(unsigned char *)(a2 + 64);
    sub_1ACA3AA28(v5, v6, v7);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v6;
    *(unsigned char *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v4;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  }
  return a1;
}

uint64_t assignWithCopy for EpisodeStateModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 48);
      uint64_t v8 = *(void *)(a2 + 56);
      unsigned __int8 v9 = *(unsigned char *)(a2 + 64);
      sub_1ACA3AA28(v7, v8, v9);
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v11 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v7;
      *(void *)(a1 + 56) = v8;
      unsigned __int8 v12 = *(unsigned char *)(a1 + 64);
      *(unsigned char *)(a1 + 64) = v9;
      sub_1ACADC6D8(v10, v11, v12);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
      *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
    }
    else
    {
      sub_1ACD81F4C(a1 + 48);
      long long v16 = *(_OWORD *)(a2 + 75);
      long long v17 = *(_OWORD *)(a2 + 64);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 75) = v16;
    }
  }
  else if (v6)
  {
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v14 = *(void *)(a2 + 56);
    unsigned __int8 v15 = *(unsigned char *)(a2 + 64);
    sub_1ACA3AA28(v13, v14, v15);
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v14;
    *(unsigned char *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
    *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *v5;
    long long v19 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
    *uint64_t v4 = v18;
    *(_OWORD *)(a1 + 64) = v19;
  }
  return a1;
}

uint64_t sub_1ACD81F4C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy91_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EpisodeStateModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (!*(void *)(a1 + 80)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 80);
  if (!v4)
  {
    sub_1ACD81F4C(a1 + 48);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
    return a1;
  }
  char v5 = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v5;
  sub_1ACADC6D8(v6, v7, v8);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeStateModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 91)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeStateModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 90) = 0;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 91) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 91) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeStateModel()
{
  return &type metadata for EpisodeStateModel;
}

uint64_t destroy for PodcastStateModel(uint64_t a1)
{
  sub_1ACADC6D8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PodcastStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1ACA3AA28(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PodcastStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1ACA3AA28(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1ACADC6D8(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  return a1;
}

__n128 __swift_memcpy43_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PodcastStateModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1ACADC6D8(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastStateModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 43)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastStateModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 43) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 43) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastStateModel()
{
  return &type metadata for PodcastStateModel;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastStateModel.StateError(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastStateModel.StateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)__n128 result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)__n128 result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastStateModel.StateError()
{
  return &type metadata for PodcastStateModel.StateError;
}

unsigned char *storeEnumTagSinglePayload for PodcastStateModel.SanitizedState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD825E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PodcastStateModel.SanitizedState()
{
  return &type metadata for PodcastStateModel.SanitizedState;
}

unint64_t sub_1ACD8261C()
{
  unint64_t result = qword_1E99F59E0;
  if (!qword_1E99F59E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59E0);
  }
  return result;
}

BOOL static PublisherSignpostIntervalEndType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublisherSignpostIntervalEndType.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t PublisherSignpostIntervalEndType.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t Publisher.emitSignpostEvent(log:name:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1ACE755E8();
  uint64_t v21 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  *(void *)(v15 + 48) = a3;
  *(unsigned char *)(v15 + 56) = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  *(void *)(v16 + 48) = a3;
  *(unsigned char *)(v16 + 56) = a4;
  id v17 = a1;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  swift_getWitnessTable();
  uint64_t v18 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
  return v18;
}

uint64_t sub_1ACD828E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v26 = a5;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v27 = sub_1ACE753F8();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  unsigned __int8 v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)v21 - v10;
  v21[1] = sub_1ACE76E28();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ACE84820;
  uint64_t v28 = AssociatedTypeWitness;
  swift_getMetatypeMetadata();
  uint64_t v13 = sub_1ACE76228();
  uint64_t v15 = v14;
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = sub_1ACADC3A8();
  *(void *)(v12 + 64) = v17;
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v22, AssociatedTypeWitness);
  uint64_t v18 = sub_1ACE76228();
  *(void *)(v12 + 96) = v16;
  *(void *)(v12 + 104) = v17;
  *(void *)(v12 + 72) = v18;
  *(void *)(v12 + 80) = v19;
  sub_1ACE753E8();
  sub_1ACE75398();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v27);
}

uint64_t sub_1ACD82B4C()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD82B84(uint64_t a1)
{
  return sub_1ACD82FA4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1ACD828E8);
}

uint64_t sub_1ACD82B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v31 = a5;
  v29[2] = a3;
  uint64_t v29[3] = a4;
  v29[1] = a2;
  uint64_t v32 = sub_1ACE753F8();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  v29[0] = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v29 - v12;
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_1ACE757A8();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v29 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)v29 - v17, a1, v14, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v18, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v18, AssociatedTypeWitness);
  sub_1ACE76E28();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1ACE84820;
  uint64_t v33 = swift_getAssociatedTypeWitness();
  swift_getMetatypeMetadata();
  uint64_t v21 = sub_1ACE76228();
  uint64_t v23 = v22;
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v25 = sub_1ACADC3A8();
  *(void *)(v20 + 64) = v25;
  *(void *)(v20 + 32) = v21;
  *(void *)(v20 + 40) = v23;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, AssociatedTypeWitness);
  uint64_t v26 = sub_1ACE76228();
  *(void *)(v20 + 96) = v24;
  *(void *)(v20 + 104) = v25;
  *(void *)(v20 + 72) = v26;
  *(void *)(v20 + 80) = v27;
  uint64_t v28 = v29[0];
  sub_1ACE753E8();
  sub_1ACE75398();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_1ACD82F8C(uint64_t a1)
{
  return sub_1ACD82FA4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1ACD82B9C);
}

uint64_t sub_1ACD82FA4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t Publisher.endSignpostInterval(endType:log:name:signpostID:)(char *a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v43 = a5;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v44 = a2;
  uint64_t v45 = a8;
  uint64_t v46 = a7;
  uint64_t v10 = sub_1ACE755E8();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v38 = (char *)&v36 - v11;
  uint64_t v12 = sub_1ACE753F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  char v15 = *a1;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = 0;
  *(unsigned char *)(v16 + 16) = 0;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v13 + 16);
  if ((v15 & 1) == 0)
  {
    uint64_t v37 = *(uint64_t (**)(uint64_t))(v13 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v18)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
    unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v45;
    *(void *)(v20 + 16) = v46;
    *(void *)(v20 + 24) = v21;
    uint64_t v36 = a6;
    uint64_t v22 = v44;
    uint64_t v23 = v41;
    *(void *)(v20 + 32) = v44;
    *(void *)(v20 + 40) = v23;
    *(void *)(v20 + 48) = v42;
    *(unsigned char *)(v20 + 56) = v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    *(void *)(v20 + ((v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v16;
    id v24 = v22;
    a6 = v36;
    swift_retain();
    uint64_t v18 = v37;
    uint64_t v17 = sub_1ACD83B30;
  }
  uint64_t v37 = v17;
  ((void (*)(char *, uint64_t, uint64_t))v18)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
  unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v45;
  *(void *)(v26 + 16) = v46;
  *(void *)(v26 + 24) = v27;
  uint64_t v28 = v44;
  *(void *)(v26 + 32) = v16;
  *(void *)(v26 + 40) = v28;
  uint64_t v29 = v42;
  *(void *)(v26 + 48) = v41;
  *(void *)(v26 + 56) = v29;
  *(unsigned char *)(v26 + 64) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v25, (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  id v30 = v28;
  swift_retain();
  uint64_t v32 = (uint64_t)v37;
  int v31 = v38;
  sub_1ACE75AF8();
  uint64_t v33 = v40;
  swift_getWitnessTable();
  uint64_t v34 = sub_1ACE75AD8();
  swift_release();
  sub_1ACA76F34(v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v33);
  swift_release();
  return v34;
}

uint64_t sub_1ACD83350()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD83360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  int v19 = a5;
  uint64_t v18 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v18 - v11;
  sub_1ACE76E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ACE843F0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, AssociatedTypeWitness);
  uint64_t v14 = sub_1ACE76228();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1ACADC3A8();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  sub_1ACE75398();
  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a7 + 16) = 1;
  return result;
}

uint64_t sub_1ACD83534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v29 = a7;
  int v28 = a6;
  v27[0] = a4;
  v27[1] = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v27 - v14;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = sub_1ACE757A8();
  __n128 v17 = MEMORY[0x1F4188790](v16);
  int v19 = (char *)v27 - v18;
  uint64_t v20 = (unsigned char *)(a2 + 16);
  (*(void (**)(char *, uint64_t, __n128))(v21 + 16))((char *)v27 - v18, a1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t result = swift_beginAccess();
    if (*v20) {
      return result;
    }
    sub_1ACE76E08();
    sub_1ACE75398();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v19, AssociatedTypeWitness);
    swift_beginAccess();
    if (*v20) {
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, AssociatedTypeWitness);
    }
    sub_1ACE76E08();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1ACE843F0;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, AssociatedTypeWitness);
    uint64_t v24 = sub_1ACE76228();
    uint64_t v26 = v25;
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = sub_1ACADC3A8();
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    sub_1ACE75398();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, AssociatedTypeWitness);
  }
  uint64_t result = swift_beginAccess();
  unsigned char *v20 = 1;
  return result;
}

uint64_t sub_1ACD838E8()
{
  uint64_t v1 = sub_1ACE753F8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACD839BC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1ACE753F8() - 8);
  return sub_1ACD83534(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), v1 + ((*(unsigned __int8 *)(v3 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1ACD83A48()
{
  uint64_t v1 = sub_1ACE753F8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACD83B30(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1ACE753F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1ACD83360(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

unint64_t sub_1ACD83BEC()
{
  unint64_t result = qword_1E99F59E8;
  if (!qword_1E99F59E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PublisherSignpostIntervalEndType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD83D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublisherSignpostIntervalEndType()
{
  return &type metadata for PublisherSignpostIntervalEndType;
}

uint64_t EyebrowBuilder.__allocating_init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(uint64_t a1, uint64_t a2, char *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9)
{
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1(a1, v17);
  uint64_t v19 = sub_1ACD8DC24(v18, a2, a3, a4, a5, a6, a7, a8, a9, v9, v17, v16);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v19;
}

BOOL static EyebrowBuilder.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EyebrowBuilder.Style.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t EyebrowBuilder.Style.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD83E80@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v50 = a1;
  uint64_t v53 = a2;
  uint64_t v51 = type metadata accessor for EpisodePlayState();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v5 = (double *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v47 = (uint64_t)&v46 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v48 = (uint64_t)&v46 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v46 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v46 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v46 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v46 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v46 - v26;
  uint64_t v28 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v28);
  id v30 = (char *)&v46 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD8F568(v3, (uint64_t)v30, type metadata accessor for EyebrowBuilder.ListContext);
  uint64_t v52 = v28;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = v50;
      sub_1ACD8F568(v50, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      if (swift_getEnumCaseMultiPayload() == 3
        && (sub_1ACD8F568((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for EpisodePlayState), v24[16] != 1))
      {
        sub_1ACD8DD84((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        sub_1ACD8F568(v31, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      }
      else
      {
        sub_1ACD8DD84((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        sub_1ACD8F568(v31, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        sub_1ACD8F568((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_1ACD8DD84((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
          char v42 = 0;
LABEL_20:
          sub_1ACD8DD84((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
          *uint64_t v53 = v42;
          return swift_storeEnumTagMultiPayload();
        }
        sub_1ACA50E78((uint64_t)v18, (uint64_t *)&unk_1EB773140);
      }
      char v42 = 1;
      goto LABEL_20;
    case 2u:
      char v32 = v30[9];
      sub_1ACD8F568(v50, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      char v34 = 1;
      double v35 = 0.0;
      switch(EnumCaseMultiPayload)
      {
        case 2:
          sub_1ACA50E78((uint64_t)v5, (uint64_t *)&unk_1EB773140);
          char v34 = 1;
          break;
        case 4:
        case 5:
          break;
        default:
          char v34 = 0;
          if (v5[1] - *v5 > 0.0) {
            double v35 = v5[1] - *v5;
          }
          else {
            double v35 = 0.0;
          }
          break;
      }
      uint64_t v45 = v53;
      *(double *)uint64_t v53 = v35;
      v45[8] = v34;
      v45[9] = v32;
      return swift_storeEnumTagMultiPayload();
    case 3u:
      uint64_t v36 = v53;
      sub_1ACD8F568(v50, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v36, 0, 1, v51);
      swift_storeEnumTagMultiPayload();
      return sub_1ACA50E78((uint64_t)v30, (uint64_t *)&unk_1EB772D70);
    case 4u:
      uint64_t v38 = v50;
      sub_1ACD8F568(v50, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      if (swift_getEnumCaseMultiPayload() == 3
        && (sub_1ACD8F568((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for EpisodePlayState), v12[16] != 1))
      {
        sub_1ACD8DD84((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        uint64_t v44 = v38;
        uint64_t v40 = v48;
        sub_1ACD8F568(v44, v48, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      }
      else
      {
        sub_1ACD8DD84((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        uint64_t v39 = v38;
        uint64_t v40 = v48;
        sub_1ACD8F568(v39, v48, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        uint64_t v41 = v47;
        sub_1ACD8F568(v40, v47, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_1ACD8DD84(v41, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
          char v43 = 0;
          goto LABEL_23;
        }
        sub_1ACA50E78(v41, (uint64_t *)&unk_1EB773140);
      }
      char v43 = 1;
LABEL_23:
      sub_1ACD8DD84(v40, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      *uint64_t v53 = v43;
      return swift_storeEnumTagMultiPayload();
    default:
      sub_1ACD8F568(v3, (uint64_t)v53, type metadata accessor for EyebrowBuilder.ListContext);
      return sub_1ACD8DD84((uint64_t)v30, type metadata accessor for EyebrowBuilder.ListContext);
  }
}

PodcastsFoundation::EyebrowBuilder::EpisodeHeaderSubtitleConfiguration __swiftcall EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.init(remainingTime:viewIsRTL:)(Swift::Double_optional remainingTime, Swift::Bool viewIsRTL)
{
  *(void *)uint64_t v3 = *(void *)&remainingTime.is_nil;
  *(unsigned char *)(v3 + 8) = viewIsRTL;
  *(unsigned char *)(v3 + 9) = v2;
  result.remainingTime.value = remainingTime.value;
  result.remainingTime.is_nil = remainingTime.is_nil;
  return result;
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.remainingTime.getter()
{
  return *(void *)v0;
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.remainingTime.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.remainingTime.modify())()
{
  return nullsub_1;
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.viewIsRTL.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.viewIsRTL.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

uint64_t (*EyebrowBuilder.EpisodeHeaderSubtitleConfiguration.viewIsRTL.modify())()
{
  return nullsub_1;
}

uint64_t EyebrowBuilder.caption.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.smartPlay.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.subscriptionBadge.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.episodeNumber.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.seasonNumber.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.pubDate.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.listenNowReason.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.remainingTime.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.explicitSymbol.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EyebrowBuilder.showsEpisodeNumber.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t EyebrowBuilder.showsSeasonNumber.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t EyebrowBuilder.captionPublisher.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v27 = _s26SynchronizedEventPublisherVMa();
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE750A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D8A8);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D6B0);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1[24];
  uint64_t v16 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 104))(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1ACE75098();
    sub_1ACA50E78((uint64_t)v7, (uint64_t *)&unk_1EB773140);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
  sub_1ACD8F520(&qword_1EB76E1F0, (void (*)(uint64_t))_s26SynchronizedEventPublisherVMa);
  uint64_t v17 = sub_1ACE75AD8();
  sub_1ACD8DD84((uint64_t)v4, (uint64_t (*)(void))_s26SynchronizedEventPublisherVMa);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v34 = v17;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DD48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
  sub_1ACA51EA4(&qword_1EB76DD40, &qword_1EB76DD48);
  uint64_t v18 = v28;
  sub_1ACE75B58();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E498);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1ACE843F0;
  swift_beginAccess();
  uint64_t v20 = v2[3];
  *(void *)(v19 + 32) = v2[2];
  *(void *)(v19 + 40) = v20;
  sub_1ACA51EA4(&qword_1EB76D8A0, &qword_1EB76D8A8);
  swift_bridgeObjectRetain();
  uint64_t v21 = v32;
  sub_1ACE75C88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v21);
  sub_1ACA51EA4(&qword_1EB76D6A8, &qword_1EB76D6B0);
  uint64_t v22 = v31;
  uint64_t v23 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DDA8);
  uint64_t v25 = v33;
  v33[3] = v24;
  uint64_t result = sub_1ACA51EA4(&qword_1EB76DDA0, &qword_1EB76DDA8);
  v25[4] = result;
  *uint64_t v25 = v23;
  return result;
}

uint64_t sub_1ACD84E64@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_1ACD84ED4();
  uint64_t v4 = sub_1ACD861C0();
  uint64_t v6 = v5;
  swift_beginAccess();
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 24);
  *a2 = *(void *)(a1 + 16);
  a2[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD84ED4()
{
  uint64_t v1 = v0;
  uint64_t v179 = sub_1ACE75448();
  uint64_t v2 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179);
  uint64_t v183 = (char *)&v174 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1ACE750A8();
  uint64_t v193 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v175 = (char *)&v174 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  int64_t v176 = (char *)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v185 = (char *)&v174 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v174 = (double *)((char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v174 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v180 = (uint64_t)&v174 - v16;
  uint64_t v191 = type metadata accessor for EyebrowBuilder.ListContext(0);
  uint64_t v17 = MEMORY[0x1F4188790](v191);
  uint64_t v187 = (char *)&v174 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v192 = (uint64_t)&v174 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v196 = (uint64_t)&v174 - v21;
  uint64_t v190 = sub_1ACE753F8();
  uint64_t v22 = *(void *)(v190 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v190);
  char v188 = (char *)&v174 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v195 = (char *)&v174 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v174 - v27;
  if (qword_1EB772EC8 != -1) {
    swift_once();
  }
  unint64_t v181 = v15;
  uint64_t v186 = v4;
  uint64_t v29 = sub_1ACE75438();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB772EA8);
  sub_1ACE75428();
  sub_1ACE753C8();
  uint64_t v182 = v30;
  uint64_t v31 = sub_1ACE75428();
  os_signpost_type_t v32 = sub_1ACE76E18();
  char v33 = sub_1ACE76FA8();
  uint64_t v184 = v2;
  if (v33)
  {
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    unint64_t v35 = (v22 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v36 = v195;
    uint64_t v37 = v190;
    v34(v195, v28, v190);
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    os_signpost_id_t v39 = sub_1ACE753D8();
    os_signpost_type_t v40 = v32;
    uint64_t v41 = v36;
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v31, v40, v39, "resolveEyebrowElements", "", v38, 2u);
    MEMORY[0x1AD11B340](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v36, v37);
  }
  else
  {

    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    unint64_t v35 = (v22 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v37 = v190;
    uint64_t v41 = v195;
  }
  uint64_t v178 = v34;
  unint64_t v177 = v35;
  v34(v41, v28, v37);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v194 = sub_1ACE75468();
  uint64_t v42 = sub_1ACD897F8(1);
  uint64_t v44 = v43;
  swift_beginAccess();
  v1[8] = v42;
  v1[9] = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1ACD8A06C(1);
  uint64_t v47 = v46;
  swift_beginAccess();
  v1[10] = v45;
  v1[11] = v47;
  swift_bridgeObjectRelease();
  uint64_t v197 = (uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context;
  uint64_t v48 = v196;
  sub_1ACD8F568((uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, v196, type metadata accessor for EyebrowBuilder.ListContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v50 = (uint64_t)v185;
  uint64_t v189 = v28;
  if (EnumCaseMultiPayload != 3)
  {
    uint64_t v67 = v1[24];
    uint64_t v68 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v67);
    double v69 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v68 + 112))(v67, v68));
    if (v70)
    {
      uint64_t v94 = v1[24];
      uint64_t v95 = v1[25];
      __swift_project_boxed_opaque_existential_1(v1 + 21, v94);
      double v96 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v95 + 80))(v94, v95));
      uint64_t v97 = v196;
      if (v98)
      {
LABEL_45:
        sub_1ACD8DD84(v97, type metadata accessor for EyebrowBuilder.ListContext);
        goto LABEL_46;
      }
      if (v96 > 0.0
        && (id v99 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 0, 0, v96)) != 0)
      {
        uint64_t v100 = v99;
        uint64_t v101 = sub_1ACE761B8();
        uint64_t v103 = v102;

        uint64_t v104 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v106 = v104[2];
        unint64_t v105 = v104[3];
        if (v106 >= v105 >> 1) {
          uint64_t v104 = sub_1ACA41EA0((void *)(v105 > 1), v106 + 1, 1, v104);
        }
        v104[2] = v106 + 1;
        uint64_t v107 = &v104[2 * v106];
        v107[4] = v101;
        v107[5] = v103;
        uint64_t v97 = v196;
      }
      else
      {
        uint64_t v104 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v117 = sub_1ACD87D2C(0, v104);
      uint64_t v119 = v118;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v1[16] = v117;
      v1[17] = v119;
    }
    else
    {
      if (v69 > 0.0
        && (id v71 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 1, 0, v69)) != 0)
      {
        uint64_t v72 = v71;
        uint64_t v73 = sub_1ACE761B8();
        uint64_t v75 = v74;

        uint64_t v76 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v78 = v76[2];
        unint64_t v77 = v76[3];
        if (v78 >= v77 >> 1) {
          uint64_t v76 = sub_1ACA41EA0((void *)(v77 > 1), v78 + 1, 1, v76);
        }
        v76[2] = v78 + 1;
        unint64_t v79 = &v76[2 * v78];
        v79[4] = v73;
        v79[5] = v75;
      }
      else
      {
        uint64_t v76 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v108 = sub_1ACD87D2C(0, v76);
      uint64_t v110 = v109;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v1[16] = v108;
      v1[17] = v110;
      uint64_t v97 = v196;
    }
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v51 = v180;
  sub_1ACBE0C00(v48, v180);
  uint64_t v52 = (uint64_t)v181;
  sub_1ACA3AAD4(v51, (uint64_t)v181, (uint64_t *)&unk_1EB772D70);
  uint64_t v53 = type metadata accessor for EpisodePlayState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53) == 1)
  {
LABEL_8:
    uint64_t v54 = v1[24];
    uint64_t v55 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v54);
    double v56 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v55 + 80))(v54, v55));
    if (v57)
    {
      sub_1ACA50E78(v51, (uint64_t *)&unk_1EB772D70);
    }
    else
    {
      if (v56 > 0.0
        && (id v58 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 0, 0, v56)) != 0)
      {
        uint64_t v59 = v58;
        uint64_t v60 = sub_1ACE761B8();
        uint64_t v62 = v61;

        uint64_t v63 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v65 = v63[2];
        unint64_t v64 = v63[3];
        if (v65 >= v64 >> 1) {
          uint64_t v63 = sub_1ACA41EA0((void *)(v64 > 1), v65 + 1, 1, v63);
        }
        v63[2] = v65 + 1;
        uint64_t v66 = &v63[2 * v65];
        v66[4] = v60;
        v66[5] = v62;
        uint64_t v37 = v190;
      }
      else
      {
        uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v114 = sub_1ACD87D2C(0, v63);
      uint64_t v116 = v115;
      swift_bridgeObjectRelease();
      sub_1ACA50E78(v51, (uint64_t *)&unk_1EB772D70);
      swift_beginAccess();
      v1[16] = v114;
      v1[17] = v116;
      swift_bridgeObjectRelease();
    }
    sub_1ACA50E78((uint64_t)v181, (uint64_t *)&unk_1EB772D70);
    goto LABEL_46;
  }
  unsigned __int8 v80 = v174;
  sub_1ACA3AAD4(v52, (uint64_t)v174, (uint64_t *)&unk_1EB772D70);
  int v81 = swift_getEnumCaseMultiPayload();
  if (v81 && v81 != 3 && v81 != 1)
  {
    sub_1ACD8DD84((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    goto LABEL_8;
  }
  double v83 = *v80;
  double v82 = v80[1];
  sub_1ACA50E78(v52, (uint64_t *)&unk_1EB772D70);
  double v84 = v82 - v83;
  if (v84 > 0.0
    && (id v85 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 1, 0, v84)) != 0)
  {
    uint64_t v86 = v85;
    uint64_t v87 = sub_1ACE761B8();
    uint64_t v89 = v88;

    long long v90 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v92 = v90[2];
    unint64_t v91 = v90[3];
    if (v92 >= v91 >> 1) {
      long long v90 = sub_1ACA41EA0((void *)(v91 > 1), v92 + 1, 1, v90);
    }
    v90[2] = v92 + 1;
    uint64_t v93 = &v90[2 * v92];
    v93[4] = v87;
    v93[5] = v89;
  }
  else
  {
    long long v90 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v111 = sub_1ACD87D2C(0, v90);
  uint64_t v113 = v112;
  swift_bridgeObjectRelease();
  sub_1ACA50E78(v180, (uint64_t *)&unk_1EB772D70);
  swift_beginAccess();
  v1[16] = v111;
  v1[17] = v113;
  swift_bridgeObjectRelease();
LABEL_46:
  uint64_t v120 = v1[24];
  uint64_t v121 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v120);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v121 + 40))(&v203, v120, v121);
  uint64_t v200 = v203;
  char v201 = v204;
  char v202 = v205;
  uint64_t v122 = sub_1ACD8D2F0(v1 + 21, (uint64_t)&v200);
  uint64_t v124 = v123;
  swift_beginAccess();
  v1[4] = v122;
  v1[5] = v124;
  swift_bridgeObjectRelease();
  sub_1ACD8F568(v197, v192, type metadata accessor for EyebrowBuilder.ListContext);
  LODWORD(v122) = swift_getEnumCaseMultiPayload();
  uint64_t v125 = v1[24];
  uint64_t v126 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v125);
  uint64_t v127 = *(void (**)(uint64_t, uint64_t))(v126 + 104);
  uint64_t v128 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48);
  if (v122 == 2)
  {
    v127(v125, v126);
    uint64_t v129 = v186;
    if ((*v128)(v50, 1, v186) == 1)
    {
      sub_1ACA50E78(v50, (uint64_t *)&unk_1EB773140);
      uint64_t v130 = 0;
      uint64_t v131 = 0;
    }
    else
    {
      uint64_t v134 = (void *)sub_1ACE75008();
      id v135 = objc_msgSend(v134, sel_lessVerboseDisplayStringWithoutTimeAndCurrentYear);

      uint64_t v130 = sub_1ACE761B8();
      uint64_t v131 = v136;

      (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v50, v129);
    }
    swift_beginAccess();
    v1[12] = v130;
    v1[13] = v131;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v132 = (uint64_t)v176;
    v127(v125, v126);
    uint64_t v133 = v186;
    if ((*v128)(v132, 1, v186) == 1)
    {
      sub_1ACA50E78(v132, (uint64_t *)&unk_1EB773140);
    }
    else
    {
      uint64_t v137 = v193;
      BOOL v138 = v175;
      (*(void (**)(char *, uint64_t, uint64_t))(v193 + 32))(v175, v132, v133);
      sub_1ACE74FB8();
      uint64_t v140 = v37;
      uint64_t v141 = _s18PodcastsFoundation32AbbreviatedTimeIntervalFormatterO6string4from13configurationSSSd_AC13ConfigurationVSgtFZ_0((uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, v139);
      uint64_t v143 = v142;
      (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v133);
      swift_beginAccess();
      v1[12] = v141;
      v1[13] = v143;
      uint64_t v37 = v140;
      swift_bridgeObjectRelease();
    }
    sub_1ACD8DD84(v192, type metadata accessor for EyebrowBuilder.ListContext);
  }
  uint64_t v144 = v1[24];
  uint64_t v145 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v144);
  uint64_t v146 = sub_1ACD8AA64(*((unsigned __int8 *)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace), v144, v145);
  uint64_t v148 = v147;
  swift_beginAccess();
  v1[6] = v146;
  v1[7] = v148;
  swift_bridgeObjectRelease();
  int64_t v149 = v187;
  sub_1ACD8F568(v197, (uint64_t)v187, type metadata accessor for EyebrowBuilder.ListContext);
  int v150 = swift_getEnumCaseMultiPayload();
  if (v150 == 4)
  {
    char v151 = *v149;
    uint64_t v154 = v1[24];
    uint64_t v155 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v154);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v155 + 40))(&v198, v154, v155);
    if ((v199 & 0x100) == 0) {
      goto LABEL_60;
    }
LABEL_65:
    uint64_t v162 = v184;
    uint64_t v163 = v183;
    goto LABEL_66;
  }
  if (v150 != 1)
  {
    sub_1ACD8DD84((uint64_t)v149, type metadata accessor for EyebrowBuilder.ListContext);
    goto LABEL_65;
  }
  char v151 = *v149;
  uint64_t v152 = v1[24];
  uint64_t v153 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v152);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v153 + 40))(&v198, v152, v153);
  if ((v199 & 0x100) != 0) {
    goto LABEL_65;
  }
LABEL_60:
  LOBYTE(v199) = v199 & 1;
  uint64_t v156 = sub_1ACD8B158(v1 + 21, (uint64_t)&v198, v151);
  uint64_t v158 = v156;
  uint64_t v159 = v157;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase) == 1 && v157)
  {
    uint64_t v198 = v156;
    uint64_t v199 = v157;
    sub_1ACA4F4AC();
    uint64_t v158 = sub_1ACE77038();
    uint64_t v161 = v160;
    swift_bridgeObjectRelease();
    uint64_t v159 = v161;
  }
  uint64_t v162 = v184;
  uint64_t v163 = v183;
  swift_beginAccess();
  v1[14] = v158;
  v1[15] = v159;
  swift_bridgeObjectRelease();
LABEL_66:
  id v164 = sub_1ACE75428();
  uint64_t v165 = v188;
  sub_1ACE75458();
  os_signpost_type_t v166 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v167 = v179;
    if ((*(unsigned int (**)(char *, uint64_t))(v162 + 88))(v163, v179) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v168 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v167);
      uint64_t v168 = "";
    }
    unsigned int v170 = v195;
    v178(v195, v165, v37);
    uint64_t v171 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v171 = 0;
    os_signpost_id_t v172 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v164, v166, v172, "resolveEyebrowElements", v168, v171, 2u);
    MEMORY[0x1AD11B340](v171, -1, -1);

    uint64_t v169 = *(void (**)(char *, uint64_t))(v22 + 8);
    v169(v165, v37);
    v169(v170, v37);
  }
  else
  {

    uint64_t v169 = *(void (**)(char *, uint64_t))(v22 + 8);
    v169(v165, v37);
  }
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v169)(v189, v37);
}

uint64_t sub_1ACD861C0()
{
  uint64_t v0 = sub_1ACE75448();
  uint64_t v120 = *(void *)(v0 - 8);
  uint64_t v121 = v0;
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v110 = (char *)&v109 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v109 = (char *)&v109 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v109 - v8;
  uint64_t v10 = type metadata accessor for EyebrowBuilder.ListContext(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v115 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v109 - v13;
  uint64_t v15 = sub_1ACE753F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v117 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v109 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v112 = (char *)&v109 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v109 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v29 = (char *)&v109 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v109 - v30;
  if (qword_1EB772EC8 != -1) {
    swift_once();
  }
  uint64_t v111 = v9;
  uint64_t v113 = v21;
  uint64_t v114 = v26;
  uint64_t v124 = (char *)v10;
  uint64_t v116 = v3;
  uint64_t v32 = sub_1ACE75438();
  uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB772EA8);
  sub_1ACE75428();
  sub_1ACE753C8();
  uint64_t v123 = v33;
  uint64_t v34 = sub_1ACE75428();
  os_signpost_type_t v35 = sub_1ACE76E18();
  char v36 = sub_1ACE76FA8();
  uint64_t v122 = v16;
  if (v36)
  {
    uint64_t v37 = v29;
    uint64_t v38 = v31;
    uint64_t v39 = v16;
    os_signpost_type_t v40 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v41 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v40(v37, v38, v15);
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    os_signpost_id_t v43 = sub_1ACE753D8();
    os_signpost_type_t v44 = v35;
    uint64_t v45 = v39;
    uint64_t v31 = v38;
    uint64_t v29 = v37;
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v34, v44, v43, "buildCaption", "", v42, 2u);
    MEMORY[0x1AD11B340](v42, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v15);
  }
  else
  {

    os_signpost_type_t v40 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v41 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v118 = v41;
  uint64_t v119 = (void (*)(char *, uint64_t, uint64_t))v40;
  v40(v29, v31, v15);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v126 = sub_1ACE75468();
  uint64_t v46 = (void *)v125;
  uint64_t v47 = v125 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context;
  sub_1ACD8F568(v125 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v14, type metadata accessor for EyebrowBuilder.ListContext);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
      uint64_t v48 = v46[24];
      uint64_t v49 = v46[25];
      __swift_project_boxed_opaque_existential_1(v46 + 21, v48);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v49 + 40))(&v127, v48, v49);
      if (v129) {
        goto LABEL_15;
      }
      uint64_t v50 = v29;
      uint64_t v51 = v31;
      v128 &= 1u;
      uint64_t v52 = sub_1ACD887A4((uint64_t)&v127);
      uint64_t v54 = v53;
      uint64_t v55 = sub_1ACE75428();
      double v56 = v114;
      sub_1ACE75458();
      os_signpost_type_t v57 = sub_1ACE76E08();
      if ((sub_1ACE76FA8() & 1) == 0) {
        goto LABEL_21;
      }
      uint64_t v125 = v54;
      swift_retain();
      id v58 = v111;
      sub_1ACE75488();
      swift_release();
      uint64_t v60 = v120;
      uint64_t v59 = v121;
      uint64_t v61 = v52;
      if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v58, v121) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v62 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
        uint64_t v62 = "";
      }
      uint64_t v93 = v119;
      uint64_t v94 = v50;
      uint64_t v95 = v50;
      double v96 = &v132;
      goto LABEL_36;
    case 2u:
      uint64_t v63 = v29;
      uint64_t v51 = v31;
      char v64 = v14[8];
      char v65 = v14[9];
      uint64_t v127 = *(void *)v14;
      char v128 = v64;
      char v129 = v65;
      uint64_t v52 = sub_1ACD88328(v46 + 21, &v127);
      uint64_t v67 = v66;
      uint64_t v55 = sub_1ACE75428();
      double v56 = v113;
      sub_1ACE75458();
      os_signpost_type_t v57 = sub_1ACE76E08();
      if ((sub_1ACE76FA8() & 1) == 0) {
        goto LABEL_21;
      }
      uint64_t v125 = v67;
      swift_retain();
      uint64_t v68 = v110;
      sub_1ACE75488();
      swift_release();
      uint64_t v70 = v120;
      uint64_t v69 = v121;
      uint64_t v61 = v52;
      if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v68, v121) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v62 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
        uint64_t v62 = "";
      }
      uint64_t v93 = v119;
      uint64_t v94 = v63;
      uint64_t v95 = v63;
      double v96 = &v131;
      goto LABEL_36;
    case 7u:
      unint64_t v78 = v29;
      uint64_t v51 = v31;
      swift_beginAccess();
      uint64_t v52 = v46[4];
      uint64_t v79 = v46[5];
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1ACE75428();
      double v56 = v112;
      sub_1ACE75458();
      os_signpost_type_t v57 = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        uint64_t v125 = v79;
        swift_retain();
        unsigned __int8 v80 = v109;
        sub_1ACE75488();
        swift_release();
        uint64_t v82 = v120;
        uint64_t v81 = v121;
        uint64_t v61 = v52;
        if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v80, v121) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v62 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
          uint64_t v62 = "";
        }
        uint64_t v93 = v119;
        uint64_t v94 = v78;
        uint64_t v95 = v78;
        double v96 = &v130;
LABEL_36:
        uint64_t v97 = *(v96 - 32);
        v93(v95, v97, v15);
        char v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v98 = 0;
        os_signpost_id_t v99 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v55, v57, v99, "buildCaption", v62, v98, 2u);
        MEMORY[0x1AD11B340](v98, -1, -1);

        double v83 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        v83(v97, v15);
        v83((uint64_t)v94, v15);
        swift_release();
        double v84 = v51;
        uint64_t v52 = v61;
      }
      else
      {
LABEL_21:

        double v83 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        v83((uint64_t)v56, v15);
        swift_release();
        double v84 = v51;
      }
LABEL_46:
      v83((uint64_t)v84, v15);
      return v52;
    default:
      sub_1ACD8DD84((uint64_t)v14, type metadata accessor for EyebrowBuilder.ListContext);
LABEL_15:
      uint64_t v71 = v46[24];
      uint64_t v72 = v46[25];
      __swift_project_boxed_opaque_existential_1(v46 + 21, v71);
      int v73 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v72 + 48))(v71, v72);
      uint64_t v74 = v116;
      if (v73)
      {
        uint64_t v75 = v117;
        if (v73 == 1) {
          uint64_t v76 = sub_1ACD890D4();
        }
        else {
          uint64_t v76 = sub_1ACD892D8();
        }
        uint64_t v85 = v76;
        unint64_t v87 = v77;
      }
      else
      {
        uint64_t v85 = sub_1ACD89478();
        unint64_t v87 = v86;
        uint64_t v75 = v117;
      }
      uint64_t v114 = v31;
      uint64_t v88 = v115;
      sub_1ACD8F568(v47, v115, type metadata accessor for EyebrowBuilder.ListContext);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1ACA50E78(v88, (uint64_t *)&unk_1EB772D70);
        swift_beginAccess();
        unint64_t v89 = v46[17];
        if (v89)
        {
          uint64_t v124 = v29;
          uint64_t v90 = v46[16];
          if (v87)
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773190);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1ACE84820;
            *(void *)(inited + 32) = v85;
            *(void *)(inited + 40) = v87;
            *(void *)(inited + 48) = v90;
            *(void *)(inited + 56) = v89;
            swift_bridgeObjectRetain();
            uint64_t v85 = sub_1ACD87D2C(0, (void *)inited);
            unint64_t v87 = v92;
            swift_setDeallocating();
            uint64_t v75 = v117;
            swift_arrayDestroy();
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t v85 = v90;
            unint64_t v87 = v89;
          }
          uint64_t v29 = v124;
        }
      }
      else
      {
        sub_1ACD8DD84(v88, type metadata accessor for EyebrowBuilder.ListContext);
      }
      uint64_t v125 = sub_1ACD89620(v85, v87);
      swift_bridgeObjectRelease();
      uint64_t v100 = sub_1ACE75428();
      sub_1ACE75458();
      os_signpost_type_t v101 = sub_1ACE76E08();
      if (sub_1ACE76FA8())
      {
        swift_retain();
        sub_1ACE75488();
        swift_release();
        uint64_t v103 = v120;
        uint64_t v102 = v121;
        if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v74, v121) == *MEMORY[0x1E4FBD340])
        {
          uint64_t v104 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v103 + 8))(v74, v102);
          uint64_t v104 = "";
        }
        v119(v29, (uint64_t)v75, v15);
        unint64_t v105 = v75;
        unint64_t v106 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v106 = 0;
        os_signpost_id_t v107 = sub_1ACE753D8();
        _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v100, v101, v107, "buildCaption", v104, v106, 2u);
        MEMORY[0x1AD11B340](v106, -1, -1);

        double v83 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        v83((uint64_t)v105, v15);
        v83((uint64_t)v29, v15);
      }
      else
      {

        double v83 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        v83((uint64_t)v75, v15);
      }
      swift_release();
      double v84 = v114;
      uint64_t v52 = v125;
      goto LABEL_46;
  }
}

uint64_t EyebrowBuilder.captionPublisher<A>(playStatePublisher:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v52 = a1;
  uint64_t v62 = a4;
  uint64_t v50 = a2;
  uint64_t v48 = type metadata accessor for EpisodePlayState();
  uint64_t v53 = a3;
  uint64_t v7 = sub_1ACE75678();
  uint64_t v57 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v44 - v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v58 = v7;
  uint64_t v47 = WitnessTable;
  uint64_t v10 = sub_1ACE75648();
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v49 = (char *)&v44 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB76DDA8);
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v55 = v12;
  uint64_t v56 = v10;
  uint64_t v46 = v13;
  uint64_t v14 = sub_1ACE75678();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v61 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v59 = (char *)&v44 - v15;
  uint64_t v16 = type metadata accessor for EyebrowBuilder.ListContext(0);
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76ADE8);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)v5 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context;
  uint64_t v23 = v5[24];
  uint64_t v24 = v5[25];
  __swift_project_boxed_opaque_existential_1(v5 + 21, v23);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 40))(&v63, v23, v24);
  uint64_t v25 = v63;
  char v26 = v64;
  char v27 = BYTE1(v64);
  uint64_t v28 = &v21[*(int *)(v19 + 56)];
  sub_1ACD8F568(v22, (uint64_t)v21, type metadata accessor for EyebrowBuilder.ListContext);
  *(void *)uint64_t v28 = v25;
  v28[8] = v26;
  v28[9] = v27;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    sub_1ACD8F568((uint64_t)v21, (uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EyebrowBuilder.ListContext);
    sub_1ACA50E78((uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1EB772D70);
  }
  else if (EnumCaseMultiPayload != 2 && (EnumCaseMultiPayload != 1 || (v27 & 1) != 0 || (v26 & 1) == 0 || v25))
  {
    EyebrowBuilder.captionPublisher.getter(v62);
    return sub_1ACA50E78((uint64_t)v21, (uint64_t *)&unk_1EB76ADE8);
  }
  sub_1ACD8DD84((uint64_t)v21, type metadata accessor for EyebrowBuilder.ListContext);
  sub_1ACD8F568(v22, (uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EyebrowBuilder.ListContext);
  unint64_t v31 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v32 = swift_allocObject();
  sub_1ACD8DF84((uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31);
  uint64_t v33 = v51;
  sub_1ACE75B58();
  swift_release();
  sub_1ACD8F520(&qword_1EB766F70, (void (*)(uint64_t))type metadata accessor for EpisodePlayState);
  uint64_t v34 = v49;
  uint64_t v35 = v58;
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v35);
  swift_retain();
  char v36 = v59;
  uint64_t v38 = v55;
  uint64_t v37 = v56;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v37);
  uint64_t v39 = sub_1ACA51EA4(&qword_1EB76DDA0, &qword_1EB76DDA8);
  uint64_t v40 = v61;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v63 = v38;
  uint64_t v64 = v40;
  uint64_t v65 = v39;
  uint64_t v66 = v41;
  uint64_t v42 = sub_1ACE75628();
  os_signpost_id_t v43 = v62;
  void v62[3] = v42;
  v43[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1(v43);
  MEMORY[0x1AD117EF0](v40, v41, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v36, v40);
}

uint64_t sub_1ACD874B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for EpisodePlayState();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD8F568(a2, (uint64_t)v17, type metadata accessor for EyebrowBuilder.ListContext);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1ACD8F568(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    if (swift_getEnumCaseMultiPayload() == 3
      && (sub_1ACD8F568((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for EpisodePlayState), (v11[16] & 1) == 0))
    {
      sub_1ACD8DD84((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      *(_OWORD *)a3 = xmmword_1ACEA15B0;
      *(_WORD *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 18) = 0;
    }
    else
    {
      sub_1ACD8DD84((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      sub_1ACD8F568(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1ACA50E78((uint64_t)v8, (uint64_t *)&unk_1EB773140);
        uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78) + 48);
        uint64_t v19 = sub_1ACE750A8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a3, 1, 1, v19);
        *(unsigned char *)(a3 + v18) = 0;
      }
      else
      {
        sub_1ACD8DD84((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
      }
    }
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1ACD8F568(a1, a3, (uint64_t (*)(void))type metadata accessor for EpisodePlayState);
    return sub_1ACD8DD84((uint64_t)v17, type metadata accessor for EyebrowBuilder.ListContext);
  }
}

uint64_t sub_1ACD877D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = *a2;
  uint64_t v22 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACA3E158((uint64_t)(a2 + 21), (uint64_t)v24);
  sub_1ACD83E80(a1, v10);
  char v23 = *((unsigned char *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style);
  char v11 = *((unsigned char *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase);
  swift_beginAccess();
  uint64_t v12 = a2[18];
  uint64_t v13 = a2[19];
  sub_1ACA3AAD4((uint64_t)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, (uint64_t)v7, &qword_1EB772E38);
  int v14 = *((unsigned __int8 *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge);
  char v15 = *((unsigned char *)a2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace);
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  swift_bridgeObjectRetain();
  sub_1ACD8DC24(v18, (uint64_t)v10, &v23, v11, v12, v13, (uint64_t)v7, v14, v15, v21, v17, v16);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  EyebrowBuilder.captionPublisher.getter(v24);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v24, v25);
  *uint64_t v22 = sub_1ACE75AD8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(uint64_t a1, uint64_t a2, char *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9)
{
  int v27 = a8;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a1, v16);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_1ACD8D104((uint64_t)v20, a2, a3, a4, a5, v25, v26, v27, a9, v9, v16, v15);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v22;
}

uint64_t EyebrowBuilder.__allocating_init(episode:style:explicitSymbol:abbreviatedPubDateConfig:hostingViewHasLimitedSpace:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v24 = a4;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  MEMORY[0x1F4188790](v12 - 8);
  int v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  sub_1ACA3E158(a1, (uint64_t)v26);
  swift_storeEnumTagMultiPayload();
  char v25 = (char)a2;
  sub_1ACA3AAD4(a5, (uint64_t)v14, &qword_1EB772E38);
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  uint64_t v21 = sub_1ACD8DC24(v20, (uint64_t)v17, &v25, 1, a3, v24, (uint64_t)v14, 1, a6, v6, v18, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  sub_1ACA50E78(a5, &qword_1EB772E38);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v21;
}

uint64_t static EyebrowBuilder.concatenate(captionElements:uppercased:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1ACD8D0D4((uint64_t)v5, a2, v2, v4);
}

uint64_t sub_1ACD87D2C(char a1, void *a2)
{
  unint64_t v3 = a2[2];
  if (v3 < 2)
  {
    if (!v3) {
      return 0;
    }
    uint64_t v4 = a2[4];
    if (a1)
    {
      sub_1ACA4F4AC();
      return sub_1ACE77038();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    return v4;
  }
  else
  {
    uint64_t v4 = a2[4];
    uint64_t v24 = a2 + 4;
    uint64_t v5 = a2[5];
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v7 = 1;
    unint64_t v25 = v3;
    while (v7 != v3)
    {
      if (v5)
      {
        uint64_t v9 = &v24[2 * v7];
        uint64_t v11 = *v9;
        uint64_t v10 = v9[1];
        sub_1ACA4F4AC();
        swift_bridgeObjectRetain_n();
        uint64_t v12 = (void *)sub_1ACE77028();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_1ACA41EA0(0, v12[2] + 1, 1, v12);
        }
        unint64_t v14 = v12[2];
        unint64_t v13 = v12[3];
        int64_t v15 = v14 + 1;
        uint64_t v26 = v7;
        if (v14 >= v13 >> 1) {
          uint64_t v12 = sub_1ACA41EA0((void *)(v13 > 1), v14 + 1, 1, v12);
        }
        _OWORD v12[2] = v15;
        uint64_t v16 = &v12[2 * v14];
        v16[4] = v11;
        v16[5] = v10;
        uint64_t v27 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1ACC82D44(0, v15, 0);
        uint64_t v17 = v12 + 5;
        do
        {
          uint64_t v18 = *(v17 - 1);
          uint64_t v19 = *v17;
          if (a1)
          {
            uint64_t v18 = sub_1ACE77038();
            uint64_t v19 = v20;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          unint64_t v22 = *(void *)(v27 + 16);
          unint64_t v21 = *(void *)(v27 + 24);
          if (v22 >= v21 >> 1) {
            sub_1ACC82D44(v21 > 1, v22 + 1, 1);
          }
          v17 += 2;
          *(void *)(v27 + 16) = v22 + 1;
          uint64_t v23 = v27 + 16 * v22;
          *(void *)(v23 + 32) = v18;
          *(void *)(v23 + 40) = v19;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
        sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
        uint64_t v4 = sub_1ACE76138();
        uint64_t v5 = v8;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v3 = v25;
        uint64_t v7 = v26;
      }
      if (++v7 == v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACD88060(uint64_t a1, uint64_t a2)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)v15 - v10;
  if (sub_1ACE76A88() < 2)
  {
    sub_1ACE76AC8();
    uint64_t v13 = v17;
    if (*((void *)&v17 + 1) && (v4 & 1) != 0)
    {
      long long v16 = v17;
      sub_1ACA4F4AC();
      uint64_t v13 = sub_1ACE77038();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a2);
    sub_1ACE76AE8();
    uint64_t v12 = sub_1ACE76AC8();
    v15[1] = v16;
    MEMORY[0x1F4188790](v12);
    LOBYTE(v15[-1]) = v4 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E040);
    swift_getAssociatedConformanceWitness();
    sub_1ACE76438();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    return v17;
  }
  return v13;
}

uint64_t sub_1ACD88328(void *a1, uint64_t *a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  int v7 = *((unsigned __int8 *)a2 + 9);
  sub_1ACA3E158((uint64_t)a1, (uint64_t)v60);
  switch(sub_1ACD8DAFC(v60))
  {
    case 1u:
    case 2u:
      swift_beginAccess();
      uint64_t v8 = v2[13];
      if (v8)
      {
        uint64_t v9 = v3[12];
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v11 = v10[2];
        unint64_t v12 = v10[3];
        unint64_t v13 = v11 + 1;
        if (v11 >= v12 >> 1)
        {
          uint64_t v51 = v10;
          unint64_t v52 = v10[2];
          uint64_t v53 = sub_1ACA41EA0((void *)(v12 > 1), v11 + 1, 1, v51);
          unint64_t v11 = v52;
          uint64_t v10 = v53;
        }
        void v10[2] = v13;
        unint64_t v14 = &v10[2 * v11];
        v14[4] = v9;
        v14[5] = v8;
      }
      else
      {
        uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      }
      *((unsigned char *)v3 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) = 1;
      uint64_t v28 = v3[24];
      uint64_t v29 = v3[25];
      __swift_project_boxed_opaque_existential_1(v3 + 21, v28);
      int v30 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v29 + 48))(v28, v29);
      if (v30)
      {
        if (v30 == 1)
        {
          uint64_t v31 = sub_1ACD8BCB4(0, 1);
          if (v32)
          {
            uint64_t v26 = v31;
            uint64_t v27 = v32;
LABEL_30:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_1ACA41EA0(0, v10[2] + 1, 1, v10);
            }
            unint64_t v38 = v10[2];
            unint64_t v37 = v10[3];
            goto LABEL_33;
          }
          uint64_t v33 = sub_1ACD897F8(0);
        }
        else
        {
          uint64_t v33 = sub_1ACD892D8();
        }
      }
      else
      {
        uint64_t v33 = sub_1ACD89478();
      }
      uint64_t v26 = v33;
      uint64_t v27 = v34;
      if (v34) {
        goto LABEL_30;
      }
LABEL_36:
      uint64_t v57 = v5;
      char v58 = v6;
      char v59 = v7;
      uint64_t v41 = sub_1ACD8C428(a1, (uint64_t)&v57);
      if (v42)
      {
        uint64_t v43 = v41;
        uint64_t v44 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1ACA41EA0(0, v10[2] + 1, 1, v10);
        }
        unint64_t v46 = v10[2];
        unint64_t v45 = v10[3];
        if (v46 >= v45 >> 1) {
          uint64_t v10 = sub_1ACA41EA0((void *)(v45 > 1), v46 + 1, 1, v10);
        }
        void v10[2] = v46 + 1;
        uint64_t v47 = &v10[2 * v46];
        v47[4] = v43;
        uint64_t v47[5] = v44;
      }
      if (v7) {
        uint64_t v10 = (void *)sub_1ACC0E87C((uint64_t)v10);
      }
      uint64_t v48 = sub_1ACD87D2C(0, v10);
      swift_bridgeObjectRelease();
      return v48;
    case 3u:
      *((unsigned char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) = 0;
      uint64_t v21 = v2[24];
      uint64_t v22 = v2[25];
      __swift_project_boxed_opaque_existential_1(v2 + 21, v21);
      int v23 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
      if (v23)
      {
        if (v23 == 1)
        {
          uint64_t v24 = sub_1ACD8BCB4(0, 1);
          if (v25 || (uint64_t v24 = sub_1ACD897F8(0), v25) || (uint64_t v24 = sub_1ACD8A06C(0), v25))
          {
            uint64_t v26 = v24;
            uint64_t v27 = v25;
            goto LABEL_26;
          }
          uint64_t v35 = sub_1ACD8B5FC(0);
        }
        else
        {
          uint64_t v35 = sub_1ACD892D8();
        }
      }
      else
      {
        uint64_t v35 = sub_1ACD89478();
      }
      uint64_t v26 = v35;
      uint64_t v27 = v36;
      if (!v36)
      {
LABEL_27:
        uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_36;
      }
LABEL_26:
      uint64_t v10 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v38 = v10[2];
      unint64_t v37 = v10[3];
LABEL_33:
      unint64_t v39 = v38 + 1;
      if (v38 >= v37 >> 1)
      {
        uint64_t v50 = sub_1ACA41EA0((void *)(v37 > 1), v38 + 1, 1, v10);
        unint64_t v39 = v38 + 1;
        uint64_t v10 = v50;
      }
      void v10[2] = v39;
      uint64_t v40 = &v10[2 * v38];
      v40[4] = v26;
      v40[5] = v27;
      goto LABEL_36;
    default:
      swift_beginAccess();
      uint64_t v15 = v2[13];
      if (!v15) {
        goto LABEL_27;
      }
      uint64_t v16 = v3[12];
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v17 = v10[2];
      unint64_t v18 = v10[3];
      unint64_t v19 = v17 + 1;
      if (v17 >= v18 >> 1)
      {
        uint64_t v54 = v10;
        unint64_t v55 = v10[2];
        uint64_t v56 = sub_1ACA41EA0((void *)(v18 > 1), v17 + 1, 1, v54);
        unint64_t v17 = v55;
        uint64_t v10 = v56;
      }
      void v10[2] = v19;
      uint64_t v20 = &v10[2 * v17];
      v20[4] = v16;
      v20[5] = v15;
      goto LABEL_36;
  }
}

uint64_t sub_1ACD887A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v84 = *v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB772E38);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  int v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v72 - v8;
  uint64_t v83 = type metadata accessor for EyebrowBuilder.ListContext(0);
  uint64_t v10 = MEMORY[0x1F4188790](v83);
  uint64_t v81 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v72 - v12;
  unint64_t v14 = *(void *)a1;
  LODWORD(v15) = *(unsigned __int8 *)(a1 + 8);
  uint64_t v16 = v2[24];
  uint64_t v17 = v2[25];
  uint64_t v82 = v2 + 21;
  __swift_project_boxed_opaque_existential_1(v2 + 21, v16);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 72))(v16, v17))
  {
    swift_beginAccess();
    uint64_t v18 = v2[15];
    unint64_t v80 = v14;
    int v79 = v15;
    if (v18)
    {
      uint64_t v19 = v2[14];
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v15 = v20[2];
      unint64_t v21 = v20[3];
      if (v15 >= v21 >> 1) {
        uint64_t v20 = sub_1ACA41EA0((void *)(v21 > 1), v15 + 1, 1, v20);
      }
      v20[2] = v15 + 1;
      uint64_t v22 = &v20[2 * v15];
      void v22[4] = v19;
      void v22[5] = v18;
      unint64_t v14 = v80;
      LOBYTE(v15) = v79;
    }
    else
    {
      uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    }
    if (v14 < 4) {
      char v23 = v15;
    }
    else {
      char v23 = 0;
    }
    if ((v23 & 1) == 0) {
      goto LABEL_33;
    }
    int v73 = v7;
    sub_1ACA3E158((uint64_t)v82, (uint64_t)v87);
    swift_storeEnumTagMultiPayload();
    v85[0] = 1;
    uint64_t v72 = OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase;
    LODWORD(v78) = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase);
    swift_beginAccess();
    uint64_t v24 = v2[19];
    uint64_t v77 = v2[18];
    sub_1ACA3AAD4((uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, (uint64_t)v9, &qword_1EB772E38);
    int v25 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge);
    int v75 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace);
    int v76 = v25;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v88;
    uint64_t v28 = v89;
    uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
    uint64_t v74 = &v72;
    MEMORY[0x1F4188790](v29);
    uint64_t v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v31);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1ACD8D104((uint64_t)v31, (uint64_t)v13, v85, v78, v77, v24, (uint64_t)v9, v76, v75, v26, v27, v28);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v87);
    swift_beginAccess();
    if (*(unsigned char *)(v33 + 160) == 1)
    {
      swift_beginAccess();
      uint64_t v34 = *(void *)(v33 + 24);
      int v7 = v73;
      if (v34)
      {
        uint64_t v35 = *(void *)(v33 + 16);
        swift_beginAccess();
        *((unsigned char *)v2 + 160) = 1;
        swift_beginAccess();
        char v36 = *(unsigned char *)(v33 + 161);
        swift_beginAccess();
        *((unsigned char *)v2 + 161) = v36;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_1ACA41EA0(0, v20[2] + 1, 1, v20);
        }
        unint64_t v38 = v20[2];
        unint64_t v37 = v20[3];
        if (v38 >= v37 >> 1) {
          uint64_t v20 = sub_1ACA41EA0((void *)(v37 > 1), v38 + 1, 1, v20);
        }
        v20[2] = v38 + 1;
        unint64_t v39 = &v20[2 * v38];
        v39[4] = v35;
        _OWORD v39[5] = v34;
        uint64_t v40 = sub_1ACD87D2C(*((unsigned char *)v2 + v72), v20);
        swift_bridgeObjectRelease();
LABEL_45:
        swift_release();
        return v40;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      int v7 = v73;
    }
    unint64_t v14 = v80;
    LOBYTE(v15) = v79;
  }
  swift_beginAccess();
  uint64_t v41 = v2[15];
  if (v41)
  {
    char v42 = v15;
    unint64_t v43 = v14;
    uint64_t v44 = v2[14];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v15 = v20[2];
    unint64_t v45 = v20[3];
    if (v15 >= v45 >> 1) {
      uint64_t v20 = sub_1ACA41EA0((void *)(v45 > 1), v15 + 1, 1, v20);
    }
    v20[2] = v15 + 1;
    unint64_t v46 = &v20[2 * v15];
    v46[4] = v44;
    uint64_t v46[5] = v41;
    unint64_t v14 = v43;
    LOBYTE(v15) = v42;
  }
  else
  {
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v14 < 4) {
    char v47 = v15;
  }
  else {
    char v47 = 0;
  }
  if ((v47 & 1) == 0)
  {
LABEL_33:
    if (v20[2])
    {
      uint64_t v51 = v20[4];
      unint64_t v50 = v20[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v51 = 0;
      unint64_t v50 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1ACD89620(v51, v50);
    swift_bridgeObjectRelease();
    return v40;
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) != 1 || !v20[2])
  {
    sub_1ACA3E158((uint64_t)v82, (uint64_t)v87);
    swift_storeEnumTagMultiPayload();
    char v86 = 1;
    uint64_t v78 = OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase;
    LODWORD(v83) = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase);
    swift_beginAccess();
    uint64_t v82 = (uint64_t *)v2[18];
    uint64_t v52 = (uint64_t)v7;
    uint64_t v53 = v2[19];
    sub_1ACA3AAD4((uint64_t)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, v52, &qword_1EB772E38);
    int v54 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge);
    int v79 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace);
    LODWORD(v80) = v54;
    uint64_t v55 = swift_allocObject();
    uint64_t v57 = v88;
    uint64_t v56 = v89;
    uint64_t v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
    MEMORY[0x1F4188790](v58);
    uint64_t v60 = (char *)&v72 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v61 + 16))(v60);
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_1ACD8D104((uint64_t)v60, v81, &v86, v83, (uint64_t)v82, v53, v52, v80, v79, v55, v57, v56);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v87);
    swift_beginAccess();
    uint64_t v63 = *(void *)(v62 + 24);
    if (v63)
    {
      uint64_t v64 = *(void *)(v62 + 16);
      swift_beginAccess();
      char v65 = *(unsigned char *)(v62 + 160);
      swift_beginAccess();
      *((unsigned char *)v2 + 160) = v65;
      swift_beginAccess();
      char v66 = *(unsigned char *)(v62 + 161);
      swift_beginAccess();
      *((unsigned char *)v2 + 161) = v66;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_1ACA41EA0(0, v20[2] + 1, 1, v20);
      }
      uint64_t v67 = v78;
      unint64_t v69 = v20[2];
      unint64_t v68 = v20[3];
      if (v69 >= v68 >> 1) {
        uint64_t v20 = sub_1ACA41EA0((void *)(v68 > 1), v69 + 1, 1, v20);
      }
      v20[2] = v69 + 1;
      uint64_t v70 = &v20[2 * v69];
      v70[4] = v64;
      v70[5] = v63;
    }
    else
    {
      uint64_t v67 = v78;
    }
    uint64_t v40 = sub_1ACD87D2C(*((unsigned char *)v2 + v67), v20);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v48 = v20[4];
  unint64_t v49 = v20[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1ACD89620(v48, v49);
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1ACD890D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (unsigned __int8 *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD8F568((uint64_t)v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v4, type metadata accessor for EyebrowBuilder.ListContext);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 7u:
      return sub_1ACD8B5FC(0);
    case 2u:
      sub_1ACD8DD84((uint64_t)v4, type metadata accessor for EyebrowBuilder.ListContext);
      return 0;
    case 3u:
      sub_1ACA50E78((uint64_t)v4, (uint64_t *)&unk_1EB772D70);
      goto LABEL_12;
    case 5u:
    case 6u:
LABEL_12:
      uint64_t v11 = v1[24];
      uint64_t v12 = v1[25];
      __swift_project_boxed_opaque_existential_1(v1 + 21, v11);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 72))(v11, v12)) {
        goto LABEL_13;
      }
      return sub_1ACD8B5FC(0);
    default:
      int v5 = *v4;
      uint64_t v6 = v1[24];
      uint64_t v7 = v1[25];
      __swift_project_boxed_opaque_existential_1(v1 + 21, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 72))(v6, v7) & 1) == 0) {
        return sub_1ACD8B5FC(0);
      }
      if (v5 != 2 && (v5 & 1) == 0)
      {
        uint64_t result = sub_1ACD897F8(0);
        if (v10) {
          return result;
        }
        return sub_1ACD8B5FC(0);
      }
LABEL_13:
      uint64_t result = sub_1ACD8BCB4(0, 0);
      if (!v13)
      {
        uint64_t result = sub_1ACD897F8(0);
        if (!v14)
        {
          uint64_t result = sub_1ACD8A06C(0);
          if (!v15) {
            return sub_1ACD8B5FC(0);
          }
        }
      }
      return result;
  }
}

uint64_t sub_1ACD892D8()
{
  uint64_t v1 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (unsigned __int8 *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACD8F568(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1ACD8DD84((uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
LABEL_4:
    uint64_t result = sub_1ACD8BCB4(0, 0);
    if (!v6)
    {
      uint64_t result = sub_1ACD897F8(0);
      if (!v7)
      {
        uint64_t result = sub_1ACD8A06C(0);
        if (!v8) {
          goto LABEL_11;
        }
      }
    }
    return result;
  }
  int v4 = *v3;
  if (v4 == 2) {
    goto LABEL_4;
  }
  if (v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v9 = sub_1ACE77848();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_14:
    uint64_t result = sub_1ACD8BCB4(1, 0);
    if (!v12)
    {
      uint64_t result = sub_1ACD897F8(1);
      if (!v13)
      {
        uint64_t result = sub_1ACD8A06C(1);
        if (!v14)
        {
          char v11 = 1;
          return sub_1ACD8B5FC(v11);
        }
      }
    }
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1ACD897F8(0);
  if (!v10)
  {
LABEL_11:
    char v11 = 0;
    return sub_1ACD8B5FC(v11);
  }
  return result;
}

uint64_t sub_1ACD89478()
{
  uint64_t v1 = type metadata accessor for EyebrowBuilder.ListContext(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (unsigned __int8 *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[25];
  __swift_project_boxed_opaque_existential_1(v0 + 21, v4);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(v4, v5))
  {
    sub_1ACD8F568((uint64_t)v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, (uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1ACD8DD84((uint64_t)v3, type metadata accessor for EyebrowBuilder.ListContext);
      char v6 = 0;
    }
    else
    {
      int v8 = *v3;
      if (v8 == 2)
      {
        char v6 = 0;
      }
      else if (v8)
      {
        char v6 = sub_1ACE77848();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        char v6 = 1;
      }
    }
    return sub_1ACD8C1DC(v6 & 1);
  }
  else
  {
    return sub_1ACD8B5FC(0);
  }
}

uint64_t sub_1ACD89620(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = a1;
    uint64_t v9 = a1;
    unint64_t v4 = a2;
    if ((*((unsigned char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    unint64_t v4 = 0xE000000000000000;
    uint64_t v9 = 0;
    if ((*((unsigned char *)v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) & 1) == 0)
    {
      uint64_t v3 = 0;
      goto LABEL_14;
    }
    uint64_t v3 = 0;
  }
  swift_beginAccess();
  if (!v2[7])
  {
LABEL_14:
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5) {
    sub_1ACE762C8();
  }
  sub_1ACE762C8();
  swift_bridgeObjectRelease();
  uint64_t v3 = v9;
LABEL_15:
  uint64_t v6 = v2[24];
  uint64_t v7 = v2[25];
  __swift_project_boxed_opaque_existential_1(v2 + 21, v6);
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 64))(v6, v7);
  swift_beginAccess();
  if ((v6 & 1) != 0 && v2[19])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1ACD897F8(char a1)
{
  uint64_t v3 = (void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 192);
  uint64_t v5 = *(void *)(v1 + 200);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 168), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  uint64_t v7 = 0;
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = v6;
    if (v6 >= 1)
    {
      swift_beginAccess();
      *(unsigned char *)(v1 + 160) = 1;
      uint64_t v10 = *(void *)(v1 + 192);
      uint64_t v11 = *(void *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v10);
      char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
      uint64_t v13 = *(void *)(v1 + 192);
      uint64_t v14 = *(void *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
      if (!v12)
      {
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v52 = swift_allocObject();
        uint64_t v53 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v52 + 16) = xmmword_1ACE843F0;
        uint64_t v54 = MEMORY[0x1E4FBC240];
        *(void *)(v52 + 56) = v53;
        *(void *)(v52 + 64) = v54;
        *(void *)(v52 + 32) = v9;
        uint64_t v7 = sub_1ACE76188();
        goto LABEL_42;
      }
      if (v12 == 1 || (a1 & 1) != 0)
      {
        int v15 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style);
        swift_bridgeObjectRetain();
        if (v15 == 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v16 = swift_allocObject();
        uint64_t v17 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v16 + 16) = xmmword_1ACE843F0;
        uint64_t v18 = MEMORY[0x1E4FBC240];
        *(void *)(v16 + 56) = v17;
        *(void *)(v16 + 64) = v18;
        *(void *)(v16 + 32) = v9;
        uint64_t v7 = sub_1ACE76188();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = sub_1ACD8C2E0();
        if (v20)
        {
          uint64_t v21 = v19;
          uint64_t v22 = v20;
          sub_1ACA4F4AC();
          swift_bridgeObjectRetain();
          char v23 = (void *)sub_1ACE77028();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v23 = sub_1ACA41EA0(0, v23[2] + 1, 1, v23);
          }
          unint64_t v25 = v23[2];
          unint64_t v24 = v23[3];
          unint64_t v26 = v25 + 1;
          if (v25 >= v24 >> 1) {
            char v23 = sub_1ACA41EA0((void *)(v24 > 1), v25 + 1, 1, v23);
          }
          v23[2] = v26;
          uint64_t v27 = &v23[2 * v25];
          _DWORD v27[4] = v21;
          v27[5] = v22;
          uint64_t v56 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1ACC82D44(0, v25 + 1, 0);
          uint64_t v28 = v23 + 5;
          do
          {
            uint64_t v30 = *(v28 - 1);
            uint64_t v29 = *v28;
            unint64_t v31 = *(void *)(v56 + 16);
            unint64_t v32 = *(void *)(v56 + 24);
            swift_bridgeObjectRetain();
            if (v31 >= v32 >> 1) {
              sub_1ACC82D44(v32 > 1, v31 + 1, 1);
            }
            v28 += 2;
            *(void *)(v56 + 16) = v31 + 1;
            uint64_t v33 = v56 + 16 * v31;
            *(void *)(v33 + 32) = v30;
            *(void *)(v33 + 40) = v29;
            --v26;
          }
          while (v26);
LABEL_35:
          swift_bridgeObjectRelease_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
          sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
          uint64_t v7 = sub_1ACE76138();
          swift_bridgeObjectRelease();
LABEL_42:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v34 = swift_allocObject();
        uint64_t v35 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v34 + 16) = xmmword_1ACE843F0;
        uint64_t v36 = MEMORY[0x1E4FBC240];
        *(void *)(v34 + 56) = v35;
        *(void *)(v34 + 64) = v36;
        *(void *)(v34 + 32) = v9;
        uint64_t v7 = sub_1ACE76188();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_1ACD8C2E0();
        if (v38)
        {
          uint64_t v39 = v37;
          uint64_t v40 = v38;
          sub_1ACA4F4AC();
          swift_bridgeObjectRetain();
          uint64_t v41 = (void *)sub_1ACE77028();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v41 = sub_1ACA41EA0(0, v41[2] + 1, 1, v41);
          }
          unint64_t v43 = v41[2];
          unint64_t v42 = v41[3];
          unint64_t v44 = v43 + 1;
          if (v43 >= v42 >> 1) {
            uint64_t v41 = sub_1ACA41EA0((void *)(v42 > 1), v43 + 1, 1, v41);
          }
          uint64_t v41[2] = v44;
          unint64_t v45 = &v41[2 * v43];
          v45[4] = v39;
          void v45[5] = v40;
          uint64_t v57 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1ACC82D44(0, v43 + 1, 0);
          unint64_t v46 = v41 + 5;
          do
          {
            uint64_t v48 = *(v46 - 1);
            uint64_t v47 = *v46;
            unint64_t v49 = *(void *)(v57 + 16);
            unint64_t v50 = *(void *)(v57 + 24);
            swift_bridgeObjectRetain();
            if (v49 >= v50 >> 1) {
              sub_1ACC82D44(v50 > 1, v49 + 1, 1);
            }
            v46 += 2;
            *(void *)(v57 + 16) = v49 + 1;
            uint64_t v51 = v57 + 16 * v49;
            *(void *)(v51 + 32) = v48;
            *(void *)(v51 + 40) = v47;
            --v44;
          }
          while (v44);
          goto LABEL_35;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_1ACD8A06C(char a1)
{
  uint64_t v3 = (void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 192);
  uint64_t v5 = *(void *)(v1 + 200);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 168), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v5);
  uint64_t v7 = 0;
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = v6;
    if (v6 >= 1)
    {
      swift_beginAccess();
      *(unsigned char *)(v1 + 161) = 1;
      uint64_t v10 = *(void *)(v1 + 192);
      uint64_t v11 = *(void *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v10);
      char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
      uint64_t v13 = *(void *)(v1 + 192);
      uint64_t v14 = *(void *)(v1 + 200);
      __swift_project_boxed_opaque_existential_1(v3, v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
      if (!v12)
      {
        if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v51 = swift_allocObject();
        uint64_t v52 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v51 + 16) = xmmword_1ACE843F0;
        uint64_t v53 = MEMORY[0x1E4FBC240];
        *(void *)(v51 + 56) = v52;
        *(void *)(v51 + 64) = v53;
        *(void *)(v51 + 32) = v9;
        uint64_t v7 = sub_1ACE76188();
        goto LABEL_42;
      }
      if (v12 == 1 || (a1 & 1) != 0)
      {
        if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v15 = swift_allocObject();
        uint64_t v16 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
        uint64_t v17 = MEMORY[0x1E4FBC240];
        *(void *)(v15 + 56) = v16;
        *(void *)(v15 + 64) = v17;
        *(void *)(v15 + 32) = v9;
        uint64_t v7 = sub_1ACE76188();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_1ACD8C2E0();
        if (v19)
        {
          uint64_t v20 = v18;
          uint64_t v21 = v19;
          sub_1ACA4F4AC();
          swift_bridgeObjectRetain();
          uint64_t v22 = (void *)sub_1ACE77028();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1ACA41EA0(0, v22[2] + 1, 1, v22);
          }
          unint64_t v24 = v22[2];
          unint64_t v23 = v22[3];
          unint64_t v25 = v24 + 1;
          if (v24 >= v23 >> 1) {
            uint64_t v22 = sub_1ACA41EA0((void *)(v23 > 1), v24 + 1, 1, v22);
          }
          v22[2] = v25;
          unint64_t v26 = &v22[2 * v24];
          v26[4] = v20;
          uint64_t v26[5] = v21;
          uint64_t v55 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1ACC82D44(0, v24 + 1, 0);
          uint64_t v27 = v22 + 5;
          do
          {
            uint64_t v29 = *(v27 - 1);
            uint64_t v28 = *v27;
            unint64_t v30 = *(void *)(v55 + 16);
            unint64_t v31 = *(void *)(v55 + 24);
            swift_bridgeObjectRetain();
            if (v30 >= v31 >> 1) {
              sub_1ACC82D44(v31 > 1, v30 + 1, 1);
            }
            v27 += 2;
            *(void *)(v55 + 16) = v30 + 1;
            uint64_t v32 = v55 + 16 * v30;
            *(void *)(v32 + 32) = v29;
            *(void *)(v32 + 40) = v28;
            --v25;
          }
          while (v25);
LABEL_35:
          swift_bridgeObjectRelease_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
          sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
          uint64_t v7 = sub_1ACE76138();
          swift_bridgeObjectRelease();
LABEL_42:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v33 = swift_allocObject();
        uint64_t v34 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v33 + 16) = xmmword_1ACE843F0;
        uint64_t v35 = MEMORY[0x1E4FBC240];
        *(void *)(v33 + 56) = v34;
        *(void *)(v33 + 64) = v35;
        *(void *)(v33 + 32) = v9;
        uint64_t v7 = sub_1ACE76188();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = sub_1ACD8C2E0();
        if (v37)
        {
          uint64_t v38 = v36;
          uint64_t v39 = v37;
          sub_1ACA4F4AC();
          swift_bridgeObjectRetain();
          uint64_t v40 = (void *)sub_1ACE77028();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v40 = sub_1ACA41EA0(0, v40[2] + 1, 1, v40);
          }
          unint64_t v42 = v40[2];
          unint64_t v41 = v40[3];
          unint64_t v43 = v42 + 1;
          if (v42 >= v41 >> 1) {
            uint64_t v40 = sub_1ACA41EA0((void *)(v41 > 1), v42 + 1, 1, v40);
          }
          void v40[2] = v43;
          unint64_t v44 = &v40[2 * v42];
          v44[4] = v38;
          v44[5] = v39;
          uint64_t v56 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1ACC82D44(0, v42 + 1, 0);
          unint64_t v45 = v40 + 5;
          do
          {
            uint64_t v47 = *(v45 - 1);
            uint64_t v46 = *v45;
            unint64_t v48 = *(void *)(v56 + 16);
            unint64_t v49 = *(void *)(v56 + 24);
            swift_bridgeObjectRetain();
            if (v48 >= v49 >> 1) {
              sub_1ACC82D44(v49 > 1, v48 + 1, 1);
            }
            v45 += 2;
            *(void *)(v56 + 16) = v48 + 1;
            uint64_t v50 = v56 + 16 * v48;
            *(void *)(v50 + 32) = v47;
            *(void *)(v50 + 40) = v46;
            --v43;
          }
          while (v43);
          goto LABEL_35;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_1ACD8A8A4(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, double a7)
{
  if (!a2)
  {
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    if (a7 <= 0.0) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  if (v16 >= v15 >> 1) {
    uint64_t v14 = sub_1ACA41EA0((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  void v14[2] = v16 + 1;
  uint64_t v17 = &v14[2 * v16];
  void v17[4] = a1;
  v17[5] = a2;
  if (a7 > 0.0)
  {
LABEL_7:
    id v18 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, a3 & 1, a4 & 1, a7);
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = sub_1ACE761B8();
      uint64_t v22 = v21;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_1ACA41EA0(0, v14[2] + 1, 1, v14);
      }
      unint64_t v24 = v14[2];
      unint64_t v23 = v14[3];
      if (v24 >= v23 >> 1) {
        uint64_t v14 = sub_1ACA41EA0((void *)(v23 > 1), v24 + 1, 1, v14);
      }
      void v14[2] = v24 + 1;
      unint64_t v25 = &v14[2 * v24];
      v25[4] = v20;
      void v25[5] = v22;
    }
  }
LABEL_13:
  if (a5) {
    uint64_t v14 = (void *)sub_1ACC0E87C((uint64_t)v14);
  }
  uint64_t v26 = sub_1ACD87D2C(a6 & 1, v14);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1ACD8AA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(v41) = a1;
  uint64_t v40 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v39 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1ACE750A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = &v37[-v15];
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  if (v17(a2, a3))
  {
    int v38 = sub_1ACD8CDE4(v41 & 1, a2, a3);
    id v18 = *(void (**)(uint64_t, uint64_t))(a3 + 104);
    uint64_t v41 = v3;
    v18(a2, a3);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_1ACE75098();
      sub_1ACA50E78((uint64_t)v9, (uint64_t *)&unk_1EB773140);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v16, v9, v10);
    }
    sub_1ACE75098();
    sub_1ACD8F520((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
    char v20 = sub_1ACE76148();
    uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
    v21(v14, v10);
    v21(v16, v10);
    if (v20)
    {
      if (v38)
      {
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
        if (v23)
        {
          uint64_t v24 = v22;
          uint64_t v25 = v23;
          if (qword_1EB7730A8 == -1) {
            goto LABEL_23;
          }
          goto LABEL_34;
        }
      }
      if (qword_1EB7730A8 == -1) {
        return sub_1ACE74C48();
      }
LABEL_33:
      swift_once();
      return sub_1ACE74C48();
    }
    uint64_t v26 = v41;
    uint64_t v27 = v17(a2, a3);
    uint64_t v29 = v39;
    uint64_t v28 = v40;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v40 + 16))(v39, v26, a2);
    if (v27 == 1)
    {
      char v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
      (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v29, a2);
      if (v30)
      {
        if ((v38 & 1) == 0 || (uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3), !v32))
        {
          if (qword_1EB7730A8 == -1) {
            return sub_1ACE74C48();
          }
          goto LABEL_33;
        }
        uint64_t v24 = v31;
        uint64_t v25 = v32;
        if (qword_1EB7730A8 == -1) {
          goto LABEL_23;
        }
        goto LABEL_34;
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v29, a2);
    }
    if ((v38 & 1) == 0 || (uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3), !v34))
    {
      if (qword_1EB7730A8 == -1) {
        return sub_1ACE74C48();
      }
      goto LABEL_33;
    }
    uint64_t v24 = v33;
    uint64_t v25 = v34;
    if (qword_1EB7730A8 == -1)
    {
LABEL_23:
      sub_1ACE74C48();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1ACE843F0;
      *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v35 + 64) = sub_1ACADC3A8();
      *(void *)(v35 + 32) = v24;
      *(void *)(v35 + 40) = v25;
      uint64_t v19 = sub_1ACE761F8();
      swift_bridgeObjectRelease();
      return v19;
    }
LABEL_34:
    swift_once();
    goto LABEL_23;
  }
  return 0;
}

uint64_t sub_1ACD8B158(void *a1, uint64_t a2, char a3)
{
  if (*(unsigned char *)(a2 + 8) == 1)
  {
    switch(*(void *)a2)
    {
      case 2:
        uint64_t v6 = a1[3];
        uint64_t v7 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v6);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 72))(v6, v7)) {
          goto LABEL_8;
        }
        if (qword_1EB7730A8 != -1) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 3:
LABEL_8:
        uint64_t v8 = a1[3];
        uint64_t v9 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v8);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9) & 1) == 0) {
          goto LABEL_12;
        }
        if (*(unsigned char *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1)
        {
          if (qword_1EB7730A8 != -1) {
            goto LABEL_30;
          }
        }
        else if (qword_1EB7730A8 != -1)
        {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 4:
        if (*(unsigned char *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1)
        {
          if (qword_1EB7730A8 != -1) {
            goto LABEL_30;
          }
        }
        else if (qword_1EB7730A8 != -1)
        {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 5:
        if (qword_1EB7730A8 == -1) {
          goto LABEL_29;
        }
        goto LABEL_30;
      case 6:
        uint64_t v10 = qword_1EB7730A8;
        if (*(unsigned char *)(v3 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) == 1) {
          goto LABEL_22;
        }
        if (qword_1EB7730A8 == -1) {
          goto LABEL_29;
        }
        goto LABEL_30;
      case 7:
        uint64_t v10 = qword_1EB7730A8;
LABEL_22:
        if (v10 == -1) {
          goto LABEL_29;
        }
        goto LABEL_30;
      default:
        if (a3)
        {
LABEL_12:
          uint64_t result = 0;
        }
        else
        {
          if (qword_1EB7730A8 != -1) {
LABEL_30:
          }
            swift_once();
LABEL_29:
          uint64_t result = sub_1ACE74C48();
        }
        break;
    }
  }
  else
  {
    sub_1ACE76928();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    return 0xD000000000000016;
  }
  return result;
}

uint64_t sub_1ACD8B5FC(char a1)
{
  uint64_t v3 = v1[24];
  uint64_t v4 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v3);
  char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  uint64_t v6 = v1[24];
  uint64_t v7 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v6);
  char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
  if (!v5)
  {
    if (v8)
    {
      if (v8 == 1)
      {
        if (qword_1EB7730A8 == -1) {
          return sub_1ACE74C48();
        }
      }
      else if (qword_1EB7730A8 == -1)
      {
        return sub_1ACE74C48();
      }
    }
    else if (qword_1EB7730A8 == -1)
    {
      return sub_1ACE74C48();
    }
    swift_once();
    return sub_1ACE74C48();
  }
  if (v5 == 1 || (a1 & 1) != 0)
  {
    swift_beginAccess();
    uint64_t v9 = v1[12];
    uint64_t v10 = v1[13];
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1ACD8C2E0();
    uint64_t v13 = v11;
    if (v10)
    {
      if (!v11) {
        return v9;
      }
      sub_1ACA4F4AC();
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)sub_1ACE77028();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_1ACA41EA0(0, v14[2] + 1, 1, v14);
      }
      unint64_t v16 = v14[2];
      unint64_t v15 = v14[3];
      int64_t v17 = v16 + 1;
      if (v16 >= v15 >> 1) {
        uint64_t v14 = sub_1ACA41EA0((void *)(v15 > 1), v16 + 1, 1, v14);
      }
      void v14[2] = v17;
      id v18 = &v14[2 * v16];
      v18[4] = v12;
      v18[5] = v13;
      uint64_t v43 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1ACC82D44(0, v17, 0);
      uint64_t v19 = v14 + 5;
      do
      {
        uint64_t v21 = *(v19 - 1);
        uint64_t v20 = *v19;
        unint64_t v23 = *(void *)(v43 + 16);
        unint64_t v22 = *(void *)(v43 + 24);
        swift_bridgeObjectRetain();
        if (v23 >= v22 >> 1) {
          sub_1ACC82D44(v22 > 1, v23 + 1, 1);
        }
        v19 += 2;
        *(void *)(v43 + 16) = v23 + 1;
        uint64_t v24 = v43 + 16 * v23;
        *(void *)(v24 + 32) = v21;
        *(void *)(v24 + 40) = v20;
        --v17;
      }
      while (v17);
      goto LABEL_14;
    }
    if (v11) {
      return v12;
    }
    return sub_1ACD8C2E0();
  }
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1ACE74C48();
  uint64_t v26 = sub_1ACD8C2E0();
  if (v27)
  {
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    sub_1ACA4F4AC();
    swift_bridgeObjectRetain();
    char v30 = (void *)sub_1ACE77028();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v30 = sub_1ACA41EA0(0, v30[2] + 1, 1, v30);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    int64_t v33 = v32 + 1;
    if (v32 >= v31 >> 1) {
      char v30 = sub_1ACA41EA0((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    _OWORD v30[2] = v33;
    uint64_t v34 = &v30[2 * v32];
    v34[4] = v28;
    v34[5] = v29;
    uint64_t v42 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACC82D44(0, v33, 0);
    uint64_t v35 = v30 + 5;
    do
    {
      uint64_t v37 = *(v35 - 1);
      uint64_t v36 = *v35;
      unint64_t v39 = *(void *)(v42 + 16);
      unint64_t v38 = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
      if (v39 >= v38 >> 1) {
        sub_1ACC82D44(v38 > 1, v39 + 1, 1);
      }
      v35 += 2;
      *(void *)(v42 + 16) = v39 + 1;
      uint64_t v40 = v42 + 16 * v39;
      *(void *)(v40 + 32) = v37;
      *(void *)(v40 + 40) = v36;
      --v33;
    }
    while (v33);
LABEL_14:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    uint64_t v12 = sub_1ACE76138();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1ACD8BCB4(char a1, char a2)
{
  uint64_t v5 = *(void *)(v2 + 192);
  uint64_t v6 = *(void *)(v2 + 200);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 168), v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v6);
  uint64_t v8 = 0;
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = v7;
    if (v7 >= 1)
    {
      uint64_t v11 = *(void *)(v2 + 192);
      uint64_t v12 = *(void *)(v2 + 200);
      __swift_project_boxed_opaque_existential_1((void *)(v2 + 168), v11);
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 96))(v11, v12);
      uint64_t v8 = 0;
      if ((v14 & 1) == 0 && v13 >= 1)
      {
        swift_beginAccess();
        *(unsigned char *)(v2 + 161) = 1;
        swift_beginAccess();
        *(unsigned char *)(v2 + 160) = 1;
        uint64_t v15 = OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style;
        if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) - 1 <= 1) {
          sub_1ACE762C8();
        }
        if (qword_1EB7730A8 != -1) {
          swift_once();
        }
        sub_1ACE74C48();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
        uint64_t v16 = swift_allocObject();
        uint64_t v17 = MEMORY[0x1E4FBC1C8];
        *(_OWORD *)(v16 + 16) = xmmword_1ACE843F0;
        uint64_t v18 = MEMORY[0x1E4FBC240];
        *(void *)(v16 + 56) = v17;
        *(void *)(v16 + 64) = v18;
        *(void *)(v16 + 32) = v10;
        uint64_t v8 = sub_1ACE76188();
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_1ACD897F8(a1 & 1);
        if (v22)
        {
          uint64_t v23 = v21;
          uint64_t v24 = v22;
          if ((a2 & 1) != 0 || *(unsigned char *)(v2 + v15))
          {
            sub_1ACE74C48();
            uint64_t v25 = swift_allocObject();
            *(_OWORD *)(v25 + 16) = xmmword_1ACE84820;
            uint64_t v26 = v20;
            uint64_t v27 = MEMORY[0x1E4FBB1A0];
            *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v28 = sub_1ACADC3A8();
            *(void *)(v25 + 32) = v8;
            *(void *)(v25 + 40) = v26;
            *(void *)(v25 + 96) = v27;
            *(void *)(v25 + 104) = v28;
            *(void *)(v25 + 64) = v28;
            *(void *)(v25 + 72) = v23;
            *(void *)(v25 + 80) = v24;
            uint64_t v8 = sub_1ACE76188();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1ACA4F4AC();
            swift_bridgeObjectRetain();
            char v30 = (void *)sub_1ACE77028();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v30 = sub_1ACA41EA0(0, v30[2] + 1, 1, v30);
            }
            unint64_t v32 = v30[2];
            unint64_t v31 = v30[3];
            unint64_t v33 = v32 + 1;
            if (v32 >= v31 >> 1) {
              char v30 = sub_1ACA41EA0((void *)(v31 > 1), v32 + 1, 1, v30);
            }
            _OWORD v30[2] = v33;
            uint64_t v34 = &v30[2 * v32];
            v34[4] = v23;
            v34[5] = v24;
            uint64_t v41 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRetain();
            sub_1ACC82D44(0, v32 + 1, 0);
            uint64_t v35 = v30 + 5;
            do
            {
              uint64_t v37 = *(v35 - 1);
              uint64_t v36 = *v35;
              unint64_t v38 = *(void *)(v41 + 16);
              unint64_t v39 = *(void *)(v41 + 24);
              swift_bridgeObjectRetain();
              if (v38 >= v39 >> 1) {
                sub_1ACC82D44(v39 > 1, v38 + 1, 1);
              }
              v35 += 2;
              *(void *)(v41 + 16) = v38 + 1;
              uint64_t v40 = v41 + 16 * v38;
              *(void *)(v40 + 32) = v37;
              *(void *)(v40 + 40) = v36;
              --v33;
            }
            while (v33);
            swift_bridgeObjectRelease_n();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
            sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
            uint64_t v8 = sub_1ACE76138();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  return v8;
}

uint64_t sub_1ACD8C1DC(char a1)
{
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE74C48();
  if (a1)
  {
    uint64_t v3 = sub_1ACD897F8(0);
    if (!v4) {
      return v2;
    }
    goto LABEL_9;
  }
  uint64_t v3 = sub_1ACD8BCB4(0, 0);
  if (v5 || (uint64_t v3 = sub_1ACD897F8(0), v6) || (uint64_t v3 = sub_1ACD8A06C(0), v7))
  {
LABEL_9:
    uint64_t v2 = v3;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1ACD8C2E0()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  __swift_project_boxed_opaque_existential_1(v0 + 21, v1);
  LOBYTE(result) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
  if (!(_BYTE)result) {
    return result;
  }
  if (result == 1)
  {
    if (qword_1EB7730A8 == -1) {
      return sub_1ACE74C48();
    }
    goto LABEL_8;
  }
  if (qword_1EB7730A8 != -1) {
LABEL_8:
  }
    swift_once();
  return sub_1ACE74C48();
}

uint64_t sub_1ACD8C428(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v6);
    double v8 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 80))(v6, v7));
    if (v9) {
      return 0;
    }
    double v10 = v8;
    if (v8 <= 0.0) {
      goto LABEL_12;
    }
  }
  else
  {
    double v10 = *(double *)a2;
    if (*(double *)a2 <= 0.0)
    {
LABEL_12:
      uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
  }
  id v11 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, v5 ^ 1u, 0, v10);
  if (!v11) {
    goto LABEL_12;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_1ACE761B8();
  uint64_t v15 = v14;

  uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_1ACA41EA0(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  unint64_t v19 = v18 + 1;
  if (v18 >= v17 >> 1)
  {
    char v30 = sub_1ACA41EA0((void *)(v17 > 1), v18 + 1, 1, v16);
    unint64_t v19 = v18 + 1;
    uint64_t v16 = v30;
  }
  void v16[2] = v19;
  uint64_t v20 = &v16[2 * v18];
  v20[4] = v13;
  v20[5] = v15;
LABEL_13:
  uint64_t v21 = sub_1ACD87D2C(0, v16);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  unsigned __int8 v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
  swift_beginAccess();
  uint64_t v28 = *(void *)(v3 + 144);
  uint64_t v27 = *(void *)(v3 + 152);
  if (!v23)
  {
    if (v26)
    {
      swift_bridgeObjectRetain();
      return v28;
    }
    return 0;
  }
  if ((v26 & (v27 != 0)) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v21;
}

uint64_t sub_1ACD8C6B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a2)
  {
    sub_1ACA4F4AC();
    swift_bridgeObjectRetain();
    double v8 = (void *)sub_1ACE77028();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v8 = sub_1ACA41EA0(0, v8[2] + 1, 1, v8);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    int64_t v11 = v10 + 1;
    if (v10 >= v9 >> 1) {
      double v8 = sub_1ACA41EA0((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v11;
    uint64_t v12 = &v8[2 * v10];
    void v12[4] = a1;
    v12[5] = a2;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1ACC82D44(0, v11, 0);
    uint64_t v13 = v8 + 5;
    do
    {
      uint64_t v14 = *(v13 - 1);
      uint64_t v15 = *v13;
      if (a3)
      {
        uint64_t v14 = sub_1ACE77038();
        uint64_t v15 = v16;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      unint64_t v18 = *(void *)(v21 + 16);
      unint64_t v17 = *(void *)(v21 + 24);
      if (v18 >= v17 >> 1) {
        sub_1ACC82D44(v17 > 1, v18 + 1, 1);
      }
      v13 += 2;
      *(void *)(v21 + 16) = v18 + 1;
      uint64_t v19 = v21 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B8);
    sub_1ACA51EA4((unint64_t *)&qword_1EB7731C0, &qword_1EB7731B8);
    a4 = sub_1ACE76138();
    swift_bridgeObjectRelease();
  }
  else if (a3)
  {
    sub_1ACA4F4AC();
    return sub_1ACE77038();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a4;
}

uint64_t EyebrowBuilder.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  sub_1ACD8DD84(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, type metadata accessor for EyebrowBuilder.ListContext);
  sub_1ACA50E78(v0 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, &qword_1EB772E38);
  return v0;
}

uint64_t EyebrowBuilder.__deallocating_deinit()
{
  EyebrowBuilder.deinit();
  return swift_deallocClassInstance();
}

unint64_t static String.eyebrowSeparatorSymbol.getter()
{
  return 0x8480E2B7C28480E2;
}

uint64_t Double.resumeString.getter(double a1)
{
  if (qword_1EB7730A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE74C48();
  uint64_t v4 = sub_1ACD8A8A4(v2, v3, 1, 0, 0, 1, a1);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::String_optional __swiftcall Double.shortLowercaseResumeString(prefix:isRTL:isExplicit:explicitSymbol:)(Swift::String_optional prefix, Swift::Bool isRTL, Swift::Bool isExplicit, Swift::String_optional explicitSymbol)
{
  object = explicitSymbol.value._object;
  uint64_t countAndFlagsBits = explicitSymbol.value._countAndFlagsBits;
  uint64_t v8 = sub_1ACD8A8A4(prefix.value._countAndFlagsBits, (uint64_t)prefix.value._object, 1, 1, isRTL, 0, v4);
  if (v9)
  {
    if (isExplicit && object)
    {
      uint64_t v13 = v8;
      uint64_t v14 = v9;
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      swift_bridgeObjectRetain();
      sub_1ACE762C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v13;
      object = v14;
    }
    else
    {
      uint64_t countAndFlagsBits = v8;
      object = v9;
    }
  }
  else if (isExplicit)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = 0;
  }
  uint64_t v10 = countAndFlagsBits;
  int64_t v11 = object;
  result.value._object = v11;
  result.value._uint64_t countAndFlagsBits = v10;
  return result;
}

uint64_t Double.playingString.getter(double a1)
{
  if (a1 > 0.0
    && (id v1 = objc_msgSend(self, sel_prettyShortStringWithDuration_includeTimeRemainingPhrase_abbreviated_, 1, 0, a1)) != 0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1ACE761B8();
    uint64_t v5 = v4;

    uint64_t v6 = sub_1ACA41EA0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1ACA41EA0((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    _OWORD v6[2] = v8 + 1;
    unint64_t v9 = &v6[2 * v8];
    v9[4] = v3;
    v9[5] = v5;
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = sub_1ACD87D2C(1, v6);
  swift_bridgeObjectRelease();
  return v10;
}

Swift::String_optional __swiftcall Double.durationString(prefix:isExplicit:explicitSymbol:isRTL:abbreviated:)(Swift::String_optional prefix, Swift::Bool isExplicit, Swift::String_optional explicitSymbol, Swift::Bool isRTL, Swift::Bool abbreviated)
{
  object = explicitSymbol.value._object;
  uint64_t v8 = sub_1ACD8A8A4(prefix.value._countAndFlagsBits, (uint64_t)prefix.value._object, 0, abbreviated, isRTL, 0, v5);
  uint64_t v10 = v9;
  if (v9 && isExplicit && object)
  {
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v13;
    uint64_t v10 = v14;
  }
  int64_t v11 = v10;
  result.value._object = v11;
  result.value._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t sub_1ACD8CDE4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1ACE74988();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  int v34 = a1;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  swift_bridgeObjectRetain();
  uint64_t v15 = v14(a2, a3);
  if (v16)
  {
    if (v12 == v15 && v13 == v16)
    {
      swift_bridgeObjectRelease_n();
LABEL_25:
      swift_bridgeObjectRelease();
      return 0;
    }
    char v18 = sub_1ACE77848();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_25;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  sub_1ACE74938();
  sub_1ACA4F4AC();
  uint64_t v19 = sub_1ACE77018();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v21 = (uint64_t *)(v19 + 40);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v27 = *(v21 - 1);
      uint64_t v26 = *v21;
      uint64_t v28 = HIBYTE(*v21) & 0xF;
      if ((*v21 & 0x2000000000000000) == 0) {
        uint64_t v28 = v27 & 0xFFFFFFFFFFFFLL;
      }
      if (v28)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v35 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ACC82D44(0, *(void *)(v22 + 16) + 1, 1);
          uint64_t v22 = v35;
        }
        unint64_t v24 = *(void *)(v22 + 16);
        unint64_t v23 = *(void *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1ACC82D44(v23 > 1, v24 + 1, 1);
          uint64_t v22 = v35;
        }
        *(void *)(v22 + 16) = v24 + 1;
        unint64_t v25 = v22 + 16 * v24;
        *(void *)(v25 + 32) = v27;
        *(void *)(v25 + 40) = v26;
      }
      v21 += 2;
      --v20;
    }
    while (v20);
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  unint64_t v30 = *(void *)(v22 + 16);
  swift_release();
  if (v30 > 2 || sub_1ACE76288() >= 17) {
    goto LABEL_25;
  }
  if (v34)
  {
    uint64_t v32 = sub_1ACE76288();
    swift_bridgeObjectRelease();
    if (v32 > 11) {
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_1ACD8D0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ACD88060(a2, a4);
}

uint64_t sub_1ACD8D104(uint64_t a1, uint64_t a2, char *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t v27[3] = a11;
  _DWORD v27[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(boxed_opaque_existential_1, a1, a11);
  char v20 = *a3;
  *(_OWORD *)(a10 + 32) = 0u;
  *(_OWORD *)(a10 + 48) = 0u;
  *(_OWORD *)(a10 + 64) = 0u;
  *(_OWORD *)(a10 + 80) = 0u;
  *(_OWORD *)(a10 + 96) = 0u;
  *(_OWORD *)(a10 + 112) = 0u;
  *(_OWORD *)(a10 + 128) = 0u;
  *(_WORD *)(a10 + 160) = 0;
  *(_OWORD *)(a10 + 16) = 0u;
  *(_OWORD *)(a10 + 144) = 0u;
  sub_1ACA3E158((uint64_t)v27, a10 + 168);
  sub_1ACD8F568(a2, a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_context, type metadata accessor for EyebrowBuilder.ListContext);
  *(unsigned char *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_style) = v20;
  *(unsigned char *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_uppercase) = a4;
  swift_beginAccess();
  *(void *)(a10 + 144) = a5;
  *(void *)(a10 + 152) = a6;
  swift_bridgeObjectRelease();
  sub_1ACA3AAD4(a7, a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_abbreviatedPubDateConfig, &qword_1EB772E38);
  *(unsigned char *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_showsSubscriptionBadge) = a8;
  *(unsigned char *)(a10 + OBJC_IVAR____TtC18PodcastsFoundation14EyebrowBuilder_hostingViewHasLimitedSpace) = a9;
  uint64_t v21 = sub_1ACD84ED4();
  uint64_t v22 = sub_1ACD861C0(v21);
  uint64_t v24 = v23;
  sub_1ACA50E78(a7, &qword_1EB772E38);
  sub_1ACD8DD84(a2, type metadata accessor for EyebrowBuilder.ListContext);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  swift_beginAccess();
  *(void *)(a10 + 16) = v22;
  *(void *)(a10 + 24) = v24;
  swift_bridgeObjectRelease();
  return a10;
}

uint64_t sub_1ACD8D2F0(void *a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 9) & 1) != 0 || (*(unsigned char *)(a2 + 8) & 1) == 0)
  {
LABEL_3:
    if (qword_1EB7730A8 != -1) {
LABEL_45:
    }
      swift_once();
    return sub_1ACE74C48();
  }
  switch(*(void *)a2)
  {
    case 1:
      if (qword_1EB7730A8 == -1) {
        return sub_1ACE74C48();
      }
      goto LABEL_46;
    case 2:
    case 3:
      uint64_t v17 = a1[3];
      uint64_t v18 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v17);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 72))(v17, v18) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v19 = a1[3];
      uint64_t v20 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v19);
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v19, v20);
      if (v22) {
        goto LABEL_32;
      }
      uint64_t v23 = v21;
      uint64_t v24 = a1[3];
      uint64_t v25 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v24);
      if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25) > 1u)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v39 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
LABEL_32:
          uint64_t v40 = a1[3];
          uint64_t v41 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v40);
          uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 88))(v40, v41);
          if ((v43 & 1) == 0)
          {
            uint64_t v44 = v42;
            uint64_t v45 = a1[3];
            uint64_t v46 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v45);
            uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 96))(v45, v46);
            if ((v48 & 1) == 0 && v47 == 1)
            {
              if (qword_1EB7730A8 != -1) {
                swift_once();
              }
              sub_1ACE74C48();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
              uint64_t v49 = swift_allocObject();
              *(_OWORD *)(v49 + 16) = xmmword_1ACE84820;
              uint64_t v50 = MEMORY[0x1E4FBC1C8];
              uint64_t v51 = MEMORY[0x1E4FBC240];
              *(void *)(v49 + 56) = MEMORY[0x1E4FBC1C8];
              *(void *)(v49 + 64) = v51;
              *(void *)(v49 + 32) = v44;
              *(void *)(v49 + 96) = v50;
              *(void *)(v49 + 104) = v51;
              *(void *)(v49 + 72) = 1;
              goto LABEL_44;
            }
          }
          if (qword_1EB7730A8 != -1) {
            goto LABEL_46;
          }
          return sub_1ACE74C48();
        }
      }
      if (qword_1EB7730A8 != -1) {
        swift_once();
      }
      sub_1ACE74C48();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v52 = swift_allocObject();
      uint64_t v53 = MEMORY[0x1E4FBC1C8];
      *(_OWORD *)(v52 + 16) = xmmword_1ACE843F0;
      uint64_t v54 = MEMORY[0x1E4FBC240];
      *(void *)(v52 + 56) = v53;
      *(void *)(v52 + 64) = v54;
      *(void *)(v52 + 32) = v23;
      goto LABEL_44;
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v5 = a1[3];
      uint64_t v6 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v5);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6) & 1) == 0)
      {
LABEL_18:
        if (qword_1EB7730A8 != -1) {
LABEL_46:
        }
          swift_once();
        return sub_1ACE74C48();
      }
      uint64_t v7 = a1[3];
      uint64_t v8 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v7);
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v8);
      if (v10)
      {
        sub_1ACA3E158((uint64_t)a1, (uint64_t)v55);
LABEL_25:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
        goto LABEL_26;
      }
      uint64_t v11 = v9;
      sub_1ACA3E158((uint64_t)a1, (uint64_t)v55);
      if (v11 != 1) {
        goto LABEL_25;
      }
      uint64_t v12 = v56;
      uint64_t v13 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 96))(v12, v13);
      if (v15) {
        goto LABEL_25;
      }
      uint64_t v16 = v14;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
      if (v16 == 1)
      {
        if (qword_1EB7730A8 != -1) {
          goto LABEL_45;
        }
        return sub_1ACE74C48();
      }
LABEL_26:
      uint64_t v26 = a1[3];
      uint64_t v27 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v26);
      uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v26, v27);
      if (v29) {
        goto LABEL_3;
      }
      uint64_t v30 = v28;
      uint64_t v31 = a1[3];
      uint64_t v32 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v31);
      uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 96))(v31, v32);
      if (v34) {
        goto LABEL_3;
      }
      uint64_t v35 = v33;
      if (qword_1EB7730A8 != -1) {
        swift_once();
      }
      sub_1ACE74C48();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1ACE84820;
      uint64_t v37 = MEMORY[0x1E4FBC1C8];
      uint64_t v38 = MEMORY[0x1E4FBC240];
      *(void *)(v36 + 56) = MEMORY[0x1E4FBC1C8];
      *(void *)(v36 + 64) = v38;
      *(void *)(v36 + 32) = v30;
      *(void *)(v36 + 96) = v37;
      *(void *)(v36 + 104) = v38;
      *(void *)(v36 + 72) = v35;
LABEL_44:
      uint64_t v2 = sub_1ACE76188();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    default:
      if (qword_1EB7730A8 == -1) {
        return sub_1ACE74C48();
      }
      goto LABEL_46;
  }
}

uint64_t sub_1ACD8DAFC(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3))
  {
    uint64_t v4 = 3;
  }
  else
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v6);
    if ((v8 & 1) != 0
      || v7 < 1
      || (uint64_t v9 = a1[3],
          uint64_t v10 = a1[4],
          __swift_project_boxed_opaque_existential_1(a1, v9),
          uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 96))(v9, v10),
          (v12 & 1) != 0)
      || v11 <= 0)
    {
      uint64_t v13 = a1[3];
      uint64_t v14 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v13);
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 96))(v13, v14);
      uint64_t v4 = (v16 & 1) == 0 && v15 > 0;
    }
    else
    {
      uint64_t v4 = 2;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1ACD8DC24(uint64_t a1, uint64_t a2, char *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v24 = a8;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v21 = a5;
  uint64_t v16 = *(void *)(a11 - 8);
  MEMORY[0x1F4188790](a10);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a11);
  return sub_1ACD8D104((uint64_t)v18, a2, a3, a4, v21, v22, v23, v24, a9, v19, a11, a12);
}

uint64_t sub_1ACD8DD5C@<X0>(void *a1@<X8>)
{
  return sub_1ACD84E64(v1, a1);
}

uint64_t type metadata accessor for EyebrowBuilder.ListContext(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB772C88);
}

uint64_t sub_1ACD8DD84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ACD8DDE4()
{
  uint64_t v1 = *(void *)(type metadata accessor for EyebrowBuilder.ListContext(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v3 = type metadata accessor for EpisodePlayState();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 1, v3)&& swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v4 = sub_1ACE750A8();
      uint64_t v5 = *(void *)(v4 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
        (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
      }
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1ACD8DF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EyebrowBuilder.ListContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACD8DFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for EyebrowBuilder.ListContext(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1ACD874B4(a1, v6, a2);
}

uint64_t sub_1ACD8E068@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACD877D8(a1, v2, a2);
}

unint64_t sub_1ACD8E074()
{
  unint64_t result = qword_1E99F59F0;
  if (!qword_1E99F59F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59F0);
  }
  return result;
}

uint64_t dispatch thunk of EyebrowBuilderSource.channelName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.subscriptionName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.entitlementState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.hasFreeVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.listenNowReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.episodeTypeResolvedValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.mediaType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.isExplicit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.showTypeIsSerial.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.durationOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.seasonNumberOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.episodeNumberOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.releaseDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EyebrowBuilderSource.timeRemainingOpt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1ACD8E260()
{
  return type metadata accessor for EyebrowBuilder(0);
}

uint64_t type metadata accessor for EyebrowBuilder(uint64_t a1)
{
  return sub_1ACA31990(a1, (uint64_t *)&unk_1EB772D60);
}

void sub_1ACD8E288()
{
  type metadata accessor for EyebrowBuilder.ListContext(319);
  if (v0 <= 0x3F)
  {
    sub_1ACD8F3D4(319, &qword_1EB772E40, (void (*)(uint64_t))type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for EyebrowBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EyebrowBuilder);
}

uint64_t dispatch thunk of EyebrowBuilder.__allocating_init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

unsigned char *storeEnumTagSinglePayload for EyebrowBuilder.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD8E4ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EyebrowBuilder.Style()
{
  return &type metadata for EyebrowBuilder.Style;
}

uint64_t *initializeBufferWithCopyOfBuffer for EyebrowBuilder.ListContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = type metadata accessor for EpisodePlayState();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v11 = sub_1ACE750A8();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
          {
            uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
          }
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
          *((unsigned char *)a1 + *(int *)(v14 + 48)) = *((unsigned char *)a2 + *(int *)(v14 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(v8 + 64));
        }
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for EyebrowBuilder.ListContext(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    uint64_t v3 = type metadata accessor for EpisodePlayState();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3);
    if (!result)
    {
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v4 = sub_1ACE750A8();
        uint64_t v6 = *(void *)(v4 - 8);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
        if (!result)
        {
          int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
          return v5(a1, v4);
        }
      }
    }
  }
  return result;
}

void *initializeWithCopy for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = type metadata accessor for EpisodePlayState();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v9 = sub_1ACE750A8();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
        *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(v7 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACD8DD84((uint64_t)a1, type metadata accessor for EyebrowBuilder.ListContext);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = type metadata accessor for EpisodePlayState();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v9 = sub_1ACE750A8();
          uint64_t v10 = *(void *)(v9 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
          {
            uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(a1, a2, v9);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
          }
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
          *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(v7 + 64));
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = type metadata accessor for EpisodePlayState();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v9 = sub_1ACE750A8();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(a1, a2, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
        *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(v7 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for EyebrowBuilder.ListContext(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1ACD8DD84((uint64_t)a1, type metadata accessor for EyebrowBuilder.ListContext);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = type metadata accessor for EpisodePlayState();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB772D70);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v9 = sub_1ACE750A8();
          uint64_t v10 = *(void *)(v9 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
          {
            uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(a1, a2, v9);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
          }
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C78);
          *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(v7 + 64));
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1ACD8F310()
{
  sub_1ACD8F3D4(319, (unint64_t *)&qword_1EB772810, (void (*)(uint64_t))type metadata accessor for EpisodePlayState);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1ACD8F3D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1ACE76FD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration()
{
  return &type metadata for EyebrowBuilder.EpisodeHeaderSubtitleConfiguration;
}

uint64_t *sub_1ACD8F4D0@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *result;
  if (result[1])
  {
    uint64_t result = (uint64_t *)sub_1ACD8C6B0(*a2, a2[1], *(unsigned char *)(v3 + 16), v5);
    uint64_t v5 = (uint64_t)result;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a3 = v5;
  a3[1] = v6;
  return result;
}

uint64_t sub_1ACD8F520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACD8F568(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t ImageProviderError.description.getter()
{
  unint64_t v1 = 0xD00000000000004FLL;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000057;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000009ALL;
  }
}

BOOL static ImageProviderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImageProviderError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t ImageProviderError.hashValue.getter()
{
  return sub_1ACE77B78();
}

unint64_t sub_1ACD8F6BC()
{
  unint64_t result = qword_1E99F59F8;
  if (!qword_1E99F59F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F59F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ImageProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD8F7E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageProviderError()
{
  return &type metadata for ImageProviderError;
}

void *ContentReference.id.getter(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  return a2;
}

void ContentReference.hash(into:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1ACE77B28();
    if (a5 == 1)
    {
      id v8 = a3;
      sub_1ACE76F78();
      uint64_t v9 = a3;
      uint64_t v10 = a4;
      char v11 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      uint64_t v9 = a3;
      uint64_t v10 = a4;
      char v11 = 2;
    }
    sub_1ACA50D28(v9, v10, v11);
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
}

uint64_t ContentReference.hashValue.getter(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  sub_1ACE77B18();
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_1ACE77B28();
    if (a4 == 1)
    {
      id v7 = a2;
      sub_1ACE76F78();
      id v8 = a2;
      uint64_t v9 = a3;
      char v10 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1ACE76108();
      id v8 = a2;
      uint64_t v9 = a3;
      char v10 = 2;
    }
    sub_1ACA50D28(v8, v9, v10);
  }
  else
  {
    sub_1ACE77B28();
    sub_1ACE77B58();
  }
  return sub_1ACE77B78();
}

uint64_t sub_1ACD8FBC0()
{
  unint64_t v1 = (void *)*((void *)v0 + 1);
  uint64_t v2 = *((void *)v0 + 2);
  char v3 = v0[24];
  uint64_t v4 = *v0;
  sub_1ACE77B18();
  ContentReference.hash(into:)((uint64_t)v6, v4, v1, v2, v3);
  return sub_1ACE77B78();
}

void sub_1ACD8FC24(uint64_t a1)
{
  ContentReference.hash(into:)(a1, *v1, *((void **)v1 + 1), *((void *)v1 + 2), v1[24]);
}

uint64_t sub_1ACD8FC34()
{
  unint64_t v1 = (void *)*((void *)v0 + 1);
  uint64_t v2 = *((void *)v0 + 2);
  char v3 = v0[24];
  uint64_t v4 = *v0;
  sub_1ACE77B18();
  ContentReference.hash(into:)((uint64_t)v6, v4, v1, v2, v3);
  return sub_1ACE77B78();
}

BOOL sub_1ACD8FC94(uint64_t a1, uint64_t a2)
{
  return _s18PodcastsFoundation16ContentReferenceV2eeoiySbAC_ACtFZ_0(*(unsigned char *)a1, *(void **)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(unsigned char *)a2, *(void **)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1ACD8FCB4(char *a1, char *a2)
{
  return sub_1ACCF6424(*a1, *a2);
}

uint64_t sub_1ACD8FCC0()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD8FD3C()
{
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD8FDA4()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACD8FE1C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1ACD8FE7C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x646E696B24;
  if (*v1) {
    uint64_t v2 = 0x64496D616461;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ACD8FEB4()
{
  if (*v0) {
    return 0x64496D616461;
  }
  else {
    return 0x646E696B24;
  }
}

uint64_t sub_1ACD8FEE8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1ACE775B8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1ACD8FF4C(uint64_t a1)
{
  unint64_t v2 = sub_1ACD90EFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1ACD8FF88(uint64_t a1)
{
  unint64_t v2 = sub_1ACD90EFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ContentReference.init(from:)(void *a1)
{
  return sub_1ACD90D20(a1);
}

uint64_t ContentReference.encode(to:)(void *a1, int a2, void *a3, uint64_t a4, int a5)
{
  int v37 = a5;
  uint64_t v31 = a4;
  uint64_t v33 = a3;
  LODWORD(v34) = a2;
  uint64_t v6 = sub_1ACE77348();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5A00);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD90EFC();
  sub_1ACE77C78();
  char v40 = v34;
  char v39 = 0;
  sub_1ACD90F50();
  uint64_t v13 = v35;
  sub_1ACE77788();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v35 = v6;
  if (!(_BYTE)v37)
  {
    uint64_t v36 = v33;
    char v38 = 1;
    sub_1ACA80994();
    sub_1ACE77788();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v34 = v9;
  uint64_t v15 = v10;
  if (v37 == 1)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACE77C58();
    uint64_t v16 = v8;
    sub_1ACE77308();
    uint64_t v17 = sub_1ACE77358();
    swift_allocError();
    uint64_t v19 = v18;
    uint64_t v20 = v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4610) + 48);
    *(void *)(v19 + 24) = &type metadata for ContentID;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    uint64_t v23 = v31;
    *(void *)uint64_t v19 = v33;
    *(void *)(v19 + 8) = v23;
    *(unsigned char *)(v19 + 16) = 1;
    uint64_t v24 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v20, v16, v35);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBAA0], v17);
    id v25 = v22;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ACE77C58();
    uint64_t v16 = v8;
    sub_1ACE77308();
    uint64_t v26 = sub_1ACE77358();
    swift_allocError();
    uint64_t v28 = v27;
    uint64_t v29 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4610) + 48);
    *(void *)(v28 + 24) = &type metadata for ContentID;
    uint64_t v21 = v32;
    uint64_t v30 = v31;
    *(void *)uint64_t v28 = v33;
    *(void *)(v28 + 8) = v30;
    *(unsigned char *)(v28 + 16) = 2;
    uint64_t v24 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v29, v16, v35);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBAA0], v26);
    swift_bridgeObjectRetain();
  }
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v12, v34);
}

uint64_t sub_1ACD9047C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1ACD90D20(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1ACD904B0(void *a1)
{
  return ContentReference.encode(to:)(a1, *v1, *((void **)v1 + 1), *((void *)v1 + 2), v1[24]);
}

unint64_t ContentReference.debugDescription.getter(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  return 0xD000000000000017;
}

unint64_t sub_1ACD906A4()
{
  return ContentReference.debugDescription.getter(*v0, *((void **)v0 + 1), *((void *)v0 + 2), v0[24]);
}

uint64_t static ContentReference.category(adamID:)()
{
  return 0;
}

uint64_t static ContentReference.category(managedObjectID:)(void *a1)
{
  id v1 = a1;
  return 0;
}

uint64_t static ContentReference.category(contentID:)(void *a1, uint64_t a2, char a3)
{
  return 0;
}

uint64_t static ContentReference.channel(adamID:)()
{
  return 1;
}

uint64_t static ContentReference.channel(managedObjectID:)(void *a1)
{
  id v1 = a1;
  return 1;
}

uint64_t static ContentReference.channel(contentID:)(void *a1, uint64_t a2, char a3)
{
  return 1;
}

uint64_t static ContentReference.episode(adamID:)()
{
  return 2;
}

uint64_t static ContentReference.episode(managedObjectID:)(void *a1)
{
  id v1 = a1;
  return 2;
}

uint64_t static ContentReference.episode(uuid:)()
{
  return 2;
}

uint64_t static ContentReference.episode(contentID:)(void *a1, uint64_t a2, char a3)
{
  return 2;
}

uint64_t static ContentReference.show(adamID:)()
{
  return 3;
}

uint64_t static ContentReference.show(managedObjectID:)(void *a1)
{
  id v1 = a1;
  return 3;
}

uint64_t static ContentReference.show(uuid:)()
{
  return 3;
}

uint64_t static ContentReference.show(contentID:)(void *a1, uint64_t a2, char a3)
{
  return 3;
}

uint64_t static ContentReference.station(managedObjectID:)(void *a1)
{
  id v1 = a1;
  return 4;
}

uint64_t static ContentReference.station(uuid:)()
{
  return 4;
}

uint64_t static ContentReference.station(contentID:)(void *a1, uint64_t a2, char a3)
{
  return 4;
}

BOOL _s18PodcastsFoundation16ContentReferenceV2eeoiySbAC_ACtFZ_0(unsigned __int8 a1, void *a2, uint64_t a3, char a4, char a5, void *a6, uint64_t a7, char a8)
{
  uint64_t v9 = 0x79726F6765746163;
  unint64_t v10 = 0xE800000000000000;
  uint64_t v11 = a1;
  uint64_t v17 = 0x79726F6765746163;
  switch(v11)
  {
    case 1:
      unint64_t v10 = 0xE700000000000000;
      uint64_t v17 = 0x6C656E6E616863;
      break;
    case 2:
      unint64_t v10 = 0xE700000000000000;
      uint64_t v17 = 0x65646F73697065;
      break;
    case 3:
      unint64_t v10 = 0xE400000000000000;
      uint64_t v17 = 2003789939;
      break;
    case 4:
      unint64_t v10 = 0xE700000000000000;
      uint64_t v18 = 0x6F6974617473;
      goto LABEL_7;
    case 5:
      unint64_t v10 = 0xE700000000000000;
      uint64_t v18 = 0x776F6E6B6E75;
LABEL_7:
      uint64_t v17 = v18 & 0xFFFFFFFFFFFFLL | 0x6E000000000000;
      break;
    default:
      break;
  }
  unint64_t v19 = 0xE800000000000000;
  switch(a5)
  {
    case 1:
      unint64_t v19 = 0xE700000000000000;
      if (v17 == 0x6C656E6E616863) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unint64_t v19 = 0xE700000000000000;
      if (v17 != 0x65646F73697065) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 3:
      unint64_t v19 = 0xE400000000000000;
      if (v17 != 2003789939) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v19 = 0xE700000000000000;
      uint64_t v9 = 0x6E6F6974617473;
      goto LABEL_16;
    case 5:
      unint64_t v19 = 0xE700000000000000;
      if (v17 != 0x6E776F6E6B6E75) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v17 != v9) {
        goto LABEL_20;
      }
LABEL_17:
      if (v10 == v19)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_20:
        char v20 = sub_1ACE77848();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = 0;
        if ((v20 & 1) == 0) {
          return v21;
        }
      }
      if (!a4) {
        return !a8 && a2 == a6;
      }
      if (a4 != 1) {
        return a8 == 2 && (a2 == a6 && a3 == a7 || (sub_1ACE77848() & 1) != 0);
      }
      if (a8 != 1) {
        return 0;
      }
      sub_1ACAA3690();
      uint64_t v21 = 1;
      sub_1ACA50CB8(a2, a3, 1);
      sub_1ACA50CB8(a6, a7, 1);
      char v22 = sub_1ACE76F68();
      sub_1ACA50D28(a6, a7, 1);
      sub_1ACA50D28(a2, a3, 1);
      if ((v22 & 1) == 0) {
        return 0;
      }
      return v21;
  }
}

uint64_t sub_1ACD90D20(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771998);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACD90EFC();
  sub_1ACE77C48();
  v8[30] = 0;
  sub_1ACD913BC();
  sub_1ACE77698();
  uint64_t v6 = v8[31];
  v8[15] = 1;
  sub_1ACA80CD4();
  sub_1ACE77698();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

unint64_t sub_1ACD90EFC()
{
  unint64_t result = qword_1EB7711E0;
  if (!qword_1EB7711E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711E0);
  }
  return result;
}

unint64_t sub_1ACD90F50()
{
  unint64_t result = qword_1E99F5A08;
  if (!qword_1E99F5A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5A08);
  }
  return result;
}

unint64_t sub_1ACD90FA8()
{
  unint64_t result = qword_1E99F5A10;
  if (!qword_1E99F5A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5A10);
  }
  return result;
}

void destroy for ContentReference(uint64_t a1)
{
}

uint64_t initializeWithCopy for ContentReference(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1ACA50CB8(v3, v4, v5);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for ContentReference(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1ACA50CB8(v3, v4, v5);
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1ACA50D28(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ContentReference(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  char v6 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v3;
  sub_1ACA50D28(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentReference(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentReference(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentReference()
{
  return &type metadata for ContentReference;
}

unsigned char *storeEnumTagSinglePayload for ContentReference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACD9127CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentReference.CodingKeys()
{
  return &type metadata for ContentReference.CodingKeys;
}

unint64_t sub_1ACD912B8()
{
  unint64_t result = qword_1E99F5A18;
  if (!qword_1E99F5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5A18);
  }
  return result;
}

unint64_t sub_1ACD91310()
{
  unint64_t result = qword_1EB7711F0;
  if (!qword_1EB7711F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711F0);
  }
  return result;
}

unint64_t sub_1ACD91368()
{
  unint64_t result = qword_1EB7711E8;
  if (!qword_1EB7711E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7711E8);
  }
  return result;
}

unint64_t sub_1ACD913BC()
{
  unint64_t result = qword_1EB770ED8;
  if (!qword_1EB770ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB770ED8);
  }
  return result;
}

uint64_t MetricsActionContext.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t MetricsActionContext.debugDescription.getter()
{
  return 0xD000000000000020;
}

unint64_t sub_1ACD914E8()
{
  return MetricsActionContext.debugDescription.getter();
}

uint64_t MetricsActionContext.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t MetricsActionContext.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C38();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = sub_1ACE77858();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v3;
}

uint64_t MetricsActionContext.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACE77C68();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1ACE778D8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

uint64_t static MetricsActionContext.bubbleTip.getter()
{
  return 0x6954656C62627562;
}

uint64_t static MetricsActionContext.confirmation.getter()
{
  return 0x616D7269666E6F63;
}

uint64_t static MetricsActionContext.contextual.getter()
{
  return 0x75747865746E6F63;
}

unint64_t static MetricsActionContext.favoriteCategories.getter()
{
  return 0xD000000000000012;
}

unint64_t static MetricsActionContext.recentlySearched.getter()
{
  return 0xD000000000000010;
}

uint64_t static MetricsActionContext.selectionMenu.getter()
{
  return 0x6F697463656C6573;
}

unint64_t sub_1ACD9173C()
{
  unint64_t result = qword_1E99F5A20[0];
  if (!qword_1E99F5A20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E99F5A20);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsActionContext()
{
  return &type metadata for MetricsActionContext;
}

uint64_t AssetProcessingStep.fallback<A>(to:rethrow:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v17 + 16))(v16, v18, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a4);
  return FallbackProcessingStep.init(upstream:fallback:rethrow:)((uint64_t)v16, (uint64_t)v12, a2, a3, a4, a5);
}

uint64_t FallbackProcessingStep.init(upstream:fallback:rethrow:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a6, a1, a4);
  uint64_t v10 = type metadata accessor for FallbackProcessingStep();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v10 + 52), a2, a5);
  *(unsigned char *)(a6 + *(int *)(v10 + 56)) = a3;
  return result;
}

uint64_t type metadata accessor for FallbackProcessingStep()
{
  return swift_getGenericMetadata();
}

uint64_t AssetProcessingStep.fallback<A>(source:rethrow:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v22 = a4;
  uint64_t v23 = a6;
  int v27 = a2;
  uint64_t v26 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = a4;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v31 = a6;
  uint64_t v15 = type metadata accessor for AssetSourceStep();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v21 - v18;
  (*(void (**)(uint64_t, uint64_t, __n128))(a5 + 40))(a3, a5, v17);
  AssetMetadata.fetch<A>(source:)(v25, AssociatedTypeWitness, v22, (uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, AssociatedTypeWitness);
  swift_getWitnessTable();
  AssetProcessingStep.fallback<A>(to:rethrow:)((uint64_t)v19, v27, a3, v15, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t FallbackProcessingStep.metadata.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 40))(*(void *)(a1 + 16));
}

uint64_t FallbackProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FallbackProcessingStep.fallback.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t FallbackProcessingStep.rethrow.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

uint64_t FallbackProcessingStep.publisher.getter(uint64_t a1)
{
  uint64_t v65 = *(void *)(a1 - 8);
  uint64_t v66 = *(void *)(v65 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v64 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = *(void *)(v61 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v67 = *(void *)(v6 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v48 - v9;
  swift_getAssociatedConformanceWitness();
  uint64_t v68 = type metadata accessor for EmitLifecycle();
  uint64_t v63 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v69 = (uint64_t)&v48 - v11;
  uint64_t v57 = *(void *)(a1 + 40);
  uint64_t v51 = v4;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v70 = v12;
  uint64_t v71 = v13;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v73 = MEMORY[0x1E4FBC0F0];
  sub_1ACE75718();
  swift_getWitnessTable();
  uint64_t v15 = type metadata accessor for EmitLifecycle();
  uint64_t v16 = v68;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v53 = WitnessTable;
  uint64_t v54 = v15;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v70 = v16;
  uint64_t v71 = v15;
  uint64_t v72 = WitnessTable;
  uint64_t v73 = v52;
  uint64_t v18 = sub_1ACE75698();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v55 = v18;
  uint64_t v56 = v19;
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v50 = (char *)&v48 - v21;
  uint64_t v49 = v7;
  uint64_t v22 = v58;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 48))(v67, v7, v20);
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = v22;
  AssetProcessingStep.metadataTrace.getter(a1, v23, (uint64_t)&v70);
  uint64_t v25 = sub_1ACE77D48();
  unint64_t v27 = v26;
  char v28 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v70, (uint64_t)"FallbackPreferredSource", 23, 2, 0, v25, v27, v28 & 1, v69, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  sub_1ACB3E38C((uint64_t)&v70);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, AssociatedTypeWitness);
  uint64_t v29 = *(int *)(a1 + 52);
  uint64_t v30 = v24;
  LODWORD(v59) = *(unsigned __int8 *)(v24 + *(int *)(a1 + 56));
  uint64_t v32 = v60;
  uint64_t v31 = v61;
  uint64_t v33 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v24 + v29, v51);
  uint64_t v34 = v64;
  uint64_t v35 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v30, a1);
  uint64_t v36 = v31;
  unint64_t v37 = (*(unsigned __int8 *)(v31 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v38 = v37 + v62;
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + v37 + v62 + 1) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  char v40 = (char *)swift_allocObject();
  *((void *)v40 + 2) = v67;
  *((void *)v40 + 3) = v33;
  uint64_t v41 = v57;
  *((void *)v40 + 4) = v49;
  *((void *)v40 + 5) = v41;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v40[v37], v32, v33);
  v40[v38] = v59;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v40[v39], v34, a1);
  uint64_t v42 = v50;
  uint64_t v43 = v68;
  uint64_t v44 = v69;
  sub_1ACE75B98();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v44, v43);
  uint64_t v45 = v55;
  swift_getWitnessTable();
  uint64_t v46 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v45);
  return v46;
}

uint64_t sub_1ACD92394@<X0>(void **a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a8;
  int v31 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)v30 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB7669F0);
  v30[1] = v14;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v39 = v14;
  uint64_t v40 = AssociatedConformanceWitness;
  uint64_t v41 = MEMORY[0x1E4FBC0F0];
  uint64_t v16 = sub_1ACE75718();
  uint64_t v35 = *(void *)(v16 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v30 - v18;
  __n128 v20 = *a1;
  (*(void (**)(uint64_t, uint64_t, __n128))(a7 + 48))(a5, a7, v17);
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = v31;
  *(void *)(v21 + 24) = v20;
  id v22 = v20;
  sub_1ACE75CC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, AssociatedTypeWitness);
  uint64_t v38 = v33;
  uint64_t v39 = a5;
  uint64_t v40 = v34;
  uint64_t v41 = a7;
  uint64_t v23 = type metadata accessor for FallbackProcessingStep();
  uint64_t WitnessTable = swift_getWitnessTable();
  AssetProcessingStep.metadataTrace.getter(v23, WitnessTable, (uint64_t)&v38);
  uint64_t v25 = sub_1ACE77D48();
  unint64_t v27 = v26;
  swift_getWitnessTable();
  char v28 = j___s18PodcastsFoundation13EmitLifecycleV16defaultVerbositySbvgZ();
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)((uint64_t)&v38, (uint64_t)"FallbackBackupSource", 20, 2, 0, v25, v27, v28 & 1, v37, v16);
  swift_bridgeObjectRelease();
  sub_1ACB3E38C((uint64_t)&v38);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v16);
}

uint64_t sub_1ACD926E0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v5 = (int *)(type metadata accessor for FallbackProcessingStep() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(*(void *)v5 + 80) + v3 + 1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v6, v9);
  v7(v0 + v6 + v5[15], v1);
  return swift_deallocObject();
}

uint64_t sub_1ACD92874@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = ((*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80))
     + *(void *)(*(void *)(v2[3] - 8) + 64);
  uint64_t v10 = v2[2];
  uint64_t v11 = v2[3];
  uint64_t v12 = v2[4];
  uint64_t v13 = v2[5];
  uint64_t v6 = *(void *)(type metadata accessor for FallbackProcessingStep() - 8);
  int v7 = *((unsigned __int8 *)v2 + v5);
  uint64_t v8 = (uint64_t)v2 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1ACD92394(a1, v7, v8, v10, v11, v12, v13, a2);
}

uint64_t sub_1ACD92994()
{
  return swift_getAssociatedConformanceWitness();
}

id sub_1ACD929B4@<X0>(void **a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X8>)
{
  if ((a2 & 1) == 0) {
    a3 = *a1;
  }
  *a4 = a3;
  return a3;
}

uint64_t sub_1ACD929CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FallbackProcessingStep.publisher.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ACD929F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ACD92ACC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  unint64_t v12 = v11 + ((v6 + v9) & ~v9) + 1;
  uint64_t v13 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    *(unsigned char *)((((unint64_t)v4 + v10) & v17) + v11) = *(unsigned char *)(v18 + v11);
  }
  return v4;
}

uint64_t sub_1ACD92C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 48) + v12) = *(unsigned char *)(*(void *)(v9 + 48) + v13);
  return a1;
}

uint64_t sub_1ACD92D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 40) + v12) = *(unsigned char *)(*(void *)(v9 + 40) + v13);
  return a1;
}

uint64_t sub_1ACD92DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 32) + v12) = *(unsigned char *)(*(void *)(v9 + 32) + v13);
  return a1;
}

uint64_t sub_1ACD92E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 24) + v12) = *(unsigned char *)(*(void *)(v9 + 24) + v13);
  return a1;
}

uint64_t sub_1ACD92F34(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  if (v11 <= 0xFE) {
    unsigned int v11 = 254;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_26;
  }
  uint64_t v14 = v10 + (v12 & ~v9) + 1;
  char v15 = 8 * v14;
  if (v14 > 3) {
    goto LABEL_9;
  }
  unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
  if (HIWORD(v17))
  {
    int v16 = *(_DWORD *)((char *)a1 + v14);
    if (v16) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v17 <= 0xFF)
    {
      if (v17 < 2) {
        goto LABEL_26;
      }
LABEL_9:
      int v16 = *((unsigned __int8 *)a1 + v14);
      if (!*((unsigned char *)a1 + v14)) {
        goto LABEL_26;
      }
LABEL_16:
      int v18 = (v16 - 1) << v15;
      if (v14 > 3) {
        int v18 = 0;
      }
      if (v10 + (v12 & ~v9) == -1)
      {
        int v20 = 0;
      }
      else
      {
        if (v14 <= 3) {
          int v19 = v10 + (v12 & ~v9) + 1;
        }
        else {
          int v19 = 4;
        }
        switch(v19)
        {
          case 2:
            int v20 = *a1;
            break;
          case 3:
            int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v20 = *(_DWORD *)a1;
            break;
          default:
            int v20 = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v11 + (v20 | v18) + 1;
    }
    int v16 = *(unsigned __int16 *)((char *)a1 + v14);
    if (*(unsigned __int16 *)((char *)a1 + v14)) {
      goto LABEL_16;
    }
  }
LABEL_26:
  if (v6 == v11) {
    return (*(uint64_t (**)(void))(v5 + 48))();
  }
  unint64_t v22 = ((unint64_t)a1 + v12) & ~v9;
  if (v8 == v11) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v22);
  }
  unsigned int v23 = *(unsigned __int8 *)(v22 + v10);
  if (v23 < 2) {
    return 0;
  }
  return ((v23 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_1ACD93158(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (v12 <= 0xFE) {
    unsigned int v12 = 254;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v10;
  size_t v14 = v11 + (v13 & ~v10) + 1;
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v11 + (v13 & ~v10) != -1)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_45;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x1ACD9344CLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v7 == v12)
        {
          unint64_t v22 = *(void (**)(void))(v6 + 56);
          v22();
        }
        else
        {
          unint64_t v23 = (unint64_t)&a1[v13] & ~v10;
          if (v9 == v12)
          {
            uint64_t v24 = *(void (**)(unint64_t))(v8 + 56);
            v24(v23);
          }
          else
          {
            *(unsigned char *)(v23 + v11) = a2 + 1;
          }
        }
      }
      return;
  }
}

uint64_t sub_1ACD93474()
{
  return swift_deallocObject();
}

id sub_1ACD934AC@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  if (*(unsigned char *)(v2 + 16)) {
    unint64_t v3 = (void **)(v2 + 24);
  }
  else {
    unint64_t v3 = a1;
  }
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

id sub_1ACD934C8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1ACD9F4F8();
}

uint64_t static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, void *a4@<X6>, void *a5@<X7>, uint64_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = a3;
  swift_bridgeObjectRetain();
  id v17 = a4;
  id v18 = a5;
  swift_retain();
  swift_retain();
  return sub_1ACD93BFC(a1, a2, v16, 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v17, a6, (uint64_t)v18, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1ACD93614(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1ACE77178();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1ACC410B0(a1);
    return v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= sub_1ACE77178() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1ACE77178();
  uint64_t v7 = sub_1ACD32618(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:
  return sub_1ACB87C64(a1, v2);
}

uint64_t FetchedResultsListPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X7>, void *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a4 >= 100) {
    a4 = 100;
  }
  uint64_t result = sub_1ACD93BFC(a1, a2, a3, a4, a5, &v15, a7, a8, a9, a10, a11, a12, a13);
  *a6 = v15;
  return result;
}

uint64_t FetchedResultsCountPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  id v12 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v13 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithEntityName_, v13);

  objc_msgSend(v14, sel_setPredicate_, a3);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v15 = (void *)sub_1ACE76558();
  objc_msgSend(v14, sel_setSortDescriptors_, v15);

  objc_msgSend(v14, sel_setFetchBatchSize_, 1);
  objc_msgSend(v14, sel_setIncludesSubentities_, 0);
  objc_msgSend(v14, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v14, sel_setReturnsObjectsAsFaults_, 1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D338);
  swift_allocObject();
  *((void *)&v17 + 1) = sub_1ACA8E710;
  *(void *)&long long v17 = 0;
  uint64_t result = sub_1ACA97690(a1, a2, (uint64_t)v14, a4, a5, (uint64_t)sub_1ACA56B68, 0, (uint64_t)sub_1ACA58428, v17, 0);
  *a6 = result;
  return result;
}

uint64_t FRPOutput.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v4);
  char v13 = *(unsigned char *)(v4 + *(int *)(a2 + 28));
  uint64_t v14 = *(void *)(v5 + *(int *)(a2 + 32));
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, a3);
  uint64_t result = type metadata accessor for FRPOutput();
  *(unsigned char *)(a4 + *(int *)(result + 28)) = v13;
  *(void *)(a4 + *(int *)(result + 32)) = v14;
  return result;
}

uint64_t FRPSectionInfo.section.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t FRPSectionInfo.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD93A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1, a3);
  uint64_t result = type metadata accessor for FRPSectionInfo();
  *(void *)(a4 + *(int *)(result + 44)) = a2;
  return result;
}

uint64_t FRPOutput.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FRPOutput.hasMore.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t FRPOutput.totalCount.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 32));
}

uint64_t FRPOutput.init(content:hasMore:totalCount:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for FRPOutput();
  *(unsigned char *)(a5 + *(int *)(result + 28)) = a2;
  *(void *)(a5 + *(int *)(result + 32)) = a3;
  return result;
}

uint64_t sub_1ACD93BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768EA0);
  id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v17 = sub_1ACD9F4F8();
  objc_msgSend(v17, sel_setPredicate_, a3);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  id v18 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setSortDescriptors_, v18);

  objc_msgSend(v17, sel_setFetchBatchSize_, a4);
  type metadata accessor for FetchedResultsPublisherImplementation();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a12;
  *(void *)(v19 + 24) = a13;
  swift_allocObject();
  *((void *)&v21 + 1) = sub_1ACA8E710;
  *(void *)&long long v21 = a11;
  uint64_t result = sub_1ACA976A4(a1, a2, (uint64_t)v17, a5, a7, a8, a9, a10, v21, v19);
  *a6 = result;
  return result;
}

uint64_t sub_1ACD93DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  return sub_1ACA976A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t FetchedResultsListPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a1;
  uint64_t v4 = *(void *)(a2 + 24);
  id v17 = *(id *)(a2 + 16);
  id v5 = v17;
  uint64_t v18 = MEMORY[0x1E4FBB550];
  uint64_t v19 = v4;
  uint64_t v20 = MEMORY[0x1E4FBB570];
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  sub_1ACE76688();
  type metadata accessor for FRPOutput();
  swift_getWitnessTable();
  uint64_t v6 = sub_1ACE75678();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - v8;
  id v17 = (id)sub_1ACD94FAC();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v5;
  v10[3] = v4;
  uint64_t v11 = v15;
  v10[4] = v14;
  v10[5] = v11;
  sub_1ACE75B58();
  swift_release();

  sub_1ACE75668();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ACD94040@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  uint64_t v2 = type metadata accessor for FRPOutput();
  uint64_t v3 = sub_1ACE76688();
  return FRPOutput.map<A>(_:)((uint64_t)sub_1ACDA24CC, v2, v3, a1);
}

uint64_t sub_1ACD94100@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  swift_getWitnessTable();
  sub_1ACE76AC8();
  uint64_t result = v3;
  if (!v3) {
    uint64_t result = sub_1ACE765F8();
  }
  *a1 = result;
  return result;
}

uint64_t FetchedResultsListPublisher.isPreparingNextPage.getter()
{
  return sub_1ACD94C08() & 1;
}

Swift::Bool __swiftcall FetchedResultsListPublisher.shouldPrepareNextPage()()
{
  return sub_1ACD94C58() & 1;
}

Swift::Void __swiftcall FetchedResultsListPublisher.loadNextPage()()
{
}

uint64_t sub_1ACD94228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FetchedResultsListPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t FetchedResultsSingleItemPublisher.init(identifier:entityName:predicate:managedObjectContext:receiveOn:transform:updateRequiredComparator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768EA0);
  id v15 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v16 = sub_1ACD9F4F8();
  objc_msgSend(v16, sel_setPredicate_, a3);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  id v17 = (void *)sub_1ACE76558();
  objc_msgSend(v16, sel_setSortDescriptors_, v17);

  objc_msgSend(v16, sel_setFetchBatchSize_, 1);
  objc_msgSend(v16, sel_setFetchLimit_, 1);

  type metadata accessor for FetchedResultsPublisherImplementation();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a11;
  *(void *)(v18 + 24) = a12;
  swift_allocObject();
  *((void *)&v20 + 1) = sub_1ACDA266C;
  *(void *)&long long v20 = a10;
  uint64_t result = sub_1ACA976A4(a1, a2, (uint64_t)v16, a4, a5, a6, a8, a9, v20, v18);
  *a7 = result;
  return result;
}

uint64_t FetchedResultsSingleItemPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a1;
  uint64_t v4 = *(void *)(a2 + 24);
  id v17 = *(id *)(a2 + 16);
  id v5 = v17;
  uint64_t v18 = MEMORY[0x1E4FBB550];
  uint64_t v19 = v4;
  uint64_t v20 = MEMORY[0x1E4FBB570];
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  sub_1ACE76FD8();
  swift_getWitnessTable();
  uint64_t v6 = sub_1ACE75678();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - v8;
  id v17 = (id)sub_1ACD94FAC();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v5;
  v10[3] = v4;
  uint64_t v11 = v15;
  v10[4] = v14;
  v10[5] = v11;
  sub_1ACE75B58();
  swift_release();

  sub_1ACE75668();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ACD945BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  swift_getWitnessTable();
  sub_1ACE76AC8();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
  }
  sub_1ACE76688();
  swift_getWitnessTable();
  sub_1ACE76AC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD946E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FetchedResultsSingleItemPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t FetchedResultsCountPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[0] = a2;
  v17[1] = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D898);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76D6E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v3;
  uint64_t v13 = *(os_unfair_lock_s **)(*v3 + 112);
  void v17[4] = sub_1ACD9F61C;
  v17[5] = v12;
  uint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1ACAC41AC(&v18);
  os_unfair_lock_unlock(v14);
  uint64_t v15 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D328);
  sub_1ACA51EA4(&qword_1EB76D320, &qword_1EB76D328);
  sub_1ACE75B58();

  sub_1ACA51EA4((unint64_t *)&unk_1EB76D888, &qword_1EB76D898);
  sub_1ACE75D28();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ACE75638();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1ACD94978@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 16);
  return result;
}

uint64_t FetchedResultsSectionedPublisher.init(identifier:entityName:predicate:sortDescriptors:pageSize:managedObjectContext:receiveOn:transform:updateRequiredComparator:sectionTransform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, uint64_t a12)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768EA0);
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v15 = sub_1ACD9F4F8();
  objc_msgSend(v15, sel_setPredicate_, a3);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
  uint64_t v16 = (void *)sub_1ACE76558();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setSortDescriptors_, v16);

  if (a4 >= 100) {
    uint64_t v17 = 100;
  }
  else {
    uint64_t v17 = a4;
  }
  objc_msgSend(v15, sel_setFetchBatchSize_, v17);

  type metadata accessor for FetchedResultsPublisherImplementation();
  swift_allocObject();
  uint64_t result = sub_1ACA976A4(a1, a2, (uint64_t)v15, a5, a7, a8, a9, a10, a11, a12);
  *a6 = result;
  return result;
}

void FetchedResultsSectionedPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)sub_1ACD94FAC();
  uint64_t v7 = type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  uint64_t WitnessTable = swift_getWitnessTable();
  PFProducer.receive<A>(subscriber:)(a1, v7, a3, WitnessTable, a4);
}

void sub_1ACD94BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for FRPOutput()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACD94C08()
{
  uint64_t result = sub_1ACD94F08();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_1ACD95838();
    uint64_t v4 = v3;
    uint64_t v6 = v5;

    return v2 < v4 && v2 < v6;
  }
  return result;
}

uint64_t sub_1ACD94C58()
{
  uint64_t result = sub_1ACD94F08();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_1ACD95838();
    uint64_t v4 = v3;
    uint64_t v6 = v5;

    return v2 < v6 && v2 >= v4;
  }
  return result;
}

void sub_1ACD94CB0()
{
  uint64_t v0 = sub_1ACD94F08();
  if (v0)
  {
    id v1 = (id)v0;
    sub_1ACD94D0C();
  }
}

void sub_1ACD94D0C()
{
  id v1 = (void *)(*MEMORY[0x1E4FBC8C8] & *v0);
  char v22 = 0;
  uint64_t v2 = (void *)((char *)v0 + qword_1E99F5AF0);
  swift_beginAccess();
  uint64_t v3 = *v2;
  id v14 = v0;
  id v15 = &v22;
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  uint64_t v6 = (uint64_t (*)(uint64_t))v1[12];
  uint64_t v7 = (void *)v1[13];
  swift_retain();
  uint64_t aBlock = v4;
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  uint64_t v19 = v7;
  uint64_t v8 = type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
  Synchronized.modify(_:)((uint64_t)sub_1ACDA247C, (uint64_t)&v13, v3, v8);
  swift_release();
  if (v22 == 1)
  {
    uint64_t v9 = *(void **)((char *)v0 + qword_1E99F5AC0);
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = (void *)swift_allocObject();
    id v11[2] = v4;
    _OWORD v11[3] = v5;
    v11[4] = v6;
    v11[5] = v7;
    void v11[6] = v10;
    uint64_t v20 = sub_1ACDA24BC;
    long long v21 = v11;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_1ACA6DA9C;
    uint64_t v19 = &block_descriptor_73_3;
    uint64_t v12 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v9, sel_performBlock_, v12);
    _Block_release(v12);
  }
}

uint64_t sub_1ACD94F08()
{
  uint64_t v1 = v0[14];
  long long v4 = *(_OWORD *)(*v0 + 80);
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  uint64_t v2 = sub_1ACE76FD8();
  sub_1ACDC5D50((uint64_t)sub_1ACDA2364, (uint64_t)v0, v1, v2);
  return v4;
}

uint64_t sub_1ACD94FAC()
{
  uint64_t v1 = v0[14];
  long long v4 = *(_OWORD *)(*v0 + 80);
  uint64_t v2 = type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  sub_1ACDC5D50((uint64_t)sub_1ACDA24D8, (uint64_t)v0, v1, v2);
  return v4;
}

uint64_t sub_1ACD95044()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD95054@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACD94040(a1);
}

uint64_t type metadata accessor for FetchedResultsPublisherImplementation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACD95078()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD95088()
{
  return swift_deallocObject();
}

uint64_t sub_1ACD95098@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACD945BC(*(void *)(v1 + 16), a1);
}

char *sub_1ACD950A4(void *a1)
{
  uint64_t v2 = (char *)MEMORY[0x1AD11B470](a1 + 13);
  if (!v2)
  {
    uint64_t v3 = a1[3];
    uint64_t v17 = a1[2];
    long long v4 = (void *)a1[4];
    uint64_t v5 = (void *)a1[5];
    uint64_t v6 = (void *)a1[6];
    uint64_t v7 = a1[8];
    uint64_t v15 = a1[9];
    uint64_t v16 = a1[7];
    uint64_t v8 = a1[10];
    uint64_t v14 = a1[11];
    uint64_t v9 = a1[12];
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D328));
    swift_bridgeObjectRetain();
    id v10 = v4;
    id v11 = v5;
    id v12 = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v2 = sub_1ACD962DC(v17, v3, v10, v11, v12, v16, v7, v15, v8, v14, v9);
    swift_unknownObjectWeakAssign();
  }
  return v2;
}

uint64_t sub_1ACD951BC@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = MEMORY[0x1AD11B470](a1 + 13);
  uint64_t v5 = (char *)result;
  if (!result)
  {
    uint64_t v18 = (objc_class *)type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
    uint64_t v6 = a1[3];
    uint64_t v21 = a1[2];
    uint64_t v7 = (void *)a1[4];
    uint64_t v8 = (void *)a1[5];
    uint64_t v9 = (void *)a1[6];
    uint64_t v10 = a1[8];
    uint64_t v19 = a1[9];
    uint64_t v20 = a1[7];
    uint64_t v11 = a1[10];
    uint64_t v17 = a1[11];
    uint64_t v12 = a1[12];
    swift_bridgeObjectRetain();
    id v16 = v7;
    id v13 = v8;
    id v14 = v9;
    swift_retain();
    swift_retain();
    swift_retain();
    id v15 = objc_allocWithZone(v18);
    uint64_t v5 = sub_1ACD96670(v21, v6, v16, v13, v14, v20, v10, v19, v11, v17, v12);
    uint64_t result = swift_unknownObjectWeakAssign();
  }
  *a2 = v5;
  return result;
}

char *sub_1ACD95308(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  id v19 = objc_allocWithZone(v10);
  return sub_1ACD96670(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10);
}

id *sub_1ACD953B4()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_1ACD95414()
{
  sub_1ACD953B4();
  return swift_deallocClassInstance();
}

void sub_1ACD95444(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EB768C20 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1ACE754C8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB768C00);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  sub_1ACDA23F4(v2);
  swift_bridgeObjectRetain();
  sub_1ACDA23F4(v2);
  swift_bridgeObjectRetain();
  oslog = sub_1ACE75498();
  os_log_type_t v7 = sub_1ACE76BD8();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v11 = v9;
    *(_DWORD *)uint64_t v8 = 136316674;
    swift_bridgeObjectRetain();
    sub_1ACA3189C(a1, a2, &v11);
    sub_1ACE76FF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 1024;
    sub_1ACDA23C0(v3);
    sub_1ACE76FF8();
    sub_1ACDA23C0(v3);
    *(_WORD *)(v8 + 18) = 2048;
    sub_1ACDA23C0(v3);
    sub_1ACE76FF8();
    sub_1ACDA23C0(v3);
    *(_WORD *)(v8 + 28) = 2048;
    sub_1ACDA23C0(v3);
    sub_1ACE76FF8();
    sub_1ACDA23C0(v3);
    *(_WORD *)(v8 + 38) = 2048;
    sub_1ACDA23C0(v3);
    sub_1ACE76FF8();
    sub_1ACDA23C0(v3);
    *(_WORD *)(v8 + 48) = 2048;
    if ((*(void *)(v3 + 8) & 0xC000000000000001) != 0) {
      sub_1ACE77178();
    }
    sub_1ACDA23C0(v3);
    sub_1ACE76FF8();
    sub_1ACDA23C0(v3);
    *(_WORD *)(v8 + 58) = 2048;
    sub_1ACDA23C0(v3);
    sub_1ACE76FF8();
    sub_1ACDA23C0(v3);
    _os_log_impl(&dword_1AC9D5000, oslog, v7, "FetchedResultsPublisher (%s):\nUpdate Stats\n    Update pushed: %{BOOL}d\n    Added to cache: %ld\n    Items updated: %ld\n    Items removed: %ld\n    Total paged items: %ld\n    Total items in DB: %ld", (uint8_t *)v8, 0x44u);
    swift_arrayDestroy();
    MEMORY[0x1AD11B340](v9, -1, -1);
    MEMORY[0x1AD11B340](v8, -1, -1);
  }
  else
  {
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    swift_bridgeObjectRelease_n();
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
    sub_1ACDA23C0(v2);
  }
}

uint64_t sub_1ACD95838()
{
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v2 = (void *)((char *)v0 + qword_1E99F5AF0);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_retain();
  long long v6 = *(_OWORD *)(v1 + 80);
  uint64_t v4 = type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
  Synchronized.wrappedValue.getter(v3, v4);
  swift_release();
  return v6;
}

uint64_t sub_1ACD958F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a1;
  v5[1] = a2;
  void v5[2] = a3;
  swift_beginAccess();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
  uint64_t v3 = type metadata accessor for Synchronized();
  sub_1ACAD468C((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1ACD959AC()
{
  uint64_t v1 = sub_1ACE75EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v6 = *(void **)(v0 + qword_1E99F5AC8);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v5, *MEMORY[0x1E4FBCBF0], v1, v3);
  id v7 = v6;
  LOBYTE(v6) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v9 = v0 + qword_1E99F5B00;
  uint64_t v10 = *(void *)(v0 + qword_1E99F5B00);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 16);
    char v12 = *(unsigned char *)(v9 + 8);
    id v13 = (uint64_t *)(v0 + qword_1E99F5AF8);
    swift_beginAccess();
    uint64_t v14 = *v13;
    uint64_t v15 = *v13 + 64;
    uint64_t v16 = 1 << *(unsigned char *)(*v13 + 32);
    uint64_t v17 = -1;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    unint64_t v18 = v17 & *(void *)(*v13 + 64);
    int64_t v19 = (unint64_t)(v16 + 63) >> 6;
    char v20 = v12 & 1;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v21 = 0;
    while (1)
    {
      if (v18)
      {
        unint64_t v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v23 = v22 | (v21 << 6);
      }
      else
      {
        int64_t v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        if (v25 >= v19) {
          goto LABEL_23;
        }
        unint64_t v26 = *(void *)(v15 + 8 * v25);
        ++v21;
        if (!v26)
        {
          int64_t v21 = v25 + 1;
          if (v25 + 1 >= v19) {
            goto LABEL_23;
          }
          unint64_t v26 = *(void *)(v15 + 8 * v21);
          if (!v26)
          {
            int64_t v21 = v25 + 2;
            if (v25 + 2 >= v19) {
              goto LABEL_23;
            }
            unint64_t v26 = *(void *)(v15 + 8 * v21);
            if (!v26)
            {
              int64_t v27 = v25 + 3;
              if (v27 >= v19)
              {
LABEL_23:
                swift_release();
                return swift_bridgeObjectRelease();
              }
              unint64_t v26 = *(void *)(v15 + 8 * v27);
              if (!v26)
              {
                while (1)
                {
                  int64_t v21 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    break;
                  }
                  if (v21 >= v19) {
                    goto LABEL_23;
                  }
                  unint64_t v26 = *(void *)(v15 + 8 * v21);
                  ++v27;
                  if (v26) {
                    goto LABEL_22;
                  }
                }
LABEL_25:
                __break(1u);
LABEL_26:
                __break(1u);
                break;
              }
              int64_t v21 = v27;
            }
          }
        }
LABEL_22:
        unint64_t v18 = (v26 - 1) & v26;
        unint64_t v23 = __clz(__rbit64(v26)) + (v21 << 6);
      }
      uint64_t v24 = *(void (**)(uint64_t *))(*(void *)(v14 + 56) + 16 * v23);
      uint64_t v28 = v10;
      char v29 = v20;
      uint64_t v30 = v11;
      swift_retain();
      v24(&v28);
      uint64_t result = swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACD95C58()
{
  uint64_t v1 = sub_1ACE75EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v6 = *(void **)(v0 + qword_1E99F5AC8);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v5, *MEMORY[0x1E4FBCBF0], v1, v3);
  id v7 = v6;
  LOBYTE(v6) = sub_1ACE75EF8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v9 = v0 + qword_1E99F5B00;
  uint64_t v10 = *(void *)(v0 + qword_1E99F5B00);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 16);
    char v12 = *(unsigned char *)(v9 + 8);
    id v13 = (uint64_t *)(v0 + qword_1E99F5AF8);
    swift_beginAccess();
    uint64_t v14 = *v13;
    sub_1ACE75118();
    type metadata accessor for FRPSectionInfo();
    sub_1ACE76688();
    type metadata accessor for FRPOutput();
    swift_getFunctionTypeMetadata1();
    sub_1ACBDC0DC((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
    uint64_t v15 = nullsub_1(v14);
    uint64_t v16 = v15;
    uint64_t v17 = v15 + 64;
    uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
    uint64_t v19 = -1;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    unint64_t v20 = v19 & *(void *)(v15 + 64);
    int64_t v21 = (unint64_t)(v18 + 63) >> 6;
    char v22 = v12 & 1;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v23 = 0;
    while (1)
    {
      if (v20)
      {
        unint64_t v24 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v25 = v24 | (v23 << 6);
      }
      else
      {
        int64_t v27 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        if (v27 >= v21) {
          goto LABEL_23;
        }
        unint64_t v28 = *(void *)(v17 + 8 * v27);
        ++v23;
        if (!v28)
        {
          int64_t v23 = v27 + 1;
          if (v27 + 1 >= v21) {
            goto LABEL_23;
          }
          unint64_t v28 = *(void *)(v17 + 8 * v23);
          if (!v28)
          {
            int64_t v23 = v27 + 2;
            if (v27 + 2 >= v21) {
              goto LABEL_23;
            }
            unint64_t v28 = *(void *)(v17 + 8 * v23);
            if (!v28)
            {
              int64_t v29 = v27 + 3;
              if (v29 >= v21)
              {
LABEL_23:
                swift_release();
                return swift_bridgeObjectRelease();
              }
              unint64_t v28 = *(void *)(v17 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  int64_t v23 = v29 + 1;
                  if (__OFADD__(v29, 1)) {
                    break;
                  }
                  if (v23 >= v21) {
                    goto LABEL_23;
                  }
                  unint64_t v28 = *(void *)(v17 + 8 * v23);
                  ++v29;
                  if (v28) {
                    goto LABEL_22;
                  }
                }
LABEL_25:
                __break(1u);
LABEL_26:
                __break(1u);
                break;
              }
              int64_t v23 = v29;
            }
          }
        }
LABEL_22:
        unint64_t v20 = (v28 - 1) & v28;
        unint64_t v25 = __clz(__rbit64(v28)) + (v23 << 6);
      }
      unint64_t v26 = *(void (**)(uint64_t *))(*(void *)(v16 + 56) + 16 * v25);
      uint64_t v30 = v10;
      char v31 = v22;
      uint64_t v32 = v11;
      swift_retain();
      v26(&v30);
      uint64_t result = swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ACD95FDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + qword_1E99F5B00 + 16);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + qword_1E99F5B00);
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1ACD96000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = v1 + qword_1E99F5B00;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRelease();
  return sub_1ACD95C58();
}

uint64_t sub_1ACD9604C(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + qword_1E99F5B08);
  swift_beginAccess();
  uint64_t v3 = *v2;
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
  uint64_t v4 = sub_1ACE76FD8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v2, a1, v4);
  return sub_1ACB6BEB4(v3);
}

uint64_t (*sub_1ACD96178())()
{
  return j__swift_endAccess;
}

uint64_t sub_1ACD961D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EB768910;
  swift_beginAccess();
  return sub_1ACA2EDE8(v3, a1);
}

uint64_t sub_1ACD96228(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1EB768910;
  swift_beginAccess();
  sub_1ACABEA08(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1ACD96284(uint64_t a1)
{
  *(void *)(v1 + qword_1EB7688E8) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD9629C()
{
  return *(unsigned __int8 *)(v0 + qword_1EB7688D0);
}

uint64_t sub_1ACD962AC(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1EB7688D0) = result;
  return result;
}

uint64_t sub_1ACD962BC()
{
  return *(void *)(v0 + qword_1EB7688F8);
}

uint64_t sub_1ACD962CC(uint64_t result)
{
  *(void *)(v1 + qword_1EB7688F8) = result;
  return result;
}

char *sub_1ACD962DC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = qword_1E99F5AF0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A870);
  uint64_t v19 = swift_allocObject();
  *(void *)&v11[v18] = v19;
  uint64_t v20 = MEMORY[0x1E4FBC868];
  *(void *)&v11[qword_1E99F5AF8] = MEMORY[0x1E4FBC868];
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = 0;
  *(_DWORD *)(v19 + 40) = 0;
  int64_t v21 = &v11[qword_1E99F5B00];
  v21[1] = 0;
  _DWORD v21[2] = 0;
  void *v21 = 0;
  char v22 = &v11[qword_1E99F5B08];
  *char v22 = 0u;
  v22[1] = 0u;
  v22[2] = 0u;
  *(_OWORD *)((char *)v22 + 41) = 0u;
  int64_t v23 = &v11[qword_1EB768910];
  uint64_t v24 = sub_1ACE753F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(void *)&v11[qword_1EB7688E8] = 0;
  *(void *)&v11[qword_1EB7688E0] = v20;
  *(void *)&v11[qword_1EB768908] = v20;
  v11[qword_1EB7688D0] = 0;
  *(void *)&v11[qword_1EB7688F8] = 0;
  unint64_t v25 = &v11[qword_1E99F5AB0];
  *unint64_t v25 = a1;
  v25[1] = a2;
  unint64_t v26 = v11;
  swift_bridgeObjectRetain();
  id v27 = objc_msgSend(a3, sel_fetchBatchSize);
  *(void *)&v26[qword_1E99F5AB8] = v27;
  *(void *)&v26[qword_1E99F5AC0] = a4;
  *(void *)&v26[qword_1E99F5AC8] = a5;
  unint64_t v28 = &v26[qword_1E99F5AD0];
  *(void *)unint64_t v28 = a6;
  *((void *)v28 + 1) = a7;
  int64_t v29 = &v26[qword_1E99F5AD8];
  *(void *)int64_t v29 = a8;
  *((void *)v29 + 1) = a9;
  uint64_t v30 = &v26[qword_1E99F5AE0];
  *(void *)uint64_t v30 = a10;
  *((void *)v30 + 1) = a11;
  id v31 = objc_allocWithZone(MEMORY[0x1E4F1C0F0]);
  id v32 = a4;
  id v33 = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  id v34 = objc_msgSend(v31, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, a3, v32, 0, 0);
  *(void *)&v26[qword_1E99F5AE8] = v34;

  v46.receiver = v26;
  v46.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76D328);
  uint64_t v35 = (char *)objc_msgSendSuper2(&v46, sel_init);
  uint64_t v36 = *(void **)&v35[qword_1E99F5AE8];
  uint64_t v37 = v35;
  objc_msgSend(v36, sel_setDelegate_, v37);
  uint64_t v38 = (void *)swift_allocObject();
  void v38[2] = v37;
  v38[3] = a1;
  unsigned char v38[4] = a2;
  aBlock[4] = sub_1ACDA239C;
  void aBlock[5] = v38;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_57_0;
  uint64_t v39 = _Block_copy(aBlock);
  uint64_t v40 = v37;
  swift_release();
  objc_msgSend(v32, sel_performBlock_, v39);

  swift_release();
  swift_release();
  swift_release();
  _Block_release(v39);
  return v40;
}

char *sub_1ACD96670(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = qword_1E99F5AF0;
  uint64_t v16 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v11) + 0x50);
  uint64_t v17 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v11) + 0x58);
  uint64_t v18 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x60);
  uint64_t v51 = v18;
  uint64_t v19 = *(void **)((*MEMORY[0x1E4FBC8C8] & *v11) + 0x68);
  uint64_t v20 = v11;
  memset(v61, 0, 24);
  uint64_t aBlock = v16;
  uint64_t v55 = v17;
  uint64_t v56 = v18;
  uint64_t v57 = v19;
  uint64_t v50 = v19;
  uint64_t v21 = type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
  *(void *)((char *)v11 + v15) = sub_1ACAD4688(v61, v21);
  uint64_t v22 = qword_1E99F5AF8;
  sub_1ACE75118();
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  type metadata accessor for FRPOutput();
  swift_getFunctionTypeMetadata1();
  sub_1ACBDC0DC((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
  *(void *)((char *)v20 + v22) = sub_1ACE75F98();
  int64_t v23 = (void *)((char *)v20 + qword_1E99F5B00);
  *int64_t v23 = 0;
  v23[1] = 0;
  v23[2] = 0;
  uint64_t v24 = (_OWORD *)((char *)v20 + qword_1E99F5B08);
  *uint64_t v24 = 0u;
  v24[1] = 0u;
  void v24[2] = 0u;
  *(_OWORD *)((char *)v24 + 41) = 0u;
  unint64_t v25 = (char *)v20 + qword_1EB768910;
  uint64_t v26 = sub_1ACE753F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(void *)((char *)v20 + qword_1EB7688E8) = 0;
  uint64_t v27 = qword_1EB7688E0;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  sub_1ACE76FD8();
  sub_1ACDA153C((unint64_t *)&unk_1EB768EE0);
  *(void *)((char *)v20 + v27) = sub_1ACE75F98();
  uint64_t v28 = qword_1EB768908;
  sub_1ACE76FD8();
  *(void *)((char *)v20 + v28) = sub_1ACE75F98();
  *((unsigned char *)v20 + qword_1EB7688D0) = 0;
  *(void *)((char *)v20 + qword_1EB7688F8) = 0;
  int64_t v29 = (void *)((char *)v20 + qword_1E99F5AB0);
  *int64_t v29 = a1;
  v29[1] = a2;
  swift_bridgeObjectRetain();
  id v30 = objc_msgSend(a3, sel_fetchBatchSize);
  *(void *)((char *)v20 + qword_1E99F5AB8) = v30;
  *(void *)((char *)v20 + qword_1E99F5AC0) = a4;
  *(void *)((char *)v20 + qword_1E99F5AC8) = a5;
  id v31 = (void *)((char *)v20 + qword_1E99F5AD0);
  *id v31 = a6;
  v31[1] = a7;
  id v32 = (void *)((char *)v20 + qword_1E99F5AD8);
  *id v32 = a8;
  v32[1] = a9;
  id v33 = (void *)((char *)v20 + qword_1E99F5AE0);
  *id v33 = a10;
  v33[1] = a11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB768F28);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v35 = a4;
  id v49 = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  id v36 = a3;
  id v37 = objc_allocWithZone(ObjCClassFromMetadata);
  *(void *)((char *)v20 + qword_1E99F5AE8) = sub_1ACD9F550(v36, v35, 0, 0, 0, 0);

  uint64_t aBlock = v16;
  uint64_t v55 = v17;
  uint64_t v56 = v51;
  uint64_t v57 = v50;
  v60.receiver = v20;
  v60.super_class = (Class)type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  uint64_t v38 = (char *)objc_msgSendSuper2(&v60, sel_init);
  uint64_t v39 = *(void **)&v38[qword_1E99F5AE8];
  uint64_t v40 = v38;
  objc_msgSend(v39, sel_setDelegate_, v40);
  uint64_t v41 = (void *)swift_allocObject();
  uint64_t v41[2] = v40;
  v41[3] = a1;
  void v41[4] = a2;
  uint64_t v58 = sub_1ACDA1594;
  uint64_t v59 = v41;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v55 = 1107296256;
  uint64_t v56 = sub_1ACA6DA9C;
  uint64_t v57 = &block_descriptor_31_1;
  uint64_t v42 = _Block_copy(&aBlock);
  uint64_t v43 = v40;
  swift_release();
  objc_msgSend(v35, sel_performBlock_, v42);

  swift_release();
  swift_release();
  swift_release();
  _Block_release(v42);
  return v43;
}

uint64_t sub_1ACD96BC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  uint64_t v63 = sub_1ACE753F8();
  uint64_t v6 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v62 - v10;
  if (qword_1EB768FF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_1EB768FF0;
  id v13 = a1;
  sub_1ACE753B8();
  sub_1ACE76E18();
  uint64_t v14 = (void *)qword_1EB768FF0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v15 = swift_allocObject();
  long long v64 = xmmword_1ACE843F0;
  *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v62 = sub_1ACADC3A8();
  *(void *)(v15 + 64) = v62;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  id v16 = v14;
  swift_bridgeObjectRetain();
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  uint64_t v17 = *(void **)&v13[qword_1E99F5AE8];
  *(void *)&v68[0] = 0;
  if ((objc_msgSend(v17, sel_performFetch_, v68) & 1) == 0)
  {
    uint64_t v45 = v17;
    id v46 = *(id *)&v68[0];
    uint64_t v47 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB768C20 != -1) {
      goto LABEL_14;
    }
    while (1)
    {
      uint64_t v48 = sub_1ACE754C8();
      __swift_project_value_buffer(v48, (uint64_t)qword_1EB768C00);
      id v49 = v13;
      id v50 = v47;
      uint64_t v51 = v49;
      id v52 = v47;
      uint64_t v53 = sub_1ACE75498();
      os_log_type_t v54 = sub_1ACE76BF8();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v56 = (void *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        *(void *)&v68[0] = v57;
        *(_DWORD *)uint64_t v55 = 138412546;
        id v58 = objc_msgSend(v45, sel_fetchRequest);
        *(void *)&long long v65 = v58;
        sub_1ACE76FF8();
        *uint64_t v56 = v58;

        *(_WORD *)(v55 + 12) = 2080;
        *(void *)&long long v65 = v47;
        id v59 = v47;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
        uint64_t v60 = sub_1ACE76228();
        *(void *)&long long v65 = sub_1ACA3189C(v60, v61, (uint64_t *)v68);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v53, v54, "Failed to start FetchedResultsPublisher FRC: request: %@\nerror: %s", (uint8_t *)v55, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v56, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v57, -1, -1);
        MEMORY[0x1AD11B340](v55, -1, -1);

        __break(1u);
      }

      __break(1u);
LABEL_14:
      swift_once();
    }
  }
  id v18 = *(id *)&v68[0];
  id v19 = objc_msgSend(v17, sel_fetchedObjects);
  if (!v19)
  {
    unint64_t v21 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_6;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v20 = v19;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
  unint64_t v21 = sub_1ACE76578();

  if (v21 >> 62) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  swift_bridgeObjectRelease();
  sub_1ACE76E08();
  int64_t v23 = (void *)qword_1EB768FF0;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v24 + 16) = v64;
  uint64_t v26 = MEMORY[0x1E4FBB5C8];
  *(void *)(v24 + 56) = v25;
  *(void *)(v24 + 64) = v26;
  *(void *)(v24 + 32) = v22;
  id v27 = v23;
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)&v13[qword_1E99F5AB8];
  uint64_t v29 = swift_beginAccess();
  *(void *)&long long v65 = 0;
  *((void *)&v65 + 1) = v28;
  *(void *)&long long v66 = 0;
  MEMORY[0x1F4188790](v29);
  id v31 = (__n128 *)&v30[4];
  id v32 = v30 + 10;
  os_unfair_lock_lock(v30 + 10);
  sub_1ACDA23A8(v31);
  os_unfair_lock_unlock(v32);
  swift_endAccess();
  *(void *)&long long v65 = MEMORY[0x1E4FBC870];
  *((void *)&v65 + 1) = MEMORY[0x1E4FBC870];
  long long v66 = 0u;
  memset(v67, 0, 25);
  id v33 = (void *)qword_1EB768FF0;
  id v34 = v13;
  id v35 = v33;
  sub_1ACE753B8();
  sub_1ACE76E18();
  id v36 = (void *)qword_1EB768FF0;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v64;
  uint64_t v38 = *(void *)&v34[qword_1E99F5AB0];
  uint64_t v39 = *(void *)&v34[qword_1E99F5AB0 + 8];
  unint64_t v40 = v62;
  *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v37 + 64) = v40;
  *(void *)(v37 + 32) = v38;
  *(void *)(v37 + 40) = v39;
  id v41 = v36;
  swift_bridgeObjectRetain();
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  sub_1ACD97C6C((uint64_t)&v65);
  v68[0] = v65;
  v68[1] = v66;
  v69[0] = v67[0];
  *(_OWORD *)((char *)v69 + 9) = *(_OWORD *)((char *)v67 + 9);
  sub_1ACDA15A0((uint64_t)"FetchedResultsPublisher Initial Page", 36, 2, (uint64_t)v8, v68);
  sub_1ACDA23C0((uint64_t)v68);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v43 = v63;
  v42(v8, v63);
  return ((uint64_t (*)(char *, uint64_t))v42)(v11, v43);
}

uint64_t sub_1ACD973EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *MEMORY[0x1E4FBC8C8] & *a1;
  uint64_t v49 = sub_1ACE753F8();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - v10;
  if (qword_1EB768FF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)qword_1EB768FF0;
  id v13 = a1;
  sub_1ACE753B8();
  sub_1ACE76E18();
  uint64_t v14 = (void *)qword_1EB768FF0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v15 = swift_allocObject();
  long long v47 = xmmword_1ACE843F0;
  *(_OWORD *)(v15 + 16) = xmmword_1ACE843F0;
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 64) = sub_1ACADC3A8();
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  id v16 = v14;
  swift_bridgeObjectRetain();
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  uint64_t v17 = *(Class *)((char *)&v13->isa + qword_1E99F5AE8);
  *(void *)&v53[0] = 0;
  if (!objc_msgSend(v17, sel_performFetch_, v53))
  {
    id v32 = *(id *)&v53[0];
    id v33 = (void *)sub_1ACE74D78();

    swift_willThrow();
    if (qword_1EB768C20 != -1) {
      goto LABEL_12;
    }
    while (1)
    {
      uint64_t v34 = sub_1ACE754C8();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EB768C00);
      id v35 = v13;
      id v36 = v33;
      uint64_t v37 = v35;
      id v38 = v33;
      id v13 = sub_1ACE75498();
      os_log_type_t v39 = sub_1ACE76BF8();
      if (os_log_type_enabled(v13, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        id v41 = (void *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(void *)&v53[0] = v42;
        *(_DWORD *)uint64_t v40 = 138412546;
        id v43 = objc_msgSend(v17, sel_fetchRequest);
        *(void *)&long long v50 = v43;
        sub_1ACE76FF8();
        void *v41 = v43;

        *(_WORD *)(v40 + 12) = 2080;
        *(void *)&long long v50 = v33;
        id v44 = v33;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
        uint64_t v45 = sub_1ACE76228();
        *(void *)&long long v50 = sub_1ACA3189C(v45, v46, (uint64_t *)v53);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AC9D5000, v13, v39, "Failed to start FetchedResultsPublisher FRC: request: %@\nerror: %s", (uint8_t *)v40, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v41, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v42, -1, -1);
        MEMORY[0x1AD11B340](v40, -1, -1);

        __break(1u);
      }

      __break(1u);
LABEL_12:
      swift_once();
    }
  }
  id v18 = *(id *)&v53[0];
  id v19 = objc_msgSend(v17, sel_fetchedObjects);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)(v6 + 96);
    uint64_t v22 = sub_1ACE76578();
  }
  else
  {
    uint64_t v21 = *(void *)(v6 + 96);
    uint64_t v22 = sub_1ACE765F8();
  }
  uint64_t v23 = MEMORY[0x1AD1187F0](v22, v21);
  swift_bridgeObjectRelease();
  sub_1ACE76E08();
  uint64_t v24 = (void *)qword_1EB768FF0;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v25 + 16) = v47;
  uint64_t v27 = MEMORY[0x1E4FBB5C8];
  *(void *)(v25 + 56) = v26;
  *(void *)(v25 + 64) = v27;
  *(void *)(v25 + 32) = v23;
  id v28 = v24;
  sub_1ACE75398();

  swift_bridgeObjectRelease();
  sub_1ACD958F4(0, *(uint64_t *)((char *)&v13->isa + qword_1E99F5AB8), 0);
  long long v51 = 0u;
  memset(v52, 0, 25);
  *(void *)&long long v50 = MEMORY[0x1E4FBC870];
  *((void *)&v50 + 1) = MEMORY[0x1E4FBC870];
  sub_1ACD97AF0();
  sub_1ACD996E4(&v50);
  v53[0] = v50;
  v53[1] = v51;
  v54[0] = v52[0];
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v52 + 9);
  sub_1ACDA15A0((uint64_t)"FetchedResultsPublisher Initial Page", 36, 2, (uint64_t)v8, v53);
  sub_1ACDA23C0((uint64_t)v53);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v30 = v49;
  v29(v8, v49);
  return ((uint64_t (*)(char *, uint64_t))v29)(v11, v30);
}

uint64_t sub_1ACD97AF0()
{
  if (qword_1EB768FF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)qword_1EB768FF0;
  uint64_t v2 = v0;
  sub_1ACE753B8();
  sub_1ACE76E18();
  uint64_t v3 = (void *)qword_1EB768FF0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ACE843F0;
  uint64_t v6 = *(void *)&v2[qword_1E99F5AB0];
  uint64_t v5 = *(void *)&v2[qword_1E99F5AB0 + 8];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1ACADC3A8();
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v5;
  id v7 = v3;
  swift_bridgeObjectRetain();
  sub_1ACE75398();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD97C6C(uint64_t a1)
{
  unint64_t v2 = (unint64_t)v1;
  uint64_t v210 = a1;
  uint64_t v191 = sub_1ACE75448();
  uint64_t v200 = *(void *)(v191 - 8);
  MEMORY[0x1F4188790](v191);
  uint64_t v4 = (char *)&v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_1ACE75DC8();
  uint64_t v189 = *(void *)(v190 - 8);
  MEMORY[0x1F4188790](v190);
  uint64_t v187 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_1ACE75E48();
  uint64_t v186 = *(void *)(v188 - 8);
  MEMORY[0x1F4188790](v188);
  uint64_t v185 = (char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE753F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v199 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v205 = (char *)&v184 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v184 - v13;
  uint64_t v15 = (void *)sub_1ACE75438();
  id v16 = (void (**)(char *, uint64_t, id))*(v15 - 1);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76A580 != -1) {
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v19 = __swift_project_value_buffer((uint64_t)v15, (uint64_t)qword_1EB76A568);
    v16[2](v18, v19, v15);
    sub_1ACE75428();
    sub_1ACE753C8();
    uint64_t v20 = (id)v2;
    BOOL v215 = v14;
    uint64_t v21 = v20;
    unint64_t v2 = sub_1ACE75428();
    LODWORD(v214) = sub_1ACE76E18();
    char v22 = sub_1ACE76FA8();
    uint64_t v208 = v7;
    uint64_t v198 = v15;
    uint64_t v197 = v4;
    v195 = v16;
    char v201 = v18;
    if (v22)
    {
      char v204 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      unint64_t v203 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v23 = v205;
      v204(v205, v215, v7);
      uint64_t v24 = swift_slowAlloc();
      uint64_t v209 = v8;
      uint64_t v25 = (uint8_t *)v24;
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      v218[0].n128_u64[0] = (unint64_t)v15;
      id v16 = (void (**)(char *, uint64_t, id))(v25 + 4);
      uint64_t v26 = *(uint64_t *)((char *)&v21->isa + qword_1E99F5AB0);
      unint64_t v27 = *(unint64_t *)((char *)&v21[1].isa + qword_1E99F5AB0);
      swift_bridgeObjectRetain();
      aBlock[0] = sub_1ACA3189C(v26, v27, (uint64_t *)v218);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      os_signpost_id_t v28 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, (os_log_t)v2, (os_signpost_type_t)v214, v28, "FRP.RegenerateResults", "Identifier: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v15, -1, -1);
      uint64_t v29 = v25;
      uint64_t v8 = v209;
      uint64_t v7 = v208;
      MEMORY[0x1AD11B340](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
      unint64_t v30 = v203;
      id v31 = v204;
    }
    else
    {

      id v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      unint64_t v30 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v23 = v205;
    }
    id v18 = (char *)v21;
    id v32 = v215;
    char v204 = v31;
    unint64_t v203 = v30;
    v31(v23, v215, v7);
    sub_1ACE75478();
    swift_allocObject();
    uint64_t v207 = sub_1ACE75468();
    id v33 = *(char **)(v8 + 8);
    v8 += 8;
    uint64_t v4 = v33;
    ((void (*)(char *, uint64_t))v33)(v32, v7);
    id v34 = objc_msgSend(*(id *)&v18[qword_1E99F5AE8], sel_sections);
    uint64_t v209 = v8;
    uint64_t v196 = v33;
    if (!v34)
    {
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v40 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v40) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    id v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768F38);
    unint64_t v2 = sub_1ACE76578();

    if (!(v2 >> 62))
    {
      uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8) {
        break;
      }
      goto LABEL_26;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v8) {
      break;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v40 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v40) {
      goto LABEL_27;
    }
LABEL_19:
    uint64_t v7 = 0;
    id v41 = (uint64_t *)(v14 + 32);
    while (1)
    {
      uint64_t v42 = *v41++;
      BOOL v43 = __OFADD__(v7, v42);
      v7 += v42;
      if (v43) {
        break;
      }
      if (!--v40) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  v218[0].n128_u64[0] = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1ACC830F8(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0)
  {
    __break(1u);
    return result;
  }
  BOOL v215 = v18;
  uint64_t v4 = 0;
  uint64_t v14 = (char *)v218[0].n128_u64[0];
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      Class v37 = (Class)MEMORY[0x1AD119490](v4, v2);
    }
    else
    {
      Class v37 = *(Class *)(v2 + 8 * (void)v4 + 32);
      swift_unknownObjectRetain();
    }
    uint64_t v15 = [(objc_class *)v37 numberOfObjects];
    swift_unknownObjectRelease();
    v218[0].n128_u64[0] = (unint64_t)v14;
    unint64_t v39 = *((void *)v14 + 2);
    unint64_t v38 = *((void *)v14 + 3);
    id v16 = (void (**)(char *, uint64_t, id))(v39 + 1);
    if (v39 >= v38 >> 1)
    {
      sub_1ACC830F8(v38 > 1, v39 + 1, 1);
      uint64_t v14 = (char *)v218[0].n128_u64[0];
    }
    ++v4;
    *((void *)v14 + 2) = v16;
    *(void *)&v14[8 * v39 + 32] = v15;
  }
  while ((char *)v8 != v4);
  swift_bridgeObjectRelease();
  id v18 = v215;
  uint64_t v40 = *((void *)v14 + 2);
  if (v40) {
    goto LABEL_19;
  }
LABEL_27:
  uint64_t v7 = 0;
LABEL_28:
  id v44 = (__n128 **)&v18[qword_1E99F5AF0];
  swift_beginAccess();
  uint64_t v45 = *v44 + 1;
  unint64_t v46 = (os_unfair_lock_s *)&(*v44)[2].n128_i8[8];
  swift_retain();
  os_unfair_lock_lock(v46);
  long long v47 = 0;
  sub_1ACDA0AB4(v45, v218);
  os_unfair_lock_unlock(v46);
  uint64_t v48 = v218[0].n128_u64[1];
  swift_release();
  if (v7 >= (uint64_t)v48) {
    uint64_t v49 = (uint64_t)v48;
  }
  else {
    uint64_t v49 = v7;
  }
  uint64_t v206 = v7;
  uint64_t v194 = (os_unfair_lock_s **)v44;
  if (v49 <= 10000)
  {
    if (v49 < 0)
    {
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    if (qword_1EB768C20 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1ACE754C8();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EB768C00);
    id v16 = v18;
    uint64_t v48 = sub_1ACE75498();
    os_log_type_t v51 = sub_1ACE76BE8();
    if (os_log_type_enabled(v48, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      id v214 = (id)swift_slowAlloc();
      v218[0].n128_u64[0] = (unint64_t)v214;
      *(_DWORD *)uint64_t v52 = 136315394;
      BOOL v215 = 0;
      uint64_t v54 = *(uint64_t *)((char *)v16 + qword_1E99F5AB0);
      unint64_t v53 = *(unint64_t *)((char *)v16 + qword_1E99F5AB0 + 8);
      swift_bridgeObjectRetain();
      aBlock[0] = sub_1ACA3189C(v54, v53, (uint64_t *)v218);
      sub_1ACE76FF8();

      long long v47 = v215;
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2048;
      aBlock[0] = v49;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v48, v51, "FRC \"%s\" has requested %ld items. Loading this many items may cause performance issues for the entire app.", (uint8_t *)v52, 0x16u);
      id v55 = v214;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v55, -1, -1);
      MEMORY[0x1AD11B340](v52, -1, -1);

      goto LABEL_39;
    }
LABEL_38:
  }
LABEL_39:
  sub_1ACDA0AC8(0, v49, (uint64_t)v14);
  uint64_t v57 = v56;
  swift_bridgeObjectRelease();
  id v58 = v18;
  unint64_t v59 = sub_1ACDA1218(v57, (uint64_t)v58);
  swift_bridgeObjectRelease();

  uint64_t v60 = v58;
  unint64_t v61 = (char *)sub_1ACDA1014(v59, (uint64_t)v60, v210);
  uint64_t v193 = v47;
  swift_bridgeObjectRelease();

  BOOL v215 = v61;
  uint64_t v62 = *((void *)v61 + 2);
  char v212 = v60;
  if (v62)
  {
    uint64_t v63 = (id *)(v215 + 48);
    uint64_t v64 = *((void *)v215 + 5);
    id v214 = *((id *)v215 + 6);
    swift_bridgeObjectRetain();
    long long v65 = (void *)MEMORY[0x1E4FBC860];
    long long v66 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      char v67 = *((unsigned char *)v63 - 16);
      uint64_t v68 = (uint64_t)*(v63 - 1);
      id v69 = *v63;
      if (v68 != v64)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v65 = sub_1ACA42870(0, v65[2] + 1, 1, v65);
        }
        unint64_t v71 = v65[2];
        unint64_t v70 = v65[3];
        if (v71 >= v70 >> 1) {
          long long v65 = sub_1ACA42870((void *)(v70 > 1), v71 + 1, 1, v65);
        }
        v65[2] = v71 + 1;
        uint64_t v72 = &v65[2 * v71];
        v72[4] = v64;
        v72[5] = v66;
        uint64_t v64 = v68;
        long long v66 = (void *)MEMORY[0x1E4FBC860];
      }
      id v73 = v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v66 = sub_1ACA42748(0, v66[2] + 1, 1, v66);
      }
      unint64_t v75 = v66[2];
      unint64_t v74 = v66[3];
      if (v75 >= v74 >> 1) {
        long long v66 = sub_1ACA42748((void *)(v74 > 1), v75 + 1, 1, v66);
      }
      v66[2] = v75 + 1;
      int v76 = &v66[3 * v75];
      *((unsigned char *)v76 + 32) = v67;
      v76[5] = v68;
      v76[6] = v73;

      v63 += 3;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_139:
    }
      long long v65 = sub_1ACA42870(0, v65[2] + 1, 1, v65);
    uint64_t v77 = v214;
    unint64_t v79 = v65[2];
    unint64_t v78 = v65[3];
    if (v79 >= v78 >> 1) {
      long long v65 = sub_1ACA42870((void *)(v78 > 1), v79 + 1, 1, v65);
    }
    v65[2] = v79 + 1;
    unint64_t v80 = &v65[2 * v79];
    v80[4] = v64;
    v80[5] = v66;
    uint64_t v81 = sub_1ACA4DF84((uint64_t)v65);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    unint64_t v82 = MEMORY[0x1E4FBC860];
    uint64_t v60 = v212;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v81 = MEMORY[0x1E4FBC860];
    unint64_t v82 = MEMORY[0x1E4FBC860];
  }
  int64_t v83 = *(void *)(v81 + 16);
  long long v65 = (void *)v210;
  if (v83)
  {
    v218[0].n128_u64[0] = v82;
    sub_1ACC83098(0, v83, 0);
    uint64_t v84 = 0;
    unint64_t v85 = v218[0].n128_u64[0];
    uint64_t v211 = v81;
    BOOL v215 = (char *)(v81 + 32);
    uint64_t v213 = v83;
    do
    {
      char v86 = &v215[16 * v84];
      uint64_t v87 = *(void *)v86;
      uint64_t v88 = *((void *)v86 + 1);
      uint64_t v89 = *(void *)(v88 + 16);
      if (v89)
      {
        aBlock[0] = v82;
        swift_bridgeObjectRetain();
        sub_1ACE773D8();
        uint64_t v90 = 48;
        do
        {
          id v91 = *(id *)(v88 + v90);
          sub_1ACE773A8();
          sub_1ACE773E8();
          sub_1ACE773F8();
          sub_1ACE773B8();
          v90 += 24;
          --v89;
        }
        while (v89);
        unint64_t v92 = aBlock[0];
        swift_bridgeObjectRelease();
        int64_t v83 = v213;
      }
      else
      {
        unint64_t v92 = v82;
      }
      v218[0].n128_u64[0] = v85;
      unint64_t v94 = *(void *)(v85 + 16);
      unint64_t v93 = *(void *)(v85 + 24);
      if (v94 >= v93 >> 1)
      {
        sub_1ACC83098(v93 > 1, v94 + 1, 1);
        unint64_t v85 = v218[0].n128_u64[0];
      }
      ++v84;
      *(void *)(v85 + 16) = v94 + 1;
      unint64_t v95 = v85 + 16 * v94;
      *(void *)(v95 + 32) = v87;
      *(void *)(v95 + 40) = v92;
    }
    while (v84 != v83);
    unint64_t v202 = v85;
    v218[0].n128_u64[0] = v82;
    sub_1ACC83048(0, v83, 0);
    uint64_t v96 = 0;
    unint64_t v97 = v218[0].n128_u64[0];
    do
    {
      char v98 = &v215[16 * v96];
      uint64_t v99 = *(void *)v98;
      uint64_t v100 = *((void *)v98 + 1);
      int64_t v101 = *(void *)(v100 + 16);
      if (v101)
      {
        id v214 = (id)v97;
        aBlock[0] = v82;
        swift_bridgeObjectRetain();
        sub_1ACC83078(0, v101, 0);
        unint64_t v102 = aBlock[0];
        unint64_t v103 = *(void *)(aBlock[0] + 16);
        uint64_t v104 = 32;
        do
        {
          char v105 = *(unsigned char *)(v100 + v104);
          aBlock[0] = v102;
          unint64_t v106 = *(void *)(v102 + 24);
          if (v103 >= v106 >> 1)
          {
            sub_1ACC83078(v106 > 1, v103 + 1, 1);
            unint64_t v102 = aBlock[0];
          }
          *(void *)(v102 + 16) = v103 + 1;
          *(unsigned char *)(v102 + v103 + 32) = v105;
          v104 += 24;
          ++v103;
          --v101;
        }
        while (v101);
        swift_bridgeObjectRelease();
        unint64_t v97 = (unint64_t)v214;
        int64_t v83 = v213;
      }
      else
      {
        unint64_t v102 = v82;
      }
      v218[0].n128_u64[0] = v97;
      unint64_t v108 = *(void *)(v97 + 16);
      unint64_t v107 = *(void *)(v97 + 24);
      if (v108 >= v107 >> 1)
      {
        sub_1ACC83048(v107 > 1, v108 + 1, 1);
        unint64_t v97 = v218[0].n128_u64[0];
      }
      ++v96;
      *(void *)(v97 + 16) = v108 + 1;
      unint64_t v109 = v97 + 16 * v108;
      *(void *)(v109 + 32) = v99;
      *(void *)(v109 + 40) = v102;
      unint64_t v82 = MEMORY[0x1E4FBC860];
    }
    while (v96 != v83);
    swift_bridgeObjectRelease();
    long long v65 = (void *)v210;
    uint64_t v60 = v212;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v97 = MEMORY[0x1E4FBC860];
    unint64_t v202 = MEMORY[0x1E4FBC860];
  }
  uint64_t v110 = (uint64_t *)&v60[qword_1EB7688E0];
  swift_beginAccess();
  uint64_t v111 = swift_bridgeObjectRetain();
  sub_1ACDF5354(v111);
  long long v66 = v112;
  uint64_t v64 = v65[1];
  uint64_t v113 = swift_bridgeObjectRetain();
  uint64_t v114 = sub_1ACD93614(v113, (uint64_t)v66);
  swift_bridgeObjectRelease();
  if ((v114 & 0xC000000000000001) != 0)
  {
    v65[5] = sub_1ACE77178();
    long long v66 = (void *)sub_1ACE77138();
    uint64_t v64 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
    sub_1ACDA153C((unint64_t *)&unk_1EB768EE0);
    sub_1ACE76A28();
    uint64_t v114 = aBlock[14];
    BOOL v215 = (char *)aBlock[15];
    uint64_t v115 = aBlock[16];
    uint64_t v116 = aBlock[17];
    unint64_t v117 = aBlock[18];
  }
  else
  {
    uint64_t v116 = 0;
    v65[5] = *(void *)(v114 + 16);
    uint64_t v118 = -1 << *(unsigned char *)(v114 + 32);
    uint64_t v119 = *(void *)(v114 + 56);
    BOOL v215 = (char *)(v114 + 56);
    uint64_t v120 = ~v118;
    uint64_t v121 = -v118;
    if (v121 < 64) {
      uint64_t v122 = ~(-1 << v121);
    }
    else {
      uint64_t v122 = -1;
    }
    unint64_t v117 = v122 & v119;
    uint64_t v115 = v120;
  }
  uint64_t v213 = v114 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v192 = v115;
  id v214 = (id)((unint64_t)(v115 + 64) >> 6);
  uint64_t v211 = MEMORY[0x1E4FBC838] + 8;
  while (2)
  {
    if (v114 < 0)
    {
      uint64_t v125 = sub_1ACE771A8();
      if (!v125) {
        goto LABEL_117;
      }
      aBlock[0] = v125;
      sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v126 = (id)v218[0].n128_u64[0];
      swift_unknownObjectRelease();
      uint64_t v124 = v116;
      long long v66 = (void *)v117;
      if (!v126) {
        goto LABEL_117;
      }
      goto LABEL_110;
    }
    if (v117)
    {
      long long v66 = (void *)((v117 - 1) & v117);
      unint64_t v123 = __clz(__rbit64(v117)) | (v116 << 6);
      uint64_t v124 = v116;
LABEL_109:
      id v126 = *(id *)(*(void *)(v114 + 48) + 8 * v123);
      if (!v126) {
        goto LABEL_117;
      }
LABEL_110:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v130 = sub_1ACA66108((uint64_t)v126);
      char v132 = v131;
      swift_bridgeObjectRelease();
      if (v132)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v134 = *v110;
        aBlock[0] = *v110;
        *uint64_t v110 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1ACD069D4();
          uint64_t v134 = aBlock[0];
        }

        sub_1ACB1BA20(v130, v134);
        *uint64_t v110 = v134;
        swift_bridgeObjectRelease();
      }
      long long v65 = (void *)v114;
      swift_endAccess();
      id v135 = (uint64_t *)&v212[qword_1EB768908];
      swift_beginAccess();
      uint64_t v64 = *v135;
      swift_bridgeObjectRetain();
      unint64_t v136 = sub_1ACA66108((uint64_t)v126);
      char v138 = v137;
      swift_bridgeObjectRelease();
      if (v138)
      {
        int v139 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v64 = *v135;
        aBlock[0] = *v135;
        *id v135 = 0x8000000000000000;
        if (!v139)
        {
          sub_1ACD0681C();
          uint64_t v64 = aBlock[0];
        }

        sub_1ACB1B864(v136, v64);
        *id v135 = v64;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();

      uint64_t v116 = v124;
      unint64_t v117 = (unint64_t)v66;
      uint64_t v114 = (uint64_t)v65;
      continue;
    }
    break;
  }
  uint64_t v127 = v116 + 1;
  if (__OFADD__(v116, 1))
  {
    __break(1u);
    goto LABEL_139;
  }
  if (v127 >= (uint64_t)v214) {
    goto LABEL_117;
  }
  unint64_t v128 = *(void *)&v215[8 * v127];
  uint64_t v124 = v116 + 1;
  if (v128) {
    goto LABEL_108;
  }
  uint64_t v124 = v116 + 2;
  if (v116 + 2 >= (uint64_t)v214) {
    goto LABEL_117;
  }
  unint64_t v128 = *(void *)&v215[8 * v124];
  if (v128) {
    goto LABEL_108;
  }
  uint64_t v124 = v116 + 3;
  if (v116 + 3 >= (uint64_t)v214) {
    goto LABEL_117;
  }
  unint64_t v128 = *(void *)&v215[8 * v124];
  if (v128) {
    goto LABEL_108;
  }
  uint64_t v124 = v116 + 4;
  if (v116 + 4 >= (uint64_t)v214) {
    goto LABEL_117;
  }
  unint64_t v128 = *(void *)&v215[8 * v124];
  if (v128)
  {
LABEL_108:
    long long v66 = (void *)((v128 - 1) & v128);
    unint64_t v123 = __clz(__rbit64(v128)) + (v124 << 6);
    goto LABEL_109;
  }
  char v129 = (void *)(v116 + 5);
  while (v214 != v129)
  {
    unint64_t v128 = *(void *)&v215[8 * (void)v129];
    char v129 = (char *)v129 + 1;
    if (v128)
    {
      uint64_t v124 = (uint64_t)v129 - 1;
      goto LABEL_108;
    }
  }
LABEL_117:
  sub_1ACA50A70();
  uint64_t v140 = v210;
  uint64_t v141 = v212;
  if ((*(unsigned char *)(v210 + 56) & 1) == 0)
  {
    uint64_t v142 = *(void *)&v212[qword_1EB7688E8];
    if (!v142
      || (uint64_t v143 = v202,
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          char v144 = sub_1ACA886A8(v143, v142),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v144 & 1) == 0))
    {
      *(unsigned char *)(v140 + 56) = 1;
    }
  }
  uint64_t v145 = *(void *)(v140 + 8);
  if ((v145 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v146 = sub_1ACE77178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v146 = *(void *)(v145 + 16);
  }
  uint64_t v147 = qword_1EB7688D0;
  if (v146 < v206 != v141[qword_1EB7688D0]) {
    *(unsigned char *)(v140 + 56) = 1;
  }
  BOOL v215 = (char *)v146;
  id v214 = (id)v97;
  uint64_t v148 = v206;
  *(void *)(v140 + 48) = v206;
  uint64_t v149 = qword_1EB7688F8;
  uint64_t v150 = v148;
  if (v148 != *(void *)&v141[qword_1EB7688F8]) {
    *(unsigned char *)(v140 + 56) = 1;
  }
  __n128 v151 = *(__n128 *)(v140 + 16);
  v218[0] = *(__n128 *)v140;
  v218[1] = v151;
  *(_OWORD *)char v219 = *(_OWORD *)(v140 + 32);
  *(_OWORD *)&v219[9] = *(_OWORD *)(v140 + 41);
  uint64_t v152 = v141;
  uint64_t v153 = *(void *)&v141[qword_1E99F5AB0];
  unint64_t v154 = *(void *)&v141[qword_1E99F5AB0 + 8];
  sub_1ACDA23F4((uint64_t)v218);
  sub_1ACD95444(v153, v154);
  uint64_t v155 = sub_1ACDA23C0((uint64_t)v218);
  uint64_t v156 = *v194;
  MEMORY[0x1F4188790](v155);
  *(&v184 - 2) = v140;
  *(&v184 - 1) = v150;
  MEMORY[0x1F4188790](v157);
  *(&v184 - 2) = (uint64_t)sub_1ACDA242C;
  *(&v184 - 1) = v158;
  swift_retain();
  os_unfair_lock_lock(v156 + 10);
  sub_1ACDA2434((uint64_t)&v156[4]);
  os_unfair_lock_unlock(v156 + 10);
  swift_release();
  if (*(unsigned char *)(v140 + 56) == 1)
  {
    BOOL v159 = (uint64_t)v215 < v150;
    *(void *)&v152[qword_1EB7688E8] = v202;
    swift_bridgeObjectRelease();
    v152[v147] = v159;
    *(void *)&v152[v149] = v150;
    uint64_t v160 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v161 = swift_allocObject();
    id v162 = v214;
    *(void *)(v161 + 16) = v160;
    *(void *)(v161 + 24) = v162;
    *(unsigned char *)(v161 + 32) = v159;
    *(void *)(v161 + 40) = v150;
    aBlock[4] = sub_1ACDA246C;
    void aBlock[5] = v161;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ACA6DA9C;
    aBlock[3] = &block_descriptor_66_1;
    uint64_t v163 = _Block_copy(aBlock);
    swift_retain();
    id v164 = v185;
    sub_1ACE75E08();
    uint64_t v216 = MEMORY[0x1E4FBC860];
    sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    uint64_t v165 = v187;
    uint64_t v166 = v190;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v164, v165, v163);
    _Block_release(v163);
    (*(void (**)(char *, uint64_t))(v189 + 8))(v165, v166);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v164, v188);
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v167 = v208;
  uint64_t v168 = v200;
  uint64_t v169 = v199;
  unsigned int v170 = v198;
  uint64_t v171 = v197;
  os_signpost_id_t v172 = v201;
  uint64_t v173 = sub_1ACE75428();
  sub_1ACE75458();
  os_signpost_type_t v174 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v175 = v191;
    if ((*(unsigned int (**)(char *, uint64_t))(v168 + 88))(v171, v191) == *MEMORY[0x1E4FBD340])
    {
      int64_t v176 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v168 + 8))(v171, v175);
      int64_t v176 = "";
    }
    unint64_t v177 = v195;
    uint64_t v178 = v205;
    v204(v205, v169, v167);
    uint64_t v179 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v179 = 0;
    os_signpost_id_t v180 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v173, v174, v180, "FRP", v176, v179, 2u);
    unint64_t v181 = v179;
    uint64_t v182 = v208;
    MEMORY[0x1AD11B340](v181, -1, -1);

    uint64_t v183 = v196;
    ((void (*)(char *, uint64_t))v196)(v169, v182);
    ((void (*)(char *, uint64_t))v183)(v178, v182);
  }
  else
  {

    unint64_t v177 = v195;
    ((void (*)(char *, uint64_t))v196)(v169, v167);
  }
  swift_release();
  return ((uint64_t (*)(char *, void *))v177[1])(v172, v170);
}

uint64_t sub_1ACD996E4(long long *a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v175 = a1;
  uint64_t v181 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v3 = v181;
  uint64_t v153 = sub_1ACE75448();
  uint64_t v4 = *(void *)(v153 - 8);
  MEMORY[0x1F4188790](v153);
  id v162 = (char *)v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1ACE75DC8();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  uint64_t v149 = (char *)v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1ACE75E48();
  uint64_t v148 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v147 = (char *)v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = *(void *)(v3 + 88);
  uint64_t v186 = sub_1ACE76FD8();
  uint64_t v185 = sub_1ACE76FD8();
  os_signpost_id_t v180 = *(void (***)(char *, uint64_t))(v185 - 8);
  MEMORY[0x1F4188790](v185);
  uint64_t v184 = (char *)v146 - v8;
  unint64_t v9 = *(void *)(v3 + 80);
  uint64_t v187 = sub_1ACE76FD8();
  uint64_t v183 = sub_1ACE76FD8();
  int64_t v179 = *(void *)(v183 - 8);
  MEMORY[0x1F4188790](v183);
  uint64_t v182 = (char *)v146 - v10;
  unint64_t v11 = sub_1ACE753F8();
  uint64_t v12 = *(char ***)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = ((char *)v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  os_signpost_type_t v174 = (char *)v146 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t)v146 - v18;
  uint64_t v20 = sub_1ACE75438();
  Class isa = v20[-1].isa;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76A580 != -1) {
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v24 = __swift_project_value_buffer((uint64_t)v20, (uint64_t)qword_1EB76A568);
    Class v158 = isa;
    uint64_t v25 = (void (*)(char *, uint64_t, NSObject *))*((void *)isa + 2);
    BOOL v159 = v20;
    v25(v23, v24, v20);
    sub_1ACE75428();
    sub_1ACE753C8();
    uint64_t v26 = (id)v2;
    unint64_t v27 = sub_1ACE75428();
    LODWORD(v189) = sub_1ACE76E18();
    char v28 = sub_1ACE76FA8();
    unint64_t v166 = v11;
    unint64_t v172 = v9;
    uint64_t v163 = v4;
    uint64_t v160 = v14;
    uint64_t v171 = v23;
    if (v28)
    {
      uint64_t v168 = v12[2];
      unint64_t v167 = (unint64_t)(v12 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v14 = v26;
      uint64_t v29 = v174;
      uint64_t v178 = (void *)v19;
      ((void (*)(char *))v168)(v174);
      uint64_t v4 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      *(void *)&long long v203 = v30;
      uint64_t v23 = (char *)(v4 + 4);
      id v31 = v12;
      uint64_t v32 = *(uint64_t *)((char *)&v14->isa + qword_1E99F5AB0);
      unint64_t v9 = *(unint64_t *)((char *)&v14[1].isa + qword_1E99F5AB0);
      swift_bridgeObjectRetain();
      uint64_t v33 = v32;
      uint64_t v12 = v31;
      unint64_t v11 = v166;
      uint64_t aBlock = sub_1ACA3189C(v33, v9, (uint64_t *)&v203);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      os_signpost_id_t v34 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v27, (os_signpost_type_t)v189, v34, "FRP.RegenerateResults", "Identifier: %s", (uint8_t *)v4, 0xCu);
      swift_arrayDestroy();
      uint64_t v35 = v30;
      uint64_t v19 = (uint64_t)v178;
      MEMORY[0x1AD11B340](v35, -1, -1);
      MEMORY[0x1AD11B340](v4, -1, -1);

      ((void (*)(char *, unint64_t))v12[1])(v29, v11);
      unint64_t v36 = v167;
      Class v37 = v168;
    }
    else
    {

      Class v37 = v12[2];
      unint64_t v36 = (unint64_t)(v12 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v14 = v26;
      uint64_t v29 = v174;
    }
    uint64_t v168 = v37;
    unint64_t v167 = v36;
    ((void (*)(char *, uint64_t, unint64_t))v37)(v29, v19, v11);
    sub_1ACE75478();
    swift_allocObject();
    uint64_t v170 = sub_1ACE75468();
    unint64_t v38 = v12[1];
    ++v12;
    uint64_t v157 = v38;
    ((void (*)(uint64_t, unint64_t))v38)(v19, v11);
    id v39 = objc_msgSend(*(id *)((char *)&v14->isa + qword_1E99F5AE8), sel_sections);
    Class isa = (Class)MEMORY[0x1E4FBC860];
    uint64_t v20 = v14;
    uint64_t v188 = v14;
    uint64_t v161 = v12;
    if (!v39)
    {
      uint64_t v19 = MEMORY[0x1E4FBC860];
      uint64_t v45 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v45) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    uint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB768F38);
    unint64_t v41 = sub_1ACE76578();

    if (!(v41 >> 62))
    {
      uint64_t v4 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4) {
        break;
      }
      goto LABEL_26;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    swift_bridgeObjectRelease();
    if (v4) {
      break;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v45 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v45) {
      goto LABEL_27;
    }
LABEL_19:
    uint64_t v2 = 0;
    unint64_t v46 = (uint64_t *)(v19 + 32);
    while (1)
    {
      uint64_t v47 = *v46++;
      BOOL v48 = __OFADD__(v2, v47);
      v2 += v47;
      if (v48) {
        break;
      }
      if (!--v45) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  *(void *)&long long v203 = isa;
  uint64_t result = sub_1ACC830F8(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
    return result;
  }
  Class isa = 0;
  uint64_t v19 = v203;
  unint64_t v11 = v41 & 0xC000000000000001;
  uint64_t v12 = &selRef_generateAndRestorePersonaContextWithPersonaUniqueString_;
  do
  {
    if (v11)
    {
      BOOL v43 = (void *)MEMORY[0x1AD119490](isa, v41);
    }
    else
    {
      BOOL v43 = *(void **)(v41 + 8 * (void)isa + 32);
      swift_unknownObjectRetain();
    }
    uint64_t v14 = objc_msgSend(v43, sel_numberOfObjects);
    swift_unknownObjectRelease();
    *(void *)&long long v203 = v19;
    unint64_t v9 = *(void *)(v19 + 16);
    unint64_t v44 = *(void *)(v19 + 24);
    uint64_t v23 = (char *)(v9 + 1);
    if (v9 >= v44 >> 1)
    {
      sub_1ACC830F8(v44 > 1, v9 + 1, 1);
      uint64_t v19 = v203;
    }
    Class isa = (Class)((char *)isa + 1);
    *(void *)(v19 + 16) = v23;
    *(void *)(v19 + 8 * v9 + 32) = v14;
  }
  while ((Class)v4 != isa);
  swift_bridgeObjectRelease();
  uint64_t v20 = v188;
  uint64_t v45 = *(void *)(v19 + 16);
  if (v45) {
    goto LABEL_19;
  }
LABEL_27:
  uint64_t v2 = 0;
LABEL_28:
  sub_1ACD95838();
  uint64_t v169 = v2;
  if (v2 >= v49) {
    uint64_t v2 = v49;
  }
  if (v2 <= 10000)
  {
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_38;
    }
    __break(1u);
    goto LABEL_36;
  }
  if (qword_1EB768C20 != -1) {
    goto LABEL_87;
  }
  while (1)
  {
    uint64_t v50 = sub_1ACE754C8();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EB768C00);
    uint64_t v14 = v20;
    uint64_t v20 = sub_1ACE75498();
    os_log_type_t v51 = sub_1ACE76BE8();
    if (os_log_type_enabled(v20, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(void *)&long long v203 = v53;
      *(_DWORD *)uint64_t v52 = 136315394;
      uint64_t v55 = *(uint64_t *)((char *)&v14->isa + qword_1E99F5AB0);
      unint64_t v54 = *(unint64_t *)((char *)&v14[1].isa + qword_1E99F5AB0);
      swift_bridgeObjectRetain();
      uint64_t aBlock = sub_1ACA3189C(v55, v54, (uint64_t *)&v203);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2048;
      uint64_t aBlock = v2;
      sub_1ACE76FF8();
      _os_log_impl(&dword_1AC9D5000, v20, v51, "FRC \"%s\" has requested %ld items. Loading this many items may cause performance issues for the entire app.", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v53, -1, -1);
      MEMORY[0x1AD11B340](v52, -1, -1);
    }
    else
    {
LABEL_36:
    }
    uint64_t v20 = v188;
LABEL_38:
    sub_1ACDA0AC8(0, v2, v19);
    uint64_t v57 = v56;
    uint64_t v58 = swift_bridgeObjectRelease();
    *(void *)&long long v203 = v57;
    MEMORY[0x1F4188790](v58);
    v146[-2] = v20;
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705B0);
    uint64_t v60 = *(void *)(v181 + 96);
    unint64_t v61 = v20;
    uint64_t v178 = (void *)MEMORY[0x1E4FBB368];
    uint64_t v62 = sub_1ACA51EA4(&qword_1EB7705B8, &qword_1EB7705B0);
    uint64_t v64 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACDA1760, (uint64_t)&v146[-4], v59, v60, MEMORY[0x1E4FBC248], v62, MEMORY[0x1E4FBC278], v63);
    uint64_t v65 = swift_bridgeObjectRelease();
    *(void *)&long long v203 = v64;
    MEMORY[0x1F4188790](v65);
    long long v66 = v175;
    v146[-2] = v61;
    v146[-1] = v66;
    sub_1ACE76688();
    uint64_t v67 = sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
    unint64_t v68 = v172;
    uint64_t v69 = v173;
    uint64_t v189 = v67;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    swift_getWitnessTable();
    uint64_t v71 = sub_1ACE763D8();
    uint64_t v72 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v72);
    v146[-4] = v68;
    v146[-3] = v69;
    uint64_t v73 = *(void *)(v181 + 104);
    v146[-2] = v60;
    v146[-1] = v73;
    uint64_t v74 = Array.groupBy<A>(keyForValue:)((void (*)(char *))sub_1ACDA179C, (uint64_t)&v146[-6], v71, TupleTypeMetadata3, v69, v73);
    uint64_t v181 = v74;
    uint64_t v75 = swift_bridgeObjectRelease();
    unint64_t v177 = v146;
    *(void *)&long long v203 = v74;
    MEMORY[0x1F4188790](v75);
    v146[-4] = v68;
    v146[-3] = v69;
    v146[-2] = v60;
    v146[-1] = v73;
    sub_1ACE76688();
    swift_getTupleTypeMetadata2();
    uint64_t v76 = sub_1ACE76688();
    uint64_t v77 = type metadata accessor for FRPSectionInfo();
    uint64_t WitnessTable = swift_getWitnessTable();
    v146[1] = v77;
    uint64_t v164 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACDA17A8, (uint64_t)&v146[-6], v76, v77, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v79);
    uint64_t v178 = v146;
    *(void *)&long long v203 = v181;
    MEMORY[0x1F4188790](v164);
    v146[-4] = v68;
    v146[-3] = v69;
    uint64_t v156 = v60;
    v146[-2] = v60;
    v146[-1] = v73;
    uint64_t v165 = v73;
    uint64_t v80 = type metadata accessor for FRPSectionInfo();
    uint64_t v81 = v175;
    uint64_t v83 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACDA17CC, (uint64_t)&v146[-6], v76, v80, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v82);
    swift_bridgeObjectRelease();
    uint64_t v84 = (uint64_t *)((char *)v188 + qword_1EB7688E0);
    swift_beginAccess();
    uint64_t v85 = *v84;
    uint64_t v86 = sub_1ACDA153C((unint64_t *)&unk_1EB768EE0);
    *(void *)&long long v203 = nullsub_1(v85);
    sub_1ACE76048();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v19 = sub_1ACE76A48();
    uint64_t v20 = *((void *)v81 + 1);
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_1ACE769A8();
    swift_bridgeObjectRelease();
    *((void *)v81 + 5) = sub_1ACE769F8();
    uint64_t v181 = v86;
    uint64_t v155 = v83;
    if ((v87 & 0xC000000000000001) != 0)
    {
      sub_1ACE77138();
      sub_1ACE76A28();
      uint64_t v87 = v198;
      uint64_t v176 = v199;
      uint64_t v88 = v200;
      uint64_t v89 = v201;
      uint64_t v2 = v202;
    }
    else
    {
      uint64_t v89 = 0;
      uint64_t v90 = -1 << *(unsigned char *)(v87 + 32);
      uint64_t v91 = *(void *)(v87 + 56);
      uint64_t v176 = v87 + 56;
      uint64_t v88 = ~v90;
      uint64_t v92 = -v90;
      uint64_t v93 = v92 < 64 ? ~(-1 << v92) : -1;
      uint64_t v2 = v93 & v91;
    }
    unint64_t v94 = v180;
    int64_t v95 = v179;
    uint64_t v178 = (void *)(v87 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v154 = v88;
    int64_t v179 = (unint64_t)(v88 + 64) >> 6;
    os_signpost_id_t v180 = (void (**)(char *, uint64_t))(v95 + 8);
    uint64_t v96 = v94 + 1;
    unint64_t v177 = (void *)(MEMORY[0x1E4FBC838] + 8);
    if (v87 < 0) {
      break;
    }
LABEL_45:
    if (v2)
    {
      uint64_t v97 = (v2 - 1) & v2;
      unint64_t v98 = __clz(__rbit64(v2)) | (v89 << 6);
      uint64_t v19 = v89;
      goto LABEL_62;
    }
    int64_t v101 = v89 + 1;
    if (!__OFADD__(v89, 1))
    {
      if (v101 >= v179) {
        goto LABEL_65;
      }
      unint64_t v102 = *(void *)(v176 + 8 * v101);
      uint64_t v19 = v89 + 1;
      if (!v102)
      {
        uint64_t v19 = v89 + 2;
        if (v89 + 2 >= v179) {
          goto LABEL_65;
        }
        unint64_t v102 = *(void *)(v176 + 8 * v19);
        if (!v102)
        {
          uint64_t v19 = v89 + 3;
          if (v89 + 3 >= v179) {
            goto LABEL_65;
          }
          unint64_t v102 = *(void *)(v176 + 8 * v19);
          if (!v102)
          {
            uint64_t v103 = v89 + 4;
            while (v179 != v103)
            {
              unint64_t v102 = *(void *)(v176 + 8 * v103++);
              if (v102)
              {
                uint64_t v19 = v103 - 1;
                goto LABEL_61;
              }
            }
            goto LABEL_65;
          }
        }
      }
LABEL_61:
      uint64_t v97 = (v102 - 1) & v102;
      unint64_t v98 = __clz(__rbit64(v102)) + (v19 << 6);
LABEL_62:
      id v100 = *(id *)(*(void *)(v87 + 48) + 8 * v98);
      if (v100) {
        goto LABEL_63;
      }
      goto LABEL_65;
    }
    __break(1u);
LABEL_87:
    swift_once();
  }
  while (1)
  {
    uint64_t v99 = sub_1ACE771A8();
    if (!v99) {
      break;
    }
    uint64_t aBlock = v99;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v100 = (id)v203;
    swift_unknownObjectRelease();
    uint64_t v19 = v89;
    uint64_t v97 = v2;
    if (!v100) {
      break;
    }
LABEL_63:
    uint64_t aBlock = (uint64_t)v100;
    uint64_t v104 = v188;
    swift_beginAccess();
    sub_1ACE76088();
    char v105 = v182;
    sub_1ACE76018();
    (*v180)(v105, v183);
    swift_endAccess();
    uint64_t aBlock = (uint64_t)v100;
    uint64_t v20 = ((char *)v104 + qword_1EB768908);
    swift_beginAccess();
    sub_1ACE76088();
    unint64_t v106 = v184;
    sub_1ACE76018();
    (*v96)(v106, v185);
    swift_endAccess();

    uint64_t v89 = v19;
    uint64_t v2 = v97;
    if ((v87 & 0x8000000000000000) == 0) {
      goto LABEL_45;
    }
  }
LABEL_65:
  sub_1ACA50A70();
  unint64_t v107 = v175;
  uint64_t v108 = v173;
  uint64_t v109 = v172;
  uint64_t v110 = v188;
  uint64_t v111 = (uint64_t (*)(uint64_t))v156;
  if ((*((unsigned char *)v175 + 56) & 1) == 0)
  {
    if (!*(Class *)((char *)&v188->isa + qword_1EB7688E8)
      || (uint64_t v190 = sub_1ACDA153C(&qword_1EB768EF0),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          swift_getWitnessTable(),
          char v112 = sub_1ACE76698(),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v112 & 1) == 0))
    {
      *(void *)&long long v203 = v109;
      *((void *)&v203 + 1) = v108;
      *(void *)&long long v204 = v111;
      *((void *)&v204 + 1) = v165;
      type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
      *((unsigned char *)v107 + 56) = 1;
    }
  }
  uint64_t v113 = *((void *)v107 + 1);
  if ((v113 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v114 = sub_1ACE77178();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v114 = *(void *)(v113 + 16);
  }
  uint64_t v115 = v169;
  uint64_t v189 = v114;
  int v116 = v114 < v169;
  unint64_t v117 = (void *)v165;
  if (v116 != *((unsigned __int8 *)&v110->isa + qword_1EB7688D0))
  {
    *(void *)&long long v203 = v109;
    *((void *)&v203 + 1) = v108;
    *(void *)&long long v204 = v111;
    *((void *)&v204 + 1) = v165;
    type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
    *((unsigned char *)v107 + 56) = 1;
  }
  *((void *)v107 + 6) = v115;
  if ((Class)v115 != *(Class *)((char *)&v110->isa + qword_1EB7688F8))
  {
    *(void *)&long long v203 = v109;
    *((void *)&v203 + 1) = v108;
    *(void *)&long long v204 = v111;
    *((void *)&v204 + 1) = v117;
    type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
    *((unsigned char *)v107 + 56) = 1;
  }
  long long v118 = v107[1];
  long long v203 = *v107;
  long long v204 = v118;
  *(_OWORD *)char v205 = v107[2];
  *(_OWORD *)&v205[9] = *(long long *)((char *)v107 + 41);
  uint64_t v119 = *(uint64_t *)((char *)&v110->isa + qword_1E99F5AB0);
  unint64_t v120 = *(unint64_t *)((char *)&v110[1].isa + qword_1E99F5AB0);
  sub_1ACDA23F4((uint64_t)&v203);
  uint64_t aBlock = v109;
  uint64_t v193 = v108;
  uint64_t v194 = v111;
  v195 = v117;
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
  sub_1ACD95444(v119, v120);
  sub_1ACDA23C0((uint64_t)&v203);
  uint64_t v121 = (uint64_t *)((char *)v110 + qword_1E99F5AF0);
  uint64_t v122 = swift_beginAccess();
  uint64_t v123 = *v121;
  MEMORY[0x1F4188790](v122);
  v146[-6] = v109;
  v146[-5] = v108;
  v146[-4] = v111;
  v146[-3] = v117;
  uint64_t v124 = v169;
  v146[-2] = v107;
  v146[-1] = v124;
  swift_retain();
  uint64_t aBlock = v109;
  uint64_t v193 = v108;
  uint64_t v194 = v111;
  v195 = v117;
  uint64_t v125 = type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging();
  Synchronized.modify(_:)((uint64_t)sub_1ACDA17F0, (uint64_t)&v146[-8], v123, v125);
  swift_release();
  if (*((unsigned char *)v107 + 56) == 1)
  {
    BOOL v126 = v189 < v124;
    *(Class *)((char *)&v110->isa + qword_1EB7688E8) = (Class)v164;
    swift_bridgeObjectRelease();
    *((unsigned char *)&v110->isa + qword_1EB7688D0) = v126;
    *(Class *)((char *)&v110->isa + qword_1EB7688F8) = (Class)v124;
    uint64_t v189 = *(uint64_t *)((char *)&v110->isa + qword_1E99F5AC8);
    uint64_t v127 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v128 = swift_allocObject();
    *(void *)(v128 + 16) = v109;
    *(void *)(v128 + 24) = v108;
    *(void *)(v128 + 32) = v111;
    *(void *)(v128 + 40) = v117;
    uint64_t v129 = v155;
    *(void *)(v128 + 48) = v127;
    *(void *)(v128 + 56) = v129;
    *(unsigned char *)(v128 + 64) = v126;
    *(void *)(v128 + 72) = v124;
    uint64_t v196 = sub_1ACDA1878;
    uint64_t v197 = v128;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v193 = 1107296256;
    uint64_t v194 = sub_1ACA6DA9C;
    v195 = &block_descriptor_40_1;
    unint64_t v130 = _Block_copy(&aBlock);
    swift_retain();
    char v131 = v147;
    sub_1ACE75E08();
    uint64_t v191 = MEMORY[0x1E4FBC860];
    sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
    sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
    char v132 = v149;
    uint64_t v133 = v152;
    sub_1ACE770E8();
    MEMORY[0x1AD118ED0](0, v131, v132, v130);
    _Block_release(v130);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v132, v133);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v131, v150);
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v134 = v163;
  id v135 = v162;
  unint64_t v136 = v166;
  char v137 = v174;
  char v138 = sub_1ACE75428();
  int v139 = v160;
  sub_1ACE75458();
  os_signpost_type_t v140 = sub_1ACE76E08();
  if (sub_1ACE76FA8())
  {
    swift_retain();
    sub_1ACE75488();
    swift_release();
    uint64_t v141 = v153;
    if ((*(unsigned int (**)(char *, uint64_t))(v134 + 88))(v135, v153) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v142 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v141);
      uint64_t v142 = "";
    }
    ((void (*)(char *, NSObject *, unint64_t))v168)(v137, v139, v136);
    uint64_t v143 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v143 = 0;
    os_signpost_id_t v144 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v138, v140, v144, "FRP", v142, v143, 2u);
    MEMORY[0x1AD11B340](v143, -1, -1);

    uint64_t v145 = v157;
    ((void (*)(NSObject *, unint64_t))v157)(v139, v136);
    ((void (*)(char *, unint64_t))v145)(v137, v136);
  }
  else
  {

    ((void (*)(NSObject *, unint64_t))v157)(v139, v136);
  }
  swift_release();
  return (*((uint64_t (**)(char *, NSObject *))v158 + 1))(v171, v159);
}

void sub_1ACD9B228(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1ACDA195C();
}

uint64_t sub_1ACD9B288(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t (*a6)(), void *a7)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C90);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v27[-v16];
  id v18 = a3;
  swift_unknownObjectRetain();
  id v19 = a1;
  id v20 = a5;
  id v21 = a7;
  sub_1ACE770C8();
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_1ACE75278();

    uint64_t v22 = sub_1ACE75288();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = sub_1ACE75288();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
  }
  if (v21)
  {
    sub_1ACE75278();

    uint64_t v24 = sub_1ACE75288();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = sub_1ACE75288();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
  }
  sub_1ACDA1A48((uint64_t)v27, (uint64_t)v17, a6);

  sub_1ACA50E78((uint64_t)v14, &qword_1EB766C90);
  sub_1ACA50E78((uint64_t)v17, &qword_1EB766C90);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

void sub_1ACD9B4DC(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    swift_beginAccess();
    sub_1ACD996E4(a2 + 1);
    swift_endAccess();
    swift_beginAccess();
    long long v8 = a2[2];
    v9[0] = a2[1];
    v9[1] = v8;
    v10[0] = a2[3];
    *(_OWORD *)((char *)v10 + 9) = *(long long *)((char *)a2 + 57);
    sub_1ACDA23F4((uint64_t)v9);
    sub_1ACDA15A0((uint64_t)"FetchedResultsPublisher FRC Update", 34, 2, a3, v9);
    sub_1ACDA23C0((uint64_t)v9);
  }
}

void sub_1ACD9B5EC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1ACDA1BAC();
}

void sub_1ACD9B64C()
{
}

id sub_1ACD9B6B8()
{
  long long v2 = *(_OWORD *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50);
  long long v3 = *(_OWORD *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  return objc_msgSendSuper2(&v4, sel_dealloc, v2, v3);
}

uint64_t sub_1ACD9B730(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ACB6BEB4(*(void *)(a1 + qword_1E99F5B08));
  sub_1ACA50E78(a1 + qword_1EB768910, &qword_1EB7726E8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1ACD9B878(uint64_t *result, uint64_t a2, unsigned char *a3)
{
  uint64_t v4 = *result;
  uint64_t v3 = result[1];
  uint64_t v5 = result[2];
  if (*result < v5)
  {
    BOOL v7 = __OFSUB__(v4, v3);
    BOOL v6 = v4 - v3 < 0;
  }
  else
  {
    BOOL v7 = 0;
    BOOL v6 = 0;
  }
  if (v6 != v7)
  {
    BOOL v9 = 0;
    BOOL v8 = 0;
  }
  else
  {
    BOOL v9 = __OFSUB__(v4, v5);
    BOOL v8 = v4 - v5 < 0;
  }
  if (v8 != v9)
  {
    uint64_t v10 = *(void *)(a2 + qword_1E99F5AB8);
    BOOL v7 = __OFADD__(v3, v10);
    uint64_t v11 = v3 + v10;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      if (v11 < v5) {
        uint64_t v5 = v11;
      }
      result[1] = v5;
      *a3 = 1;
    }
  }
  return result;
}

void sub_1ACD9B8C0(uint64_t a1)
{
  uint64_t v2 = sub_1ACE753F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1AD11B470](a1 + 16);
  if (v6)
  {
    BOOL v7 = (void *)v6;
    uint64_t v8 = sub_1ACD95838();
    if (v8 >= v10 || v8 >= v9)
    {
    }
    else
    {
      memset(v14, 0, 25);
      long long v13 = 0u;
      *(void *)&long long v12 = MEMORY[0x1E4FBC870];
      *((void *)&v12 + 1) = MEMORY[0x1E4FBC870];
      sub_1ACD97AF0();
      sub_1ACD996E4(&v12);
      v15[0] = v12;
      v15[1] = v13;
      v16[0] = v14[0];
      *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v14 + 9);
      sub_1ACDA15A0((uint64_t)"FetchedResultsPublisher Load Next Page", 38, 2, (uint64_t)v5, v15);
      sub_1ACDA23C0((uint64_t)v15);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

uint64_t sub_1ACD9BA80(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  char v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v27 = (char *)&v26 - v8;
  uint64_t v9 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v11 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  long long v13 = (char *)&v26 - v12;
  uint64_t v15 = (char *)&v26 + *(int *)(v14 + 56) - v12;
  uint64_t v16 = *(void *)(v9 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  v17((char *)&v26 - v12, a1, v9, v11);
  ((void (*)(char *, uint64_t, uint64_t))v17)(v15, v29, v9);
  id v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(v17) = v18(v13, 1, v4);
  int v19 = v18(v15, 1, v4);
  if (v17 == 1)
  {
    if (v19 == 1)
    {
      char v20 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v9);
      char v20 = 1;
    }
  }
  else if (v19 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    char v20 = 1;
  }
  else
  {
    id v21 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v22 = v27;
    v21(v27, v13, v4);
    uint64_t v23 = v28;
    v21(v28, v15, v4);
    char v20 = (*(uint64_t (**)(char *, char *))((char *)v2 + qword_1E99F5AD8))(v22, v23);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v23, v4);
    v24(v22, v4);
  }
  return v20 & 1;
}

uint64_t sub_1ACD9BD80@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v55 = a3;
  uint64_t v48 = *(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x58) - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v47 = (char *)&v45 - v7;
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)&v45 - v12;
  uint64_t v54 = v11;
  uint64_t v13 = sub_1ACE76FD8();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = (void (*)(void, void, void))v13;
  MEMORY[0x1F4188790](v13);
  unint64_t v46 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = sub_1ACE76FD8();
  uint64_t v49 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v22 = MEMORY[0x1F4188790](v21).n128_u64[0];
  uint64_t v24 = (char *)&v45 - v23;
  id v25 = objc_msgSend(a1, sel_objectID, v22);
  sub_1ACD31300(&v56, v25);
  uint64_t v26 = v50;

  unint64_t v27 = v4;
  uint64_t v28 = v49;
  uint64_t v29 = a2;
  uint64_t v30 = v9;
  sub_1ACD9C7B0((uint64_t)v24, (uint64_t)v17, v27, v25, v29, (uint64_t (*)(uint64_t, uint64_t, uint64_t))a1);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v20, v24, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v9) == 1)
  {
    (*(void (**)(char *, void (*)(void, void, void)))(v51 + 8))(v17, v52);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v18);
LABEL_5:
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v55, 1, 1, TupleTypeMetadata3);
  }
  id v31 = v25;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v32(v53, v20, v30);
  uint64_t v33 = v51;
  os_signpost_id_t v34 = v46;
  uint64_t v35 = v17;
  unint64_t v36 = v52;
  (*(void (**)(char *, char *, void))(v51 + 32))(v46, v35, v52);
  uint64_t v37 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v34, 1, v54) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v53, v30);

    (*(void (**)(char *, void (*)(void, void, void)))(v33 + 8))(v34, v36);
    goto LABEL_5;
  }
  uint64_t v52 = *(void (**)(void, void, void))(v48 + 32);
  v52(v47, v34, v37);
  sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  uint64_t v40 = v37;
  uint64_t v41 = swift_getTupleTypeMetadata3();
  uint64_t v42 = v55;
  BOOL v43 = &v55[*(int *)(v41 + 48)];
  uint64_t v44 = *(int *)(v41 + 64);
  v32(v55, v53, v30);
  v52(v43, v47, v40);
  *(void *)&v42[v44] = v31;
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v42, 0, 1, v41);
}

uint64_t sub_1ACD9C2F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void (*v34)(void *__return_ptr, uint64_t *);
  id v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v37;
  id v38;
  char v39;
  void (*v40)(void *__return_ptr, uint64_t *);
  char v41;
  id v42;
  char v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unsigned int v50;
  uint64_t v51;
  void v52[3];
  void v53[3];

  uint64_t v10 = (uint64_t *)(a2 + qword_1EB7688E0);
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *v10;
  if (!*(void *)(*v10 + 16)) {
    goto LABEL_12;
  }
  id v13 = a3;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1ACA66108((uint64_t)v13);
  if ((v15 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v50 = *(unsigned __int8 *)(*(void *)(v12 + 56) + v14);

  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(a2 + qword_1EB768908);
  uint64_t result = swift_beginAccess();
  uint64_t v17 = *v16;
  if (!*(void *)(*v16 + 16))
  {
LABEL_12:
    uint64_t v31 = *(void *)(a4 + 16);
    BOOL v27 = __OFADD__(v31, 1);
    uint64_t v32 = v31 + 1;
    if (!v27)
    {
      *(void *)(a4 + 16) = v32;
      (*(void (**)(void *__return_ptr, uint64_t))(a2 + qword_1E99F5AD0))(v53, a5);
      uint64_t v29 = LOBYTE(v53[0]);
      if (LOBYTE(v53[0]) == 2)
      {
        uint64_t v33 = 0;
      }
      else
      {
        os_signpost_id_t v34 = *(void (**)(void *__return_ptr, uint64_t *))(a2 + qword_1E99F5AE0);
        LOBYTE(v51) = v53[0] & 1;
        v34(v52, &v51);
        uint64_t v33 = v52[0];
      }
      swift_beginAccess();
      uint64_t v35 = a3;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v51 = *v10;
      uint64_t *v10 = 0x8000000000000000;
      sub_1ACD0CDAC(v29, v35, isUniquelyReferenced_nonNull_native);
      uint64_t *v10 = v51;

      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v37 = (uint64_t *)(a2 + qword_1EB768908);
      swift_beginAccess();
      unint64_t v38 = v35;
      id v39 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v51 = *v37;
      *uint64_t v37 = 0x8000000000000000;
      sub_1ACD0CC58(v33, v29 == 2, v38, v39);
      *uint64_t v37 = v51;

      swift_bridgeObjectRelease();
      swift_endAccess();
      *(void *)a1 = v33;
      *(unsigned char *)(a1 + 8) = v29 == 2;
      return v29;
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v49 = v16;
  id v18 = v13;
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1ACA66108((uint64_t)v18);
  if ((v20 & 1) == 0)
  {
LABEL_11:

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v21 = *(void *)(v17 + 56) + 16 * v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);

  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)a4;
  swift_bridgeObjectRetain();
  char v25 = sub_1ACCEA468(v18, v24);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    *(void *)a1 = v22;
    *(unsigned char *)(a1 + 8) = v23;
    return v50;
  }
  uint64_t v26 = *(void *)(a4 + 24);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27) {
    goto LABEL_32;
  }
  *(void *)(a4 + 24) = v28;
  uint64_t result = (uint64_t)(*(void *(**)(void *__return_ptr, uint64_t))(a2 + qword_1E99F5AD0))(v53, a5);
  uint64_t v29 = LOBYTE(v53[0]);
  if (LOBYTE(v53[0]) == 2)
  {
    if (v50 == 2)
    {
      uint64_t v30 = 0;
      uint64_t v22 = 0;
      if (v23) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v30 = 0;
    }
LABEL_27:
    *(unsigned char *)(a4 + 56) = 1;
    uint64_t v22 = v30;
LABEL_28:
    swift_beginAccess();
    uint64_t v42 = v18;
    BOOL v43 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *v10;
    uint64_t *v10 = 0x8000000000000000;
    sub_1ACD0CDAC(v29, v42, v43);
    uint64_t *v10 = v51;

    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    uint64_t v44 = v42;
    uint64_t v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *v49;
    *uint64_t v49 = 0x8000000000000000;
    sub_1ACD0CC58(v22, v29 == 2, v44, v45);
    *uint64_t v49 = v51;

    swift_bridgeObjectRelease();
    swift_endAccess();
    *(void *)a1 = v22;
    *(unsigned char *)(a1 + 8) = v29 == 2;
    return v29;
  }
  uint64_t v40 = *(void (**)(void *__return_ptr, uint64_t *))(a2 + qword_1E99F5AE0);
  LOBYTE(v51) = v53[0] & 1;
  v40(v52, &v51);
  uint64_t v30 = v52[0];
  if (v50 == 2) {
    goto LABEL_27;
  }
  uint64_t v48 = v52[0];
  LOBYTE(v52[0]) = v50 & 1;
  LOBYTE(v51) = v29 & 1;
  uint64_t result = (*(uint64_t (**)(void *, uint64_t *))(a2 + qword_1E99F5AD8))(v52, &v51);
  if (result)
  {
    uint64_t v30 = v48;
    goto LABEL_27;
  }
  uint64_t v30 = v48;
  if (v48 == v22) {
    uint64_t v41 = v23;
  }
  else {
    uint64_t v41 = 1;
  }
  if (v41) {
    goto LABEL_27;
  }
LABEL_29:
  unint64_t v46 = *(void *)(a4 + 32);
  BOOL v27 = __OFADD__(v46, 1);
  uint64_t v47 = v46 + 1;
  if (!v27)
  {
    *(void *)(a4 + 32) = v47;
    goto LABEL_28;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1ACD9C7B0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  char v132 = a6;
  uint64_t v141 = a5;
  uint64_t v137 = a2;
  uint64_t v138 = a1;
  uint64_t v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*MEMORY[0x1E4FBC8C8] & *a3);
  uint64_t v8 = v133;
  uint64_t v121 = *(void *)(*((void *)v133 + 11) - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v117 = (char *)&v113 - v9;
  uint64_t v140 = v10;
  uint64_t v11 = sub_1ACE76FD8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v119 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  unint64_t v120 = (char *)&v113 - v12;
  uint64_t v125 = sub_1ACE76FD8();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  char v131 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  int v139 = (char *)&v113 - v15;
  uint64_t v142 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v16);
  long long v118 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v123 = (uint64_t)&v113 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v127 = (char *)&v113 - v21;
  id v135 = (uint64_t (*)(void, void, void))*((void *)v8 + 10);
  uint64_t v22 = sub_1ACE76FD8();
  uint64_t v129 = sub_1ACE76FD8();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  unint64_t v130 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v113 - v25;
  uint64_t v27 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v143 = (char *)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  BOOL v126 = (char *)&v113 - v31;
  MEMORY[0x1F4188790](v32);
  os_signpost_id_t v34 = (char *)&v113 - v33;
  uint64_t v35 = (void *)((char *)a3 + qword_1EB7688E0);
  swift_beginAccess();
  uint64_t v36 = *v35;
  id v144 = a4;
  uint64_t v37 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768ED8);
  uint64_t v38 = sub_1ACDA153C((unint64_t *)&unk_1EB768EE0);
  swift_bridgeObjectRetain();
  id v39 = a4;
  MEMORY[0x1AD118260](&v144, v36, v37, v22, v38);

  swift_bridgeObjectRelease();
  int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v22);
  uint64_t v134 = v37;
  unint64_t v136 = a3;
  if (v40 == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v26, v129);
    uint64_t v129 = v11;
    uint64_t v42 = a3;
    BOOL v43 = (char *)v38;
    goto LABEL_5;
  }
  uint64_t v128 = v27;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  uint64_t v116 = v27 + 32;
  uint64_t v115 = v44;
  v44((uint64_t)v34, v26, v22);
  uint64_t v45 = (void *)((char *)a3 + qword_1EB768908);
  swift_beginAccess();
  uint64_t v46 = *v45;
  id v144 = v39;
  id v47 = v39;
  swift_bridgeObjectRetain();
  uint64_t v48 = v139;
  MEMORY[0x1AD118260](&v144, v46, v37, v11, v38);

  swift_bridgeObjectRelease();
  uint64_t v49 = v142;
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 48))(v48, 1, v11);
  uint64_t v51 = v11;
  BOOL v43 = (char *)v38;
  if (v50 != 1)
  {
    uint64_t v143 = v34;
    uint64_t v114 = v22;
    uint64_t v71 = v49 + 32;
    unint64_t v70 = *(void (**)(char *, char *))(v49 + 32);
    uint64_t v72 = v47;
    uint64_t v73 = v127;
    uint64_t v74 = v51;
    v70(v127, v139);
    uint64_t v75 = v141;
    uint64_t v76 = *(void *)v141;
    swift_bridgeObjectRetain();
    uint64_t v125 = (uint64_t)v72;
    LOBYTE(v72) = sub_1ACCEA468(v72, v76);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v77 = v140;
    if ((v72 & 1) == 0)
    {
      v115(v138, v143, v114);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v70)(v137, v73, v74);
    }
    uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v70;
    uint64_t v124 = v71;
    uint64_t v129 = v74;
    int v139 = v43;
    uint64_t v78 = *(void *)(v75 + 24);
    BOOL v54 = __OFADD__(v78, 1);
    uint64_t v79 = v78 + 1;
    if (v54) {
      goto LABEL_25;
    }
    *(void *)(v75 + 24) = v79;
    uint64_t v80 = (uint64_t)v126;
    uint64_t v81 = (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t)))((char *)v136 + qword_1E99F5AD0))(v132);
    __n128 v82 = MEMORY[0x1F4188790](v81);
    uint64_t v83 = v135;
    *(&v113 - 6) = v135;
    *(&v113 - 5) = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v77;
    uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v133 + 12);
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v133 + 13);
    *(&v113 - 4) = v85;
    *(&v113 - 3) = v84;
    *((__n128 *)&v113 - 1) = v82;
    uint64_t v86 = v123;
    sub_1ACCC82A8((void (*)(char *, char *))sub_1ACDA2670, (uint64_t)(&v113 - 8), MEMORY[0x1E4FBC248], v77, v87, v123);
    if (sub_1ACD9BA80((uint64_t)v143, v80))
    {
      id v144 = v83;
      uint64_t v145 = v77;
      uint64_t v146 = v85;
      uint64_t v147 = v84;
      type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
      *(unsigned char *)(v141 + 56) = 1;
      uint64_t v88 = v114;
      uint64_t v89 = (void *)v125;
      goto LABEL_23;
    }
    uint64_t v133 = v84;
    char v132 = v85;
    uint64_t v90 = v120;
    uint64_t v91 = &v120[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
    uint64_t v93 = v129;
    v92(v120, v86, v129);
    v92(v91, (uint64_t)v127, v93);
    uint64_t v94 = v121;
    int64_t v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48);
    uint64_t v96 = v77;
    if (v95(v90, 1, v77) == 1)
    {
      int v97 = v95(v91, 1, v77);
      uint64_t v88 = v114;
      if (v97 == 1)
      {
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v90, v129);
        uint64_t v89 = (void *)v125;
LABEL_20:
        uint64_t v102 = *(void *)(v141 + 32);
        BOOL v54 = __OFADD__(v102, 1);
        uint64_t v103 = v102 + 1;
        if (v54)
        {
LABEL_26:
          __break(1u);
          return result;
        }
        *(void *)(v141 + 32) = v103;
LABEL_23:
        uint64_t v104 = v128;
        char v105 = v130;
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v130, v126, v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v105, 0, 1, v88);
        id v148 = v89;
        swift_beginAccess();
        sub_1ACE76088();
        id v106 = v89;
        sub_1ACE760B8();
        swift_endAccess();
        uint64_t v107 = v142;
        uint64_t v108 = v131;
        uint64_t v109 = v123;
        uint64_t v110 = v129;
        (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v131, v123, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v108, 0, 1, v110);
        id v148 = v106;
        swift_beginAccess();
        sub_1ACE76088();
        id v111 = v106;
        sub_1ACE760B8();
        swift_endAccess();
        (*(void (**)(char *, uint64_t))(v107 + 8))(v127, v110);
        uint64_t v112 = v114;
        (*(void (**)(char *, uint64_t))(v104 + 8))(v143, v114);
        v115(v138, v126, v112);
        return v113(v137, v109, v110);
      }
    }
    else
    {
      unint64_t v98 = v118;
      v92(v118, (uint64_t)v90, v93);
      if (v95(v91, 1, v96) != 1)
      {
        uint64_t v99 = v117;
        (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v117, v91, v96);
        char v100 = sub_1ACE76168();
        int64_t v101 = *(void (**)(char *, uint64_t))(v94 + 8);
        v101(v99, v96);
        v101(v98, v96);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v90, v93);
        uint64_t v88 = v114;
        uint64_t v89 = (void *)v125;
        if (v100) {
          goto LABEL_20;
        }
LABEL_22:
        id v144 = v135;
        uint64_t v145 = v96;
        uint64_t v146 = v132;
        uint64_t v147 = v133;
        type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
        *(unsigned char *)(v141 + 56) = 1;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v98, v96);
      uint64_t v88 = v114;
    }
    (*(void (**)(char *, uint64_t))(v119 + 8))(v90, TupleTypeMetadata2);
    uint64_t v89 = (void *)v125;
    goto LABEL_22;
  }
  uint64_t v42 = a3;
  uint64_t v129 = v51;
  uint64_t v27 = v128;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v34, v22);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v139, v125);
LABEL_5:
  uint64_t v52 = v140;
  uint64_t v53 = *(void *)(v141 + 16);
  BOOL v54 = __OFADD__(v53, 1);
  uint64_t v55 = v53 + 1;
  id v56 = v135;
  if (v54)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  *(void *)(v141 + 16) = v55;
  uint64_t v57 = (uint64_t)v143;
  uint64_t v58 = (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t)))((char *)v42 + qword_1E99F5AD0))(v132);
  int v139 = v43;
  __n128 v59 = MEMORY[0x1F4188790](v58);
  *(&v113 - 6) = v56;
  *(&v113 - 5) = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v52;
  *((_OWORD *)&v113 - 2) = *((_OWORD *)v133 + 6);
  *((__n128 *)&v113 - 1) = v59;
  uint64_t v60 = v137;
  uint64_t v61 = v57;
  sub_1ACCC82A8((void (*)(char *, char *))sub_1ACDA18D8, (uint64_t)(&v113 - 8), MEMORY[0x1E4FBC248], v52, v62, v137);
  uint64_t v63 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v130, v61, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v63, 0, 1, v22);
  id v148 = v39;
  swift_beginAccess();
  sub_1ACE76088();
  id v64 = v39;
  sub_1ACE760B8();
  swift_endAccess();
  uint64_t v65 = v142;
  long long v66 = v131;
  uint64_t v67 = v60;
  uint64_t v68 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v131, v67, v129);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v68);
  id v148 = v64;
  swift_beginAccess();
  sub_1ACE76088();
  id v69 = v64;
  sub_1ACE760B8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v138, v143, v22);
}

void sub_1ACD9D794(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + qword_1E99F5AE8);
  uint64_t v4 = (void *)sub_1ACE75268();
  id v5 = objc_msgSend(v3, sel_objectAtIndexPath_, v4);

  *a2 = v5;
}

uint64_t sub_1ACD9D804@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v5 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x50);
  uint64_t v6 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x58);
  sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v8 = sub_1ACE76FD8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - v10;
  sub_1ACD9BD80(*a1, v20, (char *)&v20 - v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 48))(v11, 1, TupleTypeMetadata3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v12 = swift_getTupleTypeMetadata3();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v21, 1, 1, v12);
  }
  else
  {
    uint64_t v14 = &v11[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v15 = *(void *)&v11[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v16 = swift_getTupleTypeMetadata3();
    uint64_t v17 = v21;
    uint64_t v18 = v21 + *(int *)(v16 + 48);
    uint64_t v19 = *(int *)(v16 + 64);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(v21, v11, v5);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v18, v14, v6);
    *(void *)(v17 + v19) = v15;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v17, 0, 1, v16);
  }
}

uint64_t sub_1ACD9DAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  __n128 v9 = MEMORY[0x1F4188790](TupleTypeMetadata3 - 8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v13 = *(int *)(v12 + 56);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = *(int *)(v12 + 72);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v11, a1, a2, v9);
  uint64_t v18 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, v16, a3);
  *(void *)&v11[v15] = *(void *)(a1 + v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a4, v14, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, a2);
}

uint64_t sub_1ACD9DC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v26 = a4;
  uint64_t v10 = sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  swift_getTupleTypeMetadata3();
  uint64_t v11 = sub_1ACE76688();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v13 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v17 = *(int *)(v16 + 56);
  uint64_t v18 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))((char *)&v25 - v14, a1, a3, v13);
  uint64_t v19 = *(void *)(a1 + v17);
  *(void *)&v15[v17] = v19;
  uint64_t v33 = v19;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = v26;
  uint64_t v32 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACDA18B4, (uint64_t)v28, v11, v10, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v21);
  uint64_t v23 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v15, a3);
  uint64_t result = type metadata accessor for FRPSectionInfo();
  *(void *)(v23 + *(int *)(result + 44)) = v22;
  return result;
}

uint64_t sub_1ACD9DE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v23 = a4;
  sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  __n128 v8 = MEMORY[0x1F4188790](TupleTypeMetadata3 - 8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v12 = *(int *)(v11 + 56);
  __n128 v13 = &v10[v12];
  uint64_t v14 = *(int *)(v11 + 72);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v10, a1, a2, v8);
  uint64_t v17 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, v15, a3);
  uint64_t v18 = *(void **)(a1 + v14);
  *(void *)&v10[v14] = v18;
  *uint64_t v23 = v18;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v17 + 8);
  id v20 = v18;
  v19(v13, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, a2);
}

uint64_t sub_1ACD9E04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a6;
  sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  swift_getTupleTypeMetadata3();
  uint64_t v11 = sub_1ACE76688();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v13 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v15 = &v26[-v14];
  uint64_t v17 = *(int *)(v16 + 56);
  uint64_t v18 = *(void *)(a3 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v18 + 16))(&v26[-v14], a1, a3, v13);
  uint64_t v19 = *(void *)(a1 + v17);
  *(void *)&v15[v17] = v19;
  uint64_t v31 = v19;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_1ACB4AA30((void (*)(char *, char *))sub_1ACDA1890, (uint64_t)v26, v11, a2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v21);
  uint64_t v23 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v25, v15, a3);
  uint64_t result = type metadata accessor for FRPSectionInfo();
  *(void *)(v23 + *(int *)(result + 44)) = v22;
  return result;
}

uint64_t sub_1ACD9E24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a4;
  sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  __n128 v8 = MEMORY[0x1F4188790](TupleTypeMetadata3 - 8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v12 = *(int *)(v11 + 56);
  __n128 v13 = &v10[v12];
  uint64_t v14 = *(int *)(v11 + 72);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v10, a1, a2, v8);
  uint64_t v17 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, v15, a3);
  *(void *)&v10[v14] = *(void *)(a1 + v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v20, v10, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, a3);
}

uint64_t sub_1ACD9E3FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)result;
  uint64_t v5 = *(void *)(a2 + 8);
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1ACE77178();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)(v5 + 16);
  }
  *uint64_t v4 = v6;
  long long v4[2] = a3;
  return result;
}

void sub_1ACD9E46C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1AD11B470](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = (void *)(v8 + qword_1E99F5B00);
    void *v10 = a2;
    v10[1] = a3 & 1;
    _OWORD v10[2] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1ACD959AC();
  }
}

void sub_1ACD9E504(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1AD11B470](v7);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    uint64_t v15 = a2;
    type metadata accessor for FRPSectionInfo();
    uint64_t v10 = sub_1ACE76688();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 32))(&v16, &v15, v10);
    uint64_t v11 = type metadata accessor for FRPOutput();
    *((unsigned char *)&v16 + *(int *)(v11 + 28)) = a3 & 1;
    *(uint64_t *)((char *)&v16 + *(int *)(v11 + 32)) = a4;
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    uint64_t v14 = &v9[qword_1E99F5B00];
    *(void *)uint64_t v14 = v16;
    *((void *)v14 + 1) = v12;
    *((void *)v14 + 2) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1ACD95C58();
  }
}

id sub_1ACD9E63C()
{
  sub_1ACE75108();
  return v1;
}

uint64_t sub_1ACD9E678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v26 = *MEMORY[0x1E4FBC8C8] & *v3;
  uint64_t v5 = v26;
  uint64_t v30 = sub_1ACE75DC8();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE75E48();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75118();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __n128 v14 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)((char *)v3 + qword_1E99F5AC8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, v11, v14);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = *(void *)(v5 + 80);
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v26 + 88);
  *(void *)(v18 + 40) = *(void *)(v5 + 104);
  *(void *)(v18 + 48) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v16, v15, v11);
  uint64_t v19 = (void *)(v18 + v17);
  uint64_t v20 = v28;
  *uint64_t v19 = v27;
  v19[1] = v20;
  aBlock[4] = sub_1ACDA1448;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_22_3;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v3;
  swift_retain();
  sub_1ACE75E08();
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  uint64_t v23 = v30;
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v10, v7, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
  return swift_release();
}

uint64_t sub_1ACD9EAA0(uint64_t a1)
{
  v20[0] = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v3 = v20[0];
  uint64_t v4 = sub_1ACE75DC8();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1ACE75E48();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1ACE75118();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __n128 v13 = MEMORY[0x1F4188790](v10);
  __n128 v14 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)((char *)v1 + qword_1E99F5AC8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v13);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = *(void *)(v3 + 80);
  *(_OWORD *)(v16 + 24) = *(_OWORD *)(v20[0] + 88);
  *(void *)(v16 + 40) = *(void *)(v3 + 104);
  *(void *)(v16 + 48) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, v14, v10);
  aBlock[4] = sub_1ACDA0A50;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_75;
  unint64_t v17 = _Block_copy(aBlock);
  uint64_t v18 = v1;
  sub_1ACE75E08();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1ACBDC0DC((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v9, v6, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  return swift_release();
}

uint64_t sub_1ACD9EE9C(void *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8 = (void *)(*MEMORY[0x1E4FBC8C8] & *a1);
  uint64_t v9 = sub_1ACE75118();
  __n128 v10 = MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9, v10);
  __n128 v13 = (void *)swift_allocObject();
  void v13[2] = v8[10];
  v13[3] = v8[11];
  v13[4] = v8[12];
  _OWORD v13[5] = v8[13];
  void v13[6] = a3;
  v13[7] = a4;
  uint64_t v23 = sub_1ACDA1514;
  uint64_t v24 = v13;
  swift_beginAccess();
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  type metadata accessor for FRPOutput();
  swift_getFunctionTypeMetadata1();
  sub_1ACBDC0DC((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
  sub_1ACE76088();
  swift_retain();
  sub_1ACE760B8();
  swift_endAccess();
  __n128 v14 = (char *)a1 + qword_1E99F5B00;
  uint64_t v15 = *(void *)((char *)a1 + qword_1E99F5B00);
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v17 = *((void *)v14 + 2);
  uint64_t result = swift_bridgeObjectRetain();
  if (v15)
  {
    uint64_t v20 = v15;
    char v21 = v16 & 1;
    uint64_t v22 = v17;
    a3(&v20);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ACD9F148()
{
  swift_beginAccess();
  sub_1ACE75118();
  type metadata accessor for FRPSectionInfo();
  sub_1ACE76688();
  type metadata accessor for FRPOutput();
  swift_getFunctionTypeMetadata1();
  sub_1ACBDC0DC((unint64_t *)&qword_1EB766C80, MEMORY[0x1E4F27990]);
  sub_1ACE76088();
  sub_1ACE76018();
  swift_endAccess();
  uint64_t result = v1;
  if (v1) {
    return sub_1ACA76F34(v1);
  }
  return result;
}

id sub_1ACD9F2B0@<X0>(uint64_t a1@<X8>)
{
  sub_1ACE75118();
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher();
  uint64_t v2 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  id result = sub_1ACD9E63C();
  *(void *)(a1 + v2) = result;
  return result;
}

uint64_t sub_1ACD9F334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_1ACDA1358(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1ACD9F3A0()
{
  return sub_1ACD9EA9C();
}

uint64_t sub_1ACD9F3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return PFProducer.receive<A>(subscriber:)(a1, a4, a2, WitnessTable, a3);
}

uint64_t static FRPSectionInfo<>.== infix(_:_:)()
{
  if ((sub_1ACE76168() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FRPSectionInfo();
  return sub_1ACE76698();
}

uint64_t sub_1ACD9F4E4()
{
  return static FRPSectionInfo<>.== infix(_:_:)();
}

id sub_1ACD9F4F8()
{
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id sub_1ACD9F550(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  if (!a4)
  {
    uint64_t v11 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  uint64_t v11 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
LABEL_6:
  id v13 = objc_msgSend(v7, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, a1, a2, v11, v12);

  return v13;
}

char *sub_1ACD9F61C@<X0>(char **a1@<X8>)
{
  id result = sub_1ACD950A4(v1);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for FRPSectionInfo()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACD9F664(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ACD9F6A0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ACD9F6DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ACD9F778(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1ACD9F874(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACD9F8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1ACD9F964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACD9F9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ACD9FA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ACD9FAF0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACD9FC3CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1ACD9FC50(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1ACD9FE2CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1ACD9FE54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1ACD9FEFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    *(void *)((((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8)
                                                                                      + 8);
  }
  return v4;
}

uint64_t sub_1ACD9FFF0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1ACDA001C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1ACDA009C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1ACDA011C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1ACDA019C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1ACDA021C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1ACDA035CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_21:
        int v15 = v14 - 1;
        if (v10)
        {
          int v15 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *((unsigned __int8 *)a1 + v6);
  if (v17 >= 2) {
    return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_1ACDA0370(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  if ((v9 & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if ((v9 & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if ((v9 & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, (v9 & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x1ACDA0530);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          unsigned int v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for FetchedResultsListPublisher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FetchedResultsSingleItemPublisher()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for FetchedResultsCountPublisher()
{
  return &type metadata for FetchedResultsCountPublisher;
}

uint64_t type metadata accessor for FetchedResultsSectionedPublisher()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACDA05B0()
{
  return swift_initClassMetadata2();
}

void sub_1ACDA0630()
{
  sub_1ACABE9B0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_1ACDA0748(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1ACDA0798(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_1ACDA0828(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_1ACDA0880(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1ACDA08C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Paging()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1ACDA0948(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ACDA0984()
{
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ACDA0A50()
{
  sub_1ACE75118();
  return sub_1ACD9F148();
}

__n128 sub_1ACDA0AB4@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v2 = a1[1].n128_u64[0];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = v2;
  return result;
}

void sub_1ACDA0AC8(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB766C90);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned int v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1ACE75288();
  uint64_t v44 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  BOOL v43 = (char *)&v42 - v13;
  if (a1 == a2)
  {
    unint64_t v49 = MEMORY[0x1E4FBC860];
    return;
  }
  if (a2 < a1) {
    goto LABEL_34;
  }
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  id v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  uint64_t v45 = (void (**)(char *, char *, uint64_t))(v44 + 32);
  uint64_t v53 = a3 + 40;
  unint64_t v49 = MEMORY[0x1E4FBC860];
  v12.n128_u64[0] = 138412290;
  __n128 v50 = v12;
  long long v46 = xmmword_1ACE84820;
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  while (a1 < a2)
  {
    if (a1 < 0)
    {
      char v19 = 1;
      goto LABEL_24;
    }
    uint64_t v15 = *(void *)(a3 + 16);
    if (!v15) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(a3 + 32);
    if ((v16 & 0x8000000000000000) != 0)
    {
LABEL_23:
      char v19 = 2;
      goto LABEL_24;
    }
    if (a1 >= v16)
    {
      uint64_t v17 = 0;
      uint64_t v20 = v15 - 1;
      uint64_t v18 = a1;
      while (v20 != v17)
      {
        uint64_t v21 = *(void *)(v53 + 8 * v17);
        if (v21 < 0) {
          goto LABEL_23;
        }
        v18 -= v16;
        ++v17;
        unint64_t v16 = v21;
        if (v18 < v21) {
          goto LABEL_16;
        }
      }
LABEL_22:
      char v19 = 0;
LABEL_24:
      uint64_t v29 = v9;
      sub_1ACDA1908();
      uint64_t v30 = (void *)swift_allocError();
      *uint64_t v31 = v19;
      swift_willThrow();
      if (qword_1EB768C20 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1ACE754C8();
      __swift_project_value_buffer(v32, (uint64_t)qword_1EB768C00);
      id v33 = v30;
      id v34 = v30;
      uint64_t v35 = sub_1ACE75498();
      os_log_type_t v36 = sub_1ACE76BF8();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = v50.n128_u32[0];
        id v39 = v30;
        uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v37 + 4) = v40;
        void *v38 = v40;

        _os_log_impl(&dword_1AC9D5000, v35, v36, "FRC failed to create IndexPath with error: %@", (uint8_t *)v37, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v38, -1, -1);
        uint64_t v41 = v37;
        a3 = v51;
        MEMORY[0x1AD11B340](v41, -1, -1);
      }
      else
      {
      }
      uint64_t v9 = v29;
      (*v14)(v8, 1, 1, v29);
      a2 = v52;
      goto LABEL_30;
    }
    uint64_t v17 = 0;
    uint64_t v18 = a1;
LABEL_16:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB769180);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v46;
    *(void *)(v22 + 32) = v17;
    *(void *)(v22 + 40) = v18;
    MEMORY[0x1AD117410]();
    (*v14)(v8, 0, 1, v9);
    if ((*v47)(v8, 1, v9) != 1)
    {
      uint64_t v23 = *v45;
      uint64_t v24 = v43;
      (*v45)(v43, v8, v9);
      v23(v48, v24, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v49 = sub_1ACA42980(0, *(void *)(v49 + 16) + 1, 1, v49);
      }
      unint64_t v26 = *(void *)(v49 + 16);
      unint64_t v25 = *(void *)(v49 + 24);
      if (v26 >= v25 >> 1) {
        unint64_t v49 = sub_1ACA42980(v25 > 1, v26 + 1, 1, v49);
      }
      uint64_t v27 = v48;
      unint64_t v28 = v49;
      *(void *)(v49 + 16) = v26 + 1;
      v23((char *)(v28+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v26), v27, v9);
      a3 = v51;
      goto LABEL_31;
    }
LABEL_30:
    sub_1ACA50E78((uint64_t)v8, &qword_1EB766C90);
LABEL_31:
    if (++a1 == a2) {
      return;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

void *sub_1ACDA1014(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1ACE77508();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x1AD119490](v5 - 4, a1);
        }
        else {
          id v6 = *(id *)(a1 + 8 * v5);
        }
        uint64_t v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        id v9 = objc_msgSend(v6, sel_objectID);
        sub_1ACD31300(&v20, v9);

        char v10 = sub_1ACD9C2F0((uint64_t)&v20, a2, v9, v22, (uint64_t)v7);
        if (v10 == 2)
        {
        }
        else
        {
          char v11 = v10;
          id v12 = v20;
          char v13 = v21;

          if ((v13 & 1) == 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v18 = sub_1ACA42748(0, v18[2] + 1, 1, v18);
            }
            unint64_t v15 = v18[2];
            unint64_t v14 = v18[3];
            if (v15 >= v14 >> 1) {
              uint64_t v18 = sub_1ACA42748((void *)(v14 > 1), v15 + 1, 1, v18);
            }
            void v18[2] = v15 + 1;
            unint64_t v16 = &v18[3 * v15];
            *((unsigned char *)v16 + 32) = v11 & 1;
            v16[5] = v12;
            v16[6] = v9;
            goto LABEL_6;
          }
        }

LABEL_6:
        ++v5;
        if (v8 == v4) {
          goto LABEL_21;
        }
      }
    }
  }
  uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1ACDA1218(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1ACE773D8();
    uint64_t v6 = *(void *)(sub_1ACE75288() - 8);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void **)(a2 + qword_1E99F5AE8);
    uint64_t v9 = *(void *)(v6 + 72);
    do
    {
      char v10 = (void *)sub_1ACE75268();
      id v11 = objc_msgSend(v8, sel_objectAtIndexPath_, v10);

      sub_1ACE773A8();
      sub_1ACE773E8();
      sub_1ACE773F8();
      sub_1ACE773B8();
      v7 += v9;
      --v3;
    }
    while (v3);
    return v12;
  }
  return result;
}

uint64_t sub_1ACDA135C()
{
  uint64_t v1 = sub_1ACE75118();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDA1448()
{
  uint64_t v1 = *(void *)(sub_1ACE75118() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + 48);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void (**)(uint64_t *))v5;
  uint64_t v7 = *(void *)(v5 + 8);
  return sub_1ACD9EE9C(v3, v4, v6, v7);
}

uint64_t sub_1ACDA14DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDA1514()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1ACDA153C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1ACA50D4C(255, (unint64_t *)&qword_1EB768ED8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ACDA1594()
{
  return sub_1ACD973EC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1ACDA15A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = a5[2];
  uint64_t v8 = a5[3];
  BOOL v9 = __OFADD__(v7, v8);
  uint64_t v10 = v7 + v8;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a5;
    uint64_t v11 = a5[4];
    uint64_t v6 = v10 - v11;
    if (!__OFSUB__(v10, v11))
    {
      sub_1ACE76E08();
      if (qword_1EB768FF8 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  swift_beginAccess();
  uint64_t v12 = (void *)qword_1EB768FF0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7731A0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ACE84630;
  uint64_t v14 = MEMORY[0x1E4FBB3C8];
  char v15 = *((unsigned char *)v5 + 56);
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB390];
  *(void *)(v13 + 64) = v14;
  *(unsigned char *)(v13 + 32) = v15;
  uint64_t v16 = v5[1];
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v17 = v12;
    uint64_t v18 = sub_1ACE77178();
  }
  else
  {
    uint64_t v18 = *(void *)(v16 + 16);
    id v19 = v12;
  }
  uint64_t v20 = MEMORY[0x1E4FBB550];
  uint64_t v21 = MEMORY[0x1E4FBB5C8];
  *(void *)(v13 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v13 + 104) = v21;
  *(void *)(v13 + 72) = v18;
  uint64_t v22 = v5[6];
  *(void *)(v13 + 136) = v20;
  *(void *)(v13 + 144) = v21;
  *(void *)(v13 + 112) = v22;
  *(void *)(v13 + 176) = v20;
  *(void *)(v13 + 184) = v21;
  *(void *)(v13 + 152) = v6;
  sub_1ACE75398();

  return swift_bridgeObjectRelease();
}

void sub_1ACDA1760(void *a1@<X8>)
{
  sub_1ACD9D794(*(void *)(v1 + 16), a1);
}

uint64_t sub_1ACDA1780@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD9D804(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACDA179C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD9DAE8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACDA17A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD9DC8C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1ACDA17CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD9E04C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1ACDA17F0(uint64_t a1)
{
  return sub_1ACD9E3FC(a1, *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1ACDA1800()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDA1838()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ACDA1878()
{
  sub_1ACD9E504(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1ACDA1890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACD9E24C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACDA18B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1ACD9DE94(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1ACDA18D8()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

unint64_t sub_1ACDA1908()
{
  unint64_t result = qword_1E99F5B70;
  if (!qword_1E99F5B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5B70);
  }
  return result;
}

uint64_t sub_1ACDA195C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = MEMORY[0x1E4FBC870];
  v5[1] = MEMORY[0x1E4FBC870];
  long long v6 = 0u;
  memset(v7, 0, sizeof(v7));
  sub_1ACD9604C((uint64_t)v5);
  sub_1ACD97AF0();
  uint64_t v3 = sub_1ACE753F8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  return sub_1ACD96228((uint64_t)v2);
}

void sub_1ACDA1A48(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  sub_1ACA33128(a1, (uint64_t)v8);
  swift_dynamicCast();
  id v4 = objc_msgSend(v7, sel_objectID);

  if ((unint64_t)a3 - 3 >= 2)
  {
    if (a3 == (uint64_t (*)())1 || a3 == (uint64_t (*)())2) {
      goto LABEL_8;
    }
    sub_1ACE77498();
    __break(1u);
  }
  else
  {
    a3 = sub_1ACD96178();
    if (*v5)
    {
      id v6 = v4;
      sub_1ACD31300(&v7, v6);
      ((void (*)(unsigned char *, void))a3)(v8, 0);

      return;
    }
  }
  ((void (*)(unsigned char *, void))a3)(v8, 0);
LABEL_8:
}

uint64_t sub_1ACDA1BAC()
{
  uint64_t v1 = (void *)(*MEMORY[0x1E4FBC8C8] & *v0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7726E8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v35 - v5;
  uint64_t v43 = sub_1ACE753F8();
  uint64_t v42 = *(void *)(v43 - 8);
  uint64_t v7 = *(void *)(v42 + 64);
  MEMORY[0x1F4188790](v43);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  uint64_t v13 = (char *)v0 + qword_1E99F5B08;
  swift_beginAccess();
  char v14 = v13[56];
  uint64_t v44 = *(void *)v13;
  long long v39 = *(_OWORD *)(v13 + 8);
  long long v45 = v39;
  long long v46 = *(_OWORD *)(v13 + 24);
  long long v47 = *(_OWORD *)(v13 + 40);
  char v48 = v14;
  uint64_t v15 = v1[10];
  uint64_t v16 = v1[11];
  uint64_t v17 = v1[12];
  uint64_t v18 = v1[13];
  *(void *)&long long aBlock = v15;
  *((void *)&aBlock + 1) = v16;
  uint64_t v40 = v16;
  *(void *)&long long v52 = v17;
  *((void *)&v52 + 1) = v18;
  type metadata accessor for FetchedResultsPublisherImplementation.InternalPublisher.Update();
  uint64_t v19 = sub_1ACE76FD8();
  (*(void (**)(_OWORD *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 32))(v49, &v44, v19);
  if (!*(void *)&v49[0]) {
    return swift_deallocUninitializedObject();
  }
  uint64_t v38 = v15;
  long long v20 = v49[1];
  v12[1] = v49[0];
  _OWORD v12[2] = v20;
  v12[3] = v50[0];
  *(_OWORD *)((char *)v12 + 57) = *(_OWORD *)((char *)v50 + 9);
  uint64_t v21 = (uint64_t)v0 + qword_1EB768910;
  swift_beginAccess();
  sub_1ACA2EDE8(v21, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v6, 1, v43) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1ACA50E78((uint64_t)v6, &qword_1EB7726E8);
  }
  else
  {
    uint64_t v23 = v11;
    uint64_t v24 = v42;
    os_log_type_t v36 = *(void (**)(void))(v42 + 32);
    uint64_t v35 = v17;
    unint64_t v25 = v23;
    uint64_t v37 = v23;
    uint64_t v26 = v43;
    v36();
    *(void *)&long long v39 = *(void *)((char *)v0 + qword_1E99F5AC0);
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v28 = v25;
    uint64_t v29 = v26;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v8, v28, v26);
    unint64_t v30 = (*(unsigned __int8 *)(v24 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v31 = (void *)swift_allocObject();
    uint64_t v32 = v40;
    void v31[2] = v38;
    v31[3] = v32;
    v31[4] = v35;
    v31[5] = v18;
    v31[6] = v27;
    v31[7] = v12;
    ((void (*)(char *, char *, uint64_t))v36)((char *)v31 + v30, v8, v29);
    *(void *)&v53[0] = sub_1ACDA2254;
    *((void *)&v53[0] + 1) = v31;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v52 = sub_1ACA6DA9C;
    *((void *)&v52 + 1) = &block_descriptor_51_1;
    id v33 = _Block_copy(&aBlock);
    sub_1ACDA22E8(&v44);
    swift_retain();
    swift_release();
    objc_msgSend((id)v39, sel_performBlock_, v33);
    _Block_release(v33);
    long long v52 = 0u;
    memset(v53, 0, 25);
    long long aBlock = 0u;
    sub_1ACD9604C((uint64_t)&aBlock);
    uint64_t v34 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v41, 1, 1, v29);
    sub_1ACD96228(v34);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v29);
  }
  return swift_release();
}

void sub_1ACDA2134()
{
}

uint64_t sub_1ACDA2164()
{
  return objectdestroy_43Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1ACDA2180()
{
  uint64_t v1 = sub_1ACE753F8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1ACDA2254()
{
  uint64_t v1 = *(void *)(sub_1ACE753F8() - 8);
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v3 = *(long long **)(v0 + 56);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_1ACD9B4DC(v2, v3, v4);
}

uint64_t *sub_1ACDA22E8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1ACDA2324(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1ACDA2364@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MEMORY[0x1AD11B470](v1 + 104);
  *a1 = result;
  return result;
}

uint64_t sub_1ACDA239C()
{
  return sub_1ACD96BC4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

__n128 sub_1ACDA23A8(__n128 *a1)
{
  uint64_t v2 = *(__n128 **)(v1 + 16);
  unint64_t v3 = v2[1].n128_u64[0];
  __n128 result = *v2;
  *a1 = *v2;
  a1[1].n128_u64[0] = v3;
  return result;
}

uint64_t sub_1ACDA23C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACDA23F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1ACDA242C(uint64_t a1)
{
  return sub_1ACD9E3FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1ACDA2434(uint64_t a1)
{
  return sub_1ACAFB62C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1ACDA2450()
{
  return objectdestroy_43Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1ACDA246C()
{
  sub_1ACD9E46C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t *sub_1ACDA247C(uint64_t *a1)
{
  return sub_1ACD9B878(a1, *(void *)(v1 + 16), *(unsigned char **)(v1 + 24));
}

uint64_t sub_1ACDA2484()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDA24BC()
{
  sub_1ACD9B8C0(*(void *)(v0 + 48));
}

uint64_t sub_1ACDA24CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACD94100(a1);
}

uint64_t sub_1ACDA24D8@<X0>(char **a1@<X8>)
{
  return sub_1ACD951BC(v1, a1);
}

uint64_t sub_1ACDA24F4()
{
  return swift_deallocObject();
}

unsigned char *_s10IndexErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDA25D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10IndexErrorOMa()
{
  return &_s10IndexErrorON;
}

unint64_t sub_1ACDA260C()
{
  unint64_t result = qword_1E99F5B78;
  if (!qword_1E99F5B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5B78);
  }
  return result;
}

uint64_t sub_1ACDA2670()
{
  return sub_1ACDA18D8();
}

uint64_t sub_1ACDA2694()
{
  return 0;
}

uint64_t sub_1ACDA26A0(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result;
  uint64_t v4 = *(void *)v2;
  if (*(unsigned char *)(v2 + 8))
  {
    if (*(unsigned char *)(v2 + 8) == 1)
    {
      uint64_t v9 = *(void *)v2;
      swift_retain();
      sub_1ACA44774(v4, 1);
      type metadata accessor for ConduitBase();
      swift_getWitnessTable();
      sub_1ACE76A38();
      sub_1ACE76A08();
      swift_release();
      uint64_t v5 = *(void *)v2;
      *(void *)uint64_t v2 = v9;
      char v6 = *(unsigned char *)(v2 + 8);
      *(unsigned char *)(v2 + 8) = 1;
      swift_bridgeObjectRetain();
      sub_1ACA447E4(v5, v6);
      return swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)uint64_t v2 = result;
      *(unsigned char *)(v2 + 8) = 0;
      return swift_retain();
    }
  }
  else if (v4 != result)
  {
    type metadata accessor for ConduitBase();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4E0);
    swift_allocObject();
    uint64_t v7 = sub_1ACE765A8();
    *uint64_t v8 = v4;
    v8[1] = v3;
    sub_1ACC01FB8(v7);
    sub_1ACE76688();
    swift_retain();
    swift_getWitnessTable();
    swift_getWitnessTable();
    unint64_t result = sub_1ACE76A48();
    *(void *)uint64_t v2 = result;
    *(unsigned char *)(v2 + 8) = 1;
  }
  return result;
}

uint64_t sub_1ACDA289C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void (*)(uint64_t))result;
  if (a4)
  {
    if (a4 == 1)
    {
      MEMORY[0x1F4188790](result);
      type metadata accessor for ConduitBase();
      swift_getWitnessTable();
      sub_1ACE76A38();
      swift_getWitnessTable();
      return sub_1ACE76458();
    }
  }
  else
  {
    uint64_t v6 = swift_retain();
    v5(v6);
    return sub_1ACA447E4(a3, 0);
  }
  return result;
}

uint64_t sub_1ACDA29E4()
{
  uint64_t result = sub_1ACA447E4(*(void *)v0, *(unsigned char *)(v0 + 8));
  *(void *)uint64_t v0 = 0;
  *(unsigned char *)(v0 + 8) = 2;
  return result;
}

uint64_t sub_1ACDA2A10(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)v1;
  if (!*(unsigned char *)(v1 + 8))
  {
    if (v3 != result) {
      return result;
    }
    uint64_t result = sub_1ACA447E4(*(void *)v1, 0);
    goto LABEL_11;
  }
  if (*(unsigned char *)(v1 + 8) != 1) {
    return result;
  }
  uint64_t v6 = *(void *)v1;
  type metadata accessor for ConduitBase();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1ACE76A38();
  sub_1ACE76A18();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1ACE769F8();
  swift_bridgeObjectRelease();
  if (v4 != 1)
  {
    uint64_t result = sub_1ACA447E4(v3, 1);
    if (v4)
    {
      *(void *)uint64_t v2 = v6;
      *(unsigned char *)(v2 + 8) = 1;
      return result;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_11:
    *(void *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 8) = 2;
    return result;
  }
  swift_getWitnessTable();
  uint64_t result = sub_1ACE76AC8();
  if (v5)
  {
    sub_1ACA447E4(v3, 1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v5;
    *(unsigned char *)(v2 + 8) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ACDA2BB4()
{
  return sub_1ACE77B28();
}

uint64_t sub_1ACDA2BE0()
{
  return sub_1ACE77B78();
}

BOOL sub_1ACDA2C28(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t type metadata accessor for ConduitBase()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACDA2C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1ACA44774(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1ACDA2C94(uint64_t a1)
{
  return sub_1ACA447E4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1ACDA2CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1ACA44774(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1ACA447E4(v5, v6);
  return a1;
}

uint64_t sub_1ACDA2CF8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1ACA447E4(v4, v5);
  return a1;
}

uint64_t type metadata accessor for ConduitList()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1ACDA2D50()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1ACDA2D94()
{
  return sub_1ACDA2BE0();
}

uint64_t sub_1ACDA2DB8()
{
  return sub_1ACDA2BB4();
}

uint64_t sub_1ACDA2DDC()
{
  return sub_1ACE77B78();
}

uint64_t sub_1ACDA2E1C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

BOOL sub_1ACDA2E60(uint64_t *a1, uint64_t *a2)
{
  return sub_1ACDA2C28(*a1, *a2);
}

uint64_t sub_1ACDA2E84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACDA2EA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACDA2EBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1ACDA2ED8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 40))(*a1);
}

uint64_t EpisodeSortType.descriptors.getter(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForPubDateAscending_, 1);
      goto LABEL_22;
    case 2:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForFirstAvailableAscending_, 0);
      goto LABEL_22;
    case 3:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForFirstAvailableAscending_, 1);
      goto LABEL_22;
    case 4:
      id v1 = objc_msgSend(self, sel_seasonSortDescriptors_, 2);
      goto LABEL_22;
    case 5:
      id v1 = objc_msgSend(self, sel_seasonSortDescriptors_, 4);
      goto LABEL_22;
    case 6:
      id v1 = objc_msgSend(self, sel_seasonSortDescriptors_, 1);
      goto LABEL_22;
    case 7:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForLastBookmarkedDateAscending_, 0);
      goto LABEL_22;
    case 8:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForLastBookmarkedDateAscending_, 1);
      goto LABEL_22;
    case 9:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForDownloadedDateAscending_, 0);
      goto LABEL_22;
    case 10:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForDownloadedDateAscending_, 1);
      goto LABEL_22;
    case 11:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForTitle);
      goto LABEL_22;
    case 12:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForRecentlyPlayed);
      goto LABEL_22;
    case 13:
      int v2 = os_feature_enabled_up_next_with_modified_date_score();
      char v3 = self;
      if (v2) {
        id v1 = objc_msgSend(v3, sel_sortDescriptorsForModifiedDateUpNextScore);
      }
      else {
        id v1 = objc_msgSend(v3, sel_sortDescriptorsForListenNow);
      }
      goto LABEL_22;
    case 14:
      return MEMORY[0x1E4FBC860];
    case 15:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForUpNextScore);
      goto LABEL_22;
    default:
      id v1 = objc_msgSend(self, sel_sortDescriptorsForPubDateAscending_, 0);
LABEL_22:
      id v5 = v1;
      sub_1ACC53EB4();
      uint64_t v6 = sub_1ACE76578();

      return v6;
  }
}

uint64_t EpisodeSortType.playDescriptors.getter(char a1)
{
  if (!a1)
  {
    id v1 = objc_msgSend(self, sel_sortDescriptorsForPubDateAscending_, 1);
    goto LABEL_5;
  }
  if (a1 == 4)
  {
    id v1 = objc_msgSend(self, sel_seasonSortDescriptors_, 4);
LABEL_5:
    id v2 = v1;
    sub_1ACC53EB4();
    uint64_t v3 = sub_1ACE76578();

    return v3;
  }
  return EpisodeSortType.descriptors.getter(a1);
}

unint64_t EpisodeSortType.rawValue.getter(char a1)
{
  unint64_t result = 0x65746144627570;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
    case 8:
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 9:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 11:
      unint64_t result = 0x656C746974;
      break;
    case 12:
      unint64_t result = 0x796C746E65636572;
      break;
    case 13:
      unint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 14:
      unint64_t result = 0x53794270756F7267;
      break;
    case 15:
      unint64_t result = 0x7079746F746F7270;
      break;
    case 16:
      unint64_t result = 0x706F546863746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1ACDA3450(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = EpisodeSortType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == EpisodeSortType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ACDA34DC()
{
  char v1 = *v0;
  sub_1ACE77B18();
  EpisodeSortType.rawValue.getter(v1);
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACE77B78();
}

uint64_t sub_1ACDA3540()
{
  EpisodeSortType.rawValue.getter(*v0);
  sub_1ACE76108();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDA3594()
{
  char v1 = *v0;
  sub_1ACE77B18();
  EpisodeSortType.rawValue.getter(v1);
  sub_1ACE76108();
  swift_bridgeObjectRelease();
  return sub_1ACE77B78();
}

uint64_t sub_1ACDA35F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s18PodcastsFoundation15EpisodeSortTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1ACDA3624@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = EpisodeSortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ACDA3650()
{
  return sub_1ACE76508();
}

uint64_t sub_1ACDA36B0()
{
  return sub_1ACE764C8();
}

uint64_t EpisodeSortType.ascendingSortType.getter(uint64_t result)
{
  if result <= 9u && ((0x285u >> result)) {
    return byte_1ACEA2666[(char)result];
  }
  return result;
}

uint64_t EpisodeSortType.baseSortType.getter(uint64_t result)
{
  char v1 = result - 1;
  if (result - 1) <= 9u && ((0x285u >> v1)) {
    return byte_1ACEA2670[v1];
  }
  return result;
}

Swift::Bool __swiftcall EpisodeSortType.baseSortTypeMatches(other:)(PodcastsFoundation::EpisodeSortType other)
{
  PodcastsFoundation::EpisodeSortType v2 = other;
  char v3 = v1 - 1;
  if (v1 - 1) <= 9u && ((0x285u >> v3)) {
    char v1 = byte_1ACEA2670[v3];
  }
  char v4 = other - 1;
  if (other - 1) <= 9u && ((0x285u >> v4)) {
    PodcastsFoundation::EpisodeSortType v2 = byte_1ACEA2670[v4];
  }
  unint64_t v5 = EpisodeSortType.rawValue.getter(v1);
  uint64_t v7 = v6;
  if (v5 == EpisodeSortType.rawValue.getter(v2) && v7 == v8) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1ACE77848();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t EpisodeSortType.isAscending.getter(unsigned __int8 a1)
{
  return (a1 < 0xBu) & (0x50Au >> a1);
}

uint64_t EpisodeSortType.isDescending.getter(unsigned __int8 a1)
{
  return (a1 < 0x11u) & (0x10285u >> a1);
}

BOOL EpisodeSortType.isSerialSort.getter(unsigned __int8 a1)
{
  return a1 - 4 < 3;
}

uint64_t _s18PodcastsFoundation15EpisodeSortTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1ACE779E8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

unint64_t sub_1ACDA38EC()
{
  unint64_t result = qword_1E99F5B80;
  if (!qword_1E99F5B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E99F5B80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EpisodeSortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDA3A0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeSortType()
{
  return &type metadata for EpisodeSortType;
}

unint64_t sub_1ACDA3A44()
{
  unint64_t result = qword_1EB771108;
  if (!qword_1EB771108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771108);
  }
  return result;
}

void sub_1ACDA3A98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a4;
  v12[3] = a5;
  void v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v15[4] = sub_1ACDA7064;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_1ACA6DA9C;
  void v15[3] = &block_descriptor_39_1;
  uint64_t v13 = _Block_copy(v15);
  swift_retain();
  id v14 = a6;
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_performBlock_, v13);
  _Block_release(v13);
}

uint64_t sub_1ACDA3BA4(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v20[0] = a3;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE75E48();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v14);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  aBlock[4] = sub_1ACDA7074;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_45_2;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACE75E08();
  v20[1] = MEMORY[0x1E4FBC860];
  sub_1ACDA7240((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v16, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

BOOL static CategoriesSyncUtil.CategoriesSyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CategoriesSyncUtil.CategoriesSyncError.hash(into:)()
{
  return sub_1ACE77B28();
}

uint64_t CategoriesSyncUtil.CategoriesSyncError.hashValue.getter()
{
  return sub_1ACE77B78();
}

uint64_t CategoriesSyncUtil.__allocating_init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t CategoriesSyncUtil.init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773140);
  MEMORY[0x1F4188790](v12 - 8);
  __n128 v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE750A8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_syncSession) = 0;
  sub_1ACA3E158(a1, v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  sub_1ACA3E158(a2, v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoryIngester) = a3;
  sub_1ACA72A5C(a4, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1ACE74FD8();
    sub_1ACA50E78(a4, (uint64_t *)&unk_1EB773140);
    __swift_destroy_boxed_opaque_existential_0(a2);
    __swift_destroy_boxed_opaque_existential_0(a1);
    sub_1ACA50E78((uint64_t)v14, (uint64_t *)&unk_1EB773140);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate, v18, v15);
  }
  else
  {
    sub_1ACA50E78(a4, (uint64_t *)&unk_1EB773140);
    __swift_destroy_boxed_opaque_existential_0(a2);
    __swift_destroy_boxed_opaque_existential_0(a1);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v19(v18, v14, v15);
    v19((char *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate), v18, v15);
  }
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_workQueue) = a5;
  *(void *)(v6 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx) = v22;
  return v6;
}

uint64_t CategoriesSyncUtil.syncCategories(forced:completionHandler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1ACE75E48();
  uint64_t v11 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1ACE754C8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB76A5D0);
  uint64_t v15 = sub_1ACE75498();
  os_log_type_t v16 = sub_1ACE76C08();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    unint64_t v30 = v13;
    uint64_t v18 = v10;
    uint64_t v19 = v4;
    uint64_t v20 = v8;
    uint64_t v21 = v11;
    uint64_t v22 = a2;
    uint64_t v23 = a3;
    char v24 = a1;
    unint64_t v25 = v17;
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1AC9D5000, v15, v16, "[Categories Sync] Starting to sync categories.", v17, 2u);
    uint64_t v26 = v25;
    a1 = v24;
    a3 = v23;
    a2 = v22;
    uint64_t v11 = v21;
    uint64_t v8 = v20;
    uint64_t v4 = v19;
    uint64_t v10 = v18;
    uint64_t v13 = v30;
    MEMORY[0x1AD11B340](v26, -1, -1);
  }

  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v4;
  *(unsigned char *)(v27 + 24) = a1 & 1;
  *(void *)(v27 + 32) = a2;
  *(void *)(v27 + 40) = a3;
  aBlock[4] = sub_1ACDA4DF8;
  void aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_76;
  unint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  sub_1ACA6DEC8(a2);
  sub_1ACE75E08();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1ACDA7240((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v31);
  return swift_release();
}

uint64_t sub_1ACDA45B0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770B70);
  uint64_t v55 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771638);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  uint64_t v58 = v12;
  MEMORY[0x1F4188790](v11);
  long long v52 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771648);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  uint64_t v60 = v15;
  MEMORY[0x1F4188790](v14);
  BOOL v54 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716C0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v61 = v17;
  uint64_t v62 = v18;
  MEMORY[0x1F4188790](v17);
  id v56 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771748);
  swift_allocObject();
  swift_retain();
  uint64_t v21 = (void *)sub_1ACE75A18();
  id v65 = *(id *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_workQueue);
  id v22 = v65;
  id v66 = v21;
  uint64_t v50 = sub_1ACE76CA8();
  uint64_t v23 = *(void *)(v50 - 8);
  unint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v51 = v23 + 56;
  uint64_t v44 = v8;
  v49(v8, 1, 1, v50);
  unint64_t v46 = sub_1ACA51E1C();
  sub_1ACA51EA4(&qword_1EB771740, &qword_1EB771748);
  uint64_t v47 = sub_1ACDA7240((unint64_t *)&qword_1EB7669D0, (void (*)(uint64_t))sub_1ACA51E1C);
  id v45 = v22;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v8, &qword_1EB7669C8);

  swift_release();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1ACDA6E38;
  *(void *)(v24 + 24) = a1;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771718);
  uint64_t v48 = MEMORY[0x1E4F1AAB8];
  sub_1ACA51EA4(&qword_1EB7716B0, &qword_1EB770B70);
  sub_1ACA51EA4(&qword_1EB771710, &qword_1EB771718);
  uint64_t v26 = v52;
  uint64_t v25 = v53;
  sub_1ACE75C78();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v25);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1ACDA6E78;
  *(void *)(v27 + 24) = a1;
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771758);
  sub_1ACA51EA4(&qword_1EB771630, &qword_1EB771638);
  sub_1ACA51EA4(&qword_1EB771750, &qword_1EB771758);
  unint64_t v28 = v54;
  uint64_t v29 = v57;
  sub_1ACE75C68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v26, v29);
  unint64_t v30 = v45;
  id v66 = v45;
  uint64_t v31 = (uint64_t)v44;
  v49(v44, 1, 1, v50);
  sub_1ACA51EA4(&qword_1EB771640, &qword_1EB771648);
  id v32 = v30;
  uint64_t v33 = v56;
  uint64_t v34 = v31;
  uint64_t v35 = v59;
  sub_1ACE75CA8();
  sub_1ACA50E78(v34, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v35);
  uint64_t v36 = swift_allocObject();
  uint64_t v38 = v63;
  uint64_t v37 = v64;
  *(void *)(v36 + 16) = v63;
  *(void *)(v36 + 24) = v37;
  long long v39 = (void *)swift_allocObject();
  id v39[2] = a1;
  v39[3] = v38;
  v39[4] = v37;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_1ACDA6F3C;
  *(void *)(v40 + 24) = v39;
  sub_1ACA6DEC8(v38);
  swift_retain();
  sub_1ACA6DEC8(v38);
  sub_1ACA51EA4(&qword_1EB7716B8, &qword_1EB7716C0);
  uint64_t v41 = v61;
  uint64_t v42 = sub_1ACE75B88();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v41);
  *(void *)(a1 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_syncSession) = v42;
  return swift_release();
}

uint64_t sub_1ACDA4DB0()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1ACDA4DF8()
{
  return sub_1ACDA45B0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1ACDA4E08@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1ACE754C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB76A5D0);
  uint64_t v3 = sub_1ACE75498();
  os_log_type_t v4 = sub_1ACE76C08();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1AC9D5000, v3, v4, "[Categories Sync] Preparing Media API request.", v5, 2u);
    MEMORY[0x1AD11B340](v5, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771718);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1ACE75A18();
  *a1 = result;
  return result;
}

uint64_t sub_1ACDA4F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx);
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_workQueue);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v5;
  v9[3] = sub_1ACDA6FC0;
  v9[4] = v8;
  v9[5] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771758);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v10 = v5;
  id v11 = v6;
  uint64_t result = sub_1ACE75A18();
  *a3 = result;
  return result;
}

void sub_1ACDA5044(void **a1, void (*a2)(void, void *))
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    id v4 = v2;
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB76A5D0);
    id v6 = v2;
    uint64_t v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BE8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      id v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      uint64_t v12 = sub_1ACE74D68();
      sub_1ACE76FF8();
      void *v10 = v12;

      _os_log_impl(&dword_1AC9D5000, v7, v8, "[Categories Sync] Sync failed with error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v10, -1, -1);
      MEMORY[0x1AD11B340](v9, -1, -1);

      if (!a2) {
        goto LABEL_9;
      }
    }
    else
    {

      if (!a2)
      {
LABEL_9:

        return;
      }
    }
    id v11 = v2;
    a2(0, v2);

    goto LABEL_9;
  }
}

void sub_1ACDA5224(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = sub_1ACE750A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1ACE754C8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB76A5D0);
  os_log_type_t v8 = sub_1ACE75498();
  os_log_type_t v9 = sub_1ACE76C08();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_1AC9D5000, v8, v9, "[Categories Sync] Successfully synced categories.", v10, 2u);
    MEMORY[0x1AD11B340](v10, -1, -1);
  }

  id v11 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1ACE75088();
  uint64_t v12 = (void *)sub_1ACE75008();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v11, sel_setObject_forKey_, v12, @"kMTLastCategoriesSyncDateDefaultKey");

  if (a2) {
    a2(1, 0);
  }
}

uint64_t sub_1ACDA5420(uint64_t (*a1)(uint64_t *), uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7705F0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  if (a3)
  {
    swift_retain();
    swift_release();
    uint64_t v15 = 0;
    char v16 = 0;
    return a1(&v15);
  }
  else
  {
    uint64_t v13 = sub_1ACE767F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = 0;
    v14[3] = 0;
    v14[4] = a4;
    v14[5] = sub_1ACCA53B8;
    void v14[6] = v11;
    swift_retain();
    swift_retain();
    sub_1ACA47C2C((uint64_t)v10, (uint64_t)&unk_1E99F5B98, (uint64_t)v14);
    return swift_release();
  }
}

uint64_t sub_1ACDA559C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = a5;
  void v6[3] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  void v6[4] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1ACDA5630;
  return sub_1ACDA5840();
}

uint64_t sub_1ACDA5630()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ACDA57B0;
  }
  else {
    uint64_t v2 = sub_1ACDA5744;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1ACDA5744()
{
  (*(void (**)(void, void))(v0 + 16))(0, 0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ACDA57B0()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void (*)(void *, uint64_t))v0[2];
  id v3 = v1;
  v2(v1, 1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1ACDA5840()
{
  v1[5] = v0;
  uint64_t v2 = sub_1ACE750A8();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1ACDA591C, 0, 0);
}

uint64_t sub_1ACDA591C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 40)
                + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1ACDA5A28;
  return v6(v2, v3);
}

uint64_t sub_1ACDA5A28(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1ACDA5B84, 0, 0);
  }
}

uint64_t sub_1ACDA5B84()
{
  long long v52 = v0;
  uint64_t v1 = *((void *)v0 + 12);
  double v50 = 0.0;
  char v51 = 1;
  MEMORY[0x1AD118AD0](v1, &v50);
  if (v51)
  {
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)*((void *)v0 + 12);
    uint64_t v3 = sub_1ACE754C8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB76A5D0);
    id v4 = v2;
    uint64_t v5 = sub_1ACE75498();
    os_log_type_t v6 = sub_1ACE76BE8();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = (void *)*((void *)v0 + 12);
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      id v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      *((void *)v0 + 2) = v8;
      id v11 = v8;
      sub_1ACE76FF8();
      void *v10 = v8;

      _os_log_impl(&dword_1AC9D5000, v5, v6, "[Categories Sync] Unable to convert threshold bag value to type Double. Threshold bag value: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v10, -1, -1);
      MEMORY[0x1AD11B340](v9, -1, -1);
    }
    else
    {
    }
    uint64_t v17 = (void *)*((void *)v0 + 12);
    sub_1ACDA70BC();
    swift_allocError();
    unsigned char *v20 = 0;
  }
  else
  {
    double v12 = v50;
    if (v50 >= 0.0)
    {
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1ACE754C8();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EB76A5D0);
      id v22 = sub_1ACE75498();
      os_log_type_t v23 = sub_1ACE76C08();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 134217984;
        v0[4] = v12;
        sub_1ACE76FF8();
        _os_log_impl(&dword_1AC9D5000, v22, v23, "[Categories sync] Got threshold value from the bag: %f", v24, 0xCu);
        MEMORY[0x1AD11B340](v24, -1, -1);
      }

      uint64_t v26 = *((void *)v0 + 9);
      uint64_t v25 = *((void *)v0 + 10);
      uint64_t v28 = *((void *)v0 + 7);
      uint64_t v27 = *((void *)v0 + 8);
      uint64_t v29 = *((void *)v0 + 5);
      uint64_t v30 = *((void *)v0 + 6);
      sub_1ACE75088();
      uint64_t v31 = v29 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate;
      unint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
      v49(v27, v29 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate, v30);
      sub_1ACE75038();
      id v32 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v32(v27, v30);
      sub_1ACDA7240((unint64_t *)&unk_1EB76A940, MEMORY[0x1E4F27928]);
      LOBYTE(v27) = sub_1ACE76148();
      v32(v26, v30);
      v32(v25, v30);
      if ((v27 & 1) == 0)
      {
        uint64_t v41 = sub_1ACE75498();
        os_log_type_t v42 = sub_1ACE76C08();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v43 = 0;
          _os_log_impl(&dword_1AC9D5000, v41, v42, "[Categories Sync] Past threshold -- Syncing Categories.", v43, 2u);
          MEMORY[0x1AD11B340](v43, -1, -1);
          uint64_t v44 = *((void *)v0 + 12);
        }
        else
        {
          uint64_t v44 = v41;
          uint64_t v41 = *((void *)v0 + 12);
        }

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        id v45 = (uint64_t (*)(void))*((void *)v0 + 1);
        goto LABEL_27;
      }
      swift_retain_n();
      uint64_t v33 = sub_1ACE75498();
      os_log_type_t v34 = sub_1ACE76C08();
      if (os_log_type_enabled(v33, v34))
      {
        os_log_type_t type = v34;
        uint64_t v35 = *((void *)v0 + 10);
        uint64_t v36 = *((void *)v0 + 6);
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(double *)&uint64_t v47 = COERCE_DOUBLE(swift_slowAlloc());
        double v50 = *(double *)&v47;
        *(_DWORD *)uint64_t v37 = 136315138;
        v49(v35, v31, v36);
        sub_1ACDA7240((unint64_t *)&qword_1EB76A950, MEMORY[0x1E4F27928]);
        uint64_t v38 = sub_1ACE777C8();
        unint64_t v40 = v39;
        v32(v35, v36);
        *((void *)v0 + 3) = sub_1ACA3189C(v38, v40, (uint64_t *)&v50);
        sub_1ACE76FF8();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1AC9D5000, v33, type, "[Categories Sync] Not syncing because not past threshold -- last synced at: %s.", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD11B340](v47, -1, -1);
        MEMORY[0x1AD11B340](v37, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      uint64_t v17 = (void *)*((void *)v0 + 12);
      sub_1ACDA70BC();
      swift_allocError();
      char v19 = 1;
    }
    else
    {
      if (qword_1EB76A5E8 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1ACE754C8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EB76A5D0);
      uint64_t v14 = sub_1ACE75498();
      os_log_type_t v15 = sub_1ACE76BE8();
      if (os_log_type_enabled(v14, v15))
      {
        char v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v16 = 0;
        _os_log_impl(&dword_1AC9D5000, v14, v15, "[Categories Sync] Received a negative threshold value. Not syncing. ", v16, 2u);
        MEMORY[0x1AD11B340](v16, -1, -1);
      }
      uint64_t v17 = (void *)*((void *)v0 + 12);

      sub_1ACDA70BC();
      swift_allocError();
      char v19 = 3;
    }
    char *v18 = v19;
  }
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v45 = (uint64_t (*)(void))*((void *)v0 + 1);
LABEL_27:
  return v45();
}

uint64_t sub_1ACDA6314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  BOOL v7 = (void *)(a3 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);
  uint64_t v8 = *(void *)(a3 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider + 24);
  uint64_t v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1ACCA53B8;
  *(void *)(v10 + 24) = v6;
  id v11 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  v11(sub_1ACDA70B4, v10, v8, v9);
  return swift_release();
}

void sub_1ACDA640C(uint64_t a1, void (*a2)(unint64_t, uint64_t))
{
  unint64_t v3 = *(void *)a1;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    id v4 = (id)v3;
    if (qword_1EB76A5E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1ACE754C8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB76A5D0);
    id v6 = (id)v3;
    BOOL v7 = sub_1ACE75498();
    os_log_type_t v8 = sub_1ACE76BE8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      uint64_t v19 = sub_1ACE74D68();
      sub_1ACE76FF8();
      void *v10 = v19;
      sub_1ACAC1E88((id)v3, 1);
      _os_log_impl(&dword_1AC9D5000, v7, v8, "[Categories Sync] Failed to fetch categories with error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB76E310);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v10, -1, -1);
      MEMORY[0x1AD11B340](v9, -1, -1);
    }
    else
    {
      sub_1ACAC1E88((id)v3, 1);
    }

    id v11 = (id)v3;
    a2(v3, 1);
    sub_1ACAC1E88((id)v3, 1);
    sub_1ACAC1E88((id)v3, 1);
    return;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1ACE77508();
    sub_1ACAC1E88((id)v3, 0);
    if (v12 >= 1) {
      goto LABEL_8;
    }
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_8:
    a2(v3, 0);
    return;
  }
  if (qword_1EB76A5E8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1ACE754C8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB76A5D0);
  uint64_t v14 = sub_1ACE75498();
  os_log_type_t v15 = sub_1ACE76BE8();
  if (os_log_type_enabled(v14, v15))
  {
    char v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v16 = 0;
    _os_log_impl(&dword_1AC9D5000, v14, v15, "[Categories Sync] Server response is missing categories.", v16, 2u);
    MEMORY[0x1AD11B340](v16, -1, -1);
  }

  sub_1ACDA70BC();
  uint64_t v17 = (void *)swift_allocError();
  unsigned char *v18 = 2;
  a2((unint64_t)v17, 1);
}

uint64_t sub_1ACDA677C(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1ACE77508();
      uint64_t v5 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        uint64_t v7 = OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx;
        unint64_t v20 = a2 & 0xC000000000000001;
        uint64_t v21 = OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoryIngester;
        unint64_t v8 = a2;
        do
        {
          if (v20)
          {
            uint64_t v13 = MEMORY[0x1AD119490](v6, a2);
          }
          else
          {
            uint64_t v13 = *(void *)(a2 + 8 * v6 + 32);
            swift_retain();
          }
          unint64_t v15 = *(void *)(v13 + 16);
          unint64_t v14 = *(void *)(v13 + 24);
          id v16 = *(id *)(v4 + v7);
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_1ACD1C588(v15, v14);
          swift_bridgeObjectRelease();
          NSManagedObjectContext.unsafeCategory(forAdamID:)(v17);
          uint64_t v19 = v18;

          if (v19)
          {
            id v11 = objc_msgSend((id)swift_unknownObjectRetain(), sel_unsafeIngestCategoryWithCategory_feedCategory_ctx_, v19, v13, *(void *)(v4 + v7));

            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v9 = *(void **)(v4 + v21);
            uint64_t v10 = *(void **)(v4 + v7);
            swift_unknownObjectRetain();
            id v11 = v10;
            id v12 = objc_msgSend(v9, sel_unsafeIngestNewCategoryWithCtx_feedCategory_, v11, v13);
            swift_unknownObjectRelease();
          }
          ++v6;

          swift_release();
          a2 = v8;
        }
        while (v5 != v6);
      }
    }
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_ctx), sel_saveInCurrentBlock);
    return swift_release();
  }
  return result;
}

uint64_t CategoriesSyncUtil.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate;
  uint64_t v2 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);

  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t CategoriesSyncUtil.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_lastCategoriesSyncDate;
  uint64_t v2 = sub_1ACE750A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesSyncThresholdProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC18PodcastsFoundation18CategoriesSyncUtil_categoriesProvider);

  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1ACDA6B94()
{
  unint64_t result = qword_1E99F5B88;
  if (!qword_1E99F5B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E99F5B88);
  }
  return result;
}

uint64_t sub_1ACDA6BE8()
{
  return type metadata accessor for CategoriesSyncUtil();
}

uint64_t type metadata accessor for CategoriesSyncUtil()
{
  uint64_t result = qword_1EB76F2A8;
  if (!qword_1EB76F2A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1ACDA6C3C()
{
  uint64_t result = sub_1ACE750A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CategoriesSyncUtil(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategoriesSyncUtil);
}

uint64_t dispatch thunk of CategoriesSyncUtil.__allocating_init(categoriesSyncThresholdProvider:categoriesProvider:categoryIngester:lastCategoriesSyncDate:queue:ctx:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

unsigned char *storeEnumTagSinglePayload for CategoriesSyncUtil.CategoriesSyncError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1ACDA6DF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoriesSyncUtil.CategoriesSyncError()
{
  return &type metadata for CategoriesSyncUtil.CategoriesSyncError;
}

uint64_t sub_1ACDA6E2C(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1ACDA5420(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1ACDA6E38@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ACDA4E08(a1);
}

uint64_t sub_1ACDA6E40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDA6E78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ACDA4F34(a1, v2, a2);
}

uint64_t sub_1ACDA6E80(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1ACDA6EAC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACDA6EEC(void **a1)
{
  sub_1ACDA5044(a1, *(void (**)(void, void *))(v1 + 16));
}

uint64_t sub_1ACDA6EF4()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1ACDA6F3C()
{
  sub_1ACDA5224(*(void *)(v0 + 16), *(void (**)(uint64_t, void))(v0 + 24));
}

uint64_t sub_1ACDA6F48()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDA6F80()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACDA6FC0()
{
  return sub_1ACDA677C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1ACDA6FC8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ACDA7010(uint64_t a1, uint64_t a2)
{
  sub_1ACDA3A98(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1ACDA701C()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDA7064()
{
  return sub_1ACDA3BA4(*(void (**)(__n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1ACDA7074()
{
  uint64_t v1 = *(uint64_t (**)(char *))(v0 + 16);
  char v3 = 0;
  return v1(&v3);
}

uint64_t sub_1ACDA70AC(uint64_t a1, uint64_t a2)
{
  return sub_1ACDA6314(a1, a2, v2);
}

void sub_1ACDA70B4(uint64_t a1)
{
  sub_1ACDA640C(a1, *(void (**)(unint64_t, uint64_t))(v1 + 16));
}

unint64_t sub_1ACDA70BC()
{
  unint64_t result = qword_1EB771268;
  if (!qword_1EB771268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB771268);
  }
  return result;
}

uint64_t sub_1ACDA7110()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ACDA7158()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1ACA50B84;
  *(_OWORD *)(v2 + 16) = v3;
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1ACDA5630;
  return sub_1ACDA5840();
}

uint64_t sub_1ACDA7240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1ACDA72B4()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t NSManagedObjectContext.episodes(for:sortDescriptors:limit:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  sub_1ACE761B8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v8 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  id v10 = Array<A>.episodeCoreDataPredicate()(a1);
  objc_msgSend(v9, sel_setPredicate_, v10);

  if (!(a2 >> 62))
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1ACE77508();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_3:
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB768EB0);
    id v11 = (void *)sub_1ACE76558();
    objc_msgSend(v9, sel_setSortDescriptors_, v11);
  }
LABEL_4:
  if ((a4 & 1) == 0) {
    objc_msgSend(v9, sel_setFetchLimit_, a3);
  }
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7669E0);
  uint64_t v12 = sub_1ACE76EE8();

  return v12;
}

uint64_t NSManagedObjectContext.episodes<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a4;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a1;
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v10 = (void *)sub_1ACE76CF8();
  uint64_t v11 = NSManagedObjectContext.performAndPublish<A>(queue:_:)(v10, (uint64_t)sub_1ACDA7838, (uint64_t)v9, a4);
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1ACDA75E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ACDA7618(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1AD11B470](v3);
  if (!v4) {
    return a2(MEMORY[0x1E4FBC860]);
  }
  uint64_t v5 = (void *)v4;
  uint64_t v6 = self;
  id v7 = @"MTEpisode";
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1ACB02BC0(v8);
  swift_bridgeObjectRelease();
  id v9 = (void *)sub_1ACE76978();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v6, sel_predicateForEpisodeUuids_, v9);

  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v12 = (void *)sub_1ACE76558();
  id v13 = objc_msgSend(v5, sel_objectsInEntity_predicate_sortDescriptors_returnsObjectsAsFaults_, v7, v10, v12, 1);

  if (v13)
  {
    sub_1ACA50D4C(0, (unint64_t *)&qword_1EB772590);
    unint64_t v14 = sub_1ACE76578();

    uint64_t v15 = sub_1ACC2BAC4(v14);
    swift_bridgeObjectRelease();
    if (v15) {
      uint64_t v11 = v15;
    }
  }
  a2(v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDA77F0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ACDA7838()
{
  return sub_1ACDA7618(*(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

void sub_1ACDA7848(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE76E78();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = (double)a2 * 0.1;
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v29 = v8;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  id v22 = (int *)v18;
  uint64_t v23 = a2 - (unint64_t)v18;
  if (a2 >= (unint64_t)v18)
  {
    sub_1ACE76E88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D78);
    swift_allocObject();
    uint64_t *v21 = sub_1ACDBB250(v23, (uint64_t)v17);
    uint64_t v24 = v20;
    uint64_t v25 = v20;
    uint64_t v26 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v29);
    sub_1ACDA7FC8(v11, v22, (uint64_t)v14);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v26);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F53D8);
    sub_1ACA50E14((uint64_t)v14, (uint64_t)v21 + *(int *)(v27 + 60), &qword_1E99F5428);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1ACDA7AC8(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE76E78();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = (double)a2 * 0.1;
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v29 = v8;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  id v22 = (int *)v18;
  uint64_t v23 = a2 - (unint64_t)v18;
  if (a2 >= (unint64_t)v18)
  {
    sub_1ACE76E88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F388);
    swift_allocObject();
    uint64_t *v21 = sub_1ACDBB668(v23, (uint64_t)v17);
    uint64_t v24 = v20;
    uint64_t v25 = v20;
    uint64_t v26 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v29);
    sub_1ACDA8E08(v11, v22, (uint64_t)v14);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v26);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
    sub_1ACA50E14((uint64_t)v14, (uint64_t)v21 + *(int *)(v27 + 60), &qword_1EB76EFA8);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1ACDA7D48(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1ACE76E78();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = (double)a2 * 0.1;
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v29 = v8;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  id v22 = (int *)v18;
  uint64_t v23 = a2 - (unint64_t)v18;
  if (a2 >= (unint64_t)v18)
  {
    sub_1ACE76E88();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EB76F3A0);
    swift_allocObject();
    uint64_t *v21 = sub_1ACDBB45C(v23, (uint64_t)v17);
    uint64_t v24 = v20;
    uint64_t v25 = v20;
    uint64_t v26 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v29);
    sub_1ACDA86E8(v11, v22, (uint64_t)v14);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v26);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
    sub_1ACA50E14((uint64_t)v14, (uint64_t)v21 + *(int *)(v27 + 60), qword_1EB76EFB0);
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1ACDA7FC8@<X0>(char *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = sub_1ACE74F28();
  unint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v5 - 8);
  uint64_t v6 = v49;
  MEMORY[0x1F4188790](v5);
  double v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  MEMORY[0x1F4188790](v8 - 8);
  char v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1ACE76CE8();
  uint64_t v48 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1ACE75E48();
  __n128 v14 = MEMORY[0x1F4188790](v13 - 8);
  id v56 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))*((void *)v6 + 2);
  unint64_t v46 = a1;
  v56(a3, (uint64_t)a1, v5, v14);
  uint64_t v53 = (void *)((char *)v6 + 16);
  uint64_t v47 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE75E28();
  uint64_t v57 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v11, *MEMORY[0x1E4FBCC58], v52);
  uint64_t v15 = sub_1ACE76D28();
  uint64_t v52 = v15;
  uint64_t v16 = (uint64_t)v51;
  sub_1ACE759D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D78);
  swift_allocObject();
  uint64_t v17 = sub_1ACDBB148((uint64_t)v54, v16);
  char v51 = (char *)v17;
  double v18 = v50;
  ((void (*)(char *, char *, uint64_t))v56)(v50, a1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5540);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (void (*)(uint64_t, char *, uint64_t))*((void *)v49 + 4);
  v20(v19 + qword_1EB7859C8, v18, v5);
  unint64_t v49 = v20;
  uint64_t v21 = v19 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 4) = 1;
  *(void *)(v19 + qword_1EB772C00) = v15;
  *(void *)(v19 + qword_1EB772BF8) = v17;
  BOOL v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5428);
  uint64_t v22 = v55;
  *(void *)(v55 + v54[15]) = v19;
  uint64_t v23 = v18;
  uint64_t v24 = v18;
  uint64_t v25 = v46;
  uint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v56;
  ((void (*)(char *, char *, uint64_t))v56)(v24, v46, v5);
  uint64_t v27 = swift_allocObject();
  v20(v27 + qword_1EB7859C8, v23, v5);
  uint64_t v28 = v27 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v28 = 512;
  *(unsigned char *)(v28 + 4) = 0;
  uint64_t v29 = v51;
  uint64_t v30 = v52;
  *(void *)(v27 + qword_1EB772C00) = v52;
  *(void *)(v27 + qword_1EB772BF8) = v29;
  *(void *)(v22 + v54[16]) = v27;
  v26(v23, (uint64_t)v25, v5);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v5;
  uint64_t v33 = v49;
  v49(v31 + qword_1EB7859C8, v23, v5);
  uint64_t v34 = v31 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v34 = 1024;
  *(unsigned char *)(v34 + 4) = 0;
  *(void *)(v31 + qword_1EB772C00) = v30;
  uint64_t v35 = v51;
  *(void *)(v31 + qword_1EB772BF8) = v51;
  uint64_t v37 = v54;
  uint64_t v36 = v55;
  *(void *)(v55 + v54[17]) = v31;
  ((void (*)(char *, char *, uint64_t))v56)(v23, v25, v32);
  uint64_t v38 = swift_allocObject();
  v33(v38 + qword_1EB7859C8, v23, v32);
  uint64_t v39 = v38 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v39 = 2048;
  *(unsigned char *)(v39 + 4) = 0;
  unint64_t v40 = (void *)v52;
  *(void *)(v38 + qword_1EB772C00) = v52;
  *(void *)(v38 + qword_1EB772BF8) = v35;
  *(void *)(v36 + v37[18]) = v38;
  uint64_t v41 = swift_allocObject();
  v33(v41 + qword_1EB7859C8, v25, v32);
  uint64_t v42 = v41 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v42 = 0x8000;
  *(unsigned char *)(v42 + 4) = 0;
  *(void *)(v41 + qword_1EB772C00) = v40;
  *(void *)(v41 + qword_1EB772BF8) = v35;
  *(void *)(v36 + v37[19]) = v41;
  swift_retain_n();
  id v43 = v40;
  return v43;
}

id sub_1ACDA86E8@<X0>(char *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = sub_1ACE74F28();
  unint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v5 - 8);
  uint64_t v6 = v49;
  MEMORY[0x1F4188790](v5);
  double v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  MEMORY[0x1F4188790](v8 - 8);
  char v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1ACE76CE8();
  uint64_t v48 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1ACE75E48();
  __n128 v14 = MEMORY[0x1F4188790](v13 - 8);
  id v56 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))*((void *)v6 + 2);
  unint64_t v46 = a1;
  v56(a3, (uint64_t)a1, v5, v14);
  uint64_t v53 = (void *)((char *)v6 + 16);
  uint64_t v47 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE75E28();
  uint64_t v57 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v11, *MEMORY[0x1E4FBCC58], v52);
  uint64_t v15 = sub_1ACE76D28();
  uint64_t v52 = v15;
  uint64_t v16 = (uint64_t)v51;
  sub_1ACE759D8();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76F3A0);
  swift_allocObject();
  uint64_t v17 = sub_1ACDBB354((uint64_t)v54, v16);
  char v51 = (char *)v17;
  double v18 = v50;
  ((void (*)(char *, char *, uint64_t))v56)(v50, a1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F260);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (void (*)(uint64_t, char *, uint64_t))*((void *)v49 + 4);
  v20(v19 + qword_1EB7859C8, v18, v5);
  unint64_t v49 = v20;
  uint64_t v21 = v19 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 4) = 1;
  *(void *)(v19 + qword_1EB772C00) = v15;
  *(void *)(v19 + qword_1EB772BF8) = v17;
  BOOL v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  uint64_t v22 = v55;
  *(void *)(v55 + v54[15]) = v19;
  uint64_t v23 = v18;
  uint64_t v24 = v18;
  uint64_t v25 = v46;
  uint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v56;
  ((void (*)(char *, char *, uint64_t))v56)(v24, v46, v5);
  uint64_t v27 = swift_allocObject();
  v20(v27 + qword_1EB7859C8, v23, v5);
  uint64_t v28 = v27 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v28 = 512;
  *(unsigned char *)(v28 + 4) = 0;
  uint64_t v29 = v51;
  uint64_t v30 = v52;
  *(void *)(v27 + qword_1EB772C00) = v52;
  *(void *)(v27 + qword_1EB772BF8) = v29;
  *(void *)(v22 + v54[16]) = v27;
  v26(v23, (uint64_t)v25, v5);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v5;
  uint64_t v33 = v49;
  v49(v31 + qword_1EB7859C8, v23, v5);
  uint64_t v34 = v31 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v34 = 1024;
  *(unsigned char *)(v34 + 4) = 0;
  *(void *)(v31 + qword_1EB772C00) = v30;
  uint64_t v35 = v51;
  *(void *)(v31 + qword_1EB772BF8) = v51;
  uint64_t v37 = v54;
  uint64_t v36 = v55;
  *(void *)(v55 + v54[17]) = v31;
  ((void (*)(char *, char *, uint64_t))v56)(v23, v25, v32);
  uint64_t v38 = swift_allocObject();
  v33(v38 + qword_1EB7859C8, v23, v32);
  uint64_t v39 = v38 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v39 = 2048;
  *(unsigned char *)(v39 + 4) = 0;
  unint64_t v40 = (void *)v52;
  *(void *)(v38 + qword_1EB772C00) = v52;
  *(void *)(v38 + qword_1EB772BF8) = v35;
  *(void *)(v36 + v37[18]) = v38;
  uint64_t v41 = swift_allocObject();
  v33(v41 + qword_1EB7859C8, v25, v32);
  uint64_t v42 = v41 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v42 = 0x8000;
  *(unsigned char *)(v42 + 4) = 0;
  *(void *)(v41 + qword_1EB772C00) = v40;
  *(void *)(v41 + qword_1EB772BF8) = v35;
  *(void *)(v36 + v37[19]) = v41;
  swift_retain_n();
  id v43 = v40;
  return v43;
}

id sub_1ACDA8E08@<X0>(char *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = sub_1ACE74F28();
  unint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v5 - 8);
  uint64_t v6 = v49;
  MEMORY[0x1F4188790](v5);
  double v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  MEMORY[0x1F4188790](v8 - 8);
  char v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1ACE76CE8();
  uint64_t v48 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1ACE75E48();
  __n128 v14 = MEMORY[0x1F4188790](v13 - 8);
  id v56 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))*((void *)v6 + 2);
  unint64_t v46 = a1;
  v56(a3, (uint64_t)a1, v5, v14);
  uint64_t v53 = (void *)((char *)v6 + 16);
  uint64_t v47 = sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_1ACE77268();
  swift_bridgeObjectRelease();
  sub_1ACE75E28();
  uint64_t v57 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v11, *MEMORY[0x1E4FBCC58], v52);
  uint64_t v15 = sub_1ACE76D28();
  uint64_t v52 = v15;
  uint64_t v16 = (uint64_t)v51;
  sub_1ACE759D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F388);
  swift_allocObject();
  uint64_t v17 = sub_1ACDBB560((uint64_t)v54, v16);
  char v51 = (char *)v17;
  double v18 = v50;
  ((void (*)(char *, char *, uint64_t))v56)(v50, a1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F248);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (void (*)(uint64_t, char *, uint64_t))*((void *)v49 + 4);
  v20(v19 + qword_1EB7859C8, v18, v5);
  unint64_t v49 = v20;
  uint64_t v21 = v19 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 4) = 1;
  *(void *)(v19 + qword_1EB772C00) = v15;
  *(void *)(v19 + qword_1EB772BF8) = v17;
  BOOL v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  uint64_t v22 = v55;
  *(void *)(v55 + v54[15]) = v19;
  uint64_t v23 = v18;
  uint64_t v24 = v18;
  uint64_t v25 = v46;
  uint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v56;
  ((void (*)(char *, char *, uint64_t))v56)(v24, v46, v5);
  uint64_t v27 = swift_allocObject();
  v20(v27 + qword_1EB7859C8, v23, v5);
  uint64_t v28 = v27 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v28 = 512;
  *(unsigned char *)(v28 + 4) = 0;
  uint64_t v29 = v51;
  uint64_t v30 = v52;
  *(void *)(v27 + qword_1EB772C00) = v52;
  *(void *)(v27 + qword_1EB772BF8) = v29;
  *(void *)(v22 + v54[16]) = v27;
  v26(v23, (uint64_t)v25, v5);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v5;
  uint64_t v33 = v49;
  v49(v31 + qword_1EB7859C8, v23, v5);
  uint64_t v34 = v31 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v34 = 1024;
  *(unsigned char *)(v34 + 4) = 0;
  *(void *)(v31 + qword_1EB772C00) = v30;
  uint64_t v35 = v51;
  *(void *)(v31 + qword_1EB772BF8) = v51;
  uint64_t v37 = v54;
  uint64_t v36 = v55;
  *(void *)(v55 + v54[17]) = v31;
  ((void (*)(char *, char *, uint64_t))v56)(v23, v25, v32);
  uint64_t v38 = swift_allocObject();
  v33(v38 + qword_1EB7859C8, v23, v32);
  uint64_t v39 = v38 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v39 = 2048;
  *(unsigned char *)(v39 + 4) = 0;
  unint64_t v40 = (void *)v52;
  *(void *)(v38 + qword_1EB772C00) = v52;
  *(void *)(v38 + qword_1EB772BF8) = v35;
  *(void *)(v36 + v37[18]) = v38;
  uint64_t v41 = swift_allocObject();
  v33(v41 + qword_1EB7859C8, v25, v32);
  uint64_t v42 = v41 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v42 = 0x8000;
  *(unsigned char *)(v42 + 4) = 0;
  *(void *)(v41 + qword_1EB772C00) = v40;
  *(void *)(v41 + qword_1EB772BF8) = v35;
  *(void *)(v36 + v37[19]) = v41;
  swift_retain_n();
  id v43 = v40;
  return v43;
}

id sub_1ACDA9528(uint64_t a1)
{
  uint64_t v49 = type metadata accessor for ShazamSignatureRequest();
  MEMORY[0x1F4188790](v49);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = sub_1ACE74F28();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  uint64_t v51 = v9;
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v45 - v11;
  sub_1ACDC8490((uint64_t)&v45 - v11);
  id v13 = objc_msgSend(self, sel_defaultManager);
  sub_1ACE74EC8();
  __n128 v14 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_contentsAtPath_, v14);

  if (v15)
  {
    uint64_t v17 = sub_1ACE74F88();
    unint64_t v19 = v18;

    uint64_t v48 = v17;
    id v23 = ShazamSignatureRequest.decode(_:)(v17, v19);
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1ACE754C8();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EB772ED0);
    sub_1ACDBCBEC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    uint64_t v36 = sub_1ACE75498();
    os_log_type_t v37 = sub_1ACE76BD8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = v12;
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      unint64_t v46 = v19;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v53 = (void *)v40;
      uint64_t v47 = v39 + 4;
      uint64_t v41 = (uint64_t *)&v7[*(int *)(v49 + 24)];
      uint64_t v43 = *v41;
      unint64_t v42 = v41[1];
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1ACA3189C(v43, v42, (uint64_t *)&v53);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACDBEF70((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
      _os_log_impl(&dword_1AC9D5000, v36, v37, "Cache hit for asset at %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v40, -1, -1);
      MEMORY[0x1AD11B340](v39, -1, -1);
      sub_1ACA50850(v48, v46);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v50);
    }
    else
    {
      sub_1ACA50850(v48, v19);

      sub_1ACDBEF70((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v50);
    }
  }
  else
  {
    uint64_t v47 = (uint8_t *)v12;
    MEMORY[0x1F4188790](v16);
    *(&v45 - 2) = a1;
    uint64_t v21 = (uint64_t)&v20[4];
    uint64_t v22 = v20 + 10;
    os_unfair_lock_lock(v20 + 10);
    sub_1ACDBF83C(v21, &v53);
    os_unfair_lock_unlock(v22);
    id v23 = v53;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB772ED0);
    sub_1ACDBCBEC(a1, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    id v25 = v23;
    uint64_t v26 = sub_1ACE75498();
    os_log_type_t v27 = sub_1ACE76BD8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v53 = (void *)v29;
      *(_DWORD *)uint64_t v28 = 136315394;
      if (v23) {
        uint64_t v30 = 7629160;
      }
      else {
        uint64_t v30 = 1936943469;
      }
      if (v23) {
        unint64_t v31 = 0xE300000000000000;
      }
      else {
        unint64_t v31 = 0xE400000000000000;
      }
      uint64_t v52 = sub_1ACA3189C(v30, v31, (uint64_t *)&v53);
      sub_1ACE76FF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v32 = (uint64_t *)&v3[*(int *)(v49 + 24)];
      uint64_t v33 = *v32;
      unint64_t v34 = v32[1];
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1ACA3189C(v33, v34, (uint64_t *)&v53);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACDBEF70((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
      _os_log_impl(&dword_1AC9D5000, v26, v27, "Cache %s for asset at %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v29, -1, -1);
      MEMORY[0x1AD11B340](v28, -1, -1);
    }
    else
    {

      sub_1ACDBEF70((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
    }
    (*(void (**)(uint8_t *, uint64_t))(v51 + 8))(v47, v50);
  }
  return v23;
}

double sub_1ACDA9F90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = type metadata accessor for TTMLRequest();
  MEMORY[0x1F4188790](v64);
  uint64_t v5 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v58 - v8;
  uint64_t v10 = sub_1ACE74F28();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v58 - v12;
  sub_1ACDC8478((uint64_t)v58 - v12);
  id v14 = objc_msgSend(self, sel_defaultManager);
  uint64_t v67 = v13;
  sub_1ACE74EC8();
  id v15 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_contentsAtPath_, v15);

  if (v16)
  {
    unint64_t v18 = sub_1ACE74F88();
    unint64_t v20 = v19;

    TranscriptParser.parse(ttmlData:)((uint64_t)v18, v20, (uint64_t)&v70);
    uint64_t v61 = v20;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1ACE754C8();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EB772ED0);
    sub_1ACDBCBEC(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    uint64_t v44 = sub_1ACE75498();
    os_log_type_t v45 = sub_1ACE76BD8();
    if (os_log_type_enabled(v44, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v62 = v18;
      uint64_t v48 = v47;
      uint64_t v49 = a2;
      *(_DWORD *)unint64_t v46 = 136315138;
      v69[0] = v47;
      uint64_t v50 = (uint64_t *)&v9[*(int *)(v64 + 24)];
      uint64_t v51 = *v50;
      unint64_t v52 = v50[1];
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1ACA3189C(v51, v52, v69);
      sub_1ACE76FF8();
      a2 = v49;
      swift_bridgeObjectRelease();
      sub_1ACDBEF70((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
      _os_log_impl(&dword_1AC9D5000, v44, v45, "Cache hit for asset at %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v48, -1, -1);
      MEMORY[0x1AD11B340](v46, -1, -1);
      sub_1ACA50850((uint64_t)v62, v61);
    }
    else
    {
      sub_1ACA50850((uint64_t)v18, v61);

      sub_1ACDBEF70((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v66);
    uint64_t v57 = v71[0];
    *(_OWORD *)a2 = v70;
    *(void *)(a2 + 16) = v57;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)&v71[8];
    double result = *(double *)&v71[24];
    *(_OWORD *)(a2 + 40) = *(_OWORD *)&v71[24];
  }
  else
  {
    uint64_t v63 = (_OWORD *)a2;
    MEMORY[0x1F4188790](v17);
    v58[-2] = a1;
    uint64_t v22 = (uint64_t)&v21[4];
    id v23 = v21 + 10;
    os_unfair_lock_lock(v21 + 10);
    sub_1ACDC1DA8(v22, (uint64_t)&v70);
    os_unfair_lock_unlock(v23);
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1ACE754C8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB772ED0);
    long long v25 = v70;
    long long v26 = *(_OWORD *)v71;
    long long v27 = *(_OWORD *)&v71[16];
    uint64_t v28 = a1;
    uint64_t v29 = (uint64_t)v5;
    sub_1ACDBCBEC(v28, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
    sub_1ACC79A74(v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1));
    sub_1ACC79A74(v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1));
    uint64_t v30 = sub_1ACE75498();
    os_log_type_t v31 = sub_1ACE76BD8();
    int v32 = v31;
    uint64_t v62 = v30;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v59 = v29;
      uint64_t v34 = v33;
      uint64_t v61 = swift_slowAlloc();
      v69[0] = v61;
      *(_DWORD *)uint64_t v34 = 136315394;
      if (*((void *)&v27 + 1)) {
        uint64_t v35 = 7629160;
      }
      else {
        uint64_t v35 = 1936943469;
      }
      if (*((void *)&v27 + 1)) {
        unint64_t v36 = 0xE300000000000000;
      }
      else {
        unint64_t v36 = 0xE400000000000000;
      }
      LODWORD(v60) = v32;
      uint64_t v68 = sub_1ACA3189C(v35, v36, v69);
      v58[1] = v69;
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACC79A20(v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1));
      sub_1ACC79A20(v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1));
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v37 = v59;
      uint64_t v38 = (uint64_t *)(v59 + *(int *)(v64 + 24));
      uint64_t v39 = *v38;
      unint64_t v40 = v38[1];
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1ACA3189C(v39, v40, v69);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      sub_1ACDBEF70(v37, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
      uint64_t v41 = v62;
      _os_log_impl(&dword_1AC9D5000, v62, (os_log_type_t)v60, "Cache %s for asset at %s", (uint8_t *)v34, 0x16u);
      unint64_t v42 = v61;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v42, -1, -1);
      MEMORY[0x1AD11B340](v34, -1, -1);
    }
    else
    {

      sub_1ACDBEF70(v29, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
      sub_1ACC79A20(v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1));
      sub_1ACC79A20(v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1));
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v66);
    uint64_t v53 = *(void *)&v71[32];
    long long v54 = *(_OWORD *)v71;
    uint64_t v55 = v63;
    *uint64_t v63 = v70;
    v55[1] = v54;
    double result = *(double *)&v71[16];
    v55[2] = *(_OWORD *)&v71[16];
    *((void *)v55 + 6) = v53;
  }
  return result;
}

uint64_t sub_1ACDAAB08(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t, __n128), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v55 = a5;
  uint64_t v53 = a4;
  v58[1] = *(id *)MEMORY[0x1E4F143B8];
  os_log_t v51 = (os_log_t)a2(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v54 = (uint64_t)&v50 - v8;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v56 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v50 - v14;
  uint64_t v52 = a1;
  a3(v5 + qword_1EB7859C8, v13);
  id v16 = self;
  id v17 = objc_msgSend(v16, sel_defaultManager);
  sub_1ACE74EC8();
  unint64_t v18 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  unsigned int v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

  if (!v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  id v20 = objc_msgSend(v16, sel_defaultManager);
  uint64_t v21 = (void *)sub_1ACE74E18();
  v58[0] = 0;
  unsigned __int8 v22 = objc_msgSend(v20, sel_removeItemAtURL_error_, v21, v58);

  if (v22)
  {
    id v23 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    id v24 = v58[0];
    return v23(v15, v9);
  }
  else
  {
    id v26 = v58[0];
    long long v27 = (void *)sub_1ACE74D78();

    swift_willThrow();
    uint64_t v28 = v9;
    if (qword_1EB772EF0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1ACE754C8();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB772ED0);
    uint64_t v30 = v54;
    sub_1ACDBCBEC(v52, v54, v53);
    os_log_type_t v31 = v56;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v15, v9);
    int v32 = sub_1ACE75498();
    os_log_type_t v33 = sub_1ACE76BE8();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v53 = (uint64_t (*)(void))swift_slowAlloc();
      v58[0] = v53;
      *(_DWORD *)uint64_t v35 = 136315394;
      LODWORD(v52) = v34;
      unint64_t v36 = (uint64_t *)(v30 + SLODWORD(v51[3].isa));
      os_log_t v51 = v32;
      uint64_t v37 = v28;
      uint64_t v38 = v27;
      uint64_t v39 = v30;
      uint64_t v40 = *v36;
      unint64_t v41 = v36[1];
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1ACA3189C(v40, v41, (uint64_t *)v58);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      uint64_t v42 = v39;
      long long v27 = v38;
      uint64_t v28 = v37;
      sub_1ACDBEF70(v42, v55);
      *(_WORD *)(v35 + 12) = 2080;
      sub_1ACDBD8E8((unint64_t *)&qword_1EB771B10, MEMORY[0x1E4F276F0]);
      uint64_t v43 = v56;
      uint64_t v44 = sub_1ACE777C8();
      uint64_t v57 = sub_1ACA3189C(v44, v45, (uint64_t *)v58);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      unint64_t v46 = *(void (**)(char *, uint64_t))(v10 + 8);
      v46(v43, v28);
      os_log_t v47 = v51;
      _os_log_impl(&dword_1AC9D5000, v51, (os_log_type_t)v52, "Error deleting file for key %s, url: %s", (uint8_t *)v35, 0x16u);
      uint64_t v48 = v53;
      swift_arrayDestroy();
      MEMORY[0x1AD11B340](v48, -1, -1);
      MEMORY[0x1AD11B340](v35, -1, -1);
    }
    else
    {
      sub_1ACDBEF70(v30, v55);
      unint64_t v46 = *(void (**)(char *, uint64_t))(v10 + 8);
      v46(v31, v28);
    }
    sub_1ACBC1CE8();
    swift_allocError();
    *uint64_t v49 = 1;
    swift_willThrow();

    return ((uint64_t (*)(char *, uint64_t))v46)(v15, v28);
  }
}

uint64_t sub_1ACDAB084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v51 = a4;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v40);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16A8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16B0);
  uint64_t v46 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16B8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  uint64_t v48 = v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v41 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16C0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  uint64_t v50 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v43 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v20 = v19 - 8;
  uint64_t v36 = *(void *)(v19 - 8);
  uint64_t v35 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v19);
  unsigned __int8 v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ShazamSignatureRequest;
  sub_1ACDBCBEC(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4((uint64_t)&v22[*(int *)(v20 + 44)], (uint64_t)v53, &qword_1EB772EA0);
  uint64_t v37 = type metadata accessor for ShazamSignatureRequest;
  sub_1ACDBEF70((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v39 = a1;
  sub_1ACA3AAD4(a1, (uint64_t)v6, &qword_1EB7731B0);
  sub_1ACE759C8();
  sub_1ACE74898();
  sub_1ACE75988();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1ACDBCBEC(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v23 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = v23 | 7;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v45;
  *(void *)(v24 + 16) = v44;
  *(void *)(v24 + 24) = v25;
  sub_1ACDBED20((uint64_t)v22, v24 + ((v23 + 32) & ~v23), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F16C8, &qword_1E99F16B0);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  long long v27 = v41;
  uint64_t v26 = v42;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v26);
  sub_1ACA3AAD4((uint64_t)v53, (uint64_t)v52, &qword_1EB772EA0);
  uint64_t v28 = swift_allocObject();
  sub_1ACA50E14((uint64_t)v52, v28 + 16, &qword_1EB772EA0);
  sub_1ACA51EA4(&qword_1E99F16D0, &qword_1E99F16B8);
  uint64_t v29 = v43;
  uint64_t v30 = v47;
  sub_1ACE75B38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v30);
  sub_1ACDBCBEC(v39, (uint64_t)v22, (uint64_t (*)(void))v38);
  uint64_t v31 = swift_allocObject();
  sub_1ACDBED20((uint64_t)v22, v31 + ((v23 + 16) & ~v23), (uint64_t (*)(void))v37);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1ACDBF9B8;
  *(void *)(v32 + 24) = v31;
  sub_1ACA50D4C(0, &qword_1E99F13D0);
  sub_1ACA51EA4(&qword_1E99F16D8, &qword_1E99F16C0);
  uint64_t v33 = v49;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v33);
  return sub_1ACA50E78((uint64_t)v53, &qword_1EB772EA0);
}

uint64_t sub_1ACDAB7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v51 = a4;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7731B0);
  MEMORY[0x1F4188790](v40);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16A8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16B0);
  uint64_t v46 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16B8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  uint64_t v48 = v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v41 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F16C0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  uint64_t v50 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v43 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTMLRequest();
  uint64_t v20 = v19 - 8;
  uint64_t v36 = *(void *)(v19 - 8);
  uint64_t v35 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v19);
  unsigned __int8 v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for TTMLRequest;
  sub_1ACDBCBEC(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4((uint64_t)&v22[*(int *)(v20 + 44)], (uint64_t)v53, &qword_1EB772EA0);
  uint64_t v37 = type metadata accessor for TTMLRequest;
  sub_1ACDBEF70((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v39 = a1;
  sub_1ACA3AAD4(a1, (uint64_t)v6, &qword_1EB7731B0);
  sub_1ACE759C8();
  sub_1ACE74898();
  sub_1ACE75988();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1ACDBCBEC(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v23 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = v23 | 7;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v45;
  *(void *)(v24 + 16) = v44;
  *(void *)(v24 + 24) = v25;
  sub_1ACDBED20((uint64_t)v22, v24 + ((v23 + 32) & ~v23), (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  swift_retain();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F16C8, &qword_1E99F16B0);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  long long v27 = v41;
  uint64_t v26 = v42;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v26);
  sub_1ACA3AAD4((uint64_t)v53, (uint64_t)v52, &qword_1EB772EA0);
  uint64_t v28 = swift_allocObject();
  sub_1ACA50E14((uint64_t)v52, v28 + 16, &qword_1EB772EA0);
  sub_1ACA51EA4(&qword_1E99F16D0, &qword_1E99F16B8);
  uint64_t v29 = v43;
  uint64_t v30 = v47;
  sub_1ACE75B38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v30);
  sub_1ACDBCBEC(v39, (uint64_t)v22, (uint64_t (*)(void))v38);
  uint64_t v31 = swift_allocObject();
  sub_1ACDBED20((uint64_t)v22, v31 + ((v23 + 16) & ~v23), (uint64_t (*)(void))v37);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1ACDBFE4C;
  *(void *)(v32 + 24) = v31;
  sub_1ACA51EA4(&qword_1E99F16D8, &qword_1E99F16C0);
  uint64_t v33 = v49;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v33);
  return sub_1ACA50E78((uint64_t)v53, &qword_1EB772EA0);
}

uint64_t sub_1ACDABEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v32 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  uint64_t v5 = *(void *)(v32 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3;
  uint64_t v35 = a3;
  sub_1ACDBCBEC(a1, a3, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  uint64_t v9 = sub_1ACDAC954();
  sub_1ACDBCBEC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = v11 + v6;
  uint64_t v34 = v10 | 7;
  uint64_t v13 = swift_allocObject();
  uint64_t v33 = type metadata accessor for TranscriptsBackgroundSessionDescriptor;
  sub_1ACDBED20((uint64_t)v7, v13 + v11, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  id v14 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F6C8));
  uint64_t v36 = v9;
  uint64_t v15 = swift_retain();
  id v16 = sub_1ACDBD9E0(v15, (uint64_t)sub_1ACDBED88, v13, (uint64_t (*)(void))sub_1ACA3A8B4);
  swift_release();
  swift_release();
  uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  *(void *)(v8 + v17[11]) = v16;
  uint64_t v18 = self;
  uint64_t v38 = v32;
  id v19 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770100);
  sub_1ACE76228();
  uint64_t v20 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_backgroundSessionConfigurationWithIdentifier_, v20);

  sub_1ACDBCBEC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  unint64_t v22 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v23 + v11;
  uint64_t v25 = v33;
  sub_1ACDBED20((uint64_t)v7, v24, (uint64_t (*)(void))v33);
  *(void *)(v23 + v22) = v21;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E008);
  swift_allocObject();
  uint64_t v26 = sub_1ACE75A18();
  uint64_t v27 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v37, v27);
  uint64_t result = sub_1ACDBEF70(a1, (uint64_t (*)(void))v25);
  uint64_t v29 = v35;
  uint64_t v30 = v36;
  *(void *)(v35 + v17[12]) = v26;
  *(void *)(v29 + v17[13]) = v30;
  return result;
}

uint64_t sub_1ACDAC1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v32 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  uint64_t v5 = *(void *)(v32 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3;
  uint64_t v35 = a3;
  sub_1ACDBCBEC(a1, a3, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  uint64_t v9 = sub_1ACDAC51C();
  sub_1ACDBCBEC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = v11 + v6;
  uint64_t v34 = v10 | 7;
  uint64_t v13 = swift_allocObject();
  uint64_t v33 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor;
  sub_1ACDBED20((uint64_t)v7, v13 + v11, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  id v14 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F6D0));
  uint64_t v36 = v9;
  uint64_t v15 = swift_retain();
  id v16 = sub_1ACDBD9E0(v15, (uint64_t)sub_1ACDBD9B4, v13, (uint64_t (*)(void))sub_1ACA3A8A8);
  swift_release();
  swift_release();
  uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  *(void *)(v8 + v17[11]) = v16;
  uint64_t v18 = self;
  uint64_t v38 = v32;
  id v19 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770188);
  sub_1ACE76228();
  uint64_t v20 = (void *)sub_1ACE76178();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_backgroundSessionConfigurationWithIdentifier_, v20);

  sub_1ACDBCBEC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  unint64_t v22 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v23 + v11;
  uint64_t v25 = v33;
  sub_1ACDBED20((uint64_t)v7, v24, (uint64_t (*)(void))v33);
  *(void *)(v23 + v22) = v21;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E008);
  swift_allocObject();
  uint64_t v26 = sub_1ACE75A18();
  uint64_t v27 = sub_1ACE74F28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v37, v27);
  uint64_t result = sub_1ACDBEF70(a1, (uint64_t (*)(void))v25);
  uint64_t v29 = v35;
  uint64_t v30 = v36;
  *(void *)(v35 + v17[12]) = v26;
  *(void *)(v29 + v17[13]) = v30;
  return result;
}

uint64_t sub_1ACDAC51C()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v18 = *(void *)(v0 - 8);
  uint64_t v19 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770188);
  sub_1ACE76228();
  sub_1ACE74E28();
  swift_bridgeObjectRelease();
  sub_1ACE759D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F398);
  swift_allocObject();
  uint64_t v16 = sub_1ACDBB76C(5000000, (uint64_t)v7);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E28();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v2, *MEMORY[0x1E4FBCC58], v19);
  uint64_t v11 = sub_1ACE76D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F258);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + qword_1EB7859C8, v10, v17);
  uint64_t v13 = v12 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v13 = 2048;
  *(unsigned char *)(v13 + 4) = 0;
  *(void *)(v12 + qword_1EB772C00) = v11;
  *(void *)(v12 + qword_1EB772BF8) = v16;
  return v12;
}

uint64_t sub_1ACDAC954()
{
  uint64_t v0 = sub_1ACE76CE8();
  uint64_t v18 = *(void *)(v0 - 8);
  uint64_t v19 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1ACE76C78();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1ACE75E48();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DEF0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1ACE74F28();
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB770100);
  sub_1ACE76228();
  sub_1ACE74E28();
  swift_bridgeObjectRelease();
  sub_1ACE759D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F390);
  swift_allocObject();
  uint64_t v16 = sub_1ACDBB874(5000000, (uint64_t)v7);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACE75E28();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB773180, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB773160);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773170, (uint64_t *)&unk_1EB773160);
  sub_1ACE770E8();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v2, *MEMORY[0x1E4FBCC58], v19);
  uint64_t v11 = sub_1ACE76D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F250);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + qword_1EB7859C8, v10, v17);
  uint64_t v13 = v12 + qword_1EB7859D0;
  *(_DWORD *)uint64_t v13 = 2048;
  *(unsigned char *)(v13 + 4) = 0;
  *(void *)(v12 + qword_1EB772C00) = v11;
  *(void *)(v12 + qword_1EB772BF8) = v16;
  return v12;
}

uint64_t sub_1ACDACD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v80 = a3;
  uint64_t v82 = a2;
  uint64_t v75 = a1;
  uint64_t v88 = sub_1ACE74F28();
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v84 = v3;
  uint64_t v85 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v79 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v81 = v5;
  uint64_t v83 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  uint64_t v76 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v77 = v7;
  uint64_t v78 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C58);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  unint64_t v98 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C60);
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v90 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C68);
  uint64_t v94 = *(void *)(v11 - 8);
  uint64_t v95 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v91 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE753F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v65 - v18;
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE75438();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB771BD0);
  sub_1ACE75428();
  sub_1ACE753C8();
  id v21 = sub_1ACE75428();
  os_signpost_type_t v22 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v24 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v25 = v16;
    v23(v16, v19, v13);
    uint64_t v26 = v19;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    os_signpost_id_t v28 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v21, v22, v28, "backgroundStash", "Start background stash", v27, 2u);
    uint64_t v29 = v27;
    uint64_t v19 = v26;
    MEMORY[0x1AD11B340](v29, -1, -1);

    uint64_t v30 = v25;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
  }
  else
  {

    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v24 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v30 = v16;
  }
  v23(v30, v19, v13);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v74 = sub_1ACE75468();
  uint64_t v31 = sub_1ACE75428();
  os_signpost_type_t v32 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    v23(v30, v19, v13);
    uint64_t v33 = v19;
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    os_signpost_id_t v35 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v31, v32, v35, "Start loading from source", "", v34, 2u);
    uint64_t v36 = v34;
    uint64_t v19 = v33;
    MEMORY[0x1AD11B340](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v13);
  }
  else
  {
  }
  uint64_t v37 = v75;
  uint64_t v38 = v80;
  uint64_t v99 = ShazamSignatureBackgroundSessionDescriptor.load(data:)(v75);
  v23(v30, v19, v13);
  uint64_t v39 = v13;
  uint64_t v96 = v13;
  uint64_t v40 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v68 = v23;
  uint64_t v73 = v14;
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  uint64_t v69 = v14 + 32;
  long long v70 = v42;
  v42(v41 + ((v40 + 16) & ~v40), v30, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C70);
  unint64_t v67 = v24;
  uint64_t v72 = v19;
  uint64_t v71 = MEMORY[0x1E4F1AAE8];
  sub_1ACA51EA4(&qword_1E99F5C78, &qword_1E99F5C70);
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v43 = v30;
  uint64_t v66 = v30;
  uint64_t v44 = v78;
  sub_1ACDBCBEC(v38, v78, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  uint64_t v45 = v83;
  sub_1ACDBCBEC(v82, v83, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  uint64_t v46 = v85;
  uint64_t v47 = v86;
  uint64_t v48 = v37;
  uint64_t v49 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v48, v88);
  v68(v43, v19, v96);
  unint64_t v50 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  unint64_t v51 = (v77 + *(unsigned __int8 *)(v79 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  unint64_t v52 = (v81 + *(unsigned __int8 *)(v47 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v53 = (v84 + v40 + v52) & ~v40;
  uint64_t v54 = swift_allocObject();
  sub_1ACDBED20(v44, v54 + v50, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  sub_1ACDBED20(v45, v54 + v51, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v54 + v52, v46, v49);
  unint64_t v55 = v54 + v53;
  uint64_t v56 = v96;
  v70(v55, v66, v96);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716D8);
  sub_1ACA51EA4(&qword_1E99F5C80, &qword_1E99F5C58);
  sub_1ACA51EA4(&qword_1EB7716D0, &qword_1EB7716D8);
  uint64_t v58 = v89;
  uint64_t v57 = v90;
  uint64_t v59 = v98;
  sub_1ACE75D98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v58);
  sub_1ACA51EA4(&qword_1E99F5C88, &qword_1E99F5C60);
  swift_retain();
  uint64_t v60 = v93;
  uint64_t v61 = v91;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v57, v60);
  sub_1ACA51EA4(&qword_1E99F5C90, &qword_1E99F5C68);
  uint64_t v62 = v95;
  uint64_t v63 = sub_1ACE75AD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v62);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v56);
  return v63;
}

uint64_t sub_1ACDAD888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v80 = a3;
  uint64_t v82 = a2;
  uint64_t v75 = a1;
  uint64_t v88 = sub_1ACE74F28();
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v84 = v3;
  uint64_t v85 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTMLRequest();
  uint64_t v79 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v81 = v5;
  uint64_t v83 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  uint64_t v76 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v77 = v7;
  uint64_t v78 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5CF8);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  unint64_t v98 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D00);
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v90 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D08);
  uint64_t v94 = *(void *)(v11 - 8);
  uint64_t v95 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v91 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1ACE753F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v65 - v18;
  if (qword_1EB771BE8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1ACE75438();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB771BD0);
  sub_1ACE75428();
  sub_1ACE753C8();
  id v21 = sub_1ACE75428();
  os_signpost_type_t v22 = sub_1ACE76E18();
  if (sub_1ACE76FA8())
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v24 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v25 = v16;
    v23(v16, v19, v13);
    uint64_t v26 = v19;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    os_signpost_id_t v28 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v21, v22, v28, "backgroundStash", "Start background stash", v27, 2u);
    uint64_t v29 = v27;
    uint64_t v19 = v26;
    MEMORY[0x1AD11B340](v29, -1, -1);

    uint64_t v30 = v25;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
  }
  else
  {

    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    unint64_t v24 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v30 = v16;
  }
  v23(v30, v19, v13);
  sub_1ACE75478();
  swift_allocObject();
  uint64_t v74 = sub_1ACE75468();
  uint64_t v31 = sub_1ACE75428();
  os_signpost_type_t v32 = sub_1ACE76E28();
  if (sub_1ACE76FA8())
  {
    v23(v30, v19, v13);
    uint64_t v33 = v19;
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    os_signpost_id_t v35 = sub_1ACE753D8();
    _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v31, v32, v35, "Start loading from source", "", v34, 2u);
    uint64_t v36 = v34;
    uint64_t v19 = v33;
    MEMORY[0x1AD11B340](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v13);
  }
  else
  {
  }
  uint64_t v37 = v75;
  uint64_t v38 = v80;
  uint64_t v99 = TranscriptsBackgroundSessionDescriptor.load(data:)(v75);
  v23(v30, v19, v13);
  uint64_t v39 = v13;
  uint64_t v96 = v13;
  uint64_t v40 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v68 = v23;
  uint64_t v73 = v14;
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  uint64_t v69 = v14 + 32;
  long long v70 = v42;
  v42(v41 + ((v40 + 16) & ~v40), v30, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5D10);
  unint64_t v67 = v24;
  uint64_t v72 = v19;
  uint64_t v71 = MEMORY[0x1E4F1AAE8];
  sub_1ACA51EA4(&qword_1E99F5D18, &qword_1E99F5D10);
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v43 = v30;
  uint64_t v66 = v30;
  uint64_t v44 = v78;
  sub_1ACDBCBEC(v38, v78, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  uint64_t v45 = v83;
  sub_1ACDBCBEC(v82, v83, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  uint64_t v46 = v85;
  uint64_t v47 = v86;
  uint64_t v48 = v37;
  uint64_t v49 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v48, v88);
  v68(v43, v19, v96);
  unint64_t v50 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  unint64_t v51 = (v77 + *(unsigned __int8 *)(v79 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  unint64_t v52 = (v81 + *(unsigned __int8 *)(v47 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v53 = (v84 + v40 + v52) & ~v40;
  uint64_t v54 = swift_allocObject();
  sub_1ACDBED20(v44, v54 + v50, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  sub_1ACDBED20(v45, v54 + v51, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v54 + v52, v46, v49);
  unint64_t v55 = v54 + v53;
  uint64_t v56 = v96;
  v70(v55, v66, v96);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7716D8);
  sub_1ACA51EA4(&qword_1E99F5D20, &qword_1E99F5CF8);
  sub_1ACA51EA4(&qword_1EB7716D0, &qword_1EB7716D8);
  uint64_t v58 = v89;
  uint64_t v57 = v90;
  uint64_t v59 = v98;
  sub_1ACE75D98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v58);
  sub_1ACA51EA4(&qword_1E99F5D28, &qword_1E99F5D00);
  swift_retain();
  uint64_t v60 = v93;
  uint64_t v61 = v91;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v57, v60);
  sub_1ACA51EA4(&qword_1E99F5D30, &qword_1E99F5D08);
  uint64_t v62 = v95;
  uint64_t v63 = sub_1ACE75AD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v62);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v56);
  return v63;
}

uint64_t sub_1ACDAE384(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  os_signpost_type_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  uint64_t v19 = qword_1EB76E130;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  v31[1] = qword_1EB76E120;
  sub_1ACDBCBEC(a3, (uint64_t)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1ACDBED20((uint64_t)v17, v23 + v20, (uint64_t (*)(void))type metadata accessor for ShazamSignatureBackgroundSessionDescriptor);
  uint64_t v25 = v32;
  unint64_t v24 = v33;
  *(void *)(v23 + v21) = v32;
  *(void *)(v23 + v22) = v24;
  uint64_t v26 = (uint64_t (**)(uint64_t, char))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v26 = sub_1ACCA53B8;
  v26[1] = (uint64_t (*)(uint64_t, char))v18;
  aBlock[4] = sub_1ACDBDC24;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_124;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v25;
  id v29 = v24;
  sub_1ACE75E08();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  return swift_release();
}

uint64_t sub_1ACDAE7A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  os_signpost_type_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v8 = sub_1ACE75DC8();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1ACE75E48();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  uint64_t v19 = qword_1EB76E130;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  v31[1] = qword_1EB76E120;
  sub_1ACDBCBEC(a3, (uint64_t)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1ACDBED20((uint64_t)v17, v23 + v20, (uint64_t (*)(void))type metadata accessor for TranscriptsBackgroundSessionDescriptor);
  uint64_t v25 = v32;
  unint64_t v24 = v33;
  *(void *)(v23 + v21) = v32;
  *(void *)(v23 + v22) = v24;
  uint64_t v26 = (uint64_t (**)(uint64_t, char))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v26 = sub_1ACCA53B8;
  v26[1] = (uint64_t (*)(uint64_t, char))v18;
  aBlock[4] = sub_1ACDBEFF8;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ACA6DA9C;
  aBlock[3] = &block_descriptor_177_0;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v25;
  id v29 = v24;
  sub_1ACE75E08();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1ACDBD8E8((unint64_t *)&qword_1EB7734E0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB7734F0);
  sub_1ACA51EA4((unint64_t *)&qword_1EB773500, (uint64_t *)&unk_1EB7734F0);
  sub_1ACE770E8();
  MEMORY[0x1AD118ED0](0, v13, v10, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  return swift_release();
}

uint64_t sub_1ACDAEBC4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

void sub_1ACDAEC04(int a1, id a2, uint64_t a3, void (*a4)(void))
{
  objc_msgSend(a2, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a2, sel_setDiscretionary_, 1);
  objc_msgSend(a2, sel_setSharedContainerIdentifier_, @"243LU875E5.groups.com.apple.podcasts");
  id v7 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a2, a3, 0);
  a4();
}

uint64_t sub_1ACDAECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a1;
  uint64_t v55 = sub_1ACE74898();
  uint64_t v48 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v49 = v5;
  uint64_t v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  uint64_t v7 = v6 - 8;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = v8;
  uint64_t v42 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v13 = v12 - 8;
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = v14;
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1750);
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1758);
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v46 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v3 + *(int *)(v7 + 56));
  uint64_t v50 = a2;
  sub_1ACDBCBEC(a2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4((uint64_t)&v15[*(int *)(v13 + 44)], (uint64_t)v61, &qword_1EB772EA0);
  swift_retain();
  uint64_t v20 = (uint64_t)v15;
  sub_1ACDBEF70((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACA3AAD4((uint64_t)v61, (uint64_t)v60, &qword_1EB772EA0);
  *(void *)&v56[0] = v19;
  sub_1ACA3AAD4((uint64_t)v60, (uint64_t)v56 + 8, &qword_1EB772EA0);
  *(void *)&long long v57 = "AWAIT-SESSION";
  *((void *)&v57 + 1) = 13;
  LOBYTE(v58) = 2;
  LOBYTE(v59[2]) = 0;
  swift_retain();
  sub_1ACA50E78((uint64_t)v60, &qword_1EB772EA0);
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  BYTE1(v59[2]) = 0;
  v62[2] = v56[2];
  void v62[3] = v57;
  v62[0] = v56[0];
  v62[1] = v56[1];
  v63[0] = v58;
  *(_OWORD *)((char *)v63 + 10) = *(_OWORD *)((char *)v59 + 2);
  sub_1ACA50E78((uint64_t)v61, &qword_1EB772EA0);
  swift_release();
  if (qword_1EB76E130 != -1) {
    swift_once();
  }
  unint64_t v21 = (void *)qword_1EB76E120;
  *(void *)&v56[0] = qword_1EB76E120;
  uint64_t v22 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  id v23 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1760);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F1768, &qword_1E99F1760);
  sub_1ACA93A6C();
  uint64_t v39 = v17;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v11, &qword_1EB7669C8);

  sub_1ACA50E78((uint64_t)v62, &qword_1E99F1760);
  uint64_t v24 = v42;
  sub_1ACA3AAD4(v3, v42, &qword_1EB76F600);
  uint64_t v25 = v48;
  uint64_t v26 = v45;
  uint64_t v27 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v45, v47, v55);
  sub_1ACDBCBEC(v50, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  unint64_t v28 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v29 = (v44 + *(unsigned __int8 *)(v25 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v30 = (v49 + *(unsigned __int8 *)(v40 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v31 = swift_allocObject();
  sub_1ACA50E14(v24, v31 + v28, &qword_1EB76F600);
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v29, v26, v27);
  sub_1ACDBED20(v20, v31 + v30, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1770);
  sub_1ACA51EA4(&qword_1E99F1778, &qword_1E99F1750);
  sub_1ACA51EA4(&qword_1E99F1780, &qword_1E99F1770);
  os_signpost_type_t v32 = v46;
  uint64_t v33 = v54;
  uint64_t v34 = v39;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v33);
  sub_1ACA51EA4(&qword_1E99F1788, &qword_1E99F1758);
  uint64_t v35 = v53;
  uint64_t v36 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v35);
  return v36;
}

uint64_t sub_1ACDAF448(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a1;
  uint64_t v55 = sub_1ACE74898();
  uint64_t v48 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v49 = v5;
  uint64_t v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  uint64_t v7 = v6 - 8;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = v8;
  uint64_t v42 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTMLRequest();
  uint64_t v13 = v12 - 8;
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = v14;
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1750);
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1758);
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v46 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v3 + *(int *)(v7 + 56));
  uint64_t v50 = a2;
  sub_1ACDBCBEC(a2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4((uint64_t)&v15[*(int *)(v13 + 44)], (uint64_t)v61, &qword_1EB772EA0);
  swift_retain();
  uint64_t v20 = (uint64_t)v15;
  sub_1ACDBEF70((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACA3AAD4((uint64_t)v61, (uint64_t)v60, &qword_1EB772EA0);
  *(void *)&v56[0] = v19;
  sub_1ACA3AAD4((uint64_t)v60, (uint64_t)v56 + 8, &qword_1EB772EA0);
  *(void *)&long long v57 = "AWAIT-SESSION";
  *((void *)&v57 + 1) = 13;
  LOBYTE(v58) = 2;
  LOBYTE(v59[2]) = 0;
  swift_retain();
  sub_1ACA50E78((uint64_t)v60, &qword_1EB772EA0);
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  BYTE1(v59[2]) = 0;
  v62[2] = v56[2];
  void v62[3] = v57;
  v62[0] = v56[0];
  v62[1] = v56[1];
  v63[0] = v58;
  *(_OWORD *)((char *)v63 + 10) = *(_OWORD *)((char *)v59 + 2);
  sub_1ACA50E78((uint64_t)v61, &qword_1EB772EA0);
  swift_release();
  if (qword_1EB76E130 != -1) {
    swift_once();
  }
  unint64_t v21 = (void *)qword_1EB76E120;
  *(void *)&v56[0] = qword_1EB76E120;
  uint64_t v22 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  id v23 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1760);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4(&qword_1E99F1768, &qword_1E99F1760);
  sub_1ACA93A6C();
  uint64_t v39 = v17;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v11, &qword_1EB7669C8);

  sub_1ACA50E78((uint64_t)v62, &qword_1E99F1760);
  uint64_t v24 = v42;
  sub_1ACA3AAD4(v3, v42, &qword_1EB76F5F0);
  uint64_t v25 = v48;
  uint64_t v26 = v45;
  uint64_t v27 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v45, v47, v55);
  sub_1ACDBCBEC(v50, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  unint64_t v28 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v29 = (v44 + *(unsigned __int8 *)(v25 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v30 = (v49 + *(unsigned __int8 *)(v40 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v31 = swift_allocObject();
  sub_1ACA50E14(v24, v31 + v28, &qword_1EB76F5F0);
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v29, v26, v27);
  sub_1ACDBED20(v20, v31 + v30, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1770);
  sub_1ACA51EA4(&qword_1E99F1778, &qword_1E99F1750);
  sub_1ACA51EA4(&qword_1E99F1780, &qword_1E99F1770);
  os_signpost_type_t v32 = v46;
  uint64_t v33 = v54;
  uint64_t v34 = v39;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v33);
  sub_1ACA51EA4(&qword_1E99F1788, &qword_1E99F1758);
  uint64_t v35 = v53;
  uint64_t v36 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v35);
  return v36;
}

uint64_t sub_1ACDAFBBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v29 = a3;
  uint64_t v35 = a5;
  uint64_t v7 = type metadata accessor for ShazamSignatureRequest();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1790);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v10 + 52);
  uint64_t v32 = a2;
  uint64_t v36 = sub_1ACDB045C(v29, a1, (uint64_t)&unk_1F039D550, (uint64_t)sub_1ACDC1D9C);
  sub_1ACA3AAD4(a2, (uint64_t)v13, &qword_1EB76F600);
  sub_1ACDBCBEC(v31, (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + *(unsigned __int8 *)(v30 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1ACA50E14((uint64_t)v13, v21 + v19, &qword_1EB76F600);
  sub_1ACDBED20((uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, (uint64_t (*)(void))type metadata accessor for ShazamSignatureRequest);
  *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE08);
  sub_1ACA51EA4(&qword_1EB76DE00, &qword_1EB76DE08);
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  id v23 = *(void **)(v32 + v18);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1ACDBD81C;
  *(void *)(v25 + 24) = v24;
  id v26 = v23;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F1798, &qword_1E99F1790);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  uint64_t v27 = v33;
  sub_1ACE75D88();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v27);
}

uint64_t sub_1ACDB000C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v29 = a3;
  uint64_t v35 = a5;
  uint64_t v7 = type metadata accessor for TTMLRequest();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F1790);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v10 + 52);
  uint64_t v32 = a2;
  uint64_t v36 = sub_1ACDB045C(v29, a1, (uint64_t)&unk_1F039D7F8, (uint64_t)sub_1ACDBEB7C);
  sub_1ACA3AAD4(a2, (uint64_t)v13, &qword_1EB76F5F0);
  sub_1ACDBCBEC(v31, (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + *(unsigned __int8 *)(v30 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1ACA50E14((uint64_t)v13, v21 + v19, &qword_1EB76F5F0);
  sub_1ACDBED20((uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, (uint64_t (*)(void))type metadata accessor for TTMLRequest);
  *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE08);
  sub_1ACA51EA4(&qword_1EB76DE00, &qword_1EB76DE08);
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  id v23 = *(void **)(v32 + v18);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1ACDBEA94;
  *(void *)(v25 + 24) = v24;
  id v26 = v23;
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F1798, &qword_1E99F1790);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  uint64_t v27 = v33;
  sub_1ACE75D88();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v27);
}

uint64_t sub_1ACDB045C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a2;
  uint64_t v41 = a4;
  uint64_t v38 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1ACE74898();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4770);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F4778);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E99F4780);
  uint64_t v34 = *(void *)(v36 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v36);
  unint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a1, v8, v18);
  sub_1ACE759C8();
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)qword_1EB771BC0;
  id v42 = (id)qword_1EB771BC0;
  uint64_t v22 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&unk_1E99F4790, &qword_1E99F4770);
  sub_1ACA93A6C();
  id v23 = v21;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v7, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v24 = swift_allocObject();
  id v26 = v39;
  uint64_t v25 = v40;
  *(void *)(v24 + 16) = v39;
  *(void *)(v24 + 24) = v25;
  sub_1ACA51EA4(&qword_1E99F47A0, &qword_1E99F4778);
  id v27 = v26;
  id v28 = v25;
  uint64_t v29 = v37;
  sub_1ACE75B58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v29);
  sub_1ACA51EA4(&qword_1E99F47A8, (uint64_t *)&unk_1E99F4780);
  uint64_t v30 = v36;
  uint64_t v31 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v30);
  return v31;
}

uint64_t sub_1ACDB0928(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, void (*a6)(uint64_t, void *))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  id v10 = objc_msgSend(a4, sel_configuration);
  id v11 = objc_msgSend(v10, sel_identifier);

  if (v11)
  {
    uint64_t v12 = sub_1ACE761B8();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  sub_1ACE74CF8();
  swift_allocObject();
  uint64_t v15 = sub_1ACE74CE8();
  sub_1ACE74CB8();
  swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_1ACE74CA8();
  sub_1ACE74CC8();
  swift_release();
  v18[0] = a1;
  v18[1] = v12;
  void v18[2] = v14;
  v18[3] = v15;
  v18[4] = v16;
  a6(a3, v18);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACDB0A8C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771DC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D88);
  uint64_t v9 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C08);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v32 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C10);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v31 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v37 = a1;
  sub_1ACE759C8();
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1EB771BC0;
  id v37 = (id)qword_1EB771BC0;
  uint64_t v15 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB771DB0, &qword_1EB771DC0);
  sub_1ACA93A6C();
  id v16 = v14;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = swift_allocObject();
  __n128 v18 = v30;
  *(void *)(v17 + 16) = v30;
  id v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C18);
  sub_1ACA51EA4(&qword_1EB771D80, &qword_1EB771D88);
  unint64_t v20 = v32;
  uint64_t v21 = v29;
  sub_1ACE75AE8();
  swift_release();
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  MEMORY[0x1F4188790](v22);
  *(&v28 - 6) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F258);
  *(&v28 - 5) = sub_1ACDBEAE8(&qword_1E99F5C20, &qword_1EB76F258, &qword_1E99F5C28, &qword_1E99F5C30);
  *(&v28 - 4) = (uint64_t)&protocol witness table for ShazamSignatureRequest;
  *(&v28 - 3) = (uint64_t)&protocol witness table for ShazamSignatureRequest;
  *(&v28 - 2) = sub_1ACDBD8E8(&qword_1E99F5C38, (void (*)(uint64_t))type metadata accessor for ShazamSignatureRequest);
  *(&v28 - 1) = sub_1ACDBD8E8(&qword_1E99F5C40, (void (*)(uint64_t))type metadata accessor for ShazamSignatureRequest);
  swift_getKeyPath();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F5C48, &qword_1E99F5C08);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  id v23 = v31;
  uint64_t v24 = v36;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v24);
  sub_1ACA51EA4(&qword_1E99F5C50, &qword_1E99F5C10);
  uint64_t v25 = v35;
  uint64_t v26 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v25);
  return v26;
}

uint64_t sub_1ACDB1120(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771DC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D88);
  uint64_t v9 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5CA8);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v32 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5CB0);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v31 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v37 = a1;
  sub_1ACE759C8();
  if (qword_1EB771BC8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1EB771BC0;
  id v37 = (id)qword_1EB771BC0;
  uint64_t v15 = sub_1ACE76CA8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1ACA50D4C(0, (unint64_t *)&qword_1EB7734B0);
  sub_1ACA51EA4((unint64_t *)&unk_1EB771DB0, &qword_1EB771DC0);
  sub_1ACA93A6C();
  id v16 = v14;
  sub_1ACE75CA8();
  sub_1ACA50E78((uint64_t)v4, &qword_1EB7669C8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = swift_allocObject();
  __n128 v18 = v30;
  *(void *)(v17 + 16) = v30;
  id v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5CB8);
  sub_1ACA51EA4(&qword_1EB771D80, &qword_1EB771D88);
  unint64_t v20 = v32;
  uint64_t v21 = v29;
  sub_1ACE75AE8();
  swift_release();
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  MEMORY[0x1F4188790](v22);
  *(&v28 - 6) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F250);
  *(&v28 - 5) = sub_1ACDBEAE8(&qword_1E99F5CC0, &qword_1EB76F250, &qword_1E99F5CC8, &qword_1E99F5CD0);
  *(&v28 - 4) = (uint64_t)&protocol witness table for TTMLRequest;
  *(&v28 - 3) = (uint64_t)&protocol witness table for TTMLRequest;
  *(&v28 - 2) = sub_1ACDBD8E8(&qword_1E99F5CD8, (void (*)(uint64_t))type metadata accessor for TTMLRequest);
  *(&v28 - 1) = sub_1ACDBD8E8(&qword_1E99F5CE0, (void (*)(uint64_t))type metadata accessor for TTMLRequest);
  swift_getKeyPath();
  sub_1ACE757D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771D98);
  sub_1ACA51EA4(&qword_1E99F5CE8, &qword_1E99F5CA8);
  sub_1ACA51EA4(&qword_1EB771D90, &qword_1EB771D98);
  id v23 = v31;
  uint64_t v24 = v36;
  sub_1ACE75D88();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v24);
  sub_1ACA51EA4(&qword_1E99F5CF0, &qword_1E99F5CB0);
  uint64_t v25 = v35;
  uint64_t v26 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v25);
  return v26;
}

uint64_t sub_1ACDB17B4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1);
  *a3 = result;
  return result;
}

uint64_t sub_1ACDB17E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a5;
  uint64_t v74 = a4;
  uint64_t v57 = a3;
  uint64_t v56 = a1;
  uint64_t v72 = sub_1ACE74F28();
  uint64_t v70 = *(void *)(v72 - 8);
  uint64_t v71 = *(void *)(v70 + 64);
  MEMORY[0x1F4188790](v72);
  uint64_t v68 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1ACE753F8();
  uint64_t v58 = *(void *)(v60 - 8);
  uint64_t v59 = *(void *)(v58 + 64);
  MEMORY[0x1F4188790](v60);
  uint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C98);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715C8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771628);
  uint64_t v73 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v62 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715D8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v75 = v22;
  uint64_t v76 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v63 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771618);
  uint64_t v79 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v66 = (char *)v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715E8);
  uint64_t v80 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  unint64_t v67 = (char *)v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  sub_1ACDC7114(v56, v57);
  uint64_t v57 = MEMORY[0x1E4FBC848] + 8;
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  uint64_t v61 = v9;
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1ACA51EA4(&qword_1E99F5CA0, &qword_1E99F5C98);
  uint64_t v27 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v81 = v27;
  uint64_t v28 = v58;
  uint64_t v56 = *(void **)(v58 + 16);
  uint64_t v29 = v8;
  v54[0] = v8;
  uint64_t v30 = v8;
  uint64_t v31 = v60;
  ((void (*)(char *, uint64_t, uint64_t))v56)(v30, a5, v60);
  uint64_t v32 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = (v32 + 16) & ~v32;
  v59 += v33;
  v54[1] = v32 | 7;
  uint64_t v34 = swift_allocObject();
  uint64_t v58 = *(void *)(v28 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v58)(v34 + v33, v29, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE28);
  sub_1ACA51EA4(&qword_1EB76DE20, &qword_1EB76DE28);
  uint64_t v35 = v20;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v36 = v70;
  id v37 = v68;
  uint64_t v38 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v68, v74, v72);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v39, v37, v38);
  sub_1ACA51EA4(&qword_1EB7715C0, &qword_1EB7715C8);
  uint64_t v41 = v62;
  uint64_t v42 = v64;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v42);
  uint64_t v43 = v54[0];
  ((void (*)(void, uint64_t, uint64_t))v56)(v54[0], v55, v31);
  uint64_t v44 = swift_allocObject();
  ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v44 + v33, v43, v31);
  sub_1ACA51EA4(&qword_1EB771620, &qword_1EB771628);
  uint64_t v45 = v69;
  uint64_t v46 = v63;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v45);
  sub_1ACA51EA4(&qword_1EB7715D0, &qword_1EB7715D8);
  sub_1ACA51EA4(&qword_1EB771700, &qword_1EB771708);
  uint64_t v47 = v66;
  uint64_t v48 = v75;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v48);
  sub_1ACA51EA4(&qword_1EB771610, &qword_1EB771618);
  uint64_t v49 = v67;
  uint64_t v50 = v77;
  sub_1ACE75D48();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v50);
  sub_1ACA51EA4(&qword_1EB7715E0, &qword_1EB7715E8);
  uint64_t v51 = v78;
  uint64_t v52 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v51);
  return v52;
}

uint64_t sub_1ACDB226C(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a5;
  uint64_t v74 = a4;
  uint64_t v57 = a3;
  uint64_t v56 = a1;
  uint64_t v72 = sub_1ACE74F28();
  uint64_t v70 = *(void *)(v72 - 8);
  uint64_t v71 = *(void *)(v70 + 64);
  MEMORY[0x1F4188790](v72);
  uint64_t v68 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1ACE753F8();
  uint64_t v58 = *(void *)(v60 - 8);
  uint64_t v59 = *(void *)(v58 + 64);
  MEMORY[0x1F4188790](v60);
  uint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771708);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E99F5C98);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715C8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771628);
  uint64_t v73 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v62 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715D8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v75 = v22;
  uint64_t v76 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v63 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771618);
  uint64_t v79 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v66 = (char *)v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7715E8);
  uint64_t v80 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  unint64_t v67 = (char *)v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  sub_1ACDC6BC4((uint64_t)v56, v57);
  uint64_t v57 = MEMORY[0x1E4FBC848] + 8;
  sub_1ACE759C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB7669F0);
  uint64_t v61 = v9;
  sub_1ACE75998();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1ACA51EA4(&qword_1E99F5CA0, &qword_1E99F5C98);
  uint64_t v27 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v81 = v27;
  uint64_t v28 = v58;
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  uint64_t v29 = v8;
  v54[0] = v8;
  uint64_t v30 = v8;
  uint64_t v31 = v60;
  v56(v30, a5, v60);
  uint64_t v32 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = (v32 + 16) & ~v32;
  v59 += v33;
  v54[1] = v32 | 7;
  uint64_t v34 = swift_allocObject();
  uint64_t v58 = *(void *)(v28 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v58)(v34 + v33, v29, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76DE28);
  sub_1ACA51EA4(&qword_1EB76DE20, &qword_1EB76DE28);
  uint64_t v35 = v20;
  sub_1ACE75AF8();
  swift_release();
  swift_release();
  uint64_t v36 = v70;
  id v37 = v68;
  uint64_t v38 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v68, v74, v72);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v39, v37, v38);
  sub_1ACA51EA4(&qword_1EB7715C0, &qword_1EB7715C8);
  uint64_t v41 = v62;
  uint64_t v42 = v64;
  sub_1ACE75C28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v42);
  uint64_t v43 = v54[0];
  v56((char *)v54[0], v55, v31);
  uint64_t v44 = swift_allocObject();
  ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v44 + v33, v43, v31);
  sub_1ACA51EA4(&qword_1EB771620, &qword_1EB771628);
  uint64_t v45 = v69;
  uint64_t v46 = v63;
  sub_1ACE75AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v45);
  sub_1ACA51EA4(&qword_1EB7715D0, &qword_1EB7715D8);
  sub_1ACA51EA4(&qword_1EB771700, &qword_1EB771708);
  uint64_t v47 = v66;
  uint64_t v48 = v75;
  sub_1ACE75B98();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v48);
  sub_1ACA51EA4(&qword_1EB771610, &qword_1EB771618);
  uint64_t v49 = v67;
  uint64_t v50 = v77;
  sub_1ACE75D48();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v50);
  sub_1ACA51EA4(&qword_1EB7715E0, &qword_1EB7715E8);
  uint64_t v51 = v78;
  uint64_t v52 = sub_1ACE75AD8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v51);
  return v52;
}

uint64_t sub_1ACDB2CF0(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x98));
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1ACA65E48(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_endAccess();
  return v7;
}

id sub_1ACDB2DA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB771B08);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1ACE753F8();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v63 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v65 = (char *)&v50 - v11;
  uint64_t v12 = sub_1ACE74898();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0xA0));
  swift_beginAccess();
  uint64_t v20 = *v19;
  if (*(void *)(*v19 + 16) && (unint64_t v21 = sub_1ACA66034(a1), (v22 & 1) != 0))
  {
    id v23 = *(id *)(*(void *)(v20 + 56) + 8 * v21);
    swift_endAccess();
  }
  else
  {
    id v61 = a3;
    uint64_t v62 = v8;
    swift_endAccess();
    if (qword_1EB771BE8 != -1) {
      swift_once();
    }
    uint64_t v60 = v15;
    uint64_t v24 = sub_1ACE75438();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB771BD0);
    uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v59(v18, a1, v12);
    uint64_t v25 = v65;
    sub_1ACE753E8();
    uint64_t v26 = sub_1ACE75428();
    int v55 = sub_1ACE76E28();
    char v27 = sub_1ACE76FA8();
    uint64_t v58 = v13;
    if (v27)
    {
      uint64_t v52 = v13 + 16;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v25, v66);
      uint64_t v29 = swift_slowAlloc();
      uint64_t v54 = a2;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v53 = a1;
      uint64_t v51 = v31;
      v68[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v32 = sub_1ACE74808();
      uint64_t v67 = sub_1ACA3189C(v32, v33, v68);
      sub_1ACE76FF8();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      uint64_t v56 = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v57 = v34;
      v34((uint64_t)v18, v12);
      uint64_t v35 = v63;
      os_signpost_id_t v36 = sub_1ACE753D8();
      _os_signpost_emit_with_name_impl(&dword_1AC9D5000, v26, (os_signpost_type_t)v55, v36, "Start Asset Download", "%s", v30, 0xCu);
      uint64_t v37 = v51;
      swift_arrayDestroy();
      a1 = v53;
      MEMORY[0x1AD11B340](v37, -1, -1);
      MEMORY[0x1AD11B340](v30, -1, -1);

      uint64_t v38 = *(void (**)(char *, uint64_t))(v28 + 8);
      uint64_t v39 = v66;
      v38(v65, v66);
      v38(v35, v39);
    }
    else
    {

      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      uint64_t v56 = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v57 = v40;
      v40((uint64_t)v18, v12);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v25, v66);
    }
    uint64_t v41 = (void *)sub_1ACE74818();
    id v42 = objc_msgSend(v61, sel_downloadTaskWithRequest_, v41);

    uint64_t v44 = v59;
    uint64_t v43 = (uint64_t)v60;
    v59(v60, a1, v12);
    id v45 = objc_msgSend(v42, sel_taskIdentifier);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = *v19;
    *uint64_t v19 = 0x8000000000000000;
    sub_1ACD0EAA4((uint64_t)v45, v43, isUniquelyReferenced_nonNull_native);
    *uint64_t v19 = v67;
    swift_bridgeObjectRelease();
    v57(v43, v12);
    swift_endAccess();
    id v47 = objc_msgSend(v42, sel_taskIdentifier);
    uint64_t v48 = (uint64_t)v62;
    v44(v62, a1, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v48, 0, 1, v12);
    swift_beginAccess();
    sub_1ACC51440(v48, (uint64_t)v47);
    swift_endAccess();
    objc_msgSend(v42, sel_resume);
    id v23 = objc_msgSend(v42, sel_taskIdentifier);
  }
  return v23;
}

uint64_t sub_1ACDB33E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t *a11, uint64_t *a12)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a11);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a9, a1, v18);
  uint64_t v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(a12);
  sub_1ACA3AAD4(a2, a9 + v20[9], &qword_1EB772EA0);
  uint64_t v21 = a9 + v20[10];
  *(void *)uint64_t v21 = a3;
  *(void *)(v21 + 8) = a4;
  *(unsigned char *)(v21 + 16) = a5;
  *(unsigned char *)(a9 + v20[12]) = a10;
  if (a8)
  {
    swift_bridgeObjectRetain();
    sub_1ACE762C8();
    swift_bridgeObjectRelease();
    uint64_t v22 = a7;
    unint64_t v23 = a8;
  }
  else
  {
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  sub_1ACA50E78(a2, &qword_1EB772EA0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  uint64_t v25 = (void *)(a9 + v20[11]);
  *uint64_t v25 = v22;
  v25[1] = v23;
  *(unsigned char *)(a9 + v20[13]) = a6 & 1;
  return result;
}

void sub_1ACDB3584()
{
  uint64_t v0 = sub_1ACE74F28();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  __swift_allocate_value_buffer(v3, qword_1EB76FD38);
  uint64_t v4 = (uint64_t *)__swift_project_value_buffer(v3, (uint64_t)qword_1EB76FD38);
  unint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_ttmlAssetURL);
  sub_1ACE74E98();

  uint64_t v7 = self;
  sub_1ACDA7AC8((uint64_t)v2, 0x4C4B40uLL, objc_msgSend(v7, sel_defaultCenter), v4);
  id v8 = objc_msgSend(v5, sel_shazamSignatureAssetURL);
  sub_1ACE74E98();

  sub_1ACDA7D48((uint64_t)v2, 0x4C4B40uLL, objc_msgSend(v7, sel_defaultCenter), (uint64_t *)((char *)v4 + *(int *)(v3 + 20)));
}

uint64_t static TimeBombedTranscriptProvider.Caches.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB76FD58 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB76FD38);
  return sub_1ACDBCBEC(v3, a1, type metadata accessor for TimeBombedTranscriptProvider.Caches);
}

uint64_t type metadata accessor for TimeBombedTranscriptProvider.Caches(uint64_t a1)
{
  return sub_1ACA31990(a1, qword_1EB76FD60);
}

uint64_t TimeBombedTranscriptProvider.Caches.ttml.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACA3AAD4(v1, a1, &qword_1EB76F038);
}

uint64_t TimeBombedTranscriptProvider.Caches.shazamSignatures.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  return sub_1ACA3AAD4(v1 + *(int *)(v3 + 20), a1, &qword_1EB76F050);
}

uint64_t sub_1ACDB37F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v1 = type metadata accessor for ShazamSignatureBackgroundSessionDescriptor();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v71 = (uint64_t)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F600);
  uint64_t v72 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v75 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = v7;
  uint64_t v74 = (uint64_t)&v60 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (uint64_t)&v60 - v9;
  uint64_t v10 = type metadata accessor for TranscriptsBackgroundSessionDescriptor();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F5F0);
  uint64_t v65 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v64 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v60 - v16;
  id v66 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v77 = (uint64_t)&v60 - v20;
  uint64_t v21 = sub_1ACE74F28();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  char v27 = (char *)&v60 - v26;
  id v28 = objc_msgSend(self, sel_libraryDirectory);
  sub_1ACE74E98();

  uint64_t v29 = v27;
  sub_1ACE74E28();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
  uint64_t v70 = v21;
  uint64_t v69 = v22 + 8;
  uint64_t v67 = v30;
  v30(v24, v21);
  id v31 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E4D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ACE843F0;
  uint64_t v78 = 0x6567412D72657355;
  unint64_t v79 = 0xEA0000000000746ELL;
  uint64_t v33 = MEMORY[0x1E4FBB1A0];
  sub_1ACE771F8();
  uint64_t v34 = self;
  id v35 = objc_msgSend(self, sel_currentProcess);
  id v36 = objc_msgSend(v34, sel_userAgentForProcessInfo_, v35);

  uint64_t v37 = sub_1ACE761B8();
  uint64_t v39 = v38;

  *(void *)(inited + 96) = v33;
  *(void *)(inited + 72) = v37;
  *(void *)(inited + 80) = v39;
  sub_1ACA364E4(inited);
  uint64_t v40 = (void *)sub_1ACE75FC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setHTTPAdditionalHeaders_, v40);

  id v63 = v31;
  objc_msgSend(v31, sel_setHTTPMaximumConnectionsPerHost_, 15);
  if (qword_1EB76FD58 != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  uint64_t v41 = __swift_project_value_buffer(v62, (uint64_t)qword_1EB76FD38);
  sub_1ACA3AAD4(v41, (uint64_t)v12, &qword_1EB76F038);
  id v61 = v29;
  sub_1ACE74E28();
  uint64_t v42 = v77;
  sub_1ACDABEA4((uint64_t)v12, (uint64_t)v24, v77);
  uint64_t v43 = (int *)_s11DownloadersVMa(0);
  uint64_t v44 = v68;
  sub_1ACA3AAD4(v42, (uint64_t)v68 + v43[5], &qword_1EB76F5F0);
  sub_1ACA3AAD4(v42, (uint64_t)v17, &qword_1EB76F5F0);
  uint64_t v45 = v64;
  sub_1ACA3AAD4((uint64_t)v17, v64, &qword_1EB76F5F0);
  unint64_t v46 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v47 = swift_allocObject();
  sub_1ACA50E14(v45, v47 + v46, &qword_1EB76F5F0);
  sub_1ACA50E78((uint64_t)v17, &qword_1EB76F5F0);
  uint64_t v48 = (uint64_t (**)(uint64_t, uint64_t))((char *)v44 + v43[6]);
  *uint64_t v48 = sub_1ACDBD508;
  v48[1] = (uint64_t (*)(uint64_t, uint64_t))v47;
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v63;
  *(void *)(v49 + 16) = v63;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76E000);
  swift_allocObject();
  id v66 = v50;
  *uint64_t v44 = sub_1ACE75A18();
  uint64_t v51 = v71;
  sub_1ACA3AAD4(v41 + *(int *)(v62 + 20), v71, &qword_1EB76F050);
  sub_1ACE74E28();
  uint64_t v52 = v76;
  sub_1ACDAC1E0(v51, (uint64_t)v24, v76);
  sub_1ACA3AAD4(v52, (uint64_t)v44 + v43[9], &qword_1EB76F600);
  uint64_t v53 = v74;
  sub_1ACA3AAD4(v52, v74, &qword_1EB76F600);
  uint64_t v54 = v75;
  sub_1ACA3AAD4(v53, v75, &qword_1EB76F600);
  unint64_t v55 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v56 = swift_allocObject();
  sub_1ACA50E14(v54, v56 + v55, &qword_1EB76F600);
  sub_1ACA50E78(v53, &qword_1EB76F600);
  uint64_t v57 = (uint64_t (**)(uint64_t, uint64_t))((char *)v44 + v43[8]);
  char *v57 = sub_1ACDBD6B8;
  v57[1] = (uint64_t (*)(uint64_t, uint64_t))v56;
  *(void *)(swift_allocObject() + 16) = v66;
  swift_allocObject();
  uint64_t v58 = sub_1ACE75A18();
  sub_1ACA50E78(v52, &qword_1EB76F600);
  sub_1ACA50E78(v77, &qword_1EB76F5F0);
  uint64_t result = v67(v61, v70);
  *(uint64_t *)((char *)v44 + v43[7]) = v58;
  return result;
}

uint64_t sub_1ACDB4078()
{
  uint64_t v0 = _s11DownloadersVMa(0);
  __swift_allocate_value_buffer(v0, qword_1EB76FD18);
  uint64_t v1 = (uint64_t *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB76FD18);
  return sub_1ACDB37F4(v1);
}

uint64_t sub_1ACDB40C4()
{
  return sub_1ACDB40D0((uint64_t)&unk_1EB76F990);
}

uint64_t sub_1ACDB40D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (void *)((char *)&v33[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void *)((char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB76FD58 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB76FD38);
  sub_1ACA3AAD4(v9, (uint64_t)v7, &qword_1EB76F038);
  sub_1ACA3AAD4(v9 + *(int *)(v8 + 20), (uint64_t)v4, &qword_1EB76F050);
  uint64_t v10 = (char *)v7 + *(int *)(v5 + 60);
  uint64_t v11 = *(void *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8) + 72)];
  *(void *)&long long v57 = sub_1ACDC1D68;
  *((void *)&v57 + 1) = v11;
  uint64_t v58 = sub_1ACDC1D34;
  uint64_t v59 = v11;
  uint64_t v60 = sub_1ACDC1C84;
  uint64_t v61 = v11;
  uint64_t v62 = sub_1ACDC1D6C;
  uint64_t v63 = v11;
  uint64_t v12 = (char *)v4 + *(int *)(v2 + 60);
  uint64_t v13 = *(void *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0) + 72)];
  *(void *)&long long v50 = sub_1ACDC1D3C;
  *((void *)&v50 + 1) = v13;
  uint64_t v51 = sub_1ACDC1C3C;
  uint64_t v52 = v13;
  uint64_t v53 = sub_1ACDC1C88;
  uint64_t v54 = v13;
  unint64_t v55 = sub_1ACDC1D84;
  uint64_t v56 = v13;
  uint64_t v14 = *v7;
  *(void *)&long long v43 = sub_1ACDC1C48;
  *((void *)&v43 + 1) = v14;
  uint64_t v44 = sub_1ACDC1D38;
  uint64_t v45 = v14;
  unint64_t v46 = sub_1ACDC1C8C;
  uint64_t v47 = v14;
  uint64_t v48 = sub_1ACDC1C4C;
  uint64_t v49 = v14;
  uint64_t v15 = *v4;
  *(void *)&long long v36 = sub_1ACDC1C64;
  *((void *)&v36 + 1) = v15;
  uint64_t v37 = sub_1ACDC1C40;
  uint64_t v38 = v15;
  uint64_t v39 = sub_1ACDC1C90;
  uint64_t v40 = v15;
  uint64_t v41 = sub_1ACDC1C68;
  uint64_t v42 = v15;
  uint64_t v16 = qword_1EB76FD30;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = _s11DownloadersVMa(0);
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB76FD18);
  uint64_t v19 = (uint64_t *)(v18 + *(int *)(v17 + 24));
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v20;
  *(void *)&long long v35 = sub_1ACDBF8EC;
  *((void *)&v35 + 1) = v22;
  uint64_t v23 = (uint64_t *)(v18 + *(int *)(v17 + 32));
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = v24;
  *(void *)&long long v34 = sub_1ACDBF92C;
  *((void *)&v34 + 1) = v26;
  uint64_t v27 = qword_1EB76E130;
  swift_retain();
  swift_retain();
  if (v27 != -1) {
    swift_once();
  }
  v33[3] = &type metadata for MAPITranscriptTimeBombedURLProvider;
  v33[4] = &protocol witness table for MAPITranscriptTimeBombedURLProvider;
  id v28 = (id)qword_1EB76E120;
  unint64_t v29 = sub_1ACA36EF0(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A890);
  uint64_t v30 = swift_allocObject();
  *(_DWORD *)(v30 + 24) = 0;
  *(void *)(v30 + 16) = v29;
  v33[0] = v28;
  v33[1] = v30;
  TimeBombedTranscriptProvider.init(ttmlPersistentCache:signaturePersistentCache:ttmlVolatileCache:signatureVolatileCache:ttmlSource:shazamSignatureSource:timeBombedURLsProvider:workQueue:)(&v57, &v50, &v43, &v36, &v35, &v34, (uint64_t)v33, v28, a1);
  sub_1ACA50E78((uint64_t)v4, &qword_1EB76F050);
  return sub_1ACA50E78((uint64_t)v7, &qword_1EB76F038);
}

uint64_t static TimeBombedTranscriptProvider.background.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDB4A44(&qword_1EB76FAF8, (uint64_t)&unk_1EB76F990, a1);
}

uint64_t sub_1ACDB45A4()
{
  return sub_1ACDB45B0((uint64_t)&unk_1EB76FB00);
}

uint64_t sub_1ACDB45B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (void *)((char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void *)((char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB76FD58 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for TimeBombedTranscriptProvider.Caches(0);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB76FD38);
  sub_1ACA3AAD4(v9, (uint64_t)v7, &qword_1EB76F038);
  sub_1ACA3AAD4(v9 + *(int *)(v8 + 20), (uint64_t)v4, &qword_1EB76F050);
  uint64_t v10 = (char *)v7 + *(int *)(v5 + 60);
  uint64_t v11 = *(void *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8) + 72)];
  *(void *)&long long v51 = sub_1ACDBC4DC;
  *((void *)&v51 + 1) = v11;
  uint64_t v52 = sub_1ACDBC4E0;
  uint64_t v53 = v11;
  uint64_t v54 = sub_1ACDBC670;
  uint64_t v55 = v11;
  uint64_t v56 = sub_1ACDBC6B0;
  uint64_t v57 = v11;
  uint64_t v12 = (char *)v4 + *(int *)(v2 + 60);
  uint64_t v13 = *(void *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0) + 72)];
  *(void *)&long long v44 = sub_1ACDBC718;
  *((void *)&v44 + 1) = v13;
  uint64_t v45 = sub_1ACDBC740;
  uint64_t v46 = v13;
  uint64_t v47 = sub_1ACDBC748;
  uint64_t v48 = v13;
  uint64_t v49 = sub_1ACDBC788;
  uint64_t v50 = v13;
  uint64_t v14 = *v7;
  *(void *)&long long v37 = sub_1ACDBC7F0;
  *((void *)&v37 + 1) = v14;
  uint64_t v38 = sub_1ACDBC818;
  uint64_t v39 = v14;
  uint64_t v40 = sub_1ACDBC854;
  uint64_t v41 = v14;
  uint64_t v42 = sub_1ACDBC880;
  uint64_t v43 = v14;
  uint64_t v15 = *v4;
  *(void *)&long long v30 = sub_1ACDBC8A8;
  *((void *)&v30 + 1) = v15;
  id v31 = sub_1ACDBC8D0;
  uint64_t v32 = v15;
  uint64_t v33 = sub_1ACDBC8D8;
  uint64_t v34 = v15;
  long long v35 = sub_1ACDBC904;
  uint64_t v36 = v15;
  uint64_t v16 = qword_1EB76FD30;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = _s11DownloadersVMa(0);
  uint64_t v18 = (uint64_t *)__swift_project_value_buffer(v17, (uint64_t)qword_1EB76FD18);
  uint64_t v19 = *v18;
  *(void *)&long long v29 = sub_1ACDBCB54;
  *((void *)&v29 + 1) = v19;
  uint64_t v20 = *(uint64_t *)((char *)v18 + *(int *)(v17 + 28));
  *(void *)&long long v28 = sub_1ACDBCBA0;
  *((void *)&v28 + 1) = v20;
  uint64_t v21 = qword_1EB76A830;
  swift_retain();
  swift_retain();
  if (v21 != -1) {
    swift_once();
  }
  unint64_t v27[3] = &type metadata for MAPITranscriptTimeBombedURLProvider;
  _DWORD v27[4] = &protocol witness table for MAPITranscriptTimeBombedURLProvider;
  id v22 = (id)qword_1EB76A828;
  unint64_t v23 = sub_1ACA36EF0(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76A890);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(void *)(v24 + 16) = v23;
  v27[0] = v22;
  v27[1] = v24;
  TimeBombedTranscriptProvider.init(ttmlPersistentCache:signaturePersistentCache:ttmlVolatileCache:signatureVolatileCache:ttmlSource:shazamSignatureSource:timeBombedURLsProvider:workQueue:)(&v51, &v44, &v37, &v30, &v29, &v28, (uint64_t)v27, v22, a1);
  sub_1ACA50E78((uint64_t)v4, &qword_1EB76F050);
  return sub_1ACA50E78((uint64_t)v7, &qword_1EB76F038);
}

uint64_t static TimeBombedTranscriptProvider.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ACDB4A44(qword_1EB76FC70, (uint64_t)&unk_1EB76FB00, a1);
}

uint64_t sub_1ACDB4A44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  return sub_1ACC74C68(a2, a3);
}

uint64_t *_s6CachesVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1ACE74F28();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v21(v9, v10, v11);
    uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
    *(void *)&v9[v12[15]] = *(void *)&v10[v12[15]];
    *(void *)&v9[v12[16]] = *(void *)&v10[v12[16]];
    *(void *)&v9[v12[17]] = *(void *)&v10[v12[17]];
    *(void *)&v9[v12[18]] = *(void *)&v10[v12[18]];
    *(void *)&v9[v12[19]] = *(void *)&v10[v12[19]];
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
    uint64_t v17 = &v14[v16];
    uint64_t v18 = &v15[v16];
    v21(v17, &v15[v16], v11);
    uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
    *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
    *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
    *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
    *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
    *(void *)&v17[v19[19]] = *(void *)&v18[v19[19]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t _s6CachesVwxx(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v5 = sub_1ACE74F28();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_release();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050);
  v6(v7 + *(int *)(v8 + 60), v5);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *_s6CachesVwcp(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v19(v7, v8, v9);
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  *(void *)&v7[v10[16]] = *(void *)&v8[v10[16]];
  *(void *)&v7[v10[17]] = *(void *)&v8[v10[17]];
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  *(void *)&v7[v10[19]] = *(void *)&v8[v10[19]];
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (void *)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = *v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v15 = &v12[v14];
  uint64_t v16 = (char *)v13 + v14;
  v19(&v12[v14], v16, v9);
  uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v15[v17[15]] = *(void *)&v16[v17[15]];
  *(void *)&v15[v17[16]] = *(void *)&v16[v17[16]];
  *(void *)&v15[v17[17]] = *(void *)&v16[v17[17]];
  *(void *)&v15[v17[18]] = *(void *)&v16[v17[18]];
  *(void *)&v15[v17[19]] = *(void *)&v16[v17[19]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s6CachesVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
  swift_retain();
  swift_release();
  *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
  swift_retain();
  swift_release();
  *(void *)&v7[v11[17]] = *(void *)&v8[v11[17]];
  swift_retain();
  swift_release();
  *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
  swift_retain();
  swift_release();
  *(void *)&v7[v11[19]] = *(void *)&v8[v11[19]];
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_retain();
  swift_release();
  uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v16 = &v13[v15];
  uint64_t v17 = &v14[v15];
  v10(v16, &v14[v15], v9);
  uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v16[v18[15]] = *(void *)&v17[v18[15]];
  swift_retain();
  swift_release();
  *(void *)&v16[v18[16]] = *(void *)&v17[v18[16]];
  swift_retain();
  swift_release();
  *(void *)&v16[v18[17]] = *(void *)&v17[v18[17]];
  swift_retain();
  swift_release();
  *(void *)&v16[v18[18]] = *(void *)&v17[v18[18]];
  swift_retain();
  swift_release();
  *(void *)&v16[v18[19]] = *(void *)&v17[v18[19]];
  swift_retain();
  swift_release();
  return a1;
}

void *_s6CachesVwtk(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
  *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
  *(void *)&v7[v11[17]] = *(void *)&v8[v11[17]];
  *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
  *(void *)&v7[v11[19]] = *(void *)&v8[v11[19]];
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (void *)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = *v14;
  uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v16 = &v13[v15];
  uint64_t v17 = (char *)v14 + v15;
  v10(v16, v17, v9);
  uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v16[v18[15]] = *(void *)&v17[v18[15]];
  *(void *)&v16[v18[16]] = *(void *)&v17[v18[16]];
  *(void *)&v16[v18[17]] = *(void *)&v17[v18[17]];
  *(void *)&v16[v18[18]] = *(void *)&v17[v18[18]];
  *(void *)&v16[v18[19]] = *(void *)&v17[v18[19]];
  return a1;
}

void *_s6CachesVwta(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F038) + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1ACE74F28();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76EFA8);
  *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
  swift_release();
  *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
  swift_release();
  *(void *)&v7[v11[17]] = *(void *)&v8[v11[17]];
  swift_release();
  *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
  swift_release();
  *(void *)&v7[v11[19]] = *(void *)&v8[v11[19]];
  swift_release();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_release();
  uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB76F050) + 60);
  uint64_t v16 = &v13[v15];
  uint64_t v17 = &v14[v15];
  v10(v16, &v14[v15], v9);
  uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EB76EFB0);
  *(void *)&v16[v18[15]] = *(void *)&v17[v18[15]];
  swift_release();
  *(void *)&v16[v18[16]] = *(void *)&v17[v18[16]];
  swift_release();
  *(void *)&v16[v18[17]] = *(void *)&v17[v18[17]];
  swift_release();
  *(void *)&v16[v18[18]] = *(void *)&v17[v18[18]];
  swift_release();
  *(void *)&v16[v18[19]] = *(void *)&v17[v18[19]];
  swift_release();
  return a1;
}