uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

BOOL static GroupableTag.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GroupableTag.Kind.hash(into:)()
{
  return sub_1DE8E1BB0();
}

uint64_t GroupableTag.Kind.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE812574(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE81258C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8125D4()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE812600()
{
  return sub_1DE8E1BD0();
}

uint64_t GroupableTag.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double GroupableTag.score.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t GroupableTag.optionalAutofavorite.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t GroupableTag.subscribed.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t GroupableTag.autofavorited.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t GroupableTag.groupable.getter()
{
  return *(unsigned __int8 *)(v0 + 27);
}

void GroupableTag.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 28);
}

XavierNews::GroupableTag __swiftcall GroupableTag.init(identifier:score:optionalAutofavorite:subscribed:autofavorited:groupable:kind:)(Swift::String identifier, Swift::Double score, Swift::Bool optionalAutofavorite, Swift::Bool subscribed, Swift::Bool autofavorited, Swift::Bool groupable, XavierNews::GroupableTag::Kind kind)
{
  char v8 = *(unsigned char *)kind;
  *(Swift::String *)uint64_t v7 = identifier;
  *(Swift::Double *)(v7 + 16) = score;
  *(unsigned char *)(v7 + 24) = optionalAutofavorite;
  *(unsigned char *)(v7 + 25) = subscribed;
  *(unsigned char *)(v7 + 26) = autofavorited;
  *(unsigned char *)(v7 + 27) = groupable;
  *(unsigned char *)(v7 + 28) = v8;
  result.identifier = identifier;
  result.score = score;
  result.optionalAutofavorite = optionalAutofavorite;
  return result;
}

uint64_t GroupableTag.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t GroupableTag.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE812784()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8127E0()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE812838()
{
  return sub_1DE8E1BD0();
}

uint64_t GroupableTag.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1DE812948()
{
  return 0;
}

uint64_t _s10XavierNews12GroupableTagV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 25);
  int v5 = *(unsigned __int8 *)(a1 + 26);
  int v6 = *(unsigned __int8 *)(a1 + 27);
  int v7 = *(unsigned __int8 *)(a1 + 28);
  double v8 = *(double *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 25);
  int v11 = *(unsigned __int8 *)(a2 + 26);
  int v12 = *(unsigned __int8 *)(a2 + 27);
  int v13 = *(unsigned __int8 *)(a2 + 28);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    uint64_t result = 0;
  }
  else
  {
    char v15 = sub_1DE8E1AC0();
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  if (v2 == v8 && ((v3 ^ v9) & 1) == 0 && ((v4 ^ v10) & 1) == 0 && ((v5 ^ v11) & 1) == 0 && ((v6 ^ v12) & 1) == 0) {
    return v7 ^ v13 ^ 1u;
  }
  return result;
}

unint64_t sub_1DE812AE4()
{
  unint64_t result = qword_1EAC0B800;
  if (!qword_1EAC0B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B800);
  }
  return result;
}

unint64_t sub_1DE812B3C()
{
  unint64_t result = qword_1EBEA8CA8;
  if (!qword_1EBEA8CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CA8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupableTag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GroupableTag()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupableTag(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupableTag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GroupableTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupableTag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 29)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupableTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 29) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupableTag()
{
  return &type metadata for GroupableTag;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GroupableTag.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GroupableTag.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE812F1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE812F44(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE812F50(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GroupableTag.Kind()
{
  return &type metadata for GroupableTag.Kind;
}

uint64_t sub_1DE812F6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE812F74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE812F7C()
{
  uint64_t v3 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1DE812FC0(v1);
  return v3;
}

uint64_t sub_1DE812FC0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  __n128 result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  __n128 result = (uint64_t)sub_1DE839F24((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __n128 result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    __n128 result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t _s17TagGroupingResultVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s17TagGroupingResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s17TagGroupingResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *_s17TagGroupingResultVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17TagGroupingResultVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17TagGroupingResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17TagGroupingResultVMa()
{
  return &_s17TagGroupingResultVN;
}

uint64_t sub_1DE81326C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  __n128 result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  __n128 result = (uint64_t)sub_1DE83A318((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __n128 result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    __n128 result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DE81335C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  __n128 result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  __n128 result = (uint64_t)sub_1DE83A608((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __n128 result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    __n128 result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DE813448(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *v1;
  int64_t v5 = *((void *)*v1 + 2);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = *((void *)v4 + 3) >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_1DE83A608(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = *((void *)v4 + 3) >> 1;
  }
  uint64_t v11 = *((void *)v4 + 2);
  uint64_t v12 = v9 - v11;
  __n128 result = sub_1DE82C650((uint64_t)v38, &v4[16 * v11 + 32], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = *((void *)v4 + 2);
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    *((void *)v4 + 2) = v16;
  }
  if (result != v12)
  {
LABEL_13:
    __n128 result = sub_1DE813E08();
    *uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = *((void *)v4 + 2);
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  __n128 result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = *((void *)v4 + 3);
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    *((void *)v4 + 2) = v2;
  }
  __n128 result = (uint64_t)sub_1DE83A608((char *)(v22 > 1), v2 + 1, 1, v4);
  int64_t v4 = (char *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    v24 = &v4[16 * v2 + 32];
    *(void *)v24 = v21;
    *((void *)v24 + 1) = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              *((void *)v4 + 2) = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      __n128 result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    __n128 result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1DE813814(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = *((void *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_1DE83A960(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = *((void *)v3 + 3) >> 1;
  }
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = v8 - v10;
  __n128 result = sub_1DE82CBF8((uint64_t)v56, (uint64_t)&v3[56 * v10 + 32], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = *((void *)v3 + 2);
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_51;
    }
    *((void *)v3 + 2) = v16;
  }
  if (result != v11) {
    goto LABEL_13;
  }
LABEL_16:
  int64_t v13 = *((void *)v3 + 2);
  uint64_t v50 = v56[0];
  uint64_t v49 = v56[1];
  int64_t v12 = v57;
  uint64_t v47 = v56[2];
  if (!v58)
  {
LABEL_51:
    uint64_t v35 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v29 = (unint64_t)(v47 + 64) >> 6;
    if (v35 >= v29) {
      goto LABEL_13;
    }
    int64_t v54 = v13;
    unint64_t v44 = *(void *)(v49 + 8 * v35);
    if (!v44)
    {
      uint64_t v45 = v12 + 2;
      if (v12 + 2 >= v29) {
        goto LABEL_13;
      }
      unint64_t v44 = *(void *)(v49 + 8 * v45);
      if (v44)
      {
LABEL_60:
        uint64_t v35 = v45;
      }
      else
      {
        if (v12 + 3 >= v29) {
          goto LABEL_13;
        }
        unint64_t v44 = *(void *)(v49 + 8 * (v12 + 3));
        if (!v44) {
          goto LABEL_66;
        }
        uint64_t v35 = v12 + 3;
      }
    }
LABEL_54:
    unint64_t v17 = (v44 - 1) & v44;
    unint64_t v18 = __clz(__rbit64(v44)) + (v35 << 6);
    uint64_t v52 = v35;
    goto LABEL_18;
  }
  uint64_t v52 = v57;
  int64_t v54 = *((void *)v3 + 2);
  unint64_t v17 = (v58 - 1) & v58;
  unint64_t v18 = __clz(__rbit64(v58)) | (v57 << 6);
LABEL_18:
  uint64_t v19 = *(void *)(v50 + 56) + 56 * v18;
  uint64_t v20 = *(void *)(v19 + 8);
  uint64_t v22 = *(void *)(v19 + 16);
  uint64_t v21 = *(void *)(v19 + 24);
  uint64_t v24 = *(void *)(v19 + 32);
  uint64_t v23 = *(void *)(v19 + 40);
  int v25 = *(unsigned __int8 *)(v19 + 48);
  uint64_t v26 = *(void *)v19;
  sub_1DE813E10(*(void *)v19, v20, v22, v21, v24, v23, *(unsigned char *)(v19 + 48));
  if (v25 == 255) {
    goto LABEL_13;
  }
  int64_t v48 = (unint64_t)(v47 + 64) >> 6;
  int64_t v12 = v52;
  int64_t v27 = v54;
  while (1)
  {
    unint64_t v28 = *((void *)v3 + 3);
    int64_t v29 = v28 >> 1;
    int64_t v51 = v28 >> 1;
    if ((uint64_t)(v28 >> 1) < v27 + 1)
    {
      uint64_t v55 = v26;
      int64_t v40 = v12;
      unint64_t v41 = v3;
      int64_t v42 = v27;
      v43 = sub_1DE83A960((char *)(v28 > 1), v27 + 1, 1, v41);
      int64_t v12 = v40;
      int64_t v27 = v42;
      uint64_t v3 = v43;
      uint64_t v26 = v55;
      int64_t v51 = *((void *)v43 + 3) >> 1;
    }
    if (v27 < v51) {
      break;
    }
LABEL_20:
    *((void *)v3 + 2) = v27;
    if ((_BYTE)v25 == 0xFF) {
      goto LABEL_13;
    }
  }
  while (1)
  {
    uint64_t v35 = (uint64_t)&v3[56 * v27 + 32];
    *(void *)uint64_t v35 = v26;
    *(void *)(v35 + 8) = v20;
    *(void *)(v35 + 16) = v22;
    *(void *)(v35 + 24) = v21;
    *(void *)(v35 + 32) = v24;
    *(void *)(v35 + 40) = v23;
    *(unsigned char *)(v35 + 48) = v25;
    int64_t v36 = v27 + 1;
    int64_t v54 = v36;
    if (!v17) {
      break;
    }
    unint64_t v30 = __clz(__rbit64(v17));
    uint64_t v53 = (v17 - 1) & v17;
    int64_t v31 = v12;
    unint64_t v32 = v30 | (v12 << 6);
LABEL_26:
    uint64_t v33 = *(void *)(v50 + 56) + 56 * v32;
    uint64_t v26 = *(void *)v33;
    uint64_t v20 = *(void *)(v33 + 8);
    uint64_t v22 = *(void *)(v33 + 16);
    uint64_t v21 = *(void *)(v33 + 24);
    uint64_t v24 = *(void *)(v33 + 32);
    uint64_t v23 = *(void *)(v33 + 40);
    int v25 = *(unsigned __int8 *)(v33 + 48);
    sub_1DE813E10(*(void *)v33, v20, v22, v21, v24, v23, *(unsigned char *)(v33 + 48));
    int64_t v27 = v54;
    BOOL v34 = v25 != 255 && v54 < v51;
    int64_t v12 = v31;
    unint64_t v17 = v53;
    if (!v34) {
      goto LABEL_20;
    }
  }
  int64_t v31 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v31 >= v48) {
      goto LABEL_56;
    }
    unint64_t v37 = *(void *)(v49 + 8 * v31);
    if (v37) {
      goto LABEL_41;
    }
    int64_t v38 = v12 + 2;
    if (v12 + 2 >= v48) {
      goto LABEL_56;
    }
    unint64_t v37 = *(void *)(v49 + 8 * v38);
    if (!v37)
    {
      if (v12 + 3 >= v48) {
        goto LABEL_56;
      }
      unint64_t v37 = *(void *)(v49 + 8 * (v12 + 3));
      if (v37)
      {
        int64_t v31 = v12 + 3;
        goto LABEL_41;
      }
      int64_t v38 = v12 + 4;
      if (v12 + 4 >= v48) {
        goto LABEL_56;
      }
      unint64_t v37 = *(void *)(v49 + 8 * v38);
      if (!v37)
      {
        int64_t v31 = v12 + 5;
        if (v12 + 5 >= v48) {
          goto LABEL_56;
        }
        unint64_t v37 = *(void *)(v49 + 8 * v31);
        if (!v37)
        {
          int64_t v39 = v12 + 6;
          while (v48 != v39)
          {
            unint64_t v37 = *(void *)(v49 + 8 * v39++);
            if (v37)
            {
              int64_t v31 = v39 - 1;
              goto LABEL_41;
            }
          }
LABEL_56:
          *((void *)v3 + 2) = v36;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    int64_t v31 = v38;
LABEL_41:
    uint64_t v53 = (v37 - 1) & v37;
    unint64_t v32 = __clz(__rbit64(v37)) + (v31 << 6);
    goto LABEL_26;
  }
  __break(1u);
LABEL_66:
  uint64_t v45 = v35 + 3;
  if (v35 + 3 < v29)
  {
    unint64_t v44 = *(void *)(v49 + 8 * v45);
    if (v44) {
      goto LABEL_60;
    }
    v35 += 4;
    if (v35 >= v29) {
      goto LABEL_13;
    }
    unint64_t v44 = *(void *)(v49 + 8 * v35);
    if (!v44)
    {
      int64_t v46 = v12 + 6;
      while (v29 != v46)
      {
        unint64_t v44 = *(void *)(v49 + 8 * v46++);
        if (v44)
        {
          uint64_t v35 = v46 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  __n128 result = sub_1DE813E08();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1DE813D18(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  __n128 result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  __n128 result = (uint64_t)sub_1DE83A960((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __n128 result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    __n128 result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DE813E08()
{
  return swift_release();
}

uint64_t sub_1DE813E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = a2;
  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 5:
      goto LABEL_4;
    case 3:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 4:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

double sub_1DE813EA8()
{
  return *(double *)v0;
}

double sub_1DE813EB0()
{
  return *(double *)(v0 + 8);
}

double sub_1DE813EB8()
{
  return *(double *)(v0 + 16);
}

void sub_1DE813EC0(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
}

BOOL sub_1DE813ECC(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1DE813EFC()
{
  return sub_1DE8E1BC0();
}

BOOL sub_1DE813F54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE813F68()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE813FB0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE813FDC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE814020()
{
  unint64_t v1 = 0x64757469676E6F6CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_1DE814084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE814CAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8140AC()
{
  return 0;
}

void sub_1DE8140B8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE8140C4(uint64_t a1)
{
  unint64_t v2 = sub_1DE81435C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE814100(uint64_t a1)
{
  unint64_t v2 = sub_1DE81435C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE81413C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B808);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE81435C();
  sub_1DE8E1C10();
  char v11 = 0;
  sub_1DE8E1A20();
  if (!v1)
  {
    char v10 = 1;
    sub_1DE8E1A20();
    char v9 = 2;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1DE81435C()
{
  unint64_t result = qword_1EAC0B810;
  if (!qword_1EAC0B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B810);
  }
  return result;
}

uint64_t sub_1DE8143B0()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE814404@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B818);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE81435C();
  sub_1DE8E1BF0();
  if (!v2)
  {
    v16[15] = 0;
    sub_1DE8E1910();
    uint64_t v10 = v9;
    v16[14] = 1;
    sub_1DE8E1910();
    uint64_t v13 = v12;
    v16[13] = 2;
    sub_1DE8E1910();
    uint64_t v15 = v14;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v13;
    a2[2] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE8145E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE814404(a1, a2);
}

uint64_t sub_1DE8145F8(void *a1)
{
  return sub_1DE81413C(a1);
}

BOOL sub_1DE814610(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1DE814640()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE814698()
{
  return sub_1DE8E1BD0();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1DE814738()
{
  return 0;
}

uint64_t sub_1DE8147C0@<X0>(void *a1@<X8>)
{
  sub_1DE8E1620();
  sub_1DE8E1490();
  uint64_t result = sub_1DE8E1620();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1DE814850()
{
  return 0;
}

unint64_t sub_1DE814928()
{
  unint64_t result = qword_1EBEA9910;
  if (!qword_1EBEA9910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9910);
  }
  return result;
}

uint64_t sub_1DE81497C()
{
  return MEMORY[0x1E4FBB1B0];
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Location(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Location(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Location()
{
  return &type metadata for Location;
}

uint64_t getEnumTagSinglePayload for Location.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Location.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE814B58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE814B80(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE814B8C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Location.CodingKeys()
{
  return &type metadata for Location.CodingKeys;
}

unint64_t sub_1DE814BA8()
{
  unint64_t result = qword_1EAC0B820;
  if (!qword_1EAC0B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B820);
  }
  return result;
}

unint64_t sub_1DE814C00()
{
  unint64_t result = qword_1EAC0B828;
  if (!qword_1EAC0B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B828);
  }
  return result;
}

unint64_t sub_1DE814C58()
{
  unint64_t result = qword_1EAC0B830;
  if (!qword_1EAC0B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B830);
  }
  return result;
}

uint64_t sub_1DE814CAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F0A50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void ReadonlyAggregateType.personalizationValue.getter(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(double (**)(void))(a2 + 24);
  if (v4() > 0.0)
  {
    (*(void (**)(uint64_t, uint64_t, double))(a2 + 16))(a1, a2, 0.0);
    ((double (*)(uint64_t, uint64_t))v4)(a1, a2);
  }
}

Swift::tuple_Double_Double __swiftcall ReadonlyAggregateType.prioredClicksAndImpressions(baselineClicks:baselineImpressions:decayRate:)(Swift::Double baselineClicks, Swift::Double baselineImpressions, Swift::Double decayRate)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  double v28 = (*(double (**)(void))(v4 + 16))();
  uint64_t v10 = *(double (**)(uint64_t, uint64_t))(v5 + 24);
  double v11 = v10(v6, v5);
  double v12 = 1.0 - pow(decayRate, 555.0);
  double v13 = 1.0 - decayRate;
  long double v14 = 0.0;
  long double v15 = 0.0;
  double v16 = v12 / (1.0 - decayRate);
  if (decayRate != 0.0)
  {
    if (v16 >= v11) {
      double v17 = v11;
    }
    else {
      double v17 = v12 / (1.0 - decayRate);
    }
    double v18 = 1.0 - v13 * v17;
    if (v18 == 0.0)
    {
      long double v15 = 555.0;
    }
    else
    {
      double v19 = log(v18);
      long double v15 = v19 / log(decayRate);
    }
  }
  double v20 = v10(v6, v5);
  v10(v6, v5);
  if (decayRate != 0.0)
  {
    if (v16 < v21) {
      double v21 = v16;
    }
    double v22 = 1.0 - v13 * v21;
    if (v22 == 0.0)
    {
      long double v14 = 555.0;
    }
    else
    {
      double v23 = log(v22);
      long double v14 = v23 / log(decayRate);
    }
  }
  double v24 = v28 + pow(decayRate, v15) * baselineClicks;
  if (baselineImpressions < baselineClicks) {
    baselineImpressions = baselineClicks;
  }
  double v25 = v20 + baselineImpressions * pow(decayRate, v14);
  double v26 = v24;
  result._1 = v25;
  result._0 = v26;
  return result;
}

double ReadonlyAggregateType.personalizationValue(baseline:decayRate:)(void *a1, uint64_t a2, uint64_t a3, Swift::Double a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, v4, a2);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  double v13 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1DE816588((uint64_t)v13, inited, v11, v12, a4);
  double v15 = v14;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9D98);
  swift_arrayDestroy();
  return v15;
}

uint64_t sub_1DE815180(void *a1, uint64_t a2, double a3)
{
  return sub_1DE8151B0(a1, a2, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, __n128))sub_1DE81656C, a3);
}

uint64_t sub_1DE815198(void *a1, uint64_t a2, double a3)
{
  return sub_1DE8151B0(a1, a2, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, __n128))sub_1DE8164F8, a3);
}

uint64_t sub_1DE8151B0(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t, uint64_t, __n128), double a4)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  int v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  v9.n128_f64[0] = a4;
  return a3(v8, a2, v6, v7, v9);
}

uint64_t ReadonlyAggregate.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ReadonlyAggregate.clicks.getter()
{
  return *(double *)(v0 + 16);
}

double ReadonlyAggregate.impressions.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t ReadonlyAggregate.eventCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ReadonlyAggregate.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE815F40(type metadata accessor for ReadonlyAggregate, a1);
}

uint64_t ReadonlyAggregate.init(identifier:clicks:impressions:eventCount:updatedAt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_1DE81609C(a1, a2, a3, a4, type metadata accessor for ReadonlyAggregate, a5, a6, a7);
}

uint64_t ReadonlyAggregate.init(aggregate:)@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1DE8E1350();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)a1;
  uint64_t v9 = *((void *)a1 + 1);
  uint64_t v11 = *((void *)a1 + 2);
  uint64_t v12 = *((void *)a1 + 3);
  uint64_t v13 = *((void *)a1 + 4);
  uint64_t v14 = type metadata accessor for Aggregate(0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, &a1[*(int *)(v14 + 32)], v4);
  swift_bridgeObjectRetain();
  sub_1DE816970((uint64_t)a1, type metadata accessor for Aggregate);
  *(void *)a2 = v10;
  *((void *)a2 + 1) = v9;
  *((void *)a2 + 2) = v11;
  *((void *)a2 + 3) = v12;
  *((void *)a2 + 4) = v13;
  uint64_t v15 = type metadata accessor for ReadonlyAggregate(0);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(&a2[*(int *)(v15 + 32)], v8, v4);
}

BOOL sub_1DE8153EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE815400()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE815448()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE815474()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8154B8()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736B63696C63;
      break;
    case 2:
      uint64_t result = 0x6973736572706D69;
      break;
    case 3:
      uint64_t result = 0x756F43746E657665;
      break;
    case 4:
      uint64_t result = 0x4164657461647075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE815570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE817510(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE815598()
{
  return 0;
}

void sub_1DE8155A4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DE8155B0(uint64_t a1)
{
  unint64_t v2 = sub_1DE816870();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8155EC(uint64_t a1)
{
  unint64_t v2 = sub_1DE816870();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ReadonlyAggregate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B838);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE816870();
  sub_1DE8E1C10();
  v9[15] = 0;
  sub_1DE8E1A00();
  if (!v1)
  {
    v9[14] = 1;
    sub_1DE8E1A20();
    v9[13] = 2;
    sub_1DE8E1A20();
    v9[12] = 3;
    sub_1DE8E1A50();
    type metadata accessor for ReadonlyAggregate(0);
    v9[11] = 4;
    sub_1DE8E1350();
    sub_1DE8168C4(&qword_1EBEA8CA0, MEMORY[0x1E4F27928]);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t ReadonlyAggregate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_1DE8E1350();
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B848);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ReadonlyAggregate(0);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  unint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DE816870();
  uint64_t v16 = v33;
  sub_1DE8E1BF0();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  uint64_t v17 = v6;
  uint64_t v18 = v30;
  uint64_t v19 = v3;
  char v38 = 0;
  uint64_t v20 = (uint64_t)v14;
  *uint64_t v14 = sub_1DE8E18F0();
  v14[1] = v21;
  char v37 = 1;
  sub_1DE8E1910();
  v14[2] = v22;
  char v36 = 2;
  sub_1DE8E1910();
  v14[3] = v23;
  char v35 = 3;
  v14[4] = sub_1DE8E1940();
  char v34 = 4;
  sub_1DE8168C4(&qword_1EAC0B850, MEMORY[0x1E4F27928]);
  uint64_t v24 = v19;
  uint64_t v25 = v31;
  sub_1DE8E1930();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v25);
  uint64_t v26 = (uint64_t)v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v20 + *(int *)(v11 + 32), v17, v24);
  sub_1DE81690C(v20, v29);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return sub_1DE816970(v20, type metadata accessor for ReadonlyAggregate);
}

uint64_t sub_1DE815C08()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1DE815C38()
{
  return *(double *)(v0 + 16);
}

double sub_1DE815C40()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1DE815C48()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1DE815C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadonlyAggregate.init(from:)(a1, a2);
}

uint64_t sub_1DE815C6C(void *a1)
{
  return ReadonlyAggregate.encode(to:)(a1);
}

uint64_t ReadonlyAggregate.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t ReadonlyAggregate.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE815D38()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE815D94()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE815DEC()
{
  return sub_1DE8E1BD0();
}

uint64_t static ReadonlyAggregate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1DE8169D0(a1, a2, type metadata accessor for ReadonlyAggregate) & 1;
}

uint64_t sub_1DE815E74(uint64_t a1, uint64_t a2)
{
  return sub_1DE8169D0(a1, a2, type metadata accessor for ReadonlyAggregate) & 1;
}

void sub_1DE815EA4(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*sub_1DE815EAC())()
{
  return nullsub_3;
}

void sub_1DE815ED0(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*sub_1DE815ED8())()
{
  return nullsub_4;
}

uint64_t sub_1DE815EFC(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*sub_1DE815F04())()
{
  return nullsub_5;
}

uint64_t sub_1DE815F28@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE815F40(type metadata accessor for Aggregate, a1);
}

uint64_t sub_1DE815F40@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 32);
  uint64_t v5 = sub_1DE8E1350();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DE815FC0(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Aggregate(0) + 32);
  uint64_t v4 = sub_1DE8E1350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*sub_1DE816038())()
{
  return nullsub_6;
}

uint64_t sub_1DE816084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_1DE81609C(a1, a2, a3, a4, type metadata accessor for Aggregate, a5, a6, a7);
}

uint64_t sub_1DE81609C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(double *)(a6 + 16) = a7;
  *(double *)(a6 + 24) = a8;
  *(void *)(a6 + 32) = a3;
  uint64_t v9 = a6 + *(int *)(a5(0) + 32);
  uint64_t v10 = sub_1DE8E1350();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  return v11(v9, a4, v10);
}

uint64_t sub_1DE816128@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v8 = v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  double v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  double v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 40);
  type metadata accessor for Aggregate(0);
  v20(v18, v19);
  *a2 = v6;
  a2[1] = v8;
  *((double *)a2 + 2) = v11;
  *((double *)a2 + 3) = v14;
  a2[4] = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE8162A4(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*sub_1DE8162AC())()
{
  return nullsub_7;
}

void sub_1DE8162D0(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*sub_1DE8162D8())()
{
  return nullsub_8;
}

uint64_t sub_1DE8162FC(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*sub_1DE816304())()
{
  return nullsub_9;
}

uint64_t sub_1DE816328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DE8E1350();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_1DE816398())()
{
  return nullsub_10;
}

uint64_t sub_1DE8163C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_1DE8E1350();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DE816434(uint64_t a1, uint64_t a2)
{
  return sub_1DE8169D0(a1, a2, type metadata accessor for Aggregate) & 1;
}

uint64_t sub_1DE816464(uint64_t a1, uint64_t a2)
{
  return sub_1DE8169D0(a1, a2, type metadata accessor for Aggregate) & 1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

double sub_1DE8164F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Double a5)
{
  double v8 = sub_1DE816588(a1, a2, a3, a4, a5);
  double v10 = v9;
  ReadonlyAggregateType.personalizationValue.getter(a3, a4);
  return (v10 - v11) * ((1.0 - a5) * v8);
}

double sub_1DE81656C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Double a5)
{
  sub_1DE816588(a1, a2, a3, a4, a5);
  return v5;
}

double sub_1DE816588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Double a5)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a1);
  double v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = a2 + 32;
    sub_1DE81775C(a2 + 32 + 40 * v12 - 40, (uint64_t)v22);
    Swift::Double v14 = (*(double (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    Swift::Double v15 = (*(double (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DE81775C(v13, (uint64_t)v21);
      __swift_project_boxed_opaque_existential_1(v21, v21[3]);
      Swift::tuple_Double_Double v16 = ReadonlyAggregateType.prioredClicksAndImpressions(baselineClicks:baselineImpressions:decayRate:)(v14, v15, a5);
      Swift::Double v14 = v16._0;
      Swift::Double v15 = v16._1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      v13 += 40;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v17 = v23;
    uint64_t v18 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    double v19 = (*(double (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    ReadonlyAggregateType.personalizationValue.getter(a3, a4);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a3);
  return v19;
}

uint64_t type metadata accessor for ReadonlyAggregate(uint64_t a1)
{
  return sub_1DE816838(a1, (uint64_t *)&unk_1EAC0B860);
}

uint64_t type metadata accessor for Aggregate(uint64_t a1)
{
  return sub_1DE816838(a1, (uint64_t *)&unk_1EAC0B870);
}

uint64_t sub_1DE816838(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1DE816870()
{
  unint64_t result = qword_1EAC0B840;
  if (!qword_1EAC0B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B840);
  }
  return result;
}

uint64_t sub_1DE8168C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE81690C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadonlyAggregate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE816970(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DE8169D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v6 && (sub_1DE8E1AC0() & 1) == 0
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24)
    || *(void *)(a1 + 32) != *(void *)(a2 + 32))
  {
    return 0;
  }
  uint64_t v7 = *(int *)(a3(0) + 32);
  return MEMORY[0x1F40E52C0](a1 + v7, a2 + v7);
}

uint64_t sub_1DE816A90()
{
  return sub_1DE8168C4(&qword_1EAC0B858, (void (*)(uint64_t))type metadata accessor for ReadonlyAggregate);
}

uint64_t dispatch thunk of AggregateType.clicks.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AggregateType.clicks.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AggregateType.impressions.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AggregateType.impressions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AggregateType.eventCount.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AggregateType.eventCount.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of AggregateType.updatedAt.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of AggregateType.updatedAt.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of ReadonlyAggregateType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadonlyAggregateType.clicks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadonlyAggregateType.impressions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ReadonlyAggregateType.eventCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ReadonlyAggregateType.updatedAt.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t getEnumTagSinglePayload for ReadonlyAggregate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for ReadonlyAggregate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

void *_s10XavierNews17ReadonlyAggregateVwCP_0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DE8E1350();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s10XavierNews17ReadonlyAggregateVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DE8E1350();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t _s10XavierNews17ReadonlyAggregateVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DE8E1350();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *_s10XavierNews17ReadonlyAggregateVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DE8E1350();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t _s10XavierNews17ReadonlyAggregateVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DE8E1350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t _s10XavierNews17ReadonlyAggregateVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE8E1350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DE81702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE817040);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DE8E1350();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DE8170F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE817108);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DE8E1350();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DE8171B8()
{
  uint64_t result = sub_1DE8E1350();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadonlyAggregate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReadonlyAggregate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8173BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8173E4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8173F0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReadonlyAggregate.CodingKeys()
{
  return &type metadata for ReadonlyAggregate.CodingKeys;
}

unint64_t sub_1DE81740C()
{
  unint64_t result = qword_1EAC0B880;
  if (!qword_1EAC0B880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B880);
  }
  return result;
}

unint64_t sub_1DE817464()
{
  unint64_t result = qword_1EAC0B888;
  if (!qword_1EAC0B888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B888);
  }
  return result;
}

unint64_t sub_1DE8174BC()
{
  unint64_t result = qword_1EAC0B890;
  if (!qword_1EAC0B890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B890);
  }
  return result;
}

uint64_t sub_1DE817510(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F43746E657665 && a2 == 0xEA0000000000746ELL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4164657461647075 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1DE81775C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t ConfigurableValue.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v6);
  int v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(a2, a1, AssociatedTypeWitness);
  v9((uint64_t)v8, a1, AssociatedTypeWitness);
  type metadata accessor for ConfigurableValue();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(a2, v8, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
}

uint64_t ConfigurableValue.wrappedValue.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t type metadata accessor for ConfigurableValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ConfigurableValue.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_1DE817A80(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v3);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - v4, a1);
  type metadata accessor for ConfigurableValue();
  return ConfigurableValue.wrappedValue.setter((uint64_t)v5);
}

void (*ConfigurableValue.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x38uLL);
  *a1 = v5;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *uint64_t v5 = v2;
  v5[1] = v6;
  v5[2] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[3] = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = v9;
  v5[4] = v9;
  size_t v11 = *(void *)(v9 + 64);
  v5[5] = malloc(v11);
  v5[6] = malloc(v11);
  (*(void (**)(void))(v10 + 16))();
  return sub_1DE817C88;
}

void sub_1DE817C88(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  if (a2)
  {
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(v7, v3, AssociatedTypeWitness);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v9 = *v2;
    uint64_t v10 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v10 - 8) + 40))(v9, v4, v10);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t ConfigurableValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v34 = sub_1DE8E1760();
  uint64_t v30 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34, v5);
  char v35 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness, v8);
  size_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  char v36 = (char *)&v27 - v13;
  uint64_t v37 = a2;
  uint64_t v14 = type metadata accessor for ConfigurableValue();
  uint64_t v32 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v27 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v39;
  sub_1DE8E1BE0();
  if (v18)
  {
    uint64_t v19 = (uint64_t)a1;
  }
  else
  {
    int64_t v27 = v11;
    uint64_t v28 = v17;
    uint64_t v29 = v14;
    int64_t v39 = a1;
    __swift_project_boxed_opaque_existential_1(v38, v38[3]);
    swift_getAssociatedConformanceWitness();
    uint64_t v20 = v36;
    sub_1DE8E1AE0();
    uint64_t v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v20, AssociatedTypeWitness);
    uint64_t v23 = v32;
    uint64_t v22 = v33;
    uint64_t v24 = (uint64_t)v39;
    uint64_t v25 = v29;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v22, v21, v25);
    uint64_t v19 = v24;
  }
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

uint64_t ConfigurableValue.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8E1C00();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DE8E1B00();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t static ConfigurableValue.== infix(_:_:)()
{
  return sub_1DE8E1450() & 1;
}

uint64_t sub_1DE818578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v6);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - v7, a1, AssociatedTypeWitness);
  ConfigurableValue.init(wrappedValue:)((uint64_t)v8, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
}

uint64_t _s10XavierNews28ConditionalConfigurableValueV07wrappedE00E0Qzvg_0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ConfigurableValue();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_1DE818724@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ConfigurableValue.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1DE818744(void *a1)
{
  return ConfigurableValue.encode(to:)(a1);
}

uint64_t sub_1DE81875C()
{
  return static ConfigurableValue.== infix(_:_:)();
}

uint64_t ConditionalConfigurableValue.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v20 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v13);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v16((char *)&v19 - v14, a1, AssociatedTypeWitness);
  sub_1DE818578((uint64_t)v15, a6);
  v16(v15, a1, AssociatedTypeWitness);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = v20;
  uint64_t v17 = (void *)type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v15, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, AssociatedTypeWitness);
}

uint64_t ConditionalConfigurableValue.wrappedValue.setter(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[4];
  uint64_t v6 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v8);
  uint64_t v10 = (char *)&v31 - v9;
  size_t v11 = (uint64_t (*)(uint64_t))(*(uint64_t (**)(void))(a2[5] + 40))(a2[3]);
  char v12 = v11(a1);
  swift_release();
  if (v12)
  {
    sub_1DE8196FC(a1);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8);
    return v13(a1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v34 = v5;
    uint64_t v35 = v2;
    uint64_t v15 = a1;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1DE8E28D0;
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    id v32 = v16;
    uint64_t v33 = v15;
    sub_1DE8E1AA0();
    uint64_t v18 = v37;
    unint64_t v19 = v38;
    uint64_t v20 = MEMORY[0x1E4FBB1A0];
    *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v21 = sub_1DE819640();
    *(void *)(v17 + 64) = v21;
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v19;
    uint64_t v22 = sub_1DE8E1C40();
    *(void *)(v17 + 96) = v20;
    *(void *)(v17 + 104) = v21;
    *(void *)(v17 + 72) = v22;
    *(void *)(v17 + 80) = v23;
    uint64_t v24 = sub_1DE8E1C40();
    *(void *)(v17 + 136) = v20;
    *(void *)(v17 + 144) = v21;
    *(void *)(v17 + 112) = v24;
    *(void *)(v17 + 120) = v25;
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    uint64_t v26 = v34;
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v34 + 40);
    v31(v6, v34);
    sub_1DE8E1AA0();
    int64_t v27 = *(void (**)(char *, uint64_t))(v36 + 8);
    v36 += 8;
    v27(v10, AssociatedTypeWitness);
    uint64_t v28 = v37;
    unint64_t v29 = v38;
    *(void *)(v17 + 176) = MEMORY[0x1E4FBB1A0];
    *(void *)(v17 + 184) = v21;
    *(void *)(v17 + 152) = v28;
    *(void *)(v17 + 160) = v29;
    sub_1DE8E16C0();
    uint64_t v30 = v32;
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    v31(v6, v26);
    sub_1DE8196FC((uint64_t)v10);
    v27(v10, AssociatedTypeWitness);
    return ((uint64_t (*)(uint64_t, uint64_t))v27)(v33, AssociatedTypeWitness);
  }
}

uint64_t sub_1DE818C48()
{
  uint64_t v0 = type metadata accessor for ConditionalConfigurableValue();
  return ConditionalConfigurableValue.wrappedValue.getter(v0);
}

uint64_t sub_1DE818C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5 = *(_OWORD *)(a4 + a3 - 16);
  long long v13 = *(_OWORD *)(a4 + a3 - 32);
  long long v14 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v7);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v13 - v8, a1);
  long long v15 = v13;
  long long v16 = v14;
  size_t v11 = (void *)type metadata accessor for ConditionalConfigurableValue();
  return ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v9, v11);
}

void (*ConditionalConfigurableValue.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  long long v5 = malloc(0x30uLL);
  *a1 = v5;
  *long long v5 = a2;
  v5[1] = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[2] = AssociatedTypeWitness;
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  _s10XavierNews28ConditionalConfigurableValueV07wrappedE00E0Qzvg_0((uint64_t)v9);
  return sub_1DE818E8C;
}

void sub_1DE818E8C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = (void *)*v2;
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 32), v4, v5);
    ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    ConditionalConfigurableValue.wrappedValue.setter(*(void *)(*(void *)a1 + 40), (void *)*v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t ConditionalConfigurableValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness, v12);
  long long v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v60 = a4;
  v61 = (char *)&v49 - v17;
  v64[0] = a2;
  v64[1] = a3;
  uint64_t v55 = a5;
  v56 = a3;
  v64[2] = a4;
  uint64_t v65 = a5;
  uint64_t v18 = type metadata accessor for ConditionalConfigurableValue();
  uint64_t v57 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v19);
  unint64_t v21 = (char *)&v49 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v22 = v66;
  sub_1DE8E1BE0();
  if (v22)
  {
    uint64_t v25 = (uint64_t)a1;
  }
  else
  {
    uint64_t v53 = v21;
    int64_t v54 = v15;
    uint64_t v52 = v18;
    v66 = a1;
    __swift_project_boxed_opaque_existential_1(v64, v65);
    uint64_t v23 = v60;
    swift_getAssociatedConformanceWitness();
    uint64_t v24 = v61;
    sub_1DE8E1AE0();
    uint64_t v27 = AssociatedTypeWitness;
    uint64_t v28 = v23;
    unint64_t v29 = (uint64_t (*)(char *))(*(uint64_t (**)(void (*)(uint64_t, uint64_t)))(v55 + 40))(v56);
    char v30 = v29(v24);
    swift_release();
    if (v30)
    {
      uint64_t v31 = v58;
      uint64_t v32 = (uint64_t)v54;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v54, v24, v27);
      uint64_t v33 = (uint64_t)v53;
      sub_1DE818578(v32, (uint64_t)v53);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v27);
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v34 = (uint64_t)v54;
      if (qword_1EAC0B7D0 != -1) {
        swift_once();
      }
      uint64_t v35 = (void *)qword_1EAC0B8A8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1DE8E28D0;
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      id v51 = v35;
      sub_1DE8E1AA0();
      uint64_t v50 = v27;
      uint64_t v37 = v62;
      unint64_t v38 = v63;
      uint64_t v39 = MEMORY[0x1E4FBB1A0];
      *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v40 = sub_1DE819640();
      *(void *)(v36 + 64) = v40;
      *(void *)(v36 + 32) = v37;
      *(void *)(v36 + 40) = v38;
      uint64_t v41 = sub_1DE8E1C40();
      *(void *)(v36 + 96) = v39;
      *(void *)(v36 + 104) = v40;
      *(void *)(v36 + 72) = v41;
      *(void *)(v36 + 80) = v42;
      uint64_t v43 = sub_1DE8E1C40();
      *(void *)(v36 + 136) = v39;
      *(void *)(v36 + 144) = v40;
      *(void *)(v36 + 112) = v43;
      *(void *)(v36 + 120) = v44;
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      v56 = *(void (**)(uint64_t, uint64_t))(v28 + 40);
      v56(a2, v28);
      uint64_t v45 = v50;
      sub_1DE8E1AA0();
      uint64_t v58 = *(void *)(v58 + 8);
      ((void (*)(uint64_t, uint64_t))v58)(v34, v45);
      uint64_t v46 = v62;
      unint64_t v47 = v63;
      *(void *)(v36 + 176) = MEMORY[0x1E4FBB1A0];
      *(void *)(v36 + 184) = v40;
      *(void *)(v36 + 152) = v46;
      *(void *)(v36 + 160) = v47;
      sub_1DE8E16C0();
      int64_t v48 = v51;
      sub_1DE8E13A0();

      swift_bridgeObjectRelease();
      v56(a2, v28);
      uint64_t v33 = (uint64_t)v53;
      sub_1DE818578(v34, (uint64_t)v53);
      ((void (*)(char *, uint64_t))v58)(v61, v45);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v59, v33, v52);
    uint64_t v25 = (uint64_t)v66;
  }
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t ConditionalConfigurableValue.encode(to:)(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v4);
  uint64_t v6 = &v9[-v5 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8E1C00();
  _s10XavierNews28ConditionalConfigurableValueV07wrappedE00E0Qzvg_0((uint64_t)v6);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  swift_getAssociatedConformanceWitness();
  sub_1DE8E1B00();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, AssociatedTypeWitness);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t static ConditionalConfigurableValue.== infix(_:_:)()
{
  return static ConfigurableValue.== infix(_:_:)();
}

uint64_t sub_1DE8195F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ConditionalConfigurableValue.init(from:)(a1, *(void *)(a2 + 16), *(void (**)(uint64_t, uint64_t))(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), a3);
}

uint64_t sub_1DE819618(void *a1)
{
  return ConditionalConfigurableValue.encode(to:)(a1);
}

uint64_t sub_1DE819630()
{
  return static ConditionalConfigurableValue.== infix(_:_:)();
}

unint64_t sub_1DE819640()
{
  unint64_t result = qword_1EBEAA1E8;
  if (!qword_1EBEAA1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEAA1E8);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for ConditionalConfigurableValue()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DE8196FC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v4);
  uint64_t v6 = (char *)&v10 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v10 - v5, a1);
  type metadata accessor for ConfigurableValue();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v1, v6, v8);
}

uint64_t sub_1DE819844@<X0>(uint64_t a1@<X8>)
{
  return ConfigurableValue.wrappedValue.getter(a1);
}

uint64_t sub_1DE819884()
{
  return 16;
}

__n128 sub_1DE819890(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1DE8198A4()
{
  return 32;
}

__n128 sub_1DE8198B0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1DE8198BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1DE8198C4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DE819964(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1DE819A40(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_1DE819ABC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE819B34(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE819BAC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE819C24(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE819C9C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        size_t v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_1DE819E4C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DE81A088);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_1DE81A0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1DE81A0B8()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DE81A15C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1DE81A23C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_1DE81A2BC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE81A338(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE81A3B4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE81A430(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DE81A4AC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        int v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_1DE81A660(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DE81A8A0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_1DE81A8C8()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DE8E1460();
  }
  sub_1DE81A9A4();
  uint64_t result = sub_1DE8E16D0();
  qword_1EBEA7DC0 = result;
  return result;
}

unint64_t sub_1DE81A9A4()
{
  unint64_t result = qword_1EBEA9BF0;
  if (!qword_1EBEA9BF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBEA9BF0);
  }
  return result;
}

uint64_t sub_1DE81A9E4()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DE8E1460();
  }
  sub_1DE81A9A4();
  uint64_t result = sub_1DE8E16D0();
  qword_1EBEA9E90 = result;
  return result;
}

uint64_t sub_1DE81AABC()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DE8E1460();
  }
  sub_1DE81A9A4();
  uint64_t result = sub_1DE8E16D0();
  qword_1EBEA9800 = result;
  return result;
}

uint64_t sub_1DE81AB94()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DE8E1460();
  }
  sub_1DE81A9A4();
  uint64_t result = sub_1DE8E16D0();
  qword_1EBEA9228 = result;
  return result;
}

uint64_t sub_1DE81AC6C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DE8E1460();
  }
  sub_1DE81A9A4();
  uint64_t result = sub_1DE8E16D0();
  qword_1EBEA97F0 = result;
  return result;
}

uint64_t sub_1DE81AD44()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1DE8E1460();
  }
  sub_1DE81A9A4();
  uint64_t result = sub_1DE8E16D0();
  qword_1EAC0B8A8 = result;
  return result;
}

void sub_1DE81AE1C()
{
  if (qword_1EBEA80A8[0] != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBEA9228;
  os_log_type_t v1 = sub_1DE8E1690();
  BOOL v2 = os_log_type_enabled(v0, v1);

  long long v3 = (uint64_t (*)(uint64_t (*)(void), uint64_t))nullsub_12;
  if (v2) {
    long long v3 = sub_1DE81AEC8;
  }
  qword_1EBEB2000 = (uint64_t)v3;
  *(void *)algn_1EBEB2008 = 0;
}

uint64_t sub_1DE81AEC8(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_1DE81AFC0(a1, a2, qword_1EBEA80A8, (id *)&qword_1EBEA9228);
}

void sub_1DE81AEF0()
{
  if (qword_1EBEA9E80 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBEA9E90;
  os_log_type_t v1 = sub_1DE8E1690();
  BOOL v2 = os_log_type_enabled(v0, v1);

  long long v3 = (uint64_t (*)(uint64_t (*)(void), uint64_t))j_nullsub_12;
  if (v2) {
    long long v3 = sub_1DE81AF9C;
  }
  qword_1EAC1CAC8 = (uint64_t)v3;
  unk_1EAC1CAD0 = 0;
}

uint64_t sub_1DE81AF9C(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_1DE81AFC0(a1, a2, &qword_1EBEA9E80, (id *)&qword_1EBEA9E90);
}

uint64_t sub_1DE81AFC0(uint64_t (*a1)(void), uint64_t a2, void *a3, id *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  id v6 = *a4;
  sub_1DE8E1690();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DE8E25E0;
  uint64_t v8 = a1();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1DE819640();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  sub_1DE8E13A0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE81B0BC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DE8E1B20();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 0;
  char v5 = 57;
  switch(v2)
  {
    case 0:
      goto LABEL_59;
    case 1:
      char v4 = 1;
      goto LABEL_59;
    case 2:
      char v4 = 2;
      goto LABEL_59;
    case 3:
      char v4 = 3;
      goto LABEL_59;
    case 4:
      char v4 = 4;
      goto LABEL_59;
    case 5:
      char v4 = 5;
      goto LABEL_59;
    case 6:
      char v4 = 6;
      goto LABEL_59;
    case 7:
      char v4 = 7;
      goto LABEL_59;
    case 8:
      char v4 = 8;
      goto LABEL_59;
    case 9:
      char v4 = 9;
      goto LABEL_59;
    case 10:
      char v4 = 10;
      goto LABEL_59;
    case 11:
      char v4 = 11;
      goto LABEL_59;
    case 12:
      char v4 = 12;
      goto LABEL_59;
    case 13:
      char v4 = 13;
      goto LABEL_59;
    case 14:
      char v4 = 14;
      goto LABEL_59;
    case 15:
      char v4 = 15;
      goto LABEL_59;
    case 16:
      char v4 = 16;
      goto LABEL_59;
    case 17:
      char v4 = 17;
      goto LABEL_59;
    case 18:
      char v4 = 18;
      goto LABEL_59;
    case 19:
      char v4 = 19;
      goto LABEL_59;
    case 20:
      char v4 = 20;
      goto LABEL_59;
    case 21:
      char v4 = 21;
      goto LABEL_59;
    case 22:
      char v4 = 22;
      goto LABEL_59;
    case 23:
      char v4 = 23;
      goto LABEL_59;
    case 24:
      char v4 = 24;
      goto LABEL_59;
    case 25:
      char v4 = 25;
      goto LABEL_59;
    case 26:
      char v4 = 26;
      goto LABEL_59;
    case 27:
      char v4 = 27;
      goto LABEL_59;
    case 28:
      char v4 = 28;
      goto LABEL_59;
    case 29:
      char v4 = 29;
      goto LABEL_59;
    case 30:
      char v4 = 30;
      goto LABEL_59;
    case 31:
      char v4 = 31;
      goto LABEL_59;
    case 32:
      char v4 = 32;
      goto LABEL_59;
    case 33:
      char v4 = 33;
      goto LABEL_59;
    case 34:
      char v4 = 34;
      goto LABEL_59;
    case 35:
      char v4 = 35;
      goto LABEL_59;
    case 36:
      char v4 = 36;
      goto LABEL_59;
    case 37:
      char v4 = 37;
      goto LABEL_59;
    case 38:
      char v4 = 38;
      goto LABEL_59;
    case 39:
      char v4 = 39;
      goto LABEL_59;
    case 40:
      char v4 = 40;
      goto LABEL_59;
    case 41:
      char v4 = 41;
      goto LABEL_59;
    case 42:
      char v4 = 42;
      goto LABEL_59;
    case 43:
      char v4 = 43;
      goto LABEL_59;
    case 44:
      char v4 = 44;
      goto LABEL_59;
    case 45:
      char v4 = 45;
      goto LABEL_59;
    case 46:
      char v4 = 46;
      goto LABEL_59;
    case 47:
      char v4 = 47;
      goto LABEL_59;
    case 48:
      char v4 = 48;
      goto LABEL_59;
    case 49:
      char v4 = 49;
      goto LABEL_59;
    case 50:
      char v4 = 50;
      goto LABEL_59;
    case 51:
      char v4 = 51;
      goto LABEL_59;
    case 52:
      char v4 = 52;
      goto LABEL_59;
    case 53:
      char v4 = 53;
      goto LABEL_59;
    case 54:
      char v4 = 54;
      goto LABEL_59;
    case 55:
      char v4 = 55;
      goto LABEL_59;
    case 56:
      char v4 = 56;
LABEL_59:
      char v5 = v4;
      break;
    case 57:
      break;
    case 58:
      char v5 = 58;
      break;
    case 59:
      char v5 = 59;
      break;
    case 60:
      char v5 = 60;
      break;
    case 61:
      char v5 = 61;
      break;
    case 62:
      char v5 = 62;
      break;
    case 63:
      char v5 = 63;
      break;
    case 64:
      char v5 = 64;
      break;
    case 65:
      char v5 = 65;
      break;
    case 66:
      char v5 = 66;
      break;
    case 67:
      char v5 = 67;
      break;
    case 68:
      char v5 = 68;
      break;
    case 69:
      char v5 = 69;
      break;
    case 70:
      char v5 = 70;
      break;
    case 71:
      char v5 = 71;
      break;
    case 72:
      char v5 = 72;
      break;
    case 73:
      char v5 = 73;
      break;
    case 74:
      char v5 = 74;
      break;
    default:
      char v5 = 75;
      break;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1DE81B4C4()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1634891107;
      return v2 | 0x64657400000000;
    case 2:
      return 0x657061707377656ELL;
    case 3:
      return 0x77654E6C61636F6CLL;
    case 4:
      return 0x6957646572616873;
    case 5:
      return 0x676E69646E657274;
    case 6:
      return 0x697A6167614D796DLL;
    case 7:
    case 0xA:
      return 0x6465727574616566;
    case 8:
      return 0x736575737369;
    case 9:
      return 0x6369706F74;
    case 0xB:
      return 0xD000000000000014;
    case 0xC:
      return 0xD000000000000011;
    case 0xD:
      return 0x657573734977656ELL;
    case 0xE:
      unsigned int v3 = 1953460339;
      return v3 | 0x6867696C00000000;
    case 0xF:
      return 0x676E696B61657262;
    case 0x10:
      return 0x456C616963657073;
    case 0x11:
      return 0x4C656C6369747261;
    case 0x12:
      return 0xD000000000000012;
    case 0x13:
      return 0x7542664F74736562;
    case 0x14:
    case 0x1A:
    case 0x27:
    case 0x2E:
    case 0x38:
    case 0x3B:
    case 0x3F:
    case 0x45:
    case 0x4A:
      return 0xD000000000000010;
    case 0x15:
      return 0x6C656E6E616863;
    case 0x16:
      return 0x69726F7453706F74;
    case 0x17:
      return 0x6D6F724665726F6DLL;
    case 0x18:
      unsigned int v2 = 1634493810;
      return v2 | 0x64657400000000;
    case 0x19:
      return 0x756F59726F66;
    case 0x1B:
      return 0x6F7661466F747561;
    case 0x1C:
      return 0x697242796C696164;
    case 0x1D:
      return 0xD000000000000012;
    case 0x1E:
      return 0x4E70556F69647561;
    case 0x1F:
      return 0x726F466F69647561;
    case 0x20:
      return 0xD000000000000013;
    case 0x21:
      return 0x59726F4665726F6DLL;
    case 0x22:
      return 0x6F6C6C6F4677656ELL;
    case 0x23:
      uint64_t v4 = 0x74736574616CLL;
      return v4 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
    case 0x24:
      return 25697;
    case 0x25:
      return 0x746E6F436E656573;
    case 0x26:
      uint64_t v4 = 0x64657373696DLL;
      return v4 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
    case 0x28:
      return 0xD000000000000013;
    case 0x29:
      return 0x6C6C6177796170;
    case 0x2A:
      unsigned int v3 = 1751607656;
      return v3 | 0x6867696C00000000;
    case 0x2B:
    case 0x30:
      return 0x7374726F7053796DLL;
    case 0x2C:
      return 0x72656874616577;
    case 0x2D:
      return 0x65527374726F7073;
    case 0x2F:
      uint64_t v5 = 0x7374726F7073;
      goto LABEL_67;
    case 0x31:
      return 0x536C656E6E616863;
    case 0x32:
      return 0xD000000000000017;
    case 0x33:
      return 0x536F546F72746E69;
    case 0x34:
    case 0x35:
      return 0x63537374726F7073;
    case 0x36:
      return 0x74537374726F7073;
    case 0x37:
      return 0x72427374726F7073;
    case 0x39:
      return 0x76457374726F7073;
    case 0x3A:
      return 0x6F427374726F7073;
    case 0x3C:
      return 0xD000000000000016;
    case 0x3D:
      return 0xD000000000000013;
    case 0x3E:
      return 0x74756374726F6873;
    case 0x40:
      return 0x694C656C7A7A7570;
    case 0x41:
      return 0x7241656C7A7A7570;
    case 0x42:
      return 0xD000000000000015;
    case 0x43:
      return 0x6546656C7A7A7570;
    case 0x44:
      return 0x4664656546676174;
    case 0x46:
      return 0x5265746144676174;
    case 0x47:
      uint64_t v5 = 0x6E4965726F6DLL;
LABEL_67:
      uint64_t result = v5 & 0xFFFFFFFFFFFFLL | 0x6F54000000000000;
      break;
    case 0x48:
      uint64_t result = 0x694C7374726F7073;
      break;
    case 0x49:
      uint64_t result = 0x614D7374726F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE81BDD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE864C80(*a1, *a2);
}

uint64_t sub_1DE81BDDC(uint64_t a1, uint64_t a2)
{
  return sub_1DE81C7B0(a1, a2, (void (*)(uint64_t))sub_1DE81B4C4);
}

uint64_t sub_1DE81BDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE81C838(a1, a2, a3, (void (*)(void))sub_1DE81B4C4);
}

uint64_t sub_1DE81BE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE81C8B8(a1, a2, a3, (void (*)(uint64_t))sub_1DE81B4C4);
}

uint64_t sub_1DE81BE24@<X0>(char *a1@<X8>)
{
  return sub_1DE81B0BC(a1);
}

uint64_t sub_1DE81BE30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DE81B4C4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE81BE58()
{
  return sub_1DE8E1540();
}

uint64_t sub_1DE81BEB8()
{
  return sub_1DE8E14F0();
}

uint64_t sub_1DE81BF08@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DE8E1B20();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 0;
  char v5 = 4;
  switch(v2)
  {
    case 0:
      goto LABEL_6;
    case 1:
      char v4 = 1;
      goto LABEL_6;
    case 2:
      char v4 = 2;
      goto LABEL_6;
    case 3:
      char v4 = 3;
LABEL_6:
      char v5 = v4;
      break;
    case 4:
      break;
    case 5:
      char v5 = 5;
      break;
    case 6:
      char v5 = 6;
      break;
    case 7:
      char v5 = 7;
      break;
    case 8:
      char v5 = 8;
      break;
    case 9:
      char v5 = 9;
      break;
    case 10:
      char v5 = 10;
      break;
    case 11:
      char v5 = 11;
      break;
    case 12:
      char v5 = 12;
      break;
    case 13:
      char v5 = 13;
      break;
    case 14:
      char v5 = 14;
      break;
    case 15:
      char v5 = 15;
      break;
    case 16:
      char v5 = 16;
      break;
    case 17:
      char v5 = 17;
      break;
    case 18:
      char v5 = 18;
      break;
    case 19:
      char v5 = 19;
      break;
    case 20:
      char v5 = 20;
      break;
    case 21:
      char v5 = 21;
      break;
    default:
      char v5 = 22;
      break;
  }
  *a1 = v5;
  return result;
}

unint64_t sub_1DE81C094()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x756F59726F66;
      break;
    case 2:
    case 3:
      unint64_t result = 0x656E697A6167616DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6C656E6E616863;
      break;
    case 7:
      unint64_t result = 0x6369706F74;
      break;
    case 8:
      unint64_t result = 0x697A6167614D796DLL;
      break;
    case 9:
      unint64_t result = 6385509;
      break;
    case 0xA:
      unint64_t result = 0x6F69647561;
      break;
    case 0xB:
      unint64_t result = 0x7369486F69647561;
      break;
    case 0xC:
      unint64_t result = 0x616C506F69647561;
      break;
    case 0xD:
      unint64_t result = 0x6465766173;
      break;
    case 0xE:
      unint64_t result = 0x79726F74736968;
      break;
    case 0xF:
      unint64_t result = 0x686372616573;
      break;
    case 0x10:
      unint64_t result = 0x6F48686372616573;
      break;
    case 0x11:
      unint64_t result = 0x6957646572616873;
      break;
    case 0x12:
      unint64_t result = 0x7374726F7073;
      break;
    case 0x13:
      unint64_t result = 0x76457374726F7073;
      break;
    case 0x14:
      unint64_t result = 0x7548656C7A7A7570;
      break;
    case 0x15:
      unint64_t result = 0x7954656C7A7A7570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE81C33C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE864C98(*a1, *a2);
}

uint64_t sub_1DE81C348(uint64_t a1, uint64_t a2)
{
  return sub_1DE81C7B0(a1, a2, (void (*)(uint64_t))sub_1DE81C094);
}

uint64_t sub_1DE81C360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE81C838(a1, a2, a3, (void (*)(void))sub_1DE81C094);
}

uint64_t sub_1DE81C378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE81C8B8(a1, a2, a3, (void (*)(uint64_t))sub_1DE81C094);
}

uint64_t sub_1DE81C390@<X0>(char *a1@<X8>)
{
  return sub_1DE81BF08(a1);
}

unint64_t sub_1DE81C39C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DE81C094();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE81C3C4()
{
  return sub_1DE8E1540();
}

uint64_t sub_1DE81C424()
{
  return sub_1DE8E14F0();
}

uint64_t sub_1DE81C474@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1DE8E1840();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 12;
  if (v2 < 0xC) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t sub_1DE81C4D0()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x636E75614C707061;
      break;
    case 2:
      unint64_t result = 0x6570697773;
      break;
    case 3:
      unint64_t result = 0x656E696C64616568;
      break;
    case 4:
      unint64_t result = 0x7061546575737369;
      break;
    case 5:
      unint64_t result = 0x6B6E696C70656564;
      break;
    case 6:
      unint64_t result = 0x6E6164726F666661;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x6976614E72657375;
      break;
    case 9:
      unint64_t result = 0x61646F4D6E65706FLL;
      break;
    case 0xA:
      unint64_t result = 0x6369747241636F74;
      break;
    case 0xB:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE81C688()
{
  unint64_t result = qword_1EAC0B8B0;
  if (!qword_1EAC0B8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8B0);
  }
  return result;
}

unint64_t sub_1DE81C6E0()
{
  unint64_t result = qword_1EAC0B8B8;
  if (!qword_1EAC0B8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8B8);
  }
  return result;
}

uint64_t sub_1DE81C734(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE864CB0(*a1, *a2);
}

unint64_t sub_1DE81C744()
{
  unint64_t result = qword_1EAC0B8C0;
  if (!qword_1EAC0B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8C0);
  }
  return result;
}

uint64_t sub_1DE81C798(uint64_t a1, uint64_t a2)
{
  return sub_1DE81C7B0(a1, a2, (void (*)(uint64_t))sub_1DE81C4D0);
}

uint64_t sub_1DE81C7B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DE8E1BA0();
  a3(v4);
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE81C820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE81C838(a1, a2, a3, (void (*)(void))sub_1DE81C4D0);
}

uint64_t sub_1DE81C838(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE81C8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE81C8B8(a1, a2, a3, (void (*)(uint64_t))sub_1DE81C4D0);
}

uint64_t sub_1DE81C8B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_1DE8E1BA0();
  a4(v5);
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE81C924@<X0>(char *a1@<X8>)
{
  return sub_1DE81C474(a1);
}

unint64_t sub_1DE81C930@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DE81C4D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE81C958()
{
  return sub_1DE8E1540();
}

uint64_t sub_1DE81C9B8()
{
  return sub_1DE8E14F0();
}

uint64_t _s9GroupTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xB6) {
    goto LABEL_17;
  }
  if (a2 + 74 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 74) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 74;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 74;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 74;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x4B;
  int v8 = v6 - 75;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9GroupTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 74 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 74) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xB6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xB5)
  {
    unsigned int v6 = ((a2 - 182) >> 8) + 1;
    *unint64_t result = a2 + 74;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE81CB64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 74;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9GroupTypeOMa()
{
  return &_s9GroupTypeON;
}

uint64_t _s8FeedTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8FeedTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE81CCFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8FeedTypeOMa()
{
  return &_s8FeedTypeON;
}

uint64_t _s14ViewActionTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14ViewActionTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE81CE94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE81CEBC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE81CEC8(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s14ViewActionTypeOMa()
{
  return &_s14ViewActionTypeON;
}

uint64_t dispatch thunk of ClassicGroupTypeProviding.group.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ClassicGroupTypeProviding.feed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ClassicGroupTypeProviding.viewAction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ClassicGroupTypeProviding.groupBackingTagID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unint64_t sub_1DE81CF30()
{
  unint64_t result = qword_1EAC0B8C8;
  if (!qword_1EAC0B8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8C8);
  }
  return result;
}

unint64_t sub_1DE81CF84()
{
  unint64_t result = qword_1EAC0B8D0;
  if (!qword_1EAC0B8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8D0);
  }
  return result;
}

unint64_t sub_1DE81CFD8()
{
  unint64_t result = qword_1EAC0B8D8;
  if (!qword_1EAC0B8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8D8);
  }
  return result;
}

uint64_t sub_1DE81D03C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE81D044()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE81D04C()
{
  uint64_t v3 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1DE81326C(v1);
  return v3;
}

uint64_t _s22HeadlineGroupingResultVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s22HeadlineGroupingResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s22HeadlineGroupingResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s22HeadlineGroupingResultVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22HeadlineGroupingResultVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22HeadlineGroupingResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s22HeadlineGroupingResultVMa()
{
  return &_s22HeadlineGroupingResultVN;
}

uint64_t GroupableSportsTag.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double GroupableSportsTag.score.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t GroupableSportsTag.topLevelSportTagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void GroupableSportsTag.sportsLeague.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void GroupableSportsTag.groupingReason.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *GroupableSportsTag.groupingReason.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*GroupableSportsTag.groupingReason.modify())()
{
  return nullsub_16;
}

void __swiftcall GroupableSportsTag.init(identifier:score:topLevelSportTagIdentifier:sportsLeague:groupingReason:)(XavierNews::GroupableSportsTag *__return_ptr retstr, Swift::String identifier, Swift::Double score, Swift::String_optional topLevelSportTagIdentifier, XavierNews::GroupableSportsTag::SportsLeagueType sportsLeague, XavierNews::TagGroupingReason groupingReason)
{
  XavierNews::GroupableSportsTag::SportsLeagueType v6 = *(unsigned char *)sportsLeague;
  XavierNews::TagGroupingReason v7 = *(unsigned char *)groupingReason;
  retstr->identifier = identifier;
  retstr->score = score;
  retstr->topLevelSportTagIdentifier = topLevelSportTagIdentifier;
  retstr->sportsLeague = v6;
  retstr->groupingReason = v7;
}

uint64_t GroupableSportsTag.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

BOOL static GroupableSportsTag.SportsLeagueType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GroupableSportsTag.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE81D3DC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE81D438()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE81D490()
{
  return sub_1DE8E1BD0();
}

uint64_t GroupableSportsTag.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1DE81D5A0()
{
  return 0;
}

uint64_t GroupableSportsTag.SportsLeagueType.hash(into:)()
{
  return sub_1DE8E1BB0();
}

uint64_t GroupableSportsTag.SportsLeagueType.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE81D6C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE81D6DC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE81D724()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE81D750()
{
  return sub_1DE8E1BD0();
}

BOOL _s10XavierNews18GroupableSportsTagV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 41);
  double v7 = *(double *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  int v10 = *(unsigned __int8 *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 41);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v7) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_1DE8E1AC0();
    BOOL result = 0;
    if ((v12 & 1) == 0 || v2 != v7) {
      return result;
    }
  }
  if (v4)
  {
    if (!v8) {
      return 0;
    }
    if (v3 == v9 && v4 == v8)
    {
      if (v5 != v10) {
        return 0;
      }
      return v6 == v11;
    }
    char v14 = sub_1DE8E1AC0();
    BOOL result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
LABEL_16:
    if (v5 != v10) {
      return result;
    }
    return v6 == v11;
  }
  BOOL result = 0;
  if (!v8) {
    goto LABEL_16;
  }
  return result;
}

unint64_t sub_1DE81D8A8()
{
  unint64_t result = qword_1EAC0B8E0;
  if (!qword_1EAC0B8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8E0);
  }
  return result;
}

unint64_t sub_1DE81D900()
{
  unint64_t result = qword_1EAC0B8E8;
  if (!qword_1EAC0B8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8E8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupableSportsTag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GroupableSportsTag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupableSportsTag(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupableSportsTag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GroupableSportsTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupableSportsTag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupableSportsTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupableSportsTag()
{
  return &type metadata for GroupableSportsTag;
}

uint64_t getEnumTagSinglePayload for GroupableSportsTag.SportsLeagueType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GroupableSportsTag.SportsLeagueType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE81DD08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE81DD30(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE81DD3C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroupableSportsTag.SportsLeagueType()
{
  return &type metadata for GroupableSportsTag.SportsLeagueType;
}

BOOL static HeadlineGroupingReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HeadlineGroupingReason.hash(into:)()
{
  return sub_1DE8E1BB0();
}

uint64_t HeadlineGroupingReason.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE81DDDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE81DDF0()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE81DE38()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE81DE64()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE81DEAC()
{
  unint64_t result = qword_1EAC0B8F0;
  if (!qword_1EAC0B8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B8F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HeadlineGroupingReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadlineGroupingReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE81E05CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE81E084(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE81E090(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineGroupingReason()
{
  return &type metadata for HeadlineGroupingReason;
}

uint64_t sub_1DE81E0A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE81E0B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE81E0B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s24HeadlineClusteringResultVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s24HeadlineClusteringResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s24HeadlineClusteringResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24HeadlineClusteringResultVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24HeadlineClusteringResultVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s24HeadlineClusteringResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s24HeadlineClusteringResultVMa()
{
  return &_s24HeadlineClusteringResultVN;
}

uint64_t dispatch thunk of static DefaultValueProvider.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1DE81E2D0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = a1;
  *(unsigned char *)(v1 + 32) = 2;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  sub_1DE81F174((uint64_t)v3);
  sub_1DE81F19C((uint64_t)v3, v1 + 56);
  *(_DWORD *)(v1 + 1059) = 33686018;
  *(void *)(v1 + 1064) = 0;
  *(unsigned char *)(v1 + 1072) = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DE81E33C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *__src, int a8, char a9, char a10, char a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t v14 = v13;
  int v33 = a8;
  uint64_t v34 = a4;
  v29[2] = a3;
  uint64_t v32 = a12;
  int v31 = a13;
  char v19 = *a2;
  memcpy(v36, __src, sizeof(v36));
  memcpy(v37, __src, 0x3EBuLL);
  uint64_t v30 = a1;
  *(void *)(v14 + 16) = a1;
  *(unsigned char *)(v14 + 32) = v19;
  *(void *)(v14 + 40) = a5;
  *(void *)(v14 + 48) = a6;
  nullsub_19(v37);
  uint64_t v20 = sub_1DE81F19C((uint64_t)v37, v14 + 56);
  char v22 = v31;
  uint64_t v23 = v32;
  *(unsigned char *)(v14 + 1059) = v33;
  *(unsigned char *)(v14 + 1060) = a9;
  *(unsigned char *)(v14 + 1061) = a10;
  *(unsigned char *)(v14 + 1062) = a11;
  *(void *)(v14 + 1064) = v23;
  *(unsigned char *)(v14 + 1072) = v22;
  if ((v36[96] & 1) != 0 && *(void *)(v23 + 16))
  {
    v29[1] = v29;
    MEMORY[0x1F4188790](v20, v21);
    uint64_t v24 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1DE81F62C(v24, (uint64_t (*)(long long *, uint64_t, uint64_t, long long *))sub_1DE81F208);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v25 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA9B68);
      uint64_t v26 = sub_1DE8E1830();
    }
    else
    {
      uint64_t v26 = MEMORY[0x1E4FBC868];
    }
    v35[0] = v26;
    uint64_t v27 = swift_bridgeObjectRetain();
    sub_1DE81F268(v27, 1, v35);
    swift_bridgeObjectRelease();
    *(void *)(v14 + 24) = v35[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v14 + 24) = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1DE81E5C0(double *a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, double *a6, char a7, char a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15, uint64_t a16)
{
  double v18 = *a4;
  double v19 = a4[2];
  double v20 = sub_1DE81E678(a5, a6, a7, a8, a9, a10, a2, a3, *a4, a4[1], v19, a11, a12, a13 & 1, a14, a15, a16);
  *a1 = v18;
  a1[1] = v20;
  a1[2] = v19;
  swift_bridgeObjectRetain();
  return a2;
}

double sub_1DE81E678(uint64_t a1, double *a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a1)
  {
    a9 = a2[11] * a9;
    if ((a3 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    a9 = a9 * a2[13];
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  if (a3) {
    goto LABEL_11;
  }
LABEL_3:
  if (a4) {
LABEL_4:
  }
    a9 = a9 * a2[14];
LABEL_5:
  double v23 = 1.0;
  if (a5) {
    double v23 = a2[17];
  }
  double v24 = v23 * a9;
  if (!*(void *)(a6 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1DE821D84(a7, a8);
  if (v26)
  {
    double v27 = *(double *)(*(void *)(a6 + 56) + 8 * v25);
    goto LABEL_16;
  }
  a1 = swift_bridgeObjectRelease();
  if (!*(void *)(a6 + 16))
  {
LABEL_21:
    if (qword_1EAC0B7D8 != -1) {
      a1 = swift_once();
    }
    double v34 = MEMORY[0x1F4188790](a1, a2);
    uint64_t v30 = v35(sub_1DE81F8C0, v34);
    if (a11 <= 0.0) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1DE821D84(a12, a13);
  if ((v29 & 1) == 0)
  {
    a1 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  double v27 = *(double *)(*(void *)(a6 + 56) + 8 * v28);
LABEL_16:
  uint64_t v30 = swift_bridgeObjectRelease();
  double v24 = v24 * (v27 * a2[18]);
  if (a11 <= 0.0)
  {
LABEL_17:
    if (qword_1EAC0B7D8 != -1) {
      uint64_t v30 = swift_once();
    }
    double v32 = MEMORY[0x1F4188790](v30, v31);
    v33(sub_1DE81F8D0, v32);
    return 0.0;
  }
LABEL_24:
  double v36 = v24 / a11;
  if (a14)
  {
    double v41 = a2[16];
    if (v41 < v36)
    {
      double v24 = v41 * a11;
      if (qword_1EAC0B7D8 != -1) {
        uint64_t v30 = swift_once();
      }
      v39.n128_f64[0] = MEMORY[0x1F4188790](v30, v31);
      unint64_t v40 = sub_1DE81F8DC;
      goto LABEL_33;
    }
  }
  else
  {
    double v37 = a2[15];
    if (v37 < v36)
    {
      double v24 = v37 * a11;
      if (qword_1EAC0B7D8 != -1) {
        uint64_t v30 = swift_once();
      }
      v39.n128_f64[0] = MEMORY[0x1F4188790](v30, v31);
      unint64_t v40 = sub_1DE81F90C;
LABEL_33:
      v38(v40, v39);
    }
  }
  if (a15)
  {
    if (v24 <= a10) {
      double v42 = v24;
    }
    else {
      double v42 = a10;
    }
    if (v42 <= 0.0 || vabdd_f64(v24, a10) / v42 <= 0.01)
    {
      if (qword_1EBEA9E80 != -1) {
        swift_once();
      }
      unint64_t v47 = (void *)qword_1EBEA9E90;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1DE8E31B0;
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v50 = sub_1DE819640();
      *(void *)(v48 + 32) = a16;
      *(void *)(v48 + 40) = a17;
      *(void *)(v48 + 96) = v49;
      *(void *)(v48 + 104) = v50;
      *(void *)(v48 + 64) = v50;
      *(void *)(v48 + 72) = a7;
      *(void *)(v48 + 80) = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v43 = v47;
      sub_1DE8E16C0();
    }
    else
    {
      if (qword_1EBEA9E80 != -1) {
        swift_once();
      }
      id v43 = (id)qword_1EBEA9E90;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1DE8E28D0;
      uint64_t v45 = MEMORY[0x1E4FBB1A0];
      *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = sub_1DE819640();
      *(void *)(v44 + 32) = a16;
      *(void *)(v44 + 40) = a17;
      *(void *)(v44 + 96) = v45;
      *(void *)(v44 + 104) = v46;
      *(void *)(v44 + 64) = v46;
      *(void *)(v44 + 72) = a7;
      *(void *)(v44 + 80) = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE8E1620();
      *(void *)(v44 + 136) = v45;
      *(void *)(v44 + 144) = v46;
      *(void *)(v44 + 112) = 0;
      *(void *)(v44 + 120) = 0xE000000000000000;
      sub_1DE8E1620();
      *(void *)(v44 + 176) = v45;
      *(void *)(v44 + 184) = v46;
      *(void *)(v44 + 152) = 0;
      *(void *)(v44 + 160) = 0xE000000000000000;
    }
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
  }
  if (v24 <= 0.0 || a10 / v24 > 0.25) {
    return v24;
  }
  if (qword_1EBEA9E80 != -1) {
    swift_once();
  }
  id v51 = (id)qword_1EBEA9E90;
  sub_1DE8E16B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1DE8E28D0;
  uint64_t v53 = MEMORY[0x1E4FBB1A0];
  *(void *)(v52 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v54 = sub_1DE819640();
  *(void *)(v52 + 32) = a16;
  *(void *)(v52 + 40) = a17;
  *(void *)(v52 + 96) = v53;
  *(void *)(v52 + 104) = v54;
  *(void *)(v52 + 64) = v54;
  *(void *)(v52 + 72) = a7;
  *(void *)(v52 + 80) = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE8E1620();
  *(void *)(v52 + 136) = v53;
  *(void *)(v52 + 144) = v54;
  *(void *)(v52 + 112) = 0;
  *(void *)(v52 + 120) = 0xE000000000000000;
  sub_1DE8E1620();
  *(void *)(v52 + 176) = v53;
  *(void *)(v52 + 184) = v54;
  *(void *)(v52 + 152) = 0;
  *(void *)(v52 + 160) = 0xE000000000000000;
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  return a10;
}

uint64_t sub_1DE81EDA0()
{
  return 0;
}

uint64_t sub_1DE81EECC()
{
  return 0;
}

uint64_t sub_1DE81EF88()
{
  return 0;
}

uint64_t sub_1DE81F0B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DE81F0E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s14CohortProviderCMa()
{
  return self;
}

uint64_t sub_1DE81F15C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &_s14CohortProviderCMn);
}

void sub_1DE81F174(uint64_t a1)
{
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 96) = 2;
  bzero((void *)(a1 + 104), 0x383uLL);
}

uint64_t sub_1DE81F19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE81F208(double *a1, uint64_t a2, uint64_t a3, double *a4)
{
  return sub_1DE81E5C0(a1, a2, a3, a4, *(unsigned __int8 *)(v4 + 16), *(double **)(v4 + 24), *(unsigned char *)(v4 + 32), *(unsigned char *)(v4 + 33), *(unsigned char *)(v4 + 34), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(unsigned char *)(v4 + 64), *(unsigned char *)(v4 + 65), *(void *)(v4 + 72), *(void *)(v4 + 80));
}

void sub_1DE81F268(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    unint64_t v7 = *(void *)(a1 + 64);
    long long v39 = *(_OWORD *)(a1 + 48);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    swift_bridgeObjectRetain();
    if (v8)
    {
      int v10 = (void *)*a3;
      unint64_t v11 = sub_1DE821D84(v9, v8);
      uint64_t v13 = v10[2];
      BOOL v14 = (v12 & 1) == 0;
      BOOL v15 = __OFADD__(v13, v14);
      uint64_t v16 = v13 + v14;
      if (v15)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      LOBYTE(v17) = v12;
      if (v10[3] < v16)
      {
        sub_1DE8248E4(v16, a2 & 1);
        unint64_t v11 = sub_1DE821D84(v9, v8);
        if ((v17 & 1) == (v18 & 1)) {
          goto LABEL_9;
        }
LABEL_7:
        unint64_t v11 = sub_1DE8E1B40();
        __break(1u);
      }
      if ((a2 & 1) == 0)
      {
        unint64_t v20 = v11;
        sub_1DE82215C();
        unint64_t v11 = v20;
        if (v17)
        {
LABEL_10:
          double v19 = (void *)swift_allocError();
          swift_willThrow();
          MEMORY[0x1E01D4AD0](v19);
          __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA7F48);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_29;
        }
LABEL_13:
        uint64_t v21 = (void *)*a3;
        *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
        char v22 = (uint64_t *)(v21[6] + 16 * v11);
        *char v22 = v9;
        v22[1] = v8;
        uint64_t v23 = v21[7] + 24 * v11;
        *(_OWORD *)uint64_t v23 = v39;
        *(void *)(v23 + 16) = v7;
        uint64_t v24 = v21[2];
        BOOL v15 = __OFADD__(v24, 1);
        uint64_t v25 = v24 + 1;
        if (v15)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          sub_1DE8E1730();
          sub_1DE8E1490();
          sub_1DE8E17B0();
          sub_1DE8E1490();
          sub_1DE8E17F0();
          __break(1u);
          return;
        }
        v21[2] = v25;
        if (v6 != 1)
        {
          uint64_t v17 = (void *)(a1 + 104);
          unint64_t v7 = 1;
          while (v7 < *(void *)(a1 + 16))
          {
            uint64_t v26 = *v17;
            long long v39 = *((_OWORD *)v17 - 1);
            uint64_t v9 = *(v17 - 4);
            uint64_t v8 = *(v17 - 3);
            swift_bridgeObjectRetain();
            if (!v8) {
              goto LABEL_24;
            }
            double v27 = (void *)*a3;
            unint64_t v28 = sub_1DE821D84(v9, v8);
            uint64_t v30 = v27[2];
            BOOL v31 = (v29 & 1) == 0;
            BOOL v15 = __OFADD__(v30, v31);
            uint64_t v32 = v30 + v31;
            if (v15) {
              goto LABEL_27;
            }
            a2 = v29;
            if (v27[3] < v32)
            {
              sub_1DE8248E4(v32, 1);
              unint64_t v28 = sub_1DE821D84(v9, v8);
              if ((a2 & 1) != (v33 & 1)) {
                goto LABEL_7;
              }
            }
            if (a2) {
              goto LABEL_10;
            }
            double v34 = (void *)*a3;
            *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
            uint64_t v35 = (uint64_t *)(v34[6] + 16 * v28);
            *uint64_t v35 = v9;
            v35[1] = v8;
            uint64_t v36 = v34[7] + 24 * v28;
            *(_OWORD *)uint64_t v36 = v39;
            *(void *)(v36 + 16) = v26;
            uint64_t v37 = v34[2];
            BOOL v15 = __OFADD__(v37, 1);
            uint64_t v38 = v37 + 1;
            if (v15) {
              goto LABEL_28;
            }
            ++v7;
            v34[2] = v38;
            v17 += 5;
            if (v6 == v7) {
              goto LABEL_24;
            }
          }
          goto LABEL_26;
        }
        goto LABEL_24;
      }
LABEL_9:
      if (v17) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_1DE81F62C(uint64_t a1, uint64_t (*a2)(long long *, uint64_t, uint64_t, long long *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v41 = MEMORY[0x1E4FBC860];
  sub_1DE84BBC0(0, v2, 0);
  uint64_t v3 = v41;
  uint64_t result = sub_1DE8CB904(a1);
  uint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  int64_t v32 = v2;
  int v33 = v6;
  uint64_t v34 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_24;
    }
    uint64_t v36 = v8;
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(a1 + 56) + 24 * v7;
    uint64_t v17 = *(void *)(v16 + 16);
    long long v37 = *(_OWORD *)v16;
    uint64_t v38 = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = a2(&v39, v14, v15, &v37);
    uint64_t v20 = v19;
    uint64_t result = swift_bridgeObjectRelease();
    long long v21 = v39;
    uint64_t v22 = v40;
    uint64_t v41 = v3;
    unint64_t v24 = *(void *)(v3 + 16);
    unint64_t v23 = *(void *)(v3 + 24);
    if (v24 >= v23 >> 1)
    {
      long long v31 = v39;
      uint64_t result = (uint64_t)sub_1DE84BBC0((void *)(v23 > 1), v24 + 1, 1);
      long long v21 = v31;
      uint64_t v3 = v41;
    }
    *(void *)(v3 + 16) = v24 + 1;
    uint64_t v25 = v3 + 40 * v24;
    *(void *)(v25 + 32) = v18;
    *(void *)(v25 + 40) = v20;
    *(_OWORD *)(v25 + 48) = v21;
    *(void *)(v25 + 64) = v22;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v7 >= v10) {
      goto LABEL_25;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v26 = *(void *)(v34 + 8 * v12);
    if ((v26 & (1 << v7)) == 0) {
      goto LABEL_26;
    }
    int v6 = v33;
    if (*(_DWORD *)(a1 + 36) != v33) {
      goto LABEL_27;
    }
    unint64_t v27 = v26 & (-2 << (v7 & 0x3F));
    if (v27)
    {
      int64_t v10 = __clz(__rbit64(v27)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v32;
    }
    else
    {
      unint64_t v28 = v12 + 1;
      unint64_t v29 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v32;
      if (v12 + 1 < v29)
      {
        unint64_t v30 = *(void *)(v34 + 8 * v28);
        if (v30)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v30)) + (v28 << 6);
        }
        else
        {
          while (v29 - 2 != v12)
          {
            unint64_t v30 = *(void *)(a1 + 80 + 8 * v12++);
            if (v30)
            {
              unint64_t v28 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v8 = v36 + 1;
    uint64_t v7 = v10;
    if (v36 + 1 == v11) {
      return v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DE81F8C0()
{
  return sub_1DE81EDA0();
}

uint64_t sub_1DE81F8D0()
{
  return sub_1DE81EECC();
}

uint64_t sub_1DE81F8DC()
{
  return sub_1DE81F93C();
}

uint64_t sub_1DE81F90C()
{
  return sub_1DE81F93C();
}

uint64_t sub_1DE81F93C()
{
  return sub_1DE81EF88();
}

uint64_t AggregateContextType.update(identifier:option:updateBlock:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DE82DA80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v18[0] = v13;
  v18[1] = v12;
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 56))(v15, v18, a4, a5, a6, a7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE81FA70(uint64_t a1)
{
  uint64_t result = sub_1DE8E1640();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    int64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1DE8AC840(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t AggregateContextType.lookup(identifier:option:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *a3;
  uint64_t v9 = a3[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DE82DA80(inited);
  swift_setDeallocating();
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  swift_arrayDestroy();
  uint64_t v17 = v10;
  uint64_t v18 = v9;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(a5 + 48))(v12, &v17, a4, a5);
  swift_bridgeObjectRelease();
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  MEMORY[0x1E01D3F40](&v17, v14, v13, AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AggregateContext.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
  swift_beginAccess();
  uint64_t v4 = sub_1DE8E1350();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AggregateContext.updatedAt.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
  swift_beginAccess();
  uint64_t v4 = sub_1DE8E1350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*AggregateContext.updatedAt.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t AggregateContext.aggregates.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*AggregateContext.aggregates.modify())()
{
  return j__swift_endAccess;
}

uint64_t AggregateContext.__allocating_init(aggregates:updatedAt:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1DE82E2E4(a1, a2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t AggregateContext.init(aggregates:updatedAt:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1DE82E2E4(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DE82000C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B968);
  MEMORY[0x1F4188790](v8 - 8, v9);
  int64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ReadonlyAggregate(0);
  MEMORY[0x1F4188790](v12, v13);
  unint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(a1, 1) == 1)
  {
    sub_1DE82F538(a1, &qword_1EAC0B968);
    sub_1DE8AD020(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_1DE82F538((uint64_t)v11, &qword_1EAC0B968);
  }
  else
  {
    sub_1DE82F594(a1, (uint64_t)v15, type metadata accessor for ReadonlyAggregate);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1DE829624((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall AggregateContext.prune(_:)(Swift::Int a1)
{
  uint64_t v3 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8, v4);
  unint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (uint64_t *)((char *)&v40 - v9);
  int64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (*(void *)(*v11 + 16) <= a1) {
    return;
  }
  id v43 = v7;
  uint64_t v41 = v11;
  swift_bridgeObjectRetain_n();
  uint64_t v13 = (void *)sub_1DE82A6A4(v12);
  swift_bridgeObjectRelease();
  uint64_t v45 = v13;
  sub_1DE82A5FC(&v45);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1DE82056C(a1, (uint64_t)v45);
  uint64_t v42 = v16;
  int64_t v18 = v17 >> 1;
  if (v15 == v17 >> 1)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
LABEL_20:
    swift_unknownObjectRelease();
    *uint64_t v41 = (uint64_t)v19;
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v20 = v15;
  uint64_t v40 = v14;
  swift_unknownObjectRetain();
  uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v21 = (uint64_t)v43;
  while (v20 < v18)
  {
    uint64_t v23 = *(void *)(v44 + 72);
    sub_1DE82F26C(v42 + v23 * v20, (uint64_t)v10, type metadata accessor for ReadonlyAggregate);
    uint64_t v25 = *v10;
    uint64_t v24 = v10[1];
    sub_1DE82F26C((uint64_t)v10, v21, type metadata accessor for ReadonlyAggregate);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = v19;
    unint64_t v28 = sub_1DE821D84(v25, v24);
    uint64_t v29 = v19[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      goto LABEL_23;
    }
    char v32 = v27;
    if (v19[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v45;
        if (v27) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1DE822320();
        uint64_t v19 = v45;
        if (v32) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1DE824C00(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1DE821D84(v25, v24);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_25;
      }
      unint64_t v28 = v33;
      uint64_t v19 = v45;
      if (v32)
      {
LABEL_5:
        uint64_t v22 = v19[7] + v28 * v23;
        uint64_t v21 = (uint64_t)v43;
        sub_1DE82E780((uint64_t)v43, v22);
        goto LABEL_6;
      }
    }
    v19[(v28 >> 6) + 8] |= 1 << v28;
    uint64_t v35 = (uint64_t *)(v19[6] + 16 * v28);
    *uint64_t v35 = v25;
    v35[1] = v24;
    uint64_t v36 = v19[7] + v28 * v23;
    uint64_t v21 = (uint64_t)v43;
    sub_1DE82F594((uint64_t)v43, v36, type metadata accessor for ReadonlyAggregate);
    uint64_t v37 = v19[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_24;
    }
    v19[2] = v39;
    swift_bridgeObjectRetain();
LABEL_6:
    ++v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F2D4((uint64_t)v10, type metadata accessor for ReadonlyAggregate);
    if (v18 == v20)
    {
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  sub_1DE8E1B40();
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t sub_1DE82056C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for ReadonlyAggregate(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

int64_t sub_1DE820600(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1DE820644(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE82065C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8206A4()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8206D0()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE820714()
{
  if (*v0) {
    return 0x7461676572676761;
  }
  else {
    return 0x4164657461647075;
  }
}

uint64_t sub_1DE820758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE82F0F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE820780()
{
  return 0;
}

void sub_1DE82078C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE820798(uint64_t a1)
{
  unint64_t v2 = sub_1DE82E7E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8207D4(uint64_t a1)
{
  unint64_t v2 = sub_1DE82E7E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AggregateContext.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
  uint64_t v2 = sub_1DE8E1350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AggregateContext.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
  uint64_t v2 = sub_1DE8E1350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t AggregateContext.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DE8E1350();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B8F8);
  uint64_t v18 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE82E7E4();
  sub_1DE8E1C10();
  uint64_t v13 = v2 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, v4);
  char v20 = 0;
  sub_1DE82E9D8(&qword_1EBEA8CA0, MEMORY[0x1E4F27928]);
  uint64_t v14 = v17[1];
  sub_1DE8E1A40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v14)
  {
    uint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates);
    swift_beginAccess();
    uint64_t v21 = *v15;
    char v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B908);
    sub_1DE82E838();
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v9);
}

uint64_t AggregateContext.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  AggregateContext.init(from:)(a1);
  return v2;
}

uint64_t AggregateContext.init(from:)(void *a1)
{
  uint64_t v17 = sub_1DE8E1350();
  uint64_t v15 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v4);
  uint64_t v16 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B920);
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v7);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE82E7E4();
  sub_1DE8E1BF0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = v6;
    uint64_t v10 = v15;
    char v21 = 0;
    sub_1DE82E9D8(&qword_1EAC0B850, MEMORY[0x1E4F27928]);
    sub_1DE8E1930();
    uint64_t v11 = *(void (**)(void))(v10 + 32);
    v13[1] = v1 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
    v11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B908);
    char v20 = 1;
    sub_1DE82E92C();
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v18);
    *(void *)(v1 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1DE820FC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = AggregateContext.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1DE82101C(void *a1)
{
  return AggregateContext.encode(to:)(a1);
}

uint64_t AggregateContext.update(with:option:updateBlock:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  v74 = a3;
  uint64_t v75 = a4;
  uint64_t v73 = sub_1DE8E1350();
  uint64_t v7 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73, v8);
  v72 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v67 = *(void *)(v71 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v71, v10);
  uint64_t v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  v70 = (char *)v61 - v15;
  uint64_t v69 = type metadata accessor for Aggregate(0);
  uint64_t v16 = *(void *)(v69 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v69, v17);
  v68 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (void *)((char *)v61 - v21);
  uint64_t v24 = *(void (**)(void, void))a2;
  uint64_t v23 = *(void *)(a2 + 8);
  swift_retain();
  sub_1DE82EA20((uint64_t)v24);
  uint64_t v25 = sub_1DE82DB18(a1, v4, v24, v23);
  sub_1DE82EA30((uint64_t)v24);
  swift_release();
  uint64_t v26 = v25[2];
  if (!v26)
  {
    return swift_bridgeObjectRelease();
  }
  v66 = v13;
  char v27 = (void *)(v4 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates);
  unint64_t v28 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v61[1] = v25;
  uint64_t v29 = (uint64_t)v25 + v28;
  v64 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v62 = *(void *)(v16 + 72);
  unint64_t v63 = v22;
  BOOL v30 = v68;
  while (1)
  {
    uint64_t v76 = v29;
    uint64_t v77 = v26;
    sub_1DE82F26C(v29, (uint64_t)v22, type metadata accessor for Aggregate);
    v74(v22);
    uint64_t v32 = *v22;
    uint64_t v31 = v22[1];
    sub_1DE82F26C((uint64_t)v22, (uint64_t)v30, type metadata accessor for Aggregate);
    uint64_t v34 = *(void *)v30;
    uint64_t v33 = *((void *)v30 + 1);
    uint64_t v35 = *((void *)v30 + 2);
    uint64_t v36 = *((void *)v30 + 3);
    uint64_t v37 = *((void *)v30 + 4);
    BOOL v38 = v72;
    uint64_t v39 = v27;
    uint64_t v40 = v73;
    (*v65)(v72, &v30[*(int *)(v69 + 32)], v73);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE82F2D4((uint64_t)v30, type metadata accessor for Aggregate);
    uint64_t v42 = v70;
    uint64_t v41 = v71;
    *(void *)v70 = v34;
    *((void *)v42 + 1) = v33;
    *((void *)v42 + 2) = v35;
    *((void *)v42 + 3) = v36;
    *((void *)v42 + 4) = v37;
    uint64_t v43 = v40;
    char v27 = v39;
    (*v64)(&v42[*(int *)(v41 + 32)], v38, v43);
    swift_beginAccess();
    uint64_t v44 = (uint64_t)v66;
    sub_1DE82F594((uint64_t)v42, (uint64_t)v66, type metadata accessor for ReadonlyAggregate);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v78 = (void *)*v39;
    unint64_t v46 = v78;
    *uint64_t v39 = 0x8000000000000000;
    unint64_t v48 = sub_1DE821D84(v32, v31);
    uint64_t v49 = v46[2];
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      break;
    }
    char v52 = v47;
    if (v46[3] >= v51)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v55 = v78;
        if (v47) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1DE822320();
        uint64_t v55 = v78;
        if (v52) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1DE824C00(v51, isUniquelyReferenced_nonNull_native);
      unint64_t v53 = sub_1DE821D84(v32, v31);
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_22;
      }
      unint64_t v48 = v53;
      uint64_t v55 = v78;
      if (v52)
      {
LABEL_3:
        sub_1DE82E780(v44, v55[7] + *(void *)(v67 + 72) * v48);
        goto LABEL_4;
      }
    }
    v55[(v48 >> 6) + 8] |= 1 << v48;
    v56 = (uint64_t *)(v55[6] + 16 * v48);
    uint64_t *v56 = v32;
    v56[1] = v31;
    sub_1DE82F594(v44, v55[7] + *(void *)(v67 + 72) * v48, type metadata accessor for ReadonlyAggregate);
    uint64_t v57 = v55[2];
    BOOL v58 = __OFADD__(v57, 1);
    uint64_t v59 = v57 + 1;
    if (v58) {
      goto LABEL_21;
    }
    v55[2] = v59;
    swift_bridgeObjectRetain();
LABEL_4:
    *uint64_t v39 = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v22 = v63;
    sub_1DE82F2D4((uint64_t)v63, type metadata accessor for Aggregate);
    uint64_t v29 = v76 + v62;
    uint64_t v26 = v77 - 1;
    if (v77 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t _s10XavierNews16AggregateContextC10aggregatesSDySSAA08ReadonlyC0VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t AggregateContext.lookup(with:option:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  swift_retain();
  sub_1DE82EA20(v4);
  uint64_t v6 = sub_1DE82D890(MEMORY[0x1E4FBC868], a1, v2, v4, v5);
  sub_1DE82EA30(v4);
  swift_release();
  return v6;
}

uint64_t sub_1DE8216C8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a5;
  v68 = (void (*)(uint64_t, uint64_t))a4;
  uint64_t v64 = a1;
  uint64_t v7 = sub_1DE8E1350();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v60 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for Aggregate(0);
  MEMORY[0x1F4188790](v59, v10);
  uint64_t v12 = (uint64_t *)((char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B968);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v63 = (uint64_t)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v20, v22);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v26);
  unint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = *a2;
  uint64_t v30 = a2[1];
  uint64_t v31 = (void *)(a3 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates);
  swift_beginAccess();
  BOOL v58 = v31;
  uint64_t v32 = *v31;
  uint64_t v33 = *(void *)(v32 + 16);
  uint64_t v66 = v21;
  uint64_t v67 = v29;
  if (v33)
  {
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1DE821D84(v29, v30);
    uint64_t v36 = v66;
    if (v35)
    {
      sub_1DE82F26C(*(void *)(v32 + 56) + *(void *)(v66 + 72) * v34, (uint64_t)v19, type metadata accessor for ReadonlyAggregate);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v37(v19, 0, 1, v20);
    }
    else
    {
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
      v37(v19, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v19, 1, v20);
    uint64_t v38 = v67;
    if (v39 != 1)
    {
      sub_1DE82F594((uint64_t)v19, (uint64_t)v28, type metadata accessor for ReadonlyAggregate);
      swift_endAccess();
      uint64_t v55 = v63;
      sub_1DE82F26C((uint64_t)v28, v63, type metadata accessor for ReadonlyAggregate);
      v37((char *)v55, 0, 1, v20);
      swift_bridgeObjectRetain();
      sub_1DE82000C(v55, v38, v30);
      uint64_t v25 = v28;
      return sub_1DE82F2D4((uint64_t)v25, type metadata accessor for ReadonlyAggregate);
    }
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v37(v19, 1, 1, v20);
    uint64_t v38 = v29;
  }
  sub_1DE82F538((uint64_t)v19, &qword_1EAC0B968);
  uint64_t result = swift_endAccess();
  uint64_t v41 = v68;
  if (!v68) {
    return result;
  }
  swift_retain();
  v41(v38, v30);
  uint64_t v42 = v12[1];
  uint64_t v57 = *v12;
  uint64_t v43 = v12[2];
  uint64_t v44 = v12[3];
  uint64_t v45 = v12[4];
  unint64_t v46 = (char *)v12 + *(int *)(v59 + 32);
  uint64_t v47 = v20;
  uint64_t v48 = v61;
  uint64_t v49 = v62;
  BOOL v50 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v59 = (uint64_t)v37;
  uint64_t v51 = v60;
  v50(v60, v46, v62);
  swift_bridgeObjectRetain();
  sub_1DE82F2D4((uint64_t)v12, type metadata accessor for Aggregate);
  *(void *)uint64_t v25 = v57;
  *((void *)v25 + 1) = v42;
  *((void *)v25 + 2) = v43;
  *((void *)v25 + 3) = v44;
  *((void *)v25 + 4) = v45;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v25[*(int *)(v47 + 32)], v51, v49);
  uint64_t v52 = v63;
  sub_1DE82F26C((uint64_t)v25, v63, type metadata accessor for ReadonlyAggregate);
  unint64_t v53 = (void (*)(uint64_t, void, uint64_t, uint64_t))v59;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v59)(v52, 0, 1, v47);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v54 = v67;
  sub_1DE82000C(v52, v67, v30);
  swift_endAccess();
  sub_1DE82F26C((uint64_t)v25, v52, type metadata accessor for ReadonlyAggregate);
  v53(v52, 0, 1, v47);
  swift_bridgeObjectRetain();
  sub_1DE82000C(v52, v54, v30);
  sub_1DE82EA30((uint64_t)v68);
  return sub_1DE82F2D4((uint64_t)v25, type metadata accessor for ReadonlyAggregate);
}

uint64_t sub_1DE821C80()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE821CD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  swift_retain();
  sub_1DE82EA20(v5);
  uint64_t v7 = sub_1DE82D890(MEMORY[0x1E4FBC868], a1, v4, v5, v6);
  sub_1DE82EA30(v5);
  swift_release();
  return v7;
}

uint64_t sub_1DE821D60(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  return AggregateContext.update(with:option:updateBlock:)(a1, a2, a3, a4);
}

unint64_t sub_1DE821D84(uint64_t a1, uint64_t a2)
{
  sub_1DE8E1BA0();
  sub_1DE8E1480();
  uint64_t v4 = sub_1DE8E1BD0();
  return sub_1DE828E78(a1, a2, v4);
}

unint64_t sub_1DE821DFC(uint64_t a1)
{
  uint64_t v2 = sub_1DE8E1B90();
  return sub_1DE828F5C(a1, v2);
}

unint64_t sub_1DE821E40(double a1, double a2, double a3)
{
  sub_1DE8E1BA0();
  sub_1DE813EFC();
  uint64_t v6 = sub_1DE8E1BD0();
  return sub_1DE828FF8(v6, a1, a2, a3);
}

unint64_t sub_1DE821EC8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_1DE8E1BA0();
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1DE8E1BD0();
  return sub_1DE82907C(a1, a2, a3 & 0x101010101, v8, a4);
}

unint64_t sub_1DE821F78(double a1)
{
  uint64_t v2 = sub_1DE8E1B90();
  return sub_1DE829228(v2, a1);
}

unint64_t sub_1DE821FC0(uint64_t a1)
{
  sub_1DE8E1BA0();
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DE8E1BD0();
  return sub_1DE8292C0(a1, v2);
}

unint64_t sub_1DE822044(char a1)
{
  sub_1DE8E1BA0();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DE8E1BD0();
  return sub_1DE829454(a1 & 1, v2);
}

unint64_t sub_1DE8220D0(uint64_t a1)
{
  sub_1DE8E1BA0();
  sub_1DE82F210(a1, (uint64_t)&v4);
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DE8E1BD0();
  return sub_1DE82954C(a1, v2);
}

void *sub_1DE82215C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA9B68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)(v21 + 16);
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)v21;
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v25 = v24;
    *(void *)(v25 + 16) = v22;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE822320()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B978);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1DE8E1810();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v28 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v29 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v15) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v30 + 72) * v17;
    sub_1DE82F26C(*(void *)(v6 + 56) + v22, (uint64_t)v5, type metadata accessor for ReadonlyAggregate);
    uint64_t v23 = (void *)(*(void *)(v8 + 48) + v18);
    *uint64_t v23 = v20;
    v23[1] = v21;
    sub_1DE82F594((uint64_t)v5, *(void *)(v8 + 56) + v22, type metadata accessor for ReadonlyAggregate);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DE8225B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9628);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE822760()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9618);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE822918()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9918);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v17;
    *(void *)(v21 + 16) = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE822AC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9928);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 8);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v23 = v21;
    *(unsigned char *)(v23 + 8) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE822C7C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9920);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = (long long *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    long long v23 = *v21;
    long long v24 = v21[1];
    long long v25 = v21[2];
    *int64_t v22 = v19;
    v22[1] = v18;
    int64_t v26 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    *int64_t v26 = v23;
    v26[1] = v24;
    v26[2] = v25;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE822E40()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F18);
  uint64_t v32 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1DE8E1810();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v31 = v3;
    uint64_t result = (void *)swift_release();
    *uint64_t v32 = v31;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v35 = v3;
  if (v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    uint64_t v3 = v35;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v34 = v1 + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      uint64_t v3 = v35;
      goto LABEL_12;
    }
    int64_t v28 = v7 + 1;
    uint64_t v3 = v35;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v33) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v28);
    ++v7;
    if (!v29)
    {
      int64_t v7 = v28 + 1;
      if (v28 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v34 + 8 * v7);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v29 - 1) & v29;
    unint64_t v12 = __clz(__rbit64(v29)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = 56 * v12;
    uint64_t v18 = *(void *)(v1 + 56) + v17;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 32);
    uint64_t v24 = *(void *)(v18 + 40);
    long long v25 = (void *)(*(void *)(v3 + 48) + v13);
    char v26 = *(unsigned char *)(v18 + 48);
    *long long v25 = v16;
    v25[1] = v15;
    uint64_t v27 = *(void *)(v3 + 56) + v17;
    *(void *)uint64_t v27 = v19;
    *(void *)(v27 + 8) = v20;
    *(void *)(v27 + 16) = v21;
    *(void *)(v27 + 24) = v22;
    *(void *)(v27 + 32) = v23;
    *(void *)(v27 + 40) = v24;
    *(unsigned char *)(v27 + 48) = v26;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1DE813E10(v19, v20, v21, v22, v23, v24, v26);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v33) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v34 + 8 * v30);
  if (v29)
  {
    int64_t v7 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v7 >= v33) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v7);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE823068()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE823218()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9608);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    char v21 = *(unsigned char *)(v17 + 24);
    char v22 = *(unsigned char *)(v17 + 25);
    char v23 = *(unsigned char *)(v17 + 26);
    char v24 = *(unsigned char *)(v17 + 27);
    LOBYTE(v17) = *(unsigned char *)(v17 + 28);
    uint64_t v25 = 8 * v15;
    uint64_t v26 = *(void *)(*(void *)(v2 + 56) + v25);
    uint64_t v27 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v27 = v19;
    *(void *)(v27 + 8) = v18;
    *(void *)(v27 + 16) = v20;
    *(unsigned char *)(v27 + 24) = v21;
    *(unsigned char *)(v27 + 25) = v22;
    *(unsigned char *)(v27 + 26) = v23;
    *(unsigned char *)(v27 + 27) = v24;
    *(unsigned char *)(v27 + 28) = v17;
    *(void *)(*(void *)(v4 + 56) + v25) = v26;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE823400()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9620);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = *(void *)(v21 + 32);
    uint64_t v27 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v27 = v19;
    v27[1] = v18;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(unsigned char *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v25;
    *(void *)(v28 + 32) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE8235EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9610);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    char v25 = *(unsigned char *)(v21 + 24);
    char v26 = *(unsigned char *)(v21 + 25);
    char v27 = *(unsigned char *)(v21 + 26);
    char v28 = *(unsigned char *)(v21 + 27);
    LOBYTE(v21) = *(unsigned char *)(v21 + 28);
    int64_t v29 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v29 = v19;
    v29[1] = v18;
    uint64_t v30 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v30 = v22;
    *(void *)(v30 + 8) = v23;
    *(void *)(v30 + 16) = v24;
    *(unsigned char *)(v30 + 24) = v25;
    *(unsigned char *)(v30 + 25) = v26;
    *(unsigned char *)(v30 + 26) = v27;
    *(unsigned char *)(v30 + 27) = v28;
    *(unsigned char *)(v30 + 28) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE8237DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE82398C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B960);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE823B1C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v40 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v40 >= v13) {
      goto LABEL_26;
    }
    unint64_t v41 = *(void *)(v6 + 8 * v40);
    ++v9;
    if (!v41)
    {
      int64_t v9 = v40 + 1;
      if (v40 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v41 = *(void *)(v6 + 8 * v9);
      if (!v41) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v41 - 1) & v41;
    unint64_t v15 = __clz(__rbit64(v41)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 80 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    char v25 = *(unsigned char *)(v21 + 24);
    uint64_t v26 = *(void *)(v21 + 32);
    char v27 = *(unsigned char *)(v21 + 40);
    uint64_t v28 = *(void *)(v21 + 48);
    char v29 = *(unsigned char *)(v21 + 56);
    int v30 = *(_DWORD *)(v21 + 60);
    char v31 = *(unsigned char *)(v21 + 64);
    int v32 = *(_DWORD *)(v21 + 68);
    char v33 = *(unsigned char *)(v21 + 72);
    char v34 = *(unsigned char *)(v21 + 73);
    char v35 = *(unsigned char *)(v21 + 74);
    char v36 = *(unsigned char *)(v21 + 75);
    char v37 = *(unsigned char *)(v21 + 76);
    LOBYTE(v21) = *(unsigned char *)(v21 + 77);
    uint64_t v38 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v38 = v19;
    v38[1] = v18;
    uint64_t v39 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v39 = v22;
    *(unsigned char *)(v39 + 8) = v23;
    *(void *)(v39 + 16) = v24;
    *(unsigned char *)(v39 + 24) = v25;
    *(void *)(v39 + 32) = v26;
    *(unsigned char *)(v39 + 40) = v27;
    *(void *)(v39 + 48) = v28;
    *(unsigned char *)(v39 + 56) = v29;
    *(_DWORD *)(v39 + 60) = v30;
    *(unsigned char *)(v39 + 64) = v31;
    *(_DWORD *)(v39 + 68) = v32;
    *(unsigned char *)(v39 + 72) = v33;
    *(unsigned char *)(v39 + 73) = v34;
    *(unsigned char *)(v39 + 74) = v35;
    *(unsigned char *)(v39 + 75) = v36;
    *(unsigned char *)(v39 + 76) = v37;
    *(unsigned char *)(v39 + 77) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v42 = v40 + 2;
  if (v42 >= v13) {
    goto LABEL_26;
  }
  unint64_t v41 = *(void *)(v6 + 8 * v42);
  if (v41)
  {
    int64_t v9 = v42;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v41 = *(void *)(v6 + 8 * v9);
    ++v42;
    if (v41) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE823D60()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClassicArticleData();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v3);
  unint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEAA1F0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1DE8E1810();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  char v25 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1DE82F26C(*(void *)(v6 + 48) + v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v6 + 56) + 8 * v18);
    sub_1DE82F594((uint64_t)v5, *(void *)(v8 + 48) + v19, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
    *(void *)(*(void *)(v8 + 56) + v20) = v21;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DE823FE8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEAA1F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = v15 << 6;
    uint64_t v17 = 8 * v15;
    unint64_t v18 = v16 - v17;
    unint64_t v19 = *(void *)(v2 + 48) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(*(void *)(v2 + 56) + v17);
    unint64_t v27 = *(void *)(v4 + 48) + v18;
    char v28 = *(unsigned char *)(v19 + 48);
    *(void *)unint64_t v27 = *(void *)v19;
    *(void *)(v27 + 8) = v21;
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = v23;
    *(void *)(v27 + 32) = v24;
    *(void *)(v27 + 40) = v25;
    *(unsigned char *)(v27 + 48) = v28;
    *(void *)(*(void *)(v4 + 56) + v17) = v26;
    uint64_t result = (void *)sub_1DE813E10(v20, v21, v22, v23, v24, v25, v28);
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE8241B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(void *)(v25 + 8) = v23;
    *(unsigned char *)(v25 + 16) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE824380(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DE8E1810();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE824530()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v25 = v19;
    v25[1] = v18;
    int64_t v26 = (void *)(*(void *)(v4 + 56) + v20);
    *int64_t v26 = v22;
    v26[1] = v23;
    v26[2] = v24;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DE8246FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = v15 << 6;
    unint64_t v21 = *(void *)(v2 + 56) + v20;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    char v25 = *(unsigned char *)(v21 + 40);
    uint64_t v26 = *(void *)(v21 + 48);
    char v27 = *(unsigned char *)(v21 + 56);
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    long long v29 = *(_OWORD *)(v21 + 24);
    *unint64_t v28 = v19;
    v28[1] = v18;
    unint64_t v30 = *(void *)(v4 + 56) + v20;
    *(unsigned char *)unint64_t v30 = v22;
    *(void *)(v30 + 8) = v23;
    *(void *)(v30 + 16) = v24;
    *(_OWORD *)(v30 + 24) = v29;
    *(unsigned char *)(v30 + 40) = v25;
    *(void *)(v30 + 48) = v26;
    *(unsigned char *)(v30 + 56) = v27;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE8248E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA9B68);
  char v37 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v37)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      long long v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      long long v38 = *(_OWORD *)v32;
      uint64_t v33 = *(void *)(v32 + 16);
      if ((v37 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(_OWORD *)uint64_t v19 = v38;
      *(void *)(v19 + 16) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE824C00(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B978);
  int v44 = a2;
  uint64_t v10 = sub_1DE8E1820();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v42 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v40 = v2;
  int64_t v41 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    int64_t v24 = v42;
    unint64_t v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v25 = v42[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v41) {
              goto LABEL_34;
            }
            unint64_t v25 = v42[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    BOOL v27 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v22);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = *(void *)(v9 + 56) + v30 * v22;
    if (v44)
    {
      sub_1DE82F594(v31, (uint64_t)v8, type metadata accessor for ReadonlyAggregate);
    }
    else
    {
      sub_1DE82F26C(v31, (uint64_t)v8, type metadata accessor for ReadonlyAggregate);
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v32 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v11 + 48) + 16 * v19);
    *unint64_t v20 = v29;
    v20[1] = v28;
    uint64_t result = sub_1DE82F594((uint64_t)v8, *(void *)(v11 + 56) + v30 * v19, type metadata accessor for ReadonlyAggregate);
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v24 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v9 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v39;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DE824FE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9628);
  char v38 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *unint64_t v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE8252F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9618);
  char v36 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE825608(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9918);
  uint64_t result = sub_1DE8E1820();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    char v32 = a2;
    int64_t v7 = 0;
    int64_t v34 = (void *)(v4 + 64);
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v7 << 6);
      }
      else
      {
        int64_t v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        uint64_t result = v4 + 64;
        if (v16 >= v33) {
          goto LABEL_31;
        }
        unint64_t v17 = v34[v16];
        ++v7;
        if (!v17)
        {
          int64_t v7 = v16 + 1;
          if (v16 + 1 >= v33) {
            goto LABEL_31;
          }
          unint64_t v17 = v34[v7];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v33)
            {
LABEL_31:
              if (v32)
              {
                uint64_t v31 = 1 << *(unsigned char *)(v4 + 32);
                if (v31 >= 64) {
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v34 = -1 << v31;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v34[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v7 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_39;
                }
                if (v7 >= v33) {
                  goto LABEL_31;
                }
                unint64_t v17 = v34[v7];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v7 = v18;
          }
        }
LABEL_21:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 24 * v15);
      uint64_t v21 = v19[1];
      uint64_t v20 = v19[2];
      uint64_t v22 = *v19;
      uint64_t v23 = *(void *)(*(void *)(v4 + 56) + 8 * v15);
      sub_1DE8E1BA0();
      sub_1DE8E1BC0();
      sub_1DE8E1BC0();
      sub_1DE8E1BC0();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v24 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v6 + 48) + 24 * v12);
      *int64_t v13 = v22;
      v13[1] = v21;
      void v13[2] = v20;
      *(void *)(*(void *)(v6 + 56) + 8 * v12) = v23;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_1DE825918(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9928);
  char v42 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    char v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v36 = *(void *)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    if ((v42 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = *(void *)(v7 + 56) + v18;
    *(void *)uint64_t v20 = v36;
    *(unsigned char *)(v20 + 8) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE825C40(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9920);
  char v36 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v35[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v35[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v36)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v35[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v35[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      char v32 = (long long *)(*(void *)(v5 + 56) + 48 * v21);
      long long v39 = v32[1];
      long long v37 = *v32;
      long long v38 = v32[2];
      if ((v36 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (_OWORD *)(*(void *)(v7 + 56) + 48 * v17);
      _OWORD *v19 = v37;
      v19[1] = v39;
      v19[2] = v38;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE825F64(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F18);
  char v48 = a2;
  uint64_t v51 = sub_1DE8E1820();
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
    char v42 = v44;
LABEL_42:
    *char v42 = v51;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  unint64_t v46 = (void *)(v4 + 64);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v45 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v51 + 64;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v47 = v4;
  while (1)
  {
    if (v7)
    {
      uint64_t v49 = (v7 - 1) & v7;
      int64_t v50 = v10;
      unint64_t v20 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v45)
    {
      swift_release();
      char v42 = v44;
      int64_t v22 = v46;
      if (v48)
      {
LABEL_37:
        uint64_t v43 = 1 << *(unsigned char *)(v4 + 32);
        if (v43 >= 64) {
          bzero(v22, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        }
        else {
          *int64_t v22 = -1 << v43;
        }
        *(void *)(v4 + 16) = 0;
      }
LABEL_41:
      uint64_t result = swift_release();
      goto LABEL_42;
    }
    int64_t v22 = v46;
    unint64_t v23 = v46[v21];
    int64_t v24 = v10 + 1;
    if (!v23)
    {
      int64_t v24 = v10 + 2;
      if (v10 + 2 >= v45) {
        goto LABEL_34;
      }
      unint64_t v23 = v46[v24];
      if (!v23) {
        break;
      }
    }
LABEL_30:
    uint64_t v49 = (v23 - 1) & v23;
    int64_t v50 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v4 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v20);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = v30 + 56 * v20;
    uint64_t v35 = *(void *)v34;
    uint64_t v36 = *(void *)(v34 + 8);
    uint64_t v37 = *(void *)(v34 + 16);
    uint64_t v38 = *(void *)(v34 + 24);
    uint64_t v40 = *(void *)(v34 + 32);
    uint64_t v39 = *(void *)(v34 + 40);
    char v41 = *(unsigned char *)(v34 + 48);
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1DE813E10(v35, v36, v37, v38, v40, v39, v41);
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t v11 = sub_1DE8E1BD0();
    uint64_t v12 = -1 << *(unsigned char *)(v51 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v8 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v8 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v16 = v40;
      char v17 = v41;
      uint64_t result = v35;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v12) >> 6;
      uint64_t v16 = v40;
      char v17 = v41;
      uint64_t result = v35;
      do
      {
        if (++v14 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v28 = v14 == v27;
        if (v14 == v27) {
          unint64_t v14 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v14);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v14 << 6);
    }
    *(void *)(v8 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v18 = (void *)(*(void *)(v51 + 48) + 16 * v15);
    *uint64_t v18 = v32;
    v18[1] = v33;
    uint64_t v19 = *(void *)(v51 + 56) + 56 * v15;
    *(void *)uint64_t v19 = result;
    *(void *)(v19 + 8) = v36;
    *(void *)(v19 + 16) = v37;
    *(void *)(v19 + 24) = v38;
    *(void *)(v19 + 32) = v16;
    *(void *)(v19 + 40) = v39;
    *(unsigned char *)(v19 + 48) = v17;
    ++*(void *)(v51 + 16);
    uint64_t v4 = v47;
    unint64_t v7 = v49;
    int64_t v10 = v50;
  }
  uint64_t v25 = v10 + 3;
  if (v10 + 3 >= v45)
  {
LABEL_34:
    swift_release();
    char v42 = v44;
    if (v48) {
      goto LABEL_37;
    }
    goto LABEL_41;
  }
  unint64_t v23 = v46[v25];
  if (v23)
  {
    int64_t v24 = v10 + 3;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v45) {
      goto LABEL_34;
    }
    unint64_t v23 = v46[v24];
    ++v25;
    if (v23) {
      goto LABEL_30;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DE826324(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E50);
  char v37 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE82662C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9608);
  char v42 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    int64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v23 = v40[v13];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v23 = v40[v13];
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(v5 + 56);
    uint64_t v30 = *(void *)(v5 + 48) + 32 * v20;
    uint64_t v32 = *(void *)v30;
    uint64_t v31 = *(void *)(v30 + 8);
    uint64_t v33 = *(void *)(v30 + 16);
    char v34 = *(unsigned char *)(v30 + 24);
    char v35 = *(unsigned char *)(v30 + 25);
    char v43 = *(unsigned char *)(v30 + 26);
    char v44 = *(unsigned char *)(v30 + 27);
    char v45 = *(unsigned char *)(v30 + 28);
    uint64_t v36 = *(void *)(v29 + 8 * v20);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v7 + 48) + 32 * v17;
    *(void *)uint64_t v18 = v32;
    *(void *)(v18 + 8) = v31;
    *(void *)(v18 + 16) = v33;
    *(unsigned char *)(v18 + 24) = v34;
    *(unsigned char *)(v18 + 25) = v35;
    *(unsigned char *)(v18 + 26) = v43;
    *(unsigned char *)(v18 + 27) = v44;
    *(unsigned char *)(v18 + 28) = v45;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  int64_t v22 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE8269A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9620);
  char v43 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v24 = v41[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v24 = v41[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 40 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    char v44 = *(unsigned char *)(v33 + 16);
    uint64_t v36 = *(void *)(v33 + 24);
    uint64_t v37 = *(void *)(v33 + 32);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 40 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(unsigned char *)(v19 + 16) = v44;
    *(void *)(v19 + 24) = v36;
    *(void *)(v19 + 32) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE826D08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9610);
  char v43 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v24 = v41[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v24 = v41[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    uint64_t v36 = *(void *)(v33 + 16);
    char v37 = *(unsigned char *)(v33 + 25);
    char v46 = *(unsigned char *)(v33 + 26);
    char v47 = *(unsigned char *)(v33 + 24);
    char v44 = *(unsigned char *)(v33 + 28);
    char v45 = *(unsigned char *)(v33 + 27);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v36;
    *(unsigned char *)(v19 + 24) = v47;
    *(unsigned char *)(v19 + 25) = v37;
    *(unsigned char *)(v19 + 26) = v46;
    *(unsigned char *)(v19 + 27) = v45;
    *(unsigned char *)(v19 + 28) = v44;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE827080(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F28);
  char v37 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE82738C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B960);
  uint64_t result = sub_1DE8E1820();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_1DE8E1B90();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE82763C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C88);
  char v42 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    uint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 80 * v21;
    uint64_t v34 = *(void *)v33;
    char v35 = *(unsigned char *)(v33 + 8);
    uint64_t v36 = *(void *)(v33 + 16);
    char v56 = *(unsigned char *)(v33 + 24);
    uint64_t v55 = *(void *)(v33 + 32);
    char v54 = *(unsigned char *)(v33 + 40);
    uint64_t v53 = *(void *)(v33 + 48);
    int v51 = *(_DWORD *)(v33 + 60);
    char v52 = *(unsigned char *)(v33 + 56);
    int v49 = *(_DWORD *)(v33 + 68);
    char v50 = *(unsigned char *)(v33 + 64);
    char v47 = *(unsigned char *)(v33 + 73);
    char v48 = *(unsigned char *)(v33 + 72);
    char v45 = *(unsigned char *)(v33 + 75);
    char v46 = *(unsigned char *)(v33 + 74);
    char v43 = *(unsigned char *)(v33 + 77);
    char v44 = *(unsigned char *)(v33 + 76);
    if ((v42 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 80 * v17;
    *(void *)uint64_t v19 = v34;
    *(unsigned char *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v36;
    *(unsigned char *)(v19 + 24) = v56;
    *(void *)(v19 + 32) = v55;
    *(unsigned char *)(v19 + 40) = v54;
    *(void *)(v19 + 48) = v53;
    *(unsigned char *)(v19 + 56) = v52;
    *(_DWORD *)(v19 + 60) = v51;
    *(unsigned char *)(v19 + 64) = v50;
    *(_DWORD *)(v19 + 68) = v49;
    *(unsigned char *)(v19 + 72) = v48;
    *(unsigned char *)(v19 + 73) = v47;
    *(unsigned char *)(v19 + 74) = v46;
    *(unsigned char *)(v19 + 75) = v45;
    *(unsigned char *)(v19 + 76) = v44;
    *(unsigned char *)(v19 + 77) = v43;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  uint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE827A40(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ClassicArticleData();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEAA1F0);
  int v41 = a2;
  uint64_t v10 = sub_1DE8E1820();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v39 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    uint64_t v23 = v39;
    unint64_t v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v24 = v39[v18];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v41 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v18 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v38) {
              goto LABEL_34;
            }
            unint64_t v24 = v39[v18];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v25;
      }
    }
LABEL_21:
    unint64_t v15 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v40 + 72);
    uint64_t v27 = *(void *)(v9 + 48) + v26 * v21;
    if (v41)
    {
      sub_1DE82F594(v27, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
    }
    else
    {
      sub_1DE82F26C(v27, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = sub_1DE82F594((uint64_t)v8, *(void *)(v11 + 48) + v26 * v19, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
    *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v23 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v36;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DE827E38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEAA1F8);
  char v45 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v41 = v3;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v46 = v13;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    int64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    int64_t v46 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = *(void *)(v5 + 48) + 56 * v20;
    uint64_t v32 = *(void *)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    uint64_t v34 = *(void *)(v31 + 16);
    uint64_t v35 = *(void *)(v31 + 24);
    uint64_t v37 = *(void *)(v31 + 32);
    uint64_t v36 = *(void *)(v31 + 40);
    char v38 = *(unsigned char *)(v31 + 48);
    uint64_t v39 = *(void *)(v30 + 8 * v20);
    if ((v45 & 1) == 0) {
      sub_1DE813E10(*(void *)v31, *(void *)(v31 + 8), *(void *)(v31 + 16), *(void *)(v31 + 24), *(void *)(v31 + 32), *(void *)(v31 + 40), *(unsigned char *)(v31 + 48));
    }
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v7 + 48) + 56 * v17;
    *(void *)uint64_t v18 = v32;
    *(void *)(v18 + 8) = v33;
    *(void *)(v18 + 16) = v34;
    *(void *)(v18 + 24) = v35;
    *(void *)(v18 + 32) = v37;
    *(void *)(v18 + 40) = v36;
    *(unsigned char *)(v18 + 48) = v38;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v44;
    int64_t v13 = v46;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE8281C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E40);
  char v39 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE8284E8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_1DE8E1820();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1DE8287FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DD0);
  char v39 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v34 = *v32;
      uint64_t v33 = v32[1];
      uint64_t v35 = v32[2];
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = (void *)(*(void *)(v7 + 56) + 24 * v17);
      void *v19 = v34;
      v19[1] = v33;
      v19[2] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DE828B24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B48);
  char v42 = a2;
  uint64_t v6 = sub_1DE8E1820();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v40 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v39 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v39) {
          goto LABEL_33;
        }
        unint64_t v23 = v40[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v39) {
            goto LABEL_33;
          }
          unint64_t v23 = v40[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v42)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
                if (v38 >= 64) {
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v38;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v23 = v40[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      unint64_t v32 = *(void *)(v5 + 56) + (v21 << 6);
      char v33 = *(unsigned char *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v35 = *(void *)(v32 + 16);
      long long v44 = *(_OWORD *)(v32 + 24);
      char v36 = *(unsigned char *)(v32 + 40);
      uint64_t v37 = *(void *)(v32 + 48);
      char v43 = *(unsigned char *)(v32 + 56);
      if ((v42 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = *(void *)(v7 + 56) + (v17 << 6);
      *(unsigned char *)unint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(void *)(v19 + 16) = v35;
      *(_OWORD *)(v19 + 24) = v44;
      *(unsigned char *)(v19 + 40) = v36;
      *(void *)(v19 + 48) = v37;
      *(unsigned char *)(v19 + 56) = v43;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1DE828E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DE8E1AC0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DE8E1AC0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DE828F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DE828FF8(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t result = a1 & ~v5;
  if ((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (double *)(*(void *)(v4 + 48) + 24 * result);
      double v9 = v8[1];
      double v10 = v8[2];
      BOOL v11 = *v8 == a2;
      if (v9 != a3) {
        BOOL v11 = 0;
      }
      if (v10 == a4 && v11) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1DE82907C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, double a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a4 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v12 = ~v7;
    uint64_t v13 = *(void *)(v5 + 48);
    uint64_t v25 = HIDWORD(a3) & 1;
    uint64_t v26 = (a3 >> 24) & 1;
    uint64_t v27 = (a3 >> 16) & 1;
    uint64_t v28 = (a3 >> 8) & 1;
    int v24 = a3;
    do
    {
      uint64_t v14 = v13 + 32 * v8;
      double v15 = *(double *)(v14 + 16);
      int v16 = *(unsigned __int8 *)(v14 + 25);
      int v17 = *(unsigned __int8 *)(v14 + 26);
      int v18 = *(unsigned __int8 *)(v14 + 27);
      int v19 = *(unsigned __int8 *)(v14 + 28);
      if (*(void *)v14 == a1 && *(void *)(v14 + 8) == a2)
      {
        if (v15 == a5
          && ((a3 ^ *(unsigned __int8 *)(v14 + 24)) & 1) == 0
          && ((v28 ^ v16) & 1) == 0
          && ((v27 ^ v17) & 1) == 0
          && ((v26 ^ v18) & 1) == 0
          && v25 == v19)
        {
          return v8;
        }
      }
      else
      {
        int v29 = *(unsigned __int8 *)(v14 + 24);
        uint64_t v21 = v6;
        char v22 = sub_1DE8E1AC0();
        LODWORD(a3) = v24;
        uint64_t v6 = v21;
        if ((v22 & 1) != 0
          && v15 == a5
          && ((v24 ^ v29) & 1) == 0
          && ((v28 ^ v16) & 1) == 0
          && ((v27 ^ v17) & 1) == 0
          && ((v26 ^ v18) & 1) == 0
          && ((v25 ^ v19) & 1) == 0)
        {
          return v8;
        }
      }
      unint64_t v8 = (v8 + 1) & v12;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1DE829228(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DE8292C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ClassicArticleData() - 8;
  MEMORY[0x1F4188790](v5, v6);
  double v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v11 = a2 & ~v10;
  if ((*(void *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1DE82F26C(*(void *)(v2 + 48) + v13 * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
      if (*((void *)v9 + 1) == *(void *)(a1 + 8) && *((void *)v9 + 2) == *(void *)(a1 + 16)) {
        break;
      }
      char v15 = sub_1DE8E1AC0();
      sub_1DE82F2D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
      if ((v15 & 1) == 0)
      {
        unint64_t v11 = (v11 + 1) & v12;
        if ((*(void *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11)) {
          continue;
        }
      }
      return v11;
    }
    sub_1DE82F2D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
  }
  return v11;
}

unint64_t sub_1DE829454(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 1684627824;
    }
    else {
      uint64_t v6 = 1701147238;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 1684627824 : 1701147238;
      if (v7 == v6) {
        break;
      }
      char v8 = sub_1DE8E1AC0();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1DE82954C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v7 = ~v4;
    uint64_t v8 = *(void *)(v2 + 48);
    do
    {
      double v9 = (uint64_t *)(v8 + 56 * v5);
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      sub_1DE82F210(a1, (uint64_t)v14);
      if (v10 == v14[0] && v11 == v14[1]) {
        break;
      }
      if (sub_1DE8E1AC0()) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v7;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1DE829624(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DE821D84(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1DE822320();
      goto LABEL_7;
    }
    sub_1DE824C00(v15, a4 & 1);
    unint64_t v22 = sub_1DE821D84(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      int v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
LABEL_7:
  int v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for ReadonlyAggregate(0) - 8) + 72) * v12;
    return sub_1DE82E780(a1, v20);
  }
LABEL_13:
  sub_1DE82A360(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE829788(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DE821D84(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DE822760();
LABEL_7:
    int v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DE8252F0(v15, a4 & 1);
  unint64_t v21 = sub_1DE821D84(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  int v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8298F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1DE821D84(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < result || (a5 & 1) == 0)
  {
    if (v19 >= result && (a5 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DE822AC0();
      goto LABEL_9;
    }
    sub_1DE825918(result, a5 & 1);
    uint64_t result = sub_1DE821D84(a3, a4);
    if ((v18 & 1) == (v20 & 1))
    {
      unint64_t v14 = result;
      goto LABEL_9;
    }
LABEL_15:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
LABEL_9:
  int v21 = a2 & 1;
  char v22 = *v6;
  if (v18)
  {
    uint64_t v23 = v22[7] + 16 * v14;
    *(void *)uint64_t v23 = a1;
    *(unsigned char *)(v23 + 8) = v21 != 0;
  }
  else
  {
    sub_1DE82A40C(v14, a3, a4, a1, v21, v22);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DE829A4C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DE821D84(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DE822C7C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 48 * v12);
      long long v20 = a1[1];
      _OWORD *v19 = *a1;
      v19[1] = v20;
      v19[2] = a1[2];
      return result;
    }
    goto LABEL_11;
  }
  sub_1DE825C40(result, a4 & 1);
  uint64_t result = sub_1DE821D84(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  *char v22 = a2;
  v22[1] = a3;
  uint64_t v23 = (_OWORD *)(v18[7] + 48 * v12);
  long long v24 = a1[1];
  *uint64_t v23 = *a1;
  v23[1] = v24;
  v23[2] = a1[2];
  uint64_t v25 = v18[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v27;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE829BD8(uint64_t a1, uint64_t a2, char a3, double a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DE821D84(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DE823068();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DE826324(result, a3 & 1);
  uint64_t result = sub_1DE821D84(a1, a2);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  long long v20 = (uint64_t *)(v18[6] + 16 * v12);
  *long long v20 = a1;
  v20[1] = a2;
  *(double *)(v18[7] + 8 * v12) = a4;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE829D40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DE821D84(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DE823400();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      return sub_1DE82F4DC(a1, v19);
    }
    goto LABEL_13;
  }
  sub_1DE8269A8(v15, a4 & 1);
  unint64_t v21 = sub_1DE821D84(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 40 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(void *)(v24 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v18[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE829ED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DE82A1D8(a1, a2, a3, a4, &qword_1EBEA7F20);
}

uint64_t sub_1DE829EDC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for ClassicArticleData();
  MEMORY[0x1F4188790](v8, v9);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DE821FC0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    long long v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DE823D60();
    goto LABEL_7;
  }
  sub_1DE827A40(v17, a3 & 1);
  unint64_t v23 = sub_1DE821FC0(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  long long v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1DE82F26C(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
  return sub_1DE82A4EC(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1DE82A05C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1DE821D84(a3, a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < result || (a5 & 1) == 0)
  {
    if (v21 >= result && (a5 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DE8241B4();
      goto LABEL_9;
    }
    sub_1DE8281C0(result, a5 & 1);
    uint64_t result = sub_1DE821D84(a3, a4);
    if ((v20 & 1) == (v22 & 1))
    {
      unint64_t v16 = result;
      goto LABEL_9;
    }
LABEL_15:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
LABEL_9:
  int v23 = a2 & 1;
  char v24 = *v7;
  if (v20)
  {
    uint64_t v25 = v24[7] + 24 * v16;
    *(double *)uint64_t v25 = a6;
    *(void *)(v25 + 8) = a1;
    *(unsigned char *)(v25 + 16) = v23 != 0;
  }
  else
  {
    sub_1DE82A5A0(v16, a3, a4, a1, v23, v24, a6);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DE82A1CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DE82A1D8(a1, a2, a3, a4, &qword_1EBEA9E48);
}

uint64_t sub_1DE82A1D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1DE821D84(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1DE824380(a5);
LABEL_7:
    char v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DE8284E8(v17, a4 & 1, a5);
  unint64_t v23 = sub_1DE821D84(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v28;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE82A360(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t result = sub_1DE82F594(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for ReadonlyAggregate);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1DE82A40C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = a6[7] + 16 * result;
  *(void *)uint64_t v7 = a4;
  *(unsigned char *)(v7 + 8) = a5 & 1;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_1DE82A464(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, double a7)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = a6[6] + 32 * result;
  *(void *)uint64_t v7 = a2;
  *(void *)(v7 + 8) = a3;
  *(double *)(v7 + 16) = a7;
  uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(a4);
  *(unsigned char *)(v7 + 24) = a4 & 1;
  int16x8_t v9 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1DE8E3250), (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1DE8E3240));
  *(int8x8_t *)v9.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v9), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v7 + 25) = vmovn_s16(v9).u32[0];
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v10 = a6[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a6[2] = v12;
  }
  return result;
}

uint64_t sub_1DE82A4EC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for ClassicArticleData();
  uint64_t result = sub_1DE82F594(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ClassicArticleData);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1DE82A5A0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, double a7)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a6[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a6[7] + 24 * result;
  *(double *)uint64_t v8 = a7;
  *(void *)(v8 + 8) = a4;
  *(unsigned char *)(v8 + 16) = a5 & 1;
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

uint64_t sub_1DE82A5FC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ReadonlyAggregate(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DE8CB994(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1DE82B074(v6);
  *a1 = v3;
  return result;
}

size_t sub_1DE82A6A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B980);
  uint64_t v3 = *(void *)(type metadata accessor for ReadonlyAggregate(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1DE82C32C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1DE82F204();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1DE82A7F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9938);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  unint64_t v5 = sub_1DE82C850(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82A8F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1DE82C650((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82A9D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1DE82C9F8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82AAC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E58);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  uint64_t v5 = sub_1DE82CBF8((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82ABBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97E0);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1DE82CE18(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82ACB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DD8);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 112);
  uint64_t v5 = sub_1DE82D048(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82ADAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F38);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1DE82D360((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82AEA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B50);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_1DE82D568(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DE82AF8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B50);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_1DE82D6FC(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DE82F204();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1DE82B074(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v144 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v4 = *(void *)(v144 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v144, v5);
  uint64_t v134 = (uint64_t)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v145 = (uint64_t)&v128 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
  uint64_t v141 = (uint64_t)&v128 - v13;
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v140 = (uint64_t)&v128 - v15;
  uint64_t v16 = a1[1];
  uint64_t result = sub_1DE8E1A70();
  if (result >= v16)
  {
    if (v16 < 0) {
      goto LABEL_141;
    }
    if (v16) {
      return sub_1DE82BAEC(0, v16, 1, a1);
    }
    return result;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_140;
  }
  uint64_t v131 = result;
  if (v16 > 1)
  {
    uint64_t v19 = v18 >> 1;
    uint64_t result = sub_1DE8E15C0();
    *(void *)(result + 16) = v19;
    uint64_t v20 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v130 = result;
    unint64_t v136 = result + ((v20 + 32) & ~v20);
LABEL_12:
    uint64_t v22 = 0;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v137 = v4;
    v143 = a1;
    while (1)
    {
      uint64_t v24 = v22;
      uint64_t v25 = v22 + 1;
      if (v22 + 1 >= v16)
      {
        uint64_t v31 = v22 + 1;
        goto LABEL_57;
      }
      uint64_t v26 = *a1;
      uint64_t v27 = *(void *)(v4 + 72);
      uint64_t v139 = v16;
      uint64_t v135 = v22;
      uint64_t v28 = v140;
      sub_1DE82F26C(v26 + v27 * v25, v140, type metadata accessor for ReadonlyAggregate);
      uint64_t v29 = v141;
      sub_1DE82F26C(v26 + v27 * v135, v141, type metadata accessor for ReadonlyAggregate);
      uint64_t v138 = sub_1DE8E1330();
      sub_1DE82F2D4(v29, type metadata accessor for ReadonlyAggregate);
      uint64_t v24 = v135;
      uint64_t v30 = v139;
      uint64_t result = sub_1DE82F2D4(v28, type metadata accessor for ReadonlyAggregate);
      uint64_t v31 = v24 + 2;
      uint64_t v133 = v26;
      uint64_t v146 = v27;
      if (v24 + 2 >= v30)
      {
        uint64_t v40 = v137;
      }
      else
      {
        uint64_t v129 = v2;
        uint64_t v132 = v21;
        uint64_t v32 = v27 * v25;
        uint64_t v33 = v26;
        uint64_t v34 = v27 * v31;
        while (1)
        {
          uint64_t v35 = v31;
          int v36 = v138 == 1;
          uint64_t v37 = v140;
          sub_1DE82F26C(v33 + v34, v140, type metadata accessor for ReadonlyAggregate);
          uint64_t v38 = v141;
          sub_1DE82F26C(v33 + v32, v141, type metadata accessor for ReadonlyAggregate);
          int v39 = sub_1DE8E1330() != 1;
          sub_1DE82F2D4(v38, type metadata accessor for ReadonlyAggregate);
          uint64_t result = sub_1DE82F2D4(v37, type metadata accessor for ReadonlyAggregate);
          if (v36 == v39) {
            break;
          }
          uint64_t v31 = v35 + 1;
          v33 += v146;
          uint64_t v30 = v139;
          if (v139 == v35 + 1)
          {
            uint64_t v31 = v139;
            uint64_t v40 = v137;
            uint64_t v21 = v132;
            uint64_t v2 = v129;
            uint64_t v24 = v135;
            goto LABEL_24;
          }
        }
        uint64_t v40 = v137;
        uint64_t v21 = v132;
        uint64_t v31 = v35;
        uint64_t v2 = v129;
        uint64_t v24 = v135;
        uint64_t v30 = v139;
      }
      if (v138 != 1) {
        goto LABEL_37;
      }
LABEL_24:
      if (v31 < v24) {
        goto LABEL_142;
      }
      if (v24 < v31)
      {
        uint64_t v132 = v21;
        uint64_t v41 = 0;
        uint64_t v42 = v146 * (v31 - 1);
        uint64_t v43 = v31 * v146;
        uint64_t v44 = v24;
        uint64_t v45 = v146;
        uint64_t v46 = v44;
        uint64_t v47 = v44 * v146;
        char v48 = v143;
        uint64_t v142 = v31;
        do
        {
          if (v46 != v31 + v41 - 1)
          {
            uint64_t v49 = v133;
            if (!v133) {
              goto LABEL_147;
            }
            unint64_t v50 = v133 + v47;
            uint64_t v51 = v133 + v42;
            sub_1DE82F594(v133 + v47, v134, type metadata accessor for ReadonlyAggregate);
            if (v47 < v42 || v50 >= v49 + v43)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v45 = v146;
            }
            else
            {
              uint64_t v45 = v146;
              if (v47 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t result = sub_1DE82F594(v134, v51, type metadata accessor for ReadonlyAggregate);
            uint64_t v31 = v142;
            char v48 = v143;
          }
          ++v46;
          --v41;
          v42 -= v45;
          v43 -= v45;
          v47 += v45;
        }
        while (v46 < v31 + v41);
        uint64_t v40 = v137;
        uint64_t v21 = v132;
        uint64_t v24 = v135;
        uint64_t v30 = v139;
        if (v31 >= v139) {
          goto LABEL_57;
        }
      }
      else
      {
LABEL_37:
        char v48 = v143;
        if (v31 >= v30) {
          goto LABEL_57;
        }
      }
      if (__OFSUB__(v31, v24)) {
        goto LABEL_139;
      }
      if (v31 - v24 < v131)
      {
        if (__OFADD__(v24, v131)) {
          goto LABEL_143;
        }
        if (v24 + v131 >= v30) {
          uint64_t v52 = v30;
        }
        else {
          uint64_t v52 = v24 + v131;
        }
        if (v52 < v24)
        {
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          return result;
        }
        if (v31 != v52)
        {
          uint64_t v135 = v24;
          uint64_t v132 = v21;
          uint64_t v133 = v52;
          uint64_t v129 = v2;
          uint64_t v53 = *(void *)(v40 + 72);
          uint64_t v54 = v53 * (v31 - 1);
          uint64_t v138 = v53;
          uint64_t v55 = v31 * v53;
          do
          {
            uint64_t v57 = 0;
            uint64_t v58 = v135;
            uint64_t v142 = v31;
            uint64_t v139 = v55;
            while (1)
            {
              uint64_t v146 = v58;
              uint64_t v59 = *v48;
              uint64_t v60 = v140;
              sub_1DE82F26C(v55 + v57 + *v48, v140, type metadata accessor for ReadonlyAggregate);
              uint64_t v61 = v54;
              uint64_t v62 = v54 + v57 + v59;
              uint64_t v63 = v48;
              uint64_t v64 = v141;
              sub_1DE82F26C(v62, v141, type metadata accessor for ReadonlyAggregate);
              uint64_t v65 = sub_1DE8E1330();
              sub_1DE82F2D4(v64, type metadata accessor for ReadonlyAggregate);
              uint64_t result = sub_1DE82F2D4(v60, type metadata accessor for ReadonlyAggregate);
              if (v65 != 1) {
                break;
              }
              uint64_t v66 = *v63;
              if (!*v63) {
                goto LABEL_145;
              }
              uint64_t v55 = v139;
              uint64_t v54 = v61;
              uint64_t v67 = v66 + v61 + v57;
              sub_1DE82F594(v66 + v139 + v57, v145, type metadata accessor for ReadonlyAggregate);
              swift_arrayInitWithTakeFrontToBack();
              uint64_t result = sub_1DE82F594(v145, v67, type metadata accessor for ReadonlyAggregate);
              v57 -= v138;
              uint64_t v58 = v146 + 1;
              uint64_t v56 = v142;
              char v48 = v143;
              if (v142 == v146 + 1) {
                goto LABEL_50;
              }
            }
            uint64_t v56 = v142;
            char v48 = v63;
            uint64_t v54 = v61;
            uint64_t v55 = v139;
LABEL_50:
            uint64_t v31 = v56 + 1;
            v54 += v138;
            v55 += v138;
          }
          while (v31 != v133);
          uint64_t v31 = v133;
          uint64_t v2 = v129;
          uint64_t v21 = v132;
          uint64_t v24 = v135;
        }
      }
LABEL_57:
      if (v31 < v24) {
        goto LABEL_134;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v142 = v31;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DE8CA414(0, *(void *)(v21 + 16) + 1, 1, (char *)v21);
        uint64_t v21 = result;
      }
      unint64_t v69 = *(void *)(v21 + 16);
      unint64_t v68 = *(void *)(v21 + 24);
      unint64_t v23 = v69 + 1;
      if (v69 >= v68 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DE8CA414((char *)(v68 > 1), v69 + 1, 1, (char *)v21);
        uint64_t v21 = result;
      }
      *(void *)(v21 + 16) = v23;
      uint64_t v70 = v21 + 32;
      uint64_t v71 = (uint64_t *)(v21 + 32 + 16 * v69);
      uint64_t v72 = v142;
      *uint64_t v71 = v24;
      v71[1] = v72;
      if (v69)
      {
        a1 = v143;
        while (1)
        {
          unint64_t v73 = v23 - 1;
          if (v23 >= 4)
          {
            unint64_t v78 = v70 + 16 * v23;
            uint64_t v79 = *(void *)(v78 - 64);
            uint64_t v80 = *(void *)(v78 - 56);
            BOOL v84 = __OFSUB__(v80, v79);
            uint64_t v81 = v80 - v79;
            if (v84) {
              goto LABEL_123;
            }
            uint64_t v83 = *(void *)(v78 - 48);
            uint64_t v82 = *(void *)(v78 - 40);
            BOOL v84 = __OFSUB__(v82, v83);
            uint64_t v76 = v82 - v83;
            char v77 = v84;
            if (v84) {
              goto LABEL_124;
            }
            unint64_t v85 = v23 - 2;
            v86 = (uint64_t *)(v70 + 16 * (v23 - 2));
            uint64_t v88 = *v86;
            uint64_t v87 = v86[1];
            BOOL v84 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v84) {
              goto LABEL_125;
            }
            BOOL v84 = __OFADD__(v76, v89);
            uint64_t v90 = v76 + v89;
            if (v84) {
              goto LABEL_127;
            }
            if (v90 >= v81)
            {
              v108 = (uint64_t *)(v70 + 16 * v73);
              uint64_t v110 = *v108;
              uint64_t v109 = v108[1];
              BOOL v84 = __OFSUB__(v109, v110);
              uint64_t v111 = v109 - v110;
              if (v84) {
                goto LABEL_133;
              }
              BOOL v101 = v76 < v111;
              goto LABEL_95;
            }
          }
          else
          {
            if (v23 != 3)
            {
              uint64_t v102 = *(void *)(v21 + 32);
              uint64_t v103 = *(void *)(v21 + 40);
              BOOL v84 = __OFSUB__(v103, v102);
              uint64_t v95 = v103 - v102;
              char v96 = v84;
              goto LABEL_89;
            }
            uint64_t v75 = *(void *)(v21 + 32);
            uint64_t v74 = *(void *)(v21 + 40);
            BOOL v84 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            char v77 = v84;
          }
          if (v77) {
            goto LABEL_126;
          }
          unint64_t v85 = v23 - 2;
          v91 = (uint64_t *)(v70 + 16 * (v23 - 2));
          uint64_t v93 = *v91;
          uint64_t v92 = v91[1];
          BOOL v94 = __OFSUB__(v92, v93);
          uint64_t v95 = v92 - v93;
          char v96 = v94;
          if (v94) {
            goto LABEL_128;
          }
          v97 = (uint64_t *)(v70 + 16 * v73);
          uint64_t v99 = *v97;
          uint64_t v98 = v97[1];
          BOOL v84 = __OFSUB__(v98, v99);
          uint64_t v100 = v98 - v99;
          if (v84) {
            goto LABEL_130;
          }
          if (__OFADD__(v95, v100)) {
            goto LABEL_132;
          }
          if (v95 + v100 >= v76)
          {
            BOOL v101 = v76 < v100;
LABEL_95:
            if (v101) {
              unint64_t v73 = v85;
            }
            goto LABEL_97;
          }
LABEL_89:
          if (v96) {
            goto LABEL_129;
          }
          v104 = (uint64_t *)(v70 + 16 * v73);
          uint64_t v106 = *v104;
          uint64_t v105 = v104[1];
          BOOL v84 = __OFSUB__(v105, v106);
          uint64_t v107 = v105 - v106;
          if (v84) {
            goto LABEL_131;
          }
          if (v107 < v95) {
            goto LABEL_14;
          }
LABEL_97:
          unint64_t v112 = v73 - 1;
          if (v73 - 1 >= v23)
          {
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            goto LABEL_144;
          }
          uint64_t v113 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v114 = v21;
          v115 = (uint64_t *)(v70 + 16 * v112);
          uint64_t v116 = *v115;
          v117 = (void *)(v70 + 16 * v73);
          uint64_t v118 = v117[1];
          uint64_t result = sub_1DE82BDA0(v113 + *(void *)(v137 + 72) * *v115, v113 + *(void *)(v137 + 72) * *v117, v113 + *(void *)(v137 + 72) * v118, v136);
          if (v2) {
            goto LABEL_117;
          }
          if (v118 < v116) {
            goto LABEL_120;
          }
          if (v73 > *(void *)(v114 + 16)) {
            goto LABEL_121;
          }
          uint64_t *v115 = v116;
          *(void *)(v70 + 16 * v112 + 8) = v118;
          unint64_t v119 = *(void *)(v114 + 16);
          if (v73 >= v119) {
            goto LABEL_122;
          }
          uint64_t v21 = v114;
          unint64_t v23 = v119 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v70 + 16 * v73), v117 + 2, 16 * (v119 - 1 - v73));
          *(void *)(v114 + 16) = v119 - 1;
          a1 = v143;
          if (v119 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v23 = 1;
      a1 = v143;
LABEL_14:
      uint64_t v16 = a1[1];
      uint64_t v22 = v142;
      uint64_t v4 = v137;
      if (v142 >= v16) {
        goto LABEL_106;
      }
    }
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  unint64_t v136 = MEMORY[0x1E4FBC860]
       + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v130 = MEMORY[0x1E4FBC860];
  if (v16 == 1) {
    goto LABEL_12;
  }
  unint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
  if (v23 >= 2)
  {
    uint64_t v120 = *a1;
    do
    {
      unint64_t v121 = v23 - 2;
      if (v23 < 2) {
        goto LABEL_135;
      }
      if (!v120) {
        goto LABEL_148;
      }
      uint64_t v122 = v21;
      uint64_t v123 = v21 + 32;
      uint64_t v124 = *(void *)(v21 + 32 + 16 * v121);
      uint64_t v125 = *(void *)(v21 + 32 + 16 * (v23 - 1) + 8);
      uint64_t result = sub_1DE82BDA0(v120 + *(void *)(v4 + 72) * v124, v120 + *(void *)(v4 + 72) * *(void *)(v123 + 16 * (v23 - 1)), v120 + *(void *)(v4 + 72) * v125, v136);
      if (v2) {
        break;
      }
      if (v125 < v124) {
        goto LABEL_136;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DE8CA510(v122);
        uint64_t v122 = result;
      }
      if (v121 >= *(void *)(v122 + 16)) {
        goto LABEL_137;
      }
      v126 = (void *)(v122 + 32 + 16 * v121);
      void *v126 = v124;
      v126[1] = v125;
      unint64_t v127 = *(void *)(v122 + 16);
      if (v23 > v127) {
        goto LABEL_138;
      }
      uint64_t v21 = v122;
      uint64_t result = (uint64_t)memmove((void *)(v122 + 32 + 16 * (v23 - 1)), (const void *)(v122 + 32 + 16 * v23), 16 * (v127 - v23));
      *(void *)(v122 + 16) = v127 - 1;
      unint64_t v23 = v127 - 1;
    }
    while (v127 > 2);
  }
LABEL_117:
  swift_bridgeObjectRelease();
  *(void *)(v130 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE82BAEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v30 = a1;
  uint64_t v33 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v8 = MEMORY[0x1F4188790](v33, v7);
  uint64_t v34 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t result = MEMORY[0x1F4188790](v11, v14);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v32 = a3;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    uint64_t v36 = v19 * (v32 - 1);
    uint64_t v31 = v19;
    uint64_t v35 = v19 * v32;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v21 = v30;
    while (1)
    {
      uint64_t v22 = a4;
      uint64_t v23 = *a4;
      sub_1DE82F26C(v35 + v20 + v23, (uint64_t)v18, type metadata accessor for ReadonlyAggregate);
      sub_1DE82F26C(v36 + v20 + v23, (uint64_t)v13, type metadata accessor for ReadonlyAggregate);
      uint64_t v24 = sub_1DE8E1330();
      sub_1DE82F2D4((uint64_t)v13, type metadata accessor for ReadonlyAggregate);
      uint64_t result = sub_1DE82F2D4((uint64_t)v18, type metadata accessor for ReadonlyAggregate);
      BOOL v25 = v24 == 1;
      a4 = v22;
      if (!v25)
      {
LABEL_4:
        v36 += v31;
        v35 += v31;
        if (++v32 == v29) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *v22;
      if (!*v22) {
        break;
      }
      uint64_t v27 = v26 + v36 + v20;
      sub_1DE82F594(v26 + v35 + v20, v34, type metadata accessor for ReadonlyAggregate);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1DE82F594(v34, v27, type metadata accessor for ReadonlyAggregate);
      v20 -= v31;
      ++v21;
      a4 = v22;
      if (v32 == v21) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DE82BDA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v43 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v9 = MEMORY[0x1F4188790](v43, v8);
  uint64_t v42 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v9, v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v16 = *(void *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    return result;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_59;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_60;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v16;
  unint64_t v46 = a1;
  unint64_t v45 = a4;
  if (v18 >= v17 / v16)
  {
    uint64_t v20 = v17 / v16 * v16;
    if (a4 < a2 || a2 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v27 = a4 + v20;
    unint64_t v44 = a4 + v20;
    unint64_t v46 = a2;
    unint64_t v41 = a1;
    if (v20 >= 1 && a1 < a2)
    {
      unint64_t v40 = a4;
      do
      {
        unint64_t v29 = a3 - v16;
        sub_1DE82F26C(v27 - v16, (uint64_t)v14, type metadata accessor for ReadonlyAggregate);
        unint64_t v30 = a2 - v16;
        unint64_t v31 = a3;
        uint64_t v32 = (uint64_t)v14;
        uint64_t v33 = v42;
        sub_1DE82F26C(a2 - v16, v42, type metadata accessor for ReadonlyAggregate);
        uint64_t v34 = sub_1DE8E1330();
        uint64_t v35 = v33;
        uint64_t v14 = (char *)v32;
        sub_1DE82F2D4(v35, type metadata accessor for ReadonlyAggregate);
        sub_1DE82F2D4(v32, type metadata accessor for ReadonlyAggregate);
        if (v34 == 1)
        {
          if (v31 < a2 || v29 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v37 = v40;
          }
          else
          {
            BOOL v36 = v31 == a2;
            unint64_t v37 = v40;
            if (!v36) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v46 -= v16;
        }
        else
        {
          unint64_t v38 = v44;
          v44 -= v16;
          if (v31 < v38 || v29 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v31 != v38)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v30 = a2;
          unint64_t v37 = v40;
        }
        unint64_t v27 = v44;
        if (v44 <= v37) {
          break;
        }
        a2 = v30;
        a3 = v29;
      }
      while (v30 > v41);
    }
  }
  else
  {
    uint64_t v19 = v18 * v16;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v41 = a4 + v19;
    unint64_t v44 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DE82F26C(a2, (uint64_t)v14, type metadata accessor for ReadonlyAggregate);
        uint64_t v22 = v42;
        sub_1DE82F26C(a4, v42, type metadata accessor for ReadonlyAggregate);
        uint64_t v23 = sub_1DE8E1330();
        sub_1DE82F2D4(v22, type metadata accessor for ReadonlyAggregate);
        sub_1DE82F2D4((uint64_t)v14, type metadata accessor for ReadonlyAggregate);
        unint64_t v24 = v46;
        if (v23 == 1)
        {
          unint64_t v25 = a2 + v16;
          if (v46 < a2 || v46 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v26 = v45 + v16;
          if (v46 < v45 || v46 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 != v45)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v45 = v26;
          unint64_t v25 = a2;
        }
        unint64_t v46 = v24 + v16;
        a4 = v45;
        if (v45 >= v41) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
  }
  sub_1DE82C248(&v46, &v45, (uint64_t *)&v44);
  return 1;
}

uint64_t sub_1DE82C248(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_17;
  }
  if (v3 < v4 || v3 >= v4 + (uint64_t)(v5 - v4) / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_1DE82C32C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8 - 8, v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11, v14);
  int64_t v17 = (char *)&v31 - v16;
  uint64_t v36 = a4;
  uint64_t v19 = a4 + 64;
  uint64_t v18 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v20 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v30 = ~v33;
    *a1 = v36;
    a1[1] = v19;
    a1[2] = v30;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v32 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v34 = v19;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_1DE82F26C(*(void *)(v36 + 56) + v29 * v25, (uint64_t)v13, type metadata accessor for ReadonlyAggregate);
    sub_1DE82F594((uint64_t)v13, (uint64_t)v17, type metadata accessor for ReadonlyAggregate);
    uint64_t result = sub_1DE82F594((uint64_t)v17, a2, type metadata accessor for ReadonlyAggregate);
    if (v23 == a3) {
      goto LABEL_33;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      a3 = v23;
LABEL_33:
      a1 = v32;
      uint64_t v19 = v34;
      goto LABEL_34;
    }
    uint64_t v19 = v34;
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
LABEL_39:
    a3 = v23;
    a1 = v32;
    goto LABEL_34;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v35) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v35)
  {
LABEL_36:
    unint64_t v21 = 0;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_39;
    }
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DE82C650(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1DE82C850(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 24 * v12;
    uint64_t v14 = *(void *)(v13 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(void *)(a2 + 16) = v14;
    a2 += 24;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v15;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    int64_t v15 = v8;
LABEL_19:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v12 = v18 + (v15 << 6);
    int64_t v8 = v15;
    goto LABEL_8;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v15 = v17;
    goto LABEL_19;
  }
  int64_t v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v15 + 2;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v8);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1DE82C9F8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DE82CBF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v28 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 56) + 56 * v16;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    uint64_t v26 = *(void *)(v20 + 40);
    char v27 = *(unsigned char *)(v20 + 48);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v22;
    *(void *)(v11 + 16) = v23;
    *(void *)(v11 + 24) = v24;
    *(void *)(v11 + 32) = v25;
    *(void *)(v11 + 40) = v26;
    *(unsigned char *)(v11 + 48) = v27;
    if (v13 == v10)
    {
      sub_1DE813E10(v21, v22, v23, v24, v25, v26, v27);
      goto LABEL_38;
    }
    v11 += 56;
    uint64_t result = sub_1DE813E10(v21, v22, v23, v24, v25, v26, v27);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1DE82CE18(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v25 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = *(void *)(a4 + 56) + 40 * v15;
    uint64_t v20 = *(void *)(v19 + 8);
    char v21 = *(unsigned char *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v23 = *(void *)(v19 + 32);
    *(void *)uint64_t v10 = *(void *)v19;
    *(void *)(v10 + 8) = v20;
    *(unsigned char *)(v10 + 16) = v21;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 40;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v24;
      uint64_t result = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1DE82D048(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v4 = a4 + 56;
  uint64_t v5 = v6;
  uint64_t v39 = v4;
  uint64_t v7 = -1 << *(unsigned char *)(v4 - 24);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  if (!a2)
  {
    int64_t v11 = 0;
    a3 = 0;
LABEL_38:
    *uint64_t result = a4;
    result[1] = v39;
    result[2] = ~v7;
    result[3] = v11;
    result[4] = v9;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v36 = -1 << *(unsigned char *)(v4 - 24);
  unint64_t v37 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v38 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v41 = v11;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = *(void *)(a4 + 48) + 112 * v14;
    uint64_t v20 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v24 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v25 = *(void *)(v18 + 48);
    uint64_t v26 = *(void *)(v18 + 56);
    char v27 = *(unsigned char *)(v18 + 64);
    char v28 = *(unsigned char *)(v18 + 65);
    char v29 = *(unsigned char *)(v18 + 66);
    char v30 = *(unsigned char *)(v18 + 67);
    uint64_t v31 = *(void *)(v18 + 72);
    unint64_t v32 = *(void *)(v18 + 80);
    char v33 = *(unsigned char *)(v18 + 88);
    uint64_t v34 = *(void *)(v18 + 96);
    LOBYTE(v18) = *(unsigned char *)(v18 + 104);
    *(void *)uint64_t v10 = v20;
    *(void *)(v10 + 8) = v19;
    *(void *)(v10 + 16) = v21;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v24;
    *(void *)(v10 + 40) = v23;
    *(void *)(v10 + 48) = v25;
    *(void *)(v10 + 56) = v26;
    *(unsigned char *)(v10 + 64) = v27;
    *(unsigned char *)(v10 + 65) = v28;
    *(unsigned char *)(v10 + 66) = v29;
    *(unsigned char *)(v10 + 67) = v30;
    *(void *)(v10 + 72) = v31;
    *(void *)(v10 + 80) = v32;
    *(unsigned char *)(v10 + 88) = v33;
    *(void *)(v10 + 96) = v34;
    *(unsigned char *)(v10 + 104) = v18;
    uint64_t v35 = a3;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v31, v32);
      uint64_t v7 = v36;
      uint64_t result = v37;
      a3 = v35;
      int64_t v11 = v41;
      goto LABEL_38;
    }
    v10 += 112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1DE82F404(v31, v32);
    a3 = v35;
    int64_t v11 = v41;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v38) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v39 + 8 * v15);
    if (!v16) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v41 = v15;
  }
  v11 += 2;
  if (v15 + 1 >= v38)
  {
    unint64_t v9 = 0;
    int64_t v11 = v15;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v11);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v38) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v17);
  if (v16) {
    goto LABEL_17;
  }
  int64_t v11 = v15 + 3;
  if (v15 + 3 >= v38)
  {
    unint64_t v9 = 0;
    int64_t v11 = v15 + 2;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v11);
  if (v16)
  {
LABEL_14:
    int64_t v15 = v11;
    goto LABEL_18;
  }
  int64_t v17 = v15 + 4;
  if (v15 + 4 >= v38)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    a3 = v12;
    uint64_t v7 = v36;
    uint64_t result = v37;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v17);
  if (v16)
  {
LABEL_17:
    int64_t v15 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v38)
    {
      unint64_t v9 = 0;
      int64_t v11 = v38 - 1;
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v39 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DE82D360(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *int64_t v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1DE82D568(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1DE82D6FC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 56) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1DE82D890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a1;
  uint64_t v10 = a2 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a2 + 56);
  int64_t v23 = (unint64_t)(v11 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v22 = v21[1];
    v24[0] = *v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    sub_1DE8216C8((uint64_t)&v25, v24, a3, a4, a5);
    if (v5)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v23) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v15);
    if (!v19) {
      break;
    }
LABEL_17:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v15 + 1;
  if (v15 + 1 >= v23) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 2;
  if (v15 + 2 >= v23) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v23) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 4;
  if (v15 + 4 >= v23)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v23) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE82DA80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1DE8E1640();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DE8AC840(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void *sub_1DE82DB18(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v79 = a4;
  uint64_t v7 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v78 = v7;
  uint64_t v9 = MEMORY[0x1F4188790](v7, v8);
  uint64_t v76 = (uint64_t *)&v67[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
  uint64_t v75 = &v67[-v13];
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v74 = &v67[-v15];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B970);
  MEMORY[0x1F4188790](v16 - 8, v17);
  unint64_t v19 = &v67[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = type metadata accessor for Aggregate(0);
  uint64_t v22 = MEMORY[0x1F4188790](v20, v21);
  uint64_t v70 = &v67[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22, v24);
  unint64_t v68 = &v67[-v26];
  uint64_t v27 = a1 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & *(void *)(a1 + 56);
  v86 = (uint64_t *)(a2 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates);
  int64_t v83 = (unint64_t)(v28 + 63) >> 6;
  unint64_t v85 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v69 = v25;
  BOOL v84 = (unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48);
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v32 = 0;
  uint64_t v71 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v72 = a1 + 56;
  unint64_t v73 = v19;
  uint64_t v82 = v20;
  while (v30)
  {
    uint64_t v87 = (v30 - 1) & v30;
    int64_t v88 = v32;
    unint64_t v50 = __clz(__rbit64(v30)) | (v32 << 6);
LABEL_27:
    uint64_t v55 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v50);
    uint64_t v57 = *v55;
    uint64_t v56 = v55[1];
    uint64_t v58 = v86;
    swift_beginAccess();
    uint64_t v59 = *v58;
    uint64_t v60 = *(void *)(v59 + 16);
    swift_bridgeObjectRetain();
    if (v60)
    {
      unint64_t v61 = sub_1DE821D84(v57, v56);
      if (v62)
      {
        char v33 = v75;
        sub_1DE82F26C(*(void *)(v59 + 56) + *(void *)(v77 + 72) * v61, (uint64_t)v75, type metadata accessor for ReadonlyAggregate);
        uint64_t v34 = v74;
        sub_1DE82F594((uint64_t)v33, (uint64_t)v74, type metadata accessor for ReadonlyAggregate);
        swift_endAccess();
        uint64_t v35 = v76;
        sub_1DE82F26C((uint64_t)v34, (uint64_t)v76, type metadata accessor for ReadonlyAggregate);
        uint64_t v36 = *v35;
        uint64_t v37 = v35[1];
        uint64_t v38 = v35[2];
        uint64_t v39 = v35[3];
        uint64_t v80 = v35[4];
        uint64_t v81 = v36;
        uint64_t v40 = a1;
        int64_t v41 = (char *)v19 + *(int *)(v82 + 32);
        uint64_t v42 = a3;
        uint64_t v43 = (char *)v35 + *(int *)(v78 + 32);
        uint64_t v44 = sub_1DE8E1350();
        unint64_t v45 = v41;
        a1 = v40;
        unint64_t v46 = v43;
        a3 = v42;
        unint64_t v19 = v73;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v45, v46, v44);
        void *v19 = v81;
        v19[1] = v37;
        v19[2] = v38;
        v19[3] = v39;
        v19[4] = v80;
        swift_bridgeObjectRetain();
        uint64_t v47 = (uint64_t)v35;
        uint64_t v20 = v82;
        sub_1DE82F2D4(v47, type metadata accessor for ReadonlyAggregate);
        uint64_t v48 = (uint64_t)v34;
        uint64_t v27 = v72;
        sub_1DE82F2D4(v48, type metadata accessor for ReadonlyAggregate);
LABEL_5:
        uint64_t v49 = 0;
        goto LABEL_6;
      }
    }
    swift_endAccess();
    if (a3)
    {
      swift_retain();
      a3(v57, v56);
      sub_1DE82EA30((uint64_t)a3);
      goto LABEL_5;
    }
    uint64_t v49 = 1;
LABEL_6:
    (*v85)(v19, v49, 1, v20);
    swift_bridgeObjectRelease();
    if ((*v84)(v19, 1, v20) == 1)
    {
      uint64_t result = (void *)sub_1DE82F538((uint64_t)v19, &qword_1EAC0B970);
    }
    else
    {
      uint64_t v63 = v68;
      sub_1DE82F594((uint64_t)v19, (uint64_t)v68, type metadata accessor for Aggregate);
      sub_1DE82F594((uint64_t)v63, (uint64_t)v70, type metadata accessor for Aggregate);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v71 = (void *)sub_1DE83A434(0, v71[2] + 1, 1, v71);
      }
      unint64_t v65 = v71[2];
      unint64_t v64 = v71[3];
      if (v65 >= v64 >> 1) {
        uint64_t v71 = (void *)sub_1DE83A434(v64 > 1, v65 + 1, 1, v71);
      }
      uint64_t v66 = v71;
      v71[2] = v65 + 1;
      uint64_t result = (void *)sub_1DE82F594((uint64_t)v70, (uint64_t)v66+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v65, type metadata accessor for Aggregate);
    }
    int64_t v32 = v88;
    unint64_t v30 = v87;
  }
  int64_t v51 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v51 >= v83) {
    goto LABEL_37;
  }
  unint64_t v52 = *(void *)(v27 + 8 * v51);
  int64_t v53 = v32 + 1;
  if (v52) {
    goto LABEL_26;
  }
  int64_t v53 = v32 + 2;
  if (v32 + 2 >= v83) {
    goto LABEL_37;
  }
  unint64_t v52 = *(void *)(v27 + 8 * v53);
  if (v52) {
    goto LABEL_26;
  }
  int64_t v53 = v32 + 3;
  if (v32 + 3 >= v83) {
    goto LABEL_37;
  }
  unint64_t v52 = *(void *)(v27 + 8 * v53);
  if (v52) {
    goto LABEL_26;
  }
  int64_t v53 = v32 + 4;
  if (v32 + 4 >= v83) {
    goto LABEL_37;
  }
  unint64_t v52 = *(void *)(v27 + 8 * v53);
  if (v52)
  {
LABEL_26:
    uint64_t v87 = (v52 - 1) & v52;
    int64_t v88 = v53;
    unint64_t v50 = __clz(__rbit64(v52)) + (v53 << 6);
    goto LABEL_27;
  }
  uint64_t v54 = v32 + 5;
  if (v32 + 5 >= v83)
  {
LABEL_37:
    swift_release();
    return v71;
  }
  unint64_t v52 = *(void *)(v27 + 8 * v54);
  if (v52)
  {
    int64_t v53 = v32 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v53 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      break;
    }
    if (v53 >= v83) {
      goto LABEL_37;
    }
    unint64_t v52 = *(void *)(v27 + 8 * v53);
    ++v54;
    if (v52) {
      goto LABEL_26;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DE82E1E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1DE82F334();
  uint64_t result = sub_1DE8E1640();
  uint64_t v15 = result;
  if (v2)
  {
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = v4[4];
      long long v6 = v4[5];
      long long v7 = v4[2];
      v16[3] = v4[3];
      v16[4] = v5;
      v17[0] = v6;
      *(_OWORD *)((char *)v17 + 9) = *(long long *)((char *)v4 + 89);
      long long v8 = *v4;
      long long v9 = v4[1];
      v4 += 7;
      v16[0] = v8;
      v16[1] = v9;
      v16[2] = v7;
      sub_1DE82F388((uint64_t)v16);
      sub_1DE8AC9F0((uint64_t)v12, (uint64_t)v16);
      uint64_t v10 = v13;
      unint64_t v11 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v10, v11);
      --v2;
    }
    while (v2);
    return v15;
  }
  return result;
}

uint64_t sub_1DE82E2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a2;
  uint64_t v3 = type metadata accessor for ReadonlyAggregate(0);
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8, v4);
  long long v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v5, v8);
  unint64_t v11 = (uint64_t *)((char *)&v48 - v10);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v53 = (uint64_t)&v48 - v13;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v51 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v52 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v55 = a1;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  unint64_t v19 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      int64_t v56 = v18;
      unint64_t v21 = v20 | (v18 << 6);
    }
    else
    {
      int64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_38;
      }
      if (v22 >= v52)
      {
LABEL_35:
        swift_release();
        uint64_t v44 = v50;
        *(void *)(v50 + OBJC_IVAR____TtC10XavierNews16AggregateContext_aggregates) = v19;
        uint64_t v45 = v44 + OBJC_IVAR____TtC10XavierNews16AggregateContext_updatedAt;
        uint64_t v46 = sub_1DE8E1350();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v45, v49, v46);
        return v44;
      }
      unint64_t v23 = *(void *)(v51 + 8 * v22);
      int64_t v24 = v18 + 1;
      if (!v23)
      {
        int64_t v24 = v18 + 2;
        if (v18 + 2 >= v52) {
          goto LABEL_35;
        }
        unint64_t v23 = *(void *)(v51 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v18 + 3;
          if (v18 + 3 >= v52) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v51 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v18 + 4;
            if (v18 + 4 >= v52) {
              goto LABEL_35;
            }
            unint64_t v23 = *(void *)(v51 + 8 * v24);
            if (!v23)
            {
              int64_t v24 = v18 + 5;
              if (v18 + 5 >= v52) {
                goto LABEL_35;
              }
              unint64_t v23 = *(void *)(v51 + 8 * v24);
              if (!v23)
              {
                uint64_t v25 = v18 + 6;
                if (v18 + 6 >= v52) {
                  goto LABEL_35;
                }
                unint64_t v23 = *(void *)(v51 + 8 * v25);
                if (!v23)
                {
                  while (1)
                  {
                    int64_t v24 = v25 + 1;
                    if (__OFADD__(v25, 1)) {
                      goto LABEL_39;
                    }
                    if (v24 >= v52) {
                      goto LABEL_35;
                    }
                    unint64_t v23 = *(void *)(v51 + 8 * v24);
                    ++v25;
                    if (v23) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v24 = v18 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v17 = (v23 - 1) & v23;
      int64_t v56 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    uint64_t v26 = *(void *)(v54 + 72);
    uint64_t v27 = v53;
    sub_1DE82F26C(*(void *)(v55 + 48) + v26 * v21, v53, type metadata accessor for ReadonlyAggregate);
    sub_1DE82F594(v27, (uint64_t)v11, type metadata accessor for ReadonlyAggregate);
    uint64_t v29 = *v11;
    uint64_t v28 = v11[1];
    uint64_t v30 = (uint64_t)v7;
    sub_1DE82F26C((uint64_t)v11, (uint64_t)v7, type metadata accessor for ReadonlyAggregate);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = v19;
    unint64_t v33 = sub_1DE821D84(v29, v28);
    uint64_t v34 = v19[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (v19[3] >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1DE822320();
      }
    }
    else
    {
      sub_1DE824C00(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1DE821D84(v29, v28);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_40;
      }
      unint64_t v33 = v38;
    }
    long long v7 = (char *)v30;
    unint64_t v19 = v57;
    if (v37)
    {
      sub_1DE82E780(v30, v57[7] + v33 * v26);
    }
    else
    {
      v57[(v33 >> 6) + 8] |= 1 << v33;
      uint64_t v40 = (uint64_t *)(v19[6] + 16 * v33);
      *uint64_t v40 = v29;
      v40[1] = v28;
      sub_1DE82F594(v30, v19[7] + v33 * v26, type metadata accessor for ReadonlyAggregate);
      uint64_t v41 = v19[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_37;
      }
      v19[2] = v43;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F2D4((uint64_t)v11, type metadata accessor for ReadonlyAggregate);
    int64_t v18 = v56;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t sub_1DE82E780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadonlyAggregate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DE82E7E4()
{
  unint64_t result = qword_1EAC0B900;
  if (!qword_1EAC0B900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B900);
  }
  return result;
}

unint64_t sub_1DE82E838()
{
  unint64_t result = qword_1EAC0B910;
  if (!qword_1EAC0B910)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0B908);
    sub_1DE82E9D8(&qword_1EAC0B918, (void (*)(uint64_t))type metadata accessor for ReadonlyAggregate);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B910);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1DE82E92C()
{
  unint64_t result = qword_1EAC0B928;
  if (!qword_1EAC0B928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0B908);
    sub_1DE82E9D8(&qword_1EAC0B930, (void (*)(uint64_t))type metadata accessor for ReadonlyAggregate);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B928);
  }
  return result;
}

uint64_t sub_1DE82E9D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE82EA20(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1DE82EA30(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

_UNKNOWN **sub_1DE82EA40()
{
  return &off_1F3A3FD70;
}

_UNKNOWN **sub_1DE82EA4C()
{
  return &protocol witness table for ReadonlyAggregate;
}

uint64_t sub_1DE82EA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

void *sub_1DE82EA64(void *result)
{
  if (*result >= 0xFFFFFFFFuLL) {
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_1DE82EA84(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *sub_1DE82EAD0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1DE82EB60(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t sub_1DE82EBCC(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DE82EC1C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1DE82EC70(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1DE82EC8C(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *uint64_t result = v2;
  return result;
}

uint64_t type metadata accessor for AggregateContextOption()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of AggregateContextType.lookupAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AggregateContextType.lookup(with:option:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AggregateContextType.update(with:option:updateBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t sub_1DE82ED00()
{
  return type metadata accessor for AggregateContext();
}

uint64_t type metadata accessor for AggregateContext()
{
  uint64_t result = qword_1EAC0B938;
  if (!qword_1EAC0B938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DE82ED54()
{
  uint64_t result = sub_1DE8E1350();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AggregateContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AggregateContext);
}

uint64_t dispatch thunk of AggregateContext.__allocating_init(aggregates:updatedAt:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AggregateContext.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for AggregateContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AggregateContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE82EFA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE82EFC8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE82EFD4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AggregateContext.CodingKeys()
{
  return &type metadata for AggregateContext.CodingKeys;
}

unint64_t sub_1DE82EFF4()
{
  unint64_t result = qword_1EAC0B948;
  if (!qword_1EAC0B948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B948);
  }
  return result;
}

unint64_t sub_1DE82F04C()
{
  unint64_t result = qword_1EAC0B950;
  if (!qword_1EAC0B950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B950);
  }
  return result;
}

unint64_t sub_1DE82F0A4()
{
  unint64_t result = qword_1EAC0B958;
  if (!qword_1EAC0B958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B958);
  }
  return result;
}

uint64_t sub_1DE82F0F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4164657461647075 && a2 == 0xE900000000000074;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461676572676761 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE82F204()
{
  return swift_release();
}

uint64_t sub_1DE82F210(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DE82F26C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DE82F2D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DE82F334()
{
  unint64_t result = qword_1EBEA9220;
  if (!qword_1EBEA9220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9220);
  }
  return result;
}

uint64_t sub_1DE82F388(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  unint64_t v3 = *(void *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE82F404(v2, v3);
  return a1;
}

uint64_t sub_1DE82F404(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DE82F418(a1, a2);
  }
  return a1;
}

uint64_t sub_1DE82F418(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1DE82F470(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DE82F484(a1, a2);
  }
  return a1;
}

uint64_t sub_1DE82F484(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1DE82F4DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DE82F538(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DE82F594(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1DE82F600()
{
  return *(double *)v0;
}

double sub_1DE82F608()
{
  return *(double *)(v0 + 8);
}

double sub_1DE82F610()
{
  return *(double *)(v0 + 16);
}

double sub_1DE82F618()
{
  return *(double *)(v0 + 24);
}

double sub_1DE82F620()
{
  return *(double *)(v0 + 32);
}

double sub_1DE82F628()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1DE82F630()
{
  return 0;
}

unint64_t sub_1DE82F7D8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x626D654D72657375;
      break;
    case 2:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x706F546369706F74;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE82F8C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE82F8D4()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE82F91C()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE82F948()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE82F98C()
{
  return sub_1DE82F7D8(*v0);
}

uint64_t sub_1DE82F994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8302B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE82F9BC()
{
  return 0;
}

void sub_1DE82F9C8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DE82F9D4(uint64_t a1)
{
  unint64_t v2 = sub_1DE82FC6C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE82FA10(uint64_t a1)
{
  unint64_t v2 = sub_1DE82FC6C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE82FA4C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B988);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  BOOL v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE82FC6C();
  sub_1DE8E1C10();
  v9[15] = 0;
  sub_1DE8E1A20();
  if (!v1)
  {
    v9[14] = 1;
    sub_1DE8E1A20();
    v9[13] = 2;
    sub_1DE8E1A20();
    v9[12] = 3;
    sub_1DE8E1A20();
    v9[11] = 4;
    sub_1DE8E1A20();
    v9[10] = 5;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1DE82FC6C()
{
  unint64_t result = qword_1EAC0B990;
  if (!qword_1EAC0B990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B990);
  }
  return result;
}

uint64_t sub_1DE82FCC0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B998);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE82FC6C();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v29 = 0;
    sub_1DE8E1910();
    uint64_t v11 = v10;
    char v28 = 1;
    sub_1DE8E1910();
    uint64_t v13 = v12;
    char v27 = 2;
    sub_1DE8E1910();
    uint64_t v15 = v14;
    char v26 = 3;
    sub_1DE8E1910();
    uint64_t v17 = v16;
    char v25 = 4;
    sub_1DE8E1910();
    uint64_t v20 = v19;
    char v24 = 5;
    sub_1DE8E1910();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v15;
    a2[3] = v17;
    a2[4] = v20;
    a2[5] = v22;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE82FF1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE82FCC0(a1, a2);
}

uint64_t sub_1DE82FF34(void *a1)
{
  return sub_1DE82FA4C(a1);
}

uint64_t _s15TagScoreProfileVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15TagScoreProfileVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s15TagScoreProfileVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *_s15TagScoreProfileVMa()
{
  return &_s15TagScoreProfileVN;
}

uint64_t _s15TagScoreProfileV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15TagScoreProfileV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE83015CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE830184(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE830190(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *_s15TagScoreProfileV10CodingKeysOMa()
{
  return &_s15TagScoreProfileV10CodingKeysON;
}

unint64_t sub_1DE8301AC()
{
  unint64_t result = qword_1EAC0B9A0;
  if (!qword_1EAC0B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9A0);
  }
  return result;
}

unint64_t sub_1DE830204()
{
  unint64_t result = qword_1EAC0B9A8;
  if (!qword_1EAC0B9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9A8);
  }
  return result;
}

unint64_t sub_1DE83025C()
{
  unint64_t result = qword_1EAC0B9B0;
  if (!qword_1EAC0B9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9B0);
  }
  return result;
}

uint64_t sub_1DE8302B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F12C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x626D654D72657375 && a2 == 0xEE00706968737265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xED000065726F6353 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F12E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F1300 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x706F546369706F74 && a2 == 0xEF65726F63536369)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

BOOL static PremiumSubscriptionState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PremiumSubscriptionState.hash(into:)()
{
  return sub_1DE8E1BB0();
}

uint64_t PremiumSubscriptionState.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE830610(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE830624()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE83066C()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE830698()
{
  return sub_1DE8E1BD0();
}

uint64_t UserContext.subscribed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.autofavorited.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.muted.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.ignored.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.groupable.getter()
{
  return swift_bridgeObjectRetain();
}

void UserContext.subscriptionState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t UserContext.bundled.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.purchased.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.read.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.listened.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.seen.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 UserContext.location.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 120);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 128);
  __n128 result = *(__n128 *)(v1 + 104);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t UserContext.newlySubscribed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserContext.__allocating_init(subscribed:autofavorited:muted:ignored:groupable:subscriptionState:bundled:purchased:read:listened:seen:location:newlySubscribed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, long long *a11, uint64_t a12)
{
  swift_allocObject();
  uint64_t v20 = sub_1DE8309D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t UserContext.init(subscribed:autofavorited:muted:ignored:groupable:subscriptionState:bundled:purchased:read:listened:seen:location:newlySubscribed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, long long *a11, uint64_t a12)
{
  uint64_t v12 = sub_1DE8309D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t UserContext.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UserContext.__deallocating_deinit()
{
  UserContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1DE83091C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE830928()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE830934()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE830940()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE83094C()
{
  return swift_bridgeObjectRetain();
}

void sub_1DE830958(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)v1 + 56);
}

uint64_t sub_1DE830968()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE830974()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE830980()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE83098C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE830998()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_1DE8309A4@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 120);
  unsigned __int8 v3 = *(unsigned char *)(*(void *)v1 + 128);
  __n128 result = *(__n128 *)(*(void *)v1 + 104);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1DE8309C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8309D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, long long *a11, uint64_t a12)
{
  char v17 = *a6;
  long long v25 = *a11;
  uint64_t v18 = *((void *)a11 + 2);
  char v19 = *((unsigned char *)a11 + 24);
  uint64_t v20 = sub_1DE82DA80(a1);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = v20;
  uint64_t v21 = sub_1DE82DA80(a2);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 24) = v21;
  uint64_t v22 = sub_1DE82DA80(a3);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = v22;
  uint64_t v23 = sub_1DE82DA80(a4);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 40) = v23;
  *(void *)(v12 + 48) = sub_1DE82DA80(a5);
  *(unsigned char *)(v12 + 56) = v17;
  *(void *)(v12 + 64) = a7;
  *(void *)(v12 + 72) = a8;
  *(_OWORD *)(v12 + 80) = a9;
  *(void *)(v12 + 96) = a10;
  *(_OWORD *)(v12 + 104) = v25;
  *(void *)(v12 + 120) = v18;
  *(unsigned char *)(v12 + 128) = v19;
  *(void *)(v12 + 136) = a12;
  return v12;
}

unint64_t sub_1DE830B04()
{
  unint64_t result = qword_1EAC0B9B8;
  if (!qword_1EAC0B9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PremiumSubscriptionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PremiumSubscriptionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE830CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE830CDC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE830CE8(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PremiumSubscriptionState()
{
  return &type metadata for PremiumSubscriptionState;
}

uint64_t dispatch thunk of UserContextType.subscribed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UserContextType.autofavorited.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UserContextType.muted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of UserContextType.ignored.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UserContextType.groupable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UserContextType.subscriptionState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of UserContextType.bundled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of UserContextType.purchased.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of UserContextType.read.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of UserContextType.listened.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of UserContextType.seen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of UserContextType.location.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of UserContextType.newlySubscribed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t type metadata accessor for UserContext()
{
  return self;
}

uint64_t method lookup function for UserContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserContext);
}

uint64_t dispatch thunk of UserContext.__allocating_init(subscribed:autofavorited:muted:ignored:groupable:subscriptionState:bundled:purchased:read:listened:seen:location:newlySubscribed:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t ClassicTagMetadata.flowRate.getter()
{
  return *(void *)v0;
}

uint64_t ClassicTagMetadata.subscriptionRate.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ClassicTagMetadata.quality.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ClassicTagMetadata.ontologyLevel.getter()
{
  return *(void *)(v0 + 48);
}

unint64_t ClassicTagMetadata.contentRating.getter()
{
  return *(unsigned int *)(v0 + 60) | ((unint64_t)*(unsigned __int8 *)(v0 + 64) << 32);
}

unint64_t ClassicTagMetadata.relevanceRating.getter()
{
  return *(unsigned int *)(v0 + 68) | ((unint64_t)*(unsigned __int8 *)(v0 + 72) << 32);
}

uint64_t ClassicTagMetadata.managed.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t ClassicTagMetadata.managedWinner.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t ClassicTagMetadata.groupable.getter()
{
  return *(unsigned __int8 *)(v0 + 75);
}

uint64_t ClassicTagMetadata.groupableIfFavorited.getter()
{
  return *(unsigned __int8 *)(v0 + 76);
}

uint64_t ClassicTagMetadata.groupableIfAutofavorited.getter()
{
  return *(unsigned __int8 *)(v0 + 77);
}

uint64_t ClassicTagMetadata.init(flowRate:subscriptionRate:quality:ontologyLevel:contentRating:relevanceRating:managed:managedWinner:groupable:groupableIfFavorited:groupableIfAutofavorited:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, int a10, char a11, int a12, char a13, __int16 a14, char a15, char a16, char a17, char a18, char a19)
{
  *(void *)a9 = result;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  *(_DWORD *)(a9 + 60) = a10;
  *(unsigned char *)(a9 + 64) = a11 & 1;
  *(_DWORD *)(a9 + 68) = a12;
  *(unsigned char *)(a9 + 72) = a13 & 1;
  *(unsigned char *)(a9 + 73) = a15;
  *(unsigned char *)(a9 + 74) = a16;
  *(unsigned char *)(a9 + 75) = a17;
  *(unsigned char *)(a9 + 76) = a18;
  *(unsigned char *)(a9 + 77) = a19;
  return result;
}

unint64_t sub_1DE830F7C(char a1)
{
  unint64_t result = 0x65746152776F6C66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x7974696C617571;
      break;
    case 3:
      unint64_t result = 0x79676F6C6F746E6FLL;
      break;
    case 4:
      unint64_t result = 0x52746E65746E6F63;
      break;
    case 5:
      unint64_t result = 0x636E6176656C6572;
      break;
    case 6:
      unint64_t result = 0x646567616E616DLL;
      break;
    case 7:
      unint64_t result = 0x57646567616E616DLL;
      break;
    case 8:
      unint64_t result = 0x6C626170756F7267;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE831114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE831128()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE831170()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE83119C()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE8311E0()
{
  return sub_1DE830F7C(*v0);
}

uint64_t sub_1DE8311E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE831DFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE831210()
{
  return 0;
}

void sub_1DE83121C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1DE831228(uint64_t a1)
{
  unint64_t v2 = sub_1DE8315FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE831264(uint64_t a1)
{
  unint64_t v2 = sub_1DE8315FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClassicTagMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B9C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  BOOL v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v1 + 16);
  int v25 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v24 = *(void *)(v1 + 32);
  int v23 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v22 = *(void *)(v1 + 48);
  int v21 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v20 = *(unsigned int *)(v1 + 60);
  int v19 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v18 = *(unsigned int *)(v1 + 68);
  int v8 = *(unsigned __int8 *)(v1 + 72);
  v16[4] = *(unsigned __int8 *)(v1 + 73);
  int v17 = v8;
  int v9 = *(unsigned __int8 *)(v1 + 74);
  v16[2] = *(unsigned __int8 *)(v1 + 75);
  v16[3] = v9;
  v16[1] = *(unsigned __int8 *)(v1 + 76);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1DE8315FC();
  sub_1DE8E1C10();
  char v40 = 0;
  uint64_t v14 = v27;
  sub_1DE8E19A0();
  if (!v14)
  {
    char v39 = 1;
    sub_1DE8E19A0();
    char v38 = 2;
    sub_1DE8E19A0();
    char v37 = 3;
    sub_1DE8E19C0();
    char v36 = 4;
    char v33 = v19;
    sub_1DE8E19E0();
    char v35 = 5;
    char v32 = v17;
    sub_1DE8E19E0();
    char v34 = 6;
    sub_1DE8E1A10();
    char v31 = 7;
    sub_1DE8E1A10();
    char v30 = 8;
    sub_1DE8E1A10();
    char v29 = 9;
    sub_1DE8E1A10();
    char v28 = 10;
    sub_1DE8E1A10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v13);
}

unint64_t sub_1DE8315FC()
{
  unint64_t result = qword_1EAC0B9C8;
  if (!qword_1EAC0B9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9C8);
  }
  return result;
}

uint64_t ClassicTagMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B9D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  int v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8315FC();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v46 = 0;
    uint64_t v10 = sub_1DE8E1890();
    char v12 = v11;
    char v45 = 1;
    uint64_t v13 = sub_1DE8E1890();
    int v34 = v14;
    uint64_t v35 = v13;
    char v44 = 2;
    uint64_t v15 = sub_1DE8E1890();
    int v32 = v16;
    uint64_t v33 = v15;
    char v43 = 3;
    uint64_t v17 = sub_1DE8E18B0();
    int v30 = v18;
    uint64_t v31 = v17;
    char v42 = 4;
    uint64_t v29 = sub_1DE8E18D0();
    char v41 = 5;
    uint64_t v28 = sub_1DE8E18D0();
    char v40 = 6;
    int v27 = sub_1DE8E1900();
    char v39 = 7;
    int v26 = sub_1DE8E1900();
    char v38 = 8;
    int v25 = sub_1DE8E1900();
    char v37 = 9;
    int v24 = sub_1DE8E1900();
    char v36 = 10;
    char v20 = sub_1DE8E1900();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v12 & 1;
    *(void *)(a2 + 16) = v35;
    *(unsigned char *)(a2 + 24) = v34 & 1;
    *(void *)(a2 + 32) = v33;
    *(unsigned char *)(a2 + 40) = v32 & 1;
    *(void *)(a2 + 48) = v31;
    *(unsigned char *)(a2 + 56) = v30 & 1;
    char v21 = BYTE4(v29);
    *(_DWORD *)(a2 + 60) = v29;
    *(unsigned char *)(a2 + 64) = v21 & 1;
    char v22 = BYTE4(v28);
    *(_DWORD *)(a2 + 68) = v28;
    *(unsigned char *)(a2 + 72) = v22 & 1;
    *(unsigned char *)(a2 + 73) = v27 & 1;
    *(unsigned char *)(a2 + 74) = v26 & 1;
    *(unsigned char *)(a2 + 75) = v25 & 1;
    *(unsigned char *)(a2 + 76) = v24 & 1;
    *(unsigned char *)(a2 + 77) = v20 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE831A04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClassicTagMetadata.init(from:)(a1, a2);
}

uint64_t sub_1DE831A1C(void *a1)
{
  return ClassicTagMetadata.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for ClassicTagMetadata(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy78_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 62) = *(_OWORD *)(a2 + 62);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ClassicTagMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 78)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 73);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassicTagMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 76) = 0;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 78) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 78) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 73) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassicTagMetadata()
{
  return &type metadata for ClassicTagMetadata;
}

uint64_t getEnumTagSinglePayload for ClassicTagMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClassicTagMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE831CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE831CD0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE831CDC(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClassicTagMetadata.CodingKeys()
{
  return &type metadata for ClassicTagMetadata.CodingKeys;
}

unint64_t sub_1DE831CF8()
{
  unint64_t result = qword_1EAC0B9D8;
  if (!qword_1EAC0B9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9D8);
  }
  return result;
}

unint64_t sub_1DE831D50()
{
  unint64_t result = qword_1EAC0B9E0;
  if (!qword_1EAC0B9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9E0);
  }
  return result;
}

unint64_t sub_1DE831DA8()
{
  unint64_t result = qword_1EAC0B9E8;
  if (!qword_1EAC0B9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9E8);
  }
  return result;
}

uint64_t sub_1DE831DFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746152776F6C66 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F13C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7974696C617571 && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xED00006C6576654CLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x636E6176656C6572 && a2 == 0xEF676E6974615265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x646567616E616DLL && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x57646567616E616DLL && a2 == 0xED000072656E6E69 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C626170756F7267 && a2 == 0xE900000000000065 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F13E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F1400)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1DE8322F8()
{
  sub_1DE832C10(v0, (uint64_t)&v2);
  if (v3 == 2) {
    return v2;
  }
  sub_1DE832C48((uint64_t)&v2);
  return 0;
}

uint64_t sub_1DE832344()
{
  sub_1DE832C10(v0, (uint64_t)&v2);
  if (v3 == 3) {
    return v2;
  }
  sub_1DE832C48((uint64_t)&v2);
  return 0;
}

uint64_t sub_1DE832390()
{
  sub_1DE832C10(v0, (uint64_t)&v2);
  if (v3 == 4) {
    return v2;
  }
  sub_1DE832C48((uint64_t)&v2);
  return 0;
}

uint64_t sub_1DE8323DC()
{
  sub_1DE832C10(v0, (uint64_t)&v2);
  if (v3 == 5) {
    return v2;
  }
  sub_1DE832C48((uint64_t)&v2);
  return 0;
}

uint64_t sub_1DE832428()
{
  sub_1DE832C10(v0, (uint64_t)&v2);
  if (v3 == 7) {
    return v2;
  }
  sub_1DE832C48((uint64_t)&v2);
  return 0;
}

double sub_1DE832474@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 9)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE8324D4@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 10)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE832534@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 11)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE832594@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 16)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE8325F4@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 17)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE832654@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 12)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE8326B4@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 14)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_1DE832714()
{
  sub_1DE832C10(v0, (uint64_t)&v2);
  if (v3 == 8) {
    return v2;
  }
  sub_1DE832C48((uint64_t)&v2);
  return 0;
}

double sub_1DE832760@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 19)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE8327C0@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 20)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

double sub_1DE832820@<D0>(_OWORD *a1@<X8>)
{
  sub_1DE832C10(v1, (uint64_t)v4);
  if (v5 == 21)
  {
    sub_1DE833D4C(v4, a1);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_1DE832880()
{
  sub_1DE832C10(v0, (uint64_t)v2);
  switch(v2[56])
  {
    case 1:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x456E6F6973736573;
      break;
    case 2:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 1702131053;
      break;
    case 3:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x6574756D6E75;
      break;
    case 4:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x776F6C6C6F66;
      break;
    case 5:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x776F6C6C6F666E75;
      break;
    case 6:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x65726F6E6769;
      break;
    case 7:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x7765695664656566;
      break;
    case 8:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x61547374726F7073;
      break;
    case 9:
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v2);
      uint64_t result = 0x53656C6369747261;
      break;
    case 0xA:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x56656C6369747261;
      break;
    case 0xB:
      __swift_destroy_boxed_opaque_existential_2((uint64_t)v2);
      uint64_t result = 0x52656C6369747261;
      break;
    case 0xC:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 1701538156;
      break;
    case 0xD:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x656B696C6E75;
      break;
    case 0xE:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x656B696C736964;
      break;
    case 0xF:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x6B696C7369646E75;
      break;
    case 0x10:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x6572616873;
      break;
    case 0x11:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x6465766173;
      break;
    case 0x12:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x64657661736E75;
      break;
    case 0x13:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x7369566B63617274;
      break;
    case 0x14:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x73694C6B63617274;
      break;
    case 0x15:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x6E69466B63617274;
      break;
    default:
      sub_1DE832C48((uint64_t)v2);
      uint64_t result = 0x536E6F6973736573;
      break;
  }
  return result;
}

uint64_t sub_1DE832C10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DE832C48(uint64_t a1)
{
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t _s6ActionOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s6ActionOwxx(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 0x16) {
    unsigned int v1 = *(_DWORD *)a1 + 22;
  }
  switch(v1)
  {
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
      uint64_t result = __swift_destroy_boxed_opaque_existential_2(a1);
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t _s6ActionOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 0x16) {
    unsigned int v4 = *(_DWORD *)a2 + 22;
  }
  switch(v4)
  {
    case 1u:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      char v7 = 1;
      goto LABEL_13;
    case 2u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      char v7 = 2;
      goto LABEL_13;
    case 3u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      char v7 = 3;
      goto LABEL_13;
    case 4u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      char v7 = 4;
      goto LABEL_13;
    case 5u:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      char v7 = 5;
      goto LABEL_13;
    case 6u:
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      char v7 = 6;
      goto LABEL_13;
    case 7u:
      uint64_t v13 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v7 = 7;
      goto LABEL_13;
    case 8u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v7 = 8;
LABEL_13:
      *(unsigned char *)(a1 + 56) = v7;
      swift_bridgeObjectRetain();
      return a1;
    case 9u:
      uint64_t v15 = *(void *)(a2 + 40);
      long long v16 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v16;
      *(void *)(a1 + 40) = v15;
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1, a2);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      char v17 = 9;
      goto LABEL_27;
    case 0xAu:
      uint64_t v18 = *(void *)(a2 + 40);
      long long v19 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v19;
      *(void *)(a1 + 40) = v18;
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
      char v17 = 10;
      goto LABEL_27;
    case 0xBu:
      uint64_t v20 = *(void *)(a2 + 40);
      long long v21 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v21;
      *(void *)(a1 + 40) = v20;
      (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1, a2);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      char v17 = 11;
      goto LABEL_27;
    case 0xCu:
      uint64_t v22 = *(void *)(a2 + 40);
      long long v23 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v23;
      *(void *)(a1 + 40) = v22;
      (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1, a2);
      char v17 = 12;
      goto LABEL_27;
    case 0xDu:
      uint64_t v24 = *(void *)(a2 + 40);
      long long v25 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v25;
      *(void *)(a1 + 40) = v24;
      (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1, a2);
      char v17 = 13;
      goto LABEL_27;
    case 0xEu:
      uint64_t v26 = *(void *)(a2 + 40);
      long long v27 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v27;
      *(void *)(a1 + 40) = v26;
      (**(void (***)(uint64_t, uint64_t))(v27 - 8))(a1, a2);
      char v17 = 14;
      goto LABEL_27;
    case 0xFu:
      uint64_t v28 = *(void *)(a2 + 40);
      long long v29 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v29;
      *(void *)(a1 + 40) = v28;
      (**(void (***)(uint64_t, uint64_t))(v29 - 8))(a1, a2);
      char v17 = 15;
      goto LABEL_27;
    case 0x10u:
      uint64_t v30 = *(void *)(a2 + 40);
      long long v31 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v31;
      *(void *)(a1 + 40) = v30;
      (**(void (***)(uint64_t, uint64_t))(v31 - 8))(a1, a2);
      char v17 = 16;
      goto LABEL_27;
    case 0x11u:
      uint64_t v32 = *(void *)(a2 + 40);
      long long v33 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v33;
      *(void *)(a1 + 40) = v32;
      (**(void (***)(uint64_t, uint64_t))(v33 - 8))(a1, a2);
      char v17 = 17;
      goto LABEL_27;
    case 0x12u:
      uint64_t v34 = *(void *)(a2 + 40);
      long long v35 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v35;
      *(void *)(a1 + 40) = v34;
      (**(void (***)(uint64_t, uint64_t))(v35 - 8))(a1, a2);
      char v17 = 18;
      goto LABEL_27;
    case 0x13u:
      uint64_t v36 = *(void *)(a2 + 40);
      long long v37 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v37;
      *(void *)(a1 + 40) = v36;
      (**(void (***)(uint64_t, uint64_t))(v37 - 8))(a1, a2);
      char v17 = 19;
      goto LABEL_27;
    case 0x14u:
      uint64_t v38 = *(void *)(a2 + 40);
      long long v39 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v39;
      *(void *)(a1 + 40) = v38;
      (**(void (***)(uint64_t, uint64_t))(v39 - 8))(a1, a2);
      char v17 = 20;
      goto LABEL_27;
    case 0x15u:
      uint64_t v40 = *(void *)(a2 + 40);
      long long v41 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v41;
      *(void *)(a1 + 40) = v40;
      (**(void (***)(uint64_t, uint64_t))(v41 - 8))(a1, a2);
      char v17 = 21;
LABEL_27:
      *(unsigned char *)(a1 + 56) = v17;
      break;
    default:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(unsigned char *)(a1 + 56) = 0;
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t _s6ActionOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 0x16) {
      unsigned int v4 = *(_DWORD *)a1 + 22;
    }
    switch(v4)
    {
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        __swift_destroy_boxed_opaque_existential_2(a1);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 0x16) {
      unsigned int v5 = *(_DWORD *)a2 + 22;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 1;
        goto LABEL_19;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 2;
        goto LABEL_19;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 3;
        goto LABEL_19;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 4;
        goto LABEL_19;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 5;
        goto LABEL_19;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        char v6 = 6;
        goto LABEL_19;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v6 = 7;
        goto LABEL_19;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v6 = 8;
LABEL_19:
        *(unsigned char *)(a1 + 56) = v6;
        swift_bridgeObjectRetain();
        return a1;
      case 9u:
        uint64_t v7 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v8 = 9;
        goto LABEL_33;
      case 0xAu:
        uint64_t v9 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v9;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
        char v8 = 10;
        goto LABEL_33;
      case 0xBu:
        uint64_t v10 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v10;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v8 = 11;
        goto LABEL_33;
      case 0xCu:
        uint64_t v11 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
        char v8 = 12;
        goto LABEL_33;
      case 0xDu:
        uint64_t v12 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v12;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
        char v8 = 13;
        goto LABEL_33;
      case 0xEu:
        uint64_t v13 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v13;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1, a2);
        char v8 = 14;
        goto LABEL_33;
      case 0xFu:
        uint64_t v14 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v14;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1, a2);
        char v8 = 15;
        goto LABEL_33;
      case 0x10u:
        uint64_t v15 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v15;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1, a2);
        char v8 = 16;
        goto LABEL_33;
      case 0x11u:
        uint64_t v16 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v16;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1, a2);
        char v8 = 17;
        goto LABEL_33;
      case 0x12u:
        uint64_t v17 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v17;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1, a2);
        char v8 = 18;
        goto LABEL_33;
      case 0x13u:
        uint64_t v18 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v18;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1, a2);
        char v8 = 19;
        goto LABEL_33;
      case 0x14u:
        uint64_t v19 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v19;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
        char v8 = 20;
        goto LABEL_33;
      case 0x15u:
        uint64_t v20 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v20;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1, a2);
        char v8 = 21;
LABEL_33:
        *(unsigned char *)(a1 + 56) = v8;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 56) = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s6ActionOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 0x16) {
      unsigned int v4 = *(_DWORD *)a1 + 22;
    }
    switch(v4)
    {
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        __swift_destroy_boxed_opaque_existential_2(a1);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 0x16) {
      unsigned int v5 = *(_DWORD *)a2 + 22;
    }
    switch(v5)
    {
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 1;
        break;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 3;
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 4;
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 5;
        break;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 6;
        break;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v6 = 7;
        break;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        char v6 = 8;
        break;
      case 9u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v6 = 9;
        break;
      case 0xAu:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 10;
        break;
      case 0xBu:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v6 = 11;
        break;
      case 0xCu:
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 12;
        break;
      case 0xDu:
        long long v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v11;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 13;
        break;
      case 0xEu:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 14;
        break;
      case 0xFu:
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 15;
        break;
      case 0x10u:
        long long v14 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v14;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 16;
        break;
      case 0x11u:
        long long v15 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v15;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 17;
        break;
      case 0x12u:
        long long v16 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 18;
        break;
      case 0x13u:
        long long v17 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v17;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 19;
        break;
      case 0x14u:
        long long v18 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v18;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 20;
        break;
      case 0x15u:
        long long v19 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v19;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v6 = 21;
        break;
      default:
        char v6 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        break;
    }
    *(unsigned char *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t _s6ActionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEB && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 235);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 0x16) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s6ActionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEA)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 235;
    if (a3 >= 0xEB) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xEB) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE833CF0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 0x16) {
    return (*(_DWORD *)a1 + 22);
  }
  return result;
}

uint64_t sub_1DE833D10(uint64_t result, unsigned int a2)
{
  if (a2 > 0x15)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 22;
    LOBYTE(a2) = 22;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *_s6ActionOMa()
{
  return &_s6ActionON;
}

_OWORD *sub_1DE833D4C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

XavierNews::ClassicHeadlineCohortData __swiftcall ClassicHeadlineCohortData.init(rawClicks:clicks:impressions:)(Swift::Double rawClicks, Swift::Double clicks, Swift::Double impressions)
{
  *long long v3 = rawClicks;
  v3[1] = clicks;
  v3[2] = impressions;
  result.impressions = impressions;
  result.clicks = clicks;
  result.rawClicks = rawClicks;
  return result;
}

uint64_t ClassicArticleData.adCategories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClassicArticleData.articleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicArticleData.articleLength.getter()
{
  return *(void *)(v0 + 24);
}

double ClassicArticleData.halfLife.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t ClassicArticleData.halfLifeOverride.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t ClassicArticleData.hasVideo.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t ClassicArticleData.isANF.getter()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t ClassicArticleData.isPaid.getter()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t ClassicArticleData.isBundlePaid.getter()
{
  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t ClassicArticleData.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClassicArticleData() + 52);
  return sub_1DE833E78(v3, a1);
}

uint64_t type metadata accessor for ClassicArticleData()
{
  uint64_t result = qword_1EBEA9BF8;
  if (!qword_1EBEA9BF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DE833E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClassicArticleData.publisherID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicArticleData.sourceFeedID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicArticleData.topicIDs.getter()
{
  type metadata accessor for ClassicArticleData();
  return swift_bridgeObjectRetain();
}

uint64_t ClassicArticleData.cohorts.getter()
{
  type metadata accessor for ClassicArticleData();
  return swift_bridgeObjectRetain();
}

uint64_t ClassicArticleData.conversionData.getter()
{
  type metadata accessor for ClassicArticleData();
  return swift_bridgeObjectRetain();
}

uint64_t ClassicArticleData.isAudio.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 76));
}

uint64_t ClassicArticleData.featured.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 80));
}

uint64_t ClassicArticleData.isFeatureCandidate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 84));
}

uint64_t ClassicArticleData.isEvergreen.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 88));
}

uint64_t ClassicArticleData.tagMetadata.getter()
{
  type metadata accessor for ClassicArticleData();
  return swift_bridgeObjectRetain();
}

uint64_t ClassicArticleData.reduceVisibility.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 96));
}

uint64_t ClassicArticleData.webConverted.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 100));
}

double ClassicArticleData.conditionalScore.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for ClassicArticleData() + 104));
}

uint64_t ClassicArticleData.init(adCategories:articleID:articleLength:halfLife:halfLifeOverride:hasVideo:isANF:isPaid:isBundlePaid:publishDate:publisherID:sourceFeedID:topicIDs:cohorts:conversionData:isAudio:featured:isFeatureCandidate:isEvergreen:tagMetadata:reduceVisibility:webConverted:conditionalScore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24,char a25,char a26,uint64_t a27,char a28,char a29)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5 & 1;
  *(double *)(a9 + 40) = a10;
  *(void *)(a9 + 48) = a6;
  *(unsigned char *)(a9 + 56) = a7 & 1;
  *(unsigned char *)(a9 + 57) = a8;
  *(unsigned char *)(a9 + 58) = a12;
  *(unsigned char *)(a9 + 59) = a13;
  *(unsigned char *)(a9 + 60) = a14;
  long long v31 = (int *)type metadata accessor for ClassicArticleData();
  uint64_t result = sub_1DE8342AC(a15, a9 + v31[13]);
  long long v33 = (void *)(a9 + v31[14]);
  *long long v33 = a16;
  v33[1] = a17;
  uint64_t v34 = (void *)(a9 + v31[15]);
  *uint64_t v34 = a18;
  v34[1] = a19;
  *(void *)(a9 + v31[16]) = a20;
  *(void *)(a9 + v31[17]) = a21;
  *(void *)(a9 + v31[18]) = a22;
  *(unsigned char *)(a9 + v31[19]) = a23;
  *(unsigned char *)(a9 + v31[20]) = a24;
  *(unsigned char *)(a9 + v31[21]) = a25;
  *(unsigned char *)(a9 + v31[22]) = a26;
  *(void *)(a9 + v31[23]) = a27;
  *(unsigned char *)(a9 + v31[24]) = a28;
  *(unsigned char *)(a9 + v31[25]) = a29;
  *(double *)(a9 + v31[26]) = a11;
  return result;
}

uint64_t sub_1DE8342AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ClassicArticleData.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t static ClassicArticleData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_1DE8E1AC0();
  }
}

unint64_t sub_1DE83439C(char a1)
{
  unint64_t result = 0x6F67657461436461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x49656C6369747261;
      break;
    case 2:
      unint64_t result = 0x4C656C6369747261;
      break;
    case 3:
      unint64_t result = 0x6566694C666C6168;
      break;
    case 4:
    case 20:
    case 22:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6F65646956736168;
      break;
    case 6:
      unint64_t result = 0x464E417369;
      break;
    case 7:
      unint64_t result = 0x646961507369;
      break;
    case 8:
      unint64_t result = 0x656C646E75427369;
      break;
    case 9:
      unint64_t result = 0x446873696C627570;
      break;
    case 10:
      unint64_t result = 0x656873696C627570;
      break;
    case 11:
      unint64_t result = 0x6546656372756F73;
      break;
    case 12:
      unint64_t result = 0x7344496369706F74;
      break;
    case 13:
      unint64_t result = 0x7374726F686F63;
      break;
    case 14:
      unint64_t result = 0x69737265766E6F63;
      break;
    case 15:
      unint64_t result = 0x6F696475417369;
      break;
    case 16:
      unint64_t result = 0x6465727574616566;
      break;
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 18:
      unint64_t result = 0x7267726576457369;
      break;
    case 19:
      unint64_t result = 0x646174654D676174;
      break;
    case 21:
      unint64_t result = 0x65766E6F43626577;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE834690(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8346A8()
{
  return sub_1DE8E1BB0();
}

unint64_t sub_1DE8346D8()
{
  return sub_1DE83439C(*v0);
}

uint64_t sub_1DE8346E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE838758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE834708()
{
  return 0;
}

void sub_1DE834714(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1DE834720(uint64_t a1)
{
  unint64_t v2 = sub_1DE834E2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83475C(uint64_t a1)
{
  unint64_t v2 = sub_1DE834E2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClassicArticleData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B9F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  long long v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE834E2C();
  sub_1DE8E1C10();
  uint64_t v13 = *v3;
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA00);
  sub_1DE835DBC(&qword_1EAC0BA08);
  sub_1DE8E19D0();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1DE8E1A00();
    LOBYTE(v13) = 2;
    sub_1DE8E19F0();
    LOBYTE(v13) = 3;
    sub_1DE8E1A20();
    LOBYTE(v13) = 4;
    sub_1DE8E19A0();
    LOBYTE(v13) = 5;
    sub_1DE8E1A10();
    LOBYTE(v13) = 6;
    sub_1DE8E1990();
    LOBYTE(v13) = 7;
    sub_1DE8E1A10();
    LOBYTE(v13) = 8;
    sub_1DE8E1A10();
    long long v11 = (int *)type metadata accessor for ClassicArticleData();
    LOBYTE(v13) = 9;
    sub_1DE8E1350();
    sub_1DE836D48(&qword_1EBEA8CA0, MEMORY[0x1E4F27928]);
    sub_1DE8E19D0();
    LOBYTE(v13) = 10;
    sub_1DE8E1A00();
    LOBYTE(v13) = 11;
    sub_1DE8E1980();
    uint64_t v13 = *(uint64_t *)((char *)v3 + v11[16]);
    char v12 = 12;
    sub_1DE8E1A40();
    uint64_t v13 = *(uint64_t *)((char *)v3 + v11[17]);
    char v12 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA10);
    sub_1DE834E80();
    sub_1DE8E1A40();
    uint64_t v13 = *(uint64_t *)((char *)v3 + v11[18]);
    char v12 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA30);
    sub_1DE834FC8(&qword_1EAC0BA28, &qword_1EAC0BA30, (void (*)(void))sub_1DE834F74);
    sub_1DE8E1A40();
    LOBYTE(v13) = 15;
    sub_1DE8E1A10();
    LOBYTE(v13) = 16;
    sub_1DE8E1A10();
    LOBYTE(v13) = 17;
    sub_1DE8E1A10();
    LOBYTE(v13) = 18;
    sub_1DE8E1A10();
    uint64_t v13 = *(uint64_t *)((char *)v3 + v11[23]);
    char v12 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA40);
    sub_1DE834FC8(&qword_1EAC0BA48, &qword_1EAC0BA40, (void (*)(void))sub_1DE835048);
    sub_1DE8E1A40();
    LOBYTE(v13) = 20;
    sub_1DE8E1A10();
    LOBYTE(v13) = 21;
    sub_1DE8E1A10();
    LOBYTE(v13) = 22;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_1DE834E2C()
{
  unint64_t result = qword_1EAC0B9F8;
  if (!qword_1EAC0B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0B9F8);
  }
  return result;
}

unint64_t sub_1DE834E80()
{
  unint64_t result = qword_1EAC0BA18;
  if (!qword_1EAC0BA18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BA10);
    sub_1DE834F20();
    sub_1DE834FC8(&qword_1EAC0BA28, &qword_1EAC0BA30, (void (*)(void))sub_1DE834F74);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA18);
  }
  return result;
}

unint64_t sub_1DE834F20()
{
  unint64_t result = qword_1EAC0BA20;
  if (!qword_1EAC0BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA20);
  }
  return result;
}

unint64_t sub_1DE834F74()
{
  unint64_t result = qword_1EAC0BA38;
  if (!qword_1EAC0BA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA38);
  }
  return result;
}

uint64_t sub_1DE834FC8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE835048()
{
  unint64_t result = qword_1EAC0BA50;
  if (!qword_1EAC0BA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA50);
  }
  return result;
}

uint64_t ClassicArticleData.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

uint64_t ClassicArticleData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA58);
  uint64_t v9 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33, v10);
  char v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v35 = (int *)type metadata accessor for ClassicArticleData();
  MEMORY[0x1F4188790](v35, v13);
  long long v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1DE834E2C();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  uint64_t v31 = a2;
  uint64_t v32 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA00);
  char v36 = 0;
  sub_1DE835DBC(&qword_1EAC0BA60);
  sub_1DE8E18C0();
  *(void *)long long v15 = v37;
  LOBYTE(v37) = 1;
  *((void *)v15 + 1) = sub_1DE8E18F0();
  *((void *)v15 + 2) = v17;
  LOBYTE(v37) = 2;
  *((void *)v15 + 3) = sub_1DE8E18E0();
  v15[32] = v18 & 1;
  LOBYTE(v37) = 3;
  sub_1DE8E1910();
  *((void *)v15 + 5) = v19;
  LOBYTE(v37) = 4;
  *((void *)v15 + 6) = sub_1DE8E1890();
  v15[56] = v20 & 1;
  LOBYTE(v37) = 5;
  v15[57] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 6;
  v15[58] = sub_1DE8E1880();
  LOBYTE(v37) = 7;
  v15[59] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 8;
  v15[60] = sub_1DE8E1900() & 1;
  sub_1DE8E1350();
  LOBYTE(v37) = 9;
  sub_1DE836D48(&qword_1EAC0B850, MEMORY[0x1E4F27928]);
  sub_1DE8E18C0();
  sub_1DE8342AC((uint64_t)v8, (uint64_t)&v15[v35[13]]);
  LOBYTE(v37) = 10;
  uint64_t v21 = sub_1DE8E18F0();
  uint64_t v22 = (uint64_t *)&v15[v35[14]];
  *uint64_t v22 = v21;
  v22[1] = v23;
  LOBYTE(v37) = 11;
  uint64_t v24 = sub_1DE8E1870();
  long long v25 = (uint64_t *)&v15[v35[15]];
  *long long v25 = v24;
  v25[1] = v26;
  char v36 = 12;
  sub_1DE8E1930();
  *(void *)&v15[v35[16]] = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA10);
  char v36 = 13;
  sub_1DE835E20();
  sub_1DE8E1930();
  *(void *)&v15[v35[17]] = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA30);
  char v36 = 14;
  sub_1DE835F14(&qword_1EAC0BA78, &qword_1EAC0BA30, (void (*)(void))sub_1DE835F94);
  sub_1DE8E1930();
  *(void *)&v15[v35[18]] = v37;
  LOBYTE(v37) = 15;
  v15[v35[19]] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 16;
  v15[v35[20]] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 17;
  v15[v35[21]] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 18;
  v15[v35[22]] = sub_1DE8E1900() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA40);
  char v36 = 19;
  sub_1DE835F14(&qword_1EAC0BA88, &qword_1EAC0BA40, (void (*)(void))sub_1DE835FE8);
  sub_1DE8E1930();
  *(void *)&v15[v35[23]] = v37;
  LOBYTE(v37) = 20;
  v15[v35[24]] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 21;
  v15[v35[25]] = sub_1DE8E1900() & 1;
  LOBYTE(v37) = 22;
  sub_1DE8E1910();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  *(void *)&v15[v35[26]] = v28;
  sub_1DE83603C((uint64_t)v15, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1DE8360A0((uint64_t)v15);
}

uint64_t sub_1DE835B78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE835B80()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DE835BB0()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1DE835BBC()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_1DE835BC4()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1DE835BCC()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t sub_1DE835BD4()
{
  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t sub_1DE835BDC(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 76));
}

uint64_t sub_1DE835BE8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 88));
}

uint64_t sub_1DE835BF4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 80));
}

uint64_t sub_1DE835C00(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_1DE835C0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 56));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DE835C44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE835C50()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE835CAC()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE835D04()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE835D5C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE835DBC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BA00);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE835E20()
{
  unint64_t result = qword_1EAC0BA68;
  if (!qword_1EAC0BA68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BA10);
    sub_1DE835EC0();
    sub_1DE835F14(&qword_1EAC0BA78, &qword_1EAC0BA30, (void (*)(void))sub_1DE835F94);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA68);
  }
  return result;
}

unint64_t sub_1DE835EC0()
{
  unint64_t result = qword_1EAC0BA70;
  if (!qword_1EAC0BA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA70);
  }
  return result;
}

uint64_t sub_1DE835F14(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE835F94()
{
  unint64_t result = qword_1EAC0BA80;
  if (!qword_1EAC0BA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA80);
  }
  return result;
}

unint64_t sub_1DE835FE8()
{
  unint64_t result = qword_1EAC0BA90;
  if (!qword_1EAC0BA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BA90);
  }
  return result;
}

uint64_t sub_1DE83603C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClassicArticleData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE8360A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClassicArticleData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE8360FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClassicArticleData.init(from:)(a1, a2);
}

uint64_t sub_1DE836114(void *a1)
{
  return ClassicArticleData.encode(to:)(a1);
}

uint64_t sub_1DE83612C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_1DE8E1AC0();
  }
}

uint64_t ClassicArticleData.debugDescription.getter()
{
  sub_1DE8E1730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  type metadata accessor for ClassicArticleData();
  swift_bridgeObjectRetain();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1E01D4090](v0, MEMORY[0x1E4FBB1A0]);
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x20656C6369747241;
}

XavierNews::ClassicHeadlineCohortType_optional __swiftcall ClassicHeadlineCohortType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DE8E1840();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ClassicHeadlineCohortType.rawValue.getter()
{
  if (*v0) {
    return 1684627824;
  }
  else {
    return 1701147238;
  }
}

uint64_t sub_1DE836330(char *a1, char *a2)
{
  return sub_1DE86501C(*a1, *a2);
}

uint64_t sub_1DE83633C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8363A4()
{
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8363F0()
{
  return sub_1DE8E1BD0();
}

XavierNews::ClassicHeadlineCohortType_optional sub_1DE836454(Swift::String *a1)
{
  return ClassicHeadlineCohortType.init(rawValue:)(*a1);
}

void sub_1DE836460(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701147238;
  if (*v1) {
    uint64_t v2 = 1684627824;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1DE836488()
{
  return sub_1DE8E1540();
}

uint64_t sub_1DE8364E8()
{
  return sub_1DE8E14F0();
}

double ClassicHeadlineCohortData.rawClicks.getter()
{
  return *(double *)v0;
}

double ClassicHeadlineCohortData.clicks.getter()
{
  return *(double *)(v0 + 8);
}

double ClassicHeadlineCohortData.impressions.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t ClassicHeadlineCohortData.hash(into:)()
{
  return sub_1DE8E1BC0();
}

BOOL static ClassicHeadlineCohortData.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1DE8365DC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE836628()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE83666C()
{
  uint64_t v1 = 0x736B63696C63;
  if (*v0 != 1) {
    uint64_t v1 = 0x6973736572706D69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B63696C43776172;
  }
}

uint64_t sub_1DE8366D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE839144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8366F8()
{
  return 0;
}

void sub_1DE836704(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE836710(uint64_t a1)
{
  unint64_t v2 = sub_1DE836920();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83674C(uint64_t a1)
{
  unint64_t v2 = sub_1DE836920();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClassicHeadlineCohortData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE836920();
  sub_1DE8E1C10();
  char v12 = 0;
  sub_1DE8E1A20();
  if (!v1)
  {
    char v11 = 1;
    sub_1DE8E1A20();
    char v10 = 2;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1DE836920()
{
  unint64_t result = qword_1EAC0BAA0;
  if (!qword_1EAC0BAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAA0);
  }
  return result;
}

uint64_t ClassicHeadlineCohortData.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

uint64_t ClassicHeadlineCohortData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BAA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE836920();
  sub_1DE8E1BF0();
  if (!v2)
  {
    v17[15] = 0;
    sub_1DE8E1910();
    uint64_t v11 = v10;
    v17[14] = 1;
    sub_1DE8E1910();
    uint64_t v14 = v13;
    v17[13] = 2;
    sub_1DE8E1910();
    uint64_t v16 = v15;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11;
    a2[1] = v14;
    a2[2] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE836BA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClassicHeadlineCohortData.init(from:)(a1, a2);
}

uint64_t sub_1DE836BBC(void *a1)
{
  return ClassicHeadlineCohortData.encode(to:)(a1);
}

uint64_t sub_1DE836BD4()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE836C2C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE836C7C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1DE836D48(&qword_1EBEA9CB0, (void (*)(uint64_t))type metadata accessor for ClassicArticleData);
  uint64_t result = sub_1DE836D48(&qword_1EBEA9CA0, (void (*)(uint64_t))type metadata accessor for ClassicArticleData);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DE836D00()
{
  return sub_1DE836D48(&qword_1EBEA9CA8, (void (*)(uint64_t))type metadata accessor for ClassicArticleData);
}

uint64_t sub_1DE836D48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE836D94()
{
  unint64_t result = qword_1EBEA9E28;
  if (!qword_1EBEA9E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9E28);
  }
  return result;
}

unint64_t sub_1DE836DEC()
{
  unint64_t result = qword_1EAC0BAB0;
  if (!qword_1EAC0BAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAB0);
  }
  return result;
}

BOOL sub_1DE836E40(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t dispatch thunk of ClassicArticleDataType.adCategories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ClassicArticleDataType.articleID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ClassicArticleDataType.articleLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ClassicArticleDataType.hasVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ClassicArticleDataType.isANF.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ClassicArticleDataType.isPaid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ClassicArticleDataType.isBundlePaid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ClassicArticleDataType.isAudio.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ClassicArticleDataType.isEvergreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ClassicArticleDataType.featured.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ClassicArticleDataType.isFeatureCandidate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ClassicArticleDataType.publisherID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ClassicArticleDataType.topicIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t initializeBufferWithCopyOfBuffer for ClassicArticleData(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(_DWORD *)(a1 + 57) = *(_DWORD *)((char *)a2 + 57);
    uint64_t v10 = a3[13];
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1DE8E1350();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[14];
    uint64_t v17 = a3[15];
    char v18 = (void *)(v7 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *char v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)(v7 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[17];
    *(void *)(v7 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(void *)(v7 + v24) = *(uint64_t *)((char *)a2 + v24);
    uint64_t v25 = a3[19];
    *(void *)(v7 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(unsigned char *)(v7 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v26 = a3[21];
    *(unsigned char *)(v7 + a3[20]) = *((unsigned char *)a2 + a3[20]);
    *(unsigned char *)(v7 + v26) = *((unsigned char *)a2 + v26);
    uint64_t v27 = a3[23];
    *(unsigned char *)(v7 + a3[22]) = *((unsigned char *)a2 + a3[22]);
    *(void *)(v7 + v27) = *(uint64_t *)((char *)a2 + v27);
    uint64_t v28 = a3[25];
    *(unsigned char *)(v7 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    *(unsigned char *)(v7 + v28) = *((unsigned char *)a2 + v28);
    *(void *)(v7 + a3[26]) = *(uint64_t *)((char *)a2 + a3[26]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ClassicArticleData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_1DE8E1350();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClassicArticleData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_DWORD *)(a1 + 57) = *(_DWORD *)(a2 + 57);
  uint64_t v9 = a3[13];
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = sub_1DE8E1350();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = a3[14];
  uint64_t v16 = a3[15];
  uint64_t v17 = (void *)(a1 + v15);
  char v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  uint64_t v24 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  uint64_t v27 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClassicArticleData(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1DE8E1350();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[14];
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *char v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[15];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  return a1;
}

uint64_t initializeWithTake for ClassicArticleData(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_DWORD *)(a1 + 57) = *(_DWORD *)(a2 + 57);
  uint64_t v7 = a3[13];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DE8E1350();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  return a1;
}

uint64_t assignWithTake for ClassicArticleData(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  uint64_t v8 = a3[13];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(void *)(a1 + 40) = v7;
  uint64_t v11 = sub_1DE8E1350();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[15];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassicArticleData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE837D2C);
}

uint64_t sub_1DE837D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ClassicArticleData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE837DF4);
}

uint64_t sub_1DE837DF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DE837EA0()
{
  sub_1DE837FA8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DE837FA8()
{
  if (!qword_1EBEA9C98)
  {
    sub_1DE8E1350();
    unint64_t v0 = sub_1DE8E16E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEA9C98);
    }
  }
}

uint64_t getEnumTagSinglePayload for ClassicHeadlineCohortType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClassicHeadlineCohortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE83815CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE838184(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE838190(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClassicHeadlineCohortType()
{
  return &type metadata for ClassicHeadlineCohortType;
}

uint64_t getEnumTagSinglePayload for ClassicHeadlineCohortData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClassicHeadlineCohortData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ClassicHeadlineCohortData()
{
  return &type metadata for ClassicHeadlineCohortData;
}

uint64_t getEnumTagSinglePayload for ClassicHeadlineCohortData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClassicHeadlineCohortData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE838364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassicHeadlineCohortData.CodingKeys()
{
  return &type metadata for ClassicHeadlineCohortData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassicArticleData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClassicArticleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8384FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE838524(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE838530(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClassicArticleData.CodingKeys()
{
  return &type metadata for ClassicArticleData.CodingKeys;
}

unint64_t sub_1DE83854C()
{
  unint64_t result = qword_1EAC0BAB8;
  if (!qword_1EAC0BAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAB8);
  }
  return result;
}

unint64_t sub_1DE8385A4()
{
  unint64_t result = qword_1EAC0BAC0;
  if (!qword_1EAC0BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAC0);
  }
  return result;
}

unint64_t sub_1DE8385FC()
{
  unint64_t result = qword_1EAC0BAC8;
  if (!qword_1EAC0BAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAC8);
  }
  return result;
}

unint64_t sub_1DE838654()
{
  unint64_t result = qword_1EAC0BAD0;
  if (!qword_1EAC0BAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAD0);
  }
  return result;
}

unint64_t sub_1DE8386AC()
{
  unint64_t result = qword_1EAC0BAD8;
  if (!qword_1EAC0BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAD8);
  }
  return result;
}

unint64_t sub_1DE838704()
{
  unint64_t result = qword_1EAC0BAE0;
  if (!qword_1EAC0BAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAE0);
  }
  return result;
}

uint64_t sub_1DE838758(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F67657461436461 && a2 == 0xEC00000073656972;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000044 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C656C6369747261 && a2 == 0xED00006874676E65 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F1420 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F65646956736168 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x464E417369 && a2 == 0xE500000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEC00000064696150 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xEB00000000444972 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6546656372756F73 && a2 == 0xEC00000044496465 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7344496369706F74 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7374726F686F63 && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x69737265766E6F63 && a2 == 0xEE00617461446E6FLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6F696475417369 && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6465727574616566 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F0E10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x7267726576457369 && a2 == 0xEB000000006E6565 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x646174654D676174 && a2 == 0xEB00000000617461 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F1440 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x65766E6F43626577 && a2 == 0xEC00000064657472 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F1460)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 22;
    }
    else {
      return 23;
    }
  }
}

uint64_t sub_1DE839144(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B63696C43776172 && a2 == 0xE900000000000073;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1DE8392B8()
{
  unint64_t result = qword_1EAC0BAE8;
  if (!qword_1EAC0BAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAE8);
  }
  return result;
}

uint64_t sub_1DE83931C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v1, 0);
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1DE84BBE0((char *)(v7 > 1), v8 + 1, 1);
      }
      v4 += 6;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

BOOL sub_1DE8393F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE83940C()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE839438()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE839480(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE839498()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8394E0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE83950C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE839560(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1DE839584(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1DE8395A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char **a5@<X8>)
{
  if (qword_1EBEA97F8 != -1) {
LABEL_70:
  }
    swift_once();
  unint64_t v7 = (void *)qword_1EBEA97F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DE8E31B0;
  uint64_t v9 = *(void *)(a1 + 16);
  id v10 = v7;
  uint64_t v11 = sub_1DE8E1A80();
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v15 = sub_1DE819640();
  *(void *)(v8 + 64) = v15;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v13;
  uint64_t v16 = MEMORY[0x1E01D4090](a4, &_s17TagClusteringRuleON);
  *(void *)(v8 + 96) = v14;
  *(void *)(v8 + 104) = v15;
  unint64_t v82 = v15;
  *(void *)(v8 + 72) = v16;
  *(void *)(v8 + 80) = v17;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  uint64_t v83 = v9;
  if (v9)
  {
    uint64_t v18 = a4;
    uint64_t v84 = a1 + 32;
    uint64_t v19 = a4 + 32;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v21 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
    char v23 = a3;
    uint64_t v86 = a4 + 32;
    uint64_t v79 = a4;
    while (1)
    {
      uint64_t v28 = (uint64_t *)(v84 + 48 * v20);
      uint64_t v88 = *v28;
      uint64_t v89 = v28[1];
      uint64_t v29 = v28[2];
      a1 = v28[3];
      uint64_t v30 = v28[4];
      int v90 = *((unsigned __int8 *)v28 + 40);
      uint64_t v87 = v20;
      if ((v23 & 1) == 0 && *((void *)v22 + 2) >= a2)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1DE839F24(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v49 = *((void *)v21 + 2);
        unint64_t v48 = *((void *)v21 + 3);
        if (v49 >= v48 >> 1) {
          uint64_t v21 = sub_1DE839F24((char *)(v48 > 1), v49 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v49 + 1;
        uint64_t v50 = &v21[48 * v49];
        *((void *)v50 + 4) = v88;
        *((void *)v50 + 5) = v89;
        *((void *)v50 + 6) = v29;
        *((void *)v50 + 7) = a1;
        *((void *)v50 + 8) = v30;
        v50[72] = v90;
        v50[73] = 1;
        goto LABEL_5;
      }
      a4 = *(void *)(v18 + 16);
      unint64_t v85 = v21;
      if (!a4)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
LABEL_41:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_1DE839F24(0, *((void *)v22 + 2) + 1, 1, v22);
        }
        unint64_t v47 = *((void *)v22 + 2);
        unint64_t v46 = *((void *)v22 + 3);
        if (v47 >= v46 >> 1) {
          uint64_t v22 = sub_1DE839F24((char *)(v46 > 1), v47 + 1, 1, v22);
        }
        *((void *)v22 + 2) = v47 + 1;
        uint64_t v24 = &v22[48 * v47];
        *((void *)v24 + 4) = v88;
        *((void *)v24 + 5) = v89;
        *((void *)v24 + 6) = v29;
        *((void *)v24 + 7) = a1;
        *((void *)v24 + 8) = v30;
        *((_WORD *)v24 + 36) = v90;
        uint64_t v25 = (void *)qword_1EBEA97F0;
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1DE8E25E0;
        id v27 = v25;
        swift_bridgeObjectRelease();
        *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v26 + 64) = v82;
        *(void *)(v26 + 32) = v88;
        *(void *)(v26 + 40) = v89;
        sub_1DE8E16C0();
        sub_1DE8E13A0();

        swift_bridgeObjectRelease();
        uint64_t v21 = v85;
        goto LABEL_5;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v31 = 0;
      while (1)
      {
        uint64_t v32 = v19 + 16 * v31;
        uint64_t v33 = *(void *)v32;
        if ((*(unsigned char *)(v32 + 8) & 1) == 0)
        {
          if (v90 == 1)
          {
            uint64_t v40 = *((void *)v22 + 2);
            if (v40)
            {
              uint64_t v41 = 0;
              char v42 = (unsigned __int8 *)(v22 + 72);
              do
              {
                int v43 = *v42;
                v42 += 48;
                uint64_t v44 = v43 == 1;
                BOOL v39 = __OFADD__(v41, v44);
                v41 += v44;
                if (v39)
                {
LABEL_69:
                  __break(1u);
                  goto LABEL_70;
                }
                --v40;
              }
              while (v40);
              if (v41 < v33) {
                goto LABEL_11;
              }
LABEL_38:
              char v45 = 0;
              goto LABEL_51;
            }
            if (v33 <= 0) {
              goto LABEL_38;
            }
          }
          goto LABEL_11;
        }
        if (v30)
        {
          uint64_t v34 = *((void *)v22 + 2);
          if (v34)
          {
            uint64_t v35 = 0;
            char v36 = v22 + 64;
            do
            {
              if (*v36)
              {
                if (*(v36 - 1) == a1 && *v36 == v30)
                {
                  BOOL v39 = __OFADD__(v35++, 1);
                  if (v39)
                  {
LABEL_68:
                    __break(1u);
                    goto LABEL_69;
                  }
                }
                else
                {
                  char v38 = sub_1DE8E1AC0();
                  BOOL v39 = __OFADD__(v35, v38 & 1);
                  v35 += v38 & 1;
                  if (v39) {
                    goto LABEL_68;
                  }
                }
              }
              v36 += 6;
              --v34;
            }
            while (v34);
            uint64_t v19 = v86;
            if (v35 >= v33) {
              break;
            }
            goto LABEL_11;
          }
          if (v33 <= 0) {
            break;
          }
        }
LABEL_11:
        if (++v31 == a4)
        {
          uint64_t v18 = v79;
          swift_bridgeObjectRelease();
          char v23 = a3;
          goto LABEL_41;
        }
      }
      char v45 = 1;
LABEL_51:
      sub_1DE839ED0();
      uint64_t v51 = (void *)swift_allocError();
      *int64_t v52 = v45;
      swift_willThrow();
      uint64_t v18 = v79;
      swift_bridgeObjectRelease();
      MEMORY[0x1E01D4AD0](v51);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA7F48);
      uint64_t v21 = v85;
      if (swift_dynamicCast())
      {

        uint64_t v53 = (void *)qword_1EBEA97F0;
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_1DE8E25E0;
        id v55 = v53;
        swift_bridgeObjectRelease();
        *(void *)(v54 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v54 + 64) = v82;
        *(void *)(v54 + 32) = v88;
        *(void *)(v54 + 40) = v89;
        sub_1DE8E16C0();
        if (v91)
        {
          sub_1DE8E13A0();
          char v56 = 3;
        }
        else
        {
          char v56 = 2;
          sub_1DE8E13A0();
        }

        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1DE839F24(0, *((void *)v85 + 2) + 1, 1, v85);
        }
        uint64_t v19 = v86;
        unint64_t v64 = *((void *)v21 + 2);
        unint64_t v63 = *((void *)v21 + 3);
        if (v64 >= v63 >> 1) {
          uint64_t v21 = sub_1DE839F24((char *)(v63 > 1), v64 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v64 + 1;
        unint64_t v65 = &v21[48 * v64];
        *((void *)v65 + 4) = v88;
        *((void *)v65 + 5) = v89;
        *((void *)v65 + 6) = v29;
        *((void *)v65 + 7) = a1;
        *((void *)v65 + 8) = v30;
        v65[72] = v90;
        v65[73] = v56;

        char v23 = a3;
      }
      else
      {

        uint64_t v57 = (void *)qword_1EBEA97F0;
        uint64_t v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = xmmword_1DE8E25E0;
        id v59 = v57;
        swift_bridgeObjectRelease();
        *(void *)(v58 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v58 + 64) = v82;
        *(void *)(v58 + 32) = v88;
        *(void *)(v58 + 40) = v89;
        sub_1DE8E16C0();
        sub_1DE8E13A0();

        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1DE839F24(0, *((void *)v85 + 2) + 1, 1, v85);
        }
        char v23 = a3;
        unint64_t v61 = *((void *)v21 + 2);
        unint64_t v60 = *((void *)v21 + 3);
        uint64_t v19 = v86;
        if (v61 >= v60 >> 1) {
          uint64_t v21 = sub_1DE839F24((char *)(v60 > 1), v61 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v61 + 1;
        char v62 = &v21[48 * v61];
        *((void *)v62 + 4) = v88;
        *((void *)v62 + 5) = v89;
        *((void *)v62 + 6) = v29;
        *((void *)v62 + 7) = a1;
        *((void *)v62 + 8) = v30;
        v62[72] = v90;
        v62[73] = 4;
      }
LABEL_5:
      uint64_t v20 = v87 + 1;
      if (v87 + 1 == v83)
      {
        swift_bridgeObjectRelease();
        uint64_t v67 = a5;
        uint64_t v66 = v21;
        goto LABEL_67;
      }
    }
  }
  uint64_t v66 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v67 = a5;
LABEL_67:
  unint64_t v68 = (void *)qword_1EBEA97F0;
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_1DE8E25E0;
  id v70 = v68;
  uint64_t v71 = swift_bridgeObjectRetain();
  uint64_t v72 = sub_1DE83931C(v71);
  swift_bridgeObjectRelease();
  uint64_t v73 = MEMORY[0x1E4FBB1A0];
  uint64_t v74 = MEMORY[0x1E01D4090](v72, MEMORY[0x1E4FBB1A0]);
  uint64_t v76 = v75;
  swift_bridgeObjectRelease();
  *(void *)(v69 + 56) = v73;
  *(void *)(v69 + 64) = v82;
  *(void *)(v69 + 32) = v74;
  *(void *)(v69 + 40) = v76;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v67 = v22;
  v67[1] = v66;
  return result;
}

unint64_t sub_1DE839ED0()
{
  unint64_t result = qword_1EAC0BAF0;
  if (!qword_1EAC0BAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAF0);
  }
  return result;
}

char *sub_1DE839F24(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9930);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1DE83A040()
{
  unint64_t result = qword_1EAC0BAF8;
  if (!qword_1EAC0BAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BAF8);
  }
  return result;
}

uint64_t _s18TagClusteringErrorOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s18TagClusteringErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE83A1F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE83A218(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE83A224(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *_s18TagClusteringErrorOMa()
{
  return &_s18TagClusteringErrorON;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t _s17TagClusteringRuleOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s17TagClusteringRuleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE83A2E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1DE83A2EC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *_s17TagClusteringRuleOMa()
{
  return &_s17TagClusteringRuleON;
}

ValueMetadata *_s18SportsTagClustererVMa()
{
  return &_s18SportsTagClustererVN;
}

char *sub_1DE83A318(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DD8);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[112 * v8]) {
      memmove(v12, v13, 112 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1DE83A434(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BB08);
  uint64_t v10 = *(void *)(type metadata accessor for Aggregate(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  unint64_t result = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Aggregate(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_1DE83A608(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DE83A70C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1DE83A828(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9D98);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DE83A960(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DE83AA80(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1DE83AAA8(a1, a2, a3, a4, &qword_1EBEA7F30);
}

char *sub_1DE83AA94(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1DE83AAA8(a1, a2, a3, a4, &qword_1EBEA97C0);
}

char *sub_1DE83AAA8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size_0(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1DE83ABB0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DE83ACC8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B50);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DE83ADC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BB00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

BOOL (*static Classic.NegativeOneToPositiveOneDoubleConditionProvider.condition.getter())(double a1)
{
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DE8E41C0;
  return sub_1DE83AF1C;
}

uint64_t sub_1DE83AF0C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

BOOL sub_1DE83AF1C(double a1)
{
  return *(double *)(v1 + 24) >= a1 && *(double *)(v1 + 16) <= a1;
}

uint64_t (*sub_1DE83AF34())(double *)
{
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DE8E41C0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_1DE83C3BC;
  *(void *)(v1 + 24) = v0;
  return sub_1DE83C3AC;
}

BOOL sub_1DE83AFB4(double *a1)
{
  return *a1 >= 0.0;
}

BOOL (*sub_1DE83AFC4())(double)
{
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DE8E41D0;
  return sub_1DE83C3B4;
}

uint64_t sub_1DE83B010()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t (*sub_1DE83B020())(double *a1)
{
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DE8E41D0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_1DE83C3B8;
  *(void *)(v1 + 24) = v0;
  return sub_1DE83C368;
}

BOOL (*sub_1DE83B0A0())(double a1)
{
  return sub_1DE83B0BC;
}

BOOL sub_1DE83B0BC(double a1)
{
  return a1 >= 0.0;
}

BOOL (*sub_1DE83B0C8())(double *a1)
{
  return sub_1DE83AFB4;
}

uint64_t (*sub_1DE83B0E4(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return sub_1DE83B21C;
}

uint64_t sub_1DE83B138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  swift_getAssociatedTypeWitness();
  sub_1DE8E1600();
  swift_getWitnessTable();
  char v3 = sub_1DE8E14A0();
  swift_release();
  return v3 & 1;
}

uint64_t sub_1DE83B20C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE83B21C(uint64_t a1)
{
  return sub_1DE83B138(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DE83B224(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v1 << 6);
LABEL_5:
    if ((*(void *)(*(void *)(result + 48) + 8 * v8) & 0x8000000000000000) != 0) {
      return 0;
    }
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v1;
  if (v10) {
    goto LABEL_22;
  }
  int64_t v1 = v9 + 1;
  if (v9 + 1 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v1 = v9 + 2;
  if (v9 + 2 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v1 = v9 + 3;
  if (v9 + 3 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_22:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_5;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 1;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1DE83B340(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v1 << 6);
LABEL_5:
    if (*(double *)(*(void *)(result + 56) + 8 * v8) < 0.0) {
      return 0;
    }
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v1;
  if (v10) {
    goto LABEL_22;
  }
  int64_t v1 = v9 + 1;
  if (v9 + 1 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v1 = v9 + 2;
  if (v9 + 2 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v1 = v9 + 3;
  if (v9 + 3 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_22:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_5;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v6) {
    return 1;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 1;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t (*sub_1DE83B460(uint64_t a1))(void *a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  sub_1DE83B0E4(v1, v2);
  uint64_t v4 = v3;
  unint64_t v5 = (void *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = sub_1DE83B21C;
  v5[5] = v4;
  return sub_1DE83C2F0;
}

BOOL (*sub_1DE83B4DC())(uint64_t a1)
{
  return sub_1DE83B4F8;
}

BOOL sub_1DE83B4F8(uint64_t a1)
{
  return a1 >= 0;
}

BOOL (*sub_1DE83B504())(void *a1)
{
  return sub_1DE83B520;
}

BOOL sub_1DE83B520(void *a1)
{
  return *a1 >= 0;
}

uint64_t (*sub_1DE83B530())(uint64_t result)
{
  return sub_1DE83B54C;
}

uint64_t sub_1DE83B54C(uint64_t result)
{
  if (*(double *)result < -1.0 || *(double *)result > 1.0) {
    return 0;
  }
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 1;
  }
  double v4 = *(double *)(v2 + 32);
  if (v4 < -1.0 || v4 > 1.0) {
    return 0;
  }
  if (v3 == 1) {
    return 1;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v7 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    double v8 = *(double *)(v2 + 8 * i);
    unint64_t result = v8 <= 1.0 && v8 >= -1.0;
    if (result != 1 || v7 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1DE83B5E0())(uint64_t result)
{
  return sub_1DE83B54C;
}

BOOL (*sub_1DE83B5FC())(uint64_t a1)
{
  return sub_1DE83B618;
}

BOOL sub_1DE83B618(uint64_t a1)
{
  BOOL v1 = *(double *)a1 >= 0.0;
  if (*(double *)a1 > 1.0) {
    BOOL v1 = 0;
  }
  return *(uint64_t *)(a1 + 8) >= 0 && v1;
}

BOOL (*sub_1DE83B640())(uint64_t a1)
{
  return sub_1DE83B618;
}

BOOL (*sub_1DE83B65C())(double *a1)
{
  return sub_1DE83B678;
}

BOOL sub_1DE83B678(double *a1)
{
  double v1 = *a1;
  double v2 = a1[1];
  double v3 = a1[2];
  double v4 = a1[3];
  BOOL v5 = v4 >= 0.0;
  if (v4 > 1.0) {
    BOOL v5 = 0;
  }
  if (v1 < 0.0) {
    BOOL v5 = 0;
  }
  if (v1 > 1.0) {
    BOOL v5 = 0;
  }
  if (v3 < 0.0) {
    BOOL v5 = 0;
  }
  if (v3 > 1.0) {
    BOOL v5 = 0;
  }
  if (v2 < 0.0) {
    BOOL v5 = 0;
  }
  return v2 <= 1.0 && v5;
}

BOOL (*sub_1DE83B6C8())(double *a1)
{
  return sub_1DE83B678;
}

BOOL (*sub_1DE83B6E4())(double *a1)
{
  return sub_1DE83B700;
}

BOOL sub_1DE83B700(double *a1)
{
  return a1[1] >= 0.0 && *a1 >= 0.0;
}

BOOL (*sub_1DE83B718())(double *a1)
{
  return sub_1DE83B700;
}

uint64_t (*sub_1DE83B734())()
{
  return sub_1DE83B750;
}

uint64_t sub_1DE83B750()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  char v1 = sub_1DE83B224(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    char v3 = sub_1DE83B340(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t (*sub_1DE83B7C0())()
{
  return sub_1DE83B7DC;
}

uint64_t sub_1DE83B7DC()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  char v1 = sub_1DE83B224(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    char v3 = sub_1DE83B340(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

BOOL (*sub_1DE83B850())(double *)
{
  return sub_1DE83C3A8;
}

BOOL (*sub_1DE83B86C())(double *)
{
  return sub_1DE83C3A8;
}

BOOL (*sub_1DE83B888())(double *a1)
{
  return sub_1DE83B8A4;
}

BOOL sub_1DE83B8A4(double *a1)
{
  BOOL result = 0;
  if (*a1 >= 0.0 && a1[1] >= 0.0 && a1[2] >= 0.0) {
    return a1[3] >= 0.0;
  }
  return result;
}

uint64_t sub_1DE83B8E0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE83B8EC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE83B8F8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE83B904()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE83B910()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE83B91C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE83B928()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE83B934()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE83B940()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE83B94C()
{
  return sub_1DE83B9AC();
}

uint64_t sub_1DE83B96C()
{
  return sub_1DE83B9AC();
}

uint64_t sub_1DE83B98C()
{
  return sub_1DE83B9AC();
}

uint64_t sub_1DE83B9AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE83BA04()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE83BA10()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE83BA1C()
{
  return MEMORY[0x1E4FBB570];
}

unint64_t sub_1DE83BA2C()
{
  unint64_t result = qword_1EAC0BB10;
  if (!qword_1EAC0BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB10);
  }
  return result;
}

unint64_t sub_1DE83BA84()
{
  unint64_t result = qword_1EBEA8178;
  if (!qword_1EBEA8178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8178);
  }
  return result;
}

unint64_t sub_1DE83BADC()
{
  unint64_t result = qword_1EAC0BB18;
  if (!qword_1EAC0BB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB18);
  }
  return result;
}

unint64_t sub_1DE83BB34()
{
  unint64_t result = qword_1EAC0BB20;
  if (!qword_1EAC0BB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB20);
  }
  return result;
}

unint64_t sub_1DE83BB8C()
{
  unint64_t result = qword_1EBEA9298;
  if (!qword_1EBEA9298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9298);
  }
  return result;
}

unint64_t sub_1DE83BBE4()
{
  unint64_t result = qword_1EAC0BB28;
  if (!qword_1EAC0BB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB28);
  }
  return result;
}

unint64_t sub_1DE83BC3C()
{
  unint64_t result = qword_1EAC0BB30;
  if (!qword_1EAC0BB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB30);
  }
  return result;
}

unint64_t sub_1DE83BC94()
{
  unint64_t result = qword_1EAC0BB38;
  if (!qword_1EAC0BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB38);
  }
  return result;
}

unint64_t sub_1DE83BCEC()
{
  unint64_t result = qword_1EAC0BB40;
  if (!qword_1EAC0BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB40);
  }
  return result;
}

unint64_t sub_1DE83BD44()
{
  unint64_t result = qword_1EAC0BB48;
  if (!qword_1EAC0BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB48);
  }
  return result;
}

unint64_t sub_1DE83BD9C()
{
  unint64_t result = qword_1EAC0BB50;
  if (!qword_1EAC0BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB50);
  }
  return result;
}

unint64_t sub_1DE83BDF4()
{
  unint64_t result = qword_1EAC0BB58;
  if (!qword_1EAC0BB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB58);
  }
  return result;
}

uint64_t sub_1DE83BE48()
{
  return sub_1DE83BED0(&qword_1EAC0BB60);
}

uint64_t sub_1DE83BE8C()
{
  return sub_1DE83BED0(&qword_1EAC0BB70);
}

uint64_t sub_1DE83BED0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BB68);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE83BF3C()
{
  unint64_t result = qword_1EAC0BB78;
  if (!qword_1EAC0BB78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BB68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB78);
  }
  return result;
}

unint64_t sub_1DE83BFAC()
{
  unint64_t result = qword_1EAC0BB80;
  if (!qword_1EAC0BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB80);
  }
  return result;
}

unint64_t sub_1DE83C004()
{
  unint64_t result = qword_1EAC0BB88;
  if (!qword_1EAC0BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB88);
  }
  return result;
}

unint64_t sub_1DE83C05C()
{
  unint64_t result = qword_1EAC0BB90;
  if (!qword_1EAC0BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB90);
  }
  return result;
}

unint64_t sub_1DE83C0B4()
{
  unint64_t result = qword_1EAC0BB98;
  if (!qword_1EAC0BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BB98);
  }
  return result;
}

unint64_t sub_1DE83C10C()
{
  unint64_t result = qword_1EAC0BBA0;
  if (!qword_1EAC0BBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BBA0);
  }
  return result;
}

unint64_t sub_1DE83C164()
{
  unint64_t result = qword_1EAC0BBA8[0];
  if (!qword_1EAC0BBA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAC0BBA8);
  }
  return result;
}

BOOL (*sub_1DE83C1B8())(double *a1)
{
  return sub_1DE83B8A4;
}

uint64_t dispatch thunk of static ConditionProvider.condition.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for Classic.NegativeOneToPositiveOneDoubleConditionProvider()
{
  return &type metadata for Classic.NegativeOneToPositiveOneDoubleConditionProvider;
}

ValueMetadata *_s33NormalizedDoubleConditionProviderVMa()
{
  return &_s33NormalizedDoubleConditionProviderVN;
}

ValueMetadata *_s31PositiveDoubleConditionProviderVMa()
{
  return &_s31PositiveDoubleConditionProviderVN;
}

uint64_t sub_1DE83C218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t _s22ArrayConditionProviderVMa()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *_s28PositiveIntConditionProviderVMa()
{
  return &_s28PositiveIntConditionProviderVN;
}

ValueMetadata *_s22QuotaConditionProviderVMa()
{
  return &_s22QuotaConditionProviderVN;
}

ValueMetadata *_s31TopicDiversityConditionProviderVMa()
{
  return &_s31TopicDiversityConditionProviderVN;
}

ValueMetadata *_s50SubscribedCountScoreConfigurationConditionProviderVMa()
{
  return &_s50SubscribedCountScoreConfigurationConditionProviderVN;
}

ValueMetadata *_s29FeaturePriorConditionProviderVMa()
{
  return &_s29FeaturePriorConditionProviderVN;
}

ValueMetadata *_s33TagWeightMappingConditionProviderVMa()
{
  return &_s33TagWeightMappingConditionProviderVN;
}

ValueMetadata *_s42AggregateModificationDataConditionProviderVMa()
{
  return &_s42AggregateModificationDataConditionProviderVN;
}

ValueMetadata *_s51AggregateModificationConfigurationConditionProviderVMa()
{
  return &_s51AggregateModificationConfigurationConditionProviderVN;
}

uint64_t sub_1DE83C2B8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DE83C2F0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1) & 1;
}

uint64_t sub_1DE83C320()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE83C330()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE83C368(double *a1)
{
  return (*(uint64_t (**)(double))(v1 + 16))(*a1) & 1;
}

uint64_t sub_1DE83C398()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t GroupableHeadline.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupableHeadline.publisherID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupableHeadline.topicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupableHeadline.managedTopicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupableHeadline.managedWinnerTopicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

double GroupableHeadline.score.getter()
{
  return *(double *)(v0 + 56);
}

uint64_t GroupableHeadline.accessible.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t GroupableHeadline.evergreen.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t GroupableHeadline.bundlePaid.getter()
{
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t GroupableHeadline.aigc.getter()
{
  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t GroupableHeadline.thumbnailPerceptualHash.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_1DE82F404(v1, *(void *)(v0 + 80));
  return v1;
}

void GroupableHeadline.groupingReason.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 88);
}

unsigned char *GroupableHeadline.groupingReason.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 88) = *result;
  return result;
}

uint64_t (*GroupableHeadline.groupingReason.modify())()
{
  return nullsub_31;
}

uint64_t GroupableHeadline.embeddingScore.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t GroupableHeadline.init(identifier:publisherID:topicIDs:managedTopicIDs:managedWinnerTopicIDs:score:accessible:bundlePaid:aigc:evergreen:embeddingScore:thumbnailPerceptualHash:groupingReason:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, char a11, char a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char *a18)
{
  char v18 = *a18;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(double *)(a9 + 56) = a10;
  *(unsigned char *)(a9 + 64) = a8;
  *(unsigned char *)(a9 + 65) = a13;
  *(unsigned char *)(a9 + 66) = a11;
  *(unsigned char *)(a9 + 67) = a12;
  *(void *)(a9 + 72) = a16;
  *(void *)(a9 + 80) = a17;
  *(unsigned char *)(a9 + 88) = v18;
  *(void *)(a9 + 96) = a14;
  *(unsigned char *)(a9 + 104) = a15 & 1;
  return result;
}

double GroupableHeadline.computedScore(tagID:config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = *(double *)(a3 + 912);
  double v7 = *(double *)(a3 + 920);
  uint64_t v8 = *(void *)(v3 + 40);
  double v9 = *(double *)(v3 + 56);
  if ((sub_1DE83C5AC(a1, a2, *(void *)(v3 + 48)) & 1) == 0)
  {
    if (sub_1DE83C5AC(a1, a2, v8)) {
      double v7 = v6;
    }
    else {
      double v7 = 1.0;
    }
  }
  return v9 * v7;
}

uint64_t sub_1DE83C5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t v6 = sub_1DE8E1BD0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      int64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1DE8E1AC0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1DE8E1AC0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t static GroupableHeadline.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DE8E1AC0();
  }
}

uint64_t sub_1DE83C714(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DE8E1AC0();
  }
}

uint64_t GroupableHeadline.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t GroupableHeadline.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE83C7F8()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE83C854()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE83C8AC()
{
  return sub_1DE8E1BD0();
}

uint64_t GroupableHeadline.debugDescription.getter()
{
  return 0;
}

unint64_t sub_1DE83CA2C()
{
  unint64_t result = qword_1EBEA7EE8;
  if (!qword_1EBEA7EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA7EE8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GroupableHeadline(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GroupableHeadline(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    return sub_1DE82F484(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for GroupableHeadline(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  unint64_t v8 = (uint64_t *)(a2 + 72);
  unint64_t v9 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1DE82F418(*v8, v9);
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v9;
  }
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for GroupableHeadline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  uint64_t v4 = (uint64_t *)(a2 + 72);
  unint64_t v5 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_1DE82F418(*v4, *(void *)(a2 + 80));
      uint64_t v8 = *(void *)(a1 + 72);
      unint64_t v9 = *(void *)(a1 + 80);
      *(void *)(a1 + 72) = v7;
      *(void *)(a1 + 80) = v5;
      sub_1DE82F484(v8, v9);
      goto LABEL_8;
    }
    sub_1DE83CD88(a1 + 72);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_1DE82F418(*v4, *(void *)(a2 + 80));
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v5;
LABEL_8:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v10;
  return a1;
}

uint64_t sub_1DE83CD88(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for GroupableHeadline(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  long long v6 = (void *)(a2 + 72);
  unint64_t v7 = *(void *)(a1 + 80);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 80);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 72);
      *(void *)(a1 + 72) = *v6;
      *(void *)(a1 + 80) = v8;
      sub_1DE82F484(v9, v7);
      goto LABEL_6;
    }
    sub_1DE83CD88(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v6;
LABEL_6:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupableHeadline(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupableHeadline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupableHeadline()
{
  return &type metadata for GroupableHeadline;
}

uint64_t sub_1DE83CFC8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1DE84BBE0((char *)(v7 > 1), v8 + 1, 1);
      }
      v4 += 4;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DE83D0A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1DE84BC00(0, v1, 0);
  uint64_t v2 = v27;
  uint64_t result = sub_1DE8CB908(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    BOOL v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    long long v26 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * v6);
    unint64_t v15 = *(void *)(v27 + 16);
    unint64_t v14 = *(void *)(v27 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1) {
      uint64_t result = (uint64_t)sub_1DE84BC00((char *)(v14 > 1), v15 + 1, 1);
    }
    *(void *)(v27 + 16) = v15 + 1;
    uint64_t v16 = v27 + 32 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    *(_OWORD *)(v16 + 48) = v26;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

BOOL sub_1DE83D2C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE83D2DC()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE83D30C()
{
  if (*v0) {
    return 0x6C616E7265746E69;
  }
  else {
    return 0x6C616E7265747865;
  }
}

uint64_t sub_1DE83D334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84E714(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE83D35C()
{
  return 0;
}

void sub_1DE83D368(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE83D374(uint64_t a1)
{
  unint64_t v2 = sub_1DE83D8B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83D3B0(uint64_t a1)
{
  unint64_t v2 = sub_1DE83D8B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE83D3EC()
{
  return 0;
}

uint64_t sub_1DE83D3F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1DE83D428()
{
  return 0;
}

void sub_1DE83D434(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE83D440(uint64_t a1)
{
  unint64_t v2 = sub_1DE83D95C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83D47C(uint64_t a1)
{
  unint64_t v2 = sub_1DE83D95C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE83D4B8()
{
  return 1;
}

uint64_t sub_1DE83D4C4()
{
  return sub_1DE8E1BB0();
}

unint64_t sub_1DE83D4F0()
{
  return 0xD000000000000010;
}

uint64_t sub_1DE83D50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84E7F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE83D538()
{
  return 0;
}

void sub_1DE83D544(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE83D550(uint64_t a1)
{
  unint64_t v2 = sub_1DE83D908();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83D58C(uint64_t a1)
{
  unint64_t v2 = sub_1DE83D908();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Mode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9648);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x1F4188790](v3, v4);
  unint64_t v21 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9640);
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  MEMORY[0x1F4188790](v6, v7);
  int64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9638);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  unint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE83D8B4();
  sub_1DE8E1C10();
  if (v15 == 2)
  {
    char v24 = 0;
    sub_1DE83D95C();
    sub_1DE8E1970();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  }
  else
  {
    char v25 = 1;
    sub_1DE83D908();
    uint64_t v17 = v21;
    sub_1DE8E1970();
    uint64_t v18 = v23;
    sub_1DE8E1A10();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

unint64_t sub_1DE83D8B4()
{
  unint64_t result = qword_1EBEA8CC8;
  if (!qword_1EBEA8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CC8);
  }
  return result;
}

unint64_t sub_1DE83D908()
{
  unint64_t result = qword_1EBEA8CF0;
  if (!qword_1EBEA8CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CF0);
  }
  return result;
}

unint64_t sub_1DE83D95C()
{
  unint64_t result = qword_1EAC0BC30;
  if (!qword_1EAC0BC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BC30);
  }
  return result;
}

uint64_t ClusteringJournal.Mode.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC38);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC40);
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC48);
  uint64_t v31 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v13);
  int v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE83D8B4();
  uint64_t v16 = v33;
  sub_1DE8E1BF0();
  if (!v16)
  {
    uint64_t v17 = v32;
    uint64_t v27 = v8;
    uint64_t v33 = a1;
    uint64_t v18 = sub_1DE8E1950();
    if (*(void *)(v18 + 16) == 1)
    {
      a1 = v33;
      if (*(unsigned char *)(v18 + 32))
      {
        char v35 = 1;
        sub_1DE83D908();
        sub_1DE8E1850();
        uint64_t v23 = v28;
        char v24 = sub_1DE8E1900();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v23);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v12);
        a1 = v33;
        char v25 = v24 & 1;
      }
      else
      {
        char v34 = 0;
        sub_1DE83D95C();
        sub_1DE8E1850();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v12);
        char v25 = 2;
      }
      *uint64_t v30 = v25;
    }
    else
    {
      uint64_t v19 = sub_1DE8E1760();
      swift_allocError();
      unint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
      *unint64_t v21 = &type metadata for ClusteringJournal.Mode;
      sub_1DE8E1860();
      sub_1DE8E1740();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v12);
      a1 = v33;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE83DE44@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return ClusteringJournal.Mode.init(from:)(a1, a2);
}

uint64_t sub_1DE83DE5C(void *a1)
{
  return ClusteringJournal.Mode.encode(to:)(a1);
}

uint64_t ClusteringJournal.Inventory.Item.tagID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClusteringJournal.Inventory.Item.headlines.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ClusteringJournal.Inventory.Item.hardpaywallHeadlines.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1DE83DEBC()
{
  unint64_t v1 = 0x656E696C64616568;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4449676174;
  }
}

uint64_t sub_1DE83DF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84E87C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE83DF44()
{
  return 0;
}

void sub_1DE83DF50(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE83DF5C(uint64_t a1)
{
  unint64_t v2 = sub_1DE83E178();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83DF98(uint64_t a1)
{
  unint64_t v2 = sub_1DE83E178();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Inventory.Item.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9760);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE83E178();
  sub_1DE8E1C10();
  char v14 = 0;
  uint64_t v9 = v11[3];
  sub_1DE8E1A00();
  if (!v9)
  {
    char v13 = 1;
    sub_1DE8E1A30();
    char v12 = 2;
    sub_1DE8E1A30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1DE83E178()
{
  unint64_t result = qword_1EBEA90E0;
  if (!qword_1EBEA90E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90E0);
  }
  return result;
}

uint64_t ClusteringJournal.Inventory.Item.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE83E178();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v19 = 0;
  uint64_t v10 = sub_1DE8E18F0();
  uint64_t v12 = v11;
  char v18 = 1;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DE8E1920();
  char v17 = 2;
  uint64_t v14 = sub_1DE8E1920();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v16;
  a2[3] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE83E3DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ClusteringJournal.Inventory.Item.init(from:)(a1, a2);
}

uint64_t sub_1DE83E3F4(void *a1)
{
  return ClusteringJournal.Inventory.Item.encode(to:)(a1);
}

uint64_t ClusteringJournal.Inventory.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE83E414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = sub_1DE83CFC8(a2);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1DE82DA80(v4);
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(a1 + 16);
  if (v66)
  {
    unint64_t v6 = 0;
    uint64_t v65 = a1 + 32;
    uint64_t v67 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v7 = v5 + 56;
    uint64_t v64 = a1;
    uint64_t v71 = v5 + 56;
    while (v6 < *(void *)(a1 + 16))
    {
      unint64_t v70 = v6;
      uint64_t v8 = v65 + 112 * v6;
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t v11 = *(void *)(v8 + 24);
      uint64_t v10 = *(void *)(v8 + 32);
      int v74 = *(unsigned __int8 *)(v8 + 64);
      int v72 = *(unsigned __int8 *)(v8 + 66);
      uint64_t v12 = *(void *)(v8 + 72);
      unint64_t v13 = *(void *)(v8 + 80);
      int64_t v14 = *(void *)(v10 + 16) + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v68 = v13;
      uint64_t v69 = v12;
      sub_1DE82F404(v12, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_1DE83A608(0, v14, 0, MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRetain();
      sub_1DE813448(v10);
      uint64_t v15 = v78;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_1DE83A608(0, *((void *)v78 + 2) + 1, 1, v78);
      }
      unint64_t v17 = *((void *)v15 + 2);
      unint64_t v16 = *((void *)v15 + 3);
      if (v17 >= v16 >> 1) {
        uint64_t v15 = sub_1DE83A608((char *)(v16 > 1), v17 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v17 + 1;
      uint64_t v77 = v15 + 32;
      char v18 = &v15[16 * v17 + 32];
      *(void *)char v18 = v9;
      *((void *)v18 + 1) = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = *((void *)v15 + 2);
      if (v76)
      {
        unint64_t v19 = 0;
        uint64_t v20 = v72 & ~v74;
        uint64_t v73 = v15;
        uint64_t v75 = v20;
        unint64_t v21 = v67;
        uint64_t v22 = *((void *)v15 + 2);
        while (v19 < *((void *)v15 + 2))
        {
          if (*(void *)(v5 + 16))
          {
            uint64_t v23 = (uint64_t *)&v77[16 * v19];
            uint64_t v25 = *v23;
            uint64_t v24 = v23[1];
            sub_1DE8E1BA0();
            swift_bridgeObjectRetain();
            sub_1DE8E1480();
            uint64_t v26 = sub_1DE8E1BD0();
            uint64_t v27 = -1 << *(unsigned char *)(v5 + 32);
            unint64_t v28 = v26 & ~v27;
            if ((*(void *)(v7 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
            {
              uint64_t v29 = *(void *)(v5 + 48);
              uint64_t v30 = (void *)(v29 + 16 * v28);
              BOOL v31 = *v30 == v25 && v30[1] == v24;
              if (v31 || (sub_1DE8E1AC0() & 1) != 0)
              {
LABEL_22:
                if (v21[2])
                {
                  swift_bridgeObjectRetain();
                  unint64_t v32 = sub_1DE821D84(v25, v24);
                  if (v33)
                  {
                    char v34 = (uint64_t *)(v21[7] + 16 * v32);
                    uint64_t v36 = *v34;
                    uint64_t v35 = v34[1];
                  }
                  else
                  {
                    uint64_t v35 = 0;
                    uint64_t v36 = 0;
                  }
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v35 = 0;
                  uint64_t v36 = 0;
                }
                uint64_t v37 = v36 + 1;
                if (__OFADD__(v36, 1)) {
                  goto LABEL_53;
                }
                uint64_t v38 = v5;
                uint64_t v39 = v35 + v75;
                if (__OFADD__(v35, v75)) {
                  goto LABEL_54;
                }
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v79 = v21;
                unint64_t v41 = sub_1DE821D84(v25, v24);
                int v43 = v21;
                unint64_t v44 = v41;
                uint64_t v45 = v43[2];
                BOOL v46 = (v42 & 1) == 0;
                uint64_t v47 = v45 + v46;
                if (__OFADD__(v45, v46)) {
                  goto LABEL_55;
                }
                char v48 = v42;
                if (v43[3] >= v47)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_1DE8225B4();
                  }
                }
                else
                {
                  sub_1DE824FE0(v47, isUniquelyReferenced_nonNull_native);
                  unint64_t v49 = sub_1DE821D84(v25, v24);
                  if ((v48 & 1) != (v50 & 1)) {
                    goto LABEL_58;
                  }
                  unint64_t v44 = v49;
                }
                uint64_t v22 = v76;
                if (v48)
                {
                  uint64_t v51 = (void *)(v79[7] + 16 * v44);
                  *uint64_t v51 = v37;
                  v51[1] = v39;
                  unint64_t v21 = v79;
                }
                else
                {
                  v79[(v44 >> 6) + 8] |= 1 << v44;
                  int64_t v52 = (uint64_t *)(v79[6] + 16 * v44);
                  *int64_t v52 = v25;
                  v52[1] = v24;
                  uint64_t v53 = (void *)(v79[7] + 16 * v44);
                  *uint64_t v53 = v37;
                  v53[1] = v39;
                  uint64_t v54 = v79[2];
                  BOOL v55 = __OFADD__(v54, 1);
                  uint64_t v56 = v54 + 1;
                  if (v55) {
                    goto LABEL_56;
                  }
                  unint64_t v21 = v79;
                  v79[2] = v56;
                  swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v5 = v38;
                uint64_t v7 = v71;
                uint64_t v15 = v73;
              }
              else
              {
                uint64_t v57 = ~v27;
                while (1)
                {
                  unint64_t v28 = (v28 + 1) & v57;
                  if (((*(void *)(v7 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
                    break;
                  }
                  uint64_t v58 = (void *)(v29 + 16 * v28);
                  BOOL v59 = *v58 == v25 && v58[1] == v24;
                  if (v59 || (sub_1DE8E1AC0() & 1) != 0) {
                    goto LABEL_22;
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v22 = v76;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          if (++v19 == v22)
          {
            uint64_t v67 = v21;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = v70 + 1;
      sub_1DE82F470(v69, v68);
      a1 = v64;
      if (v70 + 1 == v66) {
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_58:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
  }
  else
  {
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = swift_bridgeObjectRetain();
    uint64_t v61 = sub_1DE83D0A0(v60);
    uint64_t result = swift_bridgeObjectRelease_n();
    *a3 = v61;
  }
  return result;
}

uint64_t ClusteringJournal.Inventory.data.getter()
{
  uint64_t v1 = *v0;
  int64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DE84BC20(0, v2, 0);
    uint64_t v3 = v14;
    uint64_t v4 = (_OWORD *)(v1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      long long v13 = *v4;
      uint64_t v14 = v3;
      unint64_t v8 = *(void *)(v3 + 16);
      unint64_t v7 = *(void *)(v3 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
      {
        sub_1DE84BC20((void *)(v7 > 1), v8 + 1, 1);
        uint64_t v3 = v14;
      }
      *(void *)(v3 + 16) = v8 + 1;
      unint64_t v9 = v3 + 32 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      *(_OWORD *)(v9 + 48) = v13;
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9628);
    uint64_t v10 = sub_1DE8E1830();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC868];
  }
  uint64_t v14 = v10;
  uint64_t v11 = (void *)swift_bridgeObjectRetain();
  sub_1DE84B820(v11, 1, &v14);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DE83EB50()
{
  return 1;
}

uint64_t sub_1DE83EB60()
{
  return 0x736D657469;
}

uint64_t sub_1DE83EB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE83EC04()
{
  return 0;
}

void sub_1DE83EC10(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE83EC1C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84BC40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83EC58(uint64_t a1)
{
  unint64_t v2 = sub_1DE84BC40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Inventory.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9758);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  char v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84BC40();
  sub_1DE8E1C10();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95D0);
  sub_1DE84BCE8(&qword_1EBEA95D8, &qword_1EBEA95D0, (void (*)(void))sub_1DE84BC94);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t ClusteringJournal.Inventory.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84BC40();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95D0);
    sub_1DE84BCE8(&qword_1EAC0BC60, &qword_1EBEA95D0, (void (*)(void))sub_1DE84BD54);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE83EFCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClusteringJournal.Inventory.init(from:)(a1, a2);
}

uint64_t sub_1DE83EFE4(void *a1)
{
  return ClusteringJournal.Inventory.encode(to:)(a1);
}

uint64_t ClusteringJournal.Result.Article.articleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ClusteringJournal.Result.Article.score.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1DE83F03C()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x49656C6369747261;
  }
}

uint64_t sub_1DE83F078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84E9D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE83F0A0()
{
  return 0;
}

void sub_1DE83F0AC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE83F0B8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84BDA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83F0F4(uint64_t a1)
{
  unint64_t v2 = sub_1DE84BDA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.Article.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9730);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84BDA8();
  sub_1DE8E1C10();
  char v11 = 0;
  uint64_t v7 = v9;
  sub_1DE8E1A00();
  if (!v7)
  {
    char v10 = 1;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t ClusteringJournal.Result.Article.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84BDA8();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v16[15] = 0;
  uint64_t v10 = sub_1DE8E18F0();
  uint64_t v12 = v11;
  v16[14] = 1;
  swift_bridgeObjectRetain();
  sub_1DE8E1910();
  uint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE83F494@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ClusteringJournal.Result.Article.init(from:)(a1, a2);
}

uint64_t sub_1DE83F4AC(void *a1)
{
  return ClusteringJournal.Result.Article.encode(to:)(a1);
}

uint64_t ClusteringJournal.Result.Requirements.bundlePaidQuotas.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ClusteringJournal.Result.Requirements.minClusterSize.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t ClusteringJournal.Result.Requirements.maxClusterSize.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t ClusteringJournal.Result.Requirements.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE83F540()
{
  uint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1131309421;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 1131962733;
LABEL_4:
      uint64_t result = v2 | 0x7473756C00000000;
      break;
    case 3:
      uint64_t result = 0x73656C7572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE83F5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84EACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE83F5F8()
{
  return 0;
}

void sub_1DE83F604(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE83F610(uint64_t a1)
{
  unint64_t v2 = sub_1DE84BDFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83F64C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84BDFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.Requirements.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9708);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  long long v10 = *((_OWORD *)v1 + 1);
  long long v21 = *((_OWORD *)v1 + 2);
  long long v22 = v10;
  uint64_t v11 = v1[6];
  uint64_t v13 = v1[7];
  uint64_t v12 = v1[8];
  uint64_t v19 = v1[9];
  uint64_t v20 = v12;
  uint64_t v18 = v1[10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84BDFC();
  sub_1DE8E1C10();
  uint64_t v24 = v8;
  uint64_t v25 = v9;
  long long v26 = v22;
  long long v27 = v21;
  uint64_t v28 = v11;
  uint64_t v29 = v13;
  char v30 = 0;
  sub_1DE83BA84();
  uint64_t v14 = v23;
  sub_1DE8E1A40();
  if (!v14)
  {
    uint64_t v15 = v18;
    LOBYTE(v24) = 1;
    sub_1DE8E1A30();
    LOBYTE(v24) = 2;
    sub_1DE8E1A30();
    uint64_t v24 = v15;
    char v30 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8180);
    sub_1DE84BCE8(&qword_1EBEA95E0, &qword_1EBEA8180, (void (*)(void))sub_1DE84BE50);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t ClusteringJournal.Result.Requirements.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84BDFC();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  sub_1DE83BA2C();
  sub_1DE8E1930();
  uint64_t v10 = v23;
  uint64_t v11 = v24;
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  LOBYTE(v23) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DE8E1920();
  LOBYTE(v23) = 2;
  uint64_t v21 = sub_1DE8E1920();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8180);
  char v31 = 3;
  sub_1DE84BCE8(&qword_1EAC0BC80, &qword_1EBEA8180, (void (*)(void))sub_1DE84BEA4);
  sub_1DE8E1930();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v19 = v22;
  uint64_t v20 = v23;
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v14;
  a2[5] = v15;
  a2[6] = v16;
  a2[7] = v17;
  a2[8] = v19;
  a2[9] = v21;
  a2[10] = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE83FC10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClusteringJournal.Result.Requirements.init(from:)(a1, a2);
}

uint64_t sub_1DE83FC28(void *a1)
{
  return ClusteringJournal.Result.Requirements.encode(to:)(a1);
}

uint64_t ClusteringJournal.Result.Group.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1) {
    return sub_1DE8E1BB0();
  }
  sub_1DE8E1BB0();
  return sub_1DE8E1480();
}

uint64_t sub_1DE83FCCC()
{
  return 1;
}

uint64_t sub_1DE83FCDC()
{
  return 0x496C656E6E616863;
}

uint64_t sub_1DE83FCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x496C656E6E616863 && a2 == 0xE900000000000044)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE83FD9C()
{
  return 0;
}

void sub_1DE83FDA8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE83FDB4(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D4C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83FDF0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D4C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE83FE34()
{
  uint64_t v1 = 0x6369706F74;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C656E6E616863;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x59726F4665726F6DLL;
  }
}

uint64_t sub_1DE83FE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84ECBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE83FEB8()
{
  return 0;
}

void sub_1DE83FEC4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE83FED0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D46C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83FF0C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D46C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE83FF48()
{
  return 0;
}

uint64_t sub_1DE83FF54()
{
  return 0;
}

void sub_1DE83FF60(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE83FF6C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D568();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE83FFA8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D568();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE83FFE4()
{
  return 1;
}

uint64_t sub_1DE83FFF4()
{
  return 0x44496369706F74;
}

uint64_t sub_1DE84000C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x44496369706F74 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE8400A4()
{
  return 0;
}

void sub_1DE8400B0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8400BC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D514();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8400F8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D514();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.Group.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9720);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3, v4);
  char v31 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9718);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9728);
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9710);
  uint64_t v14 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36, v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  uint64_t v34 = v1[1];
  uint64_t v35 = v18;
  int v19 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84D46C();
  sub_1DE8E1C10();
  if (!v19)
  {
    char v38 = 1;
    sub_1DE84D514();
    uint64_t v21 = v36;
    sub_1DE8E1970();
    uint64_t v23 = v30;
    sub_1DE8E1A00();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v21);
  }
  if (v19 == 1)
  {
    char v39 = 2;
    sub_1DE84D4C0();
    uint64_t v20 = v31;
    uint64_t v21 = v36;
    sub_1DE8E1970();
    uint64_t v22 = v33;
    sub_1DE8E1A00();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v21);
  }
  char v37 = 0;
  sub_1DE84D568();
  uint64_t v25 = v36;
  sub_1DE8E1970();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v25);
}

uint64_t ClusteringJournal.Result.Group.hashValue.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DE8E1BA0();
  sub_1DE8E1BB0();
  if (v1 <= 1) {
    sub_1DE8E1480();
  }
  return sub_1DE8E1BD0();
}

uint64_t ClusteringJournal.Result.Group.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v46 = a2;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC90);
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42, v3);
  char v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BC98);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCA0);
  uint64_t v47 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCA8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  unint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1DE84D46C();
  uint64_t v20 = v50;
  sub_1DE8E1BF0();
  if (!v20)
  {
    uint64_t v41 = v10;
    uint64_t v22 = v47;
    uint64_t v21 = v48;
    uint64_t v50 = v15;
    uint64_t v23 = sub_1DE8E1950();
    if (*(void *)(v23 + 16) == 1)
    {
      if (*(unsigned char *)(v23 + 32))
      {
        if (*(unsigned char *)(v23 + 32) == 1)
        {
          char v52 = 1;
          sub_1DE84D514();
          sub_1DE8E1850();
          uint64_t v24 = v43;
          uint64_t v25 = sub_1DE8E18F0();
          uint64_t v26 = v9;
          uint64_t v27 = v50;
          uint64_t v37 = v36;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v24);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v14);
          char v38 = 0;
        }
        else
        {
          char v53 = 2;
          sub_1DE84D4C0();
          sub_1DE8E1850();
          uint64_t v32 = v42;
          uint64_t v33 = sub_1DE8E18F0();
          uint64_t v34 = v21;
          uint64_t v35 = v50;
          uint64_t v25 = v33;
          uint64_t v37 = v39;
          (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v32);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v14);
          char v38 = 1;
        }
      }
      else
      {
        char v51 = 0;
        sub_1DE84D568();
        sub_1DE8E1850();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v14);
        uint64_t v25 = 0;
        uint64_t v37 = 0;
        char v38 = 2;
      }
      uint64_t v40 = v46;
      *BOOL v46 = v25;
      v40[1] = v37;
      *((unsigned char *)v40 + 16) = v38;
    }
    else
    {
      uint64_t v28 = sub_1DE8E1760();
      swift_allocError();
      uint64_t v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
      *uint64_t v30 = &type metadata for ClusteringJournal.Result.Group;
      sub_1DE8E1860();
      sub_1DE8E1740();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v14);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t sub_1DE840BC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ClusteringJournal.Result.Group.init(from:)(a1, a2);
}

uint64_t sub_1DE840BD8(void *a1)
{
  return ClusteringJournal.Result.Group.encode(to:)(a1);
}

uint64_t sub_1DE840BF0()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DE8E1BA0();
  sub_1DE8E1BB0();
  if (v1 <= 1) {
    sub_1DE8E1480();
  }
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE840C7C()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1) {
    return sub_1DE8E1BB0();
  }
  sub_1DE8E1BB0();
  return sub_1DE8E1480();
}

uint64_t sub_1DE840D04()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DE8E1BA0();
  sub_1DE8E1BB0();
  if (v1 <= 1) {
    sub_1DE8E1480();
  }
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE840D98()
{
  unint64_t result = 0x63696E6167726FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6465746F6D6F7270;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE840E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84EE18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE840E5C()
{
  return 0;
}

void sub_1DE840E68(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE840E74(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D5BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE840EB0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D5BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE840EF4()
{
  if (*v0) {
    return 0x6E49656372756F73;
  }
  else {
    return 1953459315;
  }
}

uint64_t sub_1DE840F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84EFC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE840F58()
{
  return 0;
}

void sub_1DE840F64(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE840F70(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D70C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE840FAC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D70C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE840FF0()
{
  return 0;
}

void sub_1DE840FFC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE841008(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D664();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE841044(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D664();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE841088()
{
  return 0;
}

void sub_1DE841094(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE8410A0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D6B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8410DC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D6B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE841120()
{
  return 0;
}

void sub_1DE84112C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE841138(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D610();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE841174(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D610();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96D0);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96C8);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96C0);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96B8);
  uint64_t v34 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96B0);
  uint64_t v46 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = *v1;
  uint64_t v43 = v1[1];
  uint64_t v44 = v20;
  uint64_t v21 = *((unsigned __int8 *)v1 + 16);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1;
  uint64_t v24 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v23, v22);
  sub_1DE84D5BC();
  sub_1DE8E1C10();
  switch(v21)
  {
    case 1:
      char v52 = 1;
      sub_1DE84D6B8();
      sub_1DE8E1970();
      char v51 = 0;
      uint64_t v26 = v45;
      uint64_t v27 = v36;
      sub_1DE8E1A30();
      if (!v26)
      {
        char v50 = 1;
        sub_1DE8E1A30();
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v27);
      break;
    case 2:
      char v55 = 2;
      sub_1DE84D664();
      uint64_t v28 = v37;
      sub_1DE8E1970();
      char v54 = 0;
      uint64_t v29 = v45;
      uint64_t v30 = v39;
      sub_1DE8E1A30();
      if (!v29)
      {
        char v53 = 1;
        sub_1DE8E1A30();
      }
      uint64_t v31 = v38;
      goto LABEL_14;
    case 3:
      char v58 = 3;
      sub_1DE84D610();
      uint64_t v28 = v40;
      sub_1DE8E1970();
      char v57 = 0;
      uint64_t v32 = v45;
      uint64_t v30 = v42;
      sub_1DE8E1A30();
      if (!v32)
      {
        char v56 = 1;
        sub_1DE8E1A30();
      }
      uint64_t v31 = v41;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
      break;
    default:
      char v49 = 0;
      sub_1DE84D70C();
      sub_1DE8E1970();
      char v48 = 0;
      uint64_t v25 = v45;
      sub_1DE8E1A30();
      if (!v25)
      {
        char v47 = 1;
        sub_1DE8E1A30();
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v13);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v24, v17);
}

uint64_t ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCB8);
  uint64_t v58 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53, v3);
  uint64_t v60 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCC0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  uint64_t v57 = v6;
  MEMORY[0x1F4188790](v5, v7);
  BOOL v59 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCC8);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCD0);
  uint64_t v52 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BCD8);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  char v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1DE84D5BC();
  uint64_t v23 = v63;
  sub_1DE8E1BF0();
  if (v23) {
    goto LABEL_9;
  }
  uint64_t v50 = v13;
  char v51 = v16;
  uint64_t v24 = v12;
  uint64_t v25 = v59;
  uint64_t v26 = v60;
  uint64_t v27 = v61;
  uint64_t v63 = v18;
  uint64_t v28 = sub_1DE8E1950();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v32 = sub_1DE8E1760();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
    *uint64_t v34 = &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason;
    sub_1DE8E1860();
    sub_1DE8E1740();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FBBA70], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v21, v17);
LABEL_9:
    uint64_t v40 = (uint64_t)v62;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  uint64_t v29 = *(unsigned __int8 *)(v28 + 32);
  uint64_t v49 = v29;
  switch(v29)
  {
    case 1:
      char v69 = 1;
      sub_1DE84D6B8();
      sub_1DE8E1850();
      char v68 = 0;
      uint64_t v35 = v55;
      uint64_t v41 = sub_1DE8E1920();
      char v67 = 1;
      uint64_t v39 = sub_1DE8E1920();
      uint64_t v48 = v41;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v35);
      swift_bridgeObjectRelease();
      uint64_t v46 = v63;
      goto LABEL_11;
    case 2:
      char v72 = 2;
      sub_1DE84D664();
      uint64_t v36 = v25;
      sub_1DE8E1850();
      char v71 = 0;
      uint64_t v37 = v56;
      uint64_t v48 = sub_1DE8E1920();
      char v70 = 1;
      uint64_t v43 = sub_1DE8E1920();
      uint64_t v46 = v63;
      uint64_t v39 = v43;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v37);
      swift_bridgeObjectRelease();
LABEL_11:
      (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v17);
      goto LABEL_12;
    case 3:
      char v75 = 3;
      sub_1DE84D610();
      sub_1DE8E1850();
      char v74 = 0;
      uint64_t v38 = v53;
      uint64_t v48 = sub_1DE8E1920();
      char v73 = 1;
      uint64_t v39 = sub_1DE8E1920();
      uint64_t v44 = v26;
      uint64_t v45 = v63;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v17);
LABEL_12:
      uint64_t v40 = (uint64_t)v62;
      break;
    default:
      char v66 = 0;
      sub_1DE84D70C();
      uint64_t v30 = v51;
      sub_1DE8E1850();
      char v65 = 0;
      uint64_t v31 = v50;
      uint64_t v48 = sub_1DE8E1920();
      char v64 = 1;
      uint64_t v39 = sub_1DE8E1920();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v21, v17);
      uint64_t v40 = (uint64_t)v62;
      break;
  }
  *(void *)uint64_t v27 = v48;
  *(void *)(v27 + 8) = v39;
  *(unsigned char *)(v27 + 16) = v49;
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

unint64_t sub_1DE841F94(char a1)
{
  unint64_t result = 0x6565726772657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x7373656363616E69;
      break;
    case 3:
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x4578614D63676961;
      break;
    case 5:
      unint64_t result = 0x7669446369706F74;
      break;
    case 6:
      unint64_t result = 0x746174696C617571;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 9:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE842104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.init(from:)(a1, a2);
}

uint64_t sub_1DE84211C(void *a1)
{
  return ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.encode(to:)(a1);
}

uint64_t sub_1DE84213C()
{
  return 0;
}

void sub_1DE842148(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE842154(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D9AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842190(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D9AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DE8421D4()
{
  return sub_1DE841F94(*v0);
}

uint64_t sub_1DE8421DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84F0C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE842204()
{
  return 0;
}

void sub_1DE842210(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DE84221C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D760();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842258(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D760();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE842294()
{
  return 1;
}

uint64_t sub_1DE8422A4()
{
  return 0x656C6369747261;
}

uint64_t sub_1DE8422BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C6369747261 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE842354()
{
  return 0;
}

void sub_1DE842360(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE84236C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D85C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8423A8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D85C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8423EC()
{
  return 0;
}

void sub_1DE8423F8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE842404(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DAFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842440(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DAFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE84247C()
{
  return 1;
}

unint64_t sub_1DE84248C()
{
  return 0xD000000000000011;
}

uint64_t sub_1DE8424A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84F540(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE8424D4()
{
  return 0;
}

void sub_1DE8424E0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8424EC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DAA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842528(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DAA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE84256C()
{
  if (*v0) {
    return 0x74696D696CLL;
  }
  else {
    return 0x656C6369747261;
  }
}

uint64_t sub_1DE8425A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84F5C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8425CC()
{
  return 0;
}

void sub_1DE8425D8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE8425E4(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D8B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842620(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D8B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE842664()
{
  return 0;
}

void sub_1DE842670(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE84267C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DA54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8426B8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DA54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8426FC()
{
  return 0;
}

void sub_1DE842708(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE842714(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DA00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842750(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DA00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE842794()
{
  uint64_t v1 = 0x54646574696D696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x74696D696CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C6369747261;
  }
}

uint64_t sub_1DE8427F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84F6B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE84281C()
{
  return 0;
}

void sub_1DE842828(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE842834(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D904();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842870(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D904();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DE8428B4()
{
  unint64_t result = 0x656C6369747261;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6953776F646E6977;
      break;
    case 2:
      unint64_t result = 0x6369706F546C6C61;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6D69536369706F74;
      break;
    case 5:
      unint64_t result = 0x6C6F687365726874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE8429A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84F81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8429C8()
{
  return 0;
}

void sub_1DE8429D4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DE8429E0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D958();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842A1C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D958();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE842A60()
{
  if (*v0) {
    return 0x726F727265;
  }
  else {
    return 0x656C6369747261;
  }
}

uint64_t sub_1DE842A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84FAF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE842AC0()
{
  return 0;
}

void sub_1DE842ACC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE842AD8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D7B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE842B14(uint64_t a1)
{
  unint64_t v2 = sub_1DE84D7B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.encode(to:)(void *a1)
{
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9670);
  v46[11] = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63, v3);
  uint64_t v61 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96A0);
  v46[6] = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57, v5);
  uint64_t v55 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9660);
  v46[10] = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59, v7);
  uint64_t v56 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9688);
  v46[4] = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58, v9);
  uint64_t v54 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9690);
  v46[3] = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62, v11);
  uint64_t v60 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B08);
  v46[9] = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53, v13);
  uint64_t v52 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96A8);
  v46[8] = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51, v15);
  uint64_t v50 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9680);
  v46[7] = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49, v17);
  uint64_t v48 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9698);
  uint64_t v47 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9678);
  v46[5] = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9668);
  uint64_t v67 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70, v27);
  uint64_t v68 = *v1;
  uint64_t v29 = v1[2];
  uint64_t v65 = v1[1];
  uint64_t v66 = v29;
  uint64_t v64 = v1[3];
  v46[2] = v1[4];
  v46[1] = v1[5];
  uint64_t v30 = *((unsigned __int8 *)v1 + 64);
  uint64_t v31 = a1[3];
  uint64_t v32 = a1;
  uint64_t v33 = (char *)v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v32, v31);
  sub_1DE84D760();
  sub_1DE8E1C10();
  switch(v30)
  {
    case 1:
      LOBYTE(v71) = 1;
      sub_1DE84DAA8();
      uint64_t v37 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95B0);
      sub_1DE84BCE8(&qword_1EBEA95B8, &qword_1EBEA95B0, (void (*)(void))sub_1DE84D808);
      sub_1DE8E1A40();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v33, v37);
    case 2:
      LOBYTE(v71) = 2;
      sub_1DE84DA54();
      uint64_t v26 = v48;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v49;
      uint64_t v39 = v69;
      sub_1DE8E1A40();
      if (!v39)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A30();
      }
      uint64_t v36 = (uint64_t *)&v74;
      goto LABEL_28;
    case 3:
      LOBYTE(v71) = 3;
      sub_1DE84DA00();
      uint64_t v26 = v50;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v51;
      uint64_t v40 = v69;
      sub_1DE8E1A40();
      if (!v40)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A30();
      }
      uint64_t v36 = &v75;
      goto LABEL_28;
    case 4:
      LOBYTE(v71) = 4;
      sub_1DE84D9AC();
      uint64_t v26 = v52;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v53;
      uint64_t v41 = v69;
      sub_1DE8E1A40();
      if (!v41)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A30();
      }
      uint64_t v36 = &v76;
      goto LABEL_28;
    case 5:
      LOBYTE(v71) = 5;
      sub_1DE84D958();
      uint64_t v26 = v60;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v62;
      uint64_t v42 = v69;
      sub_1DE8E1A40();
      if (!v42)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A30();
        LOBYTE(v71) = 2;
        sub_1DE8E1A30();
        LOBYTE(v71) = 3;
        sub_1DE8E1A30();
        LOBYTE(v71) = 4;
        sub_1DE8E1A20();
        LOBYTE(v71) = 5;
        sub_1DE8E1A20();
      }
      uint64_t v36 = &v70;
      goto LABEL_28;
    case 6:
      LOBYTE(v71) = 6;
      sub_1DE84D904();
      uint64_t v26 = v54;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v58;
      uint64_t v43 = v69;
      sub_1DE8E1A40();
      if (!v43)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A00();
        LOBYTE(v71) = 2;
        sub_1DE8E1A30();
      }
      uint64_t v36 = &v71;
      goto LABEL_28;
    case 7:
      LOBYTE(v71) = 7;
      sub_1DE84D8B0();
      uint64_t v26 = v56;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v59;
      uint64_t v44 = v69;
      sub_1DE8E1A40();
      if (!v44)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A30();
      }
      uint64_t v36 = &v77;
      goto LABEL_28;
    case 8:
      LOBYTE(v71) = 8;
      sub_1DE84D85C();
      uint64_t v26 = v55;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      sub_1DE84D808();
      uint64_t v23 = v57;
      sub_1DE8E1A40();
      uint64_t v36 = &v73;
      goto LABEL_28;
    case 9:
      LOBYTE(v71) = 9;
      sub_1DE84D7B4();
      uint64_t v26 = v61;
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v23 = v63;
      uint64_t v45 = v69;
      sub_1DE8E1A40();
      if (!v45)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A00();
      }
      uint64_t v36 = (uint64_t *)&v78;
      goto LABEL_28;
    default:
      LOBYTE(v71) = 0;
      sub_1DE84DAFC();
      uint64_t v34 = v70;
      sub_1DE8E1970();
      uint64_t v71 = v68;
      uint64_t v72 = v65;
      uint64_t v73 = v66;
      char v79 = 0;
      sub_1DE84D808();
      uint64_t v35 = v69;
      sub_1DE8E1A40();
      if (!v35)
      {
        LOBYTE(v71) = 1;
        sub_1DE8E1A30();
      }
      uint64_t v36 = &v72;
LABEL_28:
      (*(void (**)(char *, uint64_t))(*(v36 - 32) + 8))(v26, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v33, v34);
  }
}

uint64_t ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v127 = a2;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD08);
  uint64_t v116 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119, v3);
  uint64_t v135 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD10);
  uint64_t v114 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123, v5);
  uint64_t v129 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD18);
  uint64_t v115 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124, v7);
  uint64_t v130 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD20);
  uint64_t v108 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122, v9);
  uint64_t v134 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD28);
  uint64_t v125 = *(void *)(v11 - 8);
  uint64_t v126 = v11;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v131 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD30);
  uint64_t v113 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120, v14);
  uint64_t v133 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD38);
  uint64_t v112 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121, v16);
  uint64_t v132 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD40);
  uint64_t v111 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118, v18);
  uint64_t v128 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD48);
  uint64_t v109 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117, v20);
  uint64_t v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD50);
  uint64_t v110 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD58);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27, v29);
  uint64_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1[3];
  unint64_t v136 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1DE84D760();
  uint64_t v33 = v137;
  sub_1DE8E1BF0();
  if (v33) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  }
  uint64_t v106 = v26;
  uint64_t v105 = v23;
  uint64_t v35 = v132;
  uint64_t v34 = v133;
  uint64_t v107 = 0;
  uint64_t v36 = v135;
  uint64_t v137 = v28;
  uint64_t v37 = sub_1DE8E1950();
  if (*(void *)(v37 + 16) != 1)
  {
    uint64_t v42 = sub_1DE8E1760();
    swift_allocError();
    uint64_t v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
    *uint64_t v44 = &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason;
    sub_1DE8E1860();
    sub_1DE8E1740();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBA70], v42);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v31, v27);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  }
  uint64_t v104 = v37;
  uint64_t v38 = (char *)*(unsigned __int8 *)(v37 + 32);
  switch(*(unsigned char *)(v37 + 32))
  {
    case 1:
      LOBYTE(v138) = 1;
      sub_1DE84DAA8();
      uint64_t v45 = v107;
      sub_1DE8E1850();
      uint64_t v75 = v45;
      if (v45) {
        goto LABEL_25;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95B0);
      sub_1DE84BCE8(&qword_1EAC0BD68, &qword_1EBEA95B0, (void (*)(void))sub_1DE84DB50);
      uint64_t v46 = v117;
      sub_1DE8E1930();
      uint64_t v47 = v137;
      uint64_t v107 = 0;
      (*(void (**)(char *, uint64_t))(v109 + 8))(v22, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v27);
      uint64_t v93 = 0;
      uint64_t v73 = 0;
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      BOOL v94 = v138;
      int v90 = 0;
      uint64_t v91 = 0;
      goto LABEL_27;
    case 2:
      LOBYTE(v138) = 2;
      sub_1DE84DA54();
      uint64_t v48 = v128;
      uint64_t v49 = v107;
      sub_1DE8E1850();
      if (v49) {
        goto LABEL_25;
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v50 = v118;
      sub_1DE8E1930();
      uint64_t v51 = v137;
      uint64_t v93 = v139;
      uint64_t v129 = v138;
      uint64_t v77 = v48;
      uint64_t v135 = v140;
      char v142 = 1;
      uint64_t v78 = v50;
      uint64_t v75 = 0;
      uint64_t v88 = sub_1DE8E1920();
      uint64_t v107 = 0;
      uint64_t v95 = (uint64_t *)&v141;
      goto LABEL_28;
    case 3:
      LOBYTE(v138) = 3;
      sub_1DE84DA00();
      uint64_t v52 = v35;
      uint64_t v53 = v107;
      sub_1DE8E1850();
      if (v53) {
        goto LABEL_25;
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v54 = v121;
      sub_1DE8E1930();
      uint64_t v51 = v137;
      uint64_t v93 = v139;
      uint64_t v129 = v138;
      uint64_t v77 = v52;
      uint64_t v135 = v140;
      char v142 = 1;
      uint64_t v78 = v54;
      uint64_t v75 = 0;
      uint64_t v88 = sub_1DE8E1920();
      uint64_t v107 = 0;
      uint64_t v95 = &v143;
      goto LABEL_28;
    case 4:
      LOBYTE(v138) = 4;
      sub_1DE84D9AC();
      uint64_t v55 = v107;
      sub_1DE8E1850();
      if (v55) {
        goto LABEL_25;
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v78 = v120;
      sub_1DE8E1930();
      uint64_t v51 = v137;
      uint64_t v93 = v139;
      uint64_t v129 = v138;
      uint64_t v77 = v34;
      uint64_t v135 = v140;
      char v142 = 1;
      uint64_t v75 = 0;
      uint64_t v88 = sub_1DE8E1920();
      uint64_t v107 = 0;
      uint64_t v95 = &v144;
LABEL_28:
      (*(void (**)(char *, uint64_t))(*(v95 - 32) + 8))(v77, v78);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v27);
      uint64_t v89 = 0;
      int v90 = 0;
      uint64_t v91 = 0;
      uint64_t v92 = (uint64_t)v136;
      goto LABEL_29;
    case 5:
      LOBYTE(v138) = 5;
      sub_1DE84D958();
      uint64_t v56 = v107;
      sub_1DE8E1850();
      if (v56) {
        goto LABEL_25;
      }
      uint64_t v134 = v38;
      char v142 = 0;
      sub_1DE84DB50();
      sub_1DE8E1930();
      char v79 = v138;
      uint64_t v80 = v139;
      uint64_t v81 = v140;
      char v142 = 1;
      uint64_t v82 = sub_1DE8E1920();
      uint64_t v135 = v81;
      uint64_t v129 = v79;
      uint64_t v130 = (char *)v82;
      uint64_t v132 = v80;
      uint64_t v133 = (char *)v27;
      char v142 = 2;
      uint64_t v75 = sub_1DE8E1920();
      char v142 = 3;
      uint64_t v100 = sub_1DE8E1920();
      uint64_t v107 = 0;
      uint64_t v89 = v100;
      char v142 = 4;
      sub_1DE8E1910();
      uint64_t v128 = v101;
      uint64_t v107 = 0;
      char v142 = 5;
      sub_1DE8E1910();
      uint64_t v124 = v103;
      uint64_t v107 = 0;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v131, v126);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v137 + 8))(v31, v133);
      int v90 = v128;
      uint64_t v91 = v124;
      uint64_t v92 = (uint64_t)v136;
      LOBYTE(v38) = (_BYTE)v134;
      uint64_t v93 = v132;
      uint64_t v88 = (uint64_t)v130;
LABEL_29:
      BOOL v94 = v129;
      uint64_t v73 = v135;
      goto LABEL_31;
    case 6:
      LOBYTE(v138) = 6;
      sub_1DE84D904();
      uint64_t v57 = v107;
      sub_1DE8E1850();
      if (v57) {
        goto LABEL_25;
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v58 = v122;
      sub_1DE8E1930();
      uint64_t v59 = v137;
      uint64_t v133 = (char *)v27;
      uint64_t v83 = v138;
      uint64_t v84 = v139;
      uint64_t v73 = v140;
      char v142 = 1;
      uint64_t v85 = sub_1DE8E18F0();
      uint64_t v75 = v96;
      uint64_t v129 = v83;
      uint64_t v130 = (char *)v85;
      uint64_t v132 = v84;
      char v142 = 2;
      uint64_t v97 = sub_1DE8E1920();
      uint64_t v107 = 0;
      uint64_t v89 = v97;
      (*(void (**)(void, uint64_t))(v108 + 8))(0, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v59 + 8))(v31, v133);
      goto LABEL_30;
    case 7:
      LOBYTE(v138) = 7;
      sub_1DE84D8B0();
      uint64_t v60 = v130;
      uint64_t v61 = v107;
      sub_1DE8E1850();
      if (v61) {
        goto LABEL_25;
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v62 = v124;
      sub_1DE8E1930();
      uint64_t v63 = v137;
      uint64_t v86 = v60;
      uint64_t v93 = v139;
      uint64_t v129 = v138;
      uint64_t v135 = v140;
      char v142 = 1;
      uint64_t v75 = 0;
      uint64_t v88 = sub_1DE8E1920();
      uint64_t v107 = 0;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v86, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v27);
      uint64_t v89 = 0;
      int v90 = 0;
      uint64_t v91 = 0;
      uint64_t v73 = v135;
      uint64_t v92 = (uint64_t)v136;
      BOOL v94 = v129;
      goto LABEL_31;
    case 8:
      LOBYTE(v138) = 8;
      sub_1DE84D85C();
      uint64_t v64 = v129;
      uint64_t v65 = v107;
      sub_1DE8E1850();
      uint64_t v75 = v65;
      if (v65) {
        goto LABEL_25;
      }
      sub_1DE84DB50();
      uint64_t v66 = v123;
      sub_1DE8E1930();
      uint64_t v67 = v137;
      uint64_t v107 = 0;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v64, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v27);
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      BOOL v94 = v138;
      uint64_t v93 = v139;
      int v90 = 0;
      uint64_t v91 = 0;
      uint64_t v73 = v140;
LABEL_27:
      uint64_t v92 = (uint64_t)v136;
      goto LABEL_31;
    case 9:
      LOBYTE(v138) = 9;
      sub_1DE84D7B4();
      uint64_t v68 = v36;
      uint64_t v69 = v107;
      sub_1DE8E1850();
      if (v69) {
        goto LABEL_25;
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v70 = v119;
      sub_1DE8E1930();
      uint64_t v71 = v137;
      uint64_t v129 = v138;
      uint64_t v73 = v140;
      uint64_t v132 = v139;
      uint64_t v133 = (char *)v27;
      char v142 = 1;
      uint64_t v87 = sub_1DE8E18F0();
      uint64_t v107 = 0;
      uint64_t v75 = v98;
      uint64_t v99 = *(void (**)(char *, uint64_t))(v116 + 8);
      uint64_t v130 = (char *)v87;
      v99(v68, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v71 + 8))(v31, v133);
      uint64_t v89 = 0;
LABEL_30:
      int v90 = 0;
      uint64_t v91 = 0;
      uint64_t v92 = (uint64_t)v136;
      uint64_t v93 = v132;
      BOOL v94 = v129;
      uint64_t v88 = (uint64_t)v130;
      goto LABEL_31;
    default:
      LOBYTE(v138) = 0;
      sub_1DE84DAFC();
      uint64_t v39 = v106;
      uint64_t v40 = v107;
      sub_1DE8E1850();
      if (v40)
      {
LABEL_25:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v137 + 8))(v31, v27);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
      }
      char v142 = 0;
      sub_1DE84DB50();
      uint64_t v41 = v105;
      sub_1DE8E1930();
      uint64_t v72 = v139;
      uint64_t v129 = v138;
      uint64_t v73 = v140;
      char v142 = 1;
      char v74 = v39;
      uint64_t v75 = 0;
      uint64_t v88 = sub_1DE8E1920();
      uint64_t v107 = 0;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v74, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v31, v27);
      uint64_t v89 = 0;
      int v90 = 0;
      uint64_t v91 = 0;
      uint64_t v92 = (uint64_t)v136;
      uint64_t v93 = v72;
      BOOL v94 = v129;
LABEL_31:
      uint64_t v102 = v127;
      *unint64_t v127 = v94;
      v102[1] = v93;
      v102[2] = v73;
      v102[3] = v88;
      v102[4] = v75;
      v102[5] = v89;
      v102[6] = v90;
      v102[7] = v91;
      *((unsigned char *)v102 + 64) = (_BYTE)v38;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v92);
      break;
  }
  return result;
}

uint64_t sub_1DE845170@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.init(from:)(a1, a2);
}

uint64_t sub_1DE845188(void *a1)
{
  return ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.encode(to:)(a1);
}

uint64_t sub_1DE8451A8()
{
  if (*v0) {
    return 0x6E6F73616572;
  }
  else {
    return 0x656C6369747261;
  }
}

uint64_t sub_1DE8451E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84FBE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE845208()
{
  return 0;
}

void sub_1DE845214(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE845220(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DCA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE84525C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DCA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE84529C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8452E8()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE84532C()
{
  if (*v0) {
    return 0x64657463656A6572;
  }
  else {
    return 0x6465747065636361;
  }
}

uint64_t sub_1DE845360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84FCD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE845388()
{
  return 0;
}

void sub_1DE845394(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE8453A0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DBA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8453DC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DBA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE845418()
{
  return 1;
}

uint64_t sub_1DE845428()
{
  return 0x6E6F73616572;
}

uint64_t sub_1DE84543C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE8454CC()
{
  return 0;
}

void sub_1DE8454D8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8454E4(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DBF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE845520(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DBF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96E0);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96D8);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9658);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41, v10);
  uint64_t v12 = v1[1];
  uint64_t v36 = *v1;
  uint64_t v37 = v12;
  uint64_t v13 = v1[3];
  uint64_t v38 = v1[2];
  uint64_t v14 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v30 = v1[6];
  uint64_t v29 = v1[7];
  int v16 = *((char *)v1 + 64);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1;
  uint64_t v19 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_1DE84DBA4();
  sub_1DE8E1C10();
  if (v16 < 0)
  {
    char v24 = v16 & 0x7F;
    LOBYTE(v42) = 1;
    sub_1DE84DBF8();
    uint64_t v25 = v31;
    uint64_t v26 = v41;
    sub_1DE8E1970();
    uint64_t v42 = v36;
    uint64_t v43 = v37;
    uint64_t v44 = v38;
    uint64_t v45 = v13;
    uint64_t v46 = v14;
    uint64_t v47 = v15;
    uint64_t v48 = v30;
    uint64_t v49 = v29;
    char v50 = v24;
    sub_1DE84DC4C();
    uint64_t v27 = v33;
    sub_1DE8E1A40();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v19, v26);
  }
  else
  {
    LOBYTE(v42) = 0;
    sub_1DE84DCA0();
    uint64_t v20 = v41;
    sub_1DE8E1970();
    uint64_t v42 = v36;
    uint64_t v43 = v37;
    uint64_t v44 = v38;
    char v51 = 0;
    sub_1DE84D808();
    uint64_t v21 = v35;
    uint64_t v22 = v40;
    sub_1DE8E1A40();
    if (!v22)
    {
      uint64_t v42 = v13;
      uint64_t v43 = v14;
      LOBYTE(v44) = v15;
      char v51 = 1;
      sub_1DE84DCF4();
      sub_1DE8E1A40();
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v19, v20);
  }
}

uint64_t ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD70);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = (char *)v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD78);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD80);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1DE84DBA4();
  uint64_t v17 = v41;
  sub_1DE8E1BF0();
  if (v17) {
    goto LABEL_7;
  }
  uint64_t v18 = v39;
  uint64_t v41 = v12;
  uint64_t v19 = sub_1DE8E1950();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v27 = v15;
    uint64_t v28 = sub_1DE8E1760();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
    *uint64_t v30 = &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome;
    sub_1DE8E1860();
    sub_1DE8E1740();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v11);
LABEL_7:
    uint64_t v31 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  if (*(unsigned char *)(v19 + 32))
  {
    LOBYTE(v44) = 1;
    sub_1DE84DBF8();
    sub_1DE8E1850();
    sub_1DE84DD48();
    sub_1DE8E1930();
    (*(void (**)(char *, char *))(v38 + 8))(v6, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v11);
    uint64_t v21 = v44;
    uint64_t v20 = v45;
    uint64_t v22 = v46;
    long long v23 = v47;
    long long v24 = v48;
    uint64_t v25 = v49;
    char v26 = v50 | 0x80;
  }
  else
  {
    LOBYTE(v44) = 0;
    sub_1DE84DCA0();
    sub_1DE8E1850();
    LOBYTE(v42) = 0;
    sub_1DE84DB50();
    sub_1DE8E1930();
    uint64_t v39 = v15;
    uint64_t v21 = v44;
    uint64_t v20 = v45;
    uint64_t v33 = v46;
    char v51 = 1;
    sub_1DE84DD9C();
    sub_1DE8E1930();
    uint64_t v34 = v41;
    uint64_t v38 = v33;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
    uint64_t v22 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v11);
    uint64_t v25 = 0;
    char v26 = 0;
    long long v23 = v42;
    long long v24 = v43;
  }
  uint64_t v31 = (uint64_t)v40;
  uint64_t v35 = v36;
  *uint64_t v36 = v21;
  v35[1] = v20;
  v35[2] = v22;
  *(_OWORD *)(v35 + 3) = v23;
  *(_OWORD *)(v35 + 5) = v24;
  v35[7] = v25;
  *((unsigned char *)v35 + 64) = v26;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

uint64_t sub_1DE845EF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.init(from:)(a1, a2);
}

uint64_t sub_1DE845F0C(void *a1)
{
  return ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.encode(to:)(a1);
}

uint64_t sub_1DE845F2C()
{
  unint64_t v1 = 0xD00000000000001BLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656E696C64616568;
  }
}

uint64_t sub_1DE845F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84FDC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE845FB4()
{
  return 0;
}

void sub_1DE845FC0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE845FCC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DDF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE846008(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DDF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE846044()
{
  return 0;
}

uint64_t sub_1DE846050()
{
  return 0;
}

void sub_1DE84605C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE846068(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DE98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8460A4(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DE98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8460E0()
{
  return 0;
}

uint64_t sub_1DE8460EC()
{
  return 0;
}

void sub_1DE8460F8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE846104(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DE44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE846140(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DE44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE84617C()
{
  return 1;
}

uint64_t sub_1DE84618C()
{
  return 12383;
}

uint64_t sub_1DE846198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE846218()
{
  return 0;
}

void sub_1DE846224(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE846230(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DEEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE84626C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DEEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.ClusteringEvent.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96F8);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v37 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96F0);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA96E8);
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v34 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9650);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  uint64_t v32 = v1[1];
  uint64_t v33 = v18;
  uint64_t v19 = v1[2];
  uint64_t v30 = v1[3];
  uint64_t v31 = v19;
  uint64_t v29 = v1[4];
  uint64_t v28 = v1[5];
  uint64_t v27 = v1[6];
  uint64_t v26 = v1[7];
  unsigned int v20 = *((unsigned __int8 *)v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84DDF0();
  sub_1DE8E1C10();
  if (v20 > 0xEF)
  {
    LOBYTE(v42) = 1;
    sub_1DE84DE98();
    sub_1DE8E1970();
    uint64_t v22 = v40;
    uint64_t v21 = v41;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  if ((v20 & 0xF0) == 0x70)
  {
    LOBYTE(v42) = 2;
    sub_1DE84DE44();
    uint64_t v9 = v37;
    sub_1DE8E1970();
    uint64_t v22 = v38;
    uint64_t v21 = v39;
    goto LABEL_5;
  }
  LOBYTE(v42) = 0;
  sub_1DE84DEEC();
  long long v24 = v34;
  sub_1DE8E1970();
  uint64_t v42 = v33;
  uint64_t v43 = v32;
  uint64_t v44 = v31;
  uint64_t v45 = v30;
  uint64_t v46 = v29;
  uint64_t v47 = v28;
  uint64_t v48 = v27;
  uint64_t v49 = v26;
  char v50 = v20;
  sub_1DE84DF40();
  uint64_t v25 = v36;
  sub_1DE8E1A40();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t ClusteringJournal.Result.ClusteringEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BD98);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDA0);
  uint64_t v44 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDA8);
  uint64_t v41 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDB0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1DE84DDF0();
  uint64_t v19 = v52;
  sub_1DE8E1BF0();
  if (v19) {
    goto LABEL_9;
  }
  uint64_t v38 = v9;
  uint64_t v21 = v44;
  unsigned int v20 = v45;
  uint64_t v52 = v14;
  uint64_t v22 = sub_1DE8E1950();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v25 = sub_1DE8E1760();
    swift_allocError();
    uint64_t v26 = v13;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
    *uint64_t v28 = &type metadata for ClusteringJournal.Result.ClusteringEvent;
    sub_1DE8E1860();
    sub_1DE8E1740();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v26);
LABEL_9:
    uint64_t v35 = (uint64_t)v46;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  if (*(unsigned char *)(v22 + 32))
  {
    if (*(unsigned char *)(v22 + 32) == 1)
    {
      LOBYTE(v47) = 1;
      sub_1DE84DE98();
      sub_1DE8E1850();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v13);
      long long v23 = 0uLL;
      char v24 = -16;
    }
    else
    {
      LOBYTE(v47) = 2;
      sub_1DE84DE44();
      sub_1DE8E1850();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v13);
      long long v23 = 0uLL;
      char v24 = 112;
    }
    long long v32 = 0uLL;
    long long v33 = 0uLL;
    long long v34 = 0uLL;
    uint64_t v35 = (uint64_t)v46;
    uint64_t v30 = v43;
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_1DE84DEEC();
    uint64_t v29 = v12;
    sub_1DE8E1850();
    uint64_t v30 = v43;
    sub_1DE84DF94();
    uint64_t v31 = v38;
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v13);
    long long v23 = v47;
    long long v32 = v48;
    long long v33 = v49;
    long long v34 = v50;
    char v24 = v51;
    uint64_t v35 = (uint64_t)v46;
  }
  *(_OWORD *)uint64_t v30 = v23;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = v33;
  *(_OWORD *)(v30 + 48) = v34;
  *(unsigned char *)(v30 + 64) = v24;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_1DE846CB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClusteringJournal.Result.ClusteringEvent.init(from:)(a1, a2);
}

uint64_t sub_1DE846CC8(void *a1)
{
  return ClusteringJournal.Result.ClusteringEvent.encode(to:)(a1);
}

uint64_t sub_1DE846CE8()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000017;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_1DE846D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE84FF10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE846D74()
{
  return 0;
}

void sub_1DE846D80(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE846D8C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DFE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE846DC8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84DFE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE846E0C()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 0x73746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x536D756D696E696DLL;
  }
}

uint64_t sub_1DE846E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE85005C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE846E98()
{
  return 0;
}

void sub_1DE846EA4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE846EB0(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E0E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE846EEC(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E0E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DE846F30()
{
  unint64_t result = 0x536D756D696E696DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x73746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE846FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8501BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE846FF8()
{
  return 0;
}

void sub_1DE847004(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE847010(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E03C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE84704C(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E03C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE847088()
{
  return 1;
}

uint64_t sub_1DE847094()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8470DC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE84711C()
{
  return 0x73746E657665;
}

uint64_t sub_1DE847130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE8471C0()
{
  return 0;
}

void sub_1DE8471CC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8471D8(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E138();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE847214(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E138();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.Outcome.encode(to:)(void *a1)
{
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9750);
  uint64_t v32 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36, v3);
  uint64_t v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9748);
  uint64_t v31 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34, v5);
  char v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9740);
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9738);
  uint64_t v37 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v38 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v29 = v1[2];
  uint64_t v30 = v15;
  uint64_t v28 = v1[3];
  int v16 = *((unsigned __int8 *)v1 + 32);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1;
  uint64_t v19 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_1DE84DFE8();
  sub_1DE8E1C10();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v41) = 1;
      sub_1DE84E0E4();
      uint64_t v20 = v12;
      sub_1DE8E1970();
      LOBYTE(v41) = 0;
      uint64_t v21 = v39;
      uint64_t v22 = v34;
      sub_1DE8E1A30();
      if (!v21)
      {
        LOBYTE(v41) = 1;
        sub_1DE8E1A30();
        uint64_t v41 = v29;
        char v40 = 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95A0);
        sub_1DE84BCE8(&qword_1EBEA95A8, &qword_1EBEA95A0, (void (*)(void))sub_1DE84E090);
        sub_1DE8E1A40();
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v22);
    }
    else
    {
      LOBYTE(v41) = 2;
      sub_1DE84E03C();
      char v24 = v35;
      uint64_t v20 = v12;
      sub_1DE8E1970();
      LOBYTE(v41) = 0;
      uint64_t v25 = v39;
      uint64_t v26 = v36;
      sub_1DE8E1A30();
      if (!v25)
      {
        LOBYTE(v41) = 1;
        sub_1DE8E1A30();
        LOBYTE(v41) = 2;
        sub_1DE8E1A30();
        uint64_t v41 = v28;
        char v40 = 3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95A0);
        sub_1DE84BCE8(&qword_1EBEA95A8, &qword_1EBEA95A0, (void (*)(void))sub_1DE84E090);
        sub_1DE8E1A40();
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v26);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v20);
  }
  else
  {
    LOBYTE(v41) = 0;
    sub_1DE84E138();
    sub_1DE8E1970();
    uint64_t v41 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95A0);
    sub_1DE84BCE8(&qword_1EBEA95A8, &qword_1EBEA95A0, (void (*)(void))sub_1DE84E090);
    sub_1DE8E1A40();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v12);
  }
}

uint64_t ClusteringJournal.Result.Outcome.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDC8);
  uint64_t v51 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55, v3);
  uint64_t v54 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDD0);
  uint64_t v49 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53, v5);
  char v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDD8);
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDE0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  int v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1DE84DFE8();
  uint64_t v18 = v57;
  sub_1DE8E1BF0();
  if (v18) {
    goto LABEL_10;
  }
  uint64_t v47 = v8;
  long long v48 = v7;
  uint64_t v19 = v53;
  uint64_t v20 = v54;
  uint64_t v57 = v13;
  uint64_t v21 = sub_1DE8E1950();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_1DE8E1760();
    swift_allocError();
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
    *uint64_t v27 = &type metadata for ClusteringJournal.Result.Outcome;
    sub_1DE8E1860();
    sub_1DE8E1740();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x1E4FBBA70], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v12);
LABEL_10:
    uint64_t v42 = (uint64_t)v56;
    return __swift_destroy_boxed_opaque_existential_1(v42);
  }
  v46[1] = v21;
  int v22 = *(unsigned __int8 *)(v21 + 32);
  if (*(unsigned char *)(v21 + 32))
  {
    if (v22 == 1)
    {
      LOBYTE(v59) = 1;
      sub_1DE84E0E4();
      sub_1DE8E1850();
      uint64_t v23 = v52;
      LOBYTE(v59) = 0;
      uint64_t v24 = v19;
      uint64_t v33 = sub_1DE8E1920();
      uint64_t v34 = v23;
      LOBYTE(v59) = 1;
      uint64_t v35 = sub_1DE8E1920();
      uint64_t v36 = v49;
      uint64_t v50 = v35;
      uint64_t v55 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95A0);
      char v58 = 2;
      uint64_t v38 = v48;
      sub_1DE84BCE8(&qword_1EAC0BDE8, &qword_1EBEA95A0, (void (*)(void))sub_1DE84E18C);
      sub_1DE8E1930();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v12);
      uint64_t v39 = v34;
      uint64_t v40 = 0;
      uint64_t v41 = v59;
      uint64_t v43 = v55;
      uint64_t v42 = (uint64_t)v56;
      uint64_t v44 = v50;
    }
    else
    {
      LOBYTE(v59) = 2;
      sub_1DE84E03C();
      uint64_t v29 = v20;
      sub_1DE8E1850();
      uint64_t v39 = v52;
      LOBYTE(v59) = 0;
      uint64_t v30 = v29;
      uint64_t v31 = sub_1DE8E1920();
      uint64_t v32 = v57;
      uint64_t v43 = v31;
      LOBYTE(v59) = 1;
      uint64_t v50 = sub_1DE8E1920();
      LOBYTE(v59) = 2;
      uint64_t v53 = sub_1DE8E1920();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95A0);
      char v58 = 3;
      sub_1DE84BCE8(&qword_1EAC0BDE8, &qword_1EBEA95A0, (void (*)(void))sub_1DE84E18C);
      uint64_t v45 = v55;
      sub_1DE8E1930();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v12);
      uint64_t v40 = v59;
      uint64_t v42 = (uint64_t)v56;
      uint64_t v44 = v50;
      uint64_t v41 = v53;
    }
  }
  else
  {
    LOBYTE(v59) = 0;
    sub_1DE84E138();
    sub_1DE8E1850();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95A0);
    sub_1DE84BCE8(&qword_1EAC0BDE8, &qword_1EBEA95A0, (void (*)(void))sub_1DE84E18C);
    uint64_t v28 = v47;
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v12);
    uint64_t v44 = 0;
    uint64_t v41 = 0;
    uint64_t v40 = 0;
    uint64_t v43 = v59;
    uint64_t v42 = (uint64_t)v56;
    uint64_t v39 = v52;
  }
  *(void *)uint64_t v39 = v43;
  *(void *)(v39 + 8) = v44;
  *(void *)(v39 + 16) = v41;
  *(void *)(v39 + 24) = v40;
  *(unsigned char *)(v39 + 32) = v22;
  return __swift_destroy_boxed_opaque_existential_1(v42);
}

uint64_t sub_1DE8480D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClusteringJournal.Result.Outcome.init(from:)(a1, a2);
}

uint64_t sub_1DE8480EC(void *a1)
{
  return ClusteringJournal.Result.Outcome.encode(to:)(a1);
}

uint64_t ClusteringJournal.Result.group.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1DE84E1E0(v2, v3, v4);
}

uint64_t ClusteringJournal.Result.outcome.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1DE84E1F8(v2, v3, v4, v5, v6);
}

uint64_t ClusteringJournal.Result.requirements.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 160);
  *(void *)a1 = *(void *)(v1 + 80);
  *(void *)(a1 + 8) = v2;
  long long v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 144);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ClusteringJournal.Result.candidates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8481C0()
{
  uint64_t result = 0x70756F7267;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D6F6374756FLL;
      break;
    case 2:
      uint64_t result = 0x6D65726975716572;
      break;
    case 3:
      uint64_t result = 0x74616469646E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE848258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE850378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE848280()
{
  return 0;
}

void sub_1DE84828C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE848298(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E260();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8482D4(uint64_t a1)
{
  unint64_t v2 = sub_1DE84E260();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.Result.deinit()
{
  sub_1DE84E220(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1DE84E238(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClusteringJournal.Result.__deallocating_deinit()
{
  sub_1DE84E220(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1DE84E238(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ClusteringJournal.Result.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84E260();
  sub_1DE8E1C10();
  char v10 = *(unsigned char *)(v3 + 32);
  long long v19 = *(_OWORD *)(v3 + 16);
  LOBYTE(v20) = v10;
  char v26 = 0;
  sub_1DE84E2B4();
  sub_1DE8E1A40();
  if (!v2)
  {
    char v11 = *(unsigned char *)(v3 + 72);
    long long v12 = *(_OWORD *)(v3 + 56);
    long long v19 = *(_OWORD *)(v3 + 40);
    long long v20 = v12;
    LOBYTE(v21) = v11;
    char v26 = 1;
    sub_1DE84E308();
    sub_1DE8E1A40();
    uint64_t v13 = *(void *)(v3 + 88);
    uint64_t v14 = *(void *)(v3 + 128);
    uint64_t v15 = *(void *)(v3 + 136);
    uint64_t v16 = *(void *)(v3 + 160);
    *(void *)&long long v19 = *(void *)(v3 + 80);
    *((void *)&v19 + 1) = v13;
    long long v17 = *(_OWORD *)(v3 + 112);
    long long v20 = *(_OWORD *)(v3 + 96);
    long long v21 = v17;
    uint64_t v22 = v14;
    uint64_t v23 = v15;
    long long v24 = *(_OWORD *)(v3 + 144);
    uint64_t v25 = v16;
    char v26 = 2;
    sub_1DE84E35C();
    sub_1DE8E1A40();
    *(void *)&long long v19 = *(void *)(v3 + 168);
    char v26 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9578);
    sub_1DE84E3B0();
    sub_1DE8E19D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ClusteringJournal.Result.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ClusteringJournal.Result.init(from:)(a1);
  return v2;
}

uint64_t ClusteringJournal.Result.init(from:)(void *a1)
{
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BDF8);
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE84E260();
  sub_1DE8E1BF0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v4;
    char v28 = 0;
    sub_1DE84E480();
    uint64_t v9 = v20;
    sub_1DE8E1930();
    char v10 = v22;
    *(_OWORD *)(v1 + 16) = v21;
    *(unsigned char *)(v1 + 32) = v10;
    char v28 = 1;
    sub_1DE84E4D4();
    sub_1DE8E1930();
    char v11 = v23;
    long long v12 = v22;
    *(_OWORD *)(v1 + 40) = v21;
    *(_OWORD *)(v1 + 56) = v12;
    *(unsigned char *)(v1 + 72) = v11;
    char v28 = 2;
    sub_1DE84E528();
    sub_1DE8E1930();
    uint64_t v13 = *((void *)&v21 + 1);
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    uint64_t v16 = v27;
    *(void *)(v1 + 80) = v21;
    *(void *)(v1 + 88) = v13;
    long long v17 = v23;
    *(_OWORD *)(v1 + 96) = v22;
    *(_OWORD *)(v1 + 112) = v17;
    *(void *)(v1 + 128) = v14;
    *(void *)(v1 + 136) = v15;
    *(_OWORD *)(v1 + 144) = v26;
    *(void *)(v1 + 160) = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9578);
    char v28 = 3;
    sub_1DE84E57C();
    sub_1DE8E18C0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(void *)(v1 + 168) = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1DE848A4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = ClusteringJournal.Result.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1DE848AA4(void *a1)
{
  return ClusteringJournal.Result.encode(to:)(a1);
}

uint64_t ClusteringJournal.inventory.getter@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t ClusteringJournal.inventory.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  *(void *)(v1 + 144) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t (*ClusteringJournal.inventory.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t ClusteringJournal.results.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClusteringJournal.results.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ClusteringJournal.results.modify())()
{
  return j__swift_endAccess_0;
}

uint64_t ClusteringJournal.configuration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 160);
  memcpy(__dst, v3, sizeof(__dst));
  memcpy(a1, v3, 0x768uLL);
  return sub_1DE84E628((uint64_t)__dst);
}

uint64_t ClusteringJournal.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_date;
  uint64_t v4 = sub_1DE8E1350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

Swift::Void __swiftcall ClusteringJournal.startedBuildingCandidateGroups()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    swift_beginAccess();
    if (*(void *)(v0 + 16))
    {
      uint64_t v1 = qword_1EBEA80A8[0];
      swift_bridgeObjectRetain();
      if (v1 != -1) {
        swift_once();
      }
      id v2 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1DE8E25E0;
      type metadata accessor for ClusteringJournal.Result();
      uint64_t v4 = MEMORY[0x1E4FBB1A0];
      uint64_t v5 = sub_1DE8E13D0();
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      *(void *)(v3 + 56) = v4;
      *(void *)(v3 + 64) = sub_1DE819640();
      *(void *)(v3 + 32) = v5;
      *(void *)(v3 + 40) = v7;
      sub_1DE8E13A0();
    }
    else
    {
      *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
    }
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall ClusteringJournal.finishedBuildingCandidateGroups(selectedTag:)(Swift::String selectedTag)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode);
  if (v2 != 2)
  {
    uint64_t v3 = v1;
    object = selectedTag._object;
    uint64_t countAndFlagsBits = selectedTag._countAndFlagsBits;
    uint64_t v6 = (void *)(v1 + 16);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v1 + 16);
    if (v7)
    {
      uint64_t v8 = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      if (v8)
      {
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1DE821D84(countAndFlagsBits, (uint64_t)object);
        if (v10)
        {
          uint64_t v11 = *(void *)(*(void *)(v7 + 56) + 8 * v9);
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v38 = v6;
          if (v2)
          {
            swift_bridgeObjectRetain();
            uint64_t v39 = sub_1DE850700(v7, countAndFlagsBits, (uint64_t)object);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v39 = 0;
          }
          uint64_t v20 = *(void *)(v11 + 16);
          uint64_t v31 = *(void *)(v11 + 24);
          uint64_t v21 = *(void *)(v11 + 40);
          uint64_t v22 = *(void *)(v11 + 56);
          uint64_t v32 = *(void *)(v11 + 64);
          uint64_t v33 = *(void *)(v11 + 48);
          uint64_t v23 = *(void *)(v11 + 80);
          uint64_t v40 = *(void *)(v11 + 88);
          long long v36 = *(_OWORD *)(v11 + 112);
          long long v37 = *(_OWORD *)(v11 + 96);
          uint64_t v24 = *(void *)(v11 + 128);
          uint64_t v25 = *(void *)(v11 + 136);
          uint64_t v26 = *(void *)(v11 + 160);
          uint64_t v34 = *(void *)(v11 + 152);
          uint64_t v35 = *(void *)(v11 + 144);
          unsigned __int8 v27 = *(unsigned char *)(v11 + 32);
          char v28 = *(unsigned char *)(v11 + 72);
          type metadata accessor for ClusteringJournal.Result();
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = v20;
          *(void *)(v29 + 24) = v31;
          *(unsigned char *)(v29 + 32) = v27;
          *(void *)(v29 + 40) = v21;
          *(void *)(v29 + 48) = v33;
          *(void *)(v29 + 56) = v22;
          *(void *)(v29 + 64) = v32;
          *(unsigned char *)(v29 + 72) = v28;
          *(void *)(v29 + 80) = v23;
          *(void *)(v29 + 88) = v40;
          *(_OWORD *)(v29 + 96) = v37;
          *(_OWORD *)(v29 + 112) = v36;
          *(void *)(v29 + 128) = v24;
          *(void *)(v29 + 136) = v25;
          *(void *)(v29 + 144) = v35;
          *(void *)(v29 + 152) = v34;
          *(void *)(v29 + 160) = v26;
          *(void *)(v29 + 168) = v39;
          swift_beginAccess();
          sub_1DE84E1E0(v20, v31, v27);
          sub_1DE84E1F8(v21, v33, v22, v32, v28);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v30 = swift_bridgeObjectRetain();
          MEMORY[0x1E01D4080](v30);
          if (*(void *)((*(void *)(v3 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
            sub_1DE8E15A0();
          sub_1DE8E15D0();
          sub_1DE8E1580();
          swift_endAccess();
          swift_release();
          *uint64_t v38 = 0;
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      if (qword_1EBEA80A8[0] != -1) {
        swift_once();
      }
      id v12 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1DE8E31B0;
      uint64_t v15 = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v16 = sub_1DE819640();
      *(void *)(v14 + 64) = v16;
      *(void *)(v14 + 32) = countAndFlagsBits;
      *(void *)(v14 + 40) = object;
      type metadata accessor for ClusteringJournal.Result();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1DE8E13D0();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      *(void *)(v14 + 96) = v15;
      *(void *)(v14 + 104) = v16;
      *(void *)(v14 + 72) = v17;
      *(void *)(v14 + 80) = v19;
    }
    else
    {
      if (qword_1EBEA80A8[0] != -1) {
        swift_once();
      }
      id v12 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1DE8E25E0;
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v13 + 64) = sub_1DE819640();
      *(void *)(v13 + 32) = countAndFlagsBits;
      *(void *)(v13 + 40) = object;
      swift_bridgeObjectRetain();
    }
    sub_1DE8E13A0();

LABEL_15:
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall ClusteringJournal.failedToFindCandidateGroup()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    swift_beginAccess();
    *(void *)(v0 + 16) = 0;
    swift_bridgeObjectRelease();
  }
}

uint64_t ClusteringJournal.startedClustering(group:)(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    uint64_t v3 = *(void *)result;
    uint64_t v2 = *(void *)(result + 8);
    unsigned __int8 v4 = *(unsigned char *)(result + 16);
    uint64_t v6 = *(void *)(v1 + 24);
    uint64_t v5 = *(void *)(v1 + 32);
    int v7 = *(unsigned __int8 *)(v1 + 40);
    if (v7 == 255)
    {
      *(void *)(v1 + 24) = v3;
      *(void *)(v1 + 32) = v2;
      *(unsigned char *)(v1 + 40) = v4;
      sub_1DE84E1E0(v3, v2, v4);
      sub_1DE8508C8(v6, v5, 0xFFu);
      *(void *)(v1 + 48) = MEMORY[0x1E4FBC860];
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE84E1E0(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
      if (qword_1EBEA80A8[0] != -1) {
        swift_once();
      }
      id v11 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1DE8E31B0;
      sub_1DE8E17B0();
      uint64_t v9 = MEMORY[0x1E4FBB1A0];
      *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v10 = sub_1DE819640();
      *(void *)(v8 + 64) = v10;
      *(void *)(v8 + 32) = 0;
      *(void *)(v8 + 40) = 0xE000000000000000;
      sub_1DE8E17B0();
      sub_1DE8508C8(v6, v5, v7);
      *(void *)(v8 + 96) = v9;
      *(void *)(v8 + 104) = v10;
      *(void *)(v8 + 72) = 0;
      *(void *)(v8 + 80) = 0xE000000000000000;
      sub_1DE8E13A0();

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *ClusteringJournal.set(clusteringRequirements:)(void *result)
{
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    uint64_t v2 = result[1];
    uint64_t v4 = result[2];
    uint64_t v3 = result[3];
    uint64_t v6 = result[4];
    uint64_t v5 = result[5];
    uint64_t v7 = result[6];
    uint64_t v8 = result[7];
    uint64_t v9 = result[8];
    uint64_t v11 = result[9];
    uint64_t v10 = result[10];
    uint64_t v13 = v1[7];
    uint64_t v12 = v1[8];
    if (v12)
    {
      uint64_t v14 = qword_1EBEA80A8[0];
      uint64_t v15 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 != -1) {
        swift_once();
      }
      id v18 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1DE8E31B0;
      sub_1DE8E17B0();
      *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v17 = sub_1DE819640();
      *(void *)(v16 + 64) = v17;
      *(void *)(v16 + 32) = 0;
      *(void *)(v16 + 40) = 0xE000000000000000;
      sub_1DE8E17B0();
      sub_1DE8508DC(v13, v15);
      *(void *)(v16 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v16 + 104) = v17;
      *(void *)(v16 + 72) = 0;
      *(void *)(v16 + 80) = 0xE000000000000000;
      sub_1DE8E13A0();

      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      v1[7] = *result;
      v1[8] = v2;
      v1[9] = v4;
      v1[10] = v3;
      v1[11] = v6;
      v1[12] = v5;
      v1[13] = v7;
      v1[14] = v8;
      v1[15] = v9;
      v1[16] = v11;
      v1[17] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return (void *)sub_1DE8508DC(v13, 0);
    }
  }
  return result;
}

uint64_t ClusteringJournal.record(event:)(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    uint64_t v3 = *(void *)result;
    uint64_t v2 = *(void *)(result + 8);
    uint64_t v5 = *(void *)(result + 16);
    uint64_t v4 = *(void *)(result + 24);
    uint64_t v7 = *(void *)(result + 32);
    uint64_t v6 = *(void *)(result + 40);
    unsigned __int8 v8 = *(unsigned char *)(result + 64);
    uint64_t v9 = *(void *)(v1 + 48);
    uint64_t v16 = *(void *)(result + 48);
    if (v9)
    {
      uint64_t v15 = *(void *)(result + 56);
      sub_1DE85092C(v3, v2, v5, v4, v7, v6, *(void *)(result + 48), v15, v8);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v1 + 48) = v9;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DE83A70C(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
        uint64_t v9 = result;
        *(void *)(v1 + 48) = result;
      }
      unint64_t v11 = *(void *)(v9 + 16);
      unint64_t v10 = *(void *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DE83A70C((char *)(v10 > 1), v11 + 1, 1, (char *)v9);
        uint64_t v9 = result;
        *(void *)(v1 + 48) = result;
      }
      *(void *)(v9 + 16) = v11 + 1;
      unint64_t v12 = v9 + 72 * v11;
      *(void *)(v12 + 32) = v3;
      *(void *)(v12 + 40) = v2;
      *(void *)(v12 + 48) = v5;
      *(void *)(v12 + 56) = v4;
      *(void *)(v12 + 64) = v7;
      *(void *)(v12 + 72) = v6;
      *(void *)(v12 + 80) = v16;
      *(void *)(v12 + 88) = v15;
      *(unsigned char *)(v12 + 96) = v8;
    }
    else
    {
      if (qword_1EBEA80A8[0] != -1) {
        swift_once();
      }
      id v13 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1DE8E25E0;
      sub_1DE8E17B0();
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 64) = sub_1DE819640();
      *(void *)(v14 + 32) = 0;
      *(void *)(v14 + 40) = 0xE000000000000000;
      sub_1DE8E13A0();

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DE849AD8(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    uint64_t v2 = v1;
    uint64_t v4 = (void *)(v1 + 24);
    uint64_t v3 = *(void *)(v1 + 24);
    int v5 = *(unsigned __int8 *)(v1 + 40);
    if (v5 == 255 || (uint64_t v7 = *(void *)(v1 + 64), v6 = (_OWORD *)(v1 + 56), !v7))
    {
      if (qword_1EBEA80A8 != -1) {
        swift_once();
      }
      id v61 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      sub_1DE8E13A0();
    }
    else
    {
      uint64_t v50 = *(void *)(a1 + 8);
      uint64_t v51 = *(void *)(a1 + 16);
      uint64_t v52 = *(void *)(a1 + 24);
      char v53 = *(unsigned char *)(a1 + 32);
      uint64_t v8 = *(void *)(v1 + 32);
      uint64_t v47 = *(void *)a1;
      uint64_t v48 = *(void *)(v1 + 80);
      uint64_t v56 = *(void *)(v1 + 56);
      uint64_t v57 = *(void *)(v1 + 88);
      uint64_t v58 = *(void *)(v1 + 96);
      uint64_t v59 = *(void *)(v1 + 72);
      id v60 = *(id *)(v1 + 104);
      uint64_t v49 = *(void *)(v1 + 112);
      uint64_t v9 = *(void *)(v1 + 136);
      uint64_t v54 = *(void *)(v1 + 128);
      uint64_t v55 = *(void *)(v1 + 120);
      unint64_t v10 = (uint64_t *)(v1 + 16);
      swift_beginAccess();
      uint64_t v11 = *(void *)(v1 + 16);
      if (v11)
      {
        if (v5 == 1)
        {
          uint64_t v20 = *(void *)(v11 + 16);
          sub_1DE855FD0(v3, v8, 1u);
          sub_1DE855FD0(v3, v8, 1u);
          uint64_t v46 = v9;
          if (v20)
          {
            sub_1DE855FD0(v3, v8, 1u);
            uint64_t v22 = v48;
            uint64_t v21 = v49;
            sub_1DE855FE4(v56, v7);
            sub_1DE821D84(v3, v8);
            char v24 = v23;
            sub_1DE8508C8(v3, v8, 1u);
            if (v24)
            {
              sub_1DE8508C8(v3, v8, 1u);
              sub_1DE8508DC(v56, v7);
              uint64_t v17 = v3;
              if (qword_1EBEA80A8 == -1)
              {
LABEL_24:
                id v25 = (id)qword_1EBEA9228;
                sub_1DE8E16A0();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
                uint64_t v26 = swift_allocObject();
                *(_OWORD *)(v26 + 16) = xmmword_1DE8E25E0;
                *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
                *(void *)(v26 + 64) = sub_1DE819640();
                *(void *)(v26 + 32) = v17;
                *(void *)(v26 + 40) = v8;
                sub_1DE8E13A0();

                swift_bridgeObjectRelease();
LABEL_40:
                uint64_t v40 = *(void *)(v2 + 24);
                uint64_t v41 = *(void *)(v2 + 32);
                *uint64_t v4 = 0;
                v4[1] = 0;
                unsigned __int8 v42 = *(unsigned char *)(v2 + 40);
                *(unsigned char *)(v2 + 40) = -1;
                sub_1DE8508C8(v40, v41, v42);
                *(void *)(v2 + 48) = 0;
                swift_bridgeObjectRelease();
                uint64_t v43 = *(void *)(v2 + 56);
                uint64_t v44 = *(void *)(v2 + 64);
                *uint64_t v6 = 0u;
                *(_OWORD *)(v2 + 72) = 0u;
                *(_OWORD *)(v2 + 88) = 0u;
                *(_OWORD *)(v2 + 104) = 0u;
                *(_OWORD *)(v2 + 120) = 0u;
                *(void *)(v2 + 136) = 0;
                sub_1DE8508DC(v43, v44);
                return;
              }
LABEL_42:
              swift_once();
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v22 = v48;
            uint64_t v21 = v49;
            sub_1DE855FE4(v56, v7);
          }
          type metadata accessor for ClusteringJournal.Result();
          uint64_t v33 = swift_allocObject();
          uint64_t v34 = v21;
          uint64_t v35 = v33;
          *(void *)(v33 + 16) = v3;
          *(void *)(v33 + 24) = v8;
          *(unsigned char *)(v33 + 32) = 1;
          *(void *)(v33 + 40) = v47;
          *(void *)(v33 + 48) = v50;
          *(void *)(v33 + 56) = v51;
          *(void *)(v33 + 64) = v52;
          *(unsigned char *)(v33 + 72) = v53;
          *(void *)(v33 + 80) = v56;
          *(void *)(v33 + 88) = v7;
          *(void *)(v33 + 96) = v59;
          *(void *)(v33 + 104) = v22;
          *(void *)(v33 + 112) = v57;
          *(void *)(v33 + 120) = v58;
          *(void *)(v33 + 128) = v60;
          *(void *)(v33 + 136) = v34;
          *(void *)(v33 + 144) = v55;
          *(void *)(v33 + 152) = v54;
          *(void *)(v33 + 160) = v46;
          *(void *)(v33 + 168) = 0;
          swift_beginAccess();
          if (*v10)
          {
            sub_1DE855FD0(v3, v8, 1u);
            sub_1DE84E1F8(v47, v50, v51, v52, v53);
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v63 = *v10;
            *unint64_t v10 = 0x8000000000000000;
            sub_1DE829788(v35, v3, v8, isUniquelyReferenced_nonNull_native);
            *unint64_t v10 = v63;
            swift_bridgeObjectRelease();
            sub_1DE8508C8(v3, v8, 1u);
            swift_endAccess();
          }
          else
          {
            swift_endAccess();
            sub_1DE84E1F8(v47, v50, v51, v52, v53);
          }
          swift_release();
          uint64_t v37 = v3;
          uint64_t v38 = v8;
          unsigned __int8 v39 = 1;
LABEL_39:
          sub_1DE8508C8(v37, v38, v39);
          goto LABEL_40;
        }
        if (!v5)
        {
          uint64_t v12 = *(void *)(v11 + 16);
          sub_1DE855FD0(v3, v8, 0);
          sub_1DE855FD0(v3, v8, 0);
          uint64_t v45 = v9;
          if (v12)
          {
            sub_1DE855FD0(v3, v8, 0);
            uint64_t v14 = v48;
            uint64_t v13 = v49;
            sub_1DE855FE4(v56, v7);
            sub_1DE821D84(v3, v8);
            char v16 = v15;
            sub_1DE8508C8(v3, v8, 0);
            if (v16)
            {
              sub_1DE8508C8(v3, v8, 0);
              sub_1DE8508DC(v56, v7);
              uint64_t v17 = v3;
              if (qword_1EBEA80A8 == -1) {
                goto LABEL_24;
              }
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t v14 = v48;
            uint64_t v13 = v49;
            sub_1DE855FE4(v56, v7);
          }
          type metadata accessor for ClusteringJournal.Result();
          uint64_t v29 = swift_allocObject();
          uint64_t v30 = v13;
          uint64_t v31 = v29;
          *(void *)(v29 + 16) = v3;
          *(void *)(v29 + 24) = v8;
          *(unsigned char *)(v29 + 32) = 0;
          *(void *)(v29 + 40) = v47;
          *(void *)(v29 + 48) = v50;
          *(void *)(v29 + 56) = v51;
          *(void *)(v29 + 64) = v52;
          *(unsigned char *)(v29 + 72) = v53;
          *(void *)(v29 + 80) = v56;
          *(void *)(v29 + 88) = v7;
          *(void *)(v29 + 96) = v59;
          *(void *)(v29 + 104) = v14;
          *(void *)(v29 + 112) = v57;
          *(void *)(v29 + 120) = v58;
          *(void *)(v29 + 128) = v60;
          *(void *)(v29 + 136) = v30;
          *(void *)(v29 + 144) = v55;
          *(void *)(v29 + 152) = v54;
          *(void *)(v29 + 160) = v45;
          *(void *)(v29 + 168) = 0;
          swift_beginAccess();
          if (*v10)
          {
            sub_1DE855FD0(v3, v8, 0);
            sub_1DE84E1F8(v47, v50, v51, v52, v53);
            swift_retain();
            char v32 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v62 = *v10;
            *unint64_t v10 = 0x8000000000000000;
            sub_1DE829788(v31, v3, v8, v32);
            *unint64_t v10 = v62;
            swift_bridgeObjectRelease();
            sub_1DE8508C8(v3, v8, 0);
            swift_endAccess();
          }
          else
          {
            swift_endAccess();
            sub_1DE84E1F8(v47, v50, v51, v52, v53);
          }
          swift_release();
          uint64_t v37 = v3;
          uint64_t v38 = v8;
          unsigned __int8 v39 = 0;
          goto LABEL_39;
        }
        sub_1DE84E1E0(v3, v8, v5);
        if (qword_1EBEA80A8 == -1)
        {
LABEL_28:
          id v27 = (id)qword_1EBEA9228;
          sub_1DE8E16A0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
          uint64_t v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = xmmword_1DE8E25E0;
          sub_1DE8E17B0();
          sub_1DE8508C8(v3, v8, v5);
          *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v28 + 64) = sub_1DE819640();
          *(void *)(v28 + 32) = 0;
          *(void *)(v28 + 40) = 0xE000000000000000;
          sub_1DE8E13A0();

          swift_bridgeObjectRelease();
          return;
        }
LABEL_41:
        swift_once();
        goto LABEL_28;
      }
      if (v5 != 2 || v8 | v3)
      {
        sub_1DE84E1E0(v3, v8, v5);
        if (qword_1EBEA80A8 == -1) {
          goto LABEL_28;
        }
        goto LABEL_41;
      }
      type metadata accessor for ClusteringJournal.Result();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      *(void *)(v18 + 24) = 0;
      *(unsigned char *)(v18 + 32) = 2;
      *(void *)(v18 + 40) = v47;
      *(void *)(v18 + 48) = v50;
      *(void *)(v18 + 56) = v51;
      *(void *)(v18 + 64) = v52;
      *(unsigned char *)(v18 + 72) = v53;
      *(void *)(v18 + 80) = v56;
      *(void *)(v18 + 88) = v7;
      *(void *)(v18 + 96) = v59;
      *(void *)(v18 + 104) = v48;
      *(void *)(v18 + 112) = v57;
      *(void *)(v18 + 120) = v58;
      *(void *)(v18 + 128) = v60;
      *(void *)(v18 + 136) = v49;
      *(void *)(v18 + 144) = v55;
      *(void *)(v18 + 152) = v54;
      *(void *)(v18 + 160) = v9;
      *(void *)(v18 + 168) = 0;
      swift_beginAccess();
      sub_1DE855FD0(0, 0, 2u);
      sub_1DE855FD0(0, 0, 2u);
      sub_1DE855FE4(v56, v7);
      uint64_t v19 = sub_1DE84E1F8(v47, v50, v51, v52, v53);
      MEMORY[0x1E01D4080](v19);
      if (*(void *)((*(void *)(v2 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v2 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        sub_1DE8E15A0();
      sub_1DE8E15D0();
      sub_1DE8E1580();
      swift_endAccess();
    }
  }
}

Swift::Void __swiftcall ClusteringJournal.failedClustering(availableHeadlineCount:requiredHeadlineCount:)(Swift::Int availableHeadlineCount, Swift::Int requiredHeadlineCount)
{
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    if (v3)
    {
      v5[0] = requiredHeadlineCount;
      v5[1] = availableHeadlineCount;
      v5[2] = v3;
      v5[3] = 0;
      char v6 = 1;
      swift_bridgeObjectRetain();
      sub_1DE849AD8((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBEA80A8 != -1) {
        swift_once();
      }
      id v4 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      sub_1DE8E13A0();
    }
  }
}

Swift::Void __swiftcall ClusteringJournal.failedClustering(availableHeadlineCount:rejectedHeadlineCount:requiredHeadlineCount:)(Swift::Int availableHeadlineCount, Swift::Int rejectedHeadlineCount, Swift::Int requiredHeadlineCount)
{
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    uint64_t v4 = *(void *)(v3 + 48);
    if (v4)
    {
      v6[0] = requiredHeadlineCount;
      v6[1] = availableHeadlineCount;
      void v6[2] = rejectedHeadlineCount;
      v6[3] = v4;
      char v7 = 2;
      swift_bridgeObjectRetain();
      sub_1DE849AD8((uint64_t)v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBEA80A8 != -1) {
        swift_once();
      }
      id v5 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      sub_1DE8E13A0();
    }
  }
}

Swift::Void __swiftcall ClusteringJournal.finishedClustering()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    if (*(void *)(v0 + 48))
    {
      v2[0] = *(void *)(v0 + 48);
      memset(&v2[1], 0, 24);
      char v3 = 0;
      swift_bridgeObjectRetain();
      sub_1DE849AD8((uint64_t)v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBEA80A8 != -1) {
        swift_once();
      }
      id v1 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      sub_1DE8E13A0();
    }
  }
}

BOOL sub_1DE84A928(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE84A940()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE84A988()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE84A9B8()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE84A9FC()
{
  uint64_t result = 0x73746C75736572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702125924;
      break;
    case 2:
      uint64_t result = 0x726F746E65766E69;
      break;
    case 3:
      uint64_t result = 1701080941;
      break;
    case 4:
      uint64_t result = 0x72756769666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE84AAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE855D9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE84AAD0()
{
  return 0;
}

void sub_1DE84AADC(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DE84AAE8(uint64_t a1)
{
  unint64_t v2 = sub_1DE850A14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE84AB24(uint64_t a1)
{
  unint64_t v2 = sub_1DE850A14();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ClusteringJournal.__allocating_init(headlines:tags:mode:configuration:)(uint64_t a1, uint64_t a2, unsigned char *a3, const void *a4)
{
  uint64_t v8 = swift_allocObject();
  ClusteringJournal.init(headlines:tags:mode:configuration:)(a1, a2, a3, a4);
  return v8;
}

uint64_t ClusteringJournal.init(headlines:tags:mode:configuration:)(uint64_t a1, uint64_t a2, unsigned char *a3, const void *a4)
{
  uint64_t v9 = sub_1DE8E1350();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  LOBYTE(a3) = *a3;
  memcpy(v16, a4, sizeof(v16));
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 40) = -1;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(void *)(v4 + 152) = MEMORY[0x1E4FBC860];
  sub_1DE8E1340();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32))(v4 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_date, v13, v9);
  sub_1DE83E414(a1, a2, &v15);
  *(void *)(v4 + 144) = v15;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) = (_BYTE)a3;
  memcpy((void *)(v4 + 160), v16, 0x768uLL);
  return v4;
}

uint64_t ClusteringJournal.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ClusteringJournal.init(from:)(a1);
  return v2;
}

uint64_t *ClusteringJournal.init(from:)(void *a1)
{
  char v3 = v1;
  uint64_t v26 = *v3;
  uint64_t v5 = sub_1DE8E1350();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BE28);
  uint64_t v23 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = 0;
  *((unsigned char *)v3 + 40) = -1;
  v3[19] = MEMORY[0x1E4FBC860];
  id v27 = a1;
  uint64_t v28 = v3 + 19;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE850A14();
  sub_1DE8E1BF0();
  if (v2)
  {
    uint64_t v14 = (uint64_t)v27;
    swift_bridgeObjectRelease();
    sub_1DE8508C8(v3[3], v3[4], *((unsigned char *)v3 + 40));
    swift_bridgeObjectRelease();
    sub_1DE8508DC(v3[7], v3[8]);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    uint64_t v15 = v14;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95C0);
    char v31 = 0;
    sub_1DE850A68(&qword_1EAC0BE30, &qword_1EAC0BE20);
    sub_1DE8E1930();
    uint64_t v13 = v9;
    uint64_t v18 = v28;
    uint64_t v17 = v29[0];
    swift_beginAccess();
    *uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    LOBYTE(v29[0]) = 1;
    sub_1DE850BF8(&qword_1EAC0B850, 255, MEMORY[0x1E4F27928]);
    uint64_t v19 = v25;
    sub_1DE8E1930();
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))((uint64_t)v3 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_date, v8, v19);
    char v30 = 2;
    sub_1DE850AFC();
    sub_1DE8E18C0();
    uint64_t v20 = v32;
    if (!v32)
    {
      sub_1DE83E414(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v29);
      uint64_t v20 = v29[0];
    }
    v3[18] = v20;
    LOBYTE(v32) = 3;
    sub_1DE850B50();
    sub_1DE8E18C0();
    uint64_t v21 = v23;
    char v22 = v29[0];
    if (LOBYTE(v29[0]) == 3) {
      char v22 = 2;
    }
    *((unsigned char *)v3 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) = v22;
    LOBYTE(v32) = 4;
    sub_1DE850BA4();
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v13);
    memcpy(v3 + 20, v29, 0x768uLL);
    uint64_t v15 = (uint64_t)v27;
  }
  __swift_destroy_boxed_opaque_existential_1(v15);
  return v3;
}

uint64_t ClusteringJournal.encode(to:)(void *a1)
{
  char v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9630);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE850A14();
  sub_1DE8E1C10();
  swift_beginAccess();
  v11[0] = v3[19];
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95C0);
  sub_1DE850A68(&qword_1EBEA95C8, &qword_1EBEA9000);
  sub_1DE8E1A40();
  if (!v2)
  {
    LOBYTE(v11[0]) = 1;
    sub_1DE8E1350();
    sub_1DE850BF8(&qword_1EBEA8CA0, 255, MEMORY[0x1E4F27928]);
    sub_1DE8E1A40();
    swift_beginAccess();
    v11[0] = v3[18];
    char v15 = 2;
    sub_1DE850C40();
    sub_1DE8E1A40();
    char v15 = *((unsigned char *)v3 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode);
    char v14 = 3;
    sub_1DE850C94();
    sub_1DE8E1A40();
    memcpy(v11, v3 + 20, sizeof(v11));
    char v13 = 4;
    sub_1DE850CE8();
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ClusteringJournal.deinit()
{
  swift_bridgeObjectRelease();
  sub_1DE8508C8(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_1DE8508DC(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(__dst, (const void *)(v0 + 160), 0x768uLL);
  sub_1DE850D3C((uint64_t)__dst);
  uint64_t v1 = v0 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_date;
  uint64_t v2 = sub_1DE8E1350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ClusteringJournal.__deallocating_deinit()
{
  ClusteringJournal.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_1DE84B7A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = ClusteringJournal.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1DE84B7FC(void *a1)
{
  return ClusteringJournal.encode(to:)(a1);
}

void sub_1DE84B820(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v42 = a1[6];
  uint64_t v41 = a1[7];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1DE821D84(v8, v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1DE8225B4();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v11);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = (void *)(v19[7] + 16 * v11);
    *uint64_t v21 = v42;
    v21[1] = v41;
    uint64_t v22 = v19[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 10;
    while (1)
    {
      uint64_t v28 = *((void *)v26 - 2);
      uint64_t v27 = *((void *)v26 - 1);
      long long v43 = *v26;
      uint64_t v29 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_1DE821D84(v28, v27);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_1DE824FE0(v34, 1);
        unint64_t v30 = sub_1DE821D84(v28, v27);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      uint64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      *uint64_t v38 = v28;
      v38[1] = v27;
      *(_OWORD *)(v37[7] + 16 * v30) = v43;
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v37[2] = v40;
      v26 += 2;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1DE824FE0(v14, a2 & 1);
  unint64_t v16 = sub_1DE821D84(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    MEMORY[0x1E01D4AD0](v18);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA7F48);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1DE8E1B40();
  __break(1u);
LABEL_26:
  sub_1DE8E1730();
  sub_1DE8E1490();
  sub_1DE8E17B0();
  sub_1DE8E1490();
  sub_1DE8E17F0();
  __break(1u);
}

void *sub_1DE84BBC0(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DE84C038(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BBE0(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DE84C344(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BC00(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DE84C448(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_1DE84BC20(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DE84C54C(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

unint64_t sub_1DE84BC40()
{
  unint64_t result = qword_1EBEA90C8;
  if (!qword_1EBEA90C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90C8);
  }
  return result;
}

unint64_t sub_1DE84BC94()
{
  unint64_t result = qword_1EBEA90F8;
  if (!qword_1EBEA90F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90F8);
  }
  return result;
}

uint64_t sub_1DE84BCE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE84BD54()
{
  unint64_t result = qword_1EAC0BC68;
  if (!qword_1EAC0BC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BC68);
  }
  return result;
}

unint64_t sub_1DE84BDA8()
{
  unint64_t result = qword_1EBEA8F88;
  if (!qword_1EBEA8F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F88);
  }
  return result;
}

unint64_t sub_1DE84BDFC()
{
  unint64_t result = qword_1EBEA8F08;
  if (!qword_1EBEA8F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F08);
  }
  return result;
}

unint64_t sub_1DE84BE50()
{
  unint64_t result = qword_1EBEA9510;
  if (!qword_1EBEA9510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9510);
  }
  return result;
}

unint64_t sub_1DE84BEA4()
{
  unint64_t result = qword_1EAC0BC88;
  if (!qword_1EAC0BC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BC88);
  }
  return result;
}

char *sub_1DE84BEF8(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84C670(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BF18(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84C788(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BF38(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84C884(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BF58(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84C9A0(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BF78(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84CABC(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BF98(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84CBA8(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_1DE84BFB8(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84CCC0(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_1DE84BFD8(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84CDFC(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

char *sub_1DE84BFF8(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84D074(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_1DE84C018(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1DE84D190(a1, a2, a3, *v3);
  *char v3 = result;
  return result;
}

void *sub_1DE84C038(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B58);
    char v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    char v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B60);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_1DE84C170(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    BOOL v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B980);
  uint64_t v10 = *(void *)(type metadata accessor for ReadonlyAggregate(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  BOOL v13 = (void *)swift_allocObject();
  unint64_t result = _swift_stdlib_malloc_size_1(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for ReadonlyAggregate(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_1DE84C344(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1DE84C448(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1DE84C54C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97E8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9598);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1DE84C670(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9938);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 24 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1DE84C788(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B50);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1DE84C884(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1DE84C9A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[112 * v8]) {
      memmove(v12, v13, 112 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1DE84CABC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B18);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

char *sub_1DE84CBA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1DE84CCC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F40);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F08);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1DE84CDFC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B20);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9AE8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1DE84CF38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F38);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F00);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1DE84D074(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1DE84D190(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E68);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E30);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t _s10XavierNews17ClusteringJournalC6ResultC5GroupO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5) {
          char v9 = 1;
        }
        else {
          char v9 = sub_1DE8E1AC0();
        }
        sub_1DE84E1E0(v6, v5, 1u);
        sub_1DE84E1E0(v3, v2, 1u);
        sub_1DE84E220(v3, v2, 1u);
        uint64_t v12 = v6;
        uint64_t v13 = v5;
        unsigned __int8 v14 = 1;
LABEL_25:
        sub_1DE84E220(v12, v13, v14);
        return v9 & 1;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_1DE84E220(*(void *)a1, v2, 2u);
      sub_1DE84E220(0, 0, 2u);
      char v9 = 1;
      return v9 & 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 16))
  {
    if (v3 == v6 && v2 == v5) {
      char v9 = 1;
    }
    else {
      char v9 = sub_1DE8E1AC0();
    }
    sub_1DE84E1E0(v6, v5, 0);
    sub_1DE84E1E0(v3, v2, 0);
    sub_1DE84E220(v3, v2, 0);
    uint64_t v12 = v6;
    uint64_t v13 = v5;
    unsigned __int8 v14 = 0;
    goto LABEL_25;
  }
  sub_1DE84E1E0(*(void *)a2, *(void *)(a2 + 8), v7);
  sub_1DE84E1E0(v3, v2, v4);
  sub_1DE84E220(v3, v2, v4);
  sub_1DE84E220(v6, v5, v7);
  char v9 = 0;
  return v9 & 1;
}

unint64_t sub_1DE84D46C()
{
  unint64_t result = qword_1EBEA8F28;
  if (!qword_1EBEA8F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F28);
  }
  return result;
}

unint64_t sub_1DE84D4C0()
{
  unint64_t result = qword_1EBEA9960;
  if (!qword_1EBEA9960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9960);
  }
  return result;
}

unint64_t sub_1DE84D514()
{
  unint64_t result = qword_1EBEA8F40;
  if (!qword_1EBEA8F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F40);
  }
  return result;
}

unint64_t sub_1DE84D568()
{
  unint64_t result = qword_1EBEA8F68;
  if (!qword_1EBEA8F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F68);
  }
  return result;
}

unint64_t sub_1DE84D5BC()
{
  unint64_t result = qword_1EBEA8E10;
  if (!qword_1EBEA8E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E10);
  }
  return result;
}

unint64_t sub_1DE84D610()
{
  unint64_t result = qword_1EBEA7F88[0];
  if (!qword_1EBEA7F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBEA7F88);
  }
  return result;
}

unint64_t sub_1DE84D664()
{
  unint64_t result = qword_1EBEA7F80;
  if (!qword_1EBEA7F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA7F80);
  }
  return result;
}

unint64_t sub_1DE84D6B8()
{
  unint64_t result = qword_1EAC0BCB0;
  if (!qword_1EAC0BCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BCB0);
  }
  return result;
}

unint64_t sub_1DE84D70C()
{
  unint64_t result = qword_1EBEA8E28;
  if (!qword_1EBEA8E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E28);
  }
  return result;
}

unint64_t sub_1DE84D760()
{
  unint64_t result = qword_1EBEA8D50;
  if (!qword_1EBEA8D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D50);
  }
  return result;
}

unint64_t sub_1DE84D7B4()
{
  unint64_t result = qword_1EAC0BCE0;
  if (!qword_1EAC0BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BCE0);
  }
  return result;
}

unint64_t sub_1DE84D808()
{
  unint64_t result = qword_1EBEA8FA0;
  if (!qword_1EBEA8FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FA0);
  }
  return result;
}

unint64_t sub_1DE84D85C()
{
  unint64_t result = qword_1EBEA8A30;
  if (!qword_1EBEA8A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8A30);
  }
  return result;
}

unint64_t sub_1DE84D8B0()
{
  unint64_t result = qword_1EAC0BCE8;
  if (!qword_1EAC0BCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BCE8);
  }
  return result;
}

unint64_t sub_1DE84D904()
{
  unint64_t result = qword_1EAC0BCF0;
  if (!qword_1EAC0BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BCF0);
  }
  return result;
}

unint64_t sub_1DE84D958()
{
  unint64_t result = qword_1EAC0BCF8;
  if (!qword_1EAC0BCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BCF8);
  }
  return result;
}

unint64_t sub_1DE84D9AC()
{
  unint64_t result = qword_1EAC0BD00;
  if (!qword_1EAC0BD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BD00);
  }
  return result;
}

unint64_t sub_1DE84DA00()
{
  unint64_t result = qword_1EBEA8DF0;
  if (!qword_1EBEA8DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DF0);
  }
  return result;
}

unint64_t sub_1DE84DA54()
{
  unint64_t result = qword_1EBEA8D90;
  if (!qword_1EBEA8D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D90);
  }
  return result;
}

unint64_t sub_1DE84DAA8()
{
  unint64_t result = qword_1EBEA8DC8;
  if (!qword_1EBEA8DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DC8);
  }
  return result;
}

unint64_t sub_1DE84DAFC()
{
  unint64_t result = qword_1EBEA8D78;
  if (!qword_1EBEA8D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D78);
  }
  return result;
}

unint64_t sub_1DE84DB50()
{
  unint64_t result = qword_1EAC0BD60;
  if (!qword_1EAC0BD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BD60);
  }
  return result;
}

unint64_t sub_1DE84DBA4()
{
  unint64_t result = qword_1EBEA8D28;
  if (!qword_1EBEA8D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D28);
  }
  return result;
}

unint64_t sub_1DE84DBF8()
{
  unint64_t result = qword_1EBEA8E90;
  if (!qword_1EBEA8E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E90);
  }
  return result;
}

unint64_t sub_1DE84DC4C()
{
  unint64_t result = qword_1EBEA8E08;
  if (!qword_1EBEA8E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E08);
  }
  return result;
}

unint64_t sub_1DE84DCA0()
{
  unint64_t result = qword_1EBEA8E78;
  if (!qword_1EBEA8E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E78);
  }
  return result;
}

unint64_t sub_1DE84DCF4()
{
  unint64_t result = qword_1EBEA8E70;
  if (!qword_1EBEA8E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E70);
  }
  return result;
}

unint64_t sub_1DE84DD48()
{
  unint64_t result = qword_1EAC0BD88;
  if (!qword_1EAC0BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BD88);
  }
  return result;
}

unint64_t sub_1DE84DD9C()
{
  unint64_t result = qword_1EAC0BD90;
  if (!qword_1EAC0BD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BD90);
  }
  return result;
}

unint64_t sub_1DE84DDF0()
{
  unint64_t result = qword_1EBEA8D10;
  if (!qword_1EBEA8D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D10);
  }
  return result;
}

unint64_t sub_1DE84DE44()
{
  unint64_t result = qword_1EBEA9940;
  if (!qword_1EBEA9940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9940);
  }
  return result;
}

unint64_t sub_1DE84DE98()
{
  unint64_t result = qword_1EBEA8A38;
  if (!qword_1EBEA8A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8A38);
  }
  return result;
}

unint64_t sub_1DE84DEEC()
{
  unint64_t result = qword_1EBEA8EB0;
  if (!qword_1EBEA8EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EB0);
  }
  return result;
}

unint64_t sub_1DE84DF40()
{
  unint64_t result = qword_1EBEA8EA8;
  if (!qword_1EBEA8EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EA8);
  }
  return result;
}

unint64_t sub_1DE84DF94()
{
  unint64_t result = qword_1EAC0BDB8;
  if (!qword_1EAC0BDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BDB8);
  }
  return result;
}

unint64_t sub_1DE84DFE8()
{
  unint64_t result = qword_1EBEA8FA8;
  if (!qword_1EBEA8FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FA8);
  }
  return result;
}

unint64_t sub_1DE84E03C()
{
  unint64_t result = qword_1EBEA9B28;
  if (!qword_1EBEA9B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9B28);
  }
  return result;
}

unint64_t sub_1DE84E090()
{
  unint64_t result = qword_1EBEA8EE8;
  if (!qword_1EBEA8EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EE8);
  }
  return result;
}

unint64_t sub_1DE84E0E4()
{
  unint64_t result = qword_1EAC0BDC0;
  if (!qword_1EAC0BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BDC0);
  }
  return result;
}

unint64_t sub_1DE84E138()
{
  unint64_t result = qword_1EBEA8FC0;
  if (!qword_1EBEA8FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FC0);
  }
  return result;
}

unint64_t sub_1DE84E18C()
{
  unint64_t result = qword_1EAC0BDF0;
  if (!qword_1EAC0BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BDF0);
  }
  return result;
}

uint64_t sub_1DE84E1E0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DE84E1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5) {
    return swift_bridgeObjectRetain();
  }
  if (a5 == 2) {
    return swift_bridgeObjectRetain();
  }
  uint64_t result = a3;
  if (a5 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DE84E220(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE84E238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5) {
    return swift_bridgeObjectRelease();
  }
  if (a5 == 2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t result = a3;
  if (a5 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DE84E260()
{
  unint64_t result = qword_1EBEA8EF0;
  if (!qword_1EBEA8EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EF0);
  }
  return result;
}

unint64_t sub_1DE84E2B4()
{
  unint64_t result = qword_1EBEA8F80;
  if (!qword_1EBEA8F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F80);
  }
  return result;
}

unint64_t sub_1DE84E308()
{
  unint64_t result = qword_1EBEA8FF8;
  if (!qword_1EBEA8FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FF8);
  }
  return result;
}

unint64_t sub_1DE84E35C()
{
  unint64_t result = qword_1EBEA8F20;
  if (!qword_1EBEA8F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F20);
  }
  return result;
}

unint64_t sub_1DE84E3B0()
{
  unint64_t result = qword_1EBEA9580;
  if (!qword_1EBEA9580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9578);
    sub_1DE850BF8(&qword_1EBEA9000, v1, (void (*)(uint64_t))type metadata accessor for ClusteringJournal.Result);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9580);
  }
  return result;
}

uint64_t type metadata accessor for ClusteringJournal.Result()
{
  return self;
}

unint64_t sub_1DE84E480()
{
  unint64_t result = qword_1EAC0BE00;
  if (!qword_1EAC0BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE00);
  }
  return result;
}

unint64_t sub_1DE84E4D4()
{
  unint64_t result = qword_1EAC0BE08;
  if (!qword_1EAC0BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE08);
  }
  return result;
}

unint64_t sub_1DE84E528()
{
  unint64_t result = qword_1EAC0BE10;
  if (!qword_1EAC0BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE10);
  }
  return result;
}

unint64_t sub_1DE84E57C()
{
  unint64_t result = qword_1EAC0BE18;
  if (!qword_1EAC0BE18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9578);
    sub_1DE850BF8(&qword_1EAC0BE20, v1, (void (*)(uint64_t))type metadata accessor for ClusteringJournal.Result);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE18);
  }
  return result;
}

uint64_t sub_1DE84E628(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE84E714(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C616E7265747865 && a2 == 0xE800000000000000;
  if (v3 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E7265746E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84E7F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F19E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE84E87C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xE900000000000073 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F1A00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE84E9D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84EACC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F1A20 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473756C436E696DLL && a2 == 0xEE00657A69537265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7473756C4378616DLL && a2 == 0xEE00657A69537265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656C7572 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE84ECBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x59726F4665726F6DLL && a2 == 0xEA0000000000756FLL;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369706F74 && a2 == 0xE500000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE84EE18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x63696E6167726FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465746F6D6F7270 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F1A40 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F1A60)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE84EFC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953459315 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E49656372756F73 && a2 == 0xEB00000000786564)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84F0C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6565726772657665 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F1A80 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7373656363616E69 && a2 == 0xEC000000656C6269 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F1AA0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4578614D63676961 && a2 == 0xEF64656465656378 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7669446369706F74 && a2 == 0xEE00797469737265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746174696C617571 && a2 == 0xEE00676154657669 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F1AC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F1AE0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1DE84F540(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F1B20)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE84F5C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84F6B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54646574696D696CLL && a2 == 0xEC00000044496761 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE84F81C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F646E6977 && a2 == 0xEA0000000000657ALL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369706F546C6C61 && a2 == 0xEE00746E756F4373 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F1B00 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D69536369706F74 && a2 == 0xEF79746972616C69 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1DE84FAF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84FBE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84FCD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465747065636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE84FDC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E696C64616568 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE8F1B40 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F1B60)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE84FF10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F1B80 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F1BA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE85005C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x536D756D696E696DLL && a2 == 0xEB00000000657A69;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F1BC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE8501BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x536D756D696E696DLL && a2 == 0xEB00000000657A69;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F1BC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F1BE0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE850378(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70756F7267 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D65726975716572 && a2 == 0xEC00000073746E65 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE850550(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = (unint64_t *)result;
  uint64_t v8 = 0;
  int64_t v9 = 0;
  uint64_t v10 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v16 = v15 | (v9 << 6);
LABEL_20:
    uint64_t v20 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v16);
    unint64_t result = *v20;
    if (*v20 != a4 || v20[1] != a5)
    {
      unint64_t result = sub_1DE8E1AC0();
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        if (__OFADD__(v8++, 1))
        {
          __break(1u);
          return sub_1DE8CA524(v24, a2, v8, a3);
        }
      }
    }
  }
  int64_t v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v17 >= v14) {
    return sub_1DE8CA524(v24, a2, v8, a3);
  }
  unint64_t v18 = *(void *)(v10 + 8 * v17);
  ++v9;
  if (v18) {
    goto LABEL_19;
  }
  int64_t v9 = v17 + 1;
  if (v17 + 1 >= v14) {
    return sub_1DE8CA524(v24, a2, v8, a3);
  }
  unint64_t v18 = *(void *)(v10 + 8 * v9);
  if (v18) {
    goto LABEL_19;
  }
  int64_t v9 = v17 + 2;
  if (v17 + 2 >= v14) {
    return sub_1DE8CA524(v24, a2, v8, a3);
  }
  unint64_t v18 = *(void *)(v10 + 8 * v9);
  if (v18)
  {
LABEL_19:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_20;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    return sub_1DE8CA524(v24, a2, v8, a3);
  }
  unint64_t v18 = *(void *)(v10 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      return sub_1DE8CA524(v24, a2, v8, a3);
    }
    unint64_t v18 = *(void *)(v10 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DE850700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, v12);
    bzero((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DE850550((uint64_t)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v10);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DE850550((uint64_t)v14, v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x1E01D4C70](v14, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v13;
}

uint64_t sub_1DE8508C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1DE84E220(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1DE8508DC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE85092C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 <= 0xEFu && (a9 & 0xF0) != 0x70) {
    return sub_1DE850950(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1DE850950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 < 0) {
    return sub_1DE85096C(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 0x7F);
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DE85096C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
      goto LABEL_3;
    case 6:
    case 9:
      swift_bridgeObjectRetain();
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE850A14()
{
  unint64_t result = qword_1EBEA8CB0;
  if (!qword_1EBEA8CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CB0);
  }
  return result;
}

uint64_t sub_1DE850A68(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA95C0);
    sub_1DE850BF8(a2, v5, (void (*)(uint64_t))type metadata accessor for ClusteringJournal.Result);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE850AFC()
{
  unint64_t result = qword_1EAC0BE38;
  if (!qword_1EAC0BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE38);
  }
  return result;
}

unint64_t sub_1DE850B50()
{
  unint64_t result = qword_1EAC0BE40;
  if (!qword_1EAC0BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE40);
  }
  return result;
}

unint64_t sub_1DE850BA4()
{
  unint64_t result = qword_1EAC0BE48;
  if (!qword_1EAC0BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE48);
  }
  return result;
}

uint64_t sub_1DE850BF8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE850C40()
{
  unint64_t result = qword_1EBEA9100;
  if (!qword_1EBEA9100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9100);
  }
  return result;
}

unint64_t sub_1DE850C94()
{
  unint64_t result = qword_1EBEA8D08;
  if (!qword_1EBEA8D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D08);
  }
  return result;
}

unint64_t sub_1DE850CE8()
{
  unint64_t result = qword_1EBEA8C70;
  if (!qword_1EBEA8C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C70);
  }
  return result;
}

uint64_t sub_1DE850D3C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DE850E2C()
{
  unint64_t result = qword_1EAC0BE50;
  if (!qword_1EAC0BE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE50);
  }
  return result;
}

uint64_t sub_1DE850E80()
{
  return type metadata accessor for ClusteringJournal();
}

uint64_t type metadata accessor for ClusteringJournal()
{
  uint64_t result = qword_1EBEA8018;
  if (!qword_1EBEA8018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DE850ED4()
{
  uint64_t result = sub_1DE8E1350();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ClusteringJournal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClusteringJournal);
}

uint64_t dispatch thunk of ClusteringJournal.__allocating_init(headlines:tags:mode:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ClusteringJournal.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Mode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DE8510B8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ClusteringJournal.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1DE8511A0);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8511C8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1DE8511E8(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Mode()
{
  return &type metadata for ClusteringJournal.Mode;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Inventory()
{
  return &type metadata for ClusteringJournal.Inventory;
}

uint64_t initializeWithCopy for ClusteringJournal.Inventory.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClusteringJournal.Inventory.Item(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ClusteringJournal.Inventory.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Inventory.Item(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Inventory.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Inventory.Item()
{
  return &type metadata for ClusteringJournal.Inventory.Item;
}

uint64_t method lookup function for ClusteringJournal.Result(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClusteringJournal.Result);
}

uint64_t dispatch thunk of ClusteringJournal.Result.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for ClusteringJournal.Result.Article()
{
  return swift_bridgeObjectRelease();
}

void *_s10XavierNews17ClusteringJournalC6ResultC7ArticleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClusteringJournal.Result.Article(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for ClusteringJournal.Result.Article(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.Article(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.Article(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Article()
{
  return &type metadata for ClusteringJournal.Result.Article;
}

uint64_t destroy for ClusteringJournal.Result.Requirements()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClusteringJournal.Result.Requirements(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClusteringJournal.Result.Requirements(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ClusteringJournal.Result.Requirements(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.Requirements(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.Requirements(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Requirements()
{
  return &type metadata for ClusteringJournal.Result.Requirements;
}

uint64_t destroy for ClusteringJournal.Result.Group(uint64_t a1)
{
  return sub_1DE84E220(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10XavierNews17ClusteringJournalC6ResultC5GroupOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1DE84E1E0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClusteringJournal.Result.Group(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1DE84E1E0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DE84E220(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClusteringJournal.Result.Group(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DE84E220(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.Group(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.Group(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE8519A4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1DE8519C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Group()
{
  return &type metadata for ClusteringJournal.Result.Group;
}

uint64_t destroy for ClusteringJournal.Result.ClusteringEvent(uint64_t result)
{
  if ((*(unsigned char *)(result + 64) & 0x70) == 0) {
    return sub_1DE851A2C(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), *(void *)(result + 32), *(void *)(result + 40), *(void *)(result + 48), *(void *)(result + 56), *(unsigned char *)(result + 64));
  }
  return result;
}

uint64_t sub_1DE851A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 < 0) {
    return sub_1DE851A48(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 0x7F);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DE851A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
      goto LABEL_3;
    case 6:
    case 9:
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for ClusteringJournal.Result.ClusteringEvent(uint64_t a1, uint64_t *a2)
{
  char v3 = *((unsigned char *)a2 + 64);
  if ((v3 & 0x70) != 0)
  {
    long long v4 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v4;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    uint64_t v11 = a2[5];
    uint64_t v12 = a2[6];
    uint64_t v13 = a2[7];
    sub_1DE850950(*a2, v7, v8, v9, v10, v11, v12, v13, v3);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v13;
    *(unsigned char *)(a1 + 64) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ClusteringJournal.Result.ClusteringEvent(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 64);
  if ((*(unsigned char *)(a1 + 64) & 0x70) == 0)
  {
    if ((v4 & 0x70) == 0)
    {
      uint64_t v17 = *(void *)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v19 = *(void *)(a2 + 16);
      uint64_t v20 = *(void *)(a2 + 24);
      uint64_t v21 = *(void *)(a2 + 32);
      uint64_t v22 = *(void *)(a2 + 40);
      uint64_t v24 = *(void *)(a2 + 48);
      uint64_t v23 = *(void *)(a2 + 56);
      sub_1DE850950(*(void *)a2, v18, v19, v20, v21, v22, v24, v23, v4);
      uint64_t v25 = *(void *)a1;
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = *(void *)(a1 + 16);
      uint64_t v28 = *(void *)(a1 + 24);
      uint64_t v29 = *(void *)(a1 + 32);
      uint64_t v30 = *(void *)(a1 + 40);
      uint64_t v31 = *(void *)(a1 + 48);
      uint64_t v32 = *(void *)(a1 + 56);
      char v33 = *(unsigned char *)(a1 + 64);
      *(void *)a1 = v17;
      *(void *)(a1 + 8) = v18;
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v20;
      *(void *)(a1 + 32) = v21;
      *(void *)(a1 + 40) = v22;
      *(void *)(a1 + 48) = v24;
      *(void *)(a1 + 56) = v23;
      *(unsigned char *)(a1 + 64) = v4;
      sub_1DE851A2C(v25, v26, v27, v28, v29, v30, v31, v32, v33);
      return a1;
    }
    sub_1DE851A2C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
    goto LABEL_6;
  }
  if ((v4 & 0x70) != 0)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v13 = *(_OWORD *)(a2 + 16);
    long long v14 = *(_OWORD *)(a2 + 32);
    long long v15 = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v14;
    *(_OWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 16) = v13;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_1DE850950(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v4);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v4;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ClusteringJournal.Result.ClusteringEvent(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 64);
  if ((v4 & 0x70) == 0)
  {
    char v5 = *(unsigned char *)(a2 + 64);
    if ((v5 & 0x70) == 0)
    {
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = *(void *)(a1 + 48);
      uint64_t v16 = *(void *)(a1 + 56);
      long long v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      long long v18 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v18;
      *(unsigned char *)(a1 + 64) = v5;
      sub_1DE851A2C(v9, v10, v11, v12, v13, v14, v15, v16, v4);
      return a1;
    }
    sub_1DE851A2C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (((v3 >> 3) & 0xE) != 0) {
    unsigned int v4 = 16 - ((v3 >> 3) & 0xE | (v3 >> 7));
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 3) {
    return v4 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 64) = (8 * (14 - a2)) & 0xF0 | ((14 - (_BYTE)a2) << 7);
    }
  }
  return result;
}

uint64_t sub_1DE851EA0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 64);
  if (((v1 >> 3) & 0xE) != 0) {
    return 16 - ((v1 >> 3) & 0xE | (v1 >> 7));
  }
  else {
    return 0;
  }
}

double sub_1DE851EC8(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xE)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 64) = 0;
    *(void *)a1 = a2 - 15;
  }
  else if (a2)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 64) = 16 * (((-a2 >> 1) & 7) - 8 * a2);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent;
}

uint64_t destroy for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome(uint64_t a1, uint64_t a2)
{
  return sub_1DE8521A0(a1, a2, sub_1DE851A2C);
}

uint64_t initializeWithCopy for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DE8521FC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1DE850950);
}

uint64_t *assignWithCopy for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DE8522CC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1DE850950, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1DE851A2C);
}

uint64_t *assignWithTake for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE8523B0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1DE851A2C);
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 15);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 0xE | (*(unsigned __int8 *)(a1 + 64) >> 7)) ^ 0xF;
  if (v3 >= 0xE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)double result = a2 - 15;
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)double result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 64) = 16 * (((-a2 >> 1) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1DE852064(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64) >> 7;
}

uint64_t sub_1DE852070(uint64_t result)
{
  *(unsigned char *)(result + 64) &= ~0x80u;
  return result;
}

uint64_t sub_1DE852080(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = *(unsigned char *)(result + 64) & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)double result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE852130(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1DE85213C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason;
}

uint64_t initializeBufferWithCopyOfBuffer for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t a1, uint64_t a2)
{
  return sub_1DE8521A0(a1, a2, sub_1DE851A48);
}

uint64_t sub_1DE8521A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
}

uint64_t initializeWithCopy for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DE8521FC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1DE85096C);
}

uint64_t sub_1DE8521FC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  char v13 = *((unsigned char *)a2 + 64);
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v13;
  return a1;
}

uint64_t *assignWithCopy for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DE8522CC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1DE85096C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1DE851A48);
}

uint64_t *sub_1DE8522CC(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  char v14 = *((unsigned char *)a2 + 64);
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v21 = a1[6];
  uint64_t v22 = a1[7];
  char v23 = *((unsigned char *)a1 + 64);
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v11;
  a1[6] = v12;
  a1[7] = v13;
  *((unsigned char *)a1 + 64) = v14;
  LOBYTE(v25) = v23;
  a5(v15, v16, v17, v18, v19, v20, v21, v22, v25);
  return a1;
}

uint64_t *assignWithTake for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE8523B0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1DE851A48);
}

uint64_t *sub_1DE8523B0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))
{
  char v6 = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v13 = a1[6];
  uint64_t v14 = a1[7];
  char v15 = *((unsigned char *)a1 + 64);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v17;
  *((unsigned char *)a1 + 64) = v6;
  char v19 = v15;
  a4(v7, v9, v8, v10, v11, v12, v13, v14, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 9) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)double result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE8524C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_1DE8524CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason;
}

uint64_t destroy for ClusteringJournal.Result.Outcome(uint64_t a1)
{
  return sub_1DE84E238(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for ClusteringJournal.Result.Outcome(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1DE84E1F8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ClusteringJournal.Result.Outcome(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1DE84E1F8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1DE84E238(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ClusteringJournal.Result.Outcome(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1DE84E238(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.Outcome(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringJournal.Result.Outcome(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE8526C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1DE8526CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Outcome()
{
  return &type metadata for ClusteringJournal.Result.Outcome;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClusteringJournal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE852840);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE852868(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE852874(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.CodingKeys()
{
  return &type metadata for ClusteringJournal.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Outcome.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Outcome.CodingKeys;
}

uint64_t sub_1DE8528D0()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Outcome.SuccessCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Outcome.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Outcome.NotEnoughHeadlinesCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Outcome.NotEnoughHeadlinesCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Outcome.NotEnoughValidHeadlinesCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Outcome.NotEnoughValidHeadlinesCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.CodingKeys;
}

uint64_t sub_1DE85294C()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.ExhaustedPaidBundleHeadlineCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.ExhaustedPaidBundleHeadlineCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.ExhaustedUnpaidBundleHeadlineCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.ExhaustedUnpaidBundleHeadlineCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptedCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptedCodingKeys;
}

uint64_t sub_1DE8529CC()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectedCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectedCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE852B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.EvergreenCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.EvergreenCodingKeys;
}

uint64_t sub_1DE852BA8()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.GroupSizeExceededCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.GroupSizeExceededCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.InaccessibleCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.InaccessibleCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.PublisherDiversityCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.PublisherDiversityCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.AigcMaxExceededCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.AigcMaxExceededCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.TopicDiversityCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.TopicDiversityCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE852D78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.TopicDiversityCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.TopicDiversityCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.QualitativeTagCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.QualitativeTagCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.HardPaywallNewsPlusArticleLimitCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.HardPaywallNewsPlusArticleLimitCodingKeys;
}

uint64_t sub_1DE852DF4()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.DuplicateThumbnailCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.DuplicateThumbnailCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.UnknownCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.RejectionReason.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.OrganicCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.OrganicCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.PromotedCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.PromotedCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.PromotedBundlePaidCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.PromotedBundlePaidCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.PromotedNonBundlePaidCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.ClusteringEvent.HeadlineOutcome.AcceptanceReason.PromotedNonBundlePaidCodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Group.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Group.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Group.MoreForYouCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Group.MoreForYouCodingKeys;
}

uint64_t sub_1DE852EF0()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Group.TopicCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Group.TopicCodingKeys;
}

uint64_t sub_1DE852F18()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Group.ChannelCodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Group.ChannelCodingKeys;
}

uint64_t _s10XavierNews17ClusteringJournalC6ResultC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10XavierNews17ClusteringJournalC6ResultC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE85309CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Requirements.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Requirements.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Result.Article.CodingKeys()
{
  return &type metadata for ClusteringJournal.Result.Article.CodingKeys;
}

uint64_t sub_1DE8530FC()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Inventory.CodingKeys()
{
  return &type metadata for ClusteringJournal.Inventory.CodingKeys;
}

uint64_t _s10XavierNews17ClusteringJournalC6ResultC7OutcomeO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10XavierNews17ClusteringJournalC6ResultC7OutcomeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE853280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Inventory.Item.CodingKeys()
{
  return &type metadata for ClusteringJournal.Inventory.Item.CodingKeys;
}

uint64_t _s10XavierNews17ClusteringJournalC6ResultC15ClusteringEventO15HeadlineOutcomeO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10XavierNews17ClusteringJournalC6ResultC15ClusteringEventO15HeadlineOutcomeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE853420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE853448(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE853454(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Mode.CodingKeys()
{
  return &type metadata for ClusteringJournal.Mode.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Mode.ExternalCodingKeys()
{
  return &type metadata for ClusteringJournal.Mode.ExternalCodingKeys;
}

uint64_t _s10XavierNews17ClusteringJournalC6ResultC7OutcomeO17SuccessCodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s10XavierNews17ClusteringJournalC6ResultC7OutcomeO17SuccessCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE853574);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE85359C()
{
  return 0;
}

ValueMetadata *type metadata accessor for ClusteringJournal.Mode.InternalCodingKeys()
{
  return &type metadata for ClusteringJournal.Mode.InternalCodingKeys;
}

unint64_t sub_1DE8535C0()
{
  unint64_t result = qword_1EAC0BE58;
  if (!qword_1EAC0BE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE58);
  }
  return result;
}

unint64_t sub_1DE853618()
{
  unint64_t result = qword_1EAC0BE60;
  if (!qword_1EAC0BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE60);
  }
  return result;
}

unint64_t sub_1DE853670()
{
  unint64_t result = qword_1EAC0BE68;
  if (!qword_1EAC0BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE68);
  }
  return result;
}

unint64_t sub_1DE8536C8()
{
  unint64_t result = qword_1EAC0BE70;
  if (!qword_1EAC0BE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE70);
  }
  return result;
}

unint64_t sub_1DE853720()
{
  unint64_t result = qword_1EAC0BE78;
  if (!qword_1EAC0BE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE78);
  }
  return result;
}

unint64_t sub_1DE853778()
{
  unint64_t result = qword_1EAC0BE80;
  if (!qword_1EAC0BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE80);
  }
  return result;
}

unint64_t sub_1DE8537D0()
{
  unint64_t result = qword_1EAC0BE88;
  if (!qword_1EAC0BE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE88);
  }
  return result;
}

unint64_t sub_1DE853828()
{
  unint64_t result = qword_1EAC0BE90;
  if (!qword_1EAC0BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE90);
  }
  return result;
}

unint64_t sub_1DE853880()
{
  unint64_t result = qword_1EAC0BE98;
  if (!qword_1EAC0BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BE98);
  }
  return result;
}

unint64_t sub_1DE8538D8()
{
  unint64_t result = qword_1EAC0BEA0;
  if (!qword_1EAC0BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEA0);
  }
  return result;
}

unint64_t sub_1DE853930()
{
  unint64_t result = qword_1EAC0BEA8;
  if (!qword_1EAC0BEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEA8);
  }
  return result;
}

unint64_t sub_1DE853988()
{
  unint64_t result = qword_1EAC0BEB0;
  if (!qword_1EAC0BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEB0);
  }
  return result;
}

unint64_t sub_1DE8539E0()
{
  unint64_t result = qword_1EAC0BEB8;
  if (!qword_1EAC0BEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEB8);
  }
  return result;
}

unint64_t sub_1DE853A38()
{
  unint64_t result = qword_1EAC0BEC0;
  if (!qword_1EAC0BEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEC0);
  }
  return result;
}

unint64_t sub_1DE853A90()
{
  unint64_t result = qword_1EAC0BEC8;
  if (!qword_1EAC0BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEC8);
  }
  return result;
}

unint64_t sub_1DE853AE8()
{
  unint64_t result = qword_1EAC0BED0;
  if (!qword_1EAC0BED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BED0);
  }
  return result;
}

unint64_t sub_1DE853B40()
{
  unint64_t result = qword_1EAC0BED8;
  if (!qword_1EAC0BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BED8);
  }
  return result;
}

unint64_t sub_1DE853B98()
{
  unint64_t result = qword_1EAC0BEE0;
  if (!qword_1EAC0BEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEE0);
  }
  return result;
}

unint64_t sub_1DE853BF0()
{
  unint64_t result = qword_1EAC0BEE8;
  if (!qword_1EAC0BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEE8);
  }
  return result;
}

unint64_t sub_1DE853C48()
{
  unint64_t result = qword_1EAC0BEF0;
  if (!qword_1EAC0BEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEF0);
  }
  return result;
}

unint64_t sub_1DE853CA0()
{
  unint64_t result = qword_1EAC0BEF8;
  if (!qword_1EAC0BEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BEF8);
  }
  return result;
}

unint64_t sub_1DE853CF8()
{
  unint64_t result = qword_1EAC0BF00;
  if (!qword_1EAC0BF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF00);
  }
  return result;
}

unint64_t sub_1DE853D50()
{
  unint64_t result = qword_1EAC0BF08;
  if (!qword_1EAC0BF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF08);
  }
  return result;
}

unint64_t sub_1DE853DA8()
{
  unint64_t result = qword_1EAC0BF10;
  if (!qword_1EAC0BF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF10);
  }
  return result;
}

unint64_t sub_1DE853E00()
{
  unint64_t result = qword_1EAC0BF18;
  if (!qword_1EAC0BF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF18);
  }
  return result;
}

unint64_t sub_1DE853E58()
{
  unint64_t result = qword_1EAC0BF20;
  if (!qword_1EAC0BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF20);
  }
  return result;
}

unint64_t sub_1DE853EB0()
{
  unint64_t result = qword_1EAC0BF28;
  if (!qword_1EAC0BF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF28);
  }
  return result;
}

unint64_t sub_1DE853F08()
{
  unint64_t result = qword_1EAC0BF30;
  if (!qword_1EAC0BF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF30);
  }
  return result;
}

unint64_t sub_1DE853F60()
{
  unint64_t result = qword_1EAC0BF38;
  if (!qword_1EAC0BF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF38);
  }
  return result;
}

unint64_t sub_1DE853FB8()
{
  unint64_t result = qword_1EAC0BF40;
  if (!qword_1EAC0BF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF40);
  }
  return result;
}

unint64_t sub_1DE854010()
{
  unint64_t result = qword_1EAC0BF48;
  if (!qword_1EAC0BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF48);
  }
  return result;
}

unint64_t sub_1DE854068()
{
  unint64_t result = qword_1EAC0BF50;
  if (!qword_1EAC0BF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF50);
  }
  return result;
}

unint64_t sub_1DE8540C0()
{
  unint64_t result = qword_1EAC0BF58;
  if (!qword_1EAC0BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF58);
  }
  return result;
}

unint64_t sub_1DE854118()
{
  unint64_t result = qword_1EAC0BF60;
  if (!qword_1EAC0BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF60);
  }
  return result;
}

unint64_t sub_1DE854170()
{
  unint64_t result = qword_1EAC0BF68;
  if (!qword_1EAC0BF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF68);
  }
  return result;
}

unint64_t sub_1DE8541C8()
{
  unint64_t result = qword_1EAC0BF70;
  if (!qword_1EAC0BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0BF70);
  }
  return result;
}

unint64_t sub_1DE854220()
{
  unint64_t result = qword_1EBEA8CC0;
  if (!qword_1EBEA8CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CC0);
  }
  return result;
}

unint64_t sub_1DE854278()
{
  unint64_t result = qword_1EBEA8CB8;
  if (!qword_1EBEA8CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CB8);
  }
  return result;
}

unint64_t sub_1DE8542D0()
{
  unint64_t result = qword_1EBEA8F00;
  if (!qword_1EBEA8F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F00);
  }
  return result;
}

unint64_t sub_1DE854328()
{
  unint64_t result = qword_1EBEA8EF8;
  if (!qword_1EBEA8EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EF8);
  }
  return result;
}

unint64_t sub_1DE854380()
{
  unint64_t result = qword_1EBEA8FD0;
  if (!qword_1EBEA8FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FD0);
  }
  return result;
}

unint64_t sub_1DE8543D8()
{
  unint64_t result = qword_1EBEA8FC8;
  if (!qword_1EBEA8FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FC8);
  }
  return result;
}

unint64_t sub_1DE854430()
{
  unint64_t result = qword_1EBEA8FE0;
  if (!qword_1EBEA8FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FE0);
  }
  return result;
}

unint64_t sub_1DE854488()
{
  unint64_t result = qword_1EBEA8FD8;
  if (!qword_1EBEA8FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FD8);
  }
  return result;
}

unint64_t sub_1DE8544E0()
{
  unint64_t result = qword_1EBEA8FF0;
  if (!qword_1EBEA8FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FF0);
  }
  return result;
}

unint64_t sub_1DE854538()
{
  unint64_t result = qword_1EBEA8FE8;
  if (!qword_1EBEA8FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FE8);
  }
  return result;
}

unint64_t sub_1DE854590()
{
  unint64_t result = qword_1EBEA8FB8;
  if (!qword_1EBEA8FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FB8);
  }
  return result;
}

unint64_t sub_1DE8545E8()
{
  unint64_t result = qword_1EBEA8FB0;
  if (!qword_1EBEA8FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8FB0);
  }
  return result;
}

unint64_t sub_1DE854640()
{
  unint64_t result = qword_1EBEA8EC0;
  if (!qword_1EBEA8EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EC0);
  }
  return result;
}

unint64_t sub_1DE854698()
{
  unint64_t result = qword_1EBEA8EB8;
  if (!qword_1EBEA8EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EB8);
  }
  return result;
}

unint64_t sub_1DE8546F0()
{
  unint64_t result = qword_1EBEA8ED0;
  if (!qword_1EBEA8ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8ED0);
  }
  return result;
}

unint64_t sub_1DE854748()
{
  unint64_t result = qword_1EBEA8EC8;
  if (!qword_1EBEA8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EC8);
  }
  return result;
}

unint64_t sub_1DE8547A0()
{
  unint64_t result = qword_1EBEA8EE0;
  if (!qword_1EBEA8EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EE0);
  }
  return result;
}

unint64_t sub_1DE8547F8()
{
  unint64_t result = qword_1EBEA8ED8;
  if (!qword_1EBEA8ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8ED8);
  }
  return result;
}

unint64_t sub_1DE854850()
{
  unint64_t result = qword_1EBEA8D20;
  if (!qword_1EBEA8D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D20);
  }
  return result;
}

unint64_t sub_1DE8548A8()
{
  unint64_t result = qword_1EBEA8D18;
  if (!qword_1EBEA8D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D18);
  }
  return result;
}

unint64_t sub_1DE854900()
{
  unint64_t result = qword_1EBEA8E88;
  if (!qword_1EBEA8E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E88);
  }
  return result;
}

unint64_t sub_1DE854958()
{
  unint64_t result = qword_1EBEA8E80;
  if (!qword_1EBEA8E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E80);
  }
  return result;
}

unint64_t sub_1DE8549B0()
{
  unint64_t result = qword_1EBEA8EA0;
  if (!qword_1EBEA8EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8EA0);
  }
  return result;
}

unint64_t sub_1DE854A08()
{
  unint64_t result = qword_1EBEA8E98;
  if (!qword_1EBEA8E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E98);
  }
  return result;
}

unint64_t sub_1DE854A60()
{
  unint64_t result = qword_1EBEA8D38;
  if (!qword_1EBEA8D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D38);
  }
  return result;
}

unint64_t sub_1DE854AB8()
{
  unint64_t result = qword_1EBEA8D30;
  if (!qword_1EBEA8D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D30);
  }
  return result;
}

unint64_t sub_1DE854B10()
{
  unint64_t result = qword_1EBEA8D88;
  if (!qword_1EBEA8D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D88);
  }
  return result;
}

unint64_t sub_1DE854B68()
{
  unint64_t result = qword_1EBEA8D80;
  if (!qword_1EBEA8D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D80);
  }
  return result;
}

unint64_t sub_1DE854BC0()
{
  unint64_t result = qword_1EBEA8DD8;
  if (!qword_1EBEA8DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DD8);
  }
  return result;
}

unint64_t sub_1DE854C18()
{
  unint64_t result = qword_1EBEA8DD0;
  if (!qword_1EBEA8DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DD0);
  }
  return result;
}

unint64_t sub_1DE854C70()
{
  unint64_t result = qword_1EBEA8DA0;
  if (!qword_1EBEA8DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DA0);
  }
  return result;
}

unint64_t sub_1DE854CC8()
{
  unint64_t result = qword_1EBEA8D98;
  if (!qword_1EBEA8D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D98);
  }
  return result;
}

unint64_t sub_1DE854D20()
{
  unint64_t result = qword_1EBEA8E00;
  if (!qword_1EBEA8E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E00);
  }
  return result;
}

unint64_t sub_1DE854D78()
{
  unint64_t result = qword_1EBEA8DF8;
  if (!qword_1EBEA8DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DF8);
  }
  return result;
}

unint64_t sub_1DE854DD0()
{
  unint64_t result = qword_1EBEA9958;
  if (!qword_1EBEA9958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9958);
  }
  return result;
}

unint64_t sub_1DE854E28()
{
  unint64_t result = qword_1EBEA9950;
  if (!qword_1EBEA9950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9950);
  }
  return result;
}

unint64_t sub_1DE854E80()
{
  unint64_t result = qword_1EBEA8DC0;
  if (!qword_1EBEA8DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DC0);
  }
  return result;
}

unint64_t sub_1DE854ED8()
{
  unint64_t result = qword_1EBEA8DB8;
  if (!qword_1EBEA8DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DB8);
  }
  return result;
}

unint64_t sub_1DE854F30()
{
  unint64_t result = qword_1EBEA8DB0;
  if (!qword_1EBEA8DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DB0);
  }
  return result;
}

unint64_t sub_1DE854F88()
{
  unint64_t result = qword_1EBEA8DA8;
  if (!qword_1EBEA8DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DA8);
  }
  return result;
}

unint64_t sub_1DE854FE0()
{
  unint64_t result = qword_1EBEA8D48;
  if (!qword_1EBEA8D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D48);
  }
  return result;
}

unint64_t sub_1DE855038()
{
  unint64_t result = qword_1EBEA8D40;
  if (!qword_1EBEA8D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D40);
  }
  return result;
}

unint64_t sub_1DE855090()
{
  unint64_t result = qword_1EBEA8DE8;
  if (!qword_1EBEA8DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DE8);
  }
  return result;
}

unint64_t sub_1DE8550E8()
{
  unint64_t result = qword_1EBEA8DE0;
  if (!qword_1EBEA8DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8DE0);
  }
  return result;
}

unint64_t sub_1DE855140()
{
  unint64_t result = qword_1EBEA8D70;
  if (!qword_1EBEA8D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D70);
  }
  return result;
}

unint64_t sub_1DE855198()
{
  unint64_t result = qword_1EBEA8D68;
  if (!qword_1EBEA8D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D68);
  }
  return result;
}

unint64_t sub_1DE8551F0()
{
  unint64_t result = qword_1EBEA8D60;
  if (!qword_1EBEA8D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D60);
  }
  return result;
}

unint64_t sub_1DE855248()
{
  unint64_t result = qword_1EBEA8D58;
  if (!qword_1EBEA8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D58);
  }
  return result;
}

unint64_t sub_1DE8552A0()
{
  unint64_t result = qword_1EBEA8E38;
  if (!qword_1EBEA8E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E38);
  }
  return result;
}

unint64_t sub_1DE8552F8()
{
  unint64_t result = qword_1EBEA8E30;
  if (!qword_1EBEA8E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E30);
  }
  return result;
}

unint64_t sub_1DE855350()
{
  unint64_t result = qword_1EBEA8E48;
  if (!qword_1EBEA8E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E48);
  }
  return result;
}

unint64_t sub_1DE8553A8()
{
  unint64_t result = qword_1EBEA8E40;
  if (!qword_1EBEA8E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E40);
  }
  return result;
}

unint64_t sub_1DE855400()
{
  unint64_t result = qword_1EBEA8E58;
  if (!qword_1EBEA8E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E58);
  }
  return result;
}

unint64_t sub_1DE855458()
{
  unint64_t result = qword_1EBEA8E50;
  if (!qword_1EBEA8E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E50);
  }
  return result;
}

unint64_t sub_1DE8554B0()
{
  unint64_t result = qword_1EBEA8E68;
  if (!qword_1EBEA8E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E68);
  }
  return result;
}

unint64_t sub_1DE855508()
{
  unint64_t result = qword_1EBEA8E60;
  if (!qword_1EBEA8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E60);
  }
  return result;
}

unint64_t sub_1DE855560()
{
  unint64_t result = qword_1EBEA8E20;
  if (!qword_1EBEA8E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E20);
  }
  return result;
}

unint64_t sub_1DE8555B8()
{
  unint64_t result = qword_1EBEA8E18;
  if (!qword_1EBEA8E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8E18);
  }
  return result;
}

unint64_t sub_1DE855610()
{
  unint64_t result = qword_1EBEA8F78;
  if (!qword_1EBEA8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F78);
  }
  return result;
}

unint64_t sub_1DE855668()
{
  unint64_t result = qword_1EBEA8F70;
  if (!qword_1EBEA8F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F70);
  }
  return result;
}

unint64_t sub_1DE8556C0()
{
  unint64_t result = qword_1EBEA8F50;
  if (!qword_1EBEA8F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F50);
  }
  return result;
}

unint64_t sub_1DE855718()
{
  unint64_t result = qword_1EBEA8F48;
  if (!qword_1EBEA8F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F48);
  }
  return result;
}

unint64_t sub_1DE855770()
{
  unint64_t result = qword_1EBEA8F60;
  if (!qword_1EBEA8F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F60);
  }
  return result;
}

unint64_t sub_1DE8557C8()
{
  unint64_t result = qword_1EBEA8F58;
  if (!qword_1EBEA8F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F58);
  }
  return result;
}

unint64_t sub_1DE855820()
{
  unint64_t result = qword_1EBEA8F38;
  if (!qword_1EBEA8F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F38);
  }
  return result;
}

unint64_t sub_1DE855878()
{
  unint64_t result = qword_1EBEA8F30;
  if (!qword_1EBEA8F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F30);
  }
  return result;
}

unint64_t sub_1DE8558D0()
{
  unint64_t result = qword_1EBEA8F18;
  if (!qword_1EBEA8F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F18);
  }
  return result;
}

unint64_t sub_1DE855928()
{
  unint64_t result = qword_1EBEA8F10;
  if (!qword_1EBEA8F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F10);
  }
  return result;
}

unint64_t sub_1DE855980()
{
  unint64_t result = qword_1EBEA8F98;
  if (!qword_1EBEA8F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F98);
  }
  return result;
}

unint64_t sub_1DE8559D8()
{
  unint64_t result = qword_1EBEA8F90;
  if (!qword_1EBEA8F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8F90);
  }
  return result;
}

unint64_t sub_1DE855A30()
{
  unint64_t result = qword_1EBEA90D8;
  if (!qword_1EBEA90D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90D8);
  }
  return result;
}

unint64_t sub_1DE855A88()
{
  unint64_t result = qword_1EBEA90D0;
  if (!qword_1EBEA90D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90D0);
  }
  return result;
}

unint64_t sub_1DE855AE0()
{
  unint64_t result = qword_1EBEA90F0;
  if (!qword_1EBEA90F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90F0);
  }
  return result;
}

unint64_t sub_1DE855B38()
{
  unint64_t result = qword_1EBEA90E8;
  if (!qword_1EBEA90E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA90E8);
  }
  return result;
}

unint64_t sub_1DE855B90()
{
  unint64_t result = qword_1EBEA8CE8;
  if (!qword_1EBEA8CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CE8);
  }
  return result;
}

unint64_t sub_1DE855BE8()
{
  unint64_t result = qword_1EBEA8CE0;
  if (!qword_1EBEA8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CE0);
  }
  return result;
}

unint64_t sub_1DE855C40()
{
  unint64_t result = qword_1EBEA8D00;
  if (!qword_1EBEA8D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8D00);
  }
  return result;
}

unint64_t sub_1DE855C98()
{
  unint64_t result = qword_1EBEA8CF8;
  if (!qword_1EBEA8CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CF8);
  }
  return result;
}

unint64_t sub_1DE855CF0()
{
  unint64_t result = qword_1EBEA8CD8;
  if (!qword_1EBEA8CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CD8);
  }
  return result;
}

unint64_t sub_1DE855D48()
{
  unint64_t result = qword_1EBEA8CD0;
  if (!qword_1EBEA8CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8CD0);
  }
  return result;
}

uint64_t sub_1DE855D9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746C75736572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F746E65766E69 && a2 == 0xE900000000000079 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1DE855FD0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1DE84E1E0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1DE855FE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for Classic()
{
  return &type metadata for Classic;
}

uint64_t sub_1DE856254(double a1)
{
  return sub_1DE85A16C(0x41746C7561666544, 0xEC0000006168706CLL, a1);
}

uint64_t sub_1DE856274(double a1)
{
  return sub_1DE858674(0xD000000000000020, 0x80000001DE8F3B40, a1);
}

uint64_t sub_1DE856290(double a1)
{
  return sub_1DE858674(0xD000000000000022, 0x80000001DE8F3B10, a1);
}

uint64_t sub_1DE8562AC(uint64_t a1)
{
  return sub_1DE85706C(a1, 0xD000000000000022, 0x80000001DE8F3AE0);
}

uint64_t sub_1DE8562C8(uint64_t a1)
{
  return sub_1DE85631C(a1, 0xD000000000000021, 0x80000001DE8F3AB0);
}

uint64_t sub_1DE8562E4(double a1)
{
  return sub_1DE8588A8(0xD000000000000019, 0x80000001DE8F2D00, a1);
}

uint64_t sub_1DE856300(uint64_t a1)
{
  return sub_1DE85631C(a1, 0xD000000000000024, 0x80000001DE8F2CD0);
}

uint64_t sub_1DE85631C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    BOOL v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001CLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1E00;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = a3;
    uint64_t v4 = 10;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *int v3 = v4;
  return result;
}

uint64_t sub_1DE8564CC(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001DLL, 0x80000001DE8F2CB0, a1);
}

uint64_t sub_1DE8564E8(double a1)
{
  return sub_1DE85C4F0(0xD000000000000023, 0x80000001DE8F2C80, a1);
}

uint64_t sub_1DE856504(uint64_t result)
{
  uint64_t v2 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001CLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1E00;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD00000000000002CLL;
    *(void *)(v4 + 120) = 0x80000001DE8F2C50;
    uint64_t v2 = 1000;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *unsigned int v1 = v2;
  return result;
}

uint64_t sub_1DE8566C0(double a1)
{
  return sub_1DE8597B8(0xD00000000000001BLL, 0x80000001DE8F2C30, a1);
}

uint64_t sub_1DE8566DC(double a1)
{
  return sub_1DE8597B8(0xD000000000000019, 0x80000001DE8F2C10, a1);
}

void sub_1DE8566F8(double a1)
{
  double v2 = a1;
  if (a1 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001FLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1D80;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD00000000000001DLL;
    *(void *)(v4 + 120) = 0x80000001DE8F2BF0;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 0.9;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE8568D0(double a1)
{
  return sub_1DE8581EC(0xD00000000000001ELL, 0x80000001DE8F2BD0, a1);
}

uint64_t sub_1DE8568EC(uint64_t result)
{
  uint64_t v2 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001CLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1E00;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD000000000000022;
    *(void *)(v4 + 120) = 0x80000001DE8F2BA0;
    uint64_t v2 = 37;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *unsigned int v1 = v2;
  return result;
}

void sub_1DE856AA8(double a1)
{
  double v2 = a1;
  if (a1 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001FLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1D80;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD000000000000023;
    *(void *)(v4 + 120) = 0x80000001DE8F2B70;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 1.2;
  }
  *unsigned int v1 = v2;
}

void sub_1DE856C78(double a1)
{
  double v2 = a1;
  if (a1 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001FLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1D80;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD00000000000001FLL;
    *(void *)(v4 + 120) = 0x80000001DE8F2B50;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 1.5;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE856E40(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001FLL, 0x80000001DE8F2B30, a1);
}

uint64_t sub_1DE856E5C(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001FLL, 0x80000001DE8F2B10, a1);
}

uint64_t sub_1DE856E78(double a1)
{
  return sub_1DE8588A8(0xD000000000000017, 0x80000001DE8F2AF0, a1);
}

uint64_t sub_1DE856E94(double a1)
{
  return sub_1DE85C4F0(0xD000000000000021, 0x80000001DE8F2AC0, a1);
}

uint64_t sub_1DE856EB0(uint64_t result)
{
  uint64_t v2 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    int v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001CLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1E00;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD000000000000027;
    *(void *)(v4 + 120) = 0x80000001DE8F33B0;
    uint64_t v2 = 1;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *unsigned int v1 = v2;
  return result;
}

uint64_t sub_1DE85706C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001CLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1E00;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = a3;
    uint64_t v4 = 30;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *int v3 = v4;
  return result;
}

uint64_t sub_1DE85721C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  BOOL v11 = a5 < 0.0 || a5 > 1.0;
  if (v11 || a1 < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DE8E28D0;
    double v22 = a5;
    uint64_t v23 = a1;
    uint64_t v24 = a2;
    id v15 = v13;
    sub_1DE8E17B0();
    uint64_t v16 = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v17 = sub_1DE819640();
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0xE000000000000000;
    *(void *)(v14 + 96) = v16;
    *(void *)(v14 + 104) = v17;
    *(void *)(v14 + 64) = v17;
    *(void *)(v14 + 72) = 0xD00000000000001FLL;
    *(void *)(v14 + 80) = 0x80000001DE8F3150;
    *(void *)(v14 + 136) = v16;
    *(void *)(v14 + 144) = v17;
    *(void *)(v14 + 112) = a3;
    *(void *)(v14 + 120) = a4;
    uint64_t v18 = MEMORY[0x1E4FBC870];
    sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, MEMORY[0x1E4FBC870], (uint64_t *)&v22);
    sub_1DE8E17B0();
    swift_bridgeObjectRelease();
    *(void *)(v14 + 176) = v16;
    *(void *)(v14 + 184) = v17;
    *(void *)(v14 + 152) = 0;
    *(void *)(v14 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, v18, (uint64_t *)&v22);
    double v19 = v22;
    uint64_t v20 = v23;
    uint64_t v21 = v24;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *id v5 = v19;
    *((void *)v5 + 1) = v20;
    *((void *)v5 + 2) = v21;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *id v5 = a5;
    *((void *)v5 + 1) = a1;
    *((void *)v5 + 2) = a2;
  }
  return result;
}

uint64_t sub_1DE857474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = *(double *)a1;
  if (*(double *)a1 >= -1.0 && v6 <= 1.0)
  {
    uint64_t v8 = *(void *)(a1 + 8);
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(a1 + 24);
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v15 = *(void *)(v8 + 16);
    if (!v15) {
      goto LABEL_23;
    }
    double v16 = *(double *)(v8 + 32);
    if (v16 >= -1.0 && v16 <= 1.0)
    {
      if (v15 != 1)
      {
        uint64_t v26 = 5;
        while (1)
        {
          uint64_t v27 = v26 - 3;
          if (__OFADD__(v26 - 4, 1)) {
            break;
          }
          double v28 = *(double *)(v8 + 8 * v26);
          if (v28 < -1.0 || v28 > 1.0) {
            goto LABEL_11;
          }
          ++v26;
          if (v27 == v15) {
            goto LABEL_23;
          }
        }
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(double *)uint64_t v3 = v6;
      *(void *)(v3 + 8) = v8;
      *(void *)(v3 + 16) = v9;
      *(void *)(v3 + 24) = v10;
      *(void *)(v3 + 32) = v11;
      *(void *)(v3 + 40) = v12;
      *(void *)(v3 + 48) = v13;
      *(void *)(v3 + 56) = v14;
      return result;
    }
  }
LABEL_11:
  uint64_t v4 = a2;
  uint64_t v31 = a3;
  if (qword_1EAC0B7D0 != -1) {
LABEL_25:
  }
    swift_once();
  uint64_t v18 = (void *)qword_1EAC0B8A8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DE8E28D0;
  id v20 = v18;
  sub_1DE8E17B0();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v22 = sub_1DE819640();
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 40) = 0xE000000000000000;
  *(void *)(v19 + 96) = v21;
  *(void *)(v19 + 104) = v22;
  *(void *)(v19 + 64) = v22;
  *(void *)(v19 + 72) = 0xD000000000000016;
  *(void *)(v19 + 80) = 0x80000001DE8F31A0;
  *(void *)(v19 + 136) = v21;
  *(void *)(v19 + 144) = v22;
  *(void *)(v19 + 112) = v4;
  *(void *)(v19 + 120) = v31;
  if (qword_1EBEA8170 != -1) {
    swift_once();
  }
  sub_1DE8E17B0();
  *(void *)(v19 + 176) = v21;
  *(void *)(v19 + 184) = v22;
  *(void *)(v19 + 152) = 0;
  *(void *)(v19 + 160) = 0xE000000000000000;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  long long v23 = xmmword_1EBEA8130;
  long long v30 = xmmword_1EBEA8150;
  long long v32 = xmmword_1EBEA8140;
  long long v24 = xmmword_1EBEA8160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DE85F0E4(a1);
  *(_OWORD *)uint64_t v3 = v23;
  *(_OWORD *)(v3 + 16) = v32;
  *(_OWORD *)(v3 + 32) = v30;
  *(_OWORD *)(v3 + 48) = v24;
  return result;
}

uint64_t sub_1DE8577B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001CLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1E00;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = a3;
    uint64_t v4 = 3;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE857968(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001CLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1E00;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = a3;
    uint64_t v4 = 2;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE857B18(double a1)
{
  return sub_1DE8597B8(0xD00000000000001ALL, 0x80000001DE8F20A0, a1);
}

uint64_t sub_1DE857B34(double a1)
{
  return sub_1DE85A16C(0xD000000000000012, 0x80000001DE8F2080, a1);
}

uint64_t sub_1DE857B50(uint64_t result)
{
  uint64_t v2 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001CLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1E00;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD000000000000014;
    *(void *)(v4 + 120) = 0x80000001DE8F2060;
    uint64_t v2 = 50;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *unsigned int v1 = v2;
  return result;
}

uint64_t sub_1DE857D0C(double a1)
{
  return sub_1DE85C4F0(0xD000000000000015, 0x80000001DE8F2040, a1);
}

uint64_t sub_1DE857D28(double a1)
{
  return sub_1DE85C4F0(0xD000000000000014, 0x80000001DE8F2020, a1);
}

uint64_t sub_1DE857D44(double a1)
{
  return sub_1DE8597B8(0xD000000000000018, 0x80000001DE8F2000, a1);
}

void sub_1DE857D60(double a1)
{
  double v2 = a1;
  if (a1 < 0.0 || a1 > 1.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1DE8E28D0;
    id v6 = v4;
    sub_1DE8E17B0();
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v8 = sub_1DE819640();
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0xE000000000000000;
    *(void *)(v5 + 96) = v7;
    *(void *)(v5 + 104) = v8;
    *(void *)(v5 + 64) = v8;
    *(void *)(v5 + 72) = 0xD000000000000021;
    *(void *)(v5 + 80) = 0x80000001DE8F1E70;
    *(void *)(v5 + 136) = v7;
    *(void *)(v5 + 144) = v8;
    *(void *)(v5 + 112) = 0xD000000000000019;
    *(void *)(v5 + 120) = 0x80000001DE8F1FE0;
    sub_1DE8E17B0();
    *(void *)(v5 + 176) = v7;
    *(void *)(v5 + 184) = v8;
    *(void *)(v5 + 152) = 0;
    *(void *)(v5 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 0.05;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE857F40(double a1)
{
  return sub_1DE85A16C(0xD000000000000015, 0x80000001DE8F1FC0, a1);
}

uint64_t sub_1DE857F5C(double a1)
{
  return sub_1DE85C4F0(0xD000000000000021, 0x80000001DE8F1F90, a1);
}

uint64_t sub_1DE857F78(double a1)
{
  return sub_1DE858F40(0xD000000000000013, 0x80000001DE8F1F70, a1);
}

void sub_1DE857F94(double a1)
{
  double v2 = a1;
  if (a1 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001FLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1D80;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD00000000000001BLL;
    *(void *)(v4 + 120) = 0x80000001DE8F1F50;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 5.0;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE858160(double a1)
{
  return sub_1DE8597B8(0xD000000000000024, 0x80000001DE8F1F20, a1);
}

uint64_t sub_1DE85817C(double a1)
{
  return sub_1DE8597B8(0xD000000000000014, 0x80000001DE8F1F00, a1);
}

uint64_t sub_1DE858198(double a1)
{
  return sub_1DE859168(0xD00000000000001CLL, 0x80000001DE8F1EE0, a1);
}

uint64_t sub_1DE8581B4(double a1)
{
  return sub_1DE859168(0xD00000000000001BLL, 0x80000001DE8F1EC0, a1);
}

uint64_t sub_1DE8581D0(double a1)
{
  return sub_1DE8581EC(0xD000000000000016, 0x80000001DE8F1EA0, a1);
}

uint64_t sub_1DE8581EC(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0 || a3 > 1.0)
  {
    uint64_t v7 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F1E70;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = v7;
    *(void *)(v9 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 0.3;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE8583B8(double a1)
{
  return sub_1DE858460(0xD000000000000016, 0x80000001DE8F2AA0, a1);
}

uint64_t sub_1DE8583D4(double a1)
{
  return sub_1DE858460(0xD00000000000001BLL, 0x80000001DE8F2A80, a1);
}

uint64_t sub_1DE8583F0(double a1)
{
  return sub_1DE858460(0xD00000000000001BLL, 0x80000001DE8F2A60, a1);
}

uint64_t sub_1DE85840C(double a1)
{
  return sub_1DE8597B8(0xD00000000000001CLL, 0x80000001DE8F2A40, a1);
}

uint64_t sub_1DE858428(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001ALL, 0x80000001DE8F2A20, a1);
}

uint64_t sub_1DE858444(double a1)
{
  return sub_1DE858460(0xD000000000000019, 0x80000001DE8F2A00, a1);
}

uint64_t sub_1DE858460(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0)
  {
    uint64_t v6 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001FLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1D80;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = v6;
    *(void *)(v8 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 1.1;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE85862C(double a1)
{
  return sub_1DE8588A8(0x45746C7561666544, 0xEF746E656E6F7078, a1);
}

uint64_t sub_1DE858650(double a1)
{
  return sub_1DE858674(0x50746C7561666544, 0xEE00676E69646461, a1);
}

uint64_t sub_1DE858674(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0)
  {
    uint64_t v6 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001FLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1D80;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = v6;
    *(void *)(v8 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 10.0;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE858834(double a1)
{
  return sub_1DE858AE0(0x50746C7561666544, 0xEC000000726F6972, a1);
}

uint64_t sub_1DE858854(double a1)
{
  return sub_1DE859D7C(0xD000000000000016, 0x80000001DE8F2280, a1);
}

uint64_t sub_1DE858870(double a1)
{
  return sub_1DE859D7C(0xD00000000000001ELL, 0x80000001DE8F2260, a1);
}

uint64_t sub_1DE85888C(double a1)
{
  return sub_1DE8588A8(0xD000000000000016, 0x80000001DE8F2240, a1);
}

uint64_t sub_1DE8588A8(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0 || a3 > 1.0)
  {
    uint64_t v7 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F1E70;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = v7;
    *(void *)(v9 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 0.5;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE858A70(double a1)
{
  return sub_1DE859D7C(0xD000000000000018, 0x80000001DE8F2220, a1);
}

uint64_t sub_1DE858A8C(double a1)
{
  return sub_1DE85C4F0(0xD00000000000002DLL, 0x80000001DE8F21F0, a1);
}

uint64_t sub_1DE858AA8(double a1)
{
  return sub_1DE8597B8(0xD000000000000016, 0x80000001DE8F21D0, a1);
}

uint64_t sub_1DE858AC4(double a1)
{
  return sub_1DE858AE0(0xD000000000000021, 0x80000001DE8F21A0, a1);
}

uint64_t sub_1DE858AE0(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0 || a3 > 1.0)
  {
    uint64_t v7 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F1E70;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = v7;
    *(void *)(v9 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 0.1;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE858CB4(double a1)
{
  return sub_1DE859168(0xD00000000000001CLL, 0x80000001DE8F2180, a1);
}

uint64_t sub_1DE858CD0(double a1)
{
  return sub_1DE85C4F0(0xD000000000000024, 0x80000001DE8F2150, a1);
}

void sub_1DE858CEC(double a1)
{
  double v2 = a1;
  if (a1 < 0.0 || a1 > 1.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v4 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1DE8E28D0;
    id v6 = v4;
    sub_1DE8E17B0();
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v8 = sub_1DE819640();
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0xE000000000000000;
    *(void *)(v5 + 96) = v7;
    *(void *)(v5 + 104) = v8;
    *(void *)(v5 + 64) = v8;
    *(void *)(v5 + 72) = 0xD000000000000021;
    *(void *)(v5 + 80) = 0x80000001DE8F1E70;
    *(void *)(v5 + 136) = v7;
    *(void *)(v5 + 144) = v8;
    *(void *)(v5 + 112) = 0xD000000000000017;
    *(void *)(v5 + 120) = 0x80000001DE8F2130;
    sub_1DE8E17B0();
    *(void *)(v5 + 176) = v7;
    *(void *)(v5 + 184) = v8;
    *(void *)(v5 + 152) = 0;
    *(void *)(v5 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 0.06;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE858ED0(double a1)
{
  return sub_1DE859D7C(0xD000000000000017, 0x80000001DE8F2110, a1);
}

uint64_t sub_1DE858EEC(double a1)
{
  return sub_1DE859168(0xD000000000000018, 0x80000001DE8F20F0, a1);
}

uint64_t sub_1DE858F08(double a1)
{
  return sub_1DE85C4F0(0xD000000000000020, 0x80000001DE8F20C0, a1);
}

uint64_t sub_1DE858F24(double a1)
{
  return sub_1DE858F40(0xD000000000000019, 0x80000001DE8F1FE0, a1);
}

uint64_t sub_1DE858F40(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0 || a3 > 1.0)
  {
    uint64_t v7 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F1E70;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = v7;
    *(void *)(v9 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 0.2;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE859114(double a1)
{
  return sub_1DE8597B8(0xD000000000000019, 0x80000001DE8F3130, a1);
}

uint64_t sub_1DE859130(double a1)
{
  return sub_1DE859168(0xD00000000000001CLL, 0x80000001DE8F1EE0, a1);
}

uint64_t sub_1DE85914C(double a1)
{
  return sub_1DE859168(0xD00000000000001BLL, 0x80000001DE8F1EC0, a1);
}

uint64_t sub_1DE859168(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0)
  {
    uint64_t v6 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001FLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1D80;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = v6;
    *(void *)(v8 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 2.0;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE859328(double a1)
{
  return sub_1DE85C4F0(0xD000000000000013, 0x80000001DE8F29E0, a1);
}

uint64_t sub_1DE859344(double a1)
{
  return sub_1DE859D7C(0xD000000000000027, 0x80000001DE8F29B0, a1);
}

uint64_t sub_1DE859360(double a1)
{
  return sub_1DE8597B8(0xD00000000000002ALL, 0x80000001DE8F2980, a1);
}

uint64_t sub_1DE85937C(double a1)
{
  return sub_1DE85A16C(0xD000000000000024, 0x80000001DE8F2950, a1);
}

void sub_1DE859398(double a1, double a2, double a3, double a4)
{
  double v5 = a4;
  double v6 = a3;
  double v7 = a2;
  double v8 = a1;
  BOOL v9 = a4 < 0.0 || a4 > 1.0;
  if (v9 || (a1 >= 0.0 ? (BOOL v10 = a1 > 1.0) : (BOOL v10 = 1), v10 || a3 < 0.0 || a3 > 1.0 || a2 < 0.0 || a2 > 1.0))
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v11 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DE8E28D0;
    id v13 = v11;
    sub_1DE8E17B0();
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = sub_1DE819640();
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0xE000000000000000;
    *(void *)(v12 + 96) = v14;
    *(void *)(v12 + 104) = v15;
    *(void *)(v12 + 64) = v15;
    *(void *)(v12 + 72) = 0xD000000000000032;
    *(void *)(v12 + 80) = 0x80000001DE8F2360;
    *(void *)(v12 + 136) = v14;
    *(void *)(v12 + 144) = v15;
    *(void *)(v12 + 112) = 0xD000000000000026;
    *(void *)(v12 + 120) = 0x80000001DE8F2920;
    sub_1DE8E17B0();
    *(void *)(v12 + 176) = v14;
    *(void *)(v12 + 184) = v15;
    *(void *)(v12 + 152) = 0;
    *(void *)(v12 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v5 = 0.005;
    double v6 = 0.07;
    double v7 = 0.1;
    double v8 = 0.04;
  }
  *double v4 = v8;
  v4[1] = v7;
  v4[2] = v6;
  long long v4[3] = v5;
}

uint64_t sub_1DE8595DC(double a1)
{
  return sub_1DE85A16C(0xD00000000000001DLL, 0x80000001DE8F2900, a1);
}

uint64_t sub_1DE8595F8(double a1)
{
  return sub_1DE85A16C(0xD000000000000027, 0x80000001DE8F28D0, a1);
}

uint64_t sub_1DE859614(double a1)
{
  return sub_1DE85A16C(0xD00000000000002BLL, 0x80000001DE8F28A0, a1);
}

uint64_t sub_1DE859630(double a1)
{
  return sub_1DE85C4F0(0xD00000000000002CLL, 0x80000001DE8F2870, a1);
}

uint64_t sub_1DE85964C(double a1)
{
  return sub_1DE85C4F0(0xD000000000000039, 0x80000001DE8F2830, a1);
}

uint64_t sub_1DE859668(double a1)
{
  return sub_1DE85C4F0(0xD000000000000041, 0x80000001DE8F27E0, a1);
}

uint64_t sub_1DE859684(double a1)
{
  return sub_1DE85C4F0(0xD000000000000030, 0x80000001DE8F27A0, a1);
}

uint64_t sub_1DE8596A0(double a1)
{
  return sub_1DE85C4F0(0xD000000000000030, 0x80000001DE8F2760, a1);
}

uint64_t sub_1DE8596BC(double a1)
{
  return sub_1DE85C4F0(0xD00000000000003ALL, 0x80000001DE8F2720, a1);
}

uint64_t sub_1DE8596D8(double a1)
{
  return sub_1DE85C4F0(0xD000000000000034, 0x80000001DE8F26E0, a1);
}

uint64_t sub_1DE8596F4(double a1)
{
  return sub_1DE85A16C(0xD00000000000001FLL, 0x80000001DE8F26C0, a1);
}

uint64_t sub_1DE859710(double a1)
{
  return sub_1DE85C4F0(0xD000000000000023, 0x80000001DE8F2690, a1);
}

uint64_t sub_1DE85972C(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001ALL, 0x80000001DE8F2670, a1);
}

uint64_t sub_1DE859748(double a1)
{
  return sub_1DE85C4F0(0xD000000000000026, 0x80000001DE8F2640, a1);
}

uint64_t sub_1DE859764(double a1)
{
  return sub_1DE85A16C(0xD000000000000016, 0x80000001DE8F2620, a1);
}

uint64_t sub_1DE859780(double a1)
{
  return sub_1DE85A16C(0xD000000000000018, 0x80000001DE8F2600, a1);
}

uint64_t sub_1DE85979C(double a1)
{
  return sub_1DE8597B8(0xD00000000000001ELL, 0x80000001DE8F25E0, a1);
}

uint64_t sub_1DE8597B8(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0)
  {
    uint64_t v6 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001FLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1D80;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = v6;
    *(void *)(v8 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 0.0;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE859974(double a1)
{
  return sub_1DE85A16C(0xD000000000000012, 0x80000001DE8F25C0, a1);
}

uint64_t sub_1DE859990(double a1)
{
  return sub_1DE85C4F0(0xD000000000000028, 0x80000001DE8F2590, a1);
}

uint64_t sub_1DE8599AC(double a1)
{
  return sub_1DE85C4F0(0xD000000000000021, 0x80000001DE8F2560, a1);
}

uint64_t sub_1DE8599C8(double a1)
{
  return sub_1DE85A16C(0xD000000000000012, 0x80000001DE8F2540, a1);
}

uint64_t sub_1DE8599E4(double a1)
{
  return sub_1DE85A16C(0xD000000000000021, 0x80000001DE8F2510, a1);
}

uint64_t sub_1DE859A00(double a1)
{
  return sub_1DE85C4F0(0xD000000000000025, 0x80000001DE8F24E0, a1);
}

uint64_t sub_1DE859A1C(double a1)
{
  return sub_1DE85C4F0(0xD00000000000002ELL, 0x80000001DE8F24B0, a1);
}

uint64_t sub_1DE859A38(double a1)
{
  return sub_1DE85A16C(0xD000000000000021, 0x80000001DE8F2480, a1);
}

uint64_t sub_1DE859A54(double a1)
{
  return sub_1DE85A16C(0xD000000000000027, 0x80000001DE8F2450, a1);
}

uint64_t sub_1DE859A70(double a1)
{
  return sub_1DE85A16C(0xD000000000000018, 0x80000001DE8F2430, a1);
}

uint64_t sub_1DE859A8C(double a1)
{
  return sub_1DE85A16C(0xD000000000000027, 0x80000001DE8F2400, a1);
}

uint64_t sub_1DE859AA8(double a1)
{
  return sub_1DE85A16C(0xD000000000000026, 0x80000001DE8F23D0, a1);
}

void sub_1DE859AC4(double a1, double a2, double a3, double a4)
{
  double v5 = a4;
  double v6 = a3;
  double v7 = a2;
  double v8 = a1;
  BOOL v9 = a4 < 0.0 || a4 > 1.0;
  if (v9 || (a1 >= 0.0 ? (BOOL v10 = a1 > 1.0) : (BOOL v10 = 1), v10 || a3 < 0.0 || a3 > 1.0 || a2 < 0.0 || a2 > 1.0))
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v11 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DE8E28D0;
    id v13 = v11;
    sub_1DE8E17B0();
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v15 = sub_1DE819640();
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0xE000000000000000;
    *(void *)(v12 + 96) = v14;
    *(void *)(v12 + 104) = v15;
    *(void *)(v12 + 64) = v15;
    *(void *)(v12 + 72) = 0xD000000000000032;
    *(void *)(v12 + 80) = 0x80000001DE8F2360;
    *(void *)(v12 + 136) = v14;
    *(void *)(v12 + 144) = v15;
    *(void *)(v12 + 112) = 0xD000000000000028;
    *(void *)(v12 + 120) = 0x80000001DE8F23A0;
    sub_1DE8E17B0();
    *(void *)(v12 + 176) = v14;
    *(void *)(v12 + 184) = v15;
    *(void *)(v12 + 152) = 0;
    *(void *)(v12 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v5 = 0.01;
    double v6 = 0.12;
    double v7 = 0.15;
    double v8 = 0.1;
  }
  *double v4 = v8;
  v4[1] = v7;
  v4[2] = v6;
  long long v4[3] = v5;
}

uint64_t sub_1DE859D0C(double a1)
{
  return sub_1DE859D7C(0xD00000000000001BLL, 0x80000001DE8F2340, a1);
}

uint64_t sub_1DE859D28(double a1)
{
  return sub_1DE859D7C(0xD000000000000030, 0x80000001DE8F2300, a1);
}

uint64_t sub_1DE859D44(double a1)
{
  return sub_1DE859D7C(0xD000000000000022, 0x80000001DE8F22D0, a1);
}

uint64_t sub_1DE859D60(double a1)
{
  return sub_1DE859D7C(0xD000000000000025, 0x80000001DE8F22A0, a1);
}

uint64_t sub_1DE859D7C(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0 || a3 > 1.0)
  {
    uint64_t v7 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F1E70;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = v7;
    *(void *)(v9 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 0.0;
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE859F40(double a1, double a2)
{
  return sub_1DE859F78(0xD00000000000001BLL, 0x80000001DE8F3A90, a1, a2);
}

uint64_t sub_1DE859F5C(double a1, double a2)
{
  return sub_1DE859F78(0xD00000000000001ALL, 0x80000001DE8F3A70, a1, a2);
}

uint64_t sub_1DE859F78(uint64_t result, uint64_t a2, double a3, double a4)
{
  uint64_t v6 = result;
  double v7 = a4;
  double v8 = a3;
  if (a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DE8E28D0;
    id v11 = v9;
    sub_1DE8E17B0();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DE819640();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    *(void *)(v10 + 96) = v12;
    *(void *)(v10 + 104) = v13;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = 0xD00000000000001DLL;
    *(void *)(v10 + 80) = 0x80000001DE8F3A50;
    *(void *)(v10 + 136) = v12;
    *(void *)(v10 + 144) = v13;
    *(void *)(v10 + 112) = v6;
    *(void *)(v10 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v10 + 176) = v12;
    *(void *)(v10 + 184) = v13;
    *(void *)(v10 + 152) = 0;
    *(void *)(v10 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v8 = 0.0;
    double v7 = 60.0;
  }
  *double v4 = v8;
  v4[1] = v7;
  return result;
}

uint64_t sub_1DE85A150(double a1)
{
  return sub_1DE85A16C(0xD000000000000023, 0x80000001DE8F3A20, a1);
}

uint64_t sub_1DE85A16C(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0 || a3 > 1.0)
  {
    uint64_t v7 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F1E70;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = v7;
    *(void *)(v9 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 1.0;
  }
  *uint64_t v3 = v4;
  return result;
}

void sub_1DE85A334(double a1)
{
  double v2 = a1;
  if (a1 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001FLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1D80;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD000000000000021;
    *(void *)(v4 + 120) = 0x80000001DE8F39F0;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 5000.0;
  }
  *unsigned int v1 = v2;
}

void sub_1DE85A504(double a1)
{
  double v2 = a1;
  if (a1 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1DE8E28D0;
    id v5 = v3;
    sub_1DE8E17B0();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v7 = sub_1DE819640();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
    *(void *)(v4 + 96) = v6;
    *(void *)(v4 + 104) = v7;
    *(void *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = 0xD00000000000001FLL;
    *(void *)(v4 + 80) = 0x80000001DE8F1D80;
    *(void *)(v4 + 136) = v6;
    *(void *)(v4 + 144) = v7;
    *(void *)(v4 + 112) = 0xD000000000000023;
    *(void *)(v4 + 120) = 0x80000001DE8F39C0;
    sub_1DE8E17B0();
    *(void *)(v4 + 176) = v6;
    *(void *)(v4 + 184) = v7;
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 2000.0;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE85A6D4(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001FLL, 0x80000001DE8F39A0, a1);
}

uint64_t sub_1DE85A6F0(uint64_t a1)
{
  return sub_1DE85A70C(a1, 0xD000000000000026, 0x80000001DE8F3970);
}

uint64_t sub_1DE85A70C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001CLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1E00;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = a3;
    uint64_t v4 = 5;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE85A8BC(unint64_t a1)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  char v4 = sub_1DE83B224(v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0
    && (uint64_t v5 = swift_bridgeObjectRetain(), v6 = sub_1DE83B340(v5), swift_bridgeObjectRelease(), (v6 & 1) != 0))
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v15 = v1;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DE8E28D0;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BB68);
    sub_1DE8E17B0();
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1DE819640();
    *(void *)(v9 + 32) = 0;
    *(void *)(v9 + 40) = 0xE000000000000000;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = 0xD000000000000021;
    *(void *)(v9 + 80) = 0x80000001DE8F3920;
    *(void *)(v9 + 136) = v11;
    *(void *)(v9 + 144) = v12;
    *(void *)(v9 + 112) = 0xD000000000000017;
    *(void *)(v9 + 120) = 0x80000001DE8F3950;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1DE85EE9C(MEMORY[0x1E4FBC860]);
    sub_1DE8E17B0();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 176) = v11;
    *(void *)(v9 + 184) = v12;
    *(void *)(v9 + 152) = 0;
    *(void *)(v9 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    unint64_t v14 = sub_1DE85EE9C(v13);
    unsigned int v1 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v14;
  }
  *unsigned int v1 = a1;
  return result;
}

void sub_1DE85AB04(double a1)
{
  double v2 = a1;
  if (a1 < 0.0 || a1 > 1.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    char v4 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1DE8E28D0;
    id v6 = v4;
    sub_1DE8E17B0();
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v8 = sub_1DE819640();
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0xE000000000000000;
    *(void *)(v5 + 96) = v7;
    *(void *)(v5 + 104) = v8;
    *(void *)(v5 + 64) = v8;
    *(void *)(v5 + 72) = 0xD000000000000021;
    *(void *)(v5 + 80) = 0x80000001DE8F1E70;
    *(void *)(v5 + 136) = v7;
    *(void *)(v5 + 144) = v8;
    *(void *)(v5 + 112) = 0xD000000000000010;
    *(void *)(v5 + 120) = 0x80000001DE8F3900;
    sub_1DE8E17B0();
    *(void *)(v5 + 176) = v7;
    *(void *)(v5 + 184) = v8;
    *(void *)(v5 + 152) = 0;
    *(void *)(v5 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v2 = 0.99;
  }
  *unsigned int v1 = v2;
}

uint64_t sub_1DE85ACE8(double a1)
{
  return sub_1DE85C4F0(0xD000000000000023, 0x80000001DE8F38D0, a1);
}

uint64_t sub_1DE85AD04(double a1)
{
  return sub_1DE85C4F0(0xD000000000000021, 0x80000001DE8F38A0, a1);
}

uint64_t sub_1DE85AD20(double a1, double a2, double a3, double a4)
{
  return sub_1DE85BC88(0xD000000000000034, 0x80000001DE8F30F0, a1, a2, a3, a4);
}

uint64_t sub_1DE85AD3C(double a1, double a2, double a3, double a4)
{
  return sub_1DE85B650(0xD000000000000034, 0x80000001DE8F30B0, a1, a2, a3, a4);
}

void sub_1DE85AD58(double a1, double a2, double a3, double a4)
{
  double v5 = a4;
  double v6 = a3;
  double v7 = a2;
  double v8 = a1;
  if (a1 < 0.0 || a2 < 0.0 || a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DE8E28D0;
    id v11 = v9;
    sub_1DE8E17B0();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DE819640();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    *(void *)(v10 + 96) = v12;
    *(void *)(v10 + 104) = v13;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = 0xD000000000000033;
    *(void *)(v10 + 80) = 0x80000001DE8F2D20;
    *(void *)(v10 + 136) = v12;
    *(void *)(v10 + 144) = v13;
    *(void *)(v10 + 112) = 0xD000000000000037;
    *(void *)(v10 + 120) = 0x80000001DE8F3070;
    sub_1DE8E17B0();
    *(void *)(v10 + 176) = v12;
    *(void *)(v10 + 184) = v13;
    *(void *)(v10 + 152) = 0;
    *(void *)(v10 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v7 = 0.0;
    double v8 = 1.0;
    double v6 = 1.0;
    double v5 = 0.0;
  }
  *char v4 = v8;
  v4[1] = v7;
  v4[2] = v6;
  long long v4[3] = v5;
}

uint64_t sub_1DE85AF68(double a1, double a2, double a3, double a4)
{
  return sub_1DE85BEA4(0xD000000000000030, 0x80000001DE8F3030, a1, a2, a3, a4);
}

void sub_1DE85AF84(double a1, double a2, double a3, double a4)
{
  if (a1 < 0.0 || a2 < 0.0 || a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v5 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DE8E28D0;
    id v7 = v5;
    sub_1DE8E17B0();
    uint64_t v8 = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1DE819640();
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = 0xE000000000000000;
    *(void *)(v6 + 64) = v9;
    *(void *)(v6 + 72) = 0xD000000000000033;
    *(void *)(v6 + 96) = v8;
    *(void *)(v6 + 104) = v9;
    *(void *)(v6 + 80) = 0x80000001DE8F2D20;
    *(void *)(v6 + 136) = v8;
    *(void *)(v6 + 144) = v9;
    *(void *)(v6 + 112) = 0xD000000000000031;
    *(void *)(v6 + 120) = 0x80000001DE8F2FF0;
    __asm { FMOV            V0.2D, #3.0 }
    long long v15 = _Q0;
    sub_1DE8E17B0();
    *(void *)(v6 + 176) = v8;
    *(void *)(v6 + 184) = v9;
    *(void *)(v6 + 152) = 0;
    *(void *)(v6 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v4 = v15;
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = 0;
  }
  else
  {
    *(double *)uint64_t v4 = a1;
    *(double *)(v4 + 8) = a2;
    *(double *)(v4 + 16) = a3;
    *(double *)(v4 + 24) = a4;
  }
}

void sub_1DE85B194(double a1, double a2, double a3, double a4)
{
  if (a1 < 0.0 || a2 < 0.0 || a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v5 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DE8E28D0;
    id v7 = v5;
    sub_1DE8E17B0();
    uint64_t v8 = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1DE819640();
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = 0xE000000000000000;
    *(void *)(v6 + 64) = v9;
    *(void *)(v6 + 72) = 0xD000000000000033;
    *(void *)(v6 + 96) = v8;
    *(void *)(v6 + 104) = v9;
    *(void *)(v6 + 80) = 0x80000001DE8F2D20;
    *(void *)(v6 + 136) = v8;
    *(void *)(v6 + 144) = v9;
    *(void *)(v6 + 112) = 0xD00000000000002FLL;
    *(void *)(v6 + 120) = 0x80000001DE8F2FC0;
    __asm { FMOV            V0.2D, #10.0 }
    long long v15 = _Q0;
    sub_1DE8E17B0();
    *(void *)(v6 + 176) = v8;
    *(void *)(v6 + 184) = v9;
    *(void *)(v6 + 152) = 0;
    *(void *)(v6 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v4 = v15;
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = 0;
  }
  else
  {
    *(double *)uint64_t v4 = a1;
    *(double *)(v4 + 8) = a2;
    *(double *)(v4 + 16) = a3;
    *(double *)(v4 + 24) = a4;
  }
}

uint64_t sub_1DE85B3A4(double a1, double a2, double a3, double a4)
{
  return sub_1DE85BEA4(0xD00000000000002FLL, 0x80000001DE8F2F90, a1, a2, a3, a4);
}

uint64_t sub_1DE85B3C0(double a1, double a2, double a3, double a4)
{
  return sub_1DE85B430(0xD00000000000002DLL, 0x80000001DE8F2F60, a1, a2, a3, a4);
}

uint64_t sub_1DE85B3DC(double a1, double a2, double a3, double a4)
{
  return sub_1DE85BEA4(0xD00000000000002DLL, 0x80000001DE8F2F30, a1, a2, a3, a4);
}

uint64_t sub_1DE85B3F8(double a1, double a2, double a3, double a4)
{
  return sub_1DE85B430(0xD00000000000002ELL, 0x80000001DE8F2F00, a1, a2, a3, a4);
}

uint64_t sub_1DE85B414(double a1, double a2, double a3, double a4)
{
  return sub_1DE85B430(0xD00000000000002ELL, 0x80000001DE8F2ED0, a1, a2, a3, a4);
}

uint64_t sub_1DE85B430(uint64_t result, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v8 = result;
  if (a3 < 0.0 || a4 < 0.0 || a5 < 0.0 || a6 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v9 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DE8E28D0;
    id v11 = v9;
    sub_1DE8E17B0();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DE819640();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    *(void *)(v10 + 96) = v12;
    *(void *)(v10 + 104) = v13;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = 0xD000000000000033;
    *(void *)(v10 + 80) = 0x80000001DE8F2D20;
    *(void *)(v10 + 136) = v12;
    *(void *)(v10 + 144) = v13;
    *(void *)(v10 + 112) = v8;
    *(void *)(v10 + 120) = a2;
    __asm { FMOV            V0.2D, #2.0 }
    long long v19 = _Q0;
    sub_1DE8E17B0();
    *(void *)(v10 + 176) = v12;
    *(void *)(v10 + 184) = v13;
    *(void *)(v10 + 152) = 0;
    *(void *)(v10 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v6 = v19;
    *(void *)(v6 + 16) = 0;
    *(void *)(v6 + 24) = 0;
  }
  else
  {
    *(double *)uint64_t v6 = a3;
    *(double *)(v6 + 8) = a4;
    *(double *)(v6 + 16) = a5;
    *(double *)(v6 + 24) = a6;
  }
  return result;
}

uint64_t sub_1DE85B634(double a1, double a2, double a3, double a4)
{
  return sub_1DE85B650(0xD000000000000036, 0x80000001DE8F2E90, a1, a2, a3, a4);
}

uint64_t sub_1DE85B650(uint64_t result, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v8 = result;
  double v9 = a6;
  double v10 = a5;
  double v11 = a4;
  double v12 = a3;
  if (a3 < 0.0 || a4 < 0.0 || a5 < 0.0 || a6 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v13 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DE8E28D0;
    id v15 = v13;
    sub_1DE8E17B0();
    uint64_t v16 = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v17 = sub_1DE819640();
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0xE000000000000000;
    *(void *)(v14 + 96) = v16;
    *(void *)(v14 + 104) = v17;
    *(void *)(v14 + 64) = v17;
    *(void *)(v14 + 72) = 0xD000000000000033;
    *(void *)(v14 + 80) = 0x80000001DE8F2D20;
    *(void *)(v14 + 136) = v16;
    *(void *)(v14 + 144) = v17;
    *(void *)(v14 + 112) = v8;
    *(void *)(v14 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v14 + 176) = v16;
    *(void *)(v14 + 184) = v17;
    *(void *)(v14 + 152) = 0;
    *(void *)(v14 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v11 = 1.0;
    double v12 = 0.0;
    double v10 = 0.0;
    double v9 = 1.0;
  }
  *uint64_t v6 = v12;
  v6[1] = v11;
  void v6[2] = v10;
  v6[3] = v9;
  return result;
}

void sub_1DE85B854(double a1, double a2, double a3, double a4)
{
  double v5 = a4;
  double v6 = a3;
  double v7 = a2;
  double v8 = a1;
  if (a1 < 0.0 || a2 < 0.0 || a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v9 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DE8E28D0;
    id v11 = v9;
    sub_1DE8E17B0();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DE819640();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    *(void *)(v10 + 96) = v12;
    *(void *)(v10 + 104) = v13;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = 0xD000000000000033;
    *(void *)(v10 + 80) = 0x80000001DE8F2D20;
    *(void *)(v10 + 136) = v12;
    *(void *)(v10 + 144) = v13;
    *(void *)(v10 + 112) = 0xD000000000000036;
    *(void *)(v10 + 120) = 0x80000001DE8F2E50;
    __asm { FMOV            V0.2D, #10.0 }
    sub_1DE8E17B0();
    *(void *)(v10 + 176) = v12;
    *(void *)(v10 + 184) = v13;
    *(void *)(v10 + 152) = 0;
    *(void *)(v10 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v8 = 10.0;
    double v7 = 10.0;
    double v6 = 10.0;
    double v5 = 10.0;
  }
  *uint64_t v4 = v8;
  v4[1] = v7;
  v4[2] = v6;
  long long v4[3] = v5;
}

void sub_1DE85BA60(double a1, double a2, double a3, double a4)
{
  double v5 = a4;
  double v6 = a3;
  double v7 = a2;
  double v8 = a1;
  if (a1 < 0.0 || a2 < 0.0 || a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v9 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DE8E28D0;
    id v11 = v9;
    sub_1DE8E17B0();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DE819640();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    *(void *)(v10 + 96) = v12;
    *(void *)(v10 + 104) = v13;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = 0xD000000000000033;
    *(void *)(v10 + 80) = 0x80000001DE8F2D20;
    *(void *)(v10 + 136) = v12;
    *(void *)(v10 + 144) = v13;
    *(void *)(v10 + 112) = 0xD000000000000036;
    *(void *)(v10 + 120) = 0x80000001DE8F2E10;
    __asm { FMOV            V0.2D, #3.0 }
    sub_1DE8E17B0();
    *(void *)(v10 + 176) = v12;
    *(void *)(v10 + 184) = v13;
    *(void *)(v10 + 152) = 0;
    *(void *)(v10 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    double v8 = 3.0;
    double v7 = 3.0;
    double v6 = 3.0;
    double v5 = 3.0;
  }
  *uint64_t v4 = v8;
  v4[1] = v7;
  v4[2] = v6;
  long long v4[3] = v5;
}

uint64_t sub_1DE85BC6C(double a1, double a2, double a3, double a4)
{
  return sub_1DE85BC88(0xD000000000000035, 0x80000001DE8F2DD0, a1, a2, a3, a4);
}

uint64_t sub_1DE85BC88(uint64_t result, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v8 = result;
  double v9 = a6;
  double v10 = a5;
  double v11 = a4;
  double v12 = a3;
  if (a3 < 0.0 || a4 < 0.0 || a5 < 0.0 || a6 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    unint64_t v13 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1DE8E28D0;
    id v15 = v13;
    sub_1DE8E17B0();
    uint64_t v16 = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v17 = sub_1DE819640();
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0xE000000000000000;
    *(void *)(v14 + 96) = v16;
    *(void *)(v14 + 104) = v17;
    *(void *)(v14 + 64) = v17;
    *(void *)(v14 + 72) = 0xD000000000000033;
    *(void *)(v14 + 80) = 0x80000001DE8F2D20;
    *(void *)(v14 + 136) = v16;
    *(void *)(v14 + 144) = v17;
    *(void *)(v14 + 112) = v8;
    *(void *)(v14 + 120) = a2;
    __asm { FMOV            V0.2D, #1.0 }
    sub_1DE8E17B0();
    *(void *)(v14 + 176) = v16;
    *(void *)(v14 + 184) = v17;
    *(void *)(v14 + 152) = 0;
    *(void *)(v14 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v12 = 1.0;
    double v11 = 1.0;
    double v10 = 1.0;
    double v9 = 1.0;
  }
  *double v6 = v12;
  v6[1] = v11;
  void v6[2] = v10;
  v6[3] = v9;
  return result;
}

uint64_t sub_1DE85BE88(double a1, double a2, double a3, double a4)
{
  return sub_1DE85BEA4(0xD000000000000031, 0x80000001DE8F2D90, a1, a2, a3, a4);
}

uint64_t sub_1DE85BEA4(uint64_t result, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v8 = result;
  if (a3 < 0.0 || a4 < 0.0 || a5 < 0.0 || a6 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v9 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DE8E28D0;
    id v11 = v9;
    sub_1DE8E17B0();
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1DE819640();
    *(void *)(v10 + 32) = 0;
    *(void *)(v10 + 40) = 0xE000000000000000;
    *(void *)(v10 + 96) = v12;
    *(void *)(v10 + 104) = v13;
    *(void *)(v10 + 64) = v13;
    *(void *)(v10 + 72) = 0xD000000000000033;
    *(void *)(v10 + 80) = 0x80000001DE8F2D20;
    *(void *)(v10 + 136) = v12;
    *(void *)(v10 + 144) = v13;
    *(void *)(v10 + 112) = v8;
    *(void *)(v10 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v10 + 176) = v12;
    *(void *)(v10 + 184) = v13;
    *(void *)(v10 + 152) = 0;
    *(void *)(v10 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v6 = xmmword_1DE8E7880;
    *(void *)(v6 + 16) = 0;
    *(void *)(v6 + 24) = 0;
  }
  else
  {
    *(double *)uint64_t v6 = a3;
    *(double *)(v6 + 8) = a4;
    *(double *)(v6 + 16) = a5;
    *(double *)(v6 + 24) = a6;
  }
  return result;
}

void sub_1DE85C0AC(double a1, double a2, double a3, double a4)
{
  if (a1 < 0.0 || a2 < 0.0 || a3 < 0.0 || a4 < 0.0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    double v5 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DE8E28D0;
    id v7 = v5;
    sub_1DE8E17B0();
    uint64_t v8 = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1DE819640();
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = 0xE000000000000000;
    *(void *)(v6 + 96) = v8;
    *(void *)(v6 + 104) = v9;
    *(void *)(v6 + 64) = v9;
    *(void *)(v6 + 72) = 0xD000000000000033;
    *(void *)(v6 + 80) = 0x80000001DE8F2D20;
    *(void *)(v6 + 136) = v8;
    *(void *)(v6 + 144) = v9;
    *(void *)(v6 + 112) = 0xD00000000000002FLL;
    *(void *)(v6 + 120) = 0x80000001DE8F2D60;
    sub_1DE8E17B0();
    *(void *)(v6 + 176) = v8;
    *(void *)(v6 + 184) = v9;
    *(void *)(v6 + 152) = 0;
    *(void *)(v6 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
  }
  else
  {
    *(double *)uint64_t v4 = a1;
    *(double *)(v4 + 8) = a2;
    *(double *)(v4 + 16) = a3;
    *(double *)(v4 + 24) = a4;
  }
}

uint64_t sub_1DE85C2B4(double a1)
{
  return sub_1DE85C4F0(0xD000000000000022, 0x80000001DE8F1E40, a1);
}

uint64_t sub_1DE85C2D0(uint64_t a1)
{
  return sub_1DE85C2EC(a1, 0xD000000000000013, 0x80000001DE8F1E20);
}

uint64_t sub_1DE85C2EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    id v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001CLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1E00;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = a2;
    *(void *)(v8 + 120) = a3;
    uint64_t v4 = 100;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
  }
  *uint64_t v3 = v4;
  return result;
}

uint64_t sub_1DE85C49C(double a1)
{
  return sub_1DE85C4F0(0xD00000000000001BLL, 0x80000001DE8F1DE0, a1);
}

uint64_t sub_1DE85C4B8(double a1)
{
  return sub_1DE85C4F0(0xD000000000000016, 0x80000001DE8F1DC0, a1);
}

uint64_t sub_1DE85C4D4(double a1)
{
  return sub_1DE85C4F0(0xD000000000000010, 0x80000001DE8F1DA0, a1);
}

uint64_t sub_1DE85C4F0(uint64_t result, uint64_t a2, double a3)
{
  double v4 = a3;
  if (a3 < 0.0)
  {
    uint64_t v6 = result;
    if (qword_1EAC0B7D0 != -1) {
      swift_once();
    }
    id v7 = (void *)qword_1EAC0B8A8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1DE8E28D0;
    id v9 = v7;
    sub_1DE8E17B0();
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1DE819640();
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 40) = 0xE000000000000000;
    *(void *)(v8 + 96) = v10;
    *(void *)(v8 + 104) = v11;
    *(void *)(v8 + 64) = v11;
    *(void *)(v8 + 72) = 0xD00000000000001FLL;
    *(void *)(v8 + 80) = 0x80000001DE8F1D80;
    *(void *)(v8 + 136) = v10;
    *(void *)(v8 + 144) = v11;
    *(void *)(v8 + 112) = v6;
    *(void *)(v8 + 120) = a2;
    sub_1DE8E17B0();
    *(void *)(v8 + 176) = v10;
    *(void *)(v8 + 184) = v11;
    *(void *)(v8 + 152) = 0;
    *(void *)(v8 + 160) = 0xE000000000000000;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t result = swift_bridgeObjectRelease();
    double v4 = 1.0;
  }
  *uint64_t v3 = v4;
  return result;
}

void *sub_1DE85C6B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    double v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BF90);
  double v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_retain();
  memcpy(__dst, (const void *)(a1 + 32), 0x1BAuLL);
  uint64_t v4 = __dst[0];
  uint64_t v5 = __dst[1];
  sub_1DE85F11C((uint64_t)__dst);
  unint64_t v6 = sub_1DE821D84(v4, v5);
  if (v7)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v8 = 480;
  while (1)
  {
    *(void *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    id v9 = (uint64_t *)(v2[6] + 16 * v6);
    *id v9 = v4;
    v9[1] = v5;
    uint64_t result = memcpy((void *)(v2[7] + 432 * v6), &__dst[2], 0x1AAuLL);
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v2[2] = v13;
    if (!--v3) {
      goto LABEL_9;
    }
    memcpy(__dst, (const void *)(a1 + v8), 0x1BAuLL);
    uint64_t v4 = __dst[0];
    uint64_t v5 = __dst[1];
    sub_1DE85F11C((uint64_t)__dst);
    unint64_t v6 = sub_1DE821D84(v4, v5);
    v8 += 448;
    if (v14) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1DE85C824(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    double v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B48);
  double v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    char v7 = *((unsigned char *)v4 - 8);
    uint64_t v8 = *v4;
    uint64_t v9 = v4[1];
    uint64_t v10 = v4[2];
    uint64_t v11 = v4[3];
    char v12 = *((unsigned char *)v4 + 32);
    uint64_t v13 = v4[5];
    char v14 = *((unsigned char *)v4 + 48);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v16) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v17 = v5;
    v17[1] = v6;
    unint64_t v18 = v2[7] + (result << 6);
    *(unsigned char *)unint64_t v18 = v7;
    *(void *)(v18 + 8) = v8;
    *(void *)(v18 + 16) = v9;
    *(void *)(v18 + 24) = v10;
    *(void *)(v18 + 32) = v11;
    *(unsigned char *)(v18 + 40) = v12;
    *(void *)(v18 + 48) = v13;
    *(unsigned char *)(v18 + 56) = v14;
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v2[2] = v21;
    v4 += 10;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85C98C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    double v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E50);
  double v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85CAA0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEAA1F0);
  uint64_t v7 = sub_1DE8E1830();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DE85EFB0(v13, (uint64_t)v6);
    unint64_t result = sub_1DE821FC0((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for ClassicArticleData();
    unint64_t result = sub_1DE85F018((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85CC74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BF80);
  uint64_t v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    int v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85CD88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BF78);
  uint64_t v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85CEA4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBEA9B68);
  uint64_t v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v12 = v5;
    v12[1] = v6;
    uint64_t v13 = (void *)(v2[7] + 24 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    void v13[2] = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85CFD8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E40);
  uint64_t v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    char v9 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(unsigned char *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DE85D11C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DD0);
  uint64_t v2 = (void *)sub_1DE8E1830();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DE821D84(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v12 = v5;
    v12[1] = v6;
    uint64_t v13 = (void *)(v2[7] + 24 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    void v13[2] = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_1DE85D260@<X0>(uint64_t a1@<X8>)
{
  sub_1DE85D440((uint64_t)__src);
  sub_1DE85D7C0((uint64_t)v13);
  sub_1DE859F78(0xD00000000000001BLL, 0x80000001DE8F3A90, 1.0, 60.0);
  v12[0] = 0uLL;
  sub_1DE859F78(0xD00000000000001ALL, 0x80000001DE8F3A70, 0.0, 0.0);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v12[0] = sub_1DE85EE9C(MEMORY[0x1E4FBC860]);
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_1DE85A8BC(v3);
  uint64_t v4 = *(void *)&v12[0];
  unint64_t v5 = sub_1DE85C824(v2);
  sub_1DE85DDBC((uint64_t)v12);
  *(_OWORD *)a1 = xmmword_1DE8E78A0;
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(_OWORD *)(a1 + 24) = xmmword_1DE8E78B0;
  memcpy((void *)(a1 + 40), __src, 0x768uLL);
  memcpy((void *)(a1 + 1936), v13, 0x3EBuLL);
  *(_OWORD *)(a1 + 2944) = xmmword_1DE8E78C0;
  *(void *)(a1 + 2960) = 0x409F400000000000;
  *(_OWORD *)(a1 + 2968) = xmmword_1DE8E7890;
  *(void *)(a1 + 2984) = 0;
  *(void *)(a1 + 2992) = 0;
  *(void *)(a1 + 3000) = 0x3FF0000000000000;
  *(void *)(a1 + 3008) = 5;
  *(void *)(a1 + 3016) = v4;
  *(void *)(a1 + 3024) = v5;
  *(void *)(a1 + 3032) = 0x3FEFAE147AE147AELL;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(a1 + 3040) = _Q0;
  return memcpy((void *)(a1 + 3056), v12, 0x220uLL);
}

double sub_1DE85D414@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1DE8E78A0;
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(void *)&double result = 30;
  *(_OWORD *)(a1 + 24) = xmmword_1DE8E78B0;
  return result;
}

void sub_1DE85D440(uint64_t a1@<X8>)
{
  if (qword_1EBEA8170 != -1) {
    swift_once();
  }
  v18[0] = xmmword_1EBEA8130;
  v18[1] = xmmword_1EBEA8140;
  void v18[2] = xmmword_1EBEA8150;
  v18[3] = xmmword_1EBEA8160;
  sub_1DE85EF78((uint64_t)v18);
  sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, MEMORY[0x1E4FBC870], v11);
  double v2 = *(double *)v11;
  uint64_t v3 = v11[1];
  uint64_t v4 = v11[2];
  memset(v16, 0, sizeof(v16));
  __int16 v17 = 256;
  if (qword_1EBEA8010 != -1) {
    swift_once();
  }
  v13[0] = xmmword_1EBEA8C30;
  v13[1] = xmmword_1EBEA8C40;
  uint64_t v14 = qword_1EBEA8C50;
  sub_1DE85DED0(2, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, (uint64_t)__src, v2, 5, (uint64_t)v13, 3, (uint64_t)v13, (uint64_t)v18, v3, v4, (uint64_t)v16);
  v15[0] = xmmword_1EBEA8130;
  v15[1] = xmmword_1EBEA8140;
  v15[2] = xmmword_1EBEA8150;
  v15[3] = xmmword_1EBEA8160;
  sub_1DE85EF78((uint64_t)v15);
  uint64_t v5 = MEMORY[0x1E4FBC870];
  sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, MEMORY[0x1E4FBC870], v9);
  sub_1DE85E230(100, (uint64_t)v13, 100, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, (uint64_t)v11, *(double *)v9, 5, (uint64_t)v13, 3, (uint64_t)v13, (uint64_t)v15, v9[1], v9[2], (uint64_t)v16);
  char v10 = 0;
  uint64_t v6 = sub_1DE85C6B0(MEMORY[0x1E4FBC860]);
  sub_1DE85EF78((uint64_t)v15);
  sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, v5, v7);
  sub_1DE85E590(2, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, (uint64_t)v9, *(double *)v7, 30, (uint64_t)v13, 3, (uint64_t)v13, (uint64_t)v15, v7[1], v7[2], (uint64_t)v16);
  sub_1DE85EF78((uint64_t)v15);
  sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, v5, v8);
  sub_1DE85E8D8(2, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, 2, (uint64_t)v13, (uint64_t)v7, *(double *)v8, 30, (uint64_t)v13, 3, (uint64_t)v13, (uint64_t)v15, v8[1], v8[2], (uint64_t)v16);
  sub_1DE865D30(__src, v11, &v10, 0, (uint64_t)v6, 0x7FFFFFFFFFFFFFFFLL, 0, 0, a1, 0.5, 1.0, 1.0, 0.0, 0.0, 0.9, 0.3, 1.2, 1000, v9,
    0,
    37,
    v7,
    0x3FF8000000000000,
    0x3FF0000000000000,
    0x3FF0000000000000,
    0x3FE0000000000000,
    1.1);
}

void sub_1DE85D7C0(uint64_t a1@<X8>)
{
  v68[0] = xmmword_1DE8E7820;
  v68[1] = xmmword_1DE8E7830;
  sub_1DE866FF4(50, (uint64_t)&v64, 0.0, 1.0, 1.0, 1.0, 0.0);
  long long v60 = v64;
  uint64_t v61 = v65;
  long long v62 = v66;
  uint64_t v63 = v67;
  sub_1DE8670D4(0, 0, 1, 0, 0, (uint64_t)&v49, 0.05, 1.0, 1.0, 0.2, 5.0, 0.0, 0.0, 2.0, 2.0, 0.3);
  uint64_t v38 = v49;
  char v39 = v50;
  uint64_t v40 = v51;
  char v41 = v52;
  long long v42 = v53;
  long long v43 = v54;
  long long v44 = v55;
  long long v45 = v56;
  char v46 = v57;
  char v47 = v58;
  char v48 = v59;
  sub_1DE865FF8((double *)v37, 1.1, 1.1, 1.1, 0.0, 1.0, 1.1);
  v36[0] = v37[0];
  v36[1] = v37[1];
  v36[2] = v37[2];
  sub_1DE85ECE0((uint64_t)v35);
  sub_1DE865FF8((double *)v34, 1.1, 1.1, 1.1, 0.0, 1.0, 1.1);
  v33[0] = v34[0];
  v33[1] = v34[1];
  v33[2] = v34[2];
  __asm { FMOV            V1.2D, #2.0 }
  v32[0] = xmmword_1DE8E78D0;
  v32[1] = _Q1;
  v31[0] = xmmword_1DE8E7840;
  v31[1] = xmmword_1DE8E7850;
  sub_1DE865FF8((double *)v30, 1.1, 1.1, 1.1, 0.0, 1.0, 1.1);
  v29[0] = v30[0];
  v29[1] = v30[1];
  v29[2] = v30[2];
  sub_1DE8670D4(0, 0, 1, 0, 0, (uint64_t)&v18, 0.05, 1.0, 1.0, 0.2, 5.0, 0.0, 0.0, 2.0, 2.0, 0.3);
  uint64_t v7 = v18;
  char v8 = v19;
  uint64_t v9 = v20;
  char v10 = v21;
  long long v11 = v22;
  long long v12 = v23;
  long long v13 = v24;
  long long v14 = v25;
  char v15 = v26;
  char v16 = v27;
  char v17 = v28;
  sub_1DE8660D8((double *)v68, 0, (uint64_t *)&v60, &v38, 1, v36, 1, v35, a1, 1.0, 0.0, 0.0, 0.25, 0.14, 0.8, 0.8, 1.0, 1.0, 1.0,
    0.75,
    0.5,
    1.0,
    1.0,
    0.02,
    0.0,
    0.02,
    0.0,
    0.1,
    0.1,
    v33,
    v32,
    0.0,
    0.1,
    43200.0,
    1.0,
    0,
    0.1,
    0.64,
    50.0,
    2.0,
    0.64,
    0.8,
    0.0,
    0.0,
    0.0,
    (double *)v31,
    0.0,
    v29,
    &v7,
    0.0,
    0.0,
    0.0);
}

void sub_1DE85DB58(uint64_t a1@<X8>)
{
  sub_1DE859F78(0xD00000000000001BLL, 0x80000001DE8F3A90, 1.0, 60.0);
  sub_1DE859F78(0xD00000000000001ALL, 0x80000001DE8F3A70, 0.0, 0.0);
  v2[0] = (__n128)xmmword_1DE8E7890;
  v2[1] = 0uLL;
  sub_1DE866B84(v2, 5, a1, 1.0, 5000.0, 2000.0, 1.0);
}

uint64_t sub_1DE85DC30@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v4 = sub_1DE85EE9C(MEMORY[0x1E4FBC860]);
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t result = sub_1DE85A8BC(v2);
  *a1 = v4;
  return result;
}

void *sub_1DE85DC7C@<X0>(uint64_t a1@<X8>)
{
  sub_1DE85DDBC((uint64_t)v3);
  *(_OWORD *)a1 = xmmword_1DE8E78E0;
  *(void *)(a1 + 16) = 0x3FF0000000000000;
  return memcpy((void *)(a1 + 24), v3, 0x220uLL);
}

void sub_1DE85DCD0(void *a1@<X8>)
{
  *a1 = 0x4024000000000000;
}

void sub_1DE85DCDC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x4008000000000000;
  *(_WORD *)(a1 + 8) = 256;
  *(unsigned char *)(a1 + 10) = 1;
}

void sub_1DE85DCF8(void *a1@<X8>)
{
  *a1 = 10;
}

void sub_1DE85DD04(void *a1@<X8>)
{
  *a1 = 30;
}

double sub_1DE85DD10@<D0>(uint64_t a1@<X8>)
{
  double result = 0.99;
  *(_OWORD *)a1 = xmmword_1DE8E78E0;
  *(void *)(a1 + 16) = 0x3FF0000000000000;
  return result;
}

__n128 sub_1DE85DD28@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #1.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

double sub_1DE85DD34@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1DE8E41D0;
  a1[1] = xmmword_1DE8E41D0;
  return result;
}

double sub_1DE85DD44@<D0>(_OWORD *a1@<X8>)
{
  double result = 1.0;
  *a1 = xmmword_1DE8E7870;
  a1[1] = xmmword_1DE8E7870;
  return result;
}

__n128 sub_1DE85DD54@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #2.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

double sub_1DE85DD64@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1DE8E7880;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

double sub_1DE85DD78@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

__n128 sub_1DE85DD84@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE85DD94@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #3.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE85DDA4@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #3.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE85DDB0@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

double sub_1DE85DDBC@<D0>(uint64_t a1@<X8>)
{
  __asm { FMOV            V0.2D, #1.0 }
  v44[0] = _Q0;
  v44[1] = _Q0;
  v43[0] = xmmword_1DE8E41D0;
  v43[1] = xmmword_1DE8E41D0;
  v42[0] = xmmword_1DE8E7870;
  v42[1] = xmmword_1DE8E7870;
  long long v39 = xmmword_1DE8E7880;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  __asm { FMOV            V3.2D, #3.0 }
  long long v36 = _Q3;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  __asm { FMOV            V4.2D, #10.0 }
  long long v33 = _Q4;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  long long v30 = xmmword_1DE8E7880;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  __asm { FMOV            V5.2D, #2.0 }
  long long v27 = _Q5;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  long long v24 = xmmword_1DE8E7880;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  long long v21 = _Q5;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  v17[1] = xmmword_1DE8E41D0;
  long long v18 = _Q5;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  v16[1] = _Q4;
  v17[0] = xmmword_1DE8E41D0;
  v15[1] = _Q3;
  v16[0] = _Q4;
  v14[1] = _Q0;
  v15[0] = _Q3;
  v14[0] = _Q0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  long long v11 = xmmword_1DE8E7880;
  memset(v10, 0, sizeof(v10));
  *(void *)&double result = sub_1DE865314((double *)v44, (double *)v43, (double *)v42, (double *)&v39, (double *)&v36, (double *)&v33, (double *)&v30, (double *)&v27, a1, (double *)&v24, &v21, &v18, v17, v16, v15, v14, &v11, v10).n128_u64[0];
  return result;
}

uint64_t sub_1DE85DED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v26 = *(void *)a15;
  uint64_t v39 = *(void *)(a15 + 8);
  long long v37 = *(_OWORD *)(a15 + 32);
  long long v38 = *(_OWORD *)(a15 + 16);
  uint64_t v27 = *(void *)(a15 + 48);
  uint64_t v36 = *(void *)(a15 + 56);
  sub_1DE857968(a1, 0xD000000000000036, 0x80000001DE8F3860);
  *(void *)a9 = a1;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)(a9 + 40) = *(void *)(a2 + 32);
  sub_1DE857968(a3, 0xD000000000000039, 0x80000001DE8F3820);
  *(void *)(a9 + 48) = a3;
  long long v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 72) = v29;
  *(void *)(a9 + 88) = *(void *)(a4 + 32);
  sub_1DE857968(a5, 0xD000000000000039, 0x80000001DE8F37E0);
  *(void *)(a9 + 96) = a5;
  long long v30 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a9 + 104) = *(_OWORD *)a6;
  *(_OWORD *)(a9 + 120) = v30;
  *(void *)(a9 + 136) = *(void *)(a6 + 32);
  sub_1DE857968(a7, 0xD000000000000031, 0x80000001DE8F37A0);
  *(void *)(a9 + 144) = a7;
  long long v31 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 152) = *(_OWORD *)a8;
  *(_OWORD *)(a9 + 168) = v31;
  *(void *)(a9 + 184) = *(void *)(a8 + 32);
  sub_1DE85A70C(a11, 0xD000000000000029, 0x80000001DE8F3770);
  *(void *)(a9 + 192) = a11;
  long long v32 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 216) = v32;
  *(void *)(a9 + 232) = *(void *)(a12 + 32);
  sub_1DE8577B8(a13, 0xD000000000000029, 0x80000001DE8F3740);
  long long v33 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 248) = *(_OWORD *)a14;
  *(void *)(a9 + 240) = a13;
  *(_OWORD *)(a9 + 264) = v33;
  *(void *)(a9 + 280) = *(void *)(a14 + 32);
  sub_1DE85EF78(a15);
  sub_1DE857474(a15, 0xD000000000000039, 0x80000001DE8F3700);
  *(void *)(a9 + 288) = v26;
  *(void *)(a9 + 296) = v39;
  *(_OWORD *)(a9 + 304) = v38;
  *(_OWORD *)(a9 + 320) = v37;
  *(void *)(a9 + 336) = v27;
  *(void *)(a9 + 344) = v36;
  swift_bridgeObjectRetain();
  sub_1DE85721C(a16, a17, 0xD000000000000030, 0x80000001DE8F36C0, a10);
  *(double *)(a9 + 352) = a10;
  *(void *)(a9 + 360) = a16;
  *(void *)(a9 + 368) = a17;
  return sub_1DE85F07C(a18, a9 + 376);
}

uint64_t sub_1DE85E230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v26 = *(void *)a15;
  uint64_t v39 = *(void *)(a15 + 8);
  long long v37 = *(_OWORD *)(a15 + 32);
  long long v38 = *(_OWORD *)(a15 + 16);
  uint64_t v27 = *(void *)(a15 + 48);
  uint64_t v36 = *(void *)(a15 + 56);
  sub_1DE85C2EC(a1, 0xD000000000000031, 0x80000001DE8F3680);
  *(void *)a9 = a1;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)(a9 + 40) = *(void *)(a2 + 32);
  sub_1DE85C2EC(a3, 0xD000000000000034, 0x80000001DE8F3640);
  *(void *)(a9 + 48) = a3;
  long long v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 72) = v29;
  *(void *)(a9 + 88) = *(void *)(a4 + 32);
  sub_1DE857968(a5, 0xD000000000000034, 0x80000001DE8F3600);
  *(void *)(a9 + 96) = a5;
  long long v30 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a9 + 104) = *(_OWORD *)a6;
  *(_OWORD *)(a9 + 120) = v30;
  *(void *)(a9 + 136) = *(void *)(a6 + 32);
  sub_1DE857968(a7, 0xD00000000000002CLL, 0x80000001DE8F35D0);
  *(void *)(a9 + 144) = a7;
  long long v31 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 152) = *(_OWORD *)a8;
  *(_OWORD *)(a9 + 168) = v31;
  *(void *)(a9 + 184) = *(void *)(a8 + 32);
  sub_1DE85A70C(a11, 0xD000000000000024, 0x80000001DE8F35A0);
  *(void *)(a9 + 192) = a11;
  long long v32 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 216) = v32;
  *(void *)(a9 + 232) = *(void *)(a12 + 32);
  sub_1DE8577B8(a13, 0xD000000000000024, 0x80000001DE8F3570);
  long long v33 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 248) = *(_OWORD *)a14;
  *(void *)(a9 + 240) = a13;
  *(_OWORD *)(a9 + 264) = v33;
  *(void *)(a9 + 280) = *(void *)(a14 + 32);
  sub_1DE85EF78(a15);
  sub_1DE857474(a15, 0xD000000000000034, 0x80000001DE8F3530);
  *(void *)(a9 + 288) = v26;
  *(void *)(a9 + 296) = v39;
  *(_OWORD *)(a9 + 304) = v38;
  *(_OWORD *)(a9 + 320) = v37;
  *(void *)(a9 + 336) = v27;
  *(void *)(a9 + 344) = v36;
  swift_bridgeObjectRetain();
  sub_1DE85721C(a16, a17, 0xD00000000000002BLL, 0x80000001DE8F3500, a10);
  *(double *)(a9 + 352) = a10;
  *(void *)(a9 + 360) = a16;
  *(void *)(a9 + 368) = a17;
  return sub_1DE85F07C(a18, a9 + 376);
}

uint64_t sub_1DE85E590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v26 = *(void *)a15;
  uint64_t v39 = *(void *)(a15 + 8);
  long long v37 = *(_OWORD *)(a15 + 32);
  long long v38 = *(_OWORD *)(a15 + 16);
  uint64_t v27 = *(void *)(a15 + 48);
  uint64_t v36 = *(void *)(a15 + 56);
  sub_1DE857968(a1, 0xD000000000000034, 0x80000001DE8F34C0);
  *(void *)a9 = a1;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)(a9 + 40) = *(void *)(a2 + 32);
  sub_1DE857968(a3, 0xD000000000000037, 0x80000001DE8F3480);
  *(void *)(a9 + 48) = a3;
  long long v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 72) = v29;
  *(void *)(a9 + 88) = *(void *)(a4 + 32);
  sub_1DE857968(a5, 0xD000000000000037, 0x80000001DE8F3440);
  *(void *)(a9 + 96) = a5;
  long long v30 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a9 + 104) = *(_OWORD *)a6;
  *(_OWORD *)(a9 + 120) = v30;
  *(void *)(a9 + 136) = *(void *)(a6 + 32);
  sub_1DE857968(a7, 0xD00000000000002FLL, 0x80000001DE8F3410);
  *(void *)(a9 + 144) = a7;
  long long v31 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 152) = *(_OWORD *)a8;
  *(_OWORD *)(a9 + 168) = v31;
  *(void *)(a9 + 184) = *(void *)(a8 + 32);
  sub_1DE85706C(a11, 0xD000000000000027, 0x80000001DE8F33E0);
  *(void *)(a9 + 192) = a11;
  long long v32 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 216) = v32;
  *(void *)(a9 + 232) = *(void *)(a12 + 32);
  sub_1DE856EB0(a13);
  long long v33 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 248) = *(_OWORD *)a14;
  *(void *)(a9 + 240) = a13;
  *(_OWORD *)(a9 + 264) = v33;
  *(void *)(a9 + 280) = *(void *)(a14 + 32);
  sub_1DE85EF78(a15);
  sub_1DE857474(a15, 0xD000000000000037, 0x80000001DE8F3370);
  *(void *)(a9 + 288) = v26;
  *(void *)(a9 + 296) = v39;
  *(_OWORD *)(a9 + 304) = v38;
  *(_OWORD *)(a9 + 320) = v37;
  *(void *)(a9 + 336) = v27;
  *(void *)(a9 + 344) = v36;
  swift_bridgeObjectRetain();
  sub_1DE85721C(a16, a17, 0xD00000000000002ELL, 0x80000001DE8F3340, a10);
  *(double *)(a9 + 352) = a10;
  *(void *)(a9 + 360) = a16;
  *(void *)(a9 + 368) = a17;
  return sub_1DE85F07C(a18, a9 + 376);
}

uint64_t sub_1DE85E8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v26 = *(void *)a15;
  uint64_t v39 = *(void *)(a15 + 8);
  long long v37 = *(_OWORD *)(a15 + 32);
  long long v38 = *(_OWORD *)(a15 + 16);
  uint64_t v27 = *(void *)(a15 + 48);
  uint64_t v36 = *(void *)(a15 + 56);
  sub_1DE857968(a1, 0xD00000000000002FLL, 0x80000001DE8F3310);
  *(void *)a9 = a1;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a9 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)(a9 + 40) = *(void *)(a2 + 32);
  sub_1DE857968(a3, 0xD000000000000032, 0x80000001DE8F32D0);
  *(void *)(a9 + 48) = a3;
  long long v29 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 72) = v29;
  *(void *)(a9 + 88) = *(void *)(a4 + 32);
  sub_1DE857968(a5, 0xD000000000000032, 0x80000001DE8F3290);
  *(void *)(a9 + 96) = a5;
  long long v30 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a9 + 104) = *(_OWORD *)a6;
  *(_OWORD *)(a9 + 120) = v30;
  *(void *)(a9 + 136) = *(void *)(a6 + 32);
  sub_1DE857968(a7, 0xD00000000000002ALL, 0x80000001DE8F3260);
  *(void *)(a9 + 144) = a7;
  long long v31 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(a9 + 152) = *(_OWORD *)a8;
  *(_OWORD *)(a9 + 168) = v31;
  *(void *)(a9 + 184) = *(void *)(a8 + 32);
  sub_1DE85706C(a11, 0xD000000000000022, 0x80000001DE8F3230);
  *(void *)(a9 + 192) = a11;
  long long v32 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 216) = v32;
  *(void *)(a9 + 232) = *(void *)(a12 + 32);
  sub_1DE8577B8(a13, 0xD000000000000022, 0x80000001DE8F3200);
  long long v33 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 248) = *(_OWORD *)a14;
  *(void *)(a9 + 240) = a13;
  *(_OWORD *)(a9 + 264) = v33;
  *(void *)(a9 + 280) = *(void *)(a14 + 32);
  sub_1DE85EF78(a15);
  sub_1DE857474(a15, 0xD000000000000032, 0x80000001DE8F31C0);
  *(void *)(a9 + 288) = v26;
  *(void *)(a9 + 296) = v39;
  *(_OWORD *)(a9 + 304) = v38;
  *(_OWORD *)(a9 + 320) = v37;
  *(void *)(a9 + 336) = v27;
  *(void *)(a9 + 344) = v36;
  swift_bridgeObjectRetain();
  sub_1DE85721C(a16, a17, 0xD000000000000029, 0x80000001DE8F3170, a10);
  *(double *)(a9 + 352) = a10;
  *(void *)(a9 + 360) = a16;
  *(void *)(a9 + 368) = a17;
  return sub_1DE85F07C(a18, a9 + 376);
}

double sub_1DE85EC38@<D0>(double *a1@<X8>)
{
  return sub_1DE865FF8(a1, 1.1, 1.1, 1.1, 0.0, 1.0, 1.1);
}

double sub_1DE85EC58@<D0>(uint64_t a1@<X8>)
{
  return sub_1DE866FF4(50, a1, 0.0, 1.0, 1.0, 1.0, 0.0);
}

double sub_1DE85EC74@<D0>(uint64_t a1@<X8>)
{
  return sub_1DE8670D4(0, 0, 1, 0, 0, a1, 0.05, 1.0, 1.0, 0.2, 5.0, 0.0, 0.0, 2.0, 2.0, 0.3);
}

double sub_1DE85ECE0@<D0>(uint64_t a1@<X8>)
{
  long long v4 = xmmword_1DE8E78F0;
  uint64_t v5 = 0x3FB999999999999ALL;
  long long v2 = xmmword_1DE8E78F0;
  uint64_t v3 = 0x3FB999999999999ALL;
  return sub_1DE866DB8(0, &v4, 1, &v2, 1, 1, a1, 0.0, 0.0, 0.5, 0.0, 1.0, 0.0, 0.1, 2.0, 1.0, 0.06, 0.0, 2.0, 1.0);
}

double sub_1DE85ED84@<D0>(double *a1@<X8>)
{
  return sub_1DE867264(a1, 0.2, 0.0, 2.0, 2.0);
}

__n128 sub_1DE85ED9C@<Q0>(_OWORD *a1@<X8>)
{
  sub_1DE859F78(0xD00000000000001BLL, 0x80000001DE8F3A90, 1.0, 60.0);
  sub_1DE859F78(0xD00000000000001ALL, 0x80000001DE8F3A70, 0.0, 0.0);
  __n128 result = 0uLL;
  *a1 = xmmword_1DE8E7890;
  a1[1] = 0uLL;
  return result;
}

double sub_1DE85EE44@<D0>(uint64_t a1@<X8>)
{
  double result = 0.5;
  *(_OWORD *)a1 = xmmword_1DE8E78F0;
  *(void *)(a1 + 16) = 0x3FB999999999999ALL;
  return result;
}

unint64_t sub_1DE85EE64@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_1DE85C98C(MEMORY[0x1E4FBC860]);
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0x3FF0000000000000;
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DE85EE9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EAC0BF98);
    uint64_t v3 = (void *)sub_1DE8E1830();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1DE821DFC(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1DE85EF78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE85EFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE85F018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClassicArticleData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE85F07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BF88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE85F0E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE85F11C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE85F190(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a1;
  uint64_t v24 = a4 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a4 + 64);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v28 = (v6 - 1) & v6;
  int64_t v29 = v8;
  for (unint64_t i = __clz(__rbit64(v6)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v11 << 6))
  {
    long long v14 = (void *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v15 = v14[1];
    uint64_t v16 = *(void *)(a4 + 56) + 56 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
    uint64_t v22 = *(void *)(v16 + 40);
    char v23 = *(unsigned char *)(v16 + 48);
    v31[0] = *v14;
    v31[1] = v15;
    _OWORD v31[2] = v17;
    v31[3] = v18;
    v31[4] = v19;
    v31[5] = v20;
    v31[6] = v21;
    v31[7] = v22;
    char v32 = v23;
    swift_bridgeObjectRetain();
    sub_1DE813E10(v17, v18, v19, v20, v21, v22, v23);
    a2(&v33, v31);
    if (v30)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE864B40(v17, v18, v19, v20, v21, v22, v23);
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DE864B40(v17, v18, v19, v20, v21, v22, v23);
    unint64_t v6 = v28;
    int64_t v8 = v29;
    if (v28) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v10 = __OFADD__(v8, 1);
    int64_t v11 = v8 + 1;
    if (v10)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v25) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v11);
    if (!v12) {
      break;
    }
LABEL_17:
    uint64_t v28 = (v12 - 1) & v12;
    int64_t v29 = v11;
  }
  int64_t v13 = v11 + 1;
  if (v11 + 1 >= v25) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v24 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v11 + 2;
  if (v11 + 2 >= v25) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v24 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v11 + 3;
  if (v11 + 3 >= v25) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v24 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v11 + 4;
  if (v11 + 4 >= v25)
  {
LABEL_26:
    swift_release();
    return v33;
  }
  unint64_t v12 = *(void *)(v24 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v11 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v11);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE85F434(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a1;
  uint64_t v7 = a4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = (void *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v21[0] = *v19;
    v21[1] = v20;
    swift_bridgeObjectRetain();
    a2(&v22, v21);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE85F5FC(uint64_t a1, void (*a2)(uint64_t *, _OWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a1;
  uint64_t v20 = a4 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  int64_t v21 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1DE81775C(*(void *)(a4 + 56) + 40 * i, (uint64_t)v25);
    *(void *)&long long v24 = v19;
    *((void *)&v24 + 1) = v18;
    v22[0] = v24;
    v22[1] = v25[0];
    v22[2] = v25[1];
    uint64_t v23 = v26;
    swift_bridgeObjectRetain();
    a2(&v27, v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_1DE864C20((uint64_t)v22);
      return swift_release();
    }
    uint64_t result = sub_1DE864C20((uint64_t)v22);
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v21) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v21) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v21) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v21) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v21)
  {
LABEL_26:
    swift_release();
    return v27;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v21) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE85F830(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v57 = a1;
  uint64_t v8 = a4 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a4 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = *(void *)(a4 + 56) + 80 * i;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    uint64_t v26 = *(void *)(v23 + 16);
    char v27 = *(unsigned char *)(v23 + 24);
    uint64_t v28 = *(void *)(v23 + 32);
    char v29 = *(unsigned char *)(v23 + 40);
    uint64_t v30 = *(void *)(v23 + 48);
    char v31 = *(unsigned char *)(v23 + 56);
    int v32 = *(_DWORD *)(v23 + 60);
    char v33 = *(unsigned char *)(v23 + 64);
    int v34 = *(_DWORD *)(v23 + 68);
    char v35 = *(unsigned char *)(v23 + 72);
    char v36 = *(unsigned char *)(v23 + 73);
    char v37 = *(unsigned char *)(v23 + 74);
    char v38 = *(unsigned char *)(v23 + 75);
    char v39 = *(unsigned char *)(v23 + 76);
    LOBYTE(v23) = *(unsigned char *)(v23 + 77);
    v40[0] = v21;
    v40[1] = v22;
    v40[2] = v24;
    char v41 = v25;
    uint64_t v42 = v26;
    char v43 = v27;
    uint64_t v44 = v28;
    char v45 = v29;
    uint64_t v46 = v30;
    char v47 = v31;
    int v48 = v32;
    char v49 = v33;
    int v50 = v34;
    char v51 = v35;
    char v52 = v36;
    char v53 = v37;
    char v54 = v38;
    char v55 = v39;
    char v56 = v23;
    swift_bridgeObjectRetain();
    a2(&v57, v40);
    if (v5)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v12) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    if (!v18) {
      break;
    }
LABEL_17:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v14 + 1;
  if (v14 + 1 >= v12) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 2;
  if (v14 + 2 >= v12) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 3;
  if (v14 + 3 >= v12) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 4;
  if (v14 + 4 >= v12)
  {
LABEL_26:
    swift_release();
    return v57;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v14 = v19;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE85FA8C(void (*a1)(void *, void *), double a2, double a3, uint64_t a4, uint64_t a5)
{
  *(double *)int v34 = a2;
  *(double *)&v34[1] = a3;
  uint64_t v25 = a5 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a5 + 64);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v29 = (v7 - 1) & v7;
  int64_t v30 = v9;
  for (unint64_t i = __clz(__rbit64(v7)) | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v12 << 6))
  {
    uint64_t v15 = *(void *)(a5 + 48) + 56 * i;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    uint64_t v19 = *(void *)(v15 + 24);
    uint64_t v21 = *(void *)(v15 + 32);
    uint64_t v20 = *(void *)(v15 + 40);
    uint64_t v22 = *(void *)(*(void *)(a5 + 56) + 8 * i);
    char v23 = *(unsigned char *)(v15 + 48);
    v31[0] = v16;
    v31[1] = v17;
    _OWORD v31[2] = v18;
    v31[3] = v19;
    v31[4] = v21;
    v31[5] = v20;
    char v32 = v23;
    uint64_t v33 = v22;
    sub_1DE813E10(v16, v17, v18, v19, v21, v20, v23);
    uint64_t v24 = v35;
    a1(v34, v31);
    uint64_t result = sub_1DE864B40(v16, v17, v18, v19, v21, v20, v23);
    uint64_t v35 = v24;
    if (v24) {
      return swift_release();
    }
    unint64_t v7 = v29;
    int64_t v9 = v30;
    if (v29) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v11 = __OFADD__(v9, 1);
    int64_t v12 = v9 + 1;
    if (v11)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v26) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v25 + 8 * v12);
    if (!v13) {
      break;
    }
LABEL_17:
    uint64_t v29 = (v13 - 1) & v13;
    int64_t v30 = v12;
  }
  int64_t v14 = v12 + 1;
  if (v12 + 1 >= v26) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v25 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 2;
  if (v12 + 2 >= v26) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v25 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 3;
  if (v12 + 3 >= v26) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v25 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 4;
  if (v12 + 4 >= v26) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v25 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v12 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v26) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v25 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

double sub_1DE85FCEC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1DE821D84(a1, a2);
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 56) + 16 * v8;
      double v11 = *(double *)v10;
      int v12 = *(unsigned __int8 *)(v10 + 8);
      swift_bridgeObjectRelease();
      if (!v12) {
        return v11;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return a4;
}

uint64_t sub_1DE85FD78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  double v3 = *(double *)(a2 + 16);
  double v4 = *(double *)(a2 + 32);
  int64_t v5 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DE82A7F8(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v7 = v6[2];
  unint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  if (v7)
  {
    char v9 = v6 + 6;
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      double v14 = *(double *)v9;
      if (*(double *)v9 <= v4)
      {
        long long v54 = *((_OWORD *)v9 - 1);
        char v56 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DE84BEF8(0, *((void *)v10 + 2) + 1, 1);
          uint64_t v10 = v56;
        }
        unint64_t v12 = *((void *)v10 + 2);
        unint64_t v11 = *((void *)v10 + 3);
        if (v12 >= v11 >> 1)
        {
          sub_1DE84BEF8((char *)(v11 > 1), v12 + 1, 1);
          uint64_t v10 = v56;
        }
        *((void *)v10 + 2) = v12 + 1;
        unint64_t v13 = &v10[24 * v12];
        *((_OWORD *)v13 + 2) = v54;
        *((double *)v13 + 6) = v14;
      }
      v9 += 3;
      --v7;
    }
    while (v7);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  char v56 = v10;
  swift_retain();
  sub_1DE863C08(&v56);
  swift_release();
  sub_1DE820600(v5, (uint64_t)v56);
  int64_t v18 = v17 >> 1;
  uint64_t v19 = (v17 >> 1) - v16;
  if (__OFSUB__(v17 >> 1, v16))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    sub_1DE8E1B40();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  if (v19)
  {
    uint64_t v20 = v15;
    uint64_t v21 = v16;
    char v56 = v8;
    sub_1DE84BEF8(0, v19 & ~(v19 >> 63), 0);
    if (v19 < 0) {
      goto LABEL_43;
    }
    uint64_t v22 = v56;
    if (v21 <= v18) {
      uint64_t v23 = v18;
    }
    else {
      uint64_t v23 = v21;
    }
    uint64_t v24 = v23 - v21;
    uint64_t v25 = (void *)(v20 + 24 * v21 + 16);
    do
    {
      if (!v24)
      {
        __break(1u);
        goto LABEL_40;
      }
      long long v26 = *((_OWORD *)v25 - 1);
      uint64_t v27 = *v25;
      char v56 = v22;
      unint64_t v29 = *((void *)v22 + 2);
      unint64_t v28 = *((void *)v22 + 3);
      if (v29 >= v28 >> 1)
      {
        long long v55 = v26;
        sub_1DE84BEF8((char *)(v28 > 1), v29 + 1, 1);
        long long v26 = v55;
        uint64_t v22 = v56;
      }
      *((void *)v22 + 2) = v29 + 1;
      int64_t v30 = &v22[24 * v29];
      *((_OWORD *)v30 + 2) = v26;
      *((void *)v30 + 6) = v27;
      --v24;
      v25 += 3;
      --v19;
    }
    while (v19);
    swift_unknownObjectRelease();
    uint64_t v31 = *((void *)v22 + 2);
    if (!v31) {
      goto LABEL_37;
    }
    goto LABEL_23;
  }
  swift_unknownObjectRelease();
  uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v31)
  {
LABEL_23:
    double v32 = 1.0 - v3;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    int v34 = (double *)(v22 + 48);
    uint64_t v35 = (char *)MEMORY[0x1E4FBC868];
    while (1)
    {
      double v36 = *(v34 - 2);
      double v37 = *(v34 - 1);
      double v38 = *v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v56 = v35;
      unint64_t v41 = sub_1DE821E40(v36, v37, v38);
      uint64_t v42 = *((void *)v35 + 2);
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43)) {
        break;
      }
      char v45 = v40;
      if (*((void *)v35 + 3) >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DE822918();
        }
      }
      else
      {
        sub_1DE825608(v44, isUniquelyReferenced_nonNull_native);
        unint64_t v46 = sub_1DE821E40(v36, v37, v38);
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_44;
        }
        unint64_t v41 = v46;
      }
      double v48 = pow(v32, (double)v33);
      uint64_t v35 = v56;
      if (v45)
      {
        *(double *)(*((void *)v56 + 7) + 8 * v41) = v48;
      }
      else
      {
        *(void *)&v56[8 * (v41 >> 6) + 64] |= 1 << v41;
        char v49 = (double *)(*((void *)v35 + 6) + 24 * v41);
        *char v49 = v36;
        v49[1] = v37;
        v49[2] = v38;
        *(double *)(*((void *)v35 + 7) + 8 * v41) = v48;
        uint64_t v50 = *((void *)v35 + 2);
        BOOL v51 = __OFADD__(v50, 1);
        uint64_t v52 = v50 + 1;
        if (v51) {
          goto LABEL_41;
        }
        *((void *)v35 + 2) = v52;
      }
      ++v33;
      swift_bridgeObjectRelease();
      v34 += 3;
      if (v31 == v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_37:
  uint64_t v35 = (char *)MEMORY[0x1E4FBC868];
LABEL_38:
  swift_bridgeObjectRelease();
  return (uint64_t)v35;
}

void sub_1DE86018C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long double v4 = *(double *)(a3 + 8);
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1DE84BEF8(0, v5, 0);
    uint64_t v7 = v22;
    unint64_t v8 = *(void *)(v22 + 16);
    uint64_t v9 = 24 * v8;
    uint64_t v10 = (void *)(a1 + 48);
    do
    {
      long long v11 = *((_OWORD *)v10 - 1);
      uint64_t v12 = *v10;
      unint64_t v13 = *(void *)(v22 + 24);
      if (v8++ >= v13 >> 1)
      {
        long long v21 = *((_OWORD *)v10 - 1);
        sub_1DE84BEF8((char *)(v13 > 1), v8, 1);
        long long v11 = v21;
      }
      *(void *)(v22 + 16) = v8;
      uint64_t v15 = v22 + v9;
      *(_OWORD *)(v15 + 32) = v11;
      *(void *)(v15 + 48) = v12;
      v9 += 24;
      v10 += 6;
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    unint64_t v8 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v8)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v16 = (double *)(v7 + 48);
  double v17 = 0.0;
  double v18 = 0.0;
  do
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v19 = sub_1DE821E40(*(v16 - 2), *(v16 - 1), *v16);
      if (v20)
      {
        double v18 = v18 + *(double *)(*(void *)(a2 + 56) + 8 * v19);
        double v17 = v17 + 1.0;
      }
    }
    v16 += 3;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  if (v17 > 0.0) {
    pow(v17, v4);
  }
}

void sub_1DE860320(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    long double v7 = *(double *)(a3 + 8);
    unint64_t v8 = (double *)(swift_bridgeObjectRetain() + 64);
    double v9 = 0.0;
    double v10 = 0.0;
    do
    {
      uint64_t v11 = *((void *)v8 - 4);
      uint64_t v12 = *((void *)v8 - 3);
      double v13 = *v8;
      v8 += 5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      double v14 = sub_1DE85FCEC(v11, v12, a2, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v9 = v9 + v13 * v14;
      double v10 = v10 + 1.0;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    if (v10 > 0.0) {
      pow(v10, v7);
    }
  }
}

uint64_t static Classic.TagEvaluator.memberships(tags:userContext:aggregateContext:baselinePrior:decayRate:userFeedbackConfig:)(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, Swift::Double a8)
{
  uint64_t v8 = a7;
  char v45 = a2;
  uint64_t v15 = *(void *)(a7 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v17);
  uint64_t v47 = (uint64_t)&v38 - v18;
  uint64_t v19 = *a4;
  uint64_t v20 = a4[1];
  long long v21 = *(_OWORD *)(a5 + 80);
  v50[4] = *(_OWORD *)(a5 + 64);
  v51[0] = v21;
  *(_DWORD *)((char *)v51 + 15) = *(_DWORD *)(a5 + 95);
  long long v22 = *(_OWORD *)(a5 + 16);
  v50[0] = *(_OWORD *)a5;
  v50[1] = v22;
  long long v23 = *(_OWORD *)(a5 + 48);
  v50[2] = *(_OWORD *)(a5 + 32);
  v50[3] = v23;
  int64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v24)
  {
    uint64_t v39 = v15;
    uint64_t v40 = a3;
    uint64_t v42 = a6;
    uint64_t v43 = AssociatedTypeWitness;
    uint64_t v44 = v8;
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v24, 0);
    uint64_t v25 = v49;
    uint64_t v41 = a1;
    uint64_t v26 = a1 + 40;
    int64_t v27 = v24;
    do
    {
      *(void *)&long long v48 = 2831206;
      *((void *)&v48 + 1) = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      long long v28 = v48;
      uint64_t v49 = v25;
      unint64_t v30 = *(void *)(v25 + 16);
      unint64_t v29 = *(void *)(v25 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1DE84BBE0((char *)(v29 > 1), v30 + 1, 1);
        uint64_t v25 = v49;
      }
      v26 += 16;
      *(void *)(v25 + 16) = v30 + 1;
      *(_OWORD *)(v25 + 16 * v30 + 32) = v28;
      --v27;
    }
    while (v27);
    uint64_t v8 = v44;
    uint64_t AssociatedTypeWitness = v43;
    a6 = v42;
    a1 = v41;
    uint64_t v15 = v39;
  }
  uint64_t v31 = sub_1DE82DA80(v25);
  swift_bridgeObjectRelease();
  long long v48 = 0uLL;
  (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v15 + 48))(v31, &v48, a6, v15);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9D98);
  uint64_t v32 = sub_1DE8E1800();
  swift_bridgeObjectRelease();
  *(void *)&long long v48 = v19;
  *((void *)&v48 + 1) = v20;
  ClassicAggregateContextType.lookupBaseline(with:)(&v48, a6, v8, v47);
  uint64_t v33 = MEMORY[0x1E4FBC868];
  uint64_t v49 = MEMORY[0x1E4FBC868];
  if (v24)
  {
    swift_bridgeObjectRetain();
    int v34 = (uint64_t *)(a1 + 40);
    uint64_t v35 = v45;
    do
    {
      uint64_t v36 = *v34;
      *(void *)&long long v48 = *(v34 - 1);
      *((void *)&v48 + 1) = v36;
      swift_bridgeObjectRetain();
      sub_1DE86080C(&v49, (uint64_t *)&v48, v32, v35, v47, (uint64_t)v50, a8);
      v34 += 2;
      swift_bridgeObjectRelease();
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v33 = v49;
  }
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1DE86080C(void *a1, uint64_t *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, Swift::Double a7)
{
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)&v23[0] = 2831206;
  *((void *)&v23[0] + 1) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_1DE8E1490();
  *(void *)(inited + 32) = 2831206;
  *(void *)(inited + 40) = 0xE300000000000000;
  long long v15 = *(_OWORD *)(a6 + 80);
  v23[4] = *(_OWORD *)(a6 + 64);
  *(_OWORD *)int64_t v24 = v15;
  *(_DWORD *)&v24[15] = *(_DWORD *)(a6 + 95);
  long long v16 = *(_OWORD *)(a6 + 16);
  v23[0] = *(_OWORD *)a6;
  v23[1] = v16;
  long long v17 = *(_OWORD *)(a6 + 48);
  void v23[2] = *(_OWORD *)(a6 + 32);
  v23[3] = v17;
  uint64_t v18 = sub_1DE8C14C0(v13, v12, inited, a3, a4, a5, (uint64_t)v23, a7);
  LOBYTE(a6) = v19 & 1;
  swift_setDeallocating();
  swift_arrayDestroy();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v23[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_1DE8298F8(v18, a6, v13, v12, isUniquelyReferenced_nonNull_native);
  *a1 = *(void *)&v23[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static Classic.TagEvaluator.evaluate(tags:translations:userContext:aggregateContext:baselinePrior:decayRate:channelTopicMappings:topicTopicMappings:locationTopicMappings:userFeedbackConfig:tagScoringConfig:tagMetadataByTagID:)(uint64_t a1, Swift::Double a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, uint64_t *a9, uint64_t a10, _OWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  long long v16 = *(_OWORD *)(a10 + 64);
  long long v17 = *(_OWORD *)(a10 + 80);
  long long v18 = *(_OWORD *)(a10 + 32);
  v66[3] = *(_OWORD *)(a10 + 48);
  v66[4] = v16;
  v67[0] = v17;
  long long v19 = *(_OWORD *)(a10 + 16);
  v66[0] = *(_OWORD *)a10;
  uint64_t v21 = *a6;
  uint64_t v20 = a6[1];
  uint64_t v22 = *a7;
  uint64_t v23 = *a8;
  uint64_t v24 = a8[1];
  uint64_t v63 = a8[2];
  uint64_t v25 = *a9;
  uint64_t v61 = a7[1];
  uint64_t v62 = a9[1];
  uint64_t v55 = a9[2];
  uint64_t v56 = a7[2];
  *(_DWORD *)((char *)v67 + 15) = *(_DWORD *)(a10 + 95);
  v66[1] = v19;
  v66[2] = v18;
  long long v26 = a11[4];
  long long v27 = a11[2];
  v68[3] = a11[3];
  v68[4] = v26;
  long long v28 = a11[1];
  v68[0] = *a11;
  v68[1] = v28;
  _OWORD v68[2] = v27;
  if (qword_1EBEA9808 != -1) {
    swift_once();
  }
  unint64_t v29 = (void *)qword_1EBEA9800;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1DE8E28D0;
  uint64_t v31 = MEMORY[0x1E4FBB550];
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v33 = MEMORY[0x1E4FBB5C8];
  *(void *)(v30 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v30 + 64) = v33;
  *(void *)(v30 + 32) = v32;
  uint64_t v34 = *(void *)(v22 + 16);
  *(void *)(v30 + 96) = v31;
  *(void *)(v30 + 104) = v33;
  *(void *)(v30 + 72) = v34;
  uint64_t v35 = *(void *)(v23 + 16);
  *(void *)(v30 + 136) = v31;
  *(void *)(v30 + 144) = v33;
  *(void *)(v30 + 112) = v35;
  uint64_t v36 = *(void *)(v25 + 16);
  *(void *)(v30 + 176) = v31;
  *(void *)(v30 + 184) = v33;
  *(void *)(v30 + 152) = v36;
  id v37 = v29;
  uint64_t v38 = v23;
  id v39 = v37;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_1DE82DA80(v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1DE82A9D8(v24);
  swift_bridgeObjectRelease();
  uint64_t v58 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v43 = sub_1DE864AC0((uint64_t)v42, v41);
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1DE82A9D8(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v45 = sub_1DE864AC0((uint64_t)v44, v43);
  swift_release();
  uint64_t v46 = sub_1DE82A8F0(v45);
  swift_bridgeObjectRelease();
  *(void *)&v64[0] = v21;
  *((void *)&v64[0] + 1) = v20;
  uint64_t v60 = static Classic.TagEvaluator.memberships(tags:userContext:aggregateContext:baselinePrior:decayRate:userFeedbackConfig:)((uint64_t)v46, a4, a5, (uint64_t *)v64, a10, a13, a14, a2);
  swift_release();
  uint64_t v47 = v25;
  v65[0] = v25;
  v65[1] = v62;
  v65[2] = v55;
  long long v48 = a11[3];
  v64[2] = a11[2];
  void v64[3] = v48;
  v64[4] = a11[4];
  long long v49 = a11[1];
  v64[0] = *a11;
  v64[1] = v49;
  uint64_t v50 = sub_1DE85FD78((uint64_t)v65, (uint64_t)v64);
  v65[0] = MEMORY[0x1E4FBC868];
  if (v32)
  {
    uint64_t v51 = v50;
    uint64_t v52 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v53 = *v52;
      *(void *)&v64[0] = *(v52 - 1);
      *((void *)&v64[0] + 1) = v53;
      swift_bridgeObjectRetain();
      sub_1DE860F4C(v65, (uint64_t *)v64, v60, (double *)v66, v58, v24, v63, (uint64_t)v68, v22, v61, v56, a4, v47, v62, v55, v51, a12);
      v52 += 2;
      swift_bridgeObjectRelease();
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v65[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
}

uint64_t sub_1DE860DCC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1DE8AC840(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DE860F4C(uint64_t *a1, uint64_t *a2, uint64_t a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21 = *a2;
  uint64_t v20 = a2[1];
  double v22 = *a4;
  double v23 = sub_1DE85FCEC(*a2, v20, a3, *a4);
  if (*(void *)(a7 + 16) && (unint64_t v24 = sub_1DE821D84(v21, v20), (v25 & 1) != 0))
  {
    uint64_t v26 = *(void *)(*(void *)(a7 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  long long v27 = *(_OWORD *)(a8 + 48);
  long long v67 = *(_OWORD *)(a8 + 32);
  long long v68 = v27;
  long long v69 = *(_OWORD *)(a8 + 64);
  long long v28 = *(_OWORD *)(a8 + 16);
  long long v65 = *(_OWORD *)a8;
  long long v66 = v28;
  sub_1DE860320(v26, a3, (uint64_t)&v65, v22);
  double v30 = v29;
  swift_bridgeObjectRelease();
  if (*(void *)(a11 + 16) && (unint64_t v31 = sub_1DE821D84(v21, v20), (v32 & 1) != 0))
  {
    uint64_t v33 = *(void *)(*(void *)(a11 + 56) + 8 * v31);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
  long long v34 = *(_OWORD *)(a8 + 48);
  long long v67 = *(_OWORD *)(a8 + 32);
  long long v68 = v34;
  long long v69 = *(_OWORD *)(a8 + 64);
  long long v35 = *(_OWORD *)(a8 + 16);
  long long v65 = *(_OWORD *)a8;
  long long v66 = v35;
  sub_1DE860320(v33, a3, (uint64_t)&v65, v22);
  double v37 = v36;
  swift_bridgeObjectRelease();
  double v38 = sub_1DE861368(a12, a13, a14, a15, v21, v20, a16, (long long *)a8);
  double v39 = 0.0;
  if (*(void *)(a17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1DE821D84(v21, v20);
    if (v41)
    {
      uint64_t v42 = *(void *)(a17 + 56) + 80 * v40;
      double v43 = *(double *)(v42 + 16);
      int v44 = *(unsigned __int8 *)(v42 + 24);
      swift_bridgeObjectRelease();
      double v39 = 0.0;
      if (!v44) {
        double v39 = v43;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      double v39 = 0.0;
    }
  }
  double v45 = *(double *)(a8 + 48);
  double v46 = v45 * pow(v39, *(long double *)(a8 + 56)) + 1.0;
  uint64_t v47 = a12[3];
  uint64_t v48 = a12[4];
  __swift_project_boxed_opaque_existential_1(a12, v47);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v48 + 96))(&v65, v47, v48);
  if (BYTE8(v66)) {
    double v49 = 0.0;
  }
  else {
    double v49 = *(double *)(a8 + 24);
  }
  double v51 = *(double *)(a8 + 64);
  double v50 = *(double *)(a8 + 72);
  double v52 = v49 + v50 + v51 + *(double *)a8;
  double v53 = (v23 * v50 + v30 * v51 + v37 * *(double *)a8 + v38 * *(double *)(a8 + 24)) / v52;
  if (v52 <= 0.0) {
    double v53 = 0.0;
  }
  *(double *)&long long v65 = v37;
  *((double *)&v65 + 1) = v23;
  *(double *)&long long v66 = v38;
  *((double *)&v66 + 1) = v46 * v53;
  *(double *)&long long v67 = v46;
  *((double *)&v67 + 1) = v30;
  if (qword_1EBEA9808 != -1) {
    swift_once();
  }
  long long v54 = (void *)qword_1EBEA9800;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1DE8E31B0;
  uint64_t v56 = MEMORY[0x1E4FBB1A0];
  *(void *)(v55 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v57 = sub_1DE819640();
  *(void *)(v55 + 64) = v57;
  *(void *)(v55 + 32) = v21;
  *(void *)(v55 + 40) = v20;
  swift_bridgeObjectRetain();
  id v58 = v54;
  uint64_t v59 = sub_1DE82F630();
  *(void *)(v55 + 96) = v56;
  *(void *)(v55 + 104) = v57;
  *(void *)(v55 + 72) = v59;
  *(void *)(v55 + 80) = v60;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v64 = *a1;
  *a1 = 0x8000000000000000;
  sub_1DE829A4C(&v65, v21, v20, isUniquelyReferenced_nonNull_native);
  *a1 = v64;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1DE861368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, long long *a8)
{
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 96))(&v23, v13, v14);
  double v15 = 0.0;
  if ((BYTE8(v24) & 1) == 0)
  {
    if (*(void *)(a4 + 16) && (unint64_t v16 = sub_1DE821D84(a5, a6), (v17 & 1) != 0))
    {
      uint64_t v18 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    long long v19 = a8[3];
    long long v25 = a8[2];
    long long v26 = v19;
    long long v27 = a8[4];
    long long v20 = a8[1];
    long long v23 = *a8;
    long long v24 = v20;
    sub_1DE86018C(v18, a7, (uint64_t)&v23);
    double v15 = v21;
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t static Classic.TagEvaluator.evaluate(tags:translations:context:baselinePrior:decayRate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v89 = a3;
  uint64_t v93 = a6;
  uint64_t v88 = *(void *)(a6 + 8);
  uint64_t v91 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v92 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  uint64_t v90 = (uint64_t)&v87 - v12;
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v95 = a2;
    swift_bridgeObjectRetain();
    uint64_t v97 = v15;
    uint64_t v98 = MEMORY[0x1E4FBC868];
    uint64_t v87 = a1;
    unint64_t v16 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v19 = *(v16 - 1);
      uint64_t v18 = *v16;
      *(void *)&long long v99 = 2831206;
      *((void *)&v99 + 1) = 0xE300000000000000;
      swift_bridgeObjectRetain_n();
      sub_1DE8E1490();
      long long v20 = v99;
      swift_bridgeObjectRetain();
      uint64_t v21 = v98;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v99 = v21;
      unint64_t v24 = sub_1DE821D84(v19, v18);
      uint64_t v25 = *(void *)(v21 + 16);
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        break;
      }
      char v28 = v23;
      if (*(void *)(v21 + 24) >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DE822E40();
        }
      }
      else
      {
        sub_1DE825F64(v27, isUniquelyReferenced_nonNull_native);
        unint64_t v29 = sub_1DE821D84(v19, v18);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_43;
        }
        unint64_t v24 = v29;
      }
      unint64_t v31 = (void *)v99;
      uint64_t v98 = v99;
      if (v28)
      {
        uint64_t v17 = *(void *)(v99 + 56) + 56 * v24;
        sub_1DE864B40(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(unsigned char *)(v17 + 48));
        *(_OWORD *)uint64_t v17 = v20;
        *(void *)(v17 + 16) = v19;
        *(void *)(v17 + 24) = v18;
        *(void *)(v17 + 32) = 0;
        *(void *)(v17 + 40) = 0;
        *(unsigned char *)(v17 + 48) = 4;
      }
      else
      {
        *(void *)(v99 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        char v32 = (uint64_t *)(v31[6] + 16 * v24);
        *char v32 = v19;
        v32[1] = v18;
        uint64_t v33 = v31[7] + 56 * v24;
        *(_OWORD *)uint64_t v33 = v20;
        *(void *)(v33 + 16) = v19;
        *(void *)(v33 + 24) = v18;
        *(void *)(v33 + 32) = 0;
        *(void *)(v33 + 40) = 0;
        *(unsigned char *)(v33 + 48) = 4;
        uint64_t v34 = v31[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_40;
        }
        _OWORD v31[2] = v36;
        swift_bridgeObjectRetain();
      }
      v16 += 2;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (!--v15)
      {
        uint64_t v37 = v87;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        double v38 = (uint64_t *)(v37 + 40);
        double v39 = (void *)MEMORY[0x1E4FBC868];
        uint64_t v40 = v95;
        uint64_t v41 = v97;
        while (1)
        {
          if (*(void *)(v40 + 16))
          {
            uint64_t v42 = *(v38 - 1);
            uint64_t v43 = *v38;
            swift_bridgeObjectRetain_n();
            unint64_t v44 = sub_1DE821D84(v42, v43);
            if (v45)
            {
              uint64_t v97 = v41;
              double v46 = (void *)(*(void *)(v40 + 56) + 16 * v44);
              uint64_t v48 = (void *)*v46;
              uint64_t v47 = v46[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)&long long v99 = 2831206;
              *((void *)&v99 + 1) = 0xE300000000000000;
              swift_bridgeObjectRetain();
              uint64_t v96 = v48;
              sub_1DE8E1490();
              long long v49 = v99;
              double v50 = v39;
              char v51 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v99 = v50;
              unint64_t v53 = sub_1DE821D84(v42, v43);
              uint64_t v54 = v50[2];
              BOOL v55 = (v52 & 1) == 0;
              uint64_t v56 = v54 + v55;
              if (__OFADD__(v54, v55)) {
                goto LABEL_41;
              }
              char v57 = v52;
              if (v50[3] >= v56)
              {
                if (v51)
                {
                  double v39 = (void *)v99;
                  if ((v52 & 1) == 0) {
                    goto LABEL_28;
                  }
                }
                else
                {
                  sub_1DE822E40();
                  double v39 = (void *)v99;
                  if ((v57 & 1) == 0) {
                    goto LABEL_28;
                  }
                }
              }
              else
              {
                sub_1DE825F64(v56, v51);
                unint64_t v58 = sub_1DE821D84(v42, v43);
                if ((v57 & 1) != (v59 & 1)) {
                  goto LABEL_43;
                }
                unint64_t v53 = v58;
                double v39 = (void *)v99;
                if ((v57 & 1) == 0)
                {
LABEL_28:
                  v39[(v53 >> 6) + 8] |= 1 << v53;
                  uint64_t v61 = (uint64_t *)(v39[6] + 16 * v53);
                  uint64_t *v61 = v42;
                  v61[1] = v43;
                  uint64_t v62 = v39[7] + 56 * v53;
                  *(_OWORD *)uint64_t v62 = v49;
                  *(void *)(v62 + 16) = v96;
                  *(void *)(v62 + 24) = v47;
                  *(void *)(v62 + 32) = 0;
                  *(void *)(v62 + 40) = 0;
                  *(unsigned char *)(v62 + 48) = 4;
                  uint64_t v63 = v39[2];
                  BOOL v35 = __OFADD__(v63, 1);
                  uint64_t v64 = v63 + 1;
                  if (v35) {
                    goto LABEL_42;
                  }
                  v39[2] = v64;
                  swift_bridgeObjectRetain();
                  goto LABEL_30;
                }
              }
              uint64_t v60 = v39[7] + 56 * v53;
              sub_1DE864B40(*(void *)v60, *(void *)(v60 + 8), *(void *)(v60 + 16), *(void *)(v60 + 24), *(void *)(v60 + 32), *(void *)(v60 + 40), *(unsigned char *)(v60 + 48));
              *(_OWORD *)uint64_t v60 = v49;
              *(void *)(v60 + 16) = v96;
              *(void *)(v60 + 24) = v47;
              *(void *)(v60 + 32) = 0;
              *(void *)(v60 + 40) = 0;
              *(unsigned char *)(v60 + 48) = 4;
LABEL_30:
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v40 = v95;
              uint64_t v41 = v97;
              goto LABEL_16;
            }
            swift_bridgeObjectRelease_n();
          }
LABEL_16:
          v38 += 2;
          if (!--v41)
          {
            swift_bridgeObjectRelease();
            uint64_t v65 = v98;
            goto LABEL_33;
          }
        }
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
  }
  else
  {
    uint64_t v65 = MEMORY[0x1E4FBC868];
    double v39 = (void *)MEMORY[0x1E4FBC868];
LABEL_33:
    *(void *)&long long v99 = sub_1DE82AAC0((uint64_t)v39);
    uint64_t v66 = swift_bridgeObjectRetain();
    uint64_t v98 = v65;
    sub_1DE813814(v66);
    uint64_t v67 = v99;
    uint64_t v68 = *(void *)(v99 + 16);
    if (v68)
    {
      uint64_t v96 = v39;
      swift_bridgeObjectRetain();
      uint64_t v95 = v67;
      long long v69 = (unsigned __int8 *)(v67 + 80);
      uint64_t v70 = MEMORY[0x1E4FBC870];
      do
      {
        uint64_t v71 = *((void *)v69 - 6);
        uint64_t v72 = *((void *)v69 - 5);
        uint64_t v73 = *((void *)v69 - 4);
        uint64_t v74 = *((void *)v69 - 3);
        uint64_t v76 = *((void *)v69 - 2);
        uint64_t v75 = *((void *)v69 - 1);
        int v77 = *v69;
        v69 += 56;
        LODWORD(v97) = v77;
        sub_1DE813E10(v71, v72, v73, v74, v76, v75, v77);
        swift_bridgeObjectRetain();
        char v78 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v99 = v70;
        sub_1DE8645A0(v71, v72, v78);
        uint64_t v70 = v99;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DE864B40(v71, v72, v73, v74, v76, v75, v97);
        --v68;
      }
      while (v68);
      swift_bridgeObjectRelease();
      double v39 = v96;
    }
    else
    {
      uint64_t v70 = MEMORY[0x1E4FBC870];
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v99 = v13;
    *((void *)&v99 + 1) = v14;
    uint64_t v80 = v90;
    uint64_t v79 = v91;
    uint64_t v81 = v93;
    ClassicAggregateContextType.lookupBaseline(with:)(&v99, v91, v93, v90);
    long long v99 = 0uLL;
    uint64_t v82 = (*(uint64_t (**)(uint64_t, long long *, uint64_t))(v88 + 48))(v70, &v99, v79);
    uint64_t v83 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v83, v84);
    *(&v87 - 6) = v79;
    *(&v87 - 5) = v81;
    *(&v87 - 4) = v82;
    *(&v87 - 3) = (uint64_t)v39;
    *(&v87 - 2) = v80;
    *((double *)&v87 - 1) = a7;
    uint64_t v85 = sub_1DE85F190(MEMORY[0x1E4FBC868], (void (*)(uint64_t *, void *))sub_1DE864BD8, (uint64_t)(&v87 - 8), v98);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v80, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v85;
  }
  return result;
}

uint64_t sub_1DE861B98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, Swift::Double a8)
{
  uint64_t v43 = a5;
  uint64_t v38 = a4;
  long long v49 = a1;
  uint64_t v40 = a7;
  uint64_t v41 = *(void *)(a7 + 8);
  uint64_t v42 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = sub_1DE8E16E0();
  uint64_t v36 = *(void *)(v37 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v37, v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13, v16);
  double v46 = (char *)&v36 - v17;
  uint64_t v18 = *(void *)(a2 + 8);
  uint64_t v47 = *(void *)a2;
  uint64_t v48 = v18;
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v22 = *(void *)(a2 + 32);
  uint64_t v21 = *(void *)(a2 + 40);
  uint64_t v23 = *(void *)(a2 + 48);
  uint64_t v24 = *(void *)(a2 + 56);
  LODWORD(a2) = *(unsigned __int8 *)(a2 + 64);
  v52[0] = v19;
  v52[1] = v20;
  v52[2] = v22;
  v52[3] = v21;
  v52[4] = v23;
  v52[5] = v24;
  char v53 = a2;
  v51[0] = v19;
  v51[1] = v20;
  swift_bridgeObjectRetain();
  uint64_t v45 = v23;
  int v44 = a2;
  sub_1DE813E10(v19, v20, v22, v21, v23, v24, a2);
  swift_bridgeObjectRetain();
  uint64_t v39 = a3;
  MEMORY[0x1E01D3F40](v51, a3, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v25 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    sub_1DE864B40(v19, v20, v22, v21, v45, v24, v44);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
    BOOL v26 = v49;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51[0] = *v26;
    *BOOL v26 = 0x8000000000000000;
    sub_1DE829BD8(v47, v48, isUniquelyReferenced_nonNull_native, 0.0);
    *BOOL v26 = v51[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    char v30 = v46;
    v29(v46, v15, AssociatedTypeWitness);
    uint64_t v31 = sub_1DE861F9C((uint64_t)v52, v38, v39, v30, v42, v40);
    sub_1DE864B40(v19, v20, v22, v21, v45, v24, v44);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    double v33 = sub_1DE81656C(v43, v31, AssociatedTypeWitness, AssociatedConformanceWitness, a8);
    swift_bridgeObjectRelease();
    uint64_t v34 = v49;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    v51[0] = *v34;
    *uint64_t v34 = 0x8000000000000000;
    sub_1DE829BD8(v47, v48, v35, v33);
    *uint64_t v34 = v51[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v46, AssociatedTypeWitness);
  }
}

uint64_t sub_1DE861F9C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v47 = a3;
  uint64_t v9 = *(void *)(a6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1DE8E16E0();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11, v12);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13, v17);
  uint64_t v19 = (char *)&v39 - v18;
  sub_1DE82F210(a1, (uint64_t)v49);
  if (v52 == 4)
  {
    uint64_t v45 = a4;
    if (*(void *)(a2 + 16))
    {
      int v44 = v19;
      uint64_t v20 = v50;
      uint64_t v21 = v51;
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DE821D84(v20, v21);
      if (v23)
      {
        uint64_t v24 = *(void *)(a2 + 56) + 56 * v22;
        uint64_t v25 = *(void *)v24;
        uint64_t v26 = *(void *)(v24 + 8);
        uint64_t v27 = *(void *)(v24 + 24);
        uint64_t v42 = *(void *)(v24 + 16);
        uint64_t v43 = v9;
        uint64_t v28 = *(void *)(v24 + 32);
        uint64_t v40 = *(void *)(v24 + 40);
        int v41 = *(unsigned __int8 *)(v24 + 48);
        uint64_t v29 = v27;
        sub_1DE813E10(v25, v26, v42, v27, v28, v40, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1DE864B40(v25, v26, v42, v29, v28, v40, v41);
        v48[0] = v25;
        v48[1] = v26;
        MEMORY[0x1E01D3F40](v48, v47, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) != 1)
        {
          uint64_t v34 = v44;
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v44, v15, AssociatedTypeWitness);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_1DE8E31B0;
          *(void *)(v30 + 56) = AssociatedTypeWitness;
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          *(void *)(v30 + 64) = AssociatedConformanceWitness;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 32));
          uint64_t v37 = *(void (**)(uint64_t *, char *, uint64_t))(v16 + 16);
          v37(boxed_opaque_existential_1, v34, AssociatedTypeWitness);
          *(void *)(v30 + 96) = AssociatedTypeWitness;
          *(void *)(v30 + 104) = AssociatedConformanceWitness;
          uint64_t v38 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 72));
          v37(v38, v45, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v34, AssociatedTypeWitness);
          return v30;
        }
        (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v11);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1DE8E25E0;
    *(void *)(v30 + 56) = AssociatedTypeWitness;
    *(void *)(v30 + 64) = swift_getAssociatedConformanceWitness();
    char v32 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(v32, v45, AssociatedTypeWitness);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1DE8E25E0;
    *(void *)(v30 + 56) = AssociatedTypeWitness;
    *(void *)(v30 + 64) = swift_getAssociatedConformanceWitness();
    uint64_t v31 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(v31, a4, AssociatedTypeWitness);
  }
  return v30;
}

uint64_t sub_1DE8623F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E38);
  uint64_t v3 = sub_1DE8E1710();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1DE8626D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F10);
  uint64_t v3 = sub_1DE8E1710();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v37 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    char v35 = v1;
    int64_t v36 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v38 = v2;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        int64_t v47 = v10;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v36) {
          goto LABEL_33;
        }
        unint64_t v16 = v37[v15];
        int64_t v17 = v10 + 1;
        if (!v16)
        {
          int64_t v17 = v10 + 2;
          if (v10 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v16 = v37[v17];
          if (!v16)
          {
            int64_t v17 = v10 + 3;
            if (v10 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v16 = v37[v17];
            if (!v16)
            {
              uint64_t v18 = v10 + 4;
              if (v10 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v37[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v37[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        int64_t v47 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = *(void *)(v2 + 48) + 112 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      long long v45 = *(_OWORD *)(v19 + 40);
      long long v46 = *(_OWORD *)(v19 + 24);
      uint64_t v22 = *(void *)(v19 + 56);
      char v23 = *(unsigned char *)(v19 + 64);
      char v24 = *(unsigned char *)(v19 + 65);
      char v25 = *(unsigned char *)(v19 + 66);
      char v26 = *(unsigned char *)(v19 + 67);
      uint64_t v43 = *(void *)(v19 + 72);
      uint64_t v44 = *(void *)(v19 + 16);
      uint64_t v42 = *(void *)(v19 + 80);
      char v41 = *(unsigned char *)(v19 + 88);
      uint64_t v40 = *(void *)(v19 + 96);
      char v39 = *(unsigned char *)(v19 + 104);
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v8 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v11 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 112 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(void *)(v12 + 16) = v44;
      *(_OWORD *)(v12 + 24) = v46;
      *(_OWORD *)(v12 + 40) = v45;
      *(void *)(v12 + 56) = v22;
      *(unsigned char *)(v12 + 64) = v23;
      *(unsigned char *)(v12 + 65) = v24;
      *(unsigned char *)(v12 + 66) = v25;
      *(unsigned char *)(v12 + 67) = v26;
      *(void *)(v12 + 72) = v43;
      *(void *)(v12 + 80) = v42;
      *(unsigned char *)(v12 + 88) = v41;
      *(void *)(v12 + 96) = v40;
      *(unsigned char *)(v12 + 104) = v39;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v38;
      int64_t v10 = v47;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1DE862AA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C020);
  uint64_t result = sub_1DE8E1710();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v1;
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1DE8E1B90();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void *sub_1DE862D3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1700();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DE862EF0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F10);
  char v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1DE8E1700();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *char v35 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 56);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5) {
    uint64_t result = memmove(result, __src, 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 56);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v32 >= v37) {
      goto LABEL_28;
    }
    unint64_t v33 = *((void *)__src + v32);
    ++v7;
    if (!v33)
    {
      int64_t v7 = v32 + 1;
      if (v32 + 1 >= v37) {
        goto LABEL_28;
      }
      unint64_t v33 = *((void *)__src + v7);
      if (!v33)
      {
        int64_t v7 = v32 + 2;
        if (v32 + 2 >= v37) {
          goto LABEL_28;
        }
        unint64_t v33 = *((void *)__src + v7);
        if (!v33) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v10 = (v33 - 1) & v33;
    unint64_t v12 = __clz(__rbit64(v33)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 112 * v12;
    uint64_t v14 = *(void *)(v1 + 48) + v13;
    uint64_t v16 = *(void *)v14;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    uint64_t v19 = *(void *)(v14 + 32);
    uint64_t v20 = *(void *)(v14 + 40);
    uint64_t v21 = *(void *)(v14 + 48);
    uint64_t v22 = *(void *)(v14 + 56);
    char v23 = *(unsigned char *)(v14 + 64);
    char v24 = *(unsigned char *)(v14 + 65);
    char v25 = *(unsigned char *)(v14 + 66);
    char v26 = *(unsigned char *)(v14 + 67);
    uint64_t v27 = *(void *)(v14 + 72);
    unint64_t v28 = *(void *)(v14 + 80);
    char v29 = *(unsigned char *)(v14 + 88);
    uint64_t v30 = *(void *)(v14 + 96);
    LOBYTE(v14) = *(unsigned char *)(v14 + 104);
    uint64_t v31 = *(void *)(v3 + 48) + v13;
    *(void *)uint64_t v31 = v16;
    *(void *)(v31 + 8) = v15;
    *(void *)(v31 + 16) = v17;
    *(void *)(v31 + 24) = v18;
    *(void *)(v31 + 32) = v19;
    *(void *)(v31 + 40) = v20;
    *(void *)(v31 + 48) = v21;
    *(void *)(v31 + 56) = v22;
    *(unsigned char *)(v31 + 64) = v23;
    *(unsigned char *)(v31 + 65) = v24;
    *(unsigned char *)(v31 + 66) = v25;
    *(unsigned char *)(v31 + 67) = v26;
    *(void *)(v31 + 72) = v27;
    *(void *)(v31 + 80) = v28;
    *(unsigned char *)(v31 + 88) = v29;
    *(void *)(v31 + 96) = v30;
    *(unsigned char *)(v31 + 104) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1DE82F404(v27, v28);
  }
  int64_t v34 = v32 + 3;
  if (v34 >= v37) {
    goto LABEL_28;
  }
  unint64_t v33 = *((void *)__src + v34);
  if (v33)
  {
    int64_t v7 = v34;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v7 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v7 >= v37) {
      goto LABEL_28;
    }
    unint64_t v33 = *((void *)__src + v7);
    ++v34;
    if (v33) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DE86317C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C020);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DE8E1700();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DE863314()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E38);
  uint64_t v3 = sub_1DE8E1710();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DE8635C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F10);
  uint64_t v3 = sub_1DE8E1710();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  char v35 = v1;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v38 = v2;
  while (1)
  {
    if (v7)
    {
      uint64_t v48 = (v7 - 1) & v7;
      int64_t v49 = v10;
      unint64_t v13 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v37) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v36 + 8 * v14);
    int64_t v16 = v10 + 1;
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v37) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v36 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v10 + 3;
        if (v10 + 3 >= v37) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v36 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v48 = (v15 - 1) & v15;
    int64_t v49 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 112 * v13;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 24);
    uint64_t v46 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v24 = *(void *)(v18 + 48);
    uint64_t v25 = *(void *)(v18 + 56);
    char v44 = *(unsigned char *)(v18 + 65);
    char v45 = *(unsigned char *)(v18 + 64);
    char v42 = *(unsigned char *)(v18 + 67);
    char v43 = *(unsigned char *)(v18 + 66);
    uint64_t v26 = *(void *)(v18 + 72);
    unint64_t v27 = *(void *)(v18 + 80);
    char v41 = *(unsigned char *)(v18 + 88);
    uint64_t v40 = *(void *)(v18 + 96);
    char v39 = *(unsigned char *)(v18 + 104);
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = v26;
    sub_1DE82F404(v26, v27);
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v8 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v11 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 112 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v46;
    *(void *)(v12 + 24) = v21;
    *(void *)(v12 + 32) = v22;
    *(void *)(v12 + 40) = v23;
    *(void *)(v12 + 48) = v24;
    *(void *)(v12 + 56) = v25;
    *(unsigned char *)(v12 + 64) = v45;
    *(unsigned char *)(v12 + 65) = v44;
    *(unsigned char *)(v12 + 66) = v43;
    *(unsigned char *)(v12 + 67) = v42;
    unint64_t v7 = v48;
    *(void *)(v12 + 72) = v47;
    *(void *)(v12 + 80) = v27;
    *(unsigned char *)(v12 + 88) = v41;
    *(void *)(v12 + 96) = v40;
    *(unsigned char *)(v12 + 104) = v39;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v38;
    int64_t v10 = v49;
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v36 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v37) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v36 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DE863994()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C020);
  uint64_t result = sub_1DE8E1710();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1DE8E1B90();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DE863C08(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DE8CB9A8((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1DE863C74(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DE863C74(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DE8E1A70();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 24 * i + 16);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (v88 >= *(double *)v90) {
            break;
          }
          if (!v84) {
            goto LABEL_142;
          }
          long long v91 = *(_OWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 16);
          *(void *)(v90 + 24) = *(void *)v90;
          *(_OWORD *)(v90 - 16) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 24;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 24;
        --v86;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    uint64_t v100 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      uint64_t result = sub_1DE8E15C0();
      *(void *)(result + 16) = v7;
      uint64_t v102 = result;
      uint64_t v106 = (double *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v101 = *a1 + 64;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v103 = v6;
      uint64_t v104 = v3;
      uint64_t v105 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          double v14 = *(double *)(v10 + 24 * v9 + 16);
          double v15 = *(double *)(v10 + 24 * v13 + 16);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            unint64_t v16 = (double *)(v101 + 24 * v13);
            double v17 = v14;
            while (1)
            {
              double v18 = v17;
              double v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 3;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              uint64_t v19 = 24 * v9;
              uint64_t v20 = 24 * v13;
              uint64_t v21 = v9;
              uint64_t v22 = v13;
              do
              {
                if (v22 != --v21)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v10 + v20;
                  uint64_t v24 = v10 + v19;
                  uint64_t v25 = *(void *)(v10 + v20 + 16);
                  long long v26 = *(_OWORD *)(v10 + v20);
                  uint64_t v27 = *(void *)(v10 + v19 - 8);
                  *(_OWORD *)uint64_t v23 = *(_OWORD *)(v10 + v19 - 24);
                  *(void *)(v23 + 16) = v27;
                  *(_OWORD *)(v24 - 24) = v26;
                  *(void *)(v24 - 8) = v25;
                }
                ++v22;
                v19 -= 24;
                v20 += 24;
              }
              while (v22 < v21);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v28 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v28 >= v3) {
              uint64_t v28 = v3;
            }
            if (v28 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v28)
            {
              unint64_t v29 = (long long *)(v10 + 24 * v9);
              do
              {
                double v30 = *(double *)(v10 + 24 * v9 + 16);
                uint64_t v31 = v13;
                unint64_t v32 = (double *)v29;
                do
                {
                  if (v30 >= *(v32 - 1)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  long long v33 = *(_OWORD *)v32;
                  *(_OWORD *)unint64_t v32 = *(_OWORD *)(v32 - 3);
                  long long v32[2] = *(v32 - 1);
                  *(v32 - 1) = v30;
                  *(_OWORD *)(v32 - 3) = v33;
                  v32 -= 3;
                  ++v31;
                }
                while (v9 != v31);
                ++v9;
                unint64_t v29 = (long long *)((char *)v29 + 24);
              }
              while (v9 != v28);
              uint64_t v9 = v28;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v35 = *(void *)(v11 + 16);
        unint64_t v34 = *(void *)(v11 + 24);
        unint64_t v12 = v35 + 1;
        uint64_t v10 = v105;
        if (v35 >= v34 >> 1)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414((char *)(v34 > 1), v35 + 1, 1, (char *)v11);
          uint64_t v10 = v105;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v36 = v11 + 32;
        int64_t v37 = (uint64_t *)(v11 + 32 + 16 * v35);
        *int64_t v37 = v13;
        v37[1] = v9;
        if (v35)
        {
          while (1)
          {
            unint64_t v38 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v43 = v36 + 16 * v12;
              uint64_t v44 = *(void *)(v43 - 64);
              uint64_t v45 = *(void *)(v43 - 56);
              BOOL v49 = __OFSUB__(v45, v44);
              uint64_t v46 = v45 - v44;
              if (v49) {
                goto LABEL_120;
              }
              uint64_t v48 = *(void *)(v43 - 48);
              uint64_t v47 = *(void *)(v43 - 40);
              BOOL v49 = __OFSUB__(v47, v48);
              uint64_t v41 = v47 - v48;
              char v42 = v49;
              if (v49) {
                goto LABEL_121;
              }
              unint64_t v50 = v12 - 2;
              uint64_t v51 = (uint64_t *)(v36 + 16 * (v12 - 2));
              uint64_t v53 = *v51;
              uint64_t v52 = v51[1];
              BOOL v49 = __OFSUB__(v52, v53);
              uint64_t v54 = v52 - v53;
              if (v49) {
                goto LABEL_122;
              }
              BOOL v49 = __OFADD__(v41, v54);
              uint64_t v55 = v41 + v54;
              if (v49) {
                goto LABEL_124;
              }
              if (v55 >= v46)
              {
                uint64_t v73 = (uint64_t *)(v36 + 16 * v38);
                uint64_t v75 = *v73;
                uint64_t v74 = v73[1];
                BOOL v49 = __OFSUB__(v74, v75);
                uint64_t v76 = v74 - v75;
                if (v49) {
                  goto LABEL_130;
                }
                BOOL v66 = v41 < v76;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v67 = *(void *)(v11 + 32);
                uint64_t v68 = *(void *)(v11 + 40);
                BOOL v49 = __OFSUB__(v68, v67);
                uint64_t v60 = v68 - v67;
                char v61 = v49;
                goto LABEL_77;
              }
              uint64_t v40 = *(void *)(v11 + 32);
              uint64_t v39 = *(void *)(v11 + 40);
              BOOL v49 = __OFSUB__(v39, v40);
              uint64_t v41 = v39 - v40;
              char v42 = v49;
            }
            if (v42) {
              goto LABEL_123;
            }
            unint64_t v50 = v12 - 2;
            uint64_t v56 = (uint64_t *)(v36 + 16 * (v12 - 2));
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v59 = __OFSUB__(v57, v58);
            uint64_t v60 = v57 - v58;
            char v61 = v59;
            if (v59) {
              goto LABEL_125;
            }
            uint64_t v62 = (uint64_t *)(v36 + 16 * v38);
            uint64_t v64 = *v62;
            uint64_t v63 = v62[1];
            BOOL v49 = __OFSUB__(v63, v64);
            uint64_t v65 = v63 - v64;
            if (v49) {
              goto LABEL_127;
            }
            if (__OFADD__(v60, v65)) {
              goto LABEL_129;
            }
            if (v60 + v65 >= v41)
            {
              BOOL v66 = v41 < v65;
LABEL_83:
              if (v66) {
                unint64_t v38 = v50;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v61) {
              goto LABEL_126;
            }
            long long v69 = (uint64_t *)(v36 + 16 * v38);
            uint64_t v71 = *v69;
            uint64_t v70 = v69[1];
            BOOL v49 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v49) {
              goto LABEL_128;
            }
            if (v72 < v60) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v77 = v38 - 1;
            if (v38 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v78 = v11;
            uint64_t v79 = (uint64_t *)(v36 + 16 * v77);
            uint64_t v80 = *v79;
            uint64_t v81 = (void *)(v36 + 16 * v38);
            uint64_t v82 = v81[1];
            uint64_t result = sub_1DE864340((double *)(v10 + 24 * *v79), (double *)(v10 + 24 * *v81), v10 + 24 * v82, v106);
            if (v1) {
              goto LABEL_93;
            }
            if (v82 < v80) {
              goto LABEL_117;
            }
            if (v38 > *(void *)(v78 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v79 = v80;
            *(void *)(v36 + 16 * v77 + 8) = v82;
            unint64_t v83 = *(void *)(v78 + 16);
            if (v38 >= v83) {
              goto LABEL_119;
            }
            uint64_t v11 = v78;
            unint64_t v12 = v83 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v36 + 16 * v38), v81 + 2, 16 * (v83 - 1 - v38));
            *(void *)(v78 + 16) = v83 - 1;
            uint64_t v10 = v105;
            if (v83 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v103;
        uint64_t v3 = v104;
        if (v9 >= v104)
        {
          uint64_t v8 = v102;
          goto LABEL_103;
        }
      }
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v106 = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v102 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_103:
    uint64_t result = v11;
    uint64_t v102 = v8;
    if (v12 >= 2)
    {
      uint64_t v93 = *v100;
      do
      {
        unint64_t v94 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v93) {
          goto LABEL_146;
        }
        uint64_t v95 = result;
        uint64_t v96 = *(void *)(result + 32 + 16 * v94);
        uint64_t v97 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_1DE864340((double *)(v93 + 24 * v96), (double *)(v93 + 24 * *(void *)(result + 32 + 16 * (v12 - 1))), v93 + 24 * v97, v106);
        if (v1) {
          break;
        }
        if (v97 < v96) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA510(v95);
          uint64_t v95 = result;
        }
        if (v94 >= *(void *)(v95 + 16)) {
          goto LABEL_134;
        }
        uint64_t v98 = (void *)(v95 + 32 + 16 * v94);
        *uint64_t v98 = v96;
        v98[1] = v97;
        unint64_t v99 = *(void *)(v95 + 16);
        if (v12 > v99) {
          goto LABEL_135;
        }
        memmove((void *)(v95 + 32 + 16 * (v12 - 1)), (const void *)(v95 + 32 + 16 * v12), 16 * (v99 - v12));
        uint64_t result = v95;
        *(void *)(v95 + 16) = v99 - 1;
        unint64_t v12 = v99 - 1;
      }
      while (v99 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v102 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE864340(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 24;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[3 * v11] <= a4) {
      memmove(a4, __src, 24 * v11);
    }
    unint64_t v12 = &v4[3 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_39;
    }
    unint64_t v17 = a3 - 24;
    while (1)
    {
      double v18 = (double *)(v17 + 24);
      if (*(v12 - 1) >= *(v6 - 1))
      {
        uint64_t v19 = v12 - 3;
        if (v18 != v12)
        {
          v12 -= 3;
          goto LABEL_36;
        }
        BOOL v20 = v17 >= (unint64_t)v12;
        v12 -= 3;
        if (v20) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v19 = v6 - 3;
        if (v18 != v6)
        {
          v6 -= 3;
LABEL_36:
          long long v21 = *(_OWORD *)v19;
          *(double *)(v17 + 16) = v19[2];
          *(_OWORD *)unint64_t v17 = v21;
          goto LABEL_37;
        }
        BOOL v20 = v17 >= (unint64_t)v6;
        v6 -= 3;
        if (v20) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v17 -= 24;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[3 * v9] <= a4) {
    memmove(a4, __dst, 24 * v9);
  }
  unint64_t v12 = &v4[3 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      if (v6[2] >= v4[2])
      {
        double v15 = v4 + 3;
        double v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 3;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 3;
        }
      }
      else
      {
        uint64_t v13 = v6 + 3;
        double v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      v7[2] = v14[2];
      *(_OWORD *)uint64_t v7 = v16;
LABEL_16:
      v7 += 3;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v22 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  uint64_t v23 = (v22 >> 2) + ((unint64_t)v22 >> 63);
  if (v6 != v4 || v6 >= &v4[3 * v23]) {
    memmove(v6, v4, 24 * v23);
  }
  return 1;
}

uint64_t sub_1DE8645A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1DE8E1BA0();
  sub_1DE8E1480();
  uint64_t v9 = sub_1DE8E1BD0();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    double v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a1 && v14[1] == a2;
    if (v15 || (sub_1DE8E1AC0() & 1) != 0)
    {
LABEL_7:
      uint64_t v16 = 0;
      int v17 = 1;
      goto LABEL_18;
    }
    uint64_t v18 = ~v10;
    unint64_t v11 = (v11 + 1) & ~v10;
    if ((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      uint64_t v16 = 1;
      while (1)
      {
        uint64_t v19 = (void *)(v13 + 16 * v11);
        BOOL v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_1DE8E1AC0() & 1) != 0) {
          goto LABEL_7;
        }
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        {
          int v17 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  int v17 = 0;
  uint64_t v16 = 1;
LABEL_18:
  uint64_t v21 = *(void *)(v8 + 16);
  uint64_t v22 = v21 + v16;
  if (__OFADD__(v21, v16))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v23 = *(void *)(v8 + 24);
  if (v23 >= v22 && (a3 & 1) != 0)
  {
    if (!v17) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  if (a3)
  {
    sub_1DE8623F0();
  }
  else
  {
    if (v23 >= v22)
    {
      sub_1DE862D3C();
      if (!v17)
      {
LABEL_46:
        uint64_t v36 = *v4;
        *(void *)(*v4 + 8 * (v11 >> 6) + 56) |= 1 << v11;
        int64_t v37 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v11);
        *int64_t v37 = a1;
        v37[1] = a2;
        uint64_t v38 = *(void *)(v36 + 16);
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (!v39)
        {
          uint64_t result = 0;
          *(void *)(v36 + 16) = v40;
          return result;
        }
        goto LABEL_49;
      }
LABEL_36:
      uint64_t v31 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v11);
      uint64_t result = *v31;
      uint64_t *v31 = a1;
      v31[1] = a2;
      return result;
    }
    sub_1DE863314();
  }
  uint64_t v24 = *v4;
  sub_1DE8E1BA0();
  sub_1DE8E1480();
  uint64_t v25 = sub_1DE8E1BD0();
  uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
  unint64_t v11 = v25 & ~v26;
  uint64_t v27 = v24 + 56;
  if (((*(void *)(v24 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_45;
  }
  uint64_t v28 = *(void *)(v24 + 48);
  unint64_t v29 = (void *)(v28 + 16 * v11);
  BOOL v30 = *v29 == a1 && v29[1] == a2;
  if (!v30 && (sub_1DE8E1AC0() & 1) == 0)
  {
    uint64_t v33 = ~v26;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v33;
      if (((*(void *)(v27 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      unint64_t v34 = (void *)(v28 + 16 * v11);
      BOOL v35 = *v34 == a1 && v34[1] == a2;
      if (v35 || (sub_1DE8E1AC0() & 1) != 0) {
        goto LABEL_35;
      }
    }
LABEL_45:
    if ((v17 & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_50;
  }
LABEL_35:
  if (v17) {
    goto LABEL_36;
  }
LABEL_50:
  uint64_t result = sub_1DE8E1B30();
  __break(1u);
  return result;
}

uint64_t sub_1DE864884(char a1, double a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1DE8E1B90();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v5 + 56;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (*(double *)(v10 + 8 * v8) == a2)
  {
    uint64_t v11 = 0;
    BOOL v12 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = ~v7;
  unint64_t v8 = (v8 + 1) & ~v7;
  if ((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v11 = 1;
    while (1)
    {
      double v14 = *(double *)(v10 + 8 * v8);
      BOOL v12 = v14 == a2;
      if (v14 == a2) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v13;
      if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_10;
      }
    }
    uint64_t v11 = 0;
  }
  else
  {
LABEL_9:
    BOOL v12 = 0;
    uint64_t v11 = 1;
  }
LABEL_10:
  uint64_t v15 = *(void *)(v5 + 16);
  uint64_t v16 = v15 + v11;
  if (__OFADD__(v15, v11))
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v17 = *(void *)(v5 + 24);
  if (v17 >= v16 && (a1 & 1) != 0)
  {
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  if (a1)
  {
    sub_1DE862AA4();
  }
  else
  {
    if (v17 >= v16)
    {
      sub_1DE86317C();
      if (!v12)
      {
LABEL_30:
        uint64_t v25 = *v2;
        *(void *)(*v2 + 8 * (v8 >> 6) + 56) |= 1 << v8;
        *(double *)(*(void *)(v25 + 48) + 8 * v8) = a2;
        uint64_t v26 = *(void *)(v25 + 16);
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (!v27)
        {
          uint64_t result = 0;
          *(void *)(v25 + 16) = v28;
          return result;
        }
        goto LABEL_34;
      }
LABEL_24:
      uint64_t v22 = *(void *)(*v2 + 48);
      uint64_t result = *(void *)(v22 + 8 * v8);
      *(double *)(v22 + 8 * v8) = a2;
      return result;
    }
    sub_1DE863994();
  }
  uint64_t v18 = *v2;
  uint64_t v19 = sub_1DE8E1B90();
  uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
  unint64_t v8 = v19 & ~v20;
  if (((*(void *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t v21 = *(void *)(v18 + 48);
  if (*(double *)(v21 + 8 * v8) != a2)
  {
    uint64_t v24 = ~v20;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v24;
      if (((*(void *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      if (*(double *)(v21 + 8 * v8) == a2) {
        goto LABEL_23;
      }
    }
LABEL_29:
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_35;
  }
LABEL_23:
  if (v12) {
    goto LABEL_24;
  }
LABEL_35:
  uint64_t result = sub_1DE8E1B30();
  __break(1u);
  return result;
}

uint64_t sub_1DE864AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      sub_1DE8AC840(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_1DE864B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = a2;
  switch(a7)
  {
    case 0:
    case 1:
    case 2:
    case 5:
      goto LABEL_4;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 4:
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE864BD8(void *a1, uint64_t a2)
{
  return sub_1DE861B98(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), *(Swift::Double *)(v2 + 56));
}

uint64_t sub_1DE864C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for Classic.TagEvaluator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DE864C20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE864C80(uint64_t a1, uint64_t a2)
{
  return sub_1DE864CC8(a1, a2, sub_1DE81B4C4);
}

uint64_t sub_1DE864C98(uint64_t a1, uint64_t a2)
{
  return sub_1DE864CC8(a1, a2, (uint64_t (*)(void))sub_1DE81C094);
}

uint64_t sub_1DE864CB0(uint64_t a1, uint64_t a2)
{
  return sub_1DE864CC8(a1, a2, (uint64_t (*)(void))sub_1DE81C4D0);
}

uint64_t sub_1DE864CC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1DE8E1AC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DE864D6C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6C616E6F73726570;
    }
    else {
      uint64_t v3 = 0x6669737265766964;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC00000064657A69;
    }
    else {
      unint64_t v4 = 0xEB00000000646569;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6C616E6F73726570;
      }
      else {
        uint64_t v6 = 0x6669737265766964;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC00000064657A69;
      }
      else {
        unint64_t v7 = 0xEB00000000646569;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6C616369706F74;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6C616369706F74)
  {
LABEL_21:
    char v8 = sub_1DE8E1AC0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DE864EA8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6168706C61;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6168706C61;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v5 = 109;
      break;
    case 2:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v5 = 100;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7235949;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7889261;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE100000000000000;
      if (v5 == 109) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE100000000000000;
      if (v5 != 100) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 7235949;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7889261) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1DE8E1AC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DE86501C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1684627824;
  }
  else {
    uint64_t v2 = 1701147238;
  }
  if (a2) {
    uint64_t v3 = 1684627824;
  }
  else {
    uint64_t v3 = 1701147238;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1DE8E1AC0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1DE86508C()
{
  return *(unsigned __int8 *)(v0 + 96);
}

double sub_1DE865094()
{
  return *(double *)(v0 + 88);
}

double sub_1DE86509C()
{
  return *(double *)(v0 + 104);
}

double sub_1DE8650A4()
{
  return *(double *)(v0 + 112);
}

double sub_1DE8650AC()
{
  return *(double *)(v0 + 136);
}

double sub_1DE8650B4()
{
  return *(double *)(v0 + 144);
}

double sub_1DE8650BC()
{
  return *(double *)(v0 + 120);
}

double sub_1DE8650C4()
{
  return *(double *)(v0 + 128);
}

double sub_1DE8650CC()
{
  return *(double *)(v0 + 920);
}

double sub_1DE8650D4()
{
  return *(double *)(v0 + 912);
}

__n128 sub_1DE8650DC@<Q0>(uint64_t a1@<X0>, const void *a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, const void *a7@<X6>, uint64_t a8@<X8>)
{
  char v15 = *(unsigned char *)(a1 + 16);
  char v16 = *(unsigned char *)(a1 + 17);
  char v17 = *(unsigned char *)(a1 + 18);
  memcpy((void *)(a8 + 40), a2, 0x768uLL);
  memcpy((void *)(a8 + 1936), a3, 0x3EBuLL);
  uint64_t v18 = *(void *)(a4 + 64);
  uint64_t v19 = *a5;
  memcpy((void *)(a8 + 3032), a7, 0x238uLL);
  *(_OWORD *)a8 = *(_OWORD *)a1;
  *(_OWORD *)(a8 + 24) = *(_OWORD *)(a1 + 24);
  long long v20 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a8 + 2944) = *(_OWORD *)a4;
  *(_OWORD *)(a8 + 2960) = v20;
  __n128 result = *(__n128 *)(a4 + 32);
  long long v22 = *(_OWORD *)(a4 + 48);
  *(__n128 *)(a8 + 2976) = result;
  *(unsigned char *)(a8 + 16) = v15;
  *(unsigned char *)(a8 + 17) = v16;
  *(unsigned char *)(a8 + 18) = v17;
  *(_OWORD *)(a8 + 2992) = v22;
  *(void *)(a8 + 3008) = v18;
  *(void *)(a8 + 3016) = v19;
  *(void *)(a8 + 3024) = a6;
  return result;
}

double sub_1DE8651B4@<D0>(double *a1@<X8>, double a2@<D0>)
{
  sub_1DE856274(a2);
  double result = a2;
  *a1 = a2;
  return result;
}

double sub_1DE8651F0@<D0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  sub_1DE856290(a5);
  double result = a5;
  *(double *)a4 = a5;
  *(unsigned char *)(a4 + 8) = a1;
  *(unsigned char *)(a4 + 9) = a2;
  *(unsigned char *)(a4 + 10) = a3;
  return result;
}

uint64_t sub_1DE865254@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DE865284(a1, (uint64_t (*)(void))sub_1DE8562C8, a2);
}

uint64_t sub_1DE86526C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DE865284(a1, (uint64_t (*)(void))sub_1DE8562AC, a2);
}

uint64_t sub_1DE865284@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void *a3@<X8>)
{
  uint64_t result = a2();
  *a3 = a1;
  return result;
}

double sub_1DE8652C4@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  return sub_1DE866D1C((uint64_t (*)(void))sub_1DE85AB04, (uint64_t (*)(uint64_t, double))sub_1DE85ACE8, (void (*)(uint64_t, double))sub_1DE85AD04, a1, a2, a3, a4);
}

__n128 sub_1DE865304@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result = *a1;
  __n128 v4 = *a2;
  *a3 = *a1;
  a3[1] = v4;
  return result;
}

__n128 sub_1DE865314@<Q0>(double *a1@<X0>, double *a2@<X1>, double *a3@<X2>, double *a4@<X3>, double *a5@<X4>, double *a6@<X5>, double *a7@<X6>, double *a8@<X7>, uint64_t a9@<X8>, double *a10, long long *a11, long long *a12, long long *a13, long long *a14, long long *a15, long long *a16, long long *a17, __n128 *a18)
{
  double v19 = *a2;
  double v20 = a2[1];
  double v21 = a2[2];
  double v22 = a2[3];
  double v23 = *a3;
  double v24 = a3[1];
  double v25 = a3[2];
  double v26 = a3[3];
  double v64 = a4[1];
  double v65 = *a4;
  double v63 = a4[2];
  double v58 = a5[1];
  double v59 = *a5;
  double v57 = a5[2];
  double v28 = a4[3];
  double v29 = a5[3];
  double v53 = a6[1];
  double v54 = *a6;
  double v51 = a6[2];
  double v46 = a7[1];
  double v47 = *a7;
  double v45 = a7[2];
  double v37 = a6[3];
  double v38 = a7[3];
  double v42 = a8[1];
  double v43 = *a8;
  double v41 = a8[2];
  double v39 = a8[3];
  long long v75 = *(_OWORD *)a1;
  double v76 = a1[2];
  double v78 = a1[3];
  long long v30 = *(_OWORD *)a10;
  double v31 = a10[2];
  double v32 = a10[3];
  long long v33 = *a11;
  long long v34 = a11[1];
  long long v35 = *a12;
  long long v36 = a12[1];
  long long v40 = *a13;
  long long v44 = a13[1];
  long long v49 = *a14;
  long long v50 = a14[1];
  long long v55 = *a15;
  long long v56 = a15[1];
  long long v61 = *a16;
  long long v62 = a16[1];
  long long v67 = *a17;
  long long v68 = a17[1];
  __n128 v71 = *a18;
  __n128 v72 = a18[1];
  sub_1DE85AD20(*a1, a1[1], v76, v78);
  long long v74 = v75;
  double v73 = v76;
  *(double *)&long long v75 = v19;
  *((double *)&v75 + 1) = v20;
  sub_1DE85AD3C(v19, v20, v21, v22);
  long long v70 = v75;
  *(double *)&long long v75 = v23;
  *((double *)&v75 + 1) = v24;
  sub_1DE85AD58(v23, v24, v25, v26);
  long long v69 = v75;
  *(double *)&long long v75 = v65;
  *((double *)&v75 + 1) = v64;
  sub_1DE85AF68(v65, v64, v63, v28);
  long long v66 = v75;
  *(double *)&long long v75 = v59;
  *((double *)&v75 + 1) = v58;
  sub_1DE85AF84(v59, v58, v57, v29);
  long long v60 = v75;
  *(double *)&long long v75 = v54;
  *((double *)&v75 + 1) = v53;
  double v77 = v51;
  sub_1DE85B194(v54, v53, v51, v37);
  long long v52 = v75;
  *(double *)&long long v75 = v47;
  *((double *)&v75 + 1) = v46;
  sub_1DE85B3A4(v47, v46, v45, v38);
  long long v48 = v75;
  *(double *)&long long v75 = v43;
  *((double *)&v75 + 1) = v42;
  sub_1DE85B3C0(v43, v42, v41, v39);
  sub_1DE85B3DC(*(double *)&v30, *((double *)&v30 + 1), v31, v32);
  sub_1DE85B3F8(*(double *)&v33, *((double *)&v33 + 1), *(double *)&v34, *((double *)&v34 + 1));
  sub_1DE85B414(*(double *)&v35, *((double *)&v35 + 1), *(double *)&v36, *((double *)&v36 + 1));
  sub_1DE85B634(*(double *)&v40, *((double *)&v40 + 1), *(double *)&v44, *((double *)&v44 + 1));
  sub_1DE85B854(*(double *)&v49, *((double *)&v49 + 1), *(double *)&v50, *((double *)&v50 + 1));
  sub_1DE85BA60(*(double *)&v55, *((double *)&v55 + 1), *(double *)&v56, *((double *)&v56 + 1));
  sub_1DE85BC6C(*(double *)&v61, *((double *)&v61 + 1), *(double *)&v62, *((double *)&v62 + 1));
  sub_1DE85BE88(*(double *)&v67, *((double *)&v67 + 1), *(double *)&v68, *((double *)&v68 + 1));
  sub_1DE85C0AC(v71.n128_f64[0], v71.n128_f64[1], v72.n128_f64[0], v72.n128_f64[1]);
  *(_OWORD *)a9 = v74;
  *(double *)(a9 + 16) = v73;
  *(double *)(a9 + 24) = v78;
  *(_OWORD *)(a9 + 32) = v70;
  *(double *)(a9 + 48) = v21;
  *(double *)(a9 + 56) = v22;
  *(_OWORD *)(a9 + 64) = v69;
  *(double *)(a9 + 80) = v25;
  *(double *)(a9 + 88) = v26;
  *(_OWORD *)(a9 + 96) = v66;
  *(double *)(a9 + 112) = v63;
  *(double *)(a9 + 120) = v28;
  *(_OWORD *)(a9 + 128) = v60;
  *(double *)(a9 + 144) = v57;
  *(double *)(a9 + 152) = v29;
  *(_OWORD *)(a9 + 160) = v52;
  *(double *)(a9 + 176) = v77;
  *(double *)(a9 + 184) = v37;
  __n128 result = v71;
  *(_OWORD *)(a9 + 192) = v48;
  *(double *)(a9 + 208) = v45;
  *(double *)(a9 + 216) = v38;
  *(_OWORD *)(a9 + 224) = v75;
  *(double *)(a9 + 240) = v41;
  *(double *)(a9 + 248) = v39;
  *(_OWORD *)(a9 + 256) = v30;
  *(double *)(a9 + 272) = v31;
  *(double *)(a9 + 280) = v32;
  *(_OWORD *)(a9 + 288) = v33;
  *(_OWORD *)(a9 + 304) = v34;
  *(_OWORD *)(a9 + 320) = v35;
  *(_OWORD *)(a9 + 336) = v36;
  *(_OWORD *)(a9 + 352) = v40;
  *(_OWORD *)(a9 + 368) = v44;
  *(_OWORD *)(a9 + 384) = v49;
  *(_OWORD *)(a9 + 400) = v50;
  *(_OWORD *)(a9 + 416) = v55;
  *(_OWORD *)(a9 + 432) = v56;
  *(_OWORD *)(a9 + 448) = v61;
  *(_OWORD *)(a9 + 464) = v62;
  *(_OWORD *)(a9 + 480) = v67;
  *(_OWORD *)(a9 + 496) = v68;
  *(__n128 *)(a9 + 512) = v71;
  *(__n128 *)(a9 + 528) = v72;
  return result;
}

__n128 sub_1DE8658BC@<Q0>(__n128 *a1@<X0>, const void *a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v5 = a1[1].n128_u64[0];
  memcpy(&a3[1].n128_i8[8], a2, 0x220uLL);
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v5;
  return result;
}

uint64_t sub_1DE865904()
{
  return 2;
}

uint64_t sub_1DE86590C()
{
  return 2;
}

uint64_t sub_1DE865914()
{
  return 2;
}

uint64_t sub_1DE86591C()
{
  return 2;
}

uint64_t sub_1DE865924()
{
  return 5;
}

uint64_t sub_1DE86592C()
{
  return 3;
}

__n128 sub_1DE86593C@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, long long *a6@<X5>, uint64_t a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, long long *a11, uint64_t a12, long long *a13, uint64_t *a14, uint64_t *a15, long long *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v34 = a9;
  long long v46 = a2[1];
  long long v47 = *a2;
  uint64_t v35 = *((void *)a2 + 4);
  long long v48 = a4[1];
  long long v49 = *a4;
  uint64_t v36 = *((void *)a4 + 4);
  long long v50 = a6[1];
  long long v51 = *a6;
  uint64_t v37 = *((void *)a6 + 4);
  long long v52 = a8[1];
  long long v53 = *a8;
  uint64_t v38 = *((void *)a8 + 4);
  long long v54 = a11[1];
  long long v55 = *a11;
  uint64_t v39 = *((void *)a11 + 4);
  long long v56 = a13[1];
  long long v57 = *a13;
  uint64_t v40 = *((void *)a13 + 4);
  uint64_t v41 = *a14;
  uint64_t v61 = a14[1];
  long long v59 = *((_OWORD *)a14 + 2);
  long long v60 = *((_OWORD *)a14 + 1);
  uint64_t v42 = a14[6];
  uint64_t v58 = a14[7];
  uint64_t v65 = *a15;
  uint64_t v63 = a15[2];
  uint64_t v64 = a15[1];
  __n128 v70 = (__n128)a16[1];
  long long v71 = *a16;
  uint64_t v69 = *((void *)a16 + 4);
  uint64_t v68 = *((void *)a16 + 5);
  uint64_t v72 = a1;
  char v66 = *((unsigned char *)a16 + 48);
  char v67 = *((unsigned char *)a16 + 49);
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a17, (uint64_t)&_s28PositiveIntConditionProviderVN, a25, (uint64_t)&off_1EBEA9518, a9);
  *(_OWORD *)(v34 + 8) = v47;
  *(_OWORD *)(v34 + 24) = v46;
  *(void *)(v34 + 40) = v35;
  uint64_t v72 = a3;
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a18, (uint64_t)&_s28PositiveIntConditionProviderVN, a26, (uint64_t)&off_1EBEA9518, v34 + 48);
  *(_OWORD *)(v34 + 56) = v49;
  *(_OWORD *)(v34 + 72) = v48;
  *(void *)(v34 + 88) = v36;
  uint64_t v72 = a5;
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a19, (uint64_t)&_s28PositiveIntConditionProviderVN, a27, (uint64_t)&off_1EBEA9518, v34 + 96);
  *(_OWORD *)(v34 + 104) = v51;
  *(_OWORD *)(v34 + 120) = v50;
  *(void *)(v34 + 136) = v37;
  uint64_t v72 = a7;
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a20, (uint64_t)&_s28PositiveIntConditionProviderVN, a28, (uint64_t)&off_1EBEA9518, v34 + 144);
  *(_OWORD *)(v34 + 152) = v53;
  *(_OWORD *)(v34 + 168) = v52;
  *(void *)(v34 + 184) = v38;
  uint64_t v72 = a10;
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a21, (uint64_t)&_s28PositiveIntConditionProviderVN, a29, (uint64_t)&off_1EBEA9518, v34 + 192);
  *(_OWORD *)(v34 + 200) = v55;
  *(_OWORD *)(v34 + 216) = v54;
  *(void *)(v34 + 232) = v39;
  uint64_t v72 = a12;
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a22, (uint64_t)&_s28PositiveIntConditionProviderVN, a30, (uint64_t)&off_1EBEA9518, v34 + 240);
  *(_OWORD *)(v34 + 248) = v57;
  v34 += 248;
  *(_OWORD *)(v34 + 16) = v56;
  *(void *)(v34 + 32) = v40;
  uint64_t v72 = v41;
  uint64_t v73 = v61;
  long long v74 = v60;
  long long v75 = v59;
  uint64_t v76 = v42;
  uint64_t v77 = v58;
  unint64_t v43 = sub_1DE88B6C4();
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a23, (uint64_t)&_s22QuotaConditionProviderVN, a31, v43, v34 + 40);
  uint64_t v72 = v65;
  uint64_t v73 = v64;
  *(void *)&long long v74 = v63;
  unint64_t v44 = sub_1DE88B718();
  ConditionalConfigurableValue.init(wrappedValue:)((uint64_t)&v72, a24, (uint64_t)&_s31TopicDiversityConditionProviderVN, a32, v44, v34 + 104);
  __n128 result = v70;
  *(_OWORD *)(v34 + 128) = v71;
  *(__n128 *)(v34 + 144) = v70;
  v34 += 128;
  *(void *)(v34 + 32) = v69;
  *(void *)(v34 + 40) = v68;
  *(unsigned char *)(v34 + 48) = v66;
  *(unsigned char *)(v34 + 49) = v67;
  return result;
}

uint64_t sub_1DE865CD0()
{
  return 100;
}

uint64_t sub_1DE865CD8()
{
  return 100;
}

uint64_t sub_1DE865CE0()
{
  return 2;
}

uint64_t sub_1DE865CE8()
{
  return 5;
}

uint64_t sub_1DE865CF0()
{
  return 3;
}

uint64_t static Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxEvergreenArticles.defaultValue.getter()
{
  return 2;
}

uint64_t static Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxInaccessibleArticles.defaultValue.getter()
{
  return 2;
}

uint64_t static Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxPublisherOccurrences.defaultValue.getter()
{
  return 2;
}

uint64_t static Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxSize.defaultValue.getter()
{
  return 30;
}

uint64_t static Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMinSize.defaultValue.getter()
{
  return 3;
}

double sub_1DE865D30@<D0>(void *__src@<X0>, const void *a2@<X1>, unsigned char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, uint64_t a18, const void *a19, char a20,uint64_t a21,const void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,double a27)
{
  memcpy((void *)a9, __src, 0x1AAuLL);
  memcpy((void *)(a9 + 432), a2, 0x1AAuLL);
  LOBYTE(a2) = *a3;
  sub_1DE8562E4(a10);
  *(double *)(a9 + 864) = a10;
  *(unsigned char *)(a9 + 872) = (_BYTE)a2;
  *(unsigned char *)(a9 + 888) = a4;
  *(void *)(a9 + 880) = a5;
  sub_1DE856300(a6);
  *(void *)(a9 + 896) = a6;
  *(unsigned char *)(a9 + 904) = a7;
  *(unsigned char *)(a9 + 905) = a8;
  sub_1DE8564CC(a11);
  *(double *)(a9 + 912) = a11;
  sub_1DE8564E8(a12);
  *(double *)(a9 + 920) = a12;
  sub_1DE856504(a18);
  *(void *)(a9 + 928) = a18;
  sub_1DE8566C0(a13);
  *(double *)(a9 + 936) = a13;
  sub_1DE8566DC(a14);
  *(double *)(a9 + 944) = a14;
  memcpy((void *)(a9 + 952), a19, 0x1AAuLL);
  sub_1DE8566F8(a15);
  *(double *)(a9 + 1384) = a15;
  sub_1DE8568D0(a16);
  *(double *)(a9 + 1392) = a16;
  *(unsigned char *)(a9 + 1400) = a20;
  sub_1DE8568EC(a21);
  *(void *)(a9 + 1408) = a21;
  sub_1DE856AA8(a17);
  *(double *)(a9 + 1416) = a17;
  memcpy((void *)(a9 + 1424), a22, 0x1AAuLL);
  sub_1DE856C78(*(double *)&a23);
  *(void *)(a9 + 1856) = a23;
  sub_1DE856E40(*(double *)&a24);
  *(void *)(a9 + 1864) = a24;
  sub_1DE856E5C(*(double *)&a25);
  *(void *)(a9 + 1872) = a25;
  sub_1DE856E78(*(double *)&a26);
  *(void *)(a9 + 1880) = a26;
  sub_1DE856E94(a27);
  double result = a27;
  *(double *)(a9 + 1888) = a27;
  return result;
}

double sub_1DE865FF8@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  sub_1DE8583B8(a2);
  sub_1DE8583D4(a3);
  sub_1DE8583F0(a4);
  sub_1DE85840C(a5);
  sub_1DE858428(a6);
  sub_1DE858444(a7);
  double result = a7;
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
  return result;
}

void sub_1DE8660CC(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

double sub_1DE8660D8@<D0>(double *a1@<X0>, char a2@<W1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char a5@<W4>, long long *a6@<X5>, char a7@<W6>, long long *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, double a18, double a19, double a20,double a21,double a22,double a23,double a24,double a25,double a26,double a27,double a28,double a29,long long *a30,long long *a31,double a32,double a33,double a34,double a35,char a36,double a37,double a38,double a39,double a40,double a41,double a42,double a43,double a44,double a45,double *a46,double a47,long long *a48,uint64_t *a49,double a50,double a51,double a52)
{
  double v70 = *a1;
  double v69 = a1[1];
  double v53 = a1[3];
  double v68 = a1[2];
  uint64_t v92 = *a3;
  uint64_t v91 = a3[1];
  uint64_t v109 = a3[2];
  long long v90 = *(_OWORD *)(a3 + 3);
  uint64_t v89 = a3[5];
  uint64_t v88 = *a4;
  char v54 = *((unsigned char *)a4 + 8);
  uint64_t v87 = a4[2];
  char v55 = *((unsigned char *)a4 + 24);
  long long v86 = *((_OWORD *)a4 + 2);
  long long v85 = *((_OWORD *)a4 + 3);
  long long v84 = *((_OWORD *)a4 + 4);
  uint64_t v83 = a4[10];
  uint64_t v82 = a4[11];
  char v56 = *((unsigned char *)a4 + 96);
  char v57 = *((unsigned char *)a4 + 97);
  char v58 = *((unsigned char *)a4 + 98);
  long long v106 = *a6;
  long long v108 = a6[1];
  uint64_t v81 = *((void *)a6 + 4);
  uint64_t v80 = *((void *)a6 + 5);
  long long v126 = a8[8];
  long long v127 = a8[9];
  long long v128 = a8[10];
  uint64_t v129 = *((void *)a8 + 22);
  long long v122 = a8[4];
  long long v123 = a8[5];
  long long v124 = a8[6];
  long long v125 = a8[7];
  long long v118 = *a8;
  long long v119 = a8[1];
  long long v120 = a8[2];
  long long v121 = a8[3];
  long long v101 = *a30;
  long long v100 = a30[1];
  uint64_t v79 = *((void *)a30 + 4);
  uint64_t v78 = *((void *)a30 + 5);
  long long v99 = *a31;
  char v59 = *((unsigned char *)a49 + 8);
  char v60 = *((unsigned char *)a49 + 24);
  char v112 = *((unsigned char *)a49 + 96);
  char v111 = *((unsigned char *)a49 + 97);
  char v110 = *((unsigned char *)a49 + 98);
  uint64_t v77 = *((void *)a31 + 2);
  uint64_t v76 = *((void *)a31 + 3);
  long long v66 = *(_OWORD *)a46;
  double v67 = a46[2];
  double v71 = a46[3];
  long long v93 = *a48;
  long long v94 = a48[1];
  uint64_t v95 = *((void *)a48 + 4);
  uint64_t v96 = *((void *)a48 + 5);
  uint64_t v97 = *a49;
  uint64_t v98 = a49[2];
  long long v102 = *((_OWORD *)a49 + 2);
  long long v103 = *((_OWORD *)a49 + 3);
  long long v104 = *((_OWORD *)a49 + 4);
  uint64_t v105 = a49[10];
  double v107 = *((double *)a49 + 11);
  sub_1DE859328(a10);
  double v75 = a10;
  sub_1DE859344(a11);
  sub_1DE859360(a12);
  sub_1DE85937C(a13);
  *(double *)&long long v117 = v70;
  *((double *)&v117 + 1) = v69;
  sub_1DE859398(v70, v69, v68, v53);
  sub_1DE8595DC(a14);
  sub_1DE8595F8(a15);
  sub_1DE859614(a16);
  sub_1DE859630(a17);
  sub_1DE85964C(a18);
  sub_1DE859668(a19);
  sub_1DE859684(a20);
  sub_1DE8596A0(a21);
  sub_1DE8596BC(a22);
  sub_1DE8596D8(a23);
  sub_1DE8596F4(a24);
  sub_1DE859710(a25);
  sub_1DE85972C(a26);
  sub_1DE859748(a27);
  sub_1DE859764(a28);
  sub_1DE859780(a29);
  sub_1DE85979C(a32);
  sub_1DE859974(a33);
  sub_1DE859990(a34);
  sub_1DE8599AC(a35);
  sub_1DE8599C8(a37);
  sub_1DE8599E4(a38);
  sub_1DE859A00(a39);
  sub_1DE859A1C(a40);
  sub_1DE859A38(a41);
  sub_1DE859A54(a42);
  sub_1DE859A70(a43);
  sub_1DE859A8C(a44);
  sub_1DE859AA8(a45);
  sub_1DE859AC4(*(double *)&v66, *((double *)&v66 + 1), v67, v71);
  sub_1DE859D0C(a47);
  sub_1DE859D28(a51);
  sub_1DE859D44(a50);
  sub_1DE859D60(a52);
  *(double *)a9 = v75;
  *(double *)(a9 + 8) = a11;
  *(double *)(a9 + 16) = a12;
  *(double *)(a9 + 24) = a13;
  *(_OWORD *)(a9 + 32) = v117;
  *(double *)(a9 + 48) = v68;
  *(double *)(a9 + 56) = v53;
  *(double *)(a9 + 64) = a14;
  *(double *)(a9 + 72) = a15;
  *(double *)(a9 + 80) = a16;
  *(double *)(a9 + 88) = a17;
  *(double *)(a9 + 104) = a18;
  *(double *)(a9 + 112) = a19;
  *(double *)(a9 + 120) = a20;
  *(double *)(a9 + 128) = a21;
  *(double *)(a9 + 136) = a22;
  *(double *)(a9 + 144) = a23;
  *(void *)(a9 + 160) = v92;
  *(void *)(a9 + 168) = v91;
  *(_OWORD *)(a9 + 184) = v90;
  *(void *)(a9 + 200) = v89;
  *(void *)(a9 + 208) = v88;
  *(void *)(a9 + 224) = v87;
  *(_OWORD *)(a9 + 240) = v86;
  *(_OWORD *)(a9 + 256) = v85;
  *(_OWORD *)(a9 + 272) = v84;
  *(void *)(a9 + 288) = v83;
  *(void *)(a9 + 296) = v82;
  *(double *)(a9 + 312) = a24;
  *(double *)(a9 + 320) = a25;
  *(void *)(a9 + 360) = v81;
  *(void *)(a9 + 368) = v80;
  *(double *)(a9 + 376) = a26;
  *(double *)(a9 + 384) = a27;
  *(double *)(a9 + 392) = a28;
  *(double *)(a9 + 408) = a29;
  *(void *)(a9 + 632) = v79;
  *(void *)(a9 + 640) = v78;
  *(void *)(a9 + 664) = v77;
  *(void *)(a9 + 672) = v76;
  *(double *)(a9 + 680) = a32;
  *(double *)(a9 + 688) = a33;
  *(double *)(a9 + 696) = a34;
  *(_OWORD *)(a9 + 544) = v126;
  *(_OWORD *)(a9 + 560) = v127;
  *(_OWORD *)(a9 + 576) = v128;
  *(_OWORD *)(a9 + 480) = v122;
  *(_OWORD *)(a9 + 496) = v123;
  *(_OWORD *)(a9 + 512) = v124;
  *(_OWORD *)(a9 + 528) = v125;
  *(_OWORD *)(a9 + 416) = v118;
  *(_OWORD *)(a9 + 432) = v119;
  *(_OWORD *)(a9 + 448) = v120;
  *(_OWORD *)(a9 + 464) = v121;
  *(_OWORD *)(a9 + 328) = v106;
  *(void *)(a9 + 592) = v129;
  *(unsigned char *)(a9 + 96) = a2;
  *(_DWORD *)(a9 + 97) = LODWORD(a52);
  *(_DWORD *)(a9 + 100) = *(void *)&a52 >> 24;
  *(unsigned char *)(a9 + 152) = a5;
  *(_DWORD *)(a9 + 156) = *(_DWORD *)&v138[3];
  *(_DWORD *)(a9 + 153) = *(_DWORD *)v138;
  *(void *)(a9 + 176) = v109;
  *(unsigned char *)(a9 + 216) = v54;
  *(_DWORD *)(a9 + 220) = *(_DWORD *)&v137[3];
  *(_DWORD *)(a9 + 217) = *(_DWORD *)v137;
  *(unsigned char *)(a9 + 232) = v55;
  *(_DWORD *)(a9 + 236) = *(_DWORD *)&v136[3];
  *(_DWORD *)(a9 + 233) = *(_DWORD *)v136;
  *(unsigned char *)(a9 + 304) = v56;
  *(unsigned char *)(a9 + 305) = v57;
  *(unsigned char *)(a9 + 306) = v58;
  *(_DWORD *)(a9 + 307) = v134;
  *(unsigned char *)(a9 + 311) = v135;
  *(_OWORD *)(a9 + 344) = v108;
  *(unsigned char *)(a9 + 400) = a7;
  *(_DWORD *)(a9 + 404) = *(_DWORD *)&v133[3];
  *(_DWORD *)(a9 + 401) = *(_DWORD *)v133;
  *(_OWORD *)(a9 + 600) = v101;
  *(_OWORD *)(a9 + 616) = v100;
  *(_OWORD *)(a9 + 648) = v99;
  *(double *)(a9 + 704) = a35;
  *(unsigned char *)(a9 + 712) = a36;
  *(_DWORD *)(a9 + 716) = *(_DWORD *)&v132[3];
  *(_DWORD *)(a9 + 713) = *(_DWORD *)v132;
  *(double *)(a9 + 720) = a37;
  *(double *)(a9 + 728) = a38;
  *(double *)(a9 + 736) = a39;
  *(double *)(a9 + 744) = a40;
  *(double *)(a9 + 752) = a41;
  *(double *)(a9 + 760) = a42;
  *(double *)(a9 + 768) = a43;
  *(double *)(a9 + 776) = a44;
  *(double *)(a9 + 784) = a45;
  *(double *)(a9 + 792) = a52;
  *(double *)(a9 + 800) = a51;
  *(double *)(a9 + 808) = a50;
  *(_OWORD *)(a9 + 816) = v66;
  *(double *)(a9 + 832) = v67;
  *(double *)(a9 + 840) = v71;
  *(double *)(a9 + 848) = a47;
  *(_OWORD *)(a9 + 856) = v93;
  *(_OWORD *)(a9 + 872) = v94;
  *(void *)(a9 + 888) = v95;
  *(void *)(a9 + 896) = v96;
  *(void *)(a9 + 904) = v97;
  *(unsigned char *)(a9 + 912) = v59;
  *(_DWORD *)(a9 + 916) = *(_DWORD *)&v131[3];
  *(_DWORD *)(a9 + 913) = *(_DWORD *)v131;
  *(void *)(a9 + 920) = v98;
  *(unsigned char *)(a9 + 928) = v60;
  *(_DWORD *)(a9 + 932) = *(_DWORD *)&v130[3];
  *(_DWORD *)(a9 + 929) = *(_DWORD *)v130;
  *(_OWORD *)(a9 + 936) = v102;
  *(_OWORD *)(a9 + 952) = v103;
  *(_OWORD *)(a9 + 968) = v104;
  *(void *)(a9 + 984) = v105;
  double result = v107;
  *(double *)(a9 + 992) = v107;
  *(unsigned char *)(a9 + 1000) = v112;
  *(unsigned char *)(a9 + 1001) = v111;
  *(unsigned char *)(a9 + 1002) = v110;
  return result;
}

double sub_1DE866B50@<D0>(double *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  double result = *a1;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  char v8 = *((unsigned char *)a2 + 9);
  char v9 = *((unsigned char *)a2 + 10);
  uint64_t v10 = *a3;
  uint64_t v11 = *a4;
  *(double *)a5 = *a1;
  *(void *)(a5 + 8) = v6;
  *(unsigned char *)(a5 + 16) = v7;
  *(unsigned char *)(a5 + 17) = v8;
  *(unsigned char *)(a5 + 18) = v9;
  *(void *)(a5 + 24) = v10;
  *(void *)(a5 + 32) = v11;
  return result;
}

__n128 sub_1DE866B84@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  __n128 v15 = *a1;
  unint64_t v12 = a1[1].n128_u64[0];
  unint64_t v13 = a1[1].n128_u64[1];
  sub_1DE85A150(a4);
  sub_1DE85A334(a5);
  sub_1DE85A504(a6);
  sub_1DE85A6D4(a7);
  sub_1DE85A6F0(a2);
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  __n128 result = v15;
  *(__n128 *)(a3 + 24) = v15;
  *(void *)(a3 + 40) = v12;
  *(void *)(a3 + 48) = v13;
  *(double *)(a3 + 56) = a7;
  *(void *)(a3 + 64) = a2;
  return result;
}

void sub_1DE866C64(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

__n128 sub_1DE866C6C@<Q0>(double *a1@<X0>, double *a2@<X1>, __n128 *a3@<X8>)
{
  double v4 = *a2;
  double v5 = a2[1];
  __n128 v8 = *(__n128 *)a1;
  sub_1DE859F40(*a1, a1[1]);
  __n128 v6 = v8;
  v8.n128_f64[0] = v4;
  v8.n128_f64[1] = v5;
  sub_1DE859F5C(v4, v5);
  __n128 result = v8;
  *a3 = v6;
  a3[1] = v8;
  return result;
}

double sub_1DE866CDC@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  return sub_1DE866D1C((uint64_t (*)(void))sub_1DE85862C, (uint64_t (*)(uint64_t, double))sub_1DE858650, (void (*)(uint64_t, double))sub_1DE858834, a1, a2, a3, a4);
}

double sub_1DE866D1C@<D0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t, double)@<X1>, void (*a3)(uint64_t, double)@<X2>, double *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v12 = a1();
  uint64_t v13 = a2(v12, a6);
  a3(v13, a7);
  double result = a7;
  *a4 = a5;
  a4[1] = a6;
  a4[2] = a7;
  return result;
}

double sub_1DE866DB8@<D0>(char a1@<W0>, long long *a2@<X1>, char a3@<W2>, long long *a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>, double a13@<D5>, double a14@<D6>, double a15@<D7>, double a16, double a17, double a18, double a19, double a20)
{
  long long v34 = *a2;
  uint64_t v33 = *((void *)a2 + 2);
  long long v36 = *a4;
  uint64_t v35 = *((void *)a4 + 2);
  sub_1DE858854(a8);
  sub_1DE858870(a9);
  sub_1DE85888C(a10);
  sub_1DE858A70(a11);
  sub_1DE858A8C(a12);
  sub_1DE858AA8(a13);
  sub_1DE858AC4(a14);
  sub_1DE858CB4(a15);
  sub_1DE858CD0(a16);
  sub_1DE858CEC(a17);
  sub_1DE858ED0(a18);
  sub_1DE858EEC(a19);
  sub_1DE858F08(a20);
  double result = a20;
  *(unsigned char *)a7 = a1;
  *(double *)(a7 + 8) = a8;
  *(double *)(a7 + 16) = a9;
  *(_OWORD *)(a7 + 24) = v34;
  *(void *)(a7 + 40) = v33;
  *(unsigned char *)(a7 + 48) = a3;
  *(_OWORD *)(a7 + 56) = v36;
  *(void *)(a7 + 72) = v35;
  *(double *)(a7 + 80) = a10;
  *(double *)(a7 + 88) = a11;
  *(double *)(a7 + 96) = a12;
  *(double *)(a7 + 104) = a13;
  *(unsigned char *)(a7 + 112) = a5;
  *(double *)(a7 + 120) = a14;
  *(double *)(a7 + 128) = a15;
  *(double *)(a7 + 136) = a16;
  *(double *)(a7 + 144) = a17;
  *(double *)(a7 + 152) = a18;
  *(unsigned char *)(a7 + 160) = a6;
  *(double *)(a7 + 168) = a19;
  *(double *)(a7 + 176) = a20;
  return result;
}

double sub_1DE866FF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  sub_1DE857B18(a3);
  sub_1DE857B34(a4);
  sub_1DE857B50(a1);
  sub_1DE857D0C(a5);
  sub_1DE857D28(a6);
  sub_1DE857D44(a7);
  double result = a7;
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(void *)(a2 + 16) = a1;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  *(double *)(a2 + 40) = a7;
  return result;
}

double sub_1DE8670D4@<D0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>, double a15, double a16)
{
  sub_1DE857D60(a7);
  sub_1DE857F40(a8);
  sub_1DE857F5C(a9);
  sub_1DE857F78(a10);
  sub_1DE857F94(a11);
  sub_1DE858160(a12);
  sub_1DE85817C(a13);
  sub_1DE858198(a14);
  sub_1DE8581B4(a15);
  sub_1DE8581D0(a16);
  double result = a16;
  *(double *)a6 = a7;
  *(unsigned char *)(a6 + 8) = a1;
  *(double *)(a6 + 16) = a8;
  *(unsigned char *)(a6 + 24) = a2;
  *(double *)(a6 + 32) = a9;
  *(double *)(a6 + 40) = a10;
  *(double *)(a6 + 48) = a11;
  *(double *)(a6 + 56) = a12;
  *(double *)(a6 + 64) = a13;
  *(double *)(a6 + 72) = a14;
  *(double *)(a6 + 80) = a15;
  *(double *)(a6 + 88) = a16;
  *(unsigned char *)(a6 + 96) = a3;
  *(unsigned char *)(a6 + 97) = a4;
  *(unsigned char *)(a6 + 98) = a5;
  return result;
}

double sub_1DE867264@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  sub_1DE858F24(a2);
  sub_1DE859114(a3);
  sub_1DE859130(a4);
  sub_1DE85914C(a5);
  double result = a5;
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  return result;
}

uint64_t sub_1DE8672FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t result = sub_1DE85A8BC(v3);
  *a2 = a1;
  return result;
}

uint64_t sub_1DE86733C()
{
  return *v0;
}

uint64_t sub_1DE867344@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if (a2 >= 5) {
    char v4 = 0;
  }
  else {
    char v4 = a2;
  }
  *(unsigned char *)a3 = v4;
  *(double *)(a3 + 8) = a4;
  *(void *)(a3 + 16) = result;
  return result;
}

double sub_1DE86735C()
{
  return *(double *)v0;
}

__n128 sub_1DE867364@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  char v3 = *(unsigned char *)(v1 + 17);
  char v4 = *(unsigned char *)(v1 + 18);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(unsigned char *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 17) = v3;
  *(unsigned char *)(a1 + 18) = v4;
  __n128 result = *(__n128 *)(v1 + 24);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1DE867390@<X0>(void *a1@<X8>)
{
  char v3 = (const void *)(v1 + 40);
  memcpy(__dst, v3, sizeof(__dst));
  memcpy(a1, v3, 0x768uLL);
  return sub_1DE84E628((uint64_t)__dst);
}

void *sub_1DE8673EC@<X0>(void *a1@<X8>)
{
  return memcpy(a1, (const void *)(v1 + 1936), 0x3EBuLL);
}

__n128 sub_1DE8673FC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 3008);
  long long v3 = *(_OWORD *)(v1 + 2960);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 2944);
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = *(__n128 *)(v1 + 2976);
  long long v5 = *(_OWORD *)(v1 + 2992);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = v2;
  return result;
}

uint64_t sub_1DE867420@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 3016);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE86742C()
{
  return swift_bridgeObjectRetain();
}

void *sub_1DE867434@<X0>(void *a1@<X8>)
{
  return memcpy(a1, (const void *)(v1 + 3032), 0x238uLL);
}

unint64_t sub_1DE867444@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 5;
  if (result < 5) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1DE867458()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8674A0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8674CC()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE867510@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1DE867444(*a1, a2);
}

void sub_1DE867518(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DE867524()
{
  return sub_1DE8E1550();
}

uint64_t sub_1DE867584()
{
  return sub_1DE8E1500();
}

BOOL sub_1DE8675D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1DE8675E8(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DE8675F4(uint64_t a1, uint64_t a2)
{
  if (((a1 | a2) & 0x100000000) != 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v9 = sub_1DE8E1A80();
  uint64_t v10 = v5;
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16) && (unint64_t v6 = sub_1DE821D84(v9, v10), (v7 & 1) != 0)) {
    uint64_t v3 = *(void *)(*(void *)(v4 + 56) + 8 * v6);
  }
  else {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DE8676DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2 && *((double *)a1 + 1) == *((double *)a2 + 1)) {
    return sub_1DE867AD8(*((void *)a1 + 2), *((void *)a2 + 2));
  }
  else {
    return 0;
  }
}

uint64_t sub_1DE86770C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v35 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    unint64_t v8 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v37 = v4;
    unint64_t v9 = v8 | (v4 << 6);
LABEL_22:
    uint64_t v14 = v3;
    __n128 v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (double *)(*(void *)(v3 + 56) + (v9 << 6));
    int v19 = *(unsigned __int8 *)v18;
    double v20 = v18[1];
    uint64_t v21 = *((void *)v18 + 2);
    double v22 = v18[3];
    double v23 = v18[4];
    int v24 = *((unsigned __int8 *)v18 + 40);
    double v25 = v18[6];
    int v26 = *((unsigned __int8 *)v18 + 56);
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1DE821D84(v16, v17);
    char v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return 0;
    }
    __n128 result = 0;
    long long v30 = (double *)(*(void *)(a2 + 56) + (v27 << 6));
    if (v19 == *(unsigned __int8 *)v30
      && v30[1] == v20
      && *((void *)v30 + 2) == v21
      && v30[3] == v22
      && v30[4] == v23
      && ((v24 ^ *((unsigned __int8 *)v30 + 40)) & 1) == 0
      && v30[6] == v25)
    {
      uint64_t v3 = v14;
      int64_t v4 = v37;
      if (((v26 ^ *((unsigned __int8 *)v30 + 56)) & 1) == 0) {
        continue;
      }
    }
    return result;
  }
  int64_t v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v10 >= v36) {
    return 1;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v10);
  int64_t v12 = v4 + 1;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v4 + 2;
  if (v4 + 2 >= v36) {
    return 1;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v12);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v4 + 3;
  if (v4 + 3 >= v36) {
    return 1;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v12);
  if (v11)
  {
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    int64_t v37 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    goto LABEL_22;
  }
  uint64_t v13 = v4 + 4;
  if (v4 + 4 >= v36) {
    return 1;
  }
  unint64_t v11 = *(void *)(v35 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v4 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v36) {
      return 1;
    }
    unint64_t v11 = *(void *)(v35 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

unint64_t sub_1DE867968(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = 8 * v11;
    double v16 = *(double *)(*(void *)(v3 + 56) + v15);
    __n128 result = sub_1DE821DFC(*(void *)(*(void *)(v3 + 48) + v15));
    if ((v17 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * result) != v16) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DE867AD8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    double v18 = *(double *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1DE821D84(v16, v17);
    char v21 = v20;
    __n128 result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DE867C78(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v22 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v23 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v23) {
      return 1;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v23) {
        return 1;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v23) {
          return 1;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v4);
        if (!v11)
        {
          int64_t v4 = v10 + 3;
          if (v10 + 3 >= v23) {
            return 1;
          }
          unint64_t v11 = *(void *)(v22 + 8 * v4);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_24:
    unint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = (const void *)(*(void *)(v3 + 56) + 432 * v9);
    memcpy(__dst, v16, 0x1AAuLL);
    memcpy(__src, v16, sizeof(__src));
    v26[0] = v15;
    v26[1] = v14;
    memcpy(v27, __src, sizeof(v27));
    nullsub_133(v26);
    sub_1DE89F4C8((uint64_t)v26, (uint64_t)v28, &qword_1EAC0D3F8);
    uint64_t v17 = v28[0];
    uint64_t v18 = v28[1];
    memcpy(v31, v29, 0x1AAuLL);
    swift_bridgeObjectRetain();
    sub_1DE89F52C((uint64_t)__dst);
    unint64_t v19 = sub_1DE821D84(v17, v18);
    LOBYTE(v17) = v20;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      sub_1DE89F578((uint64_t)v31);
      return 0;
    }
    memcpy(v30, (const void *)(*(void *)(a2 + 56) + 432 * v19), 0x1AAuLL);
    sub_1DE89F52C((uint64_t)v30);
    char v21 = sub_1DE86E8D8((uint64_t)v30, (uint64_t)v31, (void (*)(long long *, double))sub_1DE89F750, (void (*)(long long *))sub_1DE89F754);
    sub_1DE89F578((uint64_t)v30);
    __n128 result = sub_1DE89F578((uint64_t)v31);
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v23) {
    return 1;
  }
  unint64_t v11 = *(void *)(v22 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v23) {
      return 1;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_1DE867F58()
{
  unint64_t v1 = 0xD000000000000016;
  if (*v0 != 1) {
    unint64_t v1 = 0x676E697070616DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1DE867FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE899EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE867FE0()
{
  return 0;
}

void sub_1DE867FEC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE867FF8(uint64_t a1)
{
  unint64_t v2 = sub_1DE889A24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE868034(uint64_t a1)
{
  unint64_t v2 = sub_1DE889A24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE868070(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C028);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *v1;
  uint64_t v12 = *((void *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE889A24();
  sub_1DE8E1C10();
  char v17 = v9;
  char v16 = 0;
  sub_1DE889A78();
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v10 = v12;
    char v15 = 1;
    sub_1DE8E1A20();
    uint64_t v14 = v10;
    char v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7EF8);
    sub_1DE889B20(&qword_1EAC0C040);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE868278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C048);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  char v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE889A24();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v18 = 0;
    sub_1DE889ACC();
    sub_1DE8E1930();
    char v10 = v19;
    char v17 = 1;
    sub_1DE8E1910();
    uint64_t v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7EF8);
    v15[15] = 2;
    sub_1DE889B20(&qword_1EAC0C058);
    sub_1DE8E1930();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v14 = v16;
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE8684B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE868278(a1, a2);
}

uint64_t sub_1DE8684D0(void *a1)
{
  return sub_1DE868070(a1);
}

uint64_t sub_1DE8684E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2 && *((double *)a1 + 1) == *((double *)a2 + 1)) {
    return sub_1DE867AD8(*((void *)a1 + 2), *((void *)a2 + 2));
  }
  else {
    return 0;
  }
}

double sub_1DE868518@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

double sub_1DE868524(double *a1)
{
  double result = *a1;
  *unint64_t v1 = *(void *)a1;
  return result;
}

uint64_t (*sub_1DE868530())()
{
  return nullsub_83;
}

double sub_1DE868554@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 17);
  char v5 = *(unsigned char *)(v1 + 18);
  *(double *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4;
  *(unsigned char *)(a1 + 10) = v5;
  return result;
}

double sub_1DE868578(uint64_t a1)
{
  double result = *(double *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 9);
  char v5 = *(unsigned char *)(a1 + 10);
  *(void *)(v1 + 8) = *(void *)a1;
  *(unsigned char *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 17) = v4;
  *(unsigned char *)(v1 + 18) = v5;
  return result;
}

uint64_t (*sub_1DE86859C())()
{
  return nullsub_84;
}

void sub_1DE8685C0(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
}

void *sub_1DE8685CC(void *result)
{
  *(void *)(v1 + 24) = *result;
  return result;
}

uint64_t (*sub_1DE8685D8())()
{
  return nullsub_85;
}

void sub_1DE8685FC(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
}

void *sub_1DE868608(void *result)
{
  *(void *)(v1 + 32) = *result;
  return result;
}

uint64_t (*sub_1DE868614())()
{
  return nullsub_86;
}

BOOL sub_1DE86863C(double *a1, double *a2)
{
  return *a1 == *a2;
}

BOOL sub_1DE868654(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE868670()
{
  uint64_t result = 0x52656C6369747261;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x61547374726F7073;
      break;
    case 2:
      uint64_t result = 0x73694C6B63617274;
      break;
    case 3:
      uint64_t result = 0x7369566B63617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE868728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89A030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE868750()
{
  return 0;
}

void sub_1DE86875C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE868768(uint64_t a1)
{
  unint64_t v2 = sub_1DE88AFA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8687A4(uint64_t a1)
{
  unint64_t v2 = sub_1DE88AFA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8687E0(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C060);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  int v22 = *((unsigned __int8 *)v1 + 16);
  int v11 = *((unsigned __int8 *)v1 + 17);
  int v16 = *((unsigned __int8 *)v1 + 18);
  int v17 = v11;
  uint64_t v12 = v1[4];
  uint64_t v15 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88AFA0();
  sub_1DE8E1C10();
  uint64_t v18 = v10;
  char v23 = 0;
  sub_1DE88AFF4();
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v13 = v15;
    uint64_t v18 = v9;
    char v19 = v22;
    char v20 = v17;
    char v21 = v16;
    char v23 = 1;
    sub_1DE88B048();
    sub_1DE8E1A40();
    uint64_t v18 = v13;
    char v23 = 2;
    sub_1DE88B09C();
    sub_1DE8E1A40();
    uint64_t v18 = v12;
    char v23 = 3;
    sub_1DE88B0F0();
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE868A28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88AFA0();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v25 = 0;
    sub_1DE88B144();
    sub_1DE8E1930();
    uint64_t v10 = v20;
    char v25 = 1;
    sub_1DE88B198();
    sub_1DE8E1930();
    uint64_t v11 = v20;
    int v24 = v21;
    int v12 = v22;
    int v13 = v23;
    char v25 = 2;
    sub_1DE88B1EC();
    sub_1DE8E1930();
    int v18 = v12;
    int v19 = v13;
    uint64_t v15 = v20;
    char v25 = 3;
    sub_1DE88B240();
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v16 = v20;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v24;
    *(unsigned char *)(a2 + 17) = v18;
    *(unsigned char *)(a2 + 18) = v19;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE868CB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE868A28(a1, a2);
}

uint64_t sub_1DE868CC8(void *a1)
{
  return sub_1DE8687E0(a1);
}

double sub_1DE868CE4()
{
  return 10.0;
}

void sub_1DE868CEC(void *a1@<X8>)
{
  *a1 = 0x4024000000000000;
}

double sub_1DE868CF8()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE868D04(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE868D30;
}

uint64_t sub_1DE868D30(double *a1)
{
  return sub_1DE856274(*a1);
}

uint64_t sub_1DE868D58()
{
  return 1;
}

uint64_t sub_1DE868D68()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1DE868D84()
{
  return 0;
}

void sub_1DE868D90(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE868D9C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B294();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE868DD8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B294();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE868E14(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B294();
  sub_1DE8E1C10();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0C8);
  sub_1DE88CB54(&qword_1EAC0C0D0, &qword_1EAC0C0C8);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DE868F8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B294();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0C8);
    sub_1DE88CB54(&qword_1EAC0C0E0, &qword_1EAC0C0C8);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE869124@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE868F8C(a1, a2);
}

uint64_t sub_1DE86913C(void *a1)
{
  return sub_1DE868E14(a1);
}

BOOL sub_1DE869154(double *a1, double *a2)
{
  return *a1 == *a2;
}

double sub_1DE869168()
{
  return 10.0;
}

void sub_1DE869170(void *a1@<X8>)
{
  *a1 = 0x4024000000000000;
}

double sub_1DE86917C()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE869188(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE8691B4;
}

uint64_t sub_1DE8691B4(double *a1)
{
  return sub_1DE856290(*a1);
}

uint64_t sub_1DE8691DC()
{
  return 0;
}

void sub_1DE8691E4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE8691EC()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1DE8691F4(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*sub_1DE8691FC(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 8);
  return sub_1DE89F620;
}

uint64_t sub_1DE869228()
{
  return 1;
}

void sub_1DE869230(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE86923C()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1DE869244(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

unsigned char *(*sub_1DE86924C(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 9);
  return sub_1DE869278;
}

unsigned char *sub_1DE869278(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 9) = result[8];
  return result;
}

uint64_t sub_1DE869288()
{
  return 1;
}

void sub_1DE869290(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE86929C()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t sub_1DE8692A4(uint64_t result)
{
  *(unsigned char *)(v1 + 10) = result;
  return result;
}

unsigned char *(*sub_1DE8692AC(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 10);
  return sub_1DE8692D8;
}

unsigned char *sub_1DE8692D8(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 10) = result[8];
  return result;
}

unint64_t sub_1DE8692E8(char a1)
{
  unint64_t result = 0x6E6F697461727564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE869390()
{
  return sub_1DE8692E8(*v0);
}

uint64_t sub_1DE869398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89A264(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8693C0()
{
  return 0;
}

void sub_1DE8693CC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE8693D8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B2E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE869414(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B2E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE869450(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0E8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  int v10 = *((unsigned __int8 *)v1 + 8);
  int v15 = *((unsigned __int8 *)v1 + 9);
  int v16 = v10;
  char v11 = *((unsigned char *)v1 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B2E8();
  sub_1DE8E1C10();
  uint64_t v24 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0F8);
  sub_1DE88CB54(&qword_1EAC0C100, &qword_1EAC0C0F8);
  sub_1DE8E1A40();
  if (!v2)
  {
    char v12 = v15;
    char v22 = v16;
    char v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C108);
    sub_1DE88CB54(&qword_1EAC0C110, &qword_1EAC0C108);
    sub_1DE8E1A40();
    char v20 = v12;
    char v19 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C118);
    sub_1DE88CB54(&qword_1EAC0C120, &qword_1EAC0C118);
    sub_1DE8E1A40();
    char v18 = v11;
    char v17 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C128);
    sub_1DE88CB54(&qword_1EAC0C130, &qword_1EAC0C128);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE869734@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C138);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B2E8();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C0F8);
    char v22 = 0;
    sub_1DE88CB54(&qword_1EAC0C140, &qword_1EAC0C0F8);
    sub_1DE8E1930();
    uint64_t v10 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C108);
    char v20 = 1;
    sub_1DE88CB54(&qword_1EAC0C148, &qword_1EAC0C108);
    sub_1DE8E1930();
    char v11 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C118);
    char v18 = 2;
    sub_1DE88CB54(&qword_1EAC0C150, &qword_1EAC0C118);
    sub_1DE8E1930();
    int v15 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C128);
    char v16 = 3;
    sub_1DE88CB54(&qword_1EAC0C158, &qword_1EAC0C128);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v13 = v17;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 9) = v15;
    *(unsigned char *)(a2 + 10) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE869A60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE869734(a1, a2);
}

uint64_t sub_1DE869A78(void *a1)
{
  return sub_1DE869450(a1);
}

uint64_t sub_1DE869A94()
{
  return 30;
}

void sub_1DE869A9C(void *a1@<X8>)
{
  *a1 = 30;
}

uint64_t sub_1DE869AA8()
{
  return *(void *)v0;
}

uint64_t (*sub_1DE869AB4(void *a1))(uint64_t *a1)
{
  *a1 = *v1;
  a1[1] = v1;
  return sub_1DE869ADC;
}

uint64_t sub_1DE869ADC(uint64_t *a1)
{
  return sub_1DE8562AC(*a1);
}

uint64_t sub_1DE869B00()
{
  return 1;
}

uint64_t sub_1DE869B10()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1DE869B2C()
{
  return 0;
}

void sub_1DE869B38(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE869B44(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B33C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE869B80(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B33C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE869BBC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C160);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B33C();
  sub_1DE8E1C10();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C170);
  sub_1DE88CB54(&qword_1EAC0C178, &qword_1EAC0C170);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DE869D34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C180);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B33C();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C170);
    sub_1DE88CB54(&qword_1EAC0C188, &qword_1EAC0C170);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE869ECC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE869D34(a1, a2);
}

uint64_t sub_1DE869EE4(void *a1)
{
  return sub_1DE869BBC(a1);
}

uint64_t sub_1DE869EFC()
{
  return 10;
}

void sub_1DE869F04(void *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DE869F10()
{
  return *(void *)v0;
}

uint64_t (*sub_1DE869F1C(void *a1))(uint64_t *a1)
{
  *a1 = *v1;
  a1[1] = v1;
  return sub_1DE869F44;
}

uint64_t sub_1DE869F44(uint64_t *a1)
{
  return sub_1DE8562C8(*a1);
}

uint64_t sub_1DE869F68()
{
  return 1;
}

uint64_t sub_1DE869F78()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1DE869F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE86A02C()
{
  return 0;
}

void sub_1DE86A038(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE86A044(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B390();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE86A080(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B390();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE86A0BC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  char v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B390();
  sub_1DE8E1C10();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C1A0);
  sub_1DE88CB54(&qword_1EAC0C1A8, &qword_1EAC0C1A0);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DE86A234@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C1B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B390();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C1A0);
    sub_1DE88CB54(&qword_1EAC0C1B8, &qword_1EAC0C1A0);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE86A3CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE86A234(a1, a2);
}

uint64_t sub_1DE86A3E4(void *a1)
{
  return sub_1DE86A0BC(a1);
}

BOOL sub_1DE86A3FC(void *a1, void *a2)
{
  return *a1 == *a2;
}

double sub_1DE86A410()
{
  return *(double *)v0;
}

uint64_t sub_1DE86A418()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1DE86A420()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE86A428@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  if (a2 & 1) != 0 || (a4)
  {
    swift_bridgeObjectRelease();
    uint64_t result = 0x3FF0000000000000;
    uint64_t v7 = MEMORY[0x1E4FBC870];
    a3 = 1;
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC870];
    if (a5) {
      uint64_t v7 = a5;
    }
  }
  *a6 = result;
  a6[1] = a3;
  a6[2] = v7;
  return result;
}

void sub_1DE86A484(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
  a1[1] = 1;
  a1[2] = MEMORY[0x1E4FBC870];
}

uint64_t sub_1DE86A4A0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return sub_1DE86A4D0(*(void *)(a1 + 16), *(void *)(a2 + 16));
  }
  else {
    return 0;
  }
}

uint64_t sub_1DE86A4D0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    int v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t v18 = sub_1DE8E1BD0();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    char v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1DE8E1AC0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        unint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1DE8E1AC0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1DE86A760()
{
  uint64_t v1 = 0x6953776F646E6977;
  if (*v0 != 1) {
    uint64_t v1 = 0x546465776F6C6C61;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6F687365726874;
  }
}

uint64_t sub_1DE86A7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89A408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE86A7F8()
{
  return 0;
}

void sub_1DE86A804(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE86A810(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B3E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE86A84C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B3E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE86A888(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9768);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B3E4();
  sub_1DE8E1C10();
  char v15 = 0;
  sub_1DE8E1A20();
  if (!v2)
  {
    char v14 = 1;
    sub_1DE8E1A30();
    uint64_t v13 = v9;
    char v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95F8);
    sub_1DE88EC1C(&qword_1EBEA9600, &qword_1EBEA95F8);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE86AA74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C1C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B3E4();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v18 = 0;
    sub_1DE8E1910();
    uint64_t v11 = v10;
    char v17 = 1;
    uint64_t v13 = sub_1DE8E1920();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95F8);
    v15[15] = 2;
    sub_1DE88EC1C(&qword_1EAC0C1C8, &qword_1EBEA95F8);
    sub_1DE8E1930();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v14 = v16;
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE86AC98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE86AA74(a1, a2);
}

uint64_t sub_1DE86ACB0(void *a1)
{
  return sub_1DE86A888(a1);
}

uint64_t sub_1DE86ACC8(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return sub_1DE86A4D0(*(void *)(a1 + 16), *(void *)(a2 + 16));
  }
  else {
    return 0;
  }
}

uint64_t sub_1DE86ACF8@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1DE8E1840();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1DE86AD54()
{
  uint64_t v1 = 0x6C616E6F73726570;
  if (*v0 != 1) {
    uint64_t v1 = 0x6669737265766964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616369706F74;
  }
}

uint64_t sub_1DE86ADC0()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE86AE74()
{
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE86AF14()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE86AFC4@<X0>(char *a1@<X8>)
{
  return sub_1DE86ACF8(a1);
}

void sub_1DE86AFD0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEC00000064657A69;
  uint64_t v5 = 0x6C616E6F73726570;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6669737265766964;
    unint64_t v4 = 0xEB00000000646569;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6C616369706F74;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DE86B040()
{
  return sub_1DE8E1540();
}

uint64_t sub_1DE86B0A0()
{
  return sub_1DE8E14F0();
}

uint64_t sub_1DE86B0F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE864D6C(*a1, *a2);
}

__n128 sub_1DE86B0FC()
{
  if (qword_1EBEA8010 != -1) {
    swift_once();
  }
  long long v4 = xmmword_1EBEA8C40;
  long long v5 = xmmword_1EBEA8C30;
  uint64_t v0 = qword_1EBEA8C50;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v2 = sub_1DE86B3D4(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860]);
  *(void *)&xmmword_1EBEA8130 = 0;
  *((void *)&xmmword_1EBEA8130 + 1) = v1;
  __n128 result = (__n128)v4;
  xmmword_1EBEA8140 = v5;
  xmmword_1EBEA8150 = v4;
  qword_1EBEA8160 = v0;
  qword_1EBEA8168 = v2;
  return result;
}

__n128 sub_1DE86B1A4@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  __n128 v12 = (__n128)a2[1];
  long long v13 = *a2;
  uint64_t v9 = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DE86B3D4(a3, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = a1;
  __n128 result = v12;
  *(_OWORD *)(a4 + 16) = v13;
  *(__n128 *)(a4 + 32) = v12;
  *(void *)(a4 + 48) = v9;
  *(void *)(a4 + 56) = v10;
  return result;
}

double sub_1DE86B23C()
{
  return *(double *)v0;
}

void sub_1DE86B244(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*sub_1DE86B24C())()
{
  return nullsub_87;
}

uint64_t sub_1DE86B270()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE86B278(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1DE86B2A4())()
{
  return nullsub_88;
}

double sub_1DE86B2C8@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 48);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

double sub_1DE86B2DC(uint64_t a1)
{
  double result = *(double *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  *(double *)(v1 + 48) = result;
  return result;
}

uint64_t (*sub_1DE86B2F0())()
{
  return nullsub_89;
}

uint64_t sub_1DE86B314()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE86B31C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_1DE86B348())()
{
  return nullsub_90;
}

double sub_1DE86B36C@<D0>(uint64_t a1@<X8>)
{
  if (qword_1EBEA8010 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1EBEA8C50;
  long long v3 = xmmword_1EBEA8C40;
  *(_OWORD *)a1 = xmmword_1EBEA8C30;
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1DE86B3D4(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    if (qword_1EBEA8010 == -1)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      if (!v5) {
        return MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      swift_once();
      uint64_t v5 = *(void *)(a2 + 16);
      if (!v5) {
        return MEMORY[0x1E4FBC860];
      }
    }
    long long v6 = xmmword_1EBEA8C30;
    long long v7 = xmmword_1EBEA8C40;
    uint64_t v8 = qword_1EBEA8C50;
    uint64_t v9 = sub_1DE8E15C0();
    uint64_t v3 = v9;
    *(void *)(v9 + 16) = v5;
    uint64_t v10 = v9 + 32;
    if (v5 == 1)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = v5 & 0x7FFFFFFFFFFFFFFELL;
      v10 += 40 * (v5 & 0x7FFFFFFFFFFFFFFELL);
      uint64_t v28 = v9 + 56;
      uint64_t v29 = v5 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        *(_OWORD *)(v28 - 24) = v6;
        *(_OWORD *)(v28 + 16) = v6;
        *(_OWORD *)(v28 - 8) = v7;
        *(_OWORD *)(v28 + 32) = v7;
        *(void *)(v28 + 8) = v8;
        *(void *)(v28 + 48) = v8;
        v28 += 80;
        v29 -= 2;
      }
      while (v29);
      if (v5 == v11) {
        return v3;
      }
    }
    uint64_t v30 = v5 - v11;
    do
    {
      *(_OWORD *)uint64_t v10 = v6;
      *(_OWORD *)(v10 + 16) = v7;
      *(void *)(v10 + 32) = v8;
      v10 += 40;
      --v30;
    }
    while (v30);
    return v3;
  }
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) == v4)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  uint64_t v12 = qword_1EAC0B7D0;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EAC0B8A8;
  sub_1DE8E16A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DE8E31B0;
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1DE8E1A80();
  uint64_t v17 = v16;
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v19 = sub_1DE819640();
  *(void *)(v14 + 64) = v19;
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = v17;
  uint64_t v20 = sub_1DE8E1A80();
  *(void *)(v14 + 96) = v18;
  *(void *)(v14 + 104) = v19;
  *(void *)(v14 + 72) = v20;
  *(void *)(v14 + 80) = v21;
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  if (qword_1EBEA8010 != -1)
  {
    swift_once();
    if (v4) {
      goto LABEL_12;
    }
    return MEMORY[0x1E4FBC860];
  }
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_12:
  long long v22 = xmmword_1EBEA8C30;
  long long v23 = xmmword_1EBEA8C40;
  uint64_t v24 = qword_1EBEA8C50;
  uint64_t v25 = sub_1DE8E15C0();
  uint64_t v3 = v25;
  *(void *)(v25 + 16) = v4;
  uint64_t v26 = v25 + 32;
  if (v4 == 1)
  {
    uint64_t v27 = 0;
LABEL_23:
    uint64_t v33 = v4 - v27;
    do
    {
      *(_OWORD *)uint64_t v26 = v22;
      *(_OWORD *)(v26 + 16) = v23;
      *(void *)(v26 + 32) = v24;
      v26 += 40;
      --v33;
    }
    while (v33);
    return v3;
  }
  uint64_t v27 = v4 & 0x7FFFFFFFFFFFFFFELL;
  v26 += 40 * (v4 & 0x7FFFFFFFFFFFFFFELL);
  uint64_t v31 = v25 + 56;
  uint64_t v32 = v4 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    *(_OWORD *)(v31 - 24) = v22;
    *(_OWORD *)(v31 + 16) = v22;
    *(_OWORD *)(v31 - 8) = v23;
    *(_OWORD *)(v31 + 32) = v23;
    *(void *)(v31 + 8) = v24;
    *(void *)(v31 + 48) = v24;
    v31 += 80;
    v32 -= 2;
  }
  while (v32);
  if (v4 != v27) {
    goto LABEL_23;
  }
  return v3;
}

uint64_t sub_1DE86B730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 56);
  sub_1DE86B8F4(a1);
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE89A59C(v4, v5, (double (*)(long long *))sub_1DE89F428);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EBEA8010 != -1) {
    swift_once();
  }
  long long v10 = xmmword_1EBEA8C30;
  long long v11 = xmmword_1EBEA8C40;
  uint64_t v12 = qword_1EBEA8C50;
  uint64_t v13 = *(void *)(v9 + 16);
  if (!v13)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  uint64_t result = sub_1DE8E15C0();
  *(void *)(result + 16) = v13;
  uint64_t v15 = result + 32;
  if (v13 == 1)
  {
    uint64_t v16 = 0;
LABEL_10:
    uint64_t v19 = v13 - v16;
    do
    {
      *(_OWORD *)uint64_t v15 = v10;
      *(_OWORD *)(v15 + 16) = v11;
      *(void *)(v15 + 32) = v12;
      v15 += 40;
      --v19;
    }
    while (v19);
    goto LABEL_12;
  }
  uint64_t v16 = v13 & 0x7FFFFFFFFFFFFFFELL;
  v15 += 40 * (v13 & 0x7FFFFFFFFFFFFFFELL);
  uint64_t v17 = result + 56;
  uint64_t v18 = v13 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    *(_OWORD *)(v17 - 24) = v10;
    *(_OWORD *)(v17 + 16) = v10;
    *(_OWORD *)(v17 - 8) = v11;
    *(_OWORD *)(v17 + 32) = v11;
    *(void *)(v17 + 8) = v12;
    *(void *)(v17 + 48) = v12;
    v17 += 80;
    v18 -= 2;
  }
  while (v18);
  if (v13 != v16) {
    goto LABEL_10;
  }
LABEL_12:
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v9;
  *(_OWORD *)(a2 + 16) = v10;
  *(_OWORD *)(a2 + 32) = v11;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = result;
  return result;
}

void sub_1DE86B8F4(uint64_t a1)
{
  float64x2_t v4 = *v1;
  float64x2_t v3 = v1[1];
  double v5 = v1[2].f64[0];
  if (qword_1EBEA8010 != -1)
  {
    float64x2_t v6 = *v1;
    float64x2_t v7 = v1[1];
    swift_once();
    float64x2_t v4 = v6;
    float64x2_t v3 = v7;
  }
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v4, (float64x2_t)xmmword_1EBEA8C30), (int32x4_t)vceqq_f64(v3, (float64x2_t)xmmword_1EBEA8C40))), 0xFuLL))) & 1) == 0|| v5 != *(double *)&qword_1EBEA8C50)
  {
    if (v3.f64[1] > v5) {
      __break(1u);
    }
    else {
      pow(2.71828183, (double)a1 * v3.f64[0]);
    }
  }
}

BOOL sub_1DE86BA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  float64x2_t v3 = (double *)(a1 + 40);
  float64x2_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1DE86BA78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = v2 - 1;
  float64x2_t v4 = (double *)(a2 + 64);
  uint64_t v5 = (double *)(a1 + 64);
  do
  {
    uint64_t result = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v5 - 4), *(float64x2_t *)(v4 - 4)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v5 - 2), *(float64x2_t *)(v4 - 2)))), 0xFuLL))) & (*v5 == *v4);
    BOOL v8 = v3-- != 0;
    if (result != 1) {
      break;
    }
    v4 += 5;
    v5 += 5;
  }
  while (v8);
  return result;
}

unint64_t sub_1DE86BB18()
{
  unint64_t result = 0x52746C7561666564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x52646574746F6C73;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE86BBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89A894(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE86BBF0()
{
  return 0;
}

void sub_1DE86BBFC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE86BC08(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B438();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE86BC44(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B438();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE86BC80(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9770);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  BOOL v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v13 = v1[6];
  uint64_t v14 = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B438();
  sub_1DE8E1C10();
  LOBYTE(v17) = 0;
  sub_1DE8E1A20();
  if (!v2)
  {
    uint64_t v17 = v16;
    char v22 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95E8);
    sub_1DE88EC1C(&qword_1EBEA95F0, &qword_1EBEA95E8);
    sub_1DE8E1A40();
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    uint64_t v19 = v11;
    uint64_t v20 = v12;
    uint64_t v21 = v13;
    char v22 = 2;
    sub_1DE88B48C();
    sub_1DE8E1A40();
    uint64_t v17 = v14;
    char v22 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8C88);
    sub_1DE88B534(&qword_1EBEA8C90, (void (*)(void))sub_1DE88B48C);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE86BF24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C1D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B438();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  sub_1DE8E1910();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA95E8);
  char v26 = 1;
  sub_1DE88EC1C(&qword_1EAC0C1D8, &qword_1EBEA95E8);
  sub_1DE8E1930();
  uint64_t v12 = v21;
  char v26 = 2;
  sub_1DE88B4E0();
  swift_bridgeObjectRetain();
  sub_1DE8E1930();
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8C88);
  char v26 = 3;
  sub_1DE88B534(&qword_1EAC0C1E8, (void (*)(void))sub_1DE88B4E0);
  sub_1DE8E1930();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v19 = v21;
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  a2[6] = v17;
  a2[7] = v19;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE86C260@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE86BF24(a1, a2);
}

uint64_t sub_1DE86C278(void *a1)
{
  return sub_1DE86BC80(a1);
}

double sub_1DE86C294()
{
  return 1.0;
}

void sub_1DE86C29C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE86C2A8()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE86C2B4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE86C2E0;
}

uint64_t sub_1DE86C2E0(double *a1)
{
  return sub_1DE856254(*a1);
}

double sub_1DE86C308()
{
  return *(double *)(v0 + 8);
}

double sub_1DE86C310()
{
  return *(double *)(v0 + 16);
}

double sub_1DE86C318()
{
  return *(double *)(v0 + 24);
}

double sub_1DE86C320()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1DE86C328@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  uint64_t result = sub_1DE856254(a2);
  if (a5 > a6)
  {
    if (qword_1EBEA8010 != -1) {
      uint64_t result = swift_once();
    }
    a5 = *((double *)&xmmword_1EBEA8C40 + 1);
    a6 = *(double *)&qword_1EBEA8C50;
  }
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  return result;
}

uint64_t sub_1DE86C3D8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, double *a9@<X8>, double a10, char a11)
{
  if (qword_1EBEA8010 != -1)
  {
    char v29 = a8;
    swift_once();
    a8 = v29;
  }
  double v19 = *(double *)&xmmword_1EBEA8C30;
  double v20 = *((double *)&xmmword_1EBEA8C40 + 1);
  uint64_t v21 = qword_1EBEA8C50;
  if ((a2 & 1) == 0) {
    double v19 = a1;
  }
  if (a4) {
    double v22 = *((double *)&xmmword_1EBEA8C30 + 1);
  }
  else {
    double v22 = a3;
  }
  if (a6) {
    double v23 = *(double *)&xmmword_1EBEA8C40;
  }
  else {
    double v23 = a5;
  }
  if (a8) {
    double v24 = *((double *)&xmmword_1EBEA8C40 + 1);
  }
  else {
    double v24 = a7;
  }
  if (a11) {
    a10 = *(double *)&qword_1EBEA8C50;
  }
  double v30 = v19;
  uint64_t result = sub_1DE856254(v19);
  if (v24 > a10) {
    double v27 = *(double *)&v21;
  }
  else {
    double v27 = a10;
  }
  if (v24 > a10) {
    double v28 = v20;
  }
  else {
    double v28 = v24;
  }
  *a9 = v30;
  a9[1] = v22;
  a9[2] = v23;
  a9[3] = v28;
  a9[4] = v27;
  return result;
}

uint64_t sub_1DE86C50C(uint64_t a1, uint64_t a2)
{
  float64x2_t v6 = *v2;
  float64x2_t v5 = v2[1];
  double v7 = v2[2].f64[0];
  if (qword_1EBEA8010 != -1)
  {
    float64x2_t v14 = *v2;
    float64x2_t v15 = v2[1];
    swift_once();
    float64x2_t v6 = v14;
    float64x2_t v5 = v15;
  }
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v6, (float64x2_t)xmmword_1EBEA8C30), (int32x4_t)vceqq_f64(v5, (float64x2_t)xmmword_1EBEA8C40))), 0xFuLL))) & 1) == 0|| v7 != *(double *)&qword_1EBEA8C50)
  {
    sub_1DE86B8F4(a2);
    double v9 = round(v8);
    if (v9 > -9.22337204e18 && v9 < 9.22337204e18)
    {
      return (uint64_t)v9;
    }
    else
    {
      if (qword_1EAC0B7D0 != -1) {
        swift_once();
      }
      id v11 = (id)qword_1EAC0B8A8;
      sub_1DE8E16A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1DE8E25E0;
      *(void *)&long long v16 = 0;
      *((void *)&v16 + 1) = 0xE000000000000000;
      sub_1DE8E1620();
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v12 + 64) = sub_1DE819640();
      *(_OWORD *)(v12 + 32) = v16;
      sub_1DE8E13A0();

      swift_bridgeObjectRelease();
    }
  }
  return a1;
}

double sub_1DE86C700()
{
  sub_1DE856254(1.0);
  xmmword_1EBEA8C30 = 0x3FF0000000000000uLL;
  *(void *)&xmmword_1EBEA8C40 = 0;
  double result = -1.79769313e308;
  *(long long *)((char *)&xmmword_1EBEA8C40 + 8) = xmmword_1DE8E7990;
  return result;
}

uint64_t sub_1DE86C758(unsigned __int8 *a1, char *a2)
{
  return sub_1DE864EA8(*a1, *a2);
}

uint64_t sub_1DE86C764()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE86C830()
{
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE86C8E4()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE86C9AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DE89AA80();
  *a1 = result;
  return result;
}

void sub_1DE86C9DC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6168706C61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE100000000000000;
      uint64_t v3 = 109;
      goto LABEL_3;
    case 2:
      *a1 = 100;
      a1[1] = 0xE100000000000000;
      break;
    case 3:
      *a1 = 7235949;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 7889261;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DE86CA6C()
{
  uint64_t result = 0x6168706C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 109;
      break;
    case 2:
      uint64_t result = 100;
      break;
    case 3:
      uint64_t result = 7235949;
      break;
    case 4:
      uint64_t result = 7889261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE86CAEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DE89AA80();
  *a1 = result;
  return result;
}

uint64_t sub_1DE86CB14()
{
  return 0;
}

void sub_1DE86CB20(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DE86CB2C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B5A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE86CB68(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B5A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE86CBA4(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9948);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  double v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  float64x2_t v10 = *v1;
  float64x2_t v9 = v1[1];
  double v11 = v1[2].f64[0];
  if (qword_1EBEA8010 != -1)
  {
    float64x2_t v13 = v1[1];
    float64x2_t v14 = v10;
    swift_once();
    float64x2_t v9 = v13;
    float64x2_t v10 = v14;
  }
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v10, (float64x2_t)xmmword_1EBEA8C30), (int32x4_t)vceqq_f64(v9, (float64x2_t)xmmword_1EBEA8C40))), 0xFuLL))) & 1) != 0&& v11 == *(double *)&qword_1EBEA8C50)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE8E1C00();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_1DE8E1AF0();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    float64x2_t v13 = v9;
    float64x2_t v14 = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE88B5A4();
    sub_1DE8E1C10();
    v15[0] = 0;
    sub_1DE8E1A20();
    if (!v2)
    {
      v15[0] = 1;
      sub_1DE8E1A20();
      v15[0] = 2;
      sub_1DE8E1A20();
      v15[0] = 3;
      sub_1DE8E1A20();
      v15[0] = 4;
      sub_1DE8E1A20();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_1DE86CE74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  float64x2_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8E1BE0();
  if (v2)
  {

    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
    sub_1DE88B5F8((uint64_t)v33);
LABEL_4:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE88B5A4();
    sub_1DE8E1BF0();
    if (qword_1EBEA8010 != -1) {
      swift_once();
    }
    double v12 = *((double *)&xmmword_1EBEA8C30 + 1);
    double v13 = *((double *)&xmmword_1EBEA8C40 + 1);
    double v15 = *(double *)&xmmword_1EBEA8C40;
    double v14 = *(double *)&qword_1EBEA8C50;
    LOBYTE(v35[0]) = 0;
    sub_1DE8E1910();
    double v17 = v16;
    LOBYTE(v35[0]) = 1;
    double v18 = COERCE_DOUBLE(sub_1DE8E1890());
    if ((v19 & 1) == 0) {
      double v12 = v18;
    }
    LOBYTE(v35[0]) = 2;
    double v20 = COERCE_DOUBLE(sub_1DE8E1890());
    if ((v21 & 1) == 0) {
      double v15 = v20;
    }
    LOBYTE(v35[0]) = 3;
    double v22 = COERCE_DOUBLE(sub_1DE8E1890());
    char v24 = v23;
    LOBYTE(v35[0]) = 4;
    double v25 = COERCE_DOUBLE(sub_1DE8E1890());
    if (v24) {
      double v31 = v13;
    }
    else {
      double v31 = v22;
    }
    if (v26) {
      double v32 = v14;
    }
    else {
      double v32 = v25;
    }
    *(double *)uint64_t v35 = v17;
    sub_1DE856254(v17);
    uint64_t v29 = v35[0];
    if (v31 <= v32)
    {
      double v14 = v32;
      double v13 = v31;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    goto LABEL_21;
  }
  sub_1DE88B658(v33, (uint64_t)v35);
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  uint64_t v10 = sub_1DE8E1AD0();
  if (v10 == 0x797469746E656469 && v11 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      goto LABEL_4;
    }
  }
  if (qword_1EBEA8010 != -1) {
    swift_once();
  }
  double v12 = *((double *)&xmmword_1EBEA8C30 + 1);
  uint64_t v29 = xmmword_1EBEA8C30;
  double v13 = *((double *)&xmmword_1EBEA8C40 + 1);
  double v15 = *(double *)&xmmword_1EBEA8C40;
  double v14 = *(double *)&qword_1EBEA8C50;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
LABEL_21:
  *(void *)a2 = v29;
  *(double *)(a2 + 8) = v12;
  *(double *)(a2 + 16) = v15;
  *(double *)(a2 + 24) = v13;
  *(double *)(a2 + 32) = v14;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE86D290@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE86CE74(a1, a2);
}

uint64_t sub_1DE86D2A8(void *a1)
{
  return sub_1DE86CBA4(a1);
}

uint64_t sub_1DE86D2C4()
{
  return *(void *)v0;
}

__n128 sub_1DE86D2CC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  __n128 result = *(__n128 *)(v1 + 8);
  long long v5 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

uint64_t sub_1DE86D2EC(uint64_t a1, char a2)
{
  uint64_t result = *(void *)v2;
  if ((*(unsigned char *)(v2 + 48) & 1) == 0 && (a2 & 1) == 0) {
    return sub_1DE86C50C(result, a1);
  }
  return result;
}

BOOL sub_1DE86D348(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE86D364()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE86D394()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x657A69536E696DLL;
  }
}

uint64_t sub_1DE86D3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89AACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE86D3FC()
{
  return 0;
}

void sub_1DE86D408(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE86D414(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B670();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE86D450(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B670();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE86D48C(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C200);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v17 = v9;
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = v10;
  uint64_t v13 = *(void *)(v1 + 40);
  int v24 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B670();
  sub_1DE8E1C10();
  LOBYTE(v18) = 0;
  sub_1DE8E1A30();
  if (!v2)
  {
    uint64_t v18 = v17;
    uint64_t v19 = v16;
    uint64_t v20 = v15;
    uint64_t v21 = v14;
    uint64_t v22 = v13;
    char v23 = v24;
    char v25 = 1;
    sub_1DE88B48C();
    sub_1DE8E19D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE86D650@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C210);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B670();
  sub_1DE8E1BF0();
  if (!v2)
  {
    LOBYTE(v16[0]) = 0;
    uint64_t v10 = sub_1DE8E1920();
    char v19 = 1;
    sub_1DE88B4E0();
    sub_1DE8E18C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v11 = v17;
    char v12 = v18;
    long long v13 = v16[0];
    long long v14 = v16[1];
    *(void *)a2 = v10;
    *(_OWORD *)(a2 + 8) = v13;
    *(_OWORD *)(a2 + 24) = v14;
    *(void *)(a2 + 40) = v11;
    *(unsigned char *)(a2 + 48) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE86D820(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v1 = type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.getter(v1);
  return v3;
}

uint64_t sub_1DE86D888(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v1 = type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.getter(v1);
  return v3;
}

uint64_t sub_1DE86D8F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v1 = type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.getter(v1);
  return v3;
}

uint64_t sub_1DE86D958(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v1 = type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.getter(v1);
  return v3;
}

uint64_t sub_1DE86D9C0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v1 = type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.getter(v1);
  return v3;
}

uint64_t sub_1DE86DA28(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v1 = type metadata accessor for ConditionalConfigurableValue();
  ConditionalConfigurableValue.wrappedValue.getter(v1);
  return v3;
}

uint64_t sub_1DE86DA90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE86D650(a1, a2);
}

uint64_t sub_1DE86DAA8(void *a1)
{
  return sub_1DE86D48C(a1);
}

uint64_t sub_1DE86DAC4()
{
  sub_1DE88B6C4();
  uint64_t v0 = type metadata accessor for ConditionalConfigurableValue();
  return ConditionalConfigurableValue.wrappedValue.getter(v0);
}

double sub_1DE86DB50@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  long long v5 = *(_OWORD *)(a2 + a1 - 128);
  long long v6 = *(_OWORD *)(a2 + a1 - 112);
  long long v7 = *(_OWORD *)(a2 + a1 - 96);
  long long v8 = *(_OWORD *)(a2 + a1 - 80);
  _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsVMa();
  sub_1DE86DAC4();
  *a3 = v5;
  double result = *(double *)&v6;
  a3[1] = v6;
  a3[2] = v7;
  a3[3] = v8;
  return result;
}

uint64_t sub_1DE86DBDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  v6[0] = *(void *)a1;
  v6[1] = v1;
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 16);
  long long v8 = v4;
  uint64_t v9 = v2;
  uint64_t v10 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsVMa();
  return sub_1DE86DC80((uint64_t)v6);
}

uint64_t sub_1DE86DC80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  v7[0] = *(void *)a1;
  v7[1] = v1;
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v9 = v4;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  sub_1DE88B6C4();
  long long v5 = (void *)type metadata accessor for ConditionalConfigurableValue();
  return ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v7, v5);
}

void (*sub_1DE86DD0C(void *a1, uint64_t a2))(void **a1, char a2)
{
  long long v5 = malloc(0xB0uLL);
  *a1 = v5;
  v5[20] = v2;
  uint64_t v6 = *(void *)(v2 + 296);
  uint64_t v7 = *(void *)(v2 + 336);
  uint64_t v8 = *(void *)(v2 + 344);
  v5[8] = *(void *)(v2 + 288);
  v5[9] = v6;
  long long v9 = *(_OWORD *)(v2 + 320);
  *((_OWORD *)v5 + 5) = *(_OWORD *)(v2 + 304);
  *((_OWORD *)v5 + 6) = v9;
  v5[14] = v7;
  v5[15] = v8;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 128);
  unint64_t v12 = sub_1DE88B6C4();
  v5[16] = v10;
  v5[17] = &_s22QuotaConditionProviderVN;
  v5[18] = v11;
  v5[19] = v12;
  uint64_t v13 = type metadata accessor for ConditionalConfigurableValue();
  v5[21] = v13;
  ConditionalConfigurableValue.wrappedValue.getter(v13);
  return sub_1DE86DDD8;
}

void sub_1DE86DDD8(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1;
  v3[8] = **a1;
  uint64_t v4 = (uint64_t)(v3 + 8);
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  uint64_t v7 = (void *)v2[21];
  v2[9] = v2[1];
  long long v8 = *((_OWORD *)v2 + 2);
  *((_OWORD *)v2 + 5) = *((_OWORD *)v2 + 1);
  *((_OWORD *)v2 + 6) = v8;
  v2[14] = v5;
  v2[15] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ConditionalConfigurableValue.wrappedValue.setter(v4, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    ConditionalConfigurableValue.wrappedValue.setter(v4, v7);
  }
  free(v2);
}

uint64_t sub_1DE86DE90()
{
  sub_1DE88B718();
  uint64_t v0 = type metadata accessor for ConditionalConfigurableValue();
  return ConditionalConfigurableValue.wrappedValue.getter(v0);
}

double sub_1DE86DF04@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  long long v5 = *(_OWORD *)(a2 + a1 - 128);
  long long v6 = *(_OWORD *)(a2 + a1 - 112);
  _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsVMa();
  sub_1DE86DE90();
  double result = *(double *)&v5;
  *(_OWORD *)a3 = v5;
  *(void *)(a3 + 16) = v6;
  return result;
}

uint64_t sub_1DE86DF78(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  v5[0] = v1;
  v5[1] = v3;
  uint64_t v5[2] = v2;
  swift_bridgeObjectRetain();
  _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsVMa();
  return sub_1DE86DFF0(v5);
}

uint64_t sub_1DE86DFF0(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  v5[0] = *a1;
  v5[1] = v1;
  uint64_t v5[2] = v2;
  sub_1DE88B718();
  uint64_t v3 = (void *)type metadata accessor for ConditionalConfigurableValue();
  return ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v5, v3);
}

void (*sub_1DE86E064(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  long long v5 = malloc(0x60uLL);
  *a1 = v5;
  v5[10] = v2;
  uint64_t v6 = v2[45];
  uint64_t v7 = v2[46];
  v5[7] = v2[44];
  v5[8] = v6;
  v5[9] = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 136);
  unint64_t v10 = sub_1DE88B718();
  *long long v5 = v8;
  v5[1] = &_s31TopicDiversityConditionProviderVN;
  uint64_t v5[2] = v9;
  void v5[3] = v10;
  uint64_t v11 = type metadata accessor for ConditionalConfigurableValue();
  v5[11] = v11;
  ConditionalConfigurableValue.wrappedValue.getter(v11);
  return sub_1DE86E114;
}

void sub_1DE86E114(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = (void *)v2[11];
  *uint64_t v2 = v3;
  v2[1] = v5;
  __n128 v2[2] = v4;
  if (a2)
  {
    swift_bridgeObjectRetain();
    ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v2, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    ConditionalConfigurableValue.wrappedValue.setter((uint64_t)v2, v6);
  }
  free(v2);
}

__n128 sub_1DE86E198@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 424);
  char v3 = *(unsigned char *)(v1 + 425);
  long long v4 = *(_OWORD *)(v1 + 392);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 376);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 408);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 49) = v3;
  return result;
}

uint64_t sub_1DE86E1C0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = (const void *)(v3 + 48);
  if (a2)
  {
    memcpy(v10, v6, sizeof(v10));
    return sub_1DE86D820(a3);
  }
  else
  {
    memcpy(v10, v6, sizeof(v10));
    uint64_t v8 = sub_1DE86D820(a3);
    return sub_1DE86C50C(v8, a1);
  }
}

uint64_t sub_1DE86E284(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = (const void *)(v3 + 96);
  if (a2)
  {
    memcpy(v10, v6, sizeof(v10));
    return sub_1DE86D888(a3);
  }
  else
  {
    memcpy(v10, v6, sizeof(v10));
    uint64_t v8 = sub_1DE86D888(a3);
    return sub_1DE86C50C(v8, a1);
  }
}

uint64_t sub_1DE86E36C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = (const void *)(v3 + 144);
  if (a2)
  {
    memcpy(v10, v6, sizeof(v10));
    return sub_1DE86D8F0(a3);
  }
  else
  {
    memcpy(v10, v6, sizeof(v10));
    uint64_t v8 = sub_1DE86D8F0(a3);
    return sub_1DE86C50C(v8, a1);
  }
}

uint64_t sub_1DE86E464(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    return sub_1DE86D958(a3);
  }
  uint64_t v4 = sub_1DE86D958(a3);
  return sub_1DE86C50C(v4, a1);
}

uint64_t sub_1DE86E5E0(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    return sub_1DE86D9C0(a3);
  }
  uint64_t v4 = sub_1DE86D9C0(a3);
  return sub_1DE86C50C(v4, a1);
}

uint64_t sub_1DE86E75C(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    return sub_1DE86DA28(a3);
  }
  uint64_t v4 = sub_1DE86DA28(a3);
  return sub_1DE86C50C(v4, a1);
}

uint64_t sub_1DE86E8D8(uint64_t a1, uint64_t a2, void (*a3)(long long *, double), void (*a4)(long long *))
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
      return 0;
    }
    uint64_t result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 56), *(float64x2_t *)(a2 + 56)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 72), *(float64x2_t *)(a2 + 72)))), 0xFuLL))) & 1) == 0|| *(double *)(a1 + 88) != *(double *)(a2 + 88))
    {
      return result;
    }
    if (*(void *)(a1 + 96) != *(void *)(a2 + 96)) {
      return 0;
    }
    uint64_t result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 104), *(float64x2_t *)(a2 + 104)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 120), *(float64x2_t *)(a2 + 120)))), 0xFuLL))) & 1) == 0|| *(double *)(a1 + 136) != *(double *)(a2 + 136))
    {
      return result;
    }
    if (*(void *)(a1 + 144) != *(void *)(a2 + 144)) {
      return 0;
    }
    uint64_t result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 152), *(float64x2_t *)(a2 + 152)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 168), *(float64x2_t *)(a2 + 168)))), 0xFuLL))) & 1) == 0|| *(double *)(a1 + 184) != *(double *)(a2 + 184))
    {
      return result;
    }
    if (*(void *)(a1 + 192) != *(void *)(a2 + 192)) {
      return 0;
    }
    uint64_t result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 200), *(float64x2_t *)(a2 + 200)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 216), *(float64x2_t *)(a2 + 216)))), 0xFuLL))) & 1) == 0|| *(double *)(a1 + 232) != *(double *)(a2 + 232))
    {
      return result;
    }
    if (*(void *)(a1 + 240) != *(void *)(a2 + 240)) {
      return 0;
    }
    uint64_t result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 248), *(float64x2_t *)(a2 + 248)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 264), *(float64x2_t *)(a2 + 264)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 280) == *(double *)(a2 + 280))
    {
      if (*(double *)(a1 + 288) != *(double *)(a2 + 288)) {
        return 0;
      }
      uint64_t v8 = a2 + 304;
      double v9 = *(double *)(a1 + 336);
      uint64_t v10 = *(void *)(a1 + 344);
      float64x2_t v24 = *(float64x2_t *)(a1 + 304);
      float64x2_t v26 = *(float64x2_t *)(a1 + 320);
      float64x2_t v22 = *(float64x2_t *)(a2 + 304);
      float64x2_t v23 = *(float64x2_t *)(a2 + 320);
      double v11 = *(double *)(a2 + 336);
      uint64_t v12 = *(void *)(a2 + 344);
      uint64_t v20 = a1;
      if (!sub_1DE86BA0C(*(void *)(a1 + 296), *(void *)(a2 + 296))) {
        return 0;
      }
      uint64_t result = 0;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v24, v22), (int32x4_t)vceqq_f64(v26, v23))), 0xFuLL))) & 1) != 0&& v9 == v11)
      {
        if ((sub_1DE86BA78(v10, v12) & 1) == 0) {
          return 0;
        }
        long long v36 = *(_OWORD *)(v20 + 352);
        uint64_t v13 = *(void *)(v20 + 368);
        uint64_t v37 = v13;
        long long v34 = *(_OWORD *)(a2 + 352);
        uint64_t v14 = *(void *)(a2 + 368);
        uint64_t v35 = v14;
        if (*(double *)&v36 != *(double *)&v34) {
          return 0;
        }
        if (*((void *)&v36 + 1) != *((void *)&v34 + 1)) {
          return 0;
        }
        a3(&v36, *(double *)&v36);
        ((void (*)(long long *))a3)(&v34);
        char v15 = sub_1DE86A4D0(v13, v14);
        a4(&v34);
        a4(&v36);
        if ((v15 & 1) == 0) {
          return 0;
        }
        sub_1DE89F4C8(v20 + 376, (uint64_t)v33, &qword_1EAC0BF88);
        uint64_t v16 = *(void *)(a2 + 376);
        float64x2_t v25 = *(float64x2_t *)(a2 + 384);
        float64x2_t v27 = *(float64x2_t *)(a2 + 400);
        double v17 = *(double *)(a2 + 416);
        char v18 = *(unsigned char *)(a2 + 424);
        uint64_t v19 = *(unsigned __int8 *)(v8 + 121);
        sub_1DE89F4C8((uint64_t)v33, (uint64_t)v38, &qword_1EAC0BF88);
        if (v38[49]) {
          return v19;
        }
        sub_1DE89F4C8((uint64_t)v33, (uint64_t)&v28, &qword_1EAC0BF88);
        if ((v19 & 1) != 0 || v28 != v16) {
          return 0;
        }
        if (v32)
        {
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else if ((v18 & 1) != 0 {
               || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v29, v25), (int32x4_t)vceqq_f64(v30, v27))), 0xFuLL))) & 1) == 0|| v31 != v17)
        }
        {
          return 0;
        }
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1DE86ED40(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 40);
  double v3 = *(double *)(a1 + 88);
  double v4 = *(double *)(a1 + 136);
  double v35 = *(double *)(a1 + 184);
  double v30 = *(double *)(a1 + 232);
  double v25 = *(double *)(a1 + 280);
  uint64_t v21 = *(void *)(a1 + 376);
  double v13 = *(double *)(a1 + 416);
  char v19 = *(unsigned char *)(a1 + 424);
  char v23 = *(unsigned char *)(a1 + 425);
  float64x2_t v50 = *(float64x2_t *)(a1 + 8);
  float64x2_t v51 = *(float64x2_t *)(a1 + 24);
  float64x2_t v48 = *(float64x2_t *)(a2 + 8);
  float64x2_t v49 = *(float64x2_t *)(a2 + 24);
  double v5 = *(double *)(a2 + 40);
  float64x2_t v46 = *(float64x2_t *)(a1 + 56);
  float64x2_t v47 = *(float64x2_t *)(a1 + 72);
  float64x2_t v44 = *(float64x2_t *)(a2 + 56);
  float64x2_t v45 = *(float64x2_t *)(a2 + 72);
  double v6 = *(double *)(a2 + 88);
  float64x2_t v42 = *(float64x2_t *)(a1 + 104);
  float64x2_t v43 = *(float64x2_t *)(a1 + 120);
  float64x2_t v38 = *(float64x2_t *)(a1 + 152);
  float64x2_t v39 = *(float64x2_t *)(a1 + 168);
  float64x2_t v33 = *(float64x2_t *)(a1 + 200);
  float64x2_t v34 = *(float64x2_t *)(a1 + 216);
  float64x2_t v16 = *(float64x2_t *)(a1 + 384);
  float64x2_t v17 = *(float64x2_t *)(a1 + 400);
  unsigned int v22 = *(unsigned __int8 *)(a2 + 425);
  uint64_t v20 = *(void *)(a2 + 376);
  char v18 = *(unsigned char *)(a2 + 424);
  float64x2_t v40 = *(float64x2_t *)(a2 + 104);
  float64x2_t v41 = *(float64x2_t *)(a2 + 120);
  double v7 = *(double *)(a2 + 136);
  float64x2_t v36 = *(float64x2_t *)(a2 + 152);
  float64x2_t v37 = *(float64x2_t *)(a2 + 168);
  double v8 = *(double *)(a2 + 184);
  float64x2_t v31 = *(float64x2_t *)(a2 + 200);
  float64x2_t v32 = *(float64x2_t *)(a2 + 216);
  double v9 = *(double *)(a2 + 232);
  double v24 = *(double *)(a2 + 280);
  float64x2_t v14 = *(float64x2_t *)(a2 + 384);
  float64x2_t v15 = *(float64x2_t *)(a2 + 400);
  double v12 = *(double *)(a2 + 416);
  float64x2_t v28 = *(float64x2_t *)(a1 + 248);
  float64x2_t v29 = *(float64x2_t *)(a1 + 264);
  float64x2_t v26 = *(float64x2_t *)(a2 + 248);
  float64x2_t v27 = *(float64x2_t *)(a2 + 264);
  if ((static ConditionalConfigurableValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v50, v48), (int32x4_t)vceqq_f64(v51, v49))), 0xFuLL))) & 1) == 0|| v2 != v5)
  {
    return result;
  }
  if ((static ConditionalConfigurableValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v46, v44), (int32x4_t)vceqq_f64(v47, v45))), 0xFuLL))) & 1) == 0|| v3 != v6)
  {
    return result;
  }
  if ((static ConditionalConfigurableValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v42, v40), (int32x4_t)vceqq_f64(v43, v41))), 0xFuLL))) & 1) == 0|| v4 != v7)
  {
    return result;
  }
  if ((static ConditionalConfigurableValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v38, v36), (int32x4_t)vceqq_f64(v39, v37))), 0xFuLL))) & 1) == 0|| v35 != v8)
  {
    return result;
  }
  if ((static ConditionalConfigurableValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v33, v31), (int32x4_t)vceqq_f64(v34, v32))), 0xFuLL))) & 1) == 0|| v30 != v9)
  {
    return result;
  }
  if ((static ConditionalConfigurableValue.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v28, v26), (int32x4_t)vceqq_f64(v29, v27))), 0xFuLL))) & 1) != 0&& v25 == v24)
  {
    sub_1DE88B6C4();
    if (static ConditionalConfigurableValue.== infix(_:_:)())
    {
      sub_1DE88B718();
      int v11 = static ConditionalConfigurableValue.== infix(_:_:)();
      if (v23 & 1 | ((v11 & 1) == 0)) {
        return v11 & v22;
      }
      if ((v22 & 1) == 0 && v21 == v20)
      {
        if (v19)
        {
          if (v18) {
            return 1;
          }
        }
        else if ((v18 & 1) == 0 {
               && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v16, v14), (int32x4_t)vceqq_f64(v17, v15))), 0xFuLL))) & 1) != 0&& v13 == v12)
        }
        {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_1DE86F3D0(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1DE86F3E0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE86F408(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F3D20 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001DE8F3D40 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F3D70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001DE8F3D90 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F3DC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001DE8F3DE0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x414347494178616DLL && a2 == 0xEF73656C63697472 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F3E10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x657A695378616DLL && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F3E30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x657A69536E696DLL && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F3D00 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F3E50 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7669446369706F74 && a2 == 0xEE00797469737265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F3E70)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_1DE86F9D4()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE86FA1C(char a1)
{
  uint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000022;
      break;
    case 2:
      uint64_t result = 0xD000000000000017;
      break;
    case 3:
      uint64_t result = 0xD000000000000025;
      break;
    case 4:
      uint64_t result = 0xD000000000000016;
      break;
    case 5:
      uint64_t result = 0xD000000000000024;
      break;
    case 6:
      uint64_t result = 0x414347494178616DLL;
      break;
    case 7:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unsigned int v3 = 1400398189;
      goto LABEL_11;
    case 9:
    case 11:
      uint64_t result = 0xD000000000000015;
      break;
    case 10:
      unsigned int v3 = 1399744877;
LABEL_11:
      uint64_t result = v3 | 0x657A6900000000;
      break;
    case 12:
      uint64_t result = 0xD000000000000017;
      break;
    case 13:
      uint64_t result = 0x7669446369706F74;
      break;
    case 14:
      uint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE86FBBC(char *a1, char *a2)
{
  return sub_1DE86F3D0(*a1, *a2);
}

uint64_t sub_1DE86FC10()
{
  return sub_1DE86F9D4();
}

uint64_t sub_1DE86FC64()
{
  return sub_1DE86F3E0();
}

uint64_t sub_1DE86FCAC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE86FD14()
{
  return sub_1DE86FA1C(*v0);
}

uint64_t sub_1DE86FD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE86F408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE86FDC0()
{
  return 0;
}

uint64_t sub_1DE86FDCC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DE89ABBC();
  *a1 = result;
  return result;
}

uint64_t sub_1DE86FE28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DE86FE7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DE86FED0(void *a1, void *a2)
{
  long long v106 = (ValueMetadata *)a2[2];
  double v4 = (ValueMetadata *)a2[3];
  char v5 = (ValueMetadata *)a2[4];
  double v6 = (ValueMetadata *)a2[5];
  double v7 = (_UNKNOWN **)a2[6];
  double v8 = (ValueMetadata *)a2[7];
  double v9 = (_UNKNOWN **)a2[8];
  uint64_t v10 = (ValueMetadata *)a2[9];
  uint64_t v105 = (_UNKNOWN **)a2[10];
  int v11 = (_UNKNOWN **)a2[11];
  double v12 = (_UNKNOWN **)a2[12];
  double v13 = (_UNKNOWN **)a2[13];
  float64x2_t v14 = (_UNKNOWN **)a2[14];
  float64x2_t v15 = (_UNKNOWN **)a2[15];
  uint64_t v16 = a2[16];
  float64x2_t v17 = (_UNKNOWN **)a2[17];
  char v112 = v106;
  long long v103 = v4;
  uint64_t v113 = v4;
  uint64_t v89 = v5;
  uint64_t v114 = v5;
  uint64_t v81 = v6;
  uint64_t v115 = (_UNKNOWN **)v6;
  uint64_t v116 = v7;
  long long v74 = (ValueMetadata *)v7;
  long long v66 = v8;
  long long v117 = v8;
  long long v118 = v9;
  char v59 = v9;
  char v55 = v10;
  long long v119 = v10;
  long long v120 = v105;
  long long v102 = v11;
  long long v121 = v11;
  long long v122 = v12;
  long long v90 = (ValueMetadata *)v12;
  uint64_t v82 = (ValueMetadata *)v13;
  long long v123 = v13;
  long long v124 = v14;
  uint64_t v73 = (ValueMetadata *)v14;
  uint64_t v65 = (ValueMetadata *)v15;
  long long v125 = v15;
  uint64_t v126 = v16;
  uint64_t v58 = v16;
  char v54 = (ValueMetadata *)v17;
  long long v127 = v17;
  _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v18 = sub_1DE8E1A60();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  unsigned int v22 = (char *)&v39 - v21;
  long long v104 = (_UNKNOWN **)*v2;
  long long v101 = (ValueMetadata *)v2[1];
  long long v99 = (ValueMetadata *)v2[2];
  long long v100 = (ValueMetadata *)v2[3];
  uint64_t v98 = (_UNKNOWN **)v2[4];
  uint64_t v97 = (_UNKNOWN **)v2[5];
  uint64_t v96 = (_UNKNOWN **)v2[6];
  uint64_t v95 = (ValueMetadata *)v2[7];
  long long v94 = (ValueMetadata *)v2[8];
  long long v93 = (ValueMetadata *)v2[9];
  uint64_t v92 = (_UNKNOWN **)v2[10];
  uint64_t v91 = (_UNKNOWN **)v2[11];
  uint64_t v88 = (_UNKNOWN **)v2[12];
  uint64_t v87 = (ValueMetadata *)v2[13];
  long long v86 = (ValueMetadata *)v2[14];
  long long v85 = (ValueMetadata *)v2[15];
  long long v84 = (_UNKNOWN **)v2[16];
  uint64_t v83 = (_UNKNOWN **)v2[17];
  uint64_t v80 = (_UNKNOWN **)v2[18];
  uint64_t v79 = (ValueMetadata *)v2[19];
  uint64_t v78 = (ValueMetadata *)v2[20];
  uint64_t v77 = (ValueMetadata *)v2[21];
  uint64_t v76 = (_UNKNOWN **)v2[22];
  double v75 = (_UNKNOWN **)v2[23];
  uint64_t v72 = (_UNKNOWN **)v2[24];
  double v71 = (ValueMetadata *)v2[25];
  double v70 = (ValueMetadata *)v2[26];
  double v69 = (ValueMetadata *)v2[27];
  double v68 = (_UNKNOWN **)v2[28];
  double v67 = (_UNKNOWN **)v2[29];
  uint64_t v64 = (_UNKNOWN **)v2[30];
  uint64_t v63 = (ValueMetadata *)v2[31];
  long long v62 = (ValueMetadata *)v2[32];
  uint64_t v61 = (ValueMetadata *)v2[33];
  char v23 = (_UNKNOWN **)v2[35];
  char v60 = (_UNKNOWN **)v2[34];
  double v24 = (ValueMetadata *)v2[36];
  char v57 = (ValueMetadata *)v2[37];
  char v56 = (ValueMetadata *)v2[43];
  double v53 = (ValueMetadata *)v2[45];
  uint64_t v52 = v2[46];
  float64x2_t v51 = (ValueMetadata *)v2[47];
  float64x2_t v50 = (ValueMetadata *)v2[48];
  float64x2_t v49 = (ValueMetadata *)v2[49];
  float64x2_t v48 = (_UNKNOWN **)v2[50];
  float64x2_t v47 = (_UNKNOWN **)v2[51];
  float64x2_t v46 = (ValueMetadata *)v2[52];
  int v128 = *((unsigned __int8 *)v2 + 424);
  int v45 = *((unsigned __int8 *)v2 + 425);
  float64x2_t v26 = (_UNKNOWN **)v2[38];
  double v25 = (_UNKNOWN **)v2[39];
  float64x2_t v28 = (_UNKNOWN **)v2[40];
  float64x2_t v27 = (_UNKNOWN **)v2[41];
  float64x2_t v29 = (_UNKNOWN **)v2[42];
  double v30 = (_UNKNOWN **)v2[44];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v31 = v18;
  sub_1DE8E1C10();
  long long v108 = v104;
  char v129 = 0;
  char v112 = v106;
  uint64_t v113 = &_s28PositiveIntConditionProviderVN;
  uint64_t v114 = (ValueMetadata *)v105;
  uint64_t v115 = &off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  float64x2_t v32 = v107;
  sub_1DE8E1A40();
  if (v32) {
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
  float64x2_t v33 = v96;
  float64x2_t v34 = (ValueMetadata *)v102;
  double v35 = v103;
  double v107 = v23;
  float64x2_t v41 = (ValueMetadata *)v26;
  float64x2_t v42 = v25;
  float64x2_t v43 = v28;
  long long v104 = v27;
  uint64_t v105 = v29;
  long long v106 = v24;
  float64x2_t v40 = v30;
  uint64_t v44 = v19;
  char v112 = v101;
  uint64_t v113 = v99;
  uint64_t v114 = v100;
  uint64_t v115 = v98;
  uint64_t v116 = v97;
  LOBYTE(v108) = 1;
  sub_1DE88B48C();
  sub_1DE8E1A40();
  long long v108 = v33;
  char v129 = 2;
  char v112 = v35;
  uint64_t v113 = &_s28PositiveIntConditionProviderVN;
  uint64_t v114 = v34;
  uint64_t v115 = &off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  char v112 = v95;
  uint64_t v113 = v94;
  uint64_t v114 = v93;
  uint64_t v115 = v92;
  uint64_t v116 = v91;
  LOBYTE(v108) = 3;
  sub_1DE8E1A40();
  long long v108 = v88;
  char v129 = 4;
  char v112 = v89;
  uint64_t v113 = &_s28PositiveIntConditionProviderVN;
  uint64_t v114 = v90;
  uint64_t v115 = &off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  char v112 = v87;
  uint64_t v113 = v86;
  uint64_t v114 = v85;
  uint64_t v115 = v84;
  uint64_t v116 = v83;
  LOBYTE(v108) = 5;
  sub_1DE8E1A40();
  long long v108 = v80;
  char v129 = 6;
  char v112 = v81;
  uint64_t v113 = &_s28PositiveIntConditionProviderVN;
  uint64_t v114 = v82;
  uint64_t v115 = &off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  char v112 = v79;
  uint64_t v113 = v78;
  uint64_t v114 = v77;
  uint64_t v115 = v76;
  uint64_t v116 = v75;
  LOBYTE(v108) = 7;
  sub_1DE8E1A40();
  long long v108 = v72;
  char v129 = 8;
  char v112 = v74;
  uint64_t v113 = &_s28PositiveIntConditionProviderVN;
  uint64_t v114 = v73;
  uint64_t v115 = &off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  char v112 = v71;
  uint64_t v113 = v70;
  uint64_t v114 = v69;
  uint64_t v115 = v68;
  uint64_t v116 = v67;
  LOBYTE(v108) = 9;
  sub_1DE8E1A40();
  long long v108 = v64;
  char v129 = 10;
  char v112 = v66;
  uint64_t v113 = &_s28PositiveIntConditionProviderVN;
  uint64_t v114 = v65;
  uint64_t v115 = &off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  char v112 = v63;
  uint64_t v113 = v62;
  uint64_t v114 = v61;
  uint64_t v115 = v60;
  uint64_t v116 = v107;
  LOBYTE(v108) = 11;
  sub_1DE8E1A40();
  char v112 = v106;
  uint64_t v113 = v57;
  uint64_t v114 = v41;
  uint64_t v115 = v42;
  uint64_t v116 = v43;
  long long v117 = (ValueMetadata *)v104;
  long long v118 = v105;
  long long v119 = v56;
  char v129 = 12;
  unint64_t v36 = sub_1DE88B6C4();
  long long v108 = v59;
  uint64_t v109 = &_s22QuotaConditionProviderVN;
  uint64_t v110 = v58;
  unint64_t v111 = v36;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  long long v108 = v40;
  uint64_t v109 = v53;
  uint64_t v110 = v52;
  char v129 = 13;
  unint64_t v37 = sub_1DE88B718();
  char v112 = v55;
  uint64_t v113 = &_s31TopicDiversityConditionProviderVN;
  uint64_t v114 = v54;
  uint64_t v115 = (_UNKNOWN **)v37;
  type metadata accessor for ConditionalConfigurableValue();
  swift_getWitnessTable();
  sub_1DE8E1A40();
  char v112 = v51;
  uint64_t v113 = v50;
  uint64_t v114 = v49;
  uint64_t v115 = v48;
  uint64_t v116 = v47;
  long long v117 = v46;
  LOBYTE(v118) = v128;
  BYTE1(v118) = v45;
  LOBYTE(v108) = 14;
  sub_1DE88B784();
  sub_1DE8E19D0();
  return (*(uint64_t (**)(void, uint64_t))(v44 + 8))(0, v31);
}

uint64_t sub_1DE870CF8@<X0>(void *a1@<X0>, unint64_t a2@<X1>, ValueMetadata *a3@<X2>, ValueMetadata *a4@<X3>, ValueMetadata *a5@<X4>, ValueMetadata *a6@<X5>, ValueMetadata *a7@<X6>, ValueMetadata *a8@<X7>, void *a9@<X8>, ValueMetadata *a10, ValueMetadata *a11, ValueMetadata *a12, ValueMetadata *a13, ValueMetadata *a14, ValueMetadata *a15, ValueMetadata *a16, ValueMetadata *a17, ValueMetadata *a18)
{
  long long v84 = a9;
  uint64_t v98 = a4;
  unint64_t v99 = a2;
  unint64_t v105 = a2;
  uint64_t v96 = a11;
  uint64_t v97 = a3;
  long long v106 = a3;
  double v107 = a4;
  uint64_t v92 = a5;
  long long v93 = a14;
  long long v108 = a5;
  long long v90 = a6;
  uint64_t v91 = a15;
  uint64_t v109 = a6;
  uint64_t v88 = a7;
  uint64_t v89 = a16;
  uint64_t v110 = a7;
  long long v86 = a8;
  uint64_t v87 = a17;
  unint64_t v111 = a8;
  char v112 = a10;
  uint64_t v113 = a11;
  long long v94 = a13;
  uint64_t v95 = a12;
  uint64_t v114 = a12;
  uint64_t v115 = a13;
  uint64_t v116 = a14;
  long long v117 = a15;
  long long v118 = a16;
  long long v119 = a17;
  long long v85 = a18;
  long long v120 = a18;
  _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v100 = sub_1DE8E1960();
  uint64_t v19 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100, v20);
  unsigned int v22 = (char *)&v60 - v21;
  uint64_t v23 = a1[3];
  long long v102 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  long long v101 = v22;
  uint64_t v24 = v103;
  sub_1DE8E1BF0();
  if (v24) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  }
  float64x2_t v26 = v97;
  double v25 = v98;
  unint64_t v83 = (unint64_t)a10;
  uint64_t v103 = v19;
  unint64_t v105 = v99;
  long long v106 = &_s28PositiveIntConditionProviderVN;
  float64x2_t v27 = v95;
  double v107 = v96;
  long long v108 = (ValueMetadata *)&off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 0;
  swift_getWitnessTable();
  sub_1DE8E1930();
  float64x2_t v28 = (ValueMetadata *)v104[0];
  LOBYTE(v104[0]) = 1;
  unint64_t v29 = sub_1DE88B4E0();
  sub_1DE8E1930();
  unint64_t v99 = v29;
  uint64_t v96 = v28;
  double v30 = (ValueMetadata *)v105;
  uint64_t v31 = v106;
  float64x2_t v32 = v107;
  float64x2_t v33 = v108;
  float64x2_t v34 = v109;
  unint64_t v105 = (unint64_t)v26;
  long long v106 = &_s28PositiveIntConditionProviderVN;
  double v107 = v27;
  long long v108 = (ValueMetadata *)&off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 2;
  swift_getWitnessTable();
  sub_1DE8E1930();
  double v35 = (ValueMetadata *)v104[0];
  LOBYTE(v104[0]) = 3;
  sub_1DE8E1930();
  uint64_t v95 = v31;
  uint64_t v97 = v30;
  unint64_t v36 = (ValueMetadata *)v105;
  unint64_t v37 = v106;
  float64x2_t v38 = v107;
  uint64_t v39 = v108;
  float64x2_t v40 = v109;
  unint64_t v105 = (unint64_t)v25;
  long long v106 = &_s28PositiveIntConditionProviderVN;
  double v107 = v94;
  long long v108 = (ValueMetadata *)&off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 4;
  swift_getWitnessTable();
  sub_1DE8E1930();
  uint64_t v79 = v35;
  uint64_t v80 = v40;
  uint64_t v81 = v38;
  uint64_t v82 = v37;
  long long v94 = v36;
  uint64_t v98 = v39;
  float64x2_t v41 = (ValueMetadata *)v104[0];
  LOBYTE(v104[0]) = 5;
  sub_1DE8E1930();
  uint64_t v78 = v41;
  float64x2_t v42 = (ValueMetadata *)v105;
  float64x2_t v43 = v106;
  uint64_t v44 = v107;
  int v45 = v108;
  float64x2_t v46 = v109;
  unint64_t v105 = (unint64_t)v92;
  long long v106 = &_s28PositiveIntConditionProviderVN;
  double v107 = v93;
  long long v108 = (ValueMetadata *)&off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 6;
  swift_getWitnessTable();
  sub_1DE8E1930();
  uint64_t v47 = v104[0];
  LOBYTE(v104[0]) = 7;
  sub_1DE8E1930();
  uint64_t v92 = v106;
  long long v93 = (ValueMetadata *)v105;
  uint64_t v76 = v108;
  uint64_t v77 = v107;
  double v75 = v109;
  unint64_t v105 = (unint64_t)v90;
  long long v106 = &_s28PositiveIntConditionProviderVN;
  double v107 = v91;
  long long v108 = (ValueMetadata *)&off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 8;
  swift_getWitnessTable();
  sub_1DE8E1930();
  uint64_t v48 = v104[0];
  LOBYTE(v104[0]) = 9;
  sub_1DE8E1930();
  long long v90 = v106;
  uint64_t v91 = (ValueMetadata *)v105;
  uint64_t v73 = v108;
  long long v74 = v107;
  uint64_t v72 = v109;
  unint64_t v105 = (unint64_t)v88;
  long long v106 = &_s28PositiveIntConditionProviderVN;
  double v107 = v89;
  long long v108 = (ValueMetadata *)&off_1EBEA9518;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 10;
  swift_getWitnessTable();
  sub_1DE8E1930();
  uint64_t v49 = v104[0];
  LOBYTE(v104[0]) = 11;
  sub_1DE8E1930();
  unint64_t v99 = v105;
  uint64_t v88 = v107;
  uint64_t v89 = v106;
  double v70 = v109;
  double v71 = v108;
  unint64_t v50 = sub_1DE88B6C4();
  v104[0] = v86;
  v104[1] = &_s22QuotaConditionProviderVN;
  v104[2] = v87;
  v104[3] = v50;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v104[0]) = 12;
  swift_getWitnessTable();
  sub_1DE8E1930();
  float64x2_t v51 = v106;
  double v68 = v107;
  unint64_t v69 = v105;
  long long v66 = v109;
  double v67 = v108;
  uint64_t v64 = v111;
  uint64_t v65 = v110;
  uint64_t v52 = v112;
  unint64_t v53 = sub_1DE88B718();
  unint64_t v105 = v83;
  long long v106 = &_s31TopicDiversityConditionProviderVN;
  double v107 = v85;
  long long v108 = (ValueMetadata *)v53;
  type metadata accessor for ConditionalConfigurableValue();
  LOBYTE(v105) = 13;
  uint64_t v87 = v51;
  swift_bridgeObjectRetain();
  long long v86 = v52;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1DE8E1930();
  long long v85 = (ValueMetadata *)v104[0];
  uint64_t v54 = v104[2];
  unint64_t v83 = v104[1];
  char v168 = 14;
  sub_1DE88B7D8();
  uint64_t v55 = v54;
  swift_bridgeObjectRetain();
  sub_1DE8E18C0();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v100);
  uint64_t v103 = v160;
  uint64_t v100 = v162;
  long long v101 = v161;
  uint64_t v62 = v164;
  uint64_t v63 = v163;
  uint64_t v61 = v165;
  int v167 = v166;
  char v169 = HIBYTE(v166);
  v104[0] = v96;
  v104[1] = v97;
  v104[2] = v95;
  v104[3] = v32;
  v104[4] = v33;
  v104[5] = v34;
  char v56 = v79;
  v104[6] = v79;
  v104[7] = v94;
  v104[8] = v82;
  v104[9] = v81;
  v104[10] = v98;
  v104[11] = v80;
  v104[12] = v78;
  v104[13] = v42;
  v104[14] = v43;
  v104[15] = v44;
  v104[16] = v45;
  v104[17] = v46;
  v104[18] = v47;
  v104[19] = v93;
  v104[20] = v92;
  v104[21] = v77;
  v104[22] = v76;
  v104[23] = v75;
  v104[24] = v48;
  v104[25] = v91;
  v104[26] = v90;
  v104[27] = v74;
  v104[28] = v73;
  v104[29] = v72;
  v104[30] = v49;
  v104[31] = v99;
  v104[32] = v89;
  v104[33] = v88;
  v104[34] = v71;
  v104[35] = v70;
  v104[36] = v69;
  char v57 = v86;
  uint64_t v58 = v87;
  v104[37] = v87;
  v104[38] = v68;
  v104[39] = v67;
  v104[40] = v66;
  v104[41] = v65;
  v104[42] = v64;
  v104[43] = v86;
  v104[44] = v85;
  v104[45] = v83;
  v104[46] = v55;
  v104[47] = v160;
  v104[48] = v161;
  v104[49] = v162;
  v104[50] = v163;
  v104[51] = v164;
  v104[52] = v165;
  LOWORD(v104[53]) = v166;
  sub_1DE89F52C((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v84, v104, 0x1AAuLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  long long v106 = v97;
  double v107 = v95;
  long long v108 = v32;
  uint64_t v109 = v33;
  uint64_t v110 = v34;
  unint64_t v105 = (unint64_t)v96;
  unint64_t v111 = v56;
  char v112 = v94;
  uint64_t v113 = v82;
  uint64_t v114 = v81;
  uint64_t v115 = v98;
  uint64_t v116 = v80;
  long long v117 = v78;
  long long v118 = v42;
  long long v119 = v43;
  long long v120 = v44;
  long long v121 = v45;
  long long v122 = v46;
  uint64_t v123 = v47;
  long long v124 = v93;
  long long v125 = v92;
  uint64_t v126 = v77;
  long long v127 = v76;
  int v128 = v75;
  uint64_t v129 = v48;
  uint64_t v130 = v91;
  uint64_t v131 = v90;
  uint64_t v132 = v74;
  uint64_t v133 = v73;
  int v134 = v72;
  uint64_t v135 = v49;
  unint64_t v136 = v99;
  uint64_t v137 = v89;
  uint64_t v138 = v88;
  uint64_t v139 = v71;
  uint64_t v140 = v70;
  unint64_t v141 = v69;
  char v142 = v58;
  uint64_t v143 = v68;
  uint64_t v144 = v67;
  uint64_t v145 = v66;
  uint64_t v146 = v65;
  v147 = v64;
  v148 = v57;
  v149 = v85;
  unint64_t v150 = v83;
  uint64_t v151 = v55;
  uint64_t v152 = v103;
  v153 = v101;
  uint64_t v154 = v100;
  uint64_t v155 = v63;
  uint64_t v156 = v62;
  uint64_t v157 = v61;
  char v158 = v167;
  char v159 = v169;
  return sub_1DE89F578((uint64_t)&v105);
}

uint64_t sub_1DE8719D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1DE870CF8(a1, *(void *)(a2 + 16), *(ValueMetadata **)(a2 + 24), *(ValueMetadata **)(a2 + 32), *(ValueMetadata **)(a2 + 40), *(ValueMetadata **)(a2 + 48), *(ValueMetadata **)(a2 + 56), *(ValueMetadata **)(a2 + 64), a3, *(ValueMetadata **)(a2 + 72), *(ValueMetadata **)(a2 + 80), *(ValueMetadata **)(a2 + 88), *(ValueMetadata **)(a2 + 96), *(ValueMetadata **)(a2 + 104), *(ValueMetadata **)(a2 + 112), *(ValueMetadata **)(a2 + 120), *(ValueMetadata **)(a2 + 128), *(ValueMetadata **)(a2 + 136));
}

uint64_t sub_1DE871A24(void *a1, void *a2)
{
  return sub_1DE86FED0(a1, a2);
}

uint64_t sub_1DE871A3C(uint64_t a1, uint64_t a2)
{
  return sub_1DE86ED40(a1, a2) & 1;
}

void sub_1DE871A88(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE871A94(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE871AA0(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE871AAC(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE871AB8(void *a1@<X8>)
{
  *a1 = 5;
}

void sub_1DE871AC4(void *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE871AD4@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0x1AAuLL);
  memcpy(a1, v1, 0x1AAuLL);
  return sub_1DE89F52C((uint64_t)__dst);
}

void *sub_1DE871B24(const void *a1)
{
  memcpy(__dst, v1, 0x1AAuLL);
  sub_1DE89F578((uint64_t)__dst);
  return memcpy(v1, a1, 0x1AAuLL);
}

uint64_t (*sub_1DE871B74())()
{
  return nullsub_91;
}

void sub_1DE871B98(void *a1@<X8>)
{
  *a1 = 100;
}

void sub_1DE871BA4(void *a1@<X8>)
{
  *a1 = 100;
}

void sub_1DE871BB0(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE871BBC()
{
  return 2;
}

void sub_1DE871BC4(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE871BD0(void *a1@<X8>)
{
  *a1 = 5;
}

void sub_1DE871BDC(void *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE871BEC@<X0>(void *a1@<X8>)
{
  unsigned int v3 = (const void *)(v1 + 432);
  memcpy(v5, v3, 0x1AAuLL);
  memcpy(a1, v3, 0x1AAuLL);
  return sub_1DE89F52C((uint64_t)v5);
}

void *sub_1DE871C48(const void *a1)
{
  unsigned int v3 = (void *)(v1 + 432);
  memcpy(v5, v3, 0x1AAuLL);
  sub_1DE89F578((uint64_t)v5);
  return memcpy(v3, a1, 0x1AAuLL);
}

uint64_t (*sub_1DE871CA4())()
{
  return nullsub_92;
}

double sub_1DE871CC8()
{
  return 0.5;
}

void sub_1DE871CD0(void *a1@<X8>)
{
  *a1 = 0x3FE0000000000000;
}

double sub_1DE871CDC()
{
  return *(double *)(v0 + 864);
}

uint64_t sub_1DE871CE4(double a1)
{
  return sub_1DE8562E4(a1);
}

uint64_t (*sub_1DE871D08(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 864);
  return sub_1DE871D34;
}

uint64_t sub_1DE871D34(double *a1)
{
  return sub_1DE8562E4(*a1);
}

void sub_1DE871D60(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1DE871D68(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1DE871D70(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 872);
}

unsigned char *sub_1DE871D7C(unsigned char *result)
{
  *(unsigned char *)(v1 + 872) = *result;
  return result;
}

unsigned char *(*sub_1DE871D88(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 872);
  return sub_1DE871DB4;
}

unsigned char *sub_1DE871DB4(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 872) = result[8];
  return result;
}

uint64_t sub_1DE871DC4()
{
  return 2;
}

void sub_1DE871DCC(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE871DD8()
{
  return 2;
}

void sub_1DE871DE0(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE871DEC()
{
  return 2;
}

void sub_1DE871DF4(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE871E00()
{
  return 2;
}

void sub_1DE871E08(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE871E14()
{
  return 5;
}

void sub_1DE871E1C(void *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DE871E28()
{
  return 3;
}

void sub_1DE871E30(void *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE871E48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE871E50(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 880) = a1;
  return result;
}

uint64_t (*sub_1DE871E7C())()
{
  return nullsub_93;
}

uint64_t sub_1DE871EA0()
{
  return 0;
}

void sub_1DE871EA8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE871EB0()
{
  return *(unsigned __int8 *)(v0 + 888);
}

uint64_t sub_1DE871EB8(uint64_t result)
{
  *(unsigned char *)(v1 + 888) = result;
  return result;
}

unsigned char *(*sub_1DE871EC0(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 888);
  return sub_1DE871EEC;
}

unsigned char *sub_1DE871EEC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 888) = result[8];
  return result;
}

uint64_t sub_1DE871EFC()
{
  return 10;
}

void sub_1DE871F04(void *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DE871F10()
{
  return *(void *)(v0 + 896);
}

uint64_t sub_1DE871F18(uint64_t a1)
{
  return sub_1DE856300(a1);
}

uint64_t (*sub_1DE871F3C(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 896);
  a1[1] = v1;
  return sub_1DE871F64;
}

uint64_t sub_1DE871F64(uint64_t *a1)
{
  return sub_1DE856300(*a1);
}

uint64_t sub_1DE871F8C()
{
  return 0;
}

void sub_1DE871F94(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE871F9C()
{
  return *(unsigned __int8 *)(v0 + 904);
}

uint64_t sub_1DE871FA4(uint64_t result)
{
  *(unsigned char *)(v1 + 904) = result;
  return result;
}

unsigned char *(*sub_1DE871FAC(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 904);
  return sub_1DE871FD8;
}

unsigned char *sub_1DE871FD8(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 904) = result[8];
  return result;
}

uint64_t sub_1DE871FE8()
{
  return 0;
}

void sub_1DE871FF0(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE871FF8()
{
  return *(unsigned __int8 *)(v0 + 905);
}

uint64_t sub_1DE872000(uint64_t result)
{
  *(unsigned char *)(v1 + 905) = result;
  return result;
}

unsigned char *(*sub_1DE872008(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 905);
  return sub_1DE872034;
}

unsigned char *sub_1DE872034(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 905) = result[8];
  return result;
}

double sub_1DE872044()
{
  return 1.0;
}

void sub_1DE87204C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE872058(double a1)
{
  return sub_1DE8564CC(a1);
}

uint64_t (*sub_1DE87207C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 912);
  return sub_1DE8720A8;
}

uint64_t sub_1DE8720A8(double *a1)
{
  return sub_1DE8564CC(*a1);
}

double sub_1DE8720D4()
{
  return 1.0;
}

void sub_1DE8720DC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE8720E8(double a1)
{
  return sub_1DE8564E8(a1);
}

uint64_t (*sub_1DE87210C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 920);
  return sub_1DE872138;
}

uint64_t sub_1DE872138(double *a1)
{
  return sub_1DE8564E8(*a1);
}

uint64_t sub_1DE872164()
{
  return 1000;
}

void sub_1DE87216C(void *a1@<X8>)
{
  *a1 = 1000;
}

uint64_t sub_1DE872178()
{
  return *(void *)(v0 + 928);
}

uint64_t sub_1DE872180(uint64_t a1)
{
  return sub_1DE856504(a1);
}

uint64_t (*sub_1DE8721A4(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 928);
  a1[1] = v1;
  return sub_1DE8721CC;
}

uint64_t sub_1DE8721CC(uint64_t *a1)
{
  return sub_1DE856504(*a1);
}

double sub_1DE8721F4()
{
  return 0.0;
}

void sub_1DE8721FC(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE872204()
{
  return *(double *)(v0 + 936);
}

uint64_t sub_1DE87220C(double a1)
{
  return sub_1DE8566C0(a1);
}

uint64_t (*sub_1DE872230(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 936);
  return sub_1DE87225C;
}

uint64_t sub_1DE87225C(double *a1)
{
  return sub_1DE8566C0(*a1);
}

double sub_1DE872288()
{
  return 0.0;
}

void sub_1DE872290(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE872298()
{
  return *(double *)(v0 + 944);
}

uint64_t sub_1DE8722A0(double a1)
{
  return sub_1DE8566DC(a1);
}

uint64_t (*sub_1DE8722C4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 944);
  return sub_1DE8722F0;
}

uint64_t sub_1DE8722F0(double *a1)
{
  return sub_1DE8566DC(*a1);
}

uint64_t sub_1DE87231C()
{
  return 2;
}

void sub_1DE872324(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE872330()
{
  return 2;
}

void sub_1DE872338(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE872344()
{
  return 2;
}

void sub_1DE87234C(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE872358()
{
  return 2;
}

void sub_1DE872360(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE87236C()
{
  return 30;
}

void sub_1DE872374(void *a1@<X8>)
{
  *a1 = 30;
}

uint64_t sub_1DE872380()
{
  return 1;
}

void sub_1DE872388(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t _s10XavierNews7ClassicV13ConfigurationV010ClusteringD0V012DefaultTopicE28KnobsPaidBundleArticleQuotasV12defaultValueAG0L0VvgZ_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBEA8170 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&xmmword_1EBEA8130 + 1);
  long long v3 = xmmword_1EBEA8160;
  *(void *)a1 = xmmword_1EBEA8130;
  *(void *)(a1 + 8) = v2;
  long long v4 = xmmword_1EBEA8150;
  *(_OWORD *)(a1 + 16) = xmmword_1EBEA8140;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void _s10XavierNews7ClassicV13ConfigurationV010ClusteringD0V012DefaultTopice5KnobsG9DiversityV12defaultValueAG0gI0VvgZ_0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
  a1[1] = 1;
  a1[2] = MEMORY[0x1E4FBC870];
}

uint64_t Classic.Configuration.ClusteringConfiguration.moreForYouClusteringKnobs.getter@<X0>(void *a1@<X8>)
{
  long long v3 = (const void *)(v1 + 952);
  memcpy(v5, v3, 0x1AAuLL);
  memcpy(a1, v3, 0x1AAuLL);
  return sub_1DE89F52C((uint64_t)v5);
}

void *Classic.Configuration.ClusteringConfiguration.moreForYouClusteringKnobs.setter(const void *a1)
{
  long long v3 = (void *)(v1 + 952);
  memcpy(v5, v3, 0x1AAuLL);
  sub_1DE89F578((uint64_t)v5);
  return memcpy(v3, a1, 0x1AAuLL);
}

uint64_t (*Classic.Configuration.ClusteringConfiguration.moreForYouClusteringKnobs.modify())()
{
  return nullsub_94;
}

double sub_1DE872530()
{
  return 0.9;
}

void sub_1DE87253C(void *a1@<X8>)
{
  *a1 = 0x3FECCCCCCCCCCCCDLL;
}

double sub_1DE872550()
{
  return *(double *)(v0 + 1384);
}

void sub_1DE872558(double a1)
{
}

void (*sub_1DE87257C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1384);
  return sub_1DE8725A8;
}

void sub_1DE8725A8(double *a1)
{
}

double sub_1DE8725D4()
{
  return 0.3;
}

void sub_1DE8725E4(void *a1@<X8>)
{
  *a1 = 0x3FD3333333333333;
}

double sub_1DE8725F4()
{
  return *(double *)(v0 + 1392);
}

uint64_t sub_1DE8725FC(double a1)
{
  return sub_1DE8568D0(a1);
}

uint64_t (*sub_1DE872620(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1392);
  return sub_1DE87264C;
}

uint64_t sub_1DE87264C(double *a1)
{
  return sub_1DE8568D0(*a1);
}

uint64_t sub_1DE872678()
{
  return 0;
}

void sub_1DE872680(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE872688()
{
  return *(unsigned __int8 *)(v0 + 1400);
}

uint64_t sub_1DE872690(uint64_t result)
{
  *(unsigned char *)(v1 + 1400) = result;
  return result;
}

unsigned char *(*sub_1DE872698(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 1400);
  return sub_1DE8726C4;
}

unsigned char *sub_1DE8726C4(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 1400) = result[8];
  return result;
}

uint64_t sub_1DE8726D4()
{
  return 37;
}

void sub_1DE8726DC(void *a1@<X8>)
{
  *a1 = 37;
}

uint64_t sub_1DE8726E8()
{
  return *(void *)(v0 + 1408);
}

uint64_t sub_1DE8726F0(uint64_t a1)
{
  return sub_1DE8568EC(a1);
}

uint64_t (*sub_1DE872714(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 1408);
  a1[1] = v1;
  return sub_1DE87273C;
}

uint64_t sub_1DE87273C(uint64_t *a1)
{
  return sub_1DE8568EC(*a1);
}

double sub_1DE872764()
{
  return 1.2;
}

void sub_1DE872774(void *a1@<X8>)
{
  *a1 = 0x3FF3333333333333;
}

double sub_1DE872784()
{
  return *(double *)(v0 + 1416);
}

void sub_1DE87278C(double a1)
{
}

void (*sub_1DE8727B0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1416);
  return sub_1DE8727DC;
}

void sub_1DE8727DC(double *a1)
{
}

void sub_1DE872808(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE872814(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE872820(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t static Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxAIGCArticles.defaultValue.getter()
{
  return 2;
}

void sub_1DE872834(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1DE872840(void *a1@<X8>)
{
  *a1 = 30;
}

void sub_1DE87284C(void *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE87285C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBEA8170 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&xmmword_1EBEA8130 + 1);
  long long v3 = xmmword_1EBEA8160;
  *(void *)a1 = xmmword_1EBEA8130;
  *(void *)(a1 + 8) = v2;
  long long v4 = xmmword_1EBEA8150;
  *(_OWORD *)(a1 + 16) = xmmword_1EBEA8140;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8728F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DE86A428(0x3FF0000000000000, 0, 1, 0, MEMORY[0x1E4FBC870], a1);
}

uint64_t sub_1DE872910@<X0>(void *a1@<X8>)
{
  long long v3 = (const void *)(v1 + 1424);
  memcpy(v5, v3, 0x1AAuLL);
  memcpy(a1, v3, 0x1AAuLL);
  return sub_1DE89F52C((uint64_t)v5);
}

void *sub_1DE87296C(const void *a1)
{
  long long v3 = (void *)(v1 + 1424);
  memcpy(v5, v3, 0x1AAuLL);
  sub_1DE89F578((uint64_t)v5);
  return memcpy(v3, a1, 0x1AAuLL);
}

uint64_t (*sub_1DE8729C8())()
{
  return nullsub_95;
}

double sub_1DE8729EC()
{
  return 1.5;
}

void sub_1DE8729F4(void *a1@<X8>)
{
  *a1 = 0x3FF8000000000000;
}

double sub_1DE872A00()
{
  return *(double *)(v0 + 1856);
}

void sub_1DE872A08(double a1)
{
}

void (*sub_1DE872A2C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1856);
  return sub_1DE872A58;
}

void sub_1DE872A58(double *a1)
{
}

double sub_1DE872A84()
{
  return 1.0;
}

void sub_1DE872A8C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE872A98()
{
  return *(double *)(v0 + 1864);
}

uint64_t sub_1DE872AA0(double a1)
{
  return sub_1DE856E40(a1);
}

uint64_t (*sub_1DE872AC4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1864);
  return sub_1DE872AF0;
}

uint64_t sub_1DE872AF0(double *a1)
{
  return sub_1DE856E40(*a1);
}

double sub_1DE872B1C()
{
  return 1.0;
}

void sub_1DE872B24(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE872B30()
{
  return *(double *)(v0 + 1872);
}

uint64_t sub_1DE872B38(double a1)
{
  return sub_1DE856E5C(a1);
}

uint64_t (*sub_1DE872B5C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1872);
  return sub_1DE872B88;
}

uint64_t sub_1DE872B88(double *a1)
{
  return sub_1DE856E5C(*a1);
}

double sub_1DE872BB4()
{
  return 0.5;
}

void sub_1DE872BBC(void *a1@<X8>)
{
  *a1 = 0x3FE0000000000000;
}

double sub_1DE872BC8()
{
  return *(double *)(v0 + 1880);
}

uint64_t sub_1DE872BD0(double a1)
{
  return sub_1DE856E78(a1);
}

uint64_t (*sub_1DE872BF4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1880);
  return sub_1DE872C20;
}

uint64_t sub_1DE872C20(double *a1)
{
  return sub_1DE856E78(*a1);
}

double sub_1DE872C4C()
{
  return 1.0;
}

void sub_1DE872C54(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE872C60()
{
  return *(double *)(v0 + 1888);
}

uint64_t sub_1DE872C68(double a1)
{
  return sub_1DE856E94(a1);
}

uint64_t (*sub_1DE872C8C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 1888);
  return sub_1DE872CB8;
}

uint64_t sub_1DE872CB8(double *a1)
{
  return sub_1DE856E94(*a1);
}

unint64_t sub_1DE872CE8(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
    case 9:
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000025;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000027;
      break;
    case 8:
      unint64_t result = 0xD000000000000025;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000025;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 14:
      unint64_t result = 0xD000000000000019;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 19:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 20:
      unint64_t result = 0xD000000000000014;
      break;
    case 21:
      unint64_t result = 0xD000000000000018;
      break;
    case 22:
      unint64_t result = 0xD000000000000018;
      break;
    case 23:
      unint64_t result = 0xD000000000000018;
      break;
    case 24:
      unint64_t result = 0xD000000000000010;
      break;
    case 25:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE872F30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE872F48()
{
  return sub_1DE8E1BB0();
}

unint64_t sub_1DE872F78()
{
  return sub_1DE872CE8(*v0);
}

uint64_t sub_1DE872F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89ABC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE872FA8()
{
  return 0;
}

void sub_1DE872FB4(unsigned char *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_1DE872FC0(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B82C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE872FFC(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B82C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE873038(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8C98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  double v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(v3 + 864);
  LODWORD(v46) = *(unsigned __int8 *)(v3 + 872);
  uint64_t v45 = *(void *)(v3 + 880);
  int v50 = *(unsigned __int8 *)(v3 + 888);
  uint64_t v43 = *(void *)(v3 + 896);
  int v10 = *(unsigned __int8 *)(v3 + 904);
  int v41 = *(unsigned __int8 *)(v3 + 905);
  int v42 = v10;
  uint64_t v11 = *(void *)(v3 + 912);
  uint64_t v39 = *(void *)(v3 + 920);
  uint64_t v40 = v11;
  uint64_t v38 = *(void *)(v3 + 928);
  uint64_t v12 = *(void *)(v3 + 936);
  uint64_t v36 = *(void *)(v3 + 944);
  uint64_t v37 = v12;
  memcpy(v48, (const void *)(v3 + 952), sizeof(v48));
  uint64_t v13 = *(void *)(v3 + 1384);
  uint64_t v14 = *(void *)(v3 + 1392);
  int v34 = *(unsigned __int8 *)(v3 + 1400);
  uint64_t v35 = *(void *)(v3 + 1408);
  uint64_t v15 = *(void *)(v3 + 1416);
  memcpy(v49, (const void *)(v3 + 1424), sizeof(v49));
  uint64_t v16 = *(void *)(v3 + 1856);
  uint64_t v17 = *(void *)(v3 + 1864);
  uint64_t v18 = *(void *)(v3 + 1872);
  uint64_t v19 = *(void *)(v3 + 1880);
  uint64_t v20 = *(void *)(v3 + 1888);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B82C();
  uint64_t v21 = v5;
  sub_1DE8E1C10();
  memcpy(v47, (const void *)v3, 0x1AAuLL);
  char v51 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9AA8);
  sub_1DE88CB54(&qword_1EBEA9AA0, &qword_1EBEA9AA8);
  sub_1DE8E1A40();
  if (!v2)
  {
    char v22 = v46;
    uint64_t v23 = v45;
    uint64_t v32 = v14;
    uint64_t v33 = v13;
    uint64_t v26 = v15;
    uint64_t v27 = v16;
    uint64_t v28 = v17;
    uint64_t v29 = v18;
    uint64_t v30 = v19;
    uint64_t v31 = v20;
    memcpy(v47, (const void *)(v3 + 432), 0x1AAuLL);
    char v51 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A88);
    sub_1DE88CB54(&qword_1EBEA9A80, &qword_1EBEA9A88);
    sub_1DE8E1A40();
    v47[0] = v44;
    char v51 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AA8);
    sub_1DE88CB54(&qword_1EBEA8AA0, &qword_1EBEA8AA8);
    sub_1DE8E1A40();
    LOBYTE(v47[0]) = v22;
    char v51 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A48);
    sub_1DE88CB54(&qword_1EBEA8A40, &qword_1EBEA8A48);
    sub_1DE8E1A40();
    v47[0] = v23;
    char v51 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9AD8);
    sub_1DE88B880();
    sub_1DE8E1A40();
    uint64_t v46 = v6;
    LOBYTE(v47[0]) = v50;
    char v51 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A68);
    sub_1DE88CB54(&qword_1EBEA8A60, &qword_1EBEA8A68);
    sub_1DE8E1A40();
    v47[0] = v43;
    char v51 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B78);
    sub_1DE88CB54(&qword_1EBEA8B70, &qword_1EBEA8B78);
    sub_1DE8E1A40();
    LOBYTE(v47[0]) = v42;
    char v51 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A88);
    sub_1DE88CB54(&qword_1EBEA8A80, &qword_1EBEA8A88);
    sub_1DE8E1A40();
    LOBYTE(v47[0]) = v41;
    char v51 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A78);
    sub_1DE88CB54(&qword_1EBEA8A70, &qword_1EBEA8A78);
    sub_1DE8E1A40();
    v47[0] = v40;
    char v51 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AD8);
    sub_1DE88CB54(&qword_1EBEA8AD0, &qword_1EBEA8AD8);
    sub_1DE8E1A40();
    v47[0] = v39;
    char v51 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B58);
    sub_1DE88CB54(&qword_1EBEA8B50, &qword_1EBEA8B58);
    uint64_t v46 = v21;
    sub_1DE8E1A40();
    v47[0] = v38;
    char v51 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B88);
    sub_1DE88CB54(&qword_1EBEA8B80, &qword_1EBEA8B88);
    sub_1DE8E1A40();
    v47[0] = v37;
    char v51 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AC8);
    sub_1DE88CB54(&qword_1EBEA8AC0, &qword_1EBEA8AC8);
    sub_1DE8E1A40();
    v47[0] = v36;
    char v51 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AB8);
    sub_1DE88CB54(&qword_1EBEA8AB0, &qword_1EBEA8AB8);
    sub_1DE8E1A40();
    memcpy(v47, v48, 0x1AAuLL);
    char v51 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A98);
    sub_1DE88CB54(&qword_1EBEA9A90, &qword_1EBEA9A98);
    sub_1DE8E1A40();
    v47[0] = v33;
    char v51 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AE8);
    sub_1DE88CB54(&qword_1EBEA8AE0, &qword_1EBEA8AE8);
    sub_1DE8E1A40();
    v47[0] = v32;
    char v51 = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AF8);
    sub_1DE88CB54(&qword_1EBEA8AF0, &qword_1EBEA8AF8);
    sub_1DE8E1A40();
    LOBYTE(v47[0]) = v34;
    char v51 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A58);
    sub_1DE88CB54(&qword_1EBEA8A50, &qword_1EBEA8A58);
    sub_1DE8E1A40();
    v47[0] = v35;
    char v51 = 18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B48);
    sub_1DE88CB54(&qword_1EBEA8B40, &qword_1EBEA8B48);
    sub_1DE8E1A40();
    v47[0] = v26;
    char v51 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B68);
    sub_1DE88CB54(&qword_1EBEA8B60, &qword_1EBEA8B68);
    sub_1DE8E1A40();
    memcpy(v47, v49, 0x1AAuLL);
    char v51 = 20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A60);
    sub_1DE88CB54(&qword_1EBEA9A58, &qword_1EBEA9A60);
    sub_1DE8E1A40();
    v47[0] = v27;
    char v51 = 21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B08);
    sub_1DE88CB54(&qword_1EBEA8B00, &qword_1EBEA8B08);
    sub_1DE8E1A40();
    v47[0] = v28;
    char v51 = 22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B18);
    sub_1DE88CB54(&qword_1EBEA8B10, &qword_1EBEA8B18);
    sub_1DE8E1A40();
    v47[0] = v29;
    char v51 = 23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B28);
    sub_1DE88CB54(&qword_1EBEA8B20, &qword_1EBEA8B28);
    sub_1DE8E1A40();
    v47[0] = v30;
    char v51 = 24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A98);
    sub_1DE88CB54(&qword_1EBEA8A90, &qword_1EBEA8A98);
    sub_1DE8E1A40();
    v47[0] = v31;
    char v51 = 25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B38);
    sub_1DE88CB54(&qword_1EBEA8B30, &qword_1EBEA8B38);
    uint64_t v5 = v46;
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DE873DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)MEMORY[0x1F4188790](a1, a2);
  uint64_t v5 = v4;
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C220);
  uint64_t v6 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95, v7);
  double v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1DE88B82C();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  uint64_t v37 = v5;
  uint64_t v38 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9AA8);
  v81[431] = 0;
  sub_1DE88CB54(&qword_1EAC0C228, &qword_1EBEA9AA8);
  sub_1DE8E1930();
  memcpy(v81, v82, 0x1AAuLL);
  memcpy(v94, v82, 0x1AAuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A88);
  v79[431] = 1;
  sub_1DE89F52C((uint64_t)v81);
  sub_1DE88CB54(&qword_1EAC0C230, &qword_1EBEA9A88);
  sub_1DE8E1930();
  memcpy(v79, v80, 0x1AAuLL);
  memcpy(&v94[432], v80, 0x1AAuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AA8);
  LOBYTE(v39[0]) = 2;
  sub_1DE89F52C((uint64_t)v79);
  sub_1DE88CB54(&qword_1EAC0C238, &qword_1EBEA8AA8);
  sub_1DE8E1930();
  uint64_t v10 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A48);
  LOBYTE(v39[0]) = 3;
  sub_1DE88CB54(&qword_1EAC0C240, &qword_1EBEA8A48);
  sub_1DE8E1930();
  int v11 = LOBYTE(v40[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9AD8);
  LOBYTE(v39[0]) = 4;
  sub_1DE88B920();
  sub_1DE8E1930();
  int v35 = v11;
  uint64_t v36 = &v94[432];
  uint64_t v12 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A68);
  LOBYTE(v39[0]) = 5;
  sub_1DE88CB54(&qword_1EAC0C258, &qword_1EBEA8A68);
  swift_bridgeObjectRetain();
  sub_1DE8E1930();
  int v34 = LOBYTE(v40[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B78);
  LOBYTE(v39[0]) = 6;
  sub_1DE88CB54(&qword_1EAC0C260, &qword_1EBEA8B78);
  sub_1DE8E1930();
  uint64_t v33 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A88);
  LOBYTE(v39[0]) = 7;
  sub_1DE88CB54(&qword_1EAC0C268, &qword_1EBEA8A88);
  sub_1DE8E1930();
  int v32 = LOBYTE(v40[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A78);
  LOBYTE(v39[0]) = 8;
  sub_1DE88CB54(&qword_1EAC0C270, &qword_1EBEA8A78);
  sub_1DE8E1930();
  char v13 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AD8);
  LOBYTE(v39[0]) = 9;
  sub_1DE88CB54(&qword_1EAC0C278, &qword_1EBEA8AD8);
  sub_1DE8E1930();
  uint64_t v14 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B58);
  LOBYTE(v39[0]) = 10;
  sub_1DE88CB54(&qword_1EAC0C280, &qword_1EBEA8B58);
  sub_1DE8E1930();
  uint64_t v15 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B88);
  LOBYTE(v39[0]) = 11;
  sub_1DE88CB54(&qword_1EAC0C288, &qword_1EBEA8B88);
  sub_1DE8E1930();
  uint64_t v16 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AC8);
  LOBYTE(v39[0]) = 12;
  sub_1DE88CB54(&qword_1EAC0C290, &qword_1EBEA8AC8);
  sub_1DE8E1930();
  uint64_t v17 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AB8);
  LOBYTE(v39[0]) = 13;
  sub_1DE88CB54(&qword_1EAC0C298, &qword_1EBEA8AB8);
  sub_1DE8E1930();
  uint64_t v18 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A98);
  v77[431] = 14;
  sub_1DE88CB54(&qword_1EAC0C2A0, &qword_1EBEA9A98);
  sub_1DE8E1930();
  memcpy(v77, v78, 0x1AAuLL);
  memcpy(v89, v78, sizeof(v89));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AE8);
  LOBYTE(v39[0]) = 15;
  sub_1DE89F52C((uint64_t)v77);
  sub_1DE88CB54(&qword_1EAC0C2A8, &qword_1EBEA8AE8);
  sub_1DE8E1930();
  uint64_t v19 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8AF8);
  LOBYTE(v39[0]) = 16;
  sub_1DE88CB54(&qword_1EAC0C2B0, &qword_1EBEA8AF8);
  sub_1DE8E1930();
  uint64_t v20 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A58);
  LOBYTE(v39[0]) = 17;
  sub_1DE88CB54(&qword_1EAC0C2B8, &qword_1EBEA8A58);
  sub_1DE8E1930();
  int v31 = LOBYTE(v40[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B48);
  LOBYTE(v39[0]) = 18;
  sub_1DE88CB54(&qword_1EAC0C2C0, &qword_1EBEA8B48);
  sub_1DE8E1930();
  uint64_t v30 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B68);
  LOBYTE(v39[0]) = 19;
  sub_1DE88CB54(&qword_1EAC0C2C8, &qword_1EBEA8B68);
  sub_1DE8E1930();
  uint64_t v21 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A60);
  v75[431] = 20;
  sub_1DE88CB54(&qword_1EAC0C2D0, &qword_1EBEA9A60);
  sub_1DE8E1930();
  memcpy(v75, v76, 0x1AAuLL);
  memcpy(v85, v76, sizeof(v85));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B08);
  LOBYTE(v39[0]) = 21;
  sub_1DE89F52C((uint64_t)v75);
  sub_1DE88CB54(&qword_1EAC0C2D8, &qword_1EBEA8B08);
  sub_1DE8E1930();
  uint64_t v29 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B18);
  LOBYTE(v39[0]) = 22;
  sub_1DE88CB54(&qword_1EAC0C2E0, &qword_1EBEA8B18);
  sub_1DE8E1930();
  uint64_t v28 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B28);
  LOBYTE(v39[0]) = 23;
  sub_1DE88CB54(&qword_1EAC0C2E8, &qword_1EBEA8B28);
  sub_1DE8E1930();
  uint64_t v27 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8A98);
  LOBYTE(v39[0]) = 24;
  sub_1DE88CB54(&qword_1EAC0C2F0, &qword_1EBEA8A98);
  sub_1DE8E1930();
  uint64_t v26 = v40[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA8B38);
  char v73 = 25;
  sub_1DE88CB54(&qword_1EAC0C2F8, &qword_1EBEA8B38);
  sub_1DE8E1930();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v95);
  uint64_t v95 = v74;
  memcpy(v39, v81, 0x1AAuLL);
  memcpy(&v39[54], v79, 0x1AAuLL);
  v39[108] = v10;
  char v22 = v34;
  char v23 = v35;
  LOBYTE(v39[109]) = v35;
  v39[110] = v12;
  LOBYTE(v39[111]) = v34;
  v39[112] = v33;
  LOBYTE(v39[113]) = v32;
  BYTE1(v39[113]) = v13;
  v39[114] = v14;
  v39[115] = v15;
  v39[116] = v16;
  v39[117] = v17;
  v39[118] = v18;
  memcpy(&v39[119], v77, 0x1AAuLL);
  v39[173] = v19;
  v39[174] = v20;
  LOBYTE(v39[175]) = v31;
  v39[176] = v30;
  v39[177] = v21;
  memcpy(&v39[178], v75, 0x1AAuLL);
  v39[232] = v29;
  v39[233] = v28;
  v39[234] = v27;
  v39[235] = v26;
  v39[236] = v74;
  sub_1DE84E628((uint64_t)v39);
  sub_1DE89F578((uint64_t)v75);
  sub_1DE89F578((uint64_t)v77);
  swift_bridgeObjectRelease();
  sub_1DE89F578((uint64_t)v79);
  sub_1DE89F578((uint64_t)v81);
  memcpy(v37, v39, 0x768uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  memcpy(v40, v94, 0x360uLL);
  v40[108] = v10;
  char v41 = v23;
  *(_DWORD *)int v42 = *(_DWORD *)v93;
  *(_DWORD *)&v42[3] = *(_DWORD *)&v93[3];
  uint64_t v43 = v12;
  char v44 = v22;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v92;
  *(_DWORD *)&v45[3] = *(_DWORD *)&v92[3];
  uint64_t v46 = v33;
  char v47 = v32;
  char v48 = v13;
  int v49 = v90;
  __int16 v50 = v91;
  uint64_t v51 = v14;
  uint64_t v52 = v15;
  uint64_t v53 = v16;
  uint64_t v54 = v17;
  uint64_t v55 = v18;
  memcpy(v56, v89, sizeof(v56));
  int v57 = v87;
  __int16 v58 = v88;
  uint64_t v59 = v19;
  uint64_t v60 = v20;
  char v61 = v31;
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v86;
  *(_DWORD *)&v62[3] = *(_DWORD *)&v86[3];
  uint64_t v63 = v30;
  uint64_t v64 = v21;
  memcpy(v65, v85, sizeof(v65));
  int v66 = v83;
  __int16 v67 = v84;
  uint64_t v68 = v29;
  uint64_t v69 = v28;
  uint64_t v70 = v27;
  uint64_t v71 = v26;
  uint64_t v72 = v95;
  return sub_1DE850D3C((uint64_t)v40);
}

uint64_t sub_1DE87517C(uint64_t a1, uint64_t a2)
{
  return sub_1DE873DE0(a1, a2);
}

uint64_t sub_1DE875194(void *a1)
{
  return sub_1DE873038(a1);
}

double sub_1DE8751B0()
{
  return 1.0;
}

void sub_1DE8751B8(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8751C4()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE8751D0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE8751FC;
}

uint64_t sub_1DE8751FC(double *a1)
{
  return sub_1DE859328(*a1);
}

double sub_1DE875224()
{
  return 0.0;
}

void sub_1DE87522C(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE875234()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1DE87523C(double a1)
{
  return sub_1DE859344(a1);
}

uint64_t (*sub_1DE875260(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE87528C;
}

uint64_t sub_1DE87528C(double *a1)
{
  return sub_1DE859344(*a1);
}

double sub_1DE8752B8()
{
  return 0.0;
}

void sub_1DE8752C0(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE8752C8()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1DE8752D0(double a1)
{
  return sub_1DE859360(a1);
}

uint64_t (*sub_1DE8752F4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE875320;
}

uint64_t sub_1DE875320(double *a1)
{
  return sub_1DE859360(*a1);
}

double sub_1DE87534C()
{
  return 1.0;
}

void sub_1DE875354(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875360()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1DE875368(double a1)
{
  return sub_1DE85937C(a1);
}

uint64_t (*sub_1DE87538C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 24);
  return sub_1DE8753B8;
}

uint64_t sub_1DE8753B8(double *a1)
{
  return sub_1DE85937C(*a1);
}

double sub_1DE8753E4@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.04;
  *a1 = xmmword_1DE8E7820;
  a1[1] = xmmword_1DE8E7830;
  return result;
}

double sub_1DE8753FC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.04;
  *a1 = xmmword_1DE8E7820;
  a1[1] = xmmword_1DE8E7830;
  return result;
}

__n128 sub_1DE875414@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1DE875420(double *a1)
{
}

void (*sub_1DE87544C(void *a1))(double **a1, uint64_t a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 32);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE8754A0;
}

void sub_1DE8754A0(double **a1, uint64_t a2)
{
}

double sub_1DE8754B8()
{
  return 1.0;
}

void sub_1DE8754C0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8754CC()
{
  return *(double *)(v0 + 64);
}

uint64_t sub_1DE8754D4(double a1)
{
  return sub_1DE8595DC(a1);
}

uint64_t (*sub_1DE8754F8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 64);
  return sub_1DE875524;
}

uint64_t sub_1DE875524(double *a1)
{
  return sub_1DE8595DC(*a1);
}

double sub_1DE875550()
{
  return 1.0;
}

void sub_1DE875558(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875564()
{
  return *(double *)(v0 + 72);
}

uint64_t sub_1DE87556C(double a1)
{
  return sub_1DE8595F8(a1);
}

uint64_t (*sub_1DE875590(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 72);
  return sub_1DE8755BC;
}

uint64_t sub_1DE8755BC(double *a1)
{
  return sub_1DE8595F8(*a1);
}

double sub_1DE8755E8()
{
  return 1.0;
}

void sub_1DE8755F0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8755FC()
{
  return *(double *)(v0 + 80);
}

uint64_t sub_1DE875604(double a1)
{
  return sub_1DE859614(a1);
}

uint64_t (*sub_1DE875628(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 80);
  return sub_1DE875654;
}

uint64_t sub_1DE875654(double *a1)
{
  return sub_1DE859614(*a1);
}

double sub_1DE875680()
{
  return 1.0;
}

void sub_1DE875688(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE875694(double a1)
{
  return sub_1DE859630(a1);
}

uint64_t (*sub_1DE8756B8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 88);
  return sub_1DE8756E4;
}

uint64_t sub_1DE8756E4(double *a1)
{
  return sub_1DE859630(*a1);
}

uint64_t sub_1DE875710()
{
  return 0;
}

void sub_1DE875718(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE875720(uint64_t result)
{
  *(unsigned char *)(v1 + 96) = result;
  return result;
}

unsigned char *(*sub_1DE875728(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 96);
  return sub_1DE875754;
}

unsigned char *sub_1DE875754(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 96) = result[8];
  return result;
}

double sub_1DE875764()
{
  return 1.0;
}

void sub_1DE87576C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE875778(double a1)
{
  return sub_1DE85964C(a1);
}

uint64_t (*sub_1DE87579C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 104);
  return sub_1DE8757C8;
}

uint64_t sub_1DE8757C8(double *a1)
{
  return sub_1DE85964C(*a1);
}

double sub_1DE8757F4()
{
  return 1.0;
}

void sub_1DE8757FC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE875808(double a1)
{
  return sub_1DE859668(a1);
}

uint64_t (*sub_1DE87582C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 112);
  return sub_1DE875858;
}

uint64_t sub_1DE875858(double *a1)
{
  return sub_1DE859668(*a1);
}

double sub_1DE875884()
{
  return 1.0;
}

void sub_1DE87588C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE875898(double a1)
{
  return sub_1DE859684(a1);
}

uint64_t (*sub_1DE8758BC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 120);
  return sub_1DE8758E8;
}

uint64_t sub_1DE8758E8(double *a1)
{
  return sub_1DE859684(*a1);
}

double sub_1DE875914()
{
  return 1.0;
}

void sub_1DE87591C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE875928(double a1)
{
  return sub_1DE8596A0(a1);
}

uint64_t (*sub_1DE87594C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 128);
  return sub_1DE875978;
}

uint64_t sub_1DE875978(double *a1)
{
  return sub_1DE8596A0(*a1);
}

double sub_1DE8759A4()
{
  return 1.0;
}

void sub_1DE8759AC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE8759B8(double a1)
{
  return sub_1DE8596BC(a1);
}

uint64_t (*sub_1DE8759DC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 136);
  return sub_1DE875A08;
}

uint64_t sub_1DE875A08(double *a1)
{
  return sub_1DE8596BC(*a1);
}

double sub_1DE875A34()
{
  return 1.0;
}

void sub_1DE875A3C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE875A48(double a1)
{
  return sub_1DE8596D8(a1);
}

uint64_t (*sub_1DE875A6C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 144);
  return sub_1DE875A98;
}

uint64_t sub_1DE875A98(double *a1)
{
  return sub_1DE8596D8(*a1);
}

uint64_t sub_1DE875AC4()
{
  return 1;
}

void sub_1DE875ACC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE875AD8()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_1DE875AE0(uint64_t result)
{
  *(unsigned char *)(v1 + 152) = result;
  return result;
}

unsigned char *(*sub_1DE875AE8(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 152);
  return sub_1DE875B14;
}

unsigned char *sub_1DE875B14(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 152) = result[8];
  return result;
}

double sub_1DE875B24@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 176);
  double result = *(double *)(v1 + 200);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(void *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 184);
  *(double *)(a1 + 40) = result;
  return result;
}

__n128 sub_1DE875B48@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 216);
  uint64_t v3 = *(void *)(v1 + 224);
  char v4 = *(unsigned char *)(v1 + 232);
  char v5 = *(unsigned char *)(v1 + 304);
  char v6 = *(unsigned char *)(v1 + 305);
  char v7 = *(unsigned char *)(v1 + 306);
  *(void *)a1 = *(void *)(v1 + 208);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  long long v8 = *(_OWORD *)(v1 + 256);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 240);
  *(_OWORD *)(a1 + 48) = v8;
  __n128 result = *(__n128 *)(v1 + 272);
  long long v10 = *(_OWORD *)(v1 + 288);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 97) = v6;
  *(unsigned char *)(a1 + 98) = v7;
  return result;
}

double sub_1DE875B98()
{
  return 1.0;
}

void sub_1DE875BA0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875BAC()
{
  return *(double *)(v0 + 312);
}

uint64_t sub_1DE875BB4(double a1)
{
  return sub_1DE8596F4(a1);
}

uint64_t (*sub_1DE875BD8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 312);
  return sub_1DE875C04;
}

uint64_t sub_1DE875C04(double *a1)
{
  return sub_1DE8596F4(*a1);
}

double sub_1DE875C30()
{
  return 1.0;
}

void sub_1DE875C38(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875C44()
{
  return *(double *)(v0 + 320);
}

uint64_t sub_1DE875C4C(double a1)
{
  return sub_1DE859710(a1);
}

uint64_t (*sub_1DE875C70(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 320);
  return sub_1DE875C9C;
}

uint64_t sub_1DE875C9C(double *a1)
{
  return sub_1DE859710(*a1);
}

__n128 sub_1DE875CC8@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 344);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 328);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 360);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

double sub_1DE875CE0()
{
  return 1.0;
}

void sub_1DE875CE8(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875CF4()
{
  return *(double *)(v0 + 376);
}

uint64_t sub_1DE875CFC(double a1)
{
  return sub_1DE85972C(a1);
}

uint64_t (*sub_1DE875D20(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 376);
  return sub_1DE875D4C;
}

uint64_t sub_1DE875D4C(double *a1)
{
  return sub_1DE85972C(*a1);
}

double sub_1DE875D78()
{
  return 1.0;
}

void sub_1DE875D80(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875D8C()
{
  return *(double *)(v0 + 384);
}

uint64_t sub_1DE875D94(double a1)
{
  return sub_1DE859748(a1);
}

uint64_t (*sub_1DE875DB8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 384);
  return sub_1DE875DE4;
}

uint64_t sub_1DE875DE4(double *a1)
{
  return sub_1DE859748(*a1);
}

double sub_1DE875E10()
{
  return 1.0;
}

void sub_1DE875E18(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875E24()
{
  return *(double *)(v0 + 392);
}

uint64_t sub_1DE875E2C(double a1)
{
  return sub_1DE859764(a1);
}

uint64_t (*sub_1DE875E50(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 392);
  return sub_1DE875E7C;
}

uint64_t sub_1DE875E7C(double *a1)
{
  return sub_1DE859764(*a1);
}

uint64_t sub_1DE875EA8()
{
  return 1;
}

void sub_1DE875EB0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE875EBC()
{
  return *(unsigned __int8 *)(v0 + 400);
}

uint64_t sub_1DE875EC4(uint64_t result)
{
  *(unsigned char *)(v1 + 400) = result;
  return result;
}

unsigned char *(*sub_1DE875ECC(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 400);
  return sub_1DE875EF8;
}

unsigned char *sub_1DE875EF8(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 400) = result[8];
  return result;
}

double sub_1DE875F08()
{
  return 1.0;
}

void sub_1DE875F10(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE875F1C()
{
  return *(double *)(v0 + 408);
}

uint64_t sub_1DE875F24(double a1)
{
  return sub_1DE859780(a1);
}

uint64_t (*sub_1DE875F48(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 408);
  return sub_1DE875F74;
}

uint64_t sub_1DE875F74(double *a1)
{
  return sub_1DE859780(*a1);
}

__n128 sub_1DE875FA0@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 560);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 544);
  *(_OWORD *)(a1 + 144) = v2;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(v1 + 576);
  *(void *)(a1 + 176) = *(void *)(v1 + 592);
  long long v3 = *(_OWORD *)(v1 + 496);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 480);
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = *(_OWORD *)(v1 + 528);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 512);
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = *(_OWORD *)(v1 + 432);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 448);
  long long v7 = *(_OWORD *)(v1 + 464);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

__n128 sub_1DE875FDC@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 616);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 600);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 632);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 sub_1DE875FF4@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 648);
  long long v3 = *(_OWORD *)(v1 + 664);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

double sub_1DE876004()
{
  return 0.0;
}

void sub_1DE87600C(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE876014()
{
  return *(double *)(v0 + 680);
}

uint64_t sub_1DE87601C(double a1)
{
  return sub_1DE85979C(a1);
}

uint64_t (*sub_1DE876040(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 680);
  return sub_1DE87606C;
}

uint64_t sub_1DE87606C(double *a1)
{
  return sub_1DE85979C(*a1);
}

double sub_1DE876098()
{
  return 1.0;
}

void sub_1DE8760A0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8760AC()
{
  return *(double *)(v0 + 688);
}

uint64_t sub_1DE8760B4(double a1)
{
  return sub_1DE859974(a1);
}

uint64_t (*sub_1DE8760D8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 688);
  return sub_1DE876104;
}

uint64_t sub_1DE876104(double *a1)
{
  return sub_1DE859974(*a1);
}

double sub_1DE876130()
{
  return 1.0;
}

void sub_1DE876138(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876144()
{
  return *(double *)(v0 + 696);
}

uint64_t sub_1DE87614C(double a1)
{
  return sub_1DE859990(a1);
}

uint64_t (*sub_1DE876170(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 696);
  return sub_1DE87619C;
}

uint64_t sub_1DE87619C(double *a1)
{
  return sub_1DE859990(*a1);
}

double sub_1DE8761C8()
{
  return 1.0;
}

void sub_1DE8761D0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8761DC()
{
  return *(double *)(v0 + 704);
}

uint64_t sub_1DE8761E4(double a1)
{
  return sub_1DE8599AC(a1);
}

uint64_t (*sub_1DE876208(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 704);
  return sub_1DE876234;
}

uint64_t sub_1DE876234(double *a1)
{
  return sub_1DE8599AC(*a1);
}

uint64_t sub_1DE876260()
{
  return 0;
}

void sub_1DE876268(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE876270()
{
  return *(unsigned __int8 *)(v0 + 712);
}

uint64_t sub_1DE876278(uint64_t result)
{
  *(unsigned char *)(v1 + 712) = result;
  return result;
}

unsigned char *(*sub_1DE876280(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 712);
  return sub_1DE8762AC;
}

unsigned char *sub_1DE8762AC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 712) = result[8];
  return result;
}

double sub_1DE8762BC()
{
  return 1.0;
}

void sub_1DE8762C4(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8762D0()
{
  return *(double *)(v0 + 720);
}

uint64_t sub_1DE8762D8(double a1)
{
  return sub_1DE8599C8(a1);
}

uint64_t (*sub_1DE8762FC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 720);
  return sub_1DE876328;
}

uint64_t sub_1DE876328(double *a1)
{
  return sub_1DE8599C8(*a1);
}

double sub_1DE876354()
{
  return 1.0;
}

void sub_1DE87635C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876368()
{
  return *(double *)(v0 + 728);
}

uint64_t sub_1DE876370(double a1)
{
  return sub_1DE8599E4(a1);
}

uint64_t (*sub_1DE876394(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 728);
  return sub_1DE8763C0;
}

uint64_t sub_1DE8763C0(double *a1)
{
  return sub_1DE8599E4(*a1);
}

double sub_1DE8763EC()
{
  return 1.0;
}

void sub_1DE8763F4(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876400()
{
  return *(double *)(v0 + 736);
}

uint64_t sub_1DE876408(double a1)
{
  return sub_1DE859A00(a1);
}

uint64_t (*sub_1DE87642C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 736);
  return sub_1DE876458;
}

uint64_t sub_1DE876458(double *a1)
{
  return sub_1DE859A00(*a1);
}

double sub_1DE876484()
{
  return 1.0;
}

void sub_1DE87648C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876498()
{
  return *(double *)(v0 + 744);
}

uint64_t sub_1DE8764A0(double a1)
{
  return sub_1DE859A1C(a1);
}

uint64_t (*sub_1DE8764C4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 744);
  return sub_1DE8764F0;
}

uint64_t sub_1DE8764F0(double *a1)
{
  return sub_1DE859A1C(*a1);
}

double sub_1DE87651C()
{
  return 1.0;
}

void sub_1DE876524(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876530()
{
  return *(double *)(v0 + 752);
}

uint64_t sub_1DE876538(double a1)
{
  return sub_1DE859A38(a1);
}

uint64_t (*sub_1DE87655C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 752);
  return sub_1DE876588;
}

uint64_t sub_1DE876588(double *a1)
{
  return sub_1DE859A38(*a1);
}

double sub_1DE8765B4()
{
  return 1.0;
}

void sub_1DE8765BC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8765C8()
{
  return *(double *)(v0 + 760);
}

uint64_t sub_1DE8765D0(double a1)
{
  return sub_1DE859A54(a1);
}

uint64_t (*sub_1DE8765F4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 760);
  return sub_1DE876620;
}

uint64_t sub_1DE876620(double *a1)
{
  return sub_1DE859A54(*a1);
}

double sub_1DE87664C()
{
  return 1.0;
}

void sub_1DE876654(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876660()
{
  return *(double *)(v0 + 768);
}

uint64_t sub_1DE876668(double a1)
{
  return sub_1DE859A70(a1);
}

uint64_t (*sub_1DE87668C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 768);
  return sub_1DE8766B8;
}

uint64_t sub_1DE8766B8(double *a1)
{
  return sub_1DE859A70(*a1);
}

double sub_1DE8766E4()
{
  return 1.0;
}

void sub_1DE8766EC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8766F8()
{
  return *(double *)(v0 + 776);
}

uint64_t sub_1DE876700(double a1)
{
  return sub_1DE859A8C(a1);
}

uint64_t (*sub_1DE876724(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 776);
  return sub_1DE876750;
}

uint64_t sub_1DE876750(double *a1)
{
  return sub_1DE859A8C(*a1);
}

double sub_1DE87677C()
{
  return 1.0;
}

void sub_1DE876784(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE876790()
{
  return *(double *)(v0 + 784);
}

uint64_t sub_1DE876798(double a1)
{
  return sub_1DE859AA8(a1);
}

uint64_t (*sub_1DE8767BC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 784);
  return sub_1DE8767E8;
}

uint64_t sub_1DE8767E8(double *a1)
{
  return sub_1DE859AA8(*a1);
}

double sub_1DE876814()
{
  return 0.0;
}

void sub_1DE87681C(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE876824()
{
  return *(double *)(v0 + 792);
}

uint64_t sub_1DE87682C(double a1)
{
  return sub_1DE859D60(a1);
}

uint64_t (*sub_1DE876850(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 792);
  return sub_1DE87687C;
}

uint64_t sub_1DE87687C(double *a1)
{
  return sub_1DE859D60(*a1);
}

double sub_1DE8768A8()
{
  return 0.0;
}

void sub_1DE8768B0(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE8768B8()
{
  return *(double *)(v0 + 800);
}

uint64_t sub_1DE8768C0(double a1)
{
  return sub_1DE859D28(a1);
}

uint64_t (*sub_1DE8768E4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 800);
  return sub_1DE876910;
}

uint64_t sub_1DE876910(double *a1)
{
  return sub_1DE859D28(*a1);
}

double sub_1DE87693C()
{
  return 0.0;
}

void sub_1DE876944(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87694C()
{
  return *(double *)(v0 + 808);
}

uint64_t sub_1DE876954(double a1)
{
  return sub_1DE859D44(a1);
}

uint64_t (*sub_1DE876978(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 808);
  return sub_1DE8769A4;
}

uint64_t sub_1DE8769A4(double *a1)
{
  return sub_1DE859D44(*a1);
}

double sub_1DE8769D0@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.1;
  *a1 = xmmword_1DE8E7840;
  a1[1] = xmmword_1DE8E7850;
  return result;
}

double sub_1DE8769E8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.1;
  *a1 = xmmword_1DE8E7840;
  a1[1] = xmmword_1DE8E7850;
  return result;
}

__n128 sub_1DE876A00@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 816);
  long long v3 = *(_OWORD *)(v1 + 832);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1DE876A0C(double *a1)
{
}

void (*sub_1DE876A38(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 832);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 816);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE876A8C;
}

void sub_1DE876A8C(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE859AC4(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

double sub_1DE876AD4()
{
  return 0.0;
}

void sub_1DE876ADC(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE876AE4()
{
  return *(double *)(v0 + 848);
}

uint64_t sub_1DE876AEC(double a1)
{
  return sub_1DE859D0C(a1);
}

uint64_t (*sub_1DE876B10(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 848);
  return sub_1DE876B3C;
}

uint64_t sub_1DE876B3C(double *a1)
{
  return sub_1DE859D0C(*a1);
}

__n128 sub_1DE876B68@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 872);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 856);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 888);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 sub_1DE876B80@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 912);
  uint64_t v3 = *(void *)(v1 + 920);
  char v4 = *(unsigned char *)(v1 + 928);
  char v5 = *(unsigned char *)(v1 + 1000);
  char v6 = *(unsigned char *)(v1 + 1001);
  char v7 = *(unsigned char *)(v1 + 1002);
  *(void *)a1 = *(void *)(v1 + 904);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  long long v8 = *(_OWORD *)(v1 + 952);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 936);
  *(_OWORD *)(a1 + 48) = v8;
  __n128 result = *(__n128 *)(v1 + 968);
  long long v10 = *(_OWORD *)(v1 + 984);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 97) = v6;
  *(unsigned char *)(a1 + 98) = v7;
  return result;
}

BOOL sub_1DE876BEC(double *a1, double *a2)
{
  return sub_1DE88AEF4(a1, a2);
}

uint64_t sub_1DE876C08(char a1)
{
  uint64_t result = 0x69746C754D666E61;
  switch(a1)
  {
    case 1:
    case 6:
    case 9:
    case 40:
    case 42:
      uint64_t result = 0xD000000000000020;
      break;
    case 2:
      uint64_t result = 0xD000000000000023;
      break;
    case 3:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      uint64_t result = 0xD000000000000016;
      break;
    case 7:
      uint64_t result = 0xD000000000000024;
      break;
    case 8:
      uint64_t result = 0xD000000000000025;
      break;
    case 10:
      uint64_t result = 0xD000000000000032;
      break;
    case 11:
      uint64_t result = 0xD00000000000003ALL;
      break;
    case 12:
      uint64_t result = 0xD000000000000029;
      break;
    case 13:
      uint64_t result = 0xD000000000000029;
      break;
    case 14:
      uint64_t result = 0xD000000000000033;
      break;
    case 15:
      uint64_t result = 0xD00000000000002DLL;
      break;
    case 16:
      uint64_t result = 0x72656E65706D6164;
      break;
    case 17:
      uint64_t result = 0xD000000000000023;
      break;
    case 18:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 19:
      uint64_t result = 0xD000000000000018;
      break;
    case 20:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 21:
      uint64_t result = 0xD000000000000024;
      break;
    case 22:
      uint64_t result = 0xD000000000000013;
      break;
    case 23:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 24:
      uint64_t result = 0x64656E657473696CLL;
      break;
    case 25:
      uint64_t result = 0xD000000000000011;
      break;
    case 26:
      uint64_t result = 0xD000000000000011;
      break;
    case 27:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 28:
      uint64_t result = 0xD000000000000024;
      break;
    case 29:
      uint64_t result = 0xD000000000000023;
      break;
    case 30:
      uint64_t result = 0xD000000000000017;
      break;
    case 31:
      unsigned int v3 = 1684104562;
      goto LABEL_34;
    case 32:
      uint64_t result = 0xD000000000000021;
      break;
    case 33:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 34:
      uint64_t result = 0xD000000000000017;
      break;
    case 35:
      unsigned int v3 = 1852138867;
LABEL_34:
      uint64_t result = v3 | 0x616E655000000000;
      break;
    case 36:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 37:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 38:
      uint64_t result = 0xD000000000000027;
      break;
    case 39:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 41:
      uint64_t result = 0xD000000000000011;
      break;
    case 43:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 44:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 45:
      uint64_t result = 0xD000000000000029;
      break;
    case 46:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 47:
      uint64_t result = 0xD000000000000021;
      break;
    case 48:
      uint64_t result = 0xD000000000000014;
      break;
    case 49:
      uint64_t result = 0xD000000000000025;
      break;
    case 50:
      uint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE8771E8()
{
  return sub_1DE876C08(*v0);
}

uint64_t sub_1DE8771F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89B4A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE877218()
{
  return 0;
}

void sub_1DE877224(unsigned char *a1@<X8>)
{
  *a1 = 51;
}

uint64_t sub_1DE877230(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B9C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE87726C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88B9C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8772A8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C300);
  uint64_t v140 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  char v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = *(void *)v1;
  unint64_t v139 = *(void *)(v1 + 8);
  uint64_t v135 = *(void *)(v1 + 16);
  uint64_t v134 = *(void *)(v1 + 24);
  uint64_t v133 = *(void *)(v1 + 32);
  uint64_t v132 = *(void *)(v1 + 40);
  uint64_t v131 = *(void *)(v1 + 48);
  uint64_t v130 = *(void *)(v1 + 56);
  uint64_t v129 = *(void *)(v1 + 64);
  uint64_t v128 = *(void *)(v1 + 72);
  uint64_t v127 = *(void *)(v1 + 80);
  uint64_t v126 = *(void *)(v1 + 88);
  LODWORD(v138) = *(unsigned __int8 *)(v1 + 96);
  uint64_t v125 = *(void *)(v1 + 104);
  uint64_t v124 = *(void *)(v1 + 112);
  uint64_t v123 = *(void *)(v1 + 120);
  uint64_t v122 = *(void *)(v1 + 128);
  uint64_t v121 = *(void *)(v1 + 136);
  uint64_t v120 = *(void *)(v1 + 144);
  int v168 = *(unsigned __int8 *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 160);
  uint64_t v73 = *(void *)(v1 + 168);
  uint64_t v74 = v7;
  uint64_t v137 = *(void *)(v1 + 176);
  uint64_t v8 = *(void *)(v1 + 184);
  uint64_t v71 = *(void *)(v1 + 192);
  uint64_t v72 = v8;
  uint64_t v70 = *(void *)(v1 + 200);
  uint64_t v9 = *(void *)(v1 + 208);
  int v60 = *(unsigned __int8 *)(v1 + 216);
  uint64_t v81 = *(void *)(v1 + 224);
  uint64_t v82 = v9;
  int v63 = *(unsigned __int8 *)(v1 + 232);
  uint64_t v10 = *(void *)(v1 + 240);
  uint64_t v79 = *(void *)(v1 + 248);
  uint64_t v80 = v10;
  uint64_t v11 = *(void *)(v1 + 256);
  uint64_t v77 = *(void *)(v1 + 264);
  uint64_t v78 = v11;
  long long v12 = *(_OWORD *)(v1 + 560);
  long long v164 = *(_OWORD *)(v1 + 544);
  long long v165 = v12;
  long long v166 = *(_OWORD *)(v1 + 576);
  long long v13 = *(_OWORD *)(v1 + 496);
  long long v160 = *(_OWORD *)(v1 + 480);
  long long v161 = v13;
  long long v14 = *(_OWORD *)(v1 + 528);
  long long v162 = *(_OWORD *)(v1 + 512);
  long long v163 = v14;
  long long v15 = *(_OWORD *)(v1 + 432);
  long long v156 = *(_OWORD *)(v1 + 416);
  long long v157 = v15;
  long long v16 = *(_OWORD *)(v1 + 464);
  long long v158 = *(_OWORD *)(v1 + 448);
  long long v159 = v16;
  uint64_t v17 = *(void *)(v1 + 280);
  *(void *)&long long v64 = *(void *)(v1 + 272);
  *((void *)&v64 + 1) = v17;
  LODWORD(v5) = *(unsigned __int8 *)(v1 + 305);
  int v65 = *(unsigned __int8 *)(v1 + 304);
  int v66 = v5;
  int v67 = *(unsigned __int8 *)(v1 + 306);
  int v69 = *(unsigned __int8 *)(v1 + 400);
  uint64_t v167 = *(void *)(v1 + 592);
  int v18 = *(unsigned __int8 *)(v1 + 712);
  int v136 = *(unsigned __int8 *)(v1 + 912);
  int v75 = *(unsigned __int8 *)(v1 + 928);
  int v76 = v18;
  int v119 = *(unsigned __int8 *)(v1 + 1000);
  int v19 = *(unsigned __int8 *)(v1 + 1001);
  int v20 = *(unsigned __int8 *)(v1 + 1002);
  uint64_t v21 = a1[3];
  uint64_t v22 = *(void *)(v1 + 296);
  *(void *)&long long v61 = *(void *)(v1 + 288);
  *((void *)&v61 + 1) = v22;
  uint64_t v62 = *(void *)(v1 + 312);
  uint64_t v68 = *(void *)(v1 + 320);
  uint64_t v23 = *(void *)(v1 + 336);
  *(void *)&long long v83 = *(void *)(v1 + 328);
  *((void *)&v83 + 1) = v23;
  uint64_t v24 = *(void *)(v1 + 352);
  *(void *)&long long v84 = *(void *)(v1 + 344);
  *((void *)&v84 + 1) = v24;
  uint64_t v25 = *(void *)(v1 + 368);
  *(void *)&long long v85 = *(void *)(v1 + 360);
  *((void *)&v85 + 1) = v25;
  uint64_t v26 = *(void *)(v1 + 384);
  uint64_t v86 = *(void *)(v1 + 376);
  uint64_t v87 = v26;
  uint64_t v27 = *(void *)(v1 + 408);
  uint64_t v88 = *(void *)(v1 + 392);
  uint64_t v89 = v27;
  uint64_t v28 = *(void *)(v1 + 608);
  *(void *)&long long v90 = *(void *)(v1 + 600);
  *((void *)&v90 + 1) = v28;
  uint64_t v29 = *(void *)(v1 + 624);
  *(void *)&long long v91 = *(void *)(v1 + 616);
  *((void *)&v91 + 1) = v29;
  uint64_t v30 = *(void *)(v1 + 640);
  *(void *)&long long v92 = *(void *)(v1 + 632);
  *((void *)&v92 + 1) = v30;
  uint64_t v31 = *(void *)(v1 + 656);
  *(void *)&long long v93 = *(void *)(v1 + 648);
  *((void *)&v93 + 1) = v31;
  uint64_t v32 = *(void *)(v1 + 672);
  *(void *)&long long v94 = *(void *)(v1 + 664);
  *((void *)&v94 + 1) = v32;
  uint64_t v33 = *(void *)(v1 + 688);
  uint64_t v95 = *(void *)(v1 + 680);
  uint64_t v96 = v33;
  uint64_t v34 = *(void *)(v1 + 704);
  uint64_t v97 = *(void *)(v1 + 696);
  uint64_t v98 = v34;
  uint64_t v35 = *(void *)(v1 + 728);
  uint64_t v99 = *(void *)(v1 + 720);
  uint64_t v100 = v35;
  uint64_t v36 = *(void *)(v1 + 744);
  uint64_t v101 = *(void *)(v1 + 736);
  uint64_t v102 = v36;
  uint64_t v37 = *(void *)(v1 + 760);
  uint64_t v103 = *(void *)(v1 + 752);
  uint64_t v104 = v37;
  uint64_t v38 = *(void *)(v1 + 776);
  uint64_t v105 = *(void *)(v1 + 768);
  uint64_t v106 = v38;
  uint64_t v39 = *(void *)(v1 + 792);
  uint64_t v107 = *(void *)(v1 + 784);
  uint64_t v108 = v39;
  uint64_t v40 = *(void *)(v1 + 808);
  uint64_t v109 = *(void *)(v1 + 800);
  uint64_t v110 = v40;
  uint64_t v41 = *(void *)(v1 + 824);
  *(void *)&long long v111 = *(void *)(v1 + 816);
  *((void *)&v111 + 1) = v41;
  uint64_t v42 = *(void *)(v1 + 840);
  *(void *)&long long v112 = *(void *)(v1 + 832);
  *((void *)&v112 + 1) = v42;
  uint64_t v113 = *(void *)(v1 + 848);
  long long v114 = *(_OWORD *)(v1 + 856);
  long long v115 = *(_OWORD *)(v1 + 872);
  long long v116 = *(_OWORD *)(v1 + 888);
  uint64_t v117 = *(void *)(v1 + 904);
  uint64_t v118 = *(void *)(v1 + 920);
  uint64_t v43 = *(void *)(v1 + 936);
  uint64_t v44 = *(void *)(v1 + 944);
  uint64_t v45 = *(void *)(v1 + 952);
  uint64_t v46 = *(void *)(v1 + 960);
  uint64_t v47 = *(void *)(v1 + 968);
  uint64_t v48 = *(void *)(v1 + 976);
  uint64_t v49 = *(void *)(v1 + 984);
  uint64_t v50 = *(void *)(v1 + 992);
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1DE88B9C0();
  sub_1DE8E1C10();
  *(void *)&long long v144 = v143;
  char v169 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C310);
  sub_1DE88CB54(&qword_1EAC0C318, &qword_1EAC0C310);
  uint64_t v143 = v3;
  char v142 = v6;
  uint64_t v51 = v141;
  sub_1DE8E1A40();
  if (v51) {
    return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v142, v143);
  }
  char v53 = v138;
  char v54 = v168;
  uint64_t v55 = v137;
  int v59 = v20;
  LODWORD(v141) = v19;
  char v56 = v136;
  uint64_t v57 = v140;
  *(void *)&long long v144 = v139;
  char v169 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C320);
  sub_1DE88CB54(&qword_1EAC0C328, &qword_1EAC0C320);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v135;
  char v169 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C330);
  sub_1DE88CB54(&qword_1EAC0C338, &qword_1EAC0C330);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v134;
  char v169 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C340);
  sub_1DE88CB54(&qword_1EAC0C348, &qword_1EAC0C340);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v133;
  *((void *)&v144 + 1) = v132;
  *(void *)&long long v145 = v131;
  *((void *)&v145 + 1) = v130;
  char v169 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C350);
  sub_1DE88CB54(&qword_1EAC0C358, &qword_1EAC0C350);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v129;
  char v169 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C360);
  sub_1DE88CB54(&qword_1EAC0C368, &qword_1EAC0C360);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v128;
  char v169 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C370);
  sub_1DE88CB54(&qword_1EAC0C378, &qword_1EAC0C370);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v127;
  char v169 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C380);
  sub_1DE88CB54(&qword_1EAC0C388, &qword_1EAC0C380);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v126;
  char v169 = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C390);
  sub_1DE88CB54(&qword_1EAC0C398, &qword_1EAC0C390);
  sub_1DE8E1A40();
  LOBYTE(v144) = v53;
  char v169 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3A0);
  sub_1DE88CB54(&qword_1EAC0C3A8, &qword_1EAC0C3A0);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v125;
  char v169 = 10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3B0);
  sub_1DE88CB54(&qword_1EAC0C3B8, &qword_1EAC0C3B0);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v124;
  char v169 = 11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3C0);
  sub_1DE88CB54(&qword_1EAC0C3C8, &qword_1EAC0C3C0);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v123;
  char v169 = 12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3D0);
  sub_1DE88CB54(&qword_1EAC0C3D8, &qword_1EAC0C3D0);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v122;
  char v169 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3E0);
  sub_1DE88CB54(&qword_1EAC0C3E8, &qword_1EAC0C3E0);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v121;
  char v169 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3F0);
  sub_1DE88CB54(&qword_1EAC0C3F8, &qword_1EAC0C3F0);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v120;
  char v169 = 15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C400);
  sub_1DE88CB54(&qword_1EAC0C408, &qword_1EAC0C400);
  sub_1DE8E1A40();
  LOBYTE(v144) = v54;
  char v169 = 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C410);
  sub_1DE88CB54(&qword_1EAC0C418, &qword_1EAC0C410);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v74;
  *((void *)&v144 + 1) = v73;
  *(void *)&long long v145 = v55;
  *((void *)&v145 + 1) = v72;
  *(void *)&long long v146 = v71;
  *((void *)&v146 + 1) = v70;
  char v169 = 17;
  sub_1DE88BA14();
  sub_1DE8E1A40();
  *(void *)&long long v144 = v82;
  BYTE8(v144) = v60;
  *(void *)&long long v145 = v81;
  BYTE8(v145) = v63;
  *(void *)&long long v146 = v80;
  *((void *)&v146 + 1) = v79;
  *(void *)&long long v147 = v78;
  *((void *)&v147 + 1) = v77;
  long long v148 = v64;
  long long v149 = v61;
  LOBYTE(v150) = v65;
  BYTE1(v150) = v66;
  BYTE2(v150) = v67;
  char v169 = 18;
  unint64_t v139 = sub_1DE88BA68();
  sub_1DE8E1A40();
  *(void *)&long long v144 = v62;
  char v169 = 19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C430);
  sub_1DE88CB54(&qword_1EAC0C438, &qword_1EAC0C430);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v68;
  char v169 = 20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C440);
  sub_1DE88CB54(&qword_1EAC0C448, &qword_1EAC0C440);
  sub_1DE8E1A40();
  long long v144 = v83;
  long long v145 = v84;
  long long v146 = v85;
  char v169 = 21;
  unint64_t v138 = sub_1DE88BABC();
  sub_1DE8E1A40();
  *(void *)&long long v144 = v86;
  char v169 = 22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C458);
  sub_1DE88CB54(&qword_1EAC0C460, &qword_1EAC0C458);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v87;
  char v169 = 23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C468);
  sub_1DE88CB54(&qword_1EAC0C470, &qword_1EAC0C468);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v88;
  char v169 = 24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C478);
  sub_1DE88CB54(&qword_1EAC0C480, &qword_1EAC0C478);
  sub_1DE8E1A40();
  LOBYTE(v144) = v69;
  char v169 = 25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C488);
  sub_1DE88CB54(&qword_1EAC0C490, &qword_1EAC0C488);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v89;
  char v169 = 26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C498);
  sub_1DE88CB54(&qword_1EAC0C4A0, &qword_1EAC0C498);
  sub_1DE8E1A40();
  long long v152 = v164;
  long long v153 = v165;
  long long v154 = v166;
  uint64_t v155 = v167;
  long long v148 = v160;
  long long v149 = v161;
  long long v150 = v162;
  long long v151 = v163;
  long long v144 = v156;
  long long v145 = v157;
  long long v146 = v158;
  long long v147 = v159;
  char v169 = 27;
  sub_1DE88BB10();
  sub_1DE8E1A40();
  long long v144 = v90;
  long long v145 = v91;
  long long v146 = v92;
  char v169 = 28;
  sub_1DE8E1A40();
  long long v144 = v93;
  long long v145 = v94;
  char v169 = 29;
  sub_1DE88BB64();
  sub_1DE8E1A40();
  *(void *)&long long v144 = v95;
  char v169 = 30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4B8);
  sub_1DE88CB54(&qword_1EAC0C4C0, &qword_1EAC0C4B8);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v96;
  char v169 = 31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4C8);
  sub_1DE88CB54(&qword_1EAC0C4D0, &qword_1EAC0C4C8);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v97;
  char v169 = 32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4D8);
  sub_1DE88CB54(&qword_1EAC0C4E0, &qword_1EAC0C4D8);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v98;
  char v169 = 33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4E8);
  sub_1DE88CB54(&qword_1EAC0C4F0, &qword_1EAC0C4E8);
  sub_1DE8E1A40();
  LOBYTE(v144) = v76;
  char v169 = 34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4F8);
  sub_1DE88CB54(&qword_1EAC0C500, &qword_1EAC0C4F8);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v99;
  char v169 = 35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C508);
  sub_1DE88CB54(&qword_1EAC0C510, &qword_1EAC0C508);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v100;
  char v169 = 36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C518);
  sub_1DE88CB54(&qword_1EAC0C520, &qword_1EAC0C518);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v101;
  char v169 = 37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C528);
  sub_1DE88CB54(&qword_1EAC0C530, &qword_1EAC0C528);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v102;
  char v169 = 38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C538);
  sub_1DE88CB54(&qword_1EAC0C540, &qword_1EAC0C538);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v103;
  char v169 = 39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C548);
  sub_1DE88CB54(&qword_1EAC0C550, &qword_1EAC0C548);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v104;
  char v169 = 40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C558);
  sub_1DE88CB54(&qword_1EAC0C560, &qword_1EAC0C558);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v105;
  char v169 = 41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C568);
  sub_1DE88CB54(&qword_1EAC0C570, &qword_1EAC0C568);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v106;
  char v169 = 42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C578);
  sub_1DE88CB54(&qword_1EAC0C580, &qword_1EAC0C578);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v107;
  char v169 = 43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C588);
  sub_1DE88CB54(&qword_1EAC0C590, &qword_1EAC0C588);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v108;
  char v169 = 44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C598);
  sub_1DE88CB54(&qword_1EAC0C5A0, &qword_1EAC0C598);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v109;
  char v169 = 45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5A8);
  sub_1DE88CB54(&qword_1EAC0C5B0, &qword_1EAC0C5A8);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v110;
  char v169 = 46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5B8);
  sub_1DE88CB54(&qword_1EAC0C5C0, &qword_1EAC0C5B8);
  sub_1DE8E1A40();
  long long v144 = v111;
  long long v145 = v112;
  char v169 = 47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5C8);
  sub_1DE88CB54(&qword_1EAC0C5D0, &qword_1EAC0C5C8);
  sub_1DE8E1A40();
  *(void *)&long long v144 = v113;
  char v169 = 48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5D8);
  sub_1DE88CB54(&qword_1EAC0C5E0, &qword_1EAC0C5D8);
  sub_1DE8E1A40();
  long long v144 = v114;
  long long v145 = v115;
  long long v146 = v116;
  char v169 = 49;
  sub_1DE8E1A40();
  *(void *)&long long v144 = v117;
  BYTE8(v144) = v56;
  *(void *)&long long v145 = v118;
  BYTE8(v145) = v75;
  *(void *)&long long v146 = v43;
  *((void *)&v146 + 1) = v44;
  *(void *)&long long v147 = v45;
  *((void *)&v147 + 1) = v46;
  *(void *)&long long v148 = v47;
  *((void *)&v148 + 1) = v48;
  *(void *)&long long v149 = v49;
  *((void *)&v149 + 1) = v50;
  LOBYTE(v150) = v119;
  BYTE1(v150) = v141;
  BYTE2(v150) = v59;
  char v169 = 50;
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v142, v143);
}

uint64_t sub_1DE878DC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5E8);
  uint64_t v5 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171, v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88B9C0();
  sub_1DE8E1BF0();
  if (!v2)
  {
    uint64_t v133 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C310);
    LOBYTE(v146) = 0;
    sub_1DE88CB54(&qword_1EAC0C5F0, &qword_1EAC0C310);
    sub_1DE8E1930();
    uint64_t v9 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C320);
    LOBYTE(v146) = 1;
    sub_1DE88CB54(&qword_1EAC0C5F8, &qword_1EAC0C320);
    sub_1DE8E1930();
    uint64_t v10 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C330);
    LOBYTE(v146) = 2;
    sub_1DE88CB54(&qword_1EAC0C600, &qword_1EAC0C330);
    sub_1DE8E1930();
    uint64_t v11 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C340);
    LOBYTE(v146) = 3;
    sub_1DE88CB54(&qword_1EAC0C608, &qword_1EAC0C340);
    sub_1DE8E1930();
    uint64_t v12 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C350);
    LOBYTE(v146) = 4;
    sub_1DE88CB54(&qword_1EAC0C610, &qword_1EAC0C350);
    sub_1DE8E1930();
    long long v13 = v159;
    long long v14 = v160;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C360);
    LOBYTE(v146) = 5;
    sub_1DE88CB54(&qword_1EAC0C618, &qword_1EAC0C360);
    sub_1DE8E1930();
    uint64_t v132 = v13;
    uint64_t v15 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C370);
    LOBYTE(v146) = 6;
    sub_1DE88CB54(&qword_1EAC0C620, &qword_1EAC0C370);
    sub_1DE8E1930();
    uint64_t v131 = v15;
    uint64_t v16 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C380);
    LOBYTE(v146) = 7;
    sub_1DE88CB54(&qword_1EAC0C628, &qword_1EAC0C380);
    sub_1DE8E1930();
    uint64_t v130 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C390);
    LOBYTE(v146) = 8;
    sub_1DE88CB54(&qword_1EAC0C630, &qword_1EAC0C390);
    sub_1DE8E1930();
    uint64_t v129 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3A0);
    LOBYTE(v146) = 9;
    sub_1DE88CB54(&qword_1EAC0C638, &qword_1EAC0C3A0);
    sub_1DE8E1930();
    char v17 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3B0);
    LOBYTE(v146) = 10;
    sub_1DE88CB54(&qword_1EAC0C640, &qword_1EAC0C3B0);
    sub_1DE8E1930();
    uint64_t v128 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3C0);
    LOBYTE(v146) = 11;
    sub_1DE88CB54(&qword_1EAC0C648, &qword_1EAC0C3C0);
    sub_1DE8E1930();
    uint64_t v127 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3D0);
    LOBYTE(v146) = 12;
    sub_1DE88CB54(&qword_1EAC0C650, &qword_1EAC0C3D0);
    sub_1DE8E1930();
    uint64_t v126 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3E0);
    LOBYTE(v146) = 13;
    sub_1DE88CB54(&qword_1EAC0C658, &qword_1EAC0C3E0);
    sub_1DE8E1930();
    uint64_t v125 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C3F0);
    LOBYTE(v146) = 14;
    sub_1DE88CB54(&qword_1EAC0C660, &qword_1EAC0C3F0);
    sub_1DE8E1930();
    uint64_t v124 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C400);
    LOBYTE(v146) = 15;
    sub_1DE88CB54(&qword_1EAC0C668, &qword_1EAC0C400);
    sub_1DE8E1930();
    uint64_t v123 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C410);
    LOBYTE(v146) = 16;
    sub_1DE88CB54(&qword_1EAC0C670, &qword_1EAC0C410);
    sub_1DE8E1930();
    char v18 = v159;
    LOBYTE(v146) = 17;
    sub_1DE88BBB8();
    sub_1DE8E1930();
    uint64_t v120 = *((void *)&v159 + 1);
    uint64_t v121 = v159;
    uint64_t v119 = *((void *)&v160 + 1);
    uint64_t v122 = v160;
    uint64_t v117 = *((void *)&v161 + 1);
    uint64_t v118 = v161;
    LOBYTE(v146) = 18;
    unint64_t v116 = sub_1DE88BC0C();
    sub_1DE8E1930();
    int v115 = BYTE8(v159);
    uint64_t v109 = v160;
    uint64_t v110 = v159;
    int v114 = BYTE8(v160);
    uint64_t v107 = *((void *)&v161 + 1);
    uint64_t v108 = v161;
    uint64_t v105 = *((void *)&v162 + 1);
    uint64_t v106 = v162;
    uint64_t v103 = *((void *)&v163 + 1);
    uint64_t v104 = v163;
    uint64_t v101 = *((void *)&v164 + 1);
    uint64_t v102 = v164;
    int v113 = v165;
    int v112 = BYTE1(v165);
    int v111 = BYTE2(v165);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C430);
    LOBYTE(v146) = 19;
    sub_1DE88CB54(&qword_1EAC0C688, &qword_1EAC0C430);
    sub_1DE8E1930();
    uint64_t v100 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C440);
    LOBYTE(v146) = 20;
    sub_1DE88CB54(&qword_1EAC0C690, &qword_1EAC0C440);
    sub_1DE8E1930();
    uint64_t v98 = v159;
    LOBYTE(v146) = 21;
    unint64_t v99 = sub_1DE88BC60();
    sub_1DE8E1930();
    uint64_t v96 = *((void *)&v159 + 1);
    uint64_t v97 = v159;
    uint64_t v94 = *((void *)&v160 + 1);
    uint64_t v95 = v160;
    uint64_t v92 = *((void *)&v161 + 1);
    uint64_t v93 = v161;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C458);
    LOBYTE(v146) = 22;
    sub_1DE88CB54(&qword_1EAC0C6A0, &qword_1EAC0C458);
    sub_1DE8E1930();
    uint64_t v91 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C468);
    LOBYTE(v146) = 23;
    sub_1DE88CB54(&qword_1EAC0C6A8, &qword_1EAC0C468);
    sub_1DE8E1930();
    uint64_t v90 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C478);
    LOBYTE(v146) = 24;
    sub_1DE88CB54(&qword_1EAC0C6B0, &qword_1EAC0C478);
    sub_1DE8E1930();
    uint64_t v89 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C488);
    LOBYTE(v146) = 25;
    sub_1DE88CB54(&qword_1EAC0C6B8, &qword_1EAC0C488);
    sub_1DE8E1930();
    int v88 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C498);
    LOBYTE(v146) = 26;
    sub_1DE88CB54(&qword_1EAC0C6C0, &qword_1EAC0C498);
    sub_1DE8E1930();
    uint64_t v87 = v159;
    char v158 = 27;
    sub_1DE88BCB4();
    sub_1DE8E1930();
    long long v154 = v167;
    long long v155 = v168;
    long long v156 = v169;
    uint64_t v157 = v170;
    long long v150 = v163;
    long long v151 = v164;
    long long v152 = v165;
    long long v153 = v166;
    long long v146 = v159;
    long long v147 = v160;
    long long v148 = v161;
    long long v149 = v162;
    char v145 = 28;
    sub_1DE8E1930();
    uint64_t v84 = v135;
    unint64_t v85 = v134;
    uint64_t v82 = v137;
    uint64_t v83 = v136;
    uint64_t v86 = *((void *)&v138 + 1);
    uint64_t v81 = v138;
    char v145 = 29;
    sub_1DE88BD08();
    sub_1DE8E1930();
    uint64_t v79 = v136;
    uint64_t v80 = v135;
    unint64_t v77 = v134;
    uint64_t v78 = v137;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4B8);
    char v145 = 30;
    sub_1DE88CB54(&qword_1EAC0C6D8, &qword_1EAC0C4B8);
    sub_1DE8E1930();
    unint64_t v76 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4C8);
    char v145 = 31;
    sub_1DE88CB54(&qword_1EAC0C6E0, &qword_1EAC0C4C8);
    sub_1DE8E1930();
    unint64_t v75 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4D8);
    char v145 = 32;
    sub_1DE88CB54(&qword_1EAC0C6E8, &qword_1EAC0C4D8);
    sub_1DE8E1930();
    unint64_t v74 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4E8);
    char v145 = 33;
    sub_1DE88CB54(&qword_1EAC0C6F0, &qword_1EAC0C4E8);
    sub_1DE8E1930();
    unint64_t v73 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C4F8);
    char v145 = 34;
    sub_1DE88CB54(&qword_1EAC0C6F8, &qword_1EAC0C4F8);
    sub_1DE8E1930();
    int v72 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C508);
    char v145 = 35;
    sub_1DE88CB54(&qword_1EAC0C700, &qword_1EAC0C508);
    sub_1DE8E1930();
    unint64_t v71 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C518);
    char v145 = 36;
    sub_1DE88CB54(&qword_1EAC0C708, &qword_1EAC0C518);
    sub_1DE8E1930();
    unint64_t v70 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C528);
    char v145 = 37;
    sub_1DE88CB54(&qword_1EAC0C710, &qword_1EAC0C528);
    sub_1DE8E1930();
    unint64_t v69 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C538);
    char v145 = 38;
    sub_1DE88CB54(&qword_1EAC0C718, &qword_1EAC0C538);
    sub_1DE8E1930();
    unint64_t v68 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C548);
    char v145 = 39;
    sub_1DE88CB54(&qword_1EAC0C720, &qword_1EAC0C548);
    sub_1DE8E1930();
    unint64_t v67 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C558);
    char v145 = 40;
    sub_1DE88CB54(&qword_1EAC0C728, &qword_1EAC0C558);
    sub_1DE8E1930();
    unint64_t v66 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C568);
    char v145 = 41;
    sub_1DE88CB54(&qword_1EAC0C730, &qword_1EAC0C568);
    sub_1DE8E1930();
    unint64_t v65 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C578);
    char v145 = 42;
    sub_1DE88CB54(&qword_1EAC0C738, &qword_1EAC0C578);
    sub_1DE8E1930();
    unint64_t v64 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C588);
    char v145 = 43;
    sub_1DE88CB54(&qword_1EAC0C740, &qword_1EAC0C588);
    sub_1DE8E1930();
    unint64_t v63 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C598);
    char v145 = 44;
    sub_1DE88CB54(&qword_1EAC0C748, &qword_1EAC0C598);
    sub_1DE8E1930();
    unint64_t v62 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5A8);
    char v145 = 45;
    sub_1DE88CB54(&qword_1EAC0C750, &qword_1EAC0C5A8);
    sub_1DE8E1930();
    unint64_t v61 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5B8);
    char v145 = 46;
    sub_1DE88CB54(&qword_1EAC0C758, &qword_1EAC0C5B8);
    sub_1DE8E1930();
    unint64_t v60 = v134;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5C8);
    char v145 = 47;
    sub_1DE88CB54(&qword_1EAC0C760, &qword_1EAC0C5C8);
    sub_1DE8E1930();
    uint64_t v58 = v135;
    unint64_t v59 = v134;
    uint64_t v56 = v137;
    uint64_t v57 = v136;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C5D8);
    char v145 = 48;
    sub_1DE88CB54(&qword_1EAC0C768, &qword_1EAC0C5D8);
    sub_1DE8E1930();
    unint64_t v55 = v134;
    char v145 = 49;
    sub_1DE8E1930();
    unint64_t v99 = v134;
    uint64_t v53 = v136;
    uint64_t v54 = v135;
    uint64_t v51 = v138;
    uint64_t v52 = v137;
    uint64_t v50 = *((void *)&v138 + 1);
    char v145 = 50;
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v8, v171);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(void *)(a2 + 32) = v132;
    *(void *)(a2 + 40) = *((void *)&v13 + 1);
    *(_OWORD *)(a2 + 48) = v14;
    *(void *)(a2 + 64) = v131;
    *(void *)(a2 + 72) = v16;
    uint64_t v20 = v129;
    *(void *)(a2 + 80) = v130;
    *(void *)(a2 + 88) = v20;
    uint64_t v21 = v127;
    *(void *)(a2 + 104) = v128;
    *(void *)(a2 + 112) = v21;
    uint64_t v22 = v125;
    *(void *)(a2 + 120) = v126;
    *(void *)(a2 + 128) = v22;
    uint64_t v23 = v123;
    *(void *)(a2 + 136) = v124;
    *(void *)(a2 + 144) = v23;
    uint64_t v24 = v120;
    *(void *)(a2 + 160) = v121;
    *(void *)(a2 + 168) = v24;
    uint64_t v25 = v118;
    *(void *)(a2 + 184) = v119;
    *(void *)(a2 + 192) = v25;
    uint64_t v26 = v110;
    *(void *)(a2 + 200) = v117;
    *(void *)(a2 + 208) = v26;
    *(void *)(a2 + 224) = v109;
    uint64_t v27 = v107;
    *(void *)(a2 + 240) = v108;
    *(void *)(a2 + 248) = v27;
    uint64_t v28 = v105;
    *(void *)(a2 + 256) = v106;
    *(void *)(a2 + 264) = v28;
    uint64_t v29 = v103;
    *(void *)(a2 + 272) = v104;
    *(void *)(a2 + 280) = v29;
    uint64_t v30 = v101;
    *(void *)(a2 + 288) = v102;
    *(void *)(a2 + 296) = v30;
    uint64_t v31 = v98;
    *(void *)(a2 + 312) = v100;
    *(void *)(a2 + 320) = v31;
    uint64_t v32 = v96;
    *(void *)(a2 + 328) = v97;
    *(void *)(a2 + 336) = v32;
    uint64_t v33 = v94;
    *(void *)(a2 + 344) = v95;
    *(void *)(a2 + 352) = v33;
    uint64_t v34 = v92;
    *(void *)(a2 + 360) = v93;
    *(void *)(a2 + 368) = v34;
    uint64_t v35 = v90;
    *(void *)(a2 + 376) = v91;
    *(void *)(a2 + 384) = v35;
    *(void *)(a2 + 392) = v89;
    *(void *)(a2 + 408) = v87;
    *(void *)(a2 + 600) = v85;
    *(void *)(a2 + 608) = v84;
    *(void *)(a2 + 616) = v83;
    *(void *)(a2 + 624) = v82;
    *(void *)(a2 + 632) = v81;
    long long v36 = v155;
    *(_OWORD *)(a2 + 544) = v154;
    *(_OWORD *)(a2 + 560) = v36;
    *(_OWORD *)(a2 + 576) = v156;
    long long v37 = v151;
    *(_OWORD *)(a2 + 480) = v150;
    *(_OWORD *)(a2 + 496) = v37;
    long long v38 = v153;
    *(_OWORD *)(a2 + 512) = v152;
    *(_OWORD *)(a2 + 528) = v38;
    long long v39 = v147;
    *(_OWORD *)(a2 + 416) = v146;
    *(_OWORD *)(a2 + 432) = v39;
    long long v40 = v149;
    *(_OWORD *)(a2 + 448) = v148;
    *(_OWORD *)(a2 + 464) = v40;
    *(void *)(a2 + 640) = v86;
    unint64_t v41 = v134;
    char v42 = v135;
    *(void *)(a2 + 648) = v77;
    *(void *)&long long v40 = v136;
    char v43 = v137;
    char v44 = v142;
    char v45 = v143;
    char v46 = v144;
    *(void *)(a2 + 592) = v157;
    *(unsigned char *)(a2 + 96) = v17;
    *(unsigned char *)(a2 + 152) = v18;
    *(void *)(a2 + 176) = v122;
    *(unsigned char *)(a2 + 216) = v115;
    *(unsigned char *)(a2 + 232) = v114;
    *(unsigned char *)(a2 + 304) = v113;
    *(unsigned char *)(a2 + 305) = v112;
    *(unsigned char *)(a2 + 306) = v111;
    *(unsigned char *)(a2 + 400) = v88;
    *(void *)(a2 + 656) = v80;
    *(void *)(a2 + 664) = v79;
    *(void *)(a2 + 672) = v78;
    *(void *)(a2 + 680) = v76;
    *(void *)(a2 + 688) = v75;
    *(void *)(a2 + 696) = v74;
    *(void *)(a2 + 704) = v73;
    *(unsigned char *)(a2 + 712) = v72;
    *(void *)(a2 + 720) = v71;
    *(void *)(a2 + 728) = v70;
    *(void *)(a2 + 736) = v69;
    *(void *)(a2 + 744) = v68;
    *(void *)(a2 + 752) = v67;
    *(void *)(a2 + 760) = v66;
    *(void *)(a2 + 768) = v65;
    *(void *)(a2 + 776) = v64;
    *(void *)(a2 + 784) = v63;
    *(void *)(a2 + 792) = v62;
    *(void *)(a2 + 800) = v61;
    *(void *)(a2 + 808) = v60;
    *(void *)(a2 + 816) = v59;
    *(void *)(a2 + 824) = v58;
    *(void *)(a2 + 832) = v57;
    *(void *)(a2 + 840) = v56;
    *(void *)(a2 + 848) = v55;
    *(void *)(a2 + 856) = v99;
    *(void *)(a2 + 864) = v54;
    *(void *)(a2 + 872) = v53;
    *(void *)(a2 + 880) = v52;
    *(void *)(a2 + 888) = v51;
    *(void *)(a2 + 896) = v50;
    *(void *)(a2 + 904) = v41;
    *(unsigned char *)(a2 + 912) = v42;
    *(void *)(a2 + 920) = v40;
    *(unsigned char *)(a2 + 928) = v43;
    long long v47 = v139;
    *(_OWORD *)(a2 + 936) = v138;
    *(_OWORD *)(a2 + 952) = v47;
    long long v48 = v141;
    *(_OWORD *)(a2 + 968) = v140;
    *(_OWORD *)(a2 + 984) = v48;
    *(unsigned char *)(a2 + 1000) = v44;
    *(unsigned char *)(a2 + 1001) = v45;
    *(unsigned char *)(a2 + 1002) = v46;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE87A93C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE878DC8(a1, a2);
}

uint64_t sub_1DE87A954(void *a1)
{
  return sub_1DE8772A8(a1);
}

double sub_1DE87A970()
{
  return *(double *)v0;
}

double sub_1DE87A978()
{
  return *(double *)(v0 + 8);
}

double sub_1DE87A980()
{
  return *(double *)(v0 + 16);
}

double sub_1DE87A988()
{
  return *(double *)(v0 + 24);
}

BOOL sub_1DE87A990(double *a1, double *a2)
{
  return sub_1DE88AEF4(a1, a2);
}

unint64_t sub_1DE87A9AC(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE87AA38()
{
  return sub_1DE87A9AC(*v0);
}

uint64_t sub_1DE87AA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89C698(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE87AA68()
{
  return 0;
}

void sub_1DE87AA74(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE87AA80(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BD5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE87AABC(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BD5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE87AAF8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C770);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BD5C();
  sub_1DE8E1C10();
  v9[15] = 0;
  sub_1DE8E1A20();
  if (!v1)
  {
    v9[14] = 1;
    sub_1DE8E1A20();
    v9[13] = 2;
    sub_1DE8E1A20();
    v9[12] = 3;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DE87ACBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C780);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BD5C();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v23 = 0;
    sub_1DE8E1910();
    uint64_t v11 = v10;
    char v22 = 1;
    sub_1DE8E1910();
    uint64_t v13 = v12;
    char v21 = 2;
    sub_1DE8E1910();
    uint64_t v16 = v15;
    char v20 = 3;
    sub_1DE8E1910();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v16;
    a2[3] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE87AEBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE87ACBC(a1, a2);
}

uint64_t sub_1DE87AED4(void *a1)
{
  return sub_1DE87AAF8(a1);
}

BOOL sub_1DE87AEEC(double *a1, double *a2)
{
  return sub_1DE88AEF4(a1, a2);
}

double sub_1DE87AF08()
{
  return 0.0;
}

void sub_1DE87AF10(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87AF18()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE87AF24(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE87AF50;
}

uint64_t sub_1DE87AF50(double *a1)
{
  return sub_1DE857B18(*a1);
}

double sub_1DE87AF78()
{
  return 1.0;
}

void sub_1DE87AF80(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE87AF8C(double a1)
{
  return sub_1DE857B34(a1);
}

uint64_t (*sub_1DE87AFB0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE87AFDC;
}

uint64_t sub_1DE87AFDC(double *a1)
{
  return sub_1DE857B34(*a1);
}

uint64_t sub_1DE87B008()
{
  return 50;
}

void sub_1DE87B010(void *a1@<X8>)
{
  *a1 = 50;
}

uint64_t sub_1DE87B01C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DE87B024(uint64_t a1)
{
  return sub_1DE857B50(a1);
}

uint64_t (*sub_1DE87B048(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 16);
  a1[1] = v1;
  return sub_1DE87B070;
}

uint64_t sub_1DE87B070(uint64_t *a1)
{
  return sub_1DE857B50(*a1);
}

double sub_1DE87B098()
{
  return 1.0;
}

void sub_1DE87B0A0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE87B0AC(double a1)
{
  return sub_1DE857D0C(a1);
}

uint64_t (*sub_1DE87B0D0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 24);
  return sub_1DE87B0FC;
}

uint64_t sub_1DE87B0FC(double *a1)
{
  return sub_1DE857D0C(*a1);
}

double sub_1DE87B128()
{
  return 1.0;
}

void sub_1DE87B130(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE87B13C(double a1)
{
  return sub_1DE857D28(a1);
}

uint64_t (*sub_1DE87B160(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 32);
  return sub_1DE87B18C;
}

uint64_t sub_1DE87B18C(double *a1)
{
  return sub_1DE857D28(*a1);
}

double sub_1DE87B1B8()
{
  return 0.0;
}

void sub_1DE87B1C0(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE87B1C8(double a1)
{
  return sub_1DE857D44(a1);
}

uint64_t (*sub_1DE87B1EC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 40);
  return sub_1DE87B218;
}

uint64_t sub_1DE87B218(double *a1)
{
  return sub_1DE857D44(*a1);
}

unint64_t sub_1DE87B244(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65706D614478616DLL;
      break;
    case 2:
      unint64_t result = 0x746E65764578616DLL;
      break;
    case 3:
      unint64_t result = 0x65726F63536E696DLL;
      break;
    case 4:
      unint64_t result = 0x70784565726F6373;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE87B350()
{
  return sub_1DE87B244(*v0);
}

uint64_t sub_1DE87B358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89C830(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE87B380()
{
  return 0;
}

void sub_1DE87B38C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DE87B398(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BDB0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE87B3D4(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BDB0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE87B410(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C788);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v14 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BDB0();
  sub_1DE8E1C10();
  uint64_t v17 = v10;
  HIBYTE(v16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C798);
  sub_1DE88CB54(&qword_1EAC0C7A0, &qword_1EAC0C798);
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v17 = v9;
    HIBYTE(v16) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7A8);
    sub_1DE88CB54(&qword_1EAC0C7B0, &qword_1EAC0C7A8);
    sub_1DE8E1A40();
    uint64_t v17 = v11;
    HIBYTE(v16) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7B8);
    sub_1DE88CB54(&qword_1EAC0C7C0, &qword_1EAC0C7B8);
    sub_1DE8E1A40();
    uint64_t v17 = v13;
    HIBYTE(v16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7C8);
    sub_1DE88CB54(&qword_1EAC0C7D0, &qword_1EAC0C7C8);
    sub_1DE8E1A40();
    uint64_t v17 = v12;
    HIBYTE(v16) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7D8);
    sub_1DE88CB54(&qword_1EAC0C7E0, &qword_1EAC0C7D8);
    sub_1DE8E1A40();
    uint64_t v17 = v14;
    HIBYTE(v16) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7E8);
    sub_1DE88CB54(&qword_1EAC0C7F0, &qword_1EAC0C7E8);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE87B7D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BDB0();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C798);
    char v18 = 0;
    sub_1DE88CB54(&qword_1EAC0C800, &qword_1EAC0C798);
    sub_1DE8E1930();
    uint64_t v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7A8);
    char v18 = 1;
    sub_1DE88CB54(&qword_1EAC0C808, &qword_1EAC0C7A8);
    sub_1DE8E1930();
    uint64_t v11 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7B8);
    char v18 = 2;
    sub_1DE88CB54(&qword_1EAC0C810, &qword_1EAC0C7B8);
    sub_1DE8E1930();
    uint64_t v12 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7C8);
    char v18 = 3;
    sub_1DE88CB54(&qword_1EAC0C818, &qword_1EAC0C7C8);
    sub_1DE8E1930();
    uint64_t v13 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7D8);
    char v18 = 4;
    sub_1DE88CB54(&qword_1EAC0C820, &qword_1EAC0C7D8);
    sub_1DE8E1930();
    uint64_t v15 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C7E8);
    char v18 = 5;
    sub_1DE88CB54(&qword_1EAC0C828, &qword_1EAC0C7E8);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v16 = v19;
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v15;
    a2[5] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE87BBE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE87B7D4(a1, a2);
}

uint64_t sub_1DE87BBF8(void *a1)
{
  return sub_1DE87B410(a1);
}

double sub_1DE87BC14()
{
  return 0.05;
}

void sub_1DE87BC20(void *a1@<X8>)
{
  *a1 = 0x3FA999999999999ALL;
}

void (*sub_1DE87BC38(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE87BC64;
}

void sub_1DE87BC64(double *a1)
{
}

uint64_t sub_1DE87BC8C()
{
  return 0;
}

void sub_1DE87BC94(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE87BC9C()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1DE87BCA4(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

unsigned char *(*sub_1DE87BCAC(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 8);
  return sub_1DE87BCD8;
}

unsigned char *sub_1DE87BCD8(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 8) = result[8];
  return result;
}

double sub_1DE87BCE8()
{
  return 1.0;
}

void sub_1DE87BCF0(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE87BCFC()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1DE87BD04(double a1)
{
  return sub_1DE857F40(a1);
}

uint64_t (*sub_1DE87BD28(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE87BD54;
}

uint64_t sub_1DE87BD54(double *a1)
{
  return sub_1DE857F40(*a1);
}

uint64_t sub_1DE87BD80()
{
  return 0;
}

void sub_1DE87BD88(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE87BD90()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1DE87BD98(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

unsigned char *(*sub_1DE87BDA0(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 24);
  return sub_1DE87BDCC;
}

unsigned char *sub_1DE87BDCC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 24) = result[8];
  return result;
}

double sub_1DE87BDDC()
{
  return 1.0;
}

void sub_1DE87BDE4(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE87BDF0()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1DE87BDF8(double a1)
{
  return sub_1DE857F5C(a1);
}

uint64_t (*sub_1DE87BE1C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 32);
  return sub_1DE87BE48;
}

uint64_t sub_1DE87BE48(double *a1)
{
  return sub_1DE857F5C(*a1);
}

double sub_1DE87BE74()
{
  return 0.2;
}

void sub_1DE87BE80(void *a1@<X8>)
{
  *a1 = 0x3FC999999999999ALL;
}

double sub_1DE87BE94()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1DE87BE9C(double a1)
{
  return sub_1DE857F78(a1);
}

uint64_t (*sub_1DE87BEC0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 40);
  return sub_1DE87BEEC;
}

uint64_t sub_1DE87BEEC(double *a1)
{
  return sub_1DE857F78(*a1);
}

double sub_1DE87BF18()
{
  return 5.0;
}

void sub_1DE87BF20(void *a1@<X8>)
{
  *a1 = 0x4014000000000000;
}

double sub_1DE87BF2C()
{
  return *(double *)(v0 + 48);
}

void sub_1DE87BF34(double a1)
{
}

void (*sub_1DE87BF58(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 48);
  return sub_1DE87BF84;
}

void sub_1DE87BF84(double *a1)
{
}

double sub_1DE87BFB0()
{
  return 0.0;
}

void sub_1DE87BFB8(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87BFC0()
{
  return *(double *)(v0 + 56);
}

uint64_t sub_1DE87BFC8(double a1)
{
  return sub_1DE858160(a1);
}

uint64_t (*sub_1DE87BFEC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 56);
  return sub_1DE87C018;
}

uint64_t sub_1DE87C018(double *a1)
{
  return sub_1DE858160(*a1);
}

double sub_1DE87C044()
{
  return 0.0;
}

void sub_1DE87C04C(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87C054()
{
  return *(double *)(v0 + 64);
}

uint64_t sub_1DE87C05C(double a1)
{
  return sub_1DE85817C(a1);
}

uint64_t (*sub_1DE87C080(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 64);
  return sub_1DE87C0AC;
}

uint64_t sub_1DE87C0AC(double *a1)
{
  return sub_1DE85817C(*a1);
}

double sub_1DE87C0D8()
{
  return 2.0;
}

void sub_1DE87C0E0(void *a1@<X8>)
{
  *a1 = 0x4000000000000000;
}

double sub_1DE87C0EC()
{
  return *(double *)(v0 + 72);
}

uint64_t sub_1DE87C0F4(double a1)
{
  return sub_1DE858198(a1);
}

uint64_t (*sub_1DE87C118(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 72);
  return sub_1DE87C144;
}

uint64_t sub_1DE87C144(double *a1)
{
  return sub_1DE858198(*a1);
}

double sub_1DE87C170()
{
  return 2.0;
}

void sub_1DE87C178(void *a1@<X8>)
{
  *a1 = 0x4000000000000000;
}

double sub_1DE87C184()
{
  return *(double *)(v0 + 80);
}

uint64_t sub_1DE87C18C(double a1)
{
  return sub_1DE8581B4(a1);
}

uint64_t (*sub_1DE87C1B0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 80);
  return sub_1DE87C1DC;
}

uint64_t sub_1DE87C1DC(double *a1)
{
  return sub_1DE8581B4(*a1);
}

double sub_1DE87C208()
{
  return 0.3;
}

void sub_1DE87C218(void *a1@<X8>)
{
  *a1 = 0x3FD3333333333333;
}

double sub_1DE87C228()
{
  return *(double *)(v0 + 88);
}

uint64_t sub_1DE87C230(double a1)
{
  return sub_1DE8581D0(a1);
}

uint64_t (*sub_1DE87C254(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 88);
  return sub_1DE87C280;
}

uint64_t sub_1DE87C280(double *a1)
{
  return sub_1DE8581D0(*a1);
}

uint64_t sub_1DE87C2AC()
{
  return 1;
}

void sub_1DE87C2B4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE87C2C0()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_1DE87C2C8(uint64_t result)
{
  *(unsigned char *)(v1 + 96) = result;
  return result;
}

unsigned char *(*sub_1DE87C2D0(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 96);
  return sub_1DE89F624;
}

uint64_t sub_1DE87C2FC()
{
  return 0;
}

void sub_1DE87C304(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE87C30C()
{
  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t sub_1DE87C314(uint64_t result)
{
  *(unsigned char *)(v1 + 97) = result;
  return result;
}

unsigned char *(*sub_1DE87C31C(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 97);
  return sub_1DE87C348;
}

unsigned char *sub_1DE87C348(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 97) = result[8];
  return result;
}

uint64_t sub_1DE87C358()
{
  return 0;
}

void sub_1DE87C360(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE87C368()
{
  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t sub_1DE87C370(uint64_t result)
{
  *(unsigned char *)(v1 + 98) = result;
  return result;
}

unsigned char *(*sub_1DE87C378(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 98);
  return sub_1DE87C3A4;
}

unsigned char *sub_1DE87C3A4(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 98) = result[8];
  return result;
}

unint64_t sub_1DE87C3B4(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0x6E6F6974756C6964;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0x65576C61626F6C67;
      break;
    case 6:
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0x46676E6964646170;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x6269726373627573;
      break;
    case 12:
      unint64_t result = 0xD000000000000023;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE87C578()
{
  return sub_1DE87C3B4(*v0);
}

uint64_t sub_1DE87C580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89CB30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE87C5A8()
{
  return 0;
}

void sub_1DE87C5B4(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1DE87C5C0(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BE04();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE87C5FC(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BE04();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE87C638(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C830);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  int v29 = *((unsigned __int8 *)v1 + 8);
  uint64_t v28 = v1[2];
  int v27 = *((unsigned __int8 *)v1 + 24);
  uint64_t v10 = v1[5];
  uint64_t v26 = v1[4];
  uint64_t v12 = v1[6];
  uint64_t v11 = v1[7];
  uint64_t v14 = v1[8];
  uint64_t v13 = v1[9];
  uint64_t v16 = v1[10];
  uint64_t v15 = v1[11];
  int v17 = *((unsigned __int8 *)v1 + 96);
  int v24 = *((unsigned __int8 *)v1 + 97);
  int v25 = v17;
  int v18 = *((unsigned __int8 *)v1 + 98);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BE04();
  uint64_t v19 = v4;
  sub_1DE8E1C10();
  uint64_t v31 = v9;
  char v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C840);
  sub_1DE88CB54(&qword_1EAC0C848, &qword_1EAC0C840);
  sub_1DE8E1A40();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v20 = v28;
  char v21 = v27;
  HIDWORD(v23) = v18;
  LOBYTE(v31) = v29;
  char v30 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C850);
  sub_1DE88CB54(&qword_1EAC0C858, &qword_1EAC0C850);
  sub_1DE8E1A40();
  uint64_t v31 = v20;
  char v30 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C860);
  sub_1DE88CB54(&qword_1EAC0C868, &qword_1EAC0C860);
  sub_1DE8E1A40();
  LOBYTE(v31) = v21;
  char v30 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C870);
  sub_1DE88CB54(&qword_1EAC0C878, &qword_1EAC0C870);
  sub_1DE8E1A40();
  uint64_t v31 = v26;
  char v30 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C880);
  sub_1DE88CB54(&qword_1EAC0C888, &qword_1EAC0C880);
  sub_1DE8E1A40();
  uint64_t v31 = v10;
  char v30 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C890);
  sub_1DE88CB54(&qword_1EAC0C898, &qword_1EAC0C890);
  sub_1DE8E1A40();
  uint64_t v31 = v12;
  char v30 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8A0);
  sub_1DE88CB54(&qword_1EAC0C8A8, &qword_1EAC0C8A0);
  sub_1DE8E1A40();
  uint64_t v31 = v11;
  char v30 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8B0);
  sub_1DE88CB54(&qword_1EAC0C8B8, &qword_1EAC0C8B0);
  sub_1DE8E1A40();
  uint64_t v31 = v14;
  char v30 = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8C0);
  sub_1DE88CB54(&qword_1EAC0C8C8, &qword_1EAC0C8C0);
  sub_1DE8E1A40();
  uint64_t v31 = v13;
  char v30 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8D0);
  sub_1DE88CB54(&qword_1EAC0C8D8, &qword_1EAC0C8D0);
  sub_1DE8E1A40();
  uint64_t v31 = v16;
  char v30 = 10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8E0);
  sub_1DE88CB54(&qword_1EAC0C8E8, &qword_1EAC0C8E0);
  sub_1DE8E1A40();
  uint64_t v31 = v15;
  char v30 = 11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8F0);
  sub_1DE88CB54(&qword_1EAC0C8F8, &qword_1EAC0C8F0);
  sub_1DE8E1A40();
  LOBYTE(v31) = v25;
  char v30 = 12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C900);
  sub_1DE88CB54(&qword_1EAC0C908, &qword_1EAC0C900);
  sub_1DE8E1A40();
  LOBYTE(v31) = v24;
  char v30 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C910);
  sub_1DE88CB54(&qword_1EAC0C918, &qword_1EAC0C910);
  sub_1DE8E1A40();
  LOBYTE(v31) = BYTE4(v23);
  char v30 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C920);
  sub_1DE88CB54(&qword_1EAC0C928, &qword_1EAC0C920);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v19);
}

uint64_t sub_1DE87CE5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C930);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BE04();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C840);
    char v29 = 0;
    sub_1DE88CB54(&qword_1EAC0C938, &qword_1EAC0C840);
    sub_1DE8E1930();
    uint64_t v10 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C850);
    char v29 = 1;
    sub_1DE88CB54(&qword_1EAC0C940, &qword_1EAC0C850);
    sub_1DE8E1930();
    int v11 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C860);
    char v29 = 2;
    sub_1DE88CB54(&qword_1EAC0C948, &qword_1EAC0C860);
    sub_1DE8E1930();
    uint64_t v12 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C870);
    char v29 = 3;
    sub_1DE88CB54(&qword_1EAC0C950, &qword_1EAC0C870);
    sub_1DE8E1930();
    int v28 = v11;
    int v13 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C880);
    char v29 = 4;
    sub_1DE88CB54(&qword_1EAC0C958, &qword_1EAC0C880);
    sub_1DE8E1930();
    int v27 = v13;
    uint64_t v14 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C890);
    char v29 = 5;
    sub_1DE88CB54(&qword_1EAC0C960, &qword_1EAC0C890);
    sub_1DE8E1930();
    uint64_t v15 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8A0);
    char v29 = 6;
    sub_1DE88CB54(&qword_1EAC0C968, &qword_1EAC0C8A0);
    sub_1DE8E1930();
    uint64_t v16 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8B0);
    char v29 = 7;
    sub_1DE88CB54(&qword_1EAC0C970, &qword_1EAC0C8B0);
    sub_1DE8E1930();
    uint64_t v17 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8C0);
    char v29 = 8;
    sub_1DE88CB54(&qword_1EAC0C978, &qword_1EAC0C8C0);
    sub_1DE8E1930();
    uint64_t v18 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8D0);
    char v29 = 9;
    sub_1DE88CB54(&qword_1EAC0C980, &qword_1EAC0C8D0);
    sub_1DE8E1930();
    uint64_t v19 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8E0);
    char v29 = 10;
    sub_1DE88CB54(&qword_1EAC0C988, &qword_1EAC0C8E0);
    sub_1DE8E1930();
    uint64_t v26 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C8F0);
    char v29 = 11;
    sub_1DE88CB54(&qword_1EAC0C990, &qword_1EAC0C8F0);
    sub_1DE8E1930();
    uint64_t v25 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C900);
    char v29 = 12;
    sub_1DE88CB54(&qword_1EAC0C998, &qword_1EAC0C900);
    sub_1DE8E1930();
    LOBYTE(v13) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C910);
    char v29 = 13;
    sub_1DE88CB54(&qword_1EAC0C9A0, &qword_1EAC0C910);
    sub_1DE8E1930();
    int v24 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C920);
    char v29 = 14;
    sub_1DE88CB54(&qword_1EAC0C9A8, &qword_1EAC0C920);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v21 = v30;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v28;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v27;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v17;
    *(void *)(a2 + 64) = v18;
    *(void *)(a2 + 72) = v19;
    uint64_t v22 = v25;
    *(void *)(a2 + 80) = v26;
    *(void *)(a2 + 88) = v22;
    *(unsigned char *)(a2 + 96) = v13;
    *(unsigned char *)(a2 + 97) = v24;
    *(unsigned char *)(a2 + 98) = v21;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE87D6AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE87CE5C(a1, a2);
}

uint64_t sub_1DE87D6C4(void *a1)
{
  return sub_1DE87C638(a1);
}

double sub_1DE87D6E0()
{
  return 1.1;
}

void sub_1DE87D6EC(void *a1@<X8>)
{
  *a1 = 0x3FF199999999999ALL;
}

double sub_1DE87D700()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE87D70C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE87D738;
}

uint64_t sub_1DE87D738(double *a1)
{
  return sub_1DE8583B8(*a1);
}

double sub_1DE87D760()
{
  return 1.1;
}

void sub_1DE87D76C(void *a1@<X8>)
{
  *a1 = 0x3FF199999999999ALL;
}

double sub_1DE87D780()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1DE87D788(double a1)
{
  return sub_1DE8583D4(a1);
}

uint64_t (*sub_1DE87D7AC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE87D7D8;
}

uint64_t sub_1DE87D7D8(double *a1)
{
  return sub_1DE8583D4(*a1);
}

double sub_1DE87D804()
{
  return 1.1;
}

void sub_1DE87D810(void *a1@<X8>)
{
  *a1 = 0x3FF199999999999ALL;
}

double sub_1DE87D824()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1DE87D82C(double a1)
{
  return sub_1DE8583F0(a1);
}

uint64_t (*sub_1DE87D850(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE87D87C;
}

uint64_t sub_1DE87D87C(double *a1)
{
  return sub_1DE8583F0(*a1);
}

double sub_1DE87D8A8()
{
  return 0.0;
}

void sub_1DE87D8B0(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87D8B8()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1DE87D8C0(double a1)
{
  return sub_1DE85840C(a1);
}

uint64_t (*sub_1DE87D8E4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 24);
  return sub_1DE87D910;
}

uint64_t sub_1DE87D910(double *a1)
{
  return sub_1DE85840C(*a1);
}

double sub_1DE87D93C()
{
  return 1.0;
}

void sub_1DE87D944(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE87D950()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1DE87D958(double a1)
{
  return sub_1DE858428(a1);
}

uint64_t (*sub_1DE87D97C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 32);
  return sub_1DE87D9A8;
}

uint64_t sub_1DE87D9A8(double *a1)
{
  return sub_1DE858428(*a1);
}

double sub_1DE87D9D4()
{
  return 1.1;
}

void sub_1DE87D9E0(void *a1@<X8>)
{
  *a1 = 0x3FF199999999999ALL;
}

double sub_1DE87D9F4()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1DE87D9FC(double a1)
{
  return sub_1DE858444(a1);
}

uint64_t (*sub_1DE87DA20(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 40);
  return sub_1DE87DA4C;
}

uint64_t sub_1DE87DA4C(double *a1)
{
  return sub_1DE858444(*a1);
}

unint64_t sub_1DE87DA78(char a1)
{
  unint64_t result = 0x6C754D6F69647561;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE87DB58()
{
  return sub_1DE87DA78(*v0);
}

uint64_t sub_1DE87DB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89D168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE87DB88()
{
  return 0;
}

void sub_1DE87DB94(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DE87DBA0(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BE58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE87DBDC(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BE58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE87DC18(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v13 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BE58();
  sub_1DE8E1C10();
  uint64_t v17 = v10;
  HIBYTE(v16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9C0);
  sub_1DE88CB54(&qword_1EAC0C9C8, &qword_1EAC0C9C0);
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v17 = v9;
    HIBYTE(v16) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9D0);
    sub_1DE88CB54(&qword_1EAC0C9D8, &qword_1EAC0C9D0);
    sub_1DE8E1A40();
    uint64_t v17 = v12;
    HIBYTE(v16) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9E0);
    sub_1DE88CB54(&qword_1EAC0C9E8, &qword_1EAC0C9E0);
    sub_1DE8E1A40();
    uint64_t v17 = v11;
    HIBYTE(v16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9F0);
    sub_1DE88CB54(&qword_1EAC0C9F8, &qword_1EAC0C9F0);
    sub_1DE8E1A40();
    uint64_t v17 = v14;
    HIBYTE(v16) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA00);
    sub_1DE88CB54(&qword_1EAC0CA08, &qword_1EAC0CA00);
    sub_1DE8E1A40();
    uint64_t v17 = v13;
    HIBYTE(v16) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA10);
    sub_1DE88CB54(&qword_1EAC0CA18, &qword_1EAC0CA10);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE87DFD0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BE58();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9C0);
    HIBYTE(v17) = 0;
    sub_1DE88CB54(&qword_1EAC0CA28, &qword_1EAC0C9C0);
    sub_1DE8E1930();
    uint64_t v10 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9D0);
    HIBYTE(v17) = 1;
    sub_1DE88CB54(&qword_1EAC0CA30, &qword_1EAC0C9D0);
    sub_1DE8E1930();
    uint64_t v11 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9E0);
    HIBYTE(v17) = 2;
    sub_1DE88CB54(&qword_1EAC0CA38, &qword_1EAC0C9E0);
    sub_1DE8E1930();
    uint64_t v12 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C9F0);
    HIBYTE(v17) = 3;
    sub_1DE88CB54(&qword_1EAC0CA40, &qword_1EAC0C9F0);
    sub_1DE8E1930();
    uint64_t v13 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA00);
    HIBYTE(v17) = 4;
    sub_1DE88CB54(&qword_1EAC0CA48, &qword_1EAC0CA00);
    sub_1DE8E1930();
    uint64_t v15 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA10);
    HIBYTE(v17) = 5;
    sub_1DE88CB54(&qword_1EAC0CA50, &qword_1EAC0CA10);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v16 = v18;
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v15;
    a2[5] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE87E3E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE87DFD0(a1, a2);
}

uint64_t sub_1DE87E3F8(void *a1)
{
  return sub_1DE87DC18(a1);
}

uint64_t sub_1DE87E414()
{
  return 0;
}

void sub_1DE87E41C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE87E424()
{
  return *v0;
}

uint64_t sub_1DE87E42C(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*sub_1DE87E434(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *v1;
  return sub_1DE87E460;
}

uint64_t sub_1DE87E460(uint64_t result)
{
  **(unsigned char **)uint64_t result = *(unsigned char *)(result + 8);
  return result;
}

double sub_1DE87E470()
{
  return 0.0;
}

void sub_1DE87E478(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87E480()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1DE87E488(double a1)
{
  return sub_1DE858854(a1);
}

uint64_t (*sub_1DE87E4AC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE87E4D8;
}

uint64_t sub_1DE87E4D8(double *a1)
{
  return sub_1DE858854(*a1);
}

double sub_1DE87E504()
{
  return 0.0;
}

void sub_1DE87E50C(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87E514()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1DE87E51C(double a1)
{
  return sub_1DE858870(a1);
}

uint64_t (*sub_1DE87E540(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE87E56C;
}

uint64_t sub_1DE87E56C(double *a1)
{
  return sub_1DE858870(*a1);
}

double sub_1DE87E598@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DE87E5AC()
{
  return 1;
}

void sub_1DE87E5B4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE87E5C0()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1DE87E5C8(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

unsigned char *(*sub_1DE87E5D0(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 48);
  return sub_1DE87E5FC;
}

unsigned char *sub_1DE87E5FC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 48) = result[8];
  return result;
}

double sub_1DE87E60C@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(double *)(a1 + 16) = result;
  return result;
}

double sub_1DE87E620()
{
  return 0.5;
}

void sub_1DE87E628(void *a1@<X8>)
{
  *a1 = 0x3FE0000000000000;
}

double sub_1DE87E634()
{
  return *(double *)(v0 + 80);
}

uint64_t sub_1DE87E63C(double a1)
{
  return sub_1DE85888C(a1);
}

uint64_t (*sub_1DE87E660(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 80);
  return sub_1DE87E68C;
}

uint64_t sub_1DE87E68C(double *a1)
{
  return sub_1DE85888C(*a1);
}

double sub_1DE87E6B8()
{
  return 0.0;
}

void sub_1DE87E6C0(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87E6C8()
{
  return *(double *)(v0 + 88);
}

uint64_t sub_1DE87E6D0(double a1)
{
  return sub_1DE858A70(a1);
}

uint64_t (*sub_1DE87E6F4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 88);
  return sub_1DE87E720;
}

uint64_t sub_1DE87E720(double *a1)
{
  return sub_1DE858A70(*a1);
}

double sub_1DE87E74C()
{
  return 1.0;
}

void sub_1DE87E754(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE87E760()
{
  return *(double *)(v0 + 96);
}

uint64_t sub_1DE87E768(double a1)
{
  return sub_1DE858A8C(a1);
}

uint64_t (*sub_1DE87E78C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 96);
  return sub_1DE87E7B8;
}

uint64_t sub_1DE87E7B8(double *a1)
{
  return sub_1DE858A8C(*a1);
}

double sub_1DE87E7E4()
{
  return 0.0;
}

void sub_1DE87E7EC(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87E7F4()
{
  return *(double *)(v0 + 104);
}

uint64_t sub_1DE87E7FC(double a1)
{
  return sub_1DE858AA8(a1);
}

uint64_t (*sub_1DE87E820(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 104);
  return sub_1DE87E84C;
}

uint64_t sub_1DE87E84C(double *a1)
{
  return sub_1DE858AA8(*a1);
}

uint64_t sub_1DE87E878()
{
  return 1;
}

void sub_1DE87E880(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE87E88C()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1DE87E894(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

unsigned char *(*sub_1DE87E89C(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 112);
  return sub_1DE87E8C8;
}

unsigned char *sub_1DE87E8C8(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 112) = result[8];
  return result;
}

double sub_1DE87E8D8()
{
  return 0.1;
}

void sub_1DE87E8E4(void *a1@<X8>)
{
  *a1 = 0x3FB999999999999ALL;
}

double sub_1DE87E8F8()
{
  return *(double *)(v0 + 120);
}

uint64_t sub_1DE87E900(double a1)
{
  return sub_1DE858AC4(a1);
}

uint64_t (*sub_1DE87E924(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 120);
  return sub_1DE87E950;
}

uint64_t sub_1DE87E950(double *a1)
{
  return sub_1DE858AC4(*a1);
}

double sub_1DE87E97C()
{
  return 2.0;
}

void sub_1DE87E984(void *a1@<X8>)
{
  *a1 = 0x4000000000000000;
}

double sub_1DE87E990()
{
  return *(double *)(v0 + 128);
}

uint64_t sub_1DE87E998(double a1)
{
  return sub_1DE858CB4(a1);
}

uint64_t (*sub_1DE87E9BC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 128);
  return sub_1DE87E9E8;
}

uint64_t sub_1DE87E9E8(double *a1)
{
  return sub_1DE858CB4(*a1);
}

double sub_1DE87EA14()
{
  return 1.0;
}

void sub_1DE87EA1C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE87EA28()
{
  return *(double *)(v0 + 136);
}

uint64_t sub_1DE87EA30(double a1)
{
  return sub_1DE858CD0(a1);
}

uint64_t (*sub_1DE87EA54(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 136);
  return sub_1DE87EA80;
}

uint64_t sub_1DE87EA80(double *a1)
{
  return sub_1DE858CD0(*a1);
}

double sub_1DE87EAAC()
{
  return 0.06;
}

void sub_1DE87EAB8(void *a1@<X8>)
{
  *a1 = 0x3FAEB851EB851EB8;
}

double sub_1DE87EAD0()
{
  return *(double *)(v0 + 144);
}

void sub_1DE87EAD8(double a1)
{
}

void (*sub_1DE87EAFC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 144);
  return sub_1DE87EB28;
}

void sub_1DE87EB28(double *a1)
{
}

double sub_1DE87EB54()
{
  return 0.0;
}

void sub_1DE87EB5C(void *a1@<X8>)
{
  *a1 = 0;
}

double sub_1DE87EB64()
{
  return *(double *)(v0 + 152);
}

uint64_t sub_1DE87EB6C(double a1)
{
  return sub_1DE858ED0(a1);
}

uint64_t (*sub_1DE87EB90(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 152);
  return sub_1DE87EBBC;
}

uint64_t sub_1DE87EBBC(double *a1)
{
  return sub_1DE858ED0(*a1);
}

uint64_t sub_1DE87EBE8()
{
  return 1;
}

void sub_1DE87EBF0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE87EBFC()
{
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t sub_1DE87EC04(uint64_t result)
{
  *(unsigned char *)(v1 + 160) = result;
  return result;
}

unsigned char *(*sub_1DE87EC0C(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 160);
  return sub_1DE87EC38;
}

unsigned char *sub_1DE87EC38(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 160) = result[8];
  return result;
}

double sub_1DE87EC48()
{
  return 2.0;
}

void sub_1DE87EC50(void *a1@<X8>)
{
  *a1 = 0x4000000000000000;
}

double sub_1DE87EC5C()
{
  return *(double *)(v0 + 168);
}

uint64_t sub_1DE87EC64(double a1)
{
  return sub_1DE858EEC(a1);
}

uint64_t (*sub_1DE87EC88(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 168);
  return sub_1DE87ECB4;
}

uint64_t sub_1DE87ECB4(double *a1)
{
  return sub_1DE858EEC(*a1);
}

double sub_1DE87ECE0()
{
  return 1.0;
}

void sub_1DE87ECE8(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE87ECF4()
{
  return *(double *)(v0 + 176);
}

uint64_t sub_1DE87ECFC(double a1)
{
  return sub_1DE858F08(a1);
}

uint64_t (*sub_1DE87ED20(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 176);
  return sub_1DE87ED4C;
}

uint64_t sub_1DE87ED4C(double *a1)
{
  return sub_1DE858F08(*a1);
}

unint64_t sub_1DE87ED7C(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x46746C7561666564;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0x6F6C466863746566;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000026;
      break;
    case 9:
      unint64_t result = 0x696C7069746C756DLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      unint64_t result = 0xD000000000000015;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 17:
      unint64_t result = 0xD000000000000011;
      break;
    case 18:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE87EF80()
{
  return sub_1DE87ED7C(*v0);
}

uint64_t sub_1DE87EF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89D3DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE87EFB0()
{
  return 0;
}

void sub_1DE87EFBC(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1DE87EFC8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BEAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE87F004(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BEAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE87F040(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v45 = *((void *)v1 + 1);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v42 = *((void *)v1 + 3);
  uint64_t v43 = v9;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v40 = *((void *)v1 + 5);
  uint64_t v41 = v10;
  LODWORD(v44) = v1[48];
  uint64_t v11 = *((void *)v1 + 7);
  uint64_t v38 = *((void *)v1 + 8);
  uint64_t v39 = v11;
  uint64_t v37 = *((void *)v1 + 9);
  uint64_t v36 = *((void *)v1 + 10);
  uint64_t v35 = *((void *)v1 + 11);
  uint64_t v12 = *((void *)v1 + 13);
  uint64_t v34 = *((void *)v1 + 12);
  int v50 = v1[112];
  uint64_t v13 = *((void *)v1 + 15);
  uint64_t v14 = *((void *)v1 + 16);
  uint64_t v16 = *((void *)v1 + 17);
  uint64_t v15 = *((void *)v1 + 18);
  uint64_t v17 = *((void *)v1 + 19);
  char v18 = v1[160];
  uint64_t v20 = *((void *)v1 + 21);
  uint64_t v19 = *((void *)v1 + 22);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BEAC();
  sub_1DE8E1C10();
  LOBYTE(v47) = v8;
  char v51 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA68);
  sub_1DE88CB54(&qword_1EAC0CA70, &qword_1EAC0CA68);
  uint64_t v21 = v46;
  sub_1DE8E1A40();
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  char v22 = (char)v44;
  uint64_t v46 = v12;
  char v23 = v50;
  uint64_t v33 = v13;
  uint64_t v32 = v14;
  uint64_t v31 = v16;
  uint64_t v30 = v15;
  uint64_t v29 = v17;
  uint64_t v28 = v20;
  uint64_t v27 = v19;
  uint64_t v47 = v45;
  char v51 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA78);
  sub_1DE88CB54(&qword_1EAC0CA80, &qword_1EAC0CA78);
  sub_1DE8E1A40();
  uint64_t v47 = v43;
  char v51 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA88);
  sub_1DE88CB54(&qword_1EAC0CA90, &qword_1EAC0CA88);
  sub_1DE8E1A40();
  uint64_t v47 = v42;
  uint64_t v48 = v41;
  uint64_t v49 = v40;
  char v51 = 3;
  sub_1DE88BF00();
  sub_1DE8E1A40();
  LOBYTE(v47) = v22;
  char v51 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAA0);
  char v44 = v7;
  sub_1DE88CB54(&qword_1EAC0CAA8, &qword_1EAC0CAA0);
  uint64_t v45 = v3;
  sub_1DE8E1A40();
  uint64_t v47 = v39;
  uint64_t v48 = v38;
  uint64_t v49 = v37;
  char v51 = 5;
  sub_1DE8E1A40();
  uint64_t v47 = v36;
  char v51 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAB0);
  sub_1DE88CB54(&qword_1EAC0CAB8, &qword_1EAC0CAB0);
  sub_1DE8E1A40();
  uint64_t v47 = v35;
  char v51 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAC0);
  sub_1DE88CB54(&qword_1EAC0CAC8, &qword_1EAC0CAC0);
  sub_1DE8E1A40();
  uint64_t v47 = v34;
  char v51 = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAD0);
  sub_1DE88CB54(&qword_1EAC0CAD8, &qword_1EAC0CAD0);
  sub_1DE8E1A40();
  uint64_t v47 = v46;
  char v51 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAE0);
  sub_1DE88CB54(&qword_1EAC0CAE8, &qword_1EAC0CAE0);
  sub_1DE8E1A40();
  LOBYTE(v47) = v23;
  char v51 = 10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAF0);
  sub_1DE88CB54(&qword_1EAC0CAF8, &qword_1EAC0CAF0);
  sub_1DE8E1A40();
  uint64_t v47 = v33;
  char v51 = 11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB00);
  sub_1DE88CB54(&qword_1EAC0CB08, &qword_1EAC0CB00);
  sub_1DE8E1A40();
  uint64_t v47 = v32;
  char v51 = 12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB10);
  sub_1DE88CB54(&qword_1EAC0CB18, &qword_1EAC0CB10);
  sub_1DE8E1A40();
  uint64_t v47 = v31;
  char v51 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB20);
  sub_1DE88CB54(&qword_1EAC0CB28, &qword_1EAC0CB20);
  sub_1DE8E1A40();
  uint64_t v47 = v30;
  char v51 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB30);
  sub_1DE88CB54(&qword_1EAC0CB38, &qword_1EAC0CB30);
  sub_1DE8E1A40();
  uint64_t v47 = v29;
  char v51 = 15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB40);
  sub_1DE88CB54(&qword_1EAC0CB48, &qword_1EAC0CB40);
  sub_1DE8E1A40();
  LOBYTE(v47) = v18;
  char v51 = 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB50);
  sub_1DE88CB54(&qword_1EAC0CB58, &qword_1EAC0CB50);
  sub_1DE8E1A40();
  uint64_t v47 = v28;
  char v51 = 17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB60);
  sub_1DE88CB54(&qword_1EAC0CB68, &qword_1EAC0CB60);
  sub_1DE8E1A40();
  uint64_t v47 = v27;
  char v51 = 18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB70);
  sub_1DE88CB54(&qword_1EAC0CB78, &qword_1EAC0CB70);
  uint64_t v25 = v44;
  uint64_t v24 = v45;
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v25, v24);
}

uint64_t sub_1DE87FA80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BEAC();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA68);
    char v41 = 0;
    sub_1DE88CB54(&qword_1EAC0CB88, &qword_1EAC0CA68);
    sub_1DE8E1930();
    int v10 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA78);
    char v41 = 1;
    sub_1DE88CB54(&qword_1EAC0CB90, &qword_1EAC0CA78);
    sub_1DE8E1930();
    uint64_t v11 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CA88);
    char v41 = 2;
    sub_1DE88CB54(&qword_1EAC0CB98, &qword_1EAC0CA88);
    sub_1DE8E1930();
    uint64_t v12 = v37;
    char v41 = 3;
    sub_1DE88BF54();
    sub_1DE8E1930();
    int v40 = v10;
    uint64_t v13 = v37;
    uint64_t v14 = v38;
    uint64_t v15 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAA0);
    char v41 = 4;
    sub_1DE88CB54(&qword_1EAC0CBA8, &qword_1EAC0CAA0);
    sub_1DE8E1930();
    LOBYTE(v10) = v37;
    char v41 = 5;
    sub_1DE8E1930();
    uint64_t v16 = v37;
    uint64_t v17 = v38;
    uint64_t v18 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAB0);
    char v41 = 6;
    sub_1DE88CB54(&qword_1EAC0CBB0, &qword_1EAC0CAB0);
    sub_1DE8E1930();
    uint64_t v36 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAC0);
    char v41 = 7;
    sub_1DE88CB54(&qword_1EAC0CBB8, &qword_1EAC0CAC0);
    sub_1DE8E1930();
    uint64_t v35 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAD0);
    char v41 = 8;
    sub_1DE88CB54(&qword_1EAC0CBC0, &qword_1EAC0CAD0);
    sub_1DE8E1930();
    uint64_t v34 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAE0);
    char v41 = 9;
    sub_1DE88CB54(&qword_1EAC0CBC8, &qword_1EAC0CAE0);
    sub_1DE8E1930();
    uint64_t v33 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CAF0);
    char v41 = 10;
    sub_1DE88CB54(&qword_1EAC0CBD0, &qword_1EAC0CAF0);
    sub_1DE8E1930();
    int v32 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB00);
    char v41 = 11;
    sub_1DE88CB54(&qword_1EAC0CBD8, &qword_1EAC0CB00);
    sub_1DE8E1930();
    uint64_t v31 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB10);
    char v41 = 12;
    sub_1DE88CB54(&qword_1EAC0CBE0, &qword_1EAC0CB10);
    sub_1DE8E1930();
    uint64_t v30 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB20);
    char v41 = 13;
    sub_1DE88CB54(&qword_1EAC0CBE8, &qword_1EAC0CB20);
    sub_1DE8E1930();
    uint64_t v29 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB30);
    char v41 = 14;
    sub_1DE88CB54(&qword_1EAC0CBF0, &qword_1EAC0CB30);
    sub_1DE8E1930();
    uint64_t v28 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB40);
    char v41 = 15;
    sub_1DE88CB54(&qword_1EAC0CBF8, &qword_1EAC0CB40);
    sub_1DE8E1930();
    uint64_t v27 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB50);
    char v41 = 16;
    sub_1DE88CB54(&qword_1EAC0CC00, &qword_1EAC0CB50);
    sub_1DE8E1930();
    int v26 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB60);
    char v41 = 17;
    sub_1DE88CB54(&qword_1EAC0CC08, &qword_1EAC0CB60);
    sub_1DE8E1930();
    uint64_t v25 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CB70);
    char v41 = 18;
    sub_1DE88CB54(&qword_1EAC0CC10, &qword_1EAC0CB70);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v21 = v36;
    uint64_t v20 = v37;
    *(unsigned char *)a2 = v40;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
    *(unsigned char *)(a2 + 48) = v10;
    *(void *)(a2 + 56) = v16;
    *(void *)(a2 + 64) = v17;
    *(void *)(a2 + 72) = v18;
    *(void *)(a2 + 80) = v21;
    uint64_t v22 = v34;
    *(void *)(a2 + 88) = v35;
    *(void *)(a2 + 96) = v22;
    *(void *)(a2 + 104) = v33;
    *(unsigned char *)(a2 + 112) = v32;
    uint64_t v23 = v30;
    *(void *)(a2 + 120) = v31;
    *(void *)(a2 + 128) = v23;
    uint64_t v24 = v28;
    *(void *)(a2 + 136) = v29;
    *(void *)(a2 + 144) = v24;
    *(void *)(a2 + 152) = v27;
    *(unsigned char *)(a2 + 160) = v26;
    *(void *)(a2 + 168) = v25;
    *(void *)(a2 + 176) = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE880494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE87FA80(a1, a2);
}

uint64_t sub_1DE8804AC(void *a1)
{
  return sub_1DE87F040(a1);
}

double sub_1DE8804C8()
{
  return 0.5;
}

void sub_1DE8804D0(void *a1@<X8>)
{
  *a1 = 0x3FE0000000000000;
}

double sub_1DE8804DC()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE8804E8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE880514;
}

uint64_t sub_1DE880514(double *a1)
{
  return sub_1DE85862C(*a1);
}

double sub_1DE88053C()
{
  return 10.0;
}

void sub_1DE880544(void *a1@<X8>)
{
  *a1 = 0x4024000000000000;
}

double sub_1DE880550()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1DE880558(double a1)
{
  return sub_1DE858650(a1);
}

uint64_t (*sub_1DE88057C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE8805A8;
}

uint64_t sub_1DE8805A8(double *a1)
{
  return sub_1DE858650(*a1);
}

double sub_1DE8805D4()
{
  return 0.1;
}

void sub_1DE8805E0(void *a1@<X8>)
{
  *a1 = 0x3FB999999999999ALL;
}

double sub_1DE8805F4()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1DE8805FC(double a1)
{
  return sub_1DE858834(a1);
}

uint64_t (*sub_1DE880620(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE88064C;
}

uint64_t sub_1DE88064C(double *a1)
{
  return sub_1DE858834(*a1);
}

uint64_t sub_1DE880680()
{
  uint64_t v1 = 0x676E6964646170;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F697270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E656E6F707865;
  }
}

uint64_t sub_1DE8806D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89DB10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE880700()
{
  return 0;
}

void sub_1DE88070C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE880718(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BFA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE880754(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BFA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE880790(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BFA8();
  sub_1DE8E1C10();
  uint64_t v15 = v10;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC28);
  sub_1DE88CB54(&qword_1EAC0CC30, &qword_1EAC0CC28);
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v15 = v9;
    char v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC38);
    sub_1DE88CB54(&qword_1EAC0CC40, &qword_1EAC0CC38);
    sub_1DE8E1A40();
    uint64_t v15 = v11;
    char v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC48);
    sub_1DE88CB54(&qword_1EAC0CC50, &qword_1EAC0CC48);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE8809F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BFA8();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC28);
    char v15 = 0;
    sub_1DE88CB54(&qword_1EAC0CC60, &qword_1EAC0CC28);
    sub_1DE8E1930();
    uint64_t v10 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC38);
    char v15 = 1;
    sub_1DE88CB54(&qword_1EAC0CC68, &qword_1EAC0CC38);
    sub_1DE8E1930();
    uint64_t v12 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC48);
    char v15 = 2;
    sub_1DE88CB54(&qword_1EAC0CC70, &qword_1EAC0CC48);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v13 = v16;
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE880CA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE8809F8(a1, a2);
}

uint64_t sub_1DE880CBC(void *a1)
{
  return sub_1DE880790(a1);
}

double sub_1DE880CD8()
{
  return 0.2;
}

void sub_1DE880CE4(void *a1@<X8>)
{
  *a1 = 0x3FC999999999999ALL;
}

double sub_1DE880CF8()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE880D04(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE880D30;
}

uint64_t sub_1DE880D30(double *a1)
{
  return sub_1DE858F24(*a1);
}

double sub_1DE880D58()
{
  return 0.0;
}

void sub_1DE880D60(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE880D68(double a1)
{
  return sub_1DE859114(a1);
}

uint64_t (*sub_1DE880D8C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE880DB8;
}

uint64_t sub_1DE880DB8(double *a1)
{
  return sub_1DE859114(*a1);
}

double sub_1DE880DE4()
{
  return 2.0;
}

void sub_1DE880DEC(void *a1@<X8>)
{
  *a1 = 0x4000000000000000;
}

uint64_t sub_1DE880DF8(double a1)
{
  return sub_1DE859130(a1);
}

uint64_t (*sub_1DE880E1C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE880E48;
}

uint64_t sub_1DE880E48(double *a1)
{
  return sub_1DE859130(*a1);
}

double sub_1DE880E74()
{
  return 2.0;
}

void sub_1DE880E7C(void *a1@<X8>)
{
  *a1 = 0x4000000000000000;
}

uint64_t sub_1DE880E88(double a1)
{
  return sub_1DE85914C(a1);
}

uint64_t (*sub_1DE880EAC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 24);
  return sub_1DE880ED8;
}

uint64_t sub_1DE880ED8(double *a1)
{
  return sub_1DE85914C(*a1);
}

unint64_t sub_1DE880F04(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE880F90()
{
  return sub_1DE880F04(*v0);
}

uint64_t sub_1DE880F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89DC60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE880FC0()
{
  return 0;
}

void sub_1DE880FCC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE880FD8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BFFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE881014(uint64_t a1)
{
  unint64_t v2 = sub_1DE88BFFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE881050(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC78);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v11 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BFFC();
  sub_1DE8E1C10();
  uint64_t v15 = v10;
  HIBYTE(v14) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC88);
  sub_1DE88CB54(&qword_1EAC0CC90, &qword_1EAC0CC88);
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v15 = v9;
    HIBYTE(v14) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC98);
    sub_1DE88CB54(&qword_1EAC0CCA0, &qword_1EAC0CC98);
    sub_1DE8E1A40();
    uint64_t v15 = v12;
    HIBYTE(v14) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CCA8);
    sub_1DE88CB54(&qword_1EAC0CCB0, &qword_1EAC0CCA8);
    sub_1DE8E1A40();
    uint64_t v15 = v11;
    HIBYTE(v14) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CCB8);
    sub_1DE88CB54(&qword_1EAC0CCC0, &qword_1EAC0CCB8);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE881324@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CCC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88BFFC();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC88);
    HIBYTE(v15) = 0;
    sub_1DE88CB54(&qword_1EAC0CCD0, &qword_1EAC0CC88);
    sub_1DE8E1930();
    uint64_t v10 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CC98);
    HIBYTE(v15) = 1;
    sub_1DE88CB54(&qword_1EAC0CCD8, &qword_1EAC0CC98);
    sub_1DE8E1930();
    uint64_t v11 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CCA8);
    HIBYTE(v15) = 2;
    sub_1DE88CB54(&qword_1EAC0CCE0, &qword_1EAC0CCA8);
    sub_1DE8E1930();
    uint64_t v13 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CCB8);
    HIBYTE(v15) = 3;
    sub_1DE88CB54(&qword_1EAC0CCE8, &qword_1EAC0CCB8);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v14 = v16;
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v13;
    a2[3] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE881648@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE881324(a1, a2);
}

uint64_t sub_1DE881660(void *a1)
{
  return sub_1DE881050(a1);
}

BOOL sub_1DE881678(double *a1, double *a2)
{
  return sub_1DE88AEF4(a1, a2);
}

double sub_1DE881694()
{
  return 1.0;
}

void sub_1DE88169C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8816A8()
{
  return *(double *)v0;
}

uint64_t (*sub_1DE8816B4(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE8816E0;
}

uint64_t sub_1DE8816E0(double *a1)
{
  return sub_1DE85A150(*a1);
}

double sub_1DE881708()
{
  return 5000.0;
}

void sub_1DE881718(void *a1@<X8>)
{
  *a1 = 0x40B3880000000000;
}

double sub_1DE881728()
{
  return *(double *)(v0 + 8);
}

void sub_1DE881730(double a1)
{
}

void (*sub_1DE881754(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE881780;
}

void sub_1DE881780(double *a1)
{
}

double sub_1DE8817AC()
{
  return 2000.0;
}

void sub_1DE8817BC(void *a1@<X8>)
{
  *a1 = 0x409F400000000000;
}

double sub_1DE8817CC()
{
  return *(double *)(v0 + 16);
}

void sub_1DE8817D4(double a1)
{
}

void (*sub_1DE8817F8(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE881824;
}

void sub_1DE881824(double *a1)
{
}

__n128 sub_1DE881850@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 24);
  long long v3 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

double sub_1DE881860()
{
  return 1.0;
}

void sub_1DE881868(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE881874()
{
  return *(double *)(v0 + 56);
}

uint64_t sub_1DE88187C(double a1)
{
  return sub_1DE85A6D4(a1);
}

uint64_t (*sub_1DE8818A0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 56);
  return sub_1DE8818CC;
}

uint64_t sub_1DE8818CC(double *a1)
{
  return sub_1DE85A6D4(*a1);
}

uint64_t sub_1DE8818F8()
{
  return 5;
}

void sub_1DE881900(void *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DE88190C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1DE881914(uint64_t a1)
{
  return sub_1DE85A6F0(a1);
}

uint64_t (*sub_1DE881938(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 64);
  a1[1] = v1;
  return sub_1DE881960;
}

uint64_t sub_1DE881960(uint64_t *a1)
{
  return sub_1DE85A6F0(*a1);
}

BOOL sub_1DE88198C(double *a1, double *a2)
{
  return sub_1DE88C414(a1, a2);
}

unint64_t sub_1DE8819A8(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0x73726F697270;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE881A60()
{
  return sub_1DE8819A8(*v0);
}

uint64_t sub_1DE881A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89DDF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE881A90()
{
  return 0;
}

void sub_1DE881A9C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DE881AA8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C44C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE881AE4(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C44C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE881B20(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CCF0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v13 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v16 = v1[6];
  uint64_t v15 = v1[7];
  uint64_t v17 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C44C();
  sub_1DE8E1C10();
  v19[0] = v10;
  char v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD00);
  sub_1DE88CB54(&qword_1EAC0CD08, &qword_1EAC0CD00);
  sub_1DE8E1A40();
  if (!v2)
  {
    v19[0] = v9;
    char v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD10);
    sub_1DE88CB54(&qword_1EAC0CD18, &qword_1EAC0CD10);
    sub_1DE8E1A40();
    v19[0] = v12;
    char v20 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD20);
    sub_1DE88CB54(&qword_1EAC0CD28, &qword_1EAC0CD20);
    sub_1DE8E1A40();
    v19[0] = v11;
    v19[1] = v13;
    v19[2] = v14;
    v19[3] = v16;
    char v20 = 3;
    sub_1DE88C4A0();
    sub_1DE8E1A40();
    v19[0] = v15;
    char v20 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD38);
    sub_1DE88CB54(&qword_1EAC0CD40, &qword_1EAC0CD38);
    sub_1DE8E1A40();
    v19[0] = v17;
    char v20 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD48);
    sub_1DE88CB54(&qword_1EAC0CD50, &qword_1EAC0CD48);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE881EC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C44C();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD00);
    char v21 = 0;
    sub_1DE88CB54(&qword_1EAC0CD60, &qword_1EAC0CD00);
    sub_1DE8E1930();
    uint64_t v10 = v20[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD10);
    char v21 = 1;
    sub_1DE88CB54(&qword_1EAC0CD68, &qword_1EAC0CD10);
    sub_1DE8E1930();
    uint64_t v11 = v20[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD20);
    char v21 = 2;
    sub_1DE88CB54(&qword_1EAC0CD70, &qword_1EAC0CD20);
    sub_1DE8E1930();
    uint64_t v12 = v20[0];
    char v21 = 3;
    sub_1DE88C4F4();
    sub_1DE8E1930();
    uint64_t v13 = v20[0];
    uint64_t v14 = v20[1];
    uint64_t v15 = v20[2];
    uint64_t v16 = v20[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD38);
    char v21 = 4;
    sub_1DE88CB54(&qword_1EAC0CD80, &qword_1EAC0CD38);
    sub_1DE8E1930();
    uint64_t v18 = v20[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD48);
    char v21 = 5;
    sub_1DE88CB54(&qword_1EAC0CD88, &qword_1EAC0CD48);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v19 = v20[0];
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v14;
    a2[5] = v15;
    a2[6] = v16;
    a2[7] = v18;
    a2[8] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE8822B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE881EC4(a1, a2);
}

uint64_t sub_1DE8822D0(void *a1)
{
  return sub_1DE881B20(a1);
}

uint64_t sub_1DE8822EC(double *a1)
{
  return sub_1DE859F40(*a1, a1[1]);
}

uint64_t (*sub_1DE8822F4(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *v1;
  return sub_1DE882320;
}

uint64_t sub_1DE882320(double *a1)
{
  return sub_1DE859F40(*a1, a1[1]);
}

double sub_1DE882348@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1DE8E7860;
  return result;
}

double sub_1DE882358@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1DE8E7860;
  return result;
}

uint64_t sub_1DE882368(double *a1)
{
  return sub_1DE859F5C(*a1, a1[1]);
}

uint64_t (*sub_1DE882390(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  return sub_1DE8823BC;
}

uint64_t sub_1DE8823BC(double *a1)
{
  return sub_1DE859F5C(*a1, a1[1]);
}

uint64_t sub_1DE8823F0()
{
  if (*v0) {
    return 0x6C6172656E6567;
  }
  else {
    return 0x656E696C65736162;
  }
}

uint64_t sub_1DE88242C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89E044(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE882454()
{
  return 0;
}

void sub_1DE882460(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE88246C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C548();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8824A8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C548();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8824E4(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CD90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v10 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C548();
  sub_1DE8E1C10();
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CDA0);
  sub_1DE88CB54(&qword_1EAC0CDA8, &qword_1EAC0CDA0);
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v16 = v11;
    uint64_t v17 = v12;
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CDB0);
    sub_1DE88CB54(&qword_1EAC0CDB8, &qword_1EAC0CDB0);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE8826E0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CDC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C548();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CDA0);
    char v14 = 0;
    sub_1DE88CB54(&qword_1EAC0CDC8, &qword_1EAC0CDA0);
    sub_1DE8E1930();
    long long v10 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CDB0);
    char v14 = 1;
    sub_1DE88CB54(&qword_1EAC0CDD0, &qword_1EAC0CDB0);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    long long v11 = v13;
    *a2 = v10;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE88291C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1DE8826E0(a1, a2);
}

uint64_t sub_1DE882934(void *a1)
{
  return sub_1DE8824E4(a1);
}

BOOL sub_1DE88294C(double *a1, double *a2)
{
  return sub_1DE88C414(a1, a2);
}

double sub_1DE882968()
{
  return *(double *)v0;
}

double sub_1DE882970()
{
  return *(double *)(v0 + 8);
}

BOOL sub_1DE882978(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1DE8829AC()
{
  if (*v0) {
    return 0x6973736572706D69;
  }
  else {
    return 0x736B63696C63;
  }
}

uint64_t sub_1DE8829EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89EFE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE882A14()
{
  return 0;
}

void sub_1DE882A20(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE882A2C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C59C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE882A68(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C59C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE882AA4(void *a1)
{
  return sub_1DE888608(a1, &qword_1EAC0CDD8, (void (*)(void))sub_1DE88C59C);
}

uint64_t sub_1DE882AE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE8887B8(a1, &qword_1EAC0CDE8, (void (*)(void))sub_1DE88C59C, a2);
}

uint64_t sub_1DE882B1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE882AE0(a1, a2);
}

uint64_t sub_1DE882B34(void *a1)
{
  return sub_1DE882AA4(a1);
}

BOOL sub_1DE882B4C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

unint64_t sub_1DE882B78()
{
  return sub_1DE85EE9C(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1DE882B84@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DE85EE9C(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t sub_1DE882BB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1DE882BC0(void *a1))(unint64_t *a1, char a2)
{
  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_1DE882C0C;
}

uint64_t sub_1DE882C0C(unint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_1DE85A8BC(*a1);
  }
  unint64_t v2 = swift_bridgeObjectRetain();
  sub_1DE85A8BC(v2);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DE882C64(unint64_t *a1, uint64_t *a2)
{
  return sub_1DE867968(*a1, *a2);
}

uint64_t sub_1DE882C70()
{
  return 1;
}

uint64_t sub_1DE882C7C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE882CC0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE882CEC()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE882D2C()
{
  return 0xD000000000000010;
}

uint64_t sub_1DE882D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89E138(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE882D74()
{
  return 0;
}

void sub_1DE882D80(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE882D8C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C860();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE882DC8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C860();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE882E04(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CDF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C860();
  sub_1DE8E1C10();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CE00);
  sub_1DE88CB54(&qword_1EAC0CE08, &qword_1EAC0CE00);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DE882F7C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CE10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C860();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CE00);
    sub_1DE88CB54(&qword_1EAC0CE18, &qword_1EAC0CE00);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE883114@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE882F7C(a1, a2);
}

uint64_t sub_1DE88312C(void *a1)
{
  return sub_1DE882E04(a1);
}

unint64_t sub_1DE883144(unint64_t *a1, uint64_t *a2)
{
  return sub_1DE867968(*a1, *a2);
}

uint64_t sub_1DE883150()
{
  return 0;
}

void sub_1DE883158(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE883160()
{
  return *v0;
}

uint64_t sub_1DE883168(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*sub_1DE883170(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *v1;
  return sub_1DE89F780;
}

double sub_1DE88319C()
{
  return 1.0;
}

void sub_1DE8831A4(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8831B0()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1DE8831B8(double a1)
{
  return sub_1DE85C2B4(a1);
}

uint64_t (*sub_1DE8831DC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE883208;
}

uint64_t sub_1DE883208(double *a1)
{
  return sub_1DE85C2B4(*a1);
}

uint64_t sub_1DE883234()
{
  return 100;
}

void sub_1DE88323C(void *a1@<X8>)
{
  *a1 = 100;
}

uint64_t sub_1DE883248()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DE883250(uint64_t a1)
{
  return sub_1DE85C2D0(a1);
}

uint64_t (*sub_1DE883274(void *a1))(uint64_t *a1)
{
  *a1 = *(void *)(v1 + 16);
  a1[1] = v1;
  return sub_1DE88329C;
}

uint64_t sub_1DE88329C(uint64_t *a1)
{
  return sub_1DE85C2D0(*a1);
}

double sub_1DE8832C4()
{
  return 1.0;
}

void sub_1DE8832CC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE8832D8()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1DE8832E0(double a1)
{
  return sub_1DE85C49C(a1);
}

uint64_t (*sub_1DE883304(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 24);
  return sub_1DE883330;
}

uint64_t sub_1DE883330(double *a1)
{
  return sub_1DE85C49C(*a1);
}

double sub_1DE88335C()
{
  return 1.0;
}

void sub_1DE883364(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE883370()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1DE883378(double a1)
{
  return sub_1DE85C4B8(a1);
}

uint64_t (*sub_1DE88339C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 32);
  return sub_1DE8833C8;
}

uint64_t sub_1DE8833C8(double *a1)
{
  return sub_1DE85C4B8(*a1);
}

uint64_t sub_1DE8833F4()
{
  return 0;
}

void sub_1DE8833FC(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE883404()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1DE88340C(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

unsigned char *(*sub_1DE883414(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 40);
  return sub_1DE883440;
}

unsigned char *sub_1DE883440(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 40) = result[8];
  return result;
}

double sub_1DE883450()
{
  return 1.0;
}

void sub_1DE883458(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

double sub_1DE883464()
{
  return *(double *)(v0 + 48);
}

uint64_t sub_1DE88346C(double a1)
{
  return sub_1DE85C4D4(a1);
}

uint64_t (*sub_1DE883490(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 48);
  return sub_1DE8834BC;
}

uint64_t sub_1DE8834BC(double *a1)
{
  return sub_1DE85C4D4(*a1);
}

uint64_t sub_1DE8834E8()
{
  return 0;
}

void sub_1DE8834F0(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE8834F8()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1DE883500(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

unsigned char *(*sub_1DE883508(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 56);
  return sub_1DE883534;
}

unsigned char *sub_1DE883534(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 56) = result[8];
  return result;
}

double sub_1DE883544@<D0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  sub_1DE85C2B4(a6);
  sub_1DE85C2D0(a2);
  sub_1DE85C49C(a7);
  sub_1DE85C4B8(a8);
  sub_1DE85C4D4(a9);
  double result = a9;
  *(unsigned char *)a5 = a1;
  *(double *)(a5 + 8) = a6;
  *(void *)(a5 + 16) = a2;
  *(double *)(a5 + 24) = a7;
  *(double *)(a5 + 32) = a8;
  *(unsigned char *)(a5 + 40) = a3;
  *(double *)(a5 + 48) = a9;
  *(unsigned char *)(a5 + 56) = a4;
  return result;
}

unint64_t sub_1DE883628(char a1)
{
  unint64_t result = 0x7361427441706163;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0x476E4974696D696CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6C754D65726F6373;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x6867696557676174;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE883768()
{
  return sub_1DE883628(*v0);
}

uint64_t sub_1DE883770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89E1C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE883798()
{
  return 0;
}

void sub_1DE8837A4(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DE8837B0(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C8B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8837EC(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C8B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE883828(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9778);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  uint64_t v21 = *((void *)v1 + 2);
  uint64_t v12 = *((void *)v1 + 3);
  uint64_t v11 = *((void *)v1 + 4);
  int v23 = v1[40];
  uint64_t v13 = *((void *)v1 + 6);
  int v20 = v1[56];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C8B4();
  sub_1DE8E1C10();
  LOBYTE(v22) = v9;
  char v14 = v8;
  char v24 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA91F8);
  sub_1DE88CB54(&qword_1EBEA91F0, &qword_1EBEA91F8);
  sub_1DE8E1A40();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v16 = v21;
  char v17 = v23;
  char v18 = v20;
  uint64_t v22 = v10;
  char v24 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9278);
  sub_1DE88CB54(&qword_1EBEA9270, &qword_1EBEA9278);
  sub_1DE8E1A40();
  uint64_t v22 = v16;
  char v24 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9258);
  sub_1DE88CB54(&qword_1EBEA9250, &qword_1EBEA9258);
  sub_1DE8E1A40();
  uint64_t v22 = v12;
  char v24 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9238);
  sub_1DE88CB54(&qword_1EBEA9230, &qword_1EBEA9238);
  sub_1DE8E1A40();
  uint64_t v22 = v11;
  char v24 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9268);
  sub_1DE88CB54(&qword_1EBEA9260, &qword_1EBEA9268);
  sub_1DE8E1A40();
  LOBYTE(v22) = v17;
  char v24 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9208);
  sub_1DE88CB54(&qword_1EBEA9200, &qword_1EBEA9208);
  sub_1DE8E1A40();
  uint64_t v22 = v13;
  char v24 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9248);
  sub_1DE88CB54(&qword_1EBEA9240, &qword_1EBEA9248);
  sub_1DE8E1A40();
  LOBYTE(v22) = v18;
  char v24 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9218);
  sub_1DE88CB54(&qword_1EBEA9210, &qword_1EBEA9218);
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

uint64_t sub_1DE883CE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CE20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C8B4();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA91F8);
    char v20 = 0;
    sub_1DE88CB54(&qword_1EAC0CE28, &qword_1EBEA91F8);
    sub_1DE8E1930();
    char v10 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9278);
    char v20 = 1;
    sub_1DE88CB54(&qword_1EAC0CE30, &qword_1EBEA9278);
    sub_1DE8E1930();
    uint64_t v11 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9258);
    char v20 = 2;
    sub_1DE88CB54(&qword_1EAC0CE38, &qword_1EBEA9258);
    sub_1DE8E1930();
    uint64_t v17 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9238);
    char v20 = 3;
    sub_1DE88CB54(&qword_1EAC0CE40, &qword_1EBEA9238);
    sub_1DE8E1930();
    uint64_t v12 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9268);
    char v20 = 4;
    sub_1DE88CB54(&qword_1EAC0CE48, &qword_1EBEA9268);
    sub_1DE8E1930();
    uint64_t v13 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9208);
    char v20 = 5;
    sub_1DE88CB54(&qword_1EAC0CE50, &qword_1EBEA9208);
    sub_1DE8E1930();
    int v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9248);
    char v20 = 6;
    sub_1DE88CB54(&qword_1EAC0CE58, &qword_1EBEA9248);
    sub_1DE8E1930();
    uint64_t v15 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9218);
    char v20 = 7;
    sub_1DE88CB54(&qword_1EAC0CE60, &qword_1EBEA9218);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v16 = v18;
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v12;
    *(void *)(a2 + 32) = v13;
    *(unsigned char *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v15;
    *(unsigned char *)(a2 + 56) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE8841EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE883CE4(a1, a2);
}

uint64_t sub_1DE884204(void *a1)
{
  return sub_1DE883828(a1);
}

double sub_1DE884220@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(double *)(a1 + 16) = result;
  return result;
}

void *sub_1DE884234@<X0>(void *a1@<X8>)
{
  return memcpy(a1, (const void *)(v1 + 24), 0x220uLL);
}

BOOL sub_1DE88424C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

unint64_t sub_1DE884288()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1DE8842C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89E554(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8842F0()
{
  return 0;
}

void sub_1DE8842FC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE884308(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C908();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE884344(uint64_t a1)
{
  unint64_t v2 = sub_1DE88C908();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE884380(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CE68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  char v9 = (char *)&v13[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *v3;
  uint64_t v10 = *((void *)v3 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C908();
  sub_1DE8E1C10();
  v13[0] = v12;
  *(void *)&v13[1] = v10;
  char v14 = 0;
  sub_1DE88C95C();
  sub_1DE8E1A40();
  if (!v2)
  {
    memcpy(v13, (char *)v3 + 24, sizeof(v13));
    char v14 = 1;
    sub_1DE88C9B0();
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DE88453C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v16 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CE88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88C908();
  sub_1DE8E1BF0();
  if (!v2)
  {
    uint64_t v9 = v5;
    uint64_t v10 = v16;
    char v18 = 0;
    sub_1DE88CA04();
    sub_1DE8E1930();
    uint64_t v11 = v17[0];
    uint64_t v12 = v17[1];
    uint64_t v13 = v17[2];
    char v18 = 1;
    sub_1DE88CA58();
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v4);
    memcpy(v10 + 3, v17, 0x220uLL);
    *uint64_t v10 = v11;
    v10[1] = v12;
    void v10[2] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE88473C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE88453C(a1, a2);
}

uint64_t sub_1DE884754(void *a1)
{
  return sub_1DE884380(a1);
}

double sub_1DE884770()
{
  return 0.99;
}

void sub_1DE88477C(void *a1@<X8>)
{
  *a1 = 0x3FEFAE147AE147AELL;
}

double sub_1DE884794()
{
  return *(double *)v0;
}

void (*sub_1DE8847A0(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DE8847CC;
}

void sub_1DE8847CC(double *a1)
{
}

double sub_1DE8847F4()
{
  return 1.0;
}

void sub_1DE8847FC(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE884808(double a1)
{
  return sub_1DE85ACE8(a1);
}

uint64_t (*sub_1DE88482C(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_1DE884858;
}

uint64_t sub_1DE884858(double *a1)
{
  return sub_1DE85ACE8(*a1);
}

double sub_1DE884884()
{
  return 1.0;
}

void sub_1DE88488C(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
}

uint64_t sub_1DE884898(double a1)
{
  return sub_1DE85AD04(a1);
}

uint64_t (*sub_1DE8848BC(void *a1))(double *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 16);
  return sub_1DE8848E8;
}

uint64_t sub_1DE8848E8(double *a1)
{
  return sub_1DE85AD04(*a1);
}

uint64_t sub_1DE88491C()
{
  unint64_t v1 = 0xD00000000000001CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461527961636564;
  }
}

uint64_t sub_1DE884988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89E640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8849B0()
{
  return 0;
}

void sub_1DE8849BC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE8849C8(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CAAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE884A04(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CAAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE884A40(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CEA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88CAAC();
  sub_1DE8E1C10();
  uint64_t v15 = v10;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CEB0);
  sub_1DE88CB54(&qword_1EAC0CEB8, &qword_1EAC0CEB0);
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v15 = v9;
    char v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CEC0);
    sub_1DE88CB54(&qword_1EAC0CEC8, &qword_1EAC0CEC0);
    sub_1DE8E1A40();
    uint64_t v15 = v11;
    char v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CED0);
    sub_1DE88CB54(&qword_1EAC0CED8, &qword_1EAC0CED0);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE884CA8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CEE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88CAAC();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CEB0);
    char v15 = 0;
    sub_1DE88CB54(&qword_1EAC0CEE8, &qword_1EAC0CEB0);
    sub_1DE8E1930();
    uint64_t v10 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CEC0);
    char v15 = 1;
    sub_1DE88CB54(&qword_1EAC0CEF0, &qword_1EAC0CEC0);
    sub_1DE8E1930();
    uint64_t v12 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CED0);
    char v15 = 2;
    sub_1DE88CB54(&qword_1EAC0CEF8, &qword_1EAC0CED0);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v13 = v16;
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE884F54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE884CA8(a1, a2);
}

uint64_t sub_1DE884F6C(void *a1)
{
  return sub_1DE884A40(a1);
}

BOOL sub_1DE884F88(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

__n128 sub_1DE884FB8@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #1.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE884FC4@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #1.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE884FD0@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 sub_1DE884FDC@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1DE884FE8(double *a1)
{
  return sub_1DE85AD20(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE885014(double *a1)
{
  return sub_1DE85AD20(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885020(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = v1[1];
  *(_OWORD *)long long v3 = *v1;
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885074;
}

void sub_1DE885074(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85AD20(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

double sub_1DE8850B8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1DE8E41D0;
  a1[1] = xmmword_1DE8E41D0;
  return result;
}

double sub_1DE8850C8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1DE8E41D0;
  a1[1] = xmmword_1DE8E41D0;
  return result;
}

__n128 sub_1DE8850D8@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE8850E4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE8850F0(double *a1)
{
  return sub_1DE85AD3C(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE88511C(double *a1)
{
  return sub_1DE85AD3C(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885148(void *a1))(double **a1, uint64_t a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 32);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE88519C;
}

void sub_1DE88519C(double **a1, uint64_t a2)
{
}

void sub_1DE8851B4(double **a1, uint64_t a2, void (*a3)(double, double, double, double))
{
  long long v3 = *a1;
  a3(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v3);
}

double sub_1DE885200@<D0>(_OWORD *a1@<X8>)
{
  double result = 1.0;
  *a1 = xmmword_1DE8E7870;
  a1[1] = xmmword_1DE8E7870;
  return result;
}

double sub_1DE885210@<D0>(_OWORD *a1@<X8>)
{
  double result = 1.0;
  *a1 = xmmword_1DE8E7870;
  a1[1] = xmmword_1DE8E7870;
  return result;
}

__n128 sub_1DE885220@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 64);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE88522C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 80);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE885238(double *a1)
{
}

void sub_1DE885264(double *a1)
{
}

void (*sub_1DE885290(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 64);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE8852E4;
}

void sub_1DE8852E4(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85AD58(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE88532C@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 96);
  long long v3 = *(_OWORD *)(v1 + 112);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885338@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 112);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE885344(double *a1)
{
  return sub_1DE85AF68(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE885370(double *a1)
{
  return sub_1DE85AF68(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE88539C(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 96);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE8853F0;
}

void sub_1DE8853F0(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85AF68(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885438@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #3.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE885448@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #3.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE885458@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 128);
  long long v3 = *(_OWORD *)(v1 + 144);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885464@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 128);
  long long v3 = *(_OWORD *)(a1 + 144);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE885470(double *a1)
{
}

void sub_1DE88549C(double *a1)
{
}

void (*sub_1DE8854C8(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 128);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE88551C;
}

void sub_1DE88551C(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85AF84(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885564@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE885574@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE885584@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 160);
  long long v3 = *(_OWORD *)(v1 + 176);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885590@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 176);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE88559C(double *a1)
{
}

void sub_1DE8855C8(double *a1)
{
}

void (*sub_1DE8855F4(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 160);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885648;
}

void sub_1DE885648(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B194(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885690@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 192);
  long long v3 = *(_OWORD *)(v1 + 208);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1DE88569C(double *a1)
{
  return sub_1DE85B3A4(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE8856C8(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 192);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE88571C;
}

void sub_1DE88571C(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B3A4(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885764@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #2.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE885774@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #2.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  return result;
}

__n128 sub_1DE885784@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 224);
  long long v3 = *(_OWORD *)(v1 + 240);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885790@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE88579C(double *a1)
{
  return sub_1DE85B3C0(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE8857C8(double *a1)
{
  return sub_1DE85B3C0(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE8857F4(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 240);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 224);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885848;
}

void sub_1DE885848(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B3C0(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

double sub_1DE885890@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1DE8E7880;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

double sub_1DE8858A4@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1DE8E7880;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

__n128 sub_1DE8858B8@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 256);
  long long v3 = *(_OWORD *)(v1 + 272);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE8858C4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 272);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE8858D0(double *a1)
{
  return sub_1DE85B3DC(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE8858FC(double *a1)
{
  return sub_1DE85B3DC(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885928(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 272);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 256);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE88597C;
}

void sub_1DE88597C(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B3DC(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE8859C4@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 288);
  long long v3 = *(_OWORD *)(v1 + 304);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE8859D0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 304);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE8859DC(double *a1)
{
  return sub_1DE85B3F8(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE885A08(double *a1)
{
  return sub_1DE85B3F8(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885A34(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 304);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 288);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885A88;
}

void sub_1DE885A88(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B3F8(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885AD0@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 320);
  long long v3 = *(_OWORD *)(v1 + 336);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885ADC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 320);
  long long v3 = *(_OWORD *)(a1 + 336);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE885AE8(double *a1)
{
  return sub_1DE85B414(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE885B14(double *a1)
{
  return sub_1DE85B414(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885B40(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 336);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 320);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885B94;
}

void sub_1DE885B94(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B414(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885BDC@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 352);
  long long v3 = *(_OWORD *)(v1 + 368);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885BE8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 352);
  long long v3 = *(_OWORD *)(a1 + 368);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE885BF4(double *a1)
{
  return sub_1DE85B634(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE885C20(double *a1)
{
  return sub_1DE85B634(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885C4C(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 368);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 352);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885CA0;
}

void sub_1DE885CA0(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B634(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885CE8@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE885CF4@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #10.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE885D00@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 384);
  long long v3 = *(_OWORD *)(v1 + 400);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885D0C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 384);
  long long v3 = *(_OWORD *)(a1 + 400);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE885D18(double *a1)
{
}

void sub_1DE885D44(double *a1)
{
}

void (*sub_1DE885D70(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 384);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885DC4;
}

void sub_1DE885DC4(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85B854(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885E0C@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #3.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE885E18@<Q0>(__n128 *a1@<X8>)
{
  __asm { FMOV            V0.2D, #3.0 }
  *a1 = result;
  a1[1] = result;
  return result;
}

__n128 sub_1DE885E24@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 416);
  long long v3 = *(_OWORD *)(v1 + 432);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885E30@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 416);
  long long v3 = *(_OWORD *)(a1 + 432);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE885E3C(double *a1)
{
}

void sub_1DE885E68(double *a1)
{
}

void (*sub_1DE885E94(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 432);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 416);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885EE8;
}

void sub_1DE885EE8(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85BA60(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE885F30@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 448);
  long long v3 = *(_OWORD *)(v1 + 464);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE885F3C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 448);
  long long v3 = *(_OWORD *)(a1 + 464);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE885F48(double *a1)
{
  return sub_1DE85BC6C(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE885F74(double *a1)
{
  return sub_1DE85BC6C(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE885FA0(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 464);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 448);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE885FF4;
}

void sub_1DE885FF4(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85BC6C(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

__n128 sub_1DE88603C@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 480);
  long long v3 = *(_OWORD *)(v1 + 496);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE886048@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 480);
  long long v3 = *(_OWORD *)(a1 + 496);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE886054(double *a1)
{
  return sub_1DE85BE88(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DE886080(double *a1)
{
  return sub_1DE85BE88(*a1, a1[1], a1[2], a1[3]);
}

void (*sub_1DE8860AC(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 496);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 480);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE886100;
}

void sub_1DE886100(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85BE88(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

double sub_1DE886148@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_1DE886154@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

__n128 sub_1DE886160@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 512);
  long long v3 = *(_OWORD *)(v1 + 528);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1DE88616C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 512);
  long long v3 = *(_OWORD *)(a1 + 528);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE886178(double *a1)
{
}

void sub_1DE8861A4(double *a1)
{
}

void (*sub_1DE8861D0(void *a1))(double **a1)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  long long v4 = *(_OWORD *)(v1 + 528);
  *(_OWORD *)long long v3 = *(_OWORD *)(v1 + 512);
  *((_OWORD *)v3 + 1) = v4;
  return sub_1DE886224;
}

void sub_1DE886224(double **a1)
{
  uint64_t v1 = *a1;
  sub_1DE85C0AC(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

uint64_t sub_1DE88626C(char a1)
{
  uint64_t result = 0x52656C6369747261;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x53656C6369747261;
      break;
    case 2:
      uint64_t result = 0x56656C6369747261;
      break;
    case 3:
      uint64_t result = 0x656B696C736964;
      break;
    case 4:
      uint64_t result = 0x7765695664656566;
      break;
    case 5:
      uint64_t result = 0x776F6C6C6F66;
      break;
    case 6:
      uint64_t result = 0x65726F6E6769;
      break;
    case 7:
      uint64_t result = 1701538156;
      break;
    case 8:
      uint64_t result = 1702131053;
      break;
    case 9:
      uint64_t result = 0x6465766173;
      break;
    case 10:
      uint64_t result = 0x6572616873;
      break;
    case 11:
      uint64_t result = 0x61547374726F7073;
      break;
    case 12:
      uint64_t result = 0x6E69466B63617274;
      break;
    case 13:
      uint64_t result = 0x73694C6B63617274;
      break;
    case 14:
      uint64_t result = 0x7369566B63617274;
      break;
    case 15:
      uint64_t result = 0x776F6C6C6F666E75;
      break;
    case 16:
      uint64_t result = 0x6574756D6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE886498()
{
  return sub_1DE88626C(*v0);
}

uint64_t sub_1DE8864A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89E79C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8864C8()
{
  return 0;
}

void sub_1DE8864D4(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1DE8864E0(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CB00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE88651C(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CB00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE886558(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v74 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v72 = *((void *)v1 + 3);
  uint64_t v73 = v9;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v11 = *((void *)v1 + 5);
  uint64_t v70 = *((void *)v1 + 6);
  uint64_t v71 = v10;
  uint64_t v68 = *((void *)v1 + 7);
  uint64_t v69 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v66 = *((void *)v1 + 9);
  uint64_t v67 = v12;
  uint64_t v65 = *((void *)v1 + 10);
  uint64_t v64 = *((void *)v1 + 11);
  uint64_t v63 = *((void *)v1 + 12);
  uint64_t v62 = *((void *)v1 + 13);
  uint64_t v61 = *((void *)v1 + 14);
  uint64_t v60 = *((void *)v1 + 15);
  uint64_t v59 = *((void *)v1 + 16);
  uint64_t v58 = *((void *)v1 + 17);
  uint64_t v57 = *((void *)v1 + 18);
  uint64_t v56 = *((void *)v1 + 19);
  uint64_t v55 = *((void *)v1 + 20);
  uint64_t v54 = *((void *)v1 + 21);
  uint64_t v53 = *((void *)v1 + 22);
  uint64_t v52 = *((void *)v1 + 23);
  uint64_t v51 = *((void *)v1 + 24);
  uint64_t v50 = *((void *)v1 + 25);
  uint64_t v49 = *((void *)v1 + 26);
  uint64_t v48 = *((void *)v1 + 27);
  uint64_t v47 = *((void *)v1 + 28);
  uint64_t v46 = *((void *)v1 + 29);
  uint64_t v45 = *((void *)v1 + 30);
  uint64_t v44 = *((void *)v1 + 31);
  uint64_t v13 = a1[3];
  long long v41 = v1[16];
  uint64_t v42 = *((void *)v1 + 34);
  uint64_t v43 = *((void *)v1 + 35);
  long long v38 = v1[18];
  uint64_t v39 = *((void *)v1 + 38);
  uint64_t v40 = *((void *)v1 + 39);
  long long v35 = v1[20];
  uint64_t v36 = *((void *)v1 + 42);
  uint64_t v37 = *((void *)v1 + 43);
  long long v32 = v1[22];
  uint64_t v33 = *((void *)v1 + 46);
  uint64_t v34 = *((void *)v1 + 47);
  long long v29 = v1[24];
  uint64_t v30 = *((void *)v1 + 50);
  uint64_t v31 = *((void *)v1 + 51);
  long long v26 = v1[26];
  uint64_t v27 = *((void *)v1 + 54);
  uint64_t v28 = *((void *)v1 + 55);
  long long v23 = v1[28];
  uint64_t v24 = *((void *)v1 + 58);
  uint64_t v14 = *((void *)v1 + 60);
  uint64_t v25 = *((void *)v1 + 59);
  uint64_t v16 = *((void *)v1 + 61);
  uint64_t v15 = *((void *)v1 + 62);
  uint64_t v18 = *((void *)v1 + 63);
  uint64_t v17 = *((void *)v1 + 64);
  uint64_t v19 = *((void *)v1 + 65);
  uint64_t v20 = *((void *)v1 + 66);
  uint64_t v21 = *((void *)v1 + 67);
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DE88CB00();
  sub_1DE8E1C10();
  long long v75 = v74;
  uint64_t v76 = v73;
  uint64_t v77 = v72;
  char v78 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF10);
  sub_1DE88CB54(&qword_1EAC0CF18, &qword_1EAC0CF10);
  sub_1DE8E1A40();
  if (!v2)
  {
    *(void *)&long long v75 = v71;
    *((void *)&v75 + 1) = v69;
    uint64_t v76 = v70;
    uint64_t v77 = v68;
    char v78 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF20);
    sub_1DE88CB54(&qword_1EAC0CF28, &qword_1EAC0CF20);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v67;
    *((void *)&v75 + 1) = v66;
    uint64_t v76 = v65;
    uint64_t v77 = v64;
    char v78 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF30);
    sub_1DE88CB54(&qword_1EAC0CF38, &qword_1EAC0CF30);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v63;
    *((void *)&v75 + 1) = v62;
    uint64_t v76 = v61;
    uint64_t v77 = v60;
    char v78 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF40);
    sub_1DE88CB54(&qword_1EAC0CF48, &qword_1EAC0CF40);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v59;
    *((void *)&v75 + 1) = v58;
    uint64_t v76 = v57;
    uint64_t v77 = v56;
    char v78 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF50);
    sub_1DE88CB54(&qword_1EAC0CF58, &qword_1EAC0CF50);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v55;
    *((void *)&v75 + 1) = v54;
    uint64_t v76 = v53;
    uint64_t v77 = v52;
    char v78 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF60);
    sub_1DE88CB54(&qword_1EAC0CF68, &qword_1EAC0CF60);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v51;
    *((void *)&v75 + 1) = v50;
    uint64_t v76 = v49;
    uint64_t v77 = v48;
    char v78 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF70);
    sub_1DE88CB54(&qword_1EAC0CF78, &qword_1EAC0CF70);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v47;
    *((void *)&v75 + 1) = v46;
    uint64_t v76 = v45;
    uint64_t v77 = v44;
    char v78 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF80);
    sub_1DE88CB54(&qword_1EAC0CF88, &qword_1EAC0CF80);
    sub_1DE8E1A40();
    long long v75 = v41;
    uint64_t v76 = v42;
    uint64_t v77 = v43;
    char v78 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF90);
    sub_1DE88CB54(&qword_1EAC0CF98, &qword_1EAC0CF90);
    sub_1DE8E1A40();
    long long v75 = v38;
    uint64_t v76 = v39;
    uint64_t v77 = v40;
    char v78 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFA0);
    sub_1DE88CB54(&qword_1EAC0CFA8, &qword_1EAC0CFA0);
    sub_1DE8E1A40();
    long long v75 = v35;
    uint64_t v76 = v36;
    uint64_t v77 = v37;
    char v78 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFB0);
    sub_1DE88CB54(&qword_1EAC0CFB8, &qword_1EAC0CFB0);
    sub_1DE8E1A40();
    long long v75 = v32;
    uint64_t v76 = v33;
    uint64_t v77 = v34;
    char v78 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFC0);
    sub_1DE88CB54(&qword_1EAC0CFC8, &qword_1EAC0CFC0);
    sub_1DE8E1A40();
    long long v75 = v29;
    uint64_t v76 = v30;
    uint64_t v77 = v31;
    char v78 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFD0);
    sub_1DE88CB54(&qword_1EAC0CFD8, &qword_1EAC0CFD0);
    sub_1DE8E1A40();
    long long v75 = v26;
    uint64_t v76 = v27;
    uint64_t v77 = v28;
    char v78 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFE0);
    sub_1DE88CB54(&qword_1EAC0CFE8, &qword_1EAC0CFE0);
    sub_1DE8E1A40();
    long long v75 = v23;
    uint64_t v76 = v24;
    uint64_t v77 = v25;
    char v78 = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFF0);
    sub_1DE88CB54(&qword_1EAC0CFF8, &qword_1EAC0CFF0);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v14;
    *((void *)&v75 + 1) = v16;
    uint64_t v76 = v15;
    uint64_t v77 = v18;
    char v78 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D000);
    sub_1DE88CB54(&qword_1EAC0D008, &qword_1EAC0D000);
    sub_1DE8E1A40();
    *(void *)&long long v75 = v17;
    *((void *)&v75 + 1) = v19;
    uint64_t v76 = v20;
    uint64_t v77 = v21;
    char v78 = 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D010);
    sub_1DE88CB54(&qword_1EAC0D018, &qword_1EAC0D010);
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE887254@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D020);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88CB00();
  sub_1DE8E1BF0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF10);
    char v110 = 0;
    sub_1DE88CB54(&qword_1EAC0D028, &qword_1EAC0CF10);
    sub_1DE8E1930();
    long long v10 = v108;
    long long v11 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF20);
    char v110 = 1;
    sub_1DE88CB54(&qword_1EAC0D030, &qword_1EAC0CF20);
    sub_1DE8E1930();
    long long v12 = v108;
    long long v13 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF30);
    char v110 = 2;
    sub_1DE88CB54(&qword_1EAC0D038, &qword_1EAC0CF30);
    sub_1DE8E1930();
    uint64_t v104 = *((void *)&v13 + 1);
    uint64_t v105 = v13;
    uint64_t v106 = *((void *)&v12 + 1);
    uint64_t v107 = v12;
    long long v14 = v108;
    long long v15 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF40);
    char v110 = 3;
    sub_1DE88CB54(&qword_1EAC0D040, &qword_1EAC0CF40);
    sub_1DE8E1930();
    uint64_t v100 = *((void *)&v15 + 1);
    uint64_t v101 = v15;
    uint64_t v102 = *((void *)&v14 + 1);
    uint64_t v103 = v14;
    long long v16 = v108;
    long long v17 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF50);
    char v110 = 4;
    sub_1DE88CB54(&qword_1EAC0D048, &qword_1EAC0CF50);
    sub_1DE8E1930();
    uint64_t v96 = *((void *)&v17 + 1);
    uint64_t v97 = v17;
    uint64_t v98 = *((void *)&v16 + 1);
    uint64_t v99 = v16;
    long long v18 = v108;
    long long v19 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF60);
    char v110 = 5;
    sub_1DE88CB54(&qword_1EAC0D050, &qword_1EAC0CF60);
    sub_1DE8E1930();
    uint64_t v92 = *((void *)&v19 + 1);
    uint64_t v93 = v19;
    uint64_t v94 = *((void *)&v18 + 1);
    uint64_t v95 = v18;
    long long v20 = v108;
    long long v21 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF70);
    char v110 = 6;
    sub_1DE88CB54(&qword_1EAC0D058, &qword_1EAC0CF70);
    sub_1DE8E1930();
    uint64_t v90 = *((void *)&v108 + 1);
    uint64_t v91 = v108;
    uint64_t v88 = *((void *)&v109 + 1);
    uint64_t v89 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF80);
    char v110 = 7;
    sub_1DE88CB54(&qword_1EAC0D060, &qword_1EAC0CF80);
    sub_1DE8E1930();
    uint64_t v86 = *((void *)&v108 + 1);
    uint64_t v87 = v108;
    uint64_t v84 = *((void *)&v109 + 1);
    uint64_t v85 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CF90);
    char v110 = 8;
    sub_1DE88CB54(&qword_1EAC0D068, &qword_1EAC0CF90);
    sub_1DE8E1930();
    uint64_t v82 = *((void *)&v108 + 1);
    uint64_t v83 = v108;
    uint64_t v80 = *((void *)&v109 + 1);
    uint64_t v81 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFA0);
    char v110 = 9;
    sub_1DE88CB54(&qword_1EAC0D070, &qword_1EAC0CFA0);
    sub_1DE8E1930();
    uint64_t v78 = *((void *)&v108 + 1);
    uint64_t v79 = v108;
    uint64_t v76 = *((void *)&v109 + 1);
    uint64_t v77 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFB0);
    char v110 = 10;
    sub_1DE88CB54(&qword_1EAC0D078, &qword_1EAC0CFB0);
    sub_1DE8E1930();
    uint64_t v74 = *((void *)&v108 + 1);
    uint64_t v75 = v108;
    uint64_t v72 = *((void *)&v109 + 1);
    uint64_t v73 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFC0);
    char v110 = 11;
    sub_1DE88CB54(&qword_1EAC0D080, &qword_1EAC0CFC0);
    sub_1DE8E1930();
    uint64_t v70 = *((void *)&v108 + 1);
    uint64_t v71 = v108;
    uint64_t v68 = *((void *)&v109 + 1);
    uint64_t v69 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFD0);
    char v110 = 12;
    sub_1DE88CB54(&qword_1EAC0D088, &qword_1EAC0CFD0);
    sub_1DE8E1930();
    uint64_t v66 = *((void *)&v108 + 1);
    uint64_t v67 = v108;
    uint64_t v64 = *((void *)&v109 + 1);
    uint64_t v65 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFE0);
    char v110 = 13;
    sub_1DE88CB54(&qword_1EAC0D090, &qword_1EAC0CFE0);
    sub_1DE8E1930();
    uint64_t v62 = *((void *)&v108 + 1);
    uint64_t v63 = v108;
    uint64_t v60 = *((void *)&v109 + 1);
    uint64_t v61 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0CFF0);
    char v110 = 14;
    sub_1DE88CB54(&qword_1EAC0D098, &qword_1EAC0CFF0);
    sub_1DE8E1930();
    uint64_t v58 = *((void *)&v108 + 1);
    uint64_t v59 = v108;
    uint64_t v56 = *((void *)&v109 + 1);
    uint64_t v57 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D000);
    char v110 = 15;
    sub_1DE88CB54(&qword_1EAC0D0A0, &qword_1EAC0D000);
    sub_1DE8E1930();
    uint64_t v54 = *((void *)&v108 + 1);
    uint64_t v55 = v108;
    uint64_t v52 = *((void *)&v109 + 1);
    uint64_t v53 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D010);
    char v110 = 16;
    sub_1DE88CB54(&qword_1EAC0D0A8, &qword_1EAC0D010);
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(_OWORD *)a2 = v10;
    *(_OWORD *)(a2 + 16) = v11;
    uint64_t v23 = v106;
    *(void *)(a2 + 32) = v107;
    *(void *)(a2 + 40) = v23;
    uint64_t v24 = v104;
    *(void *)(a2 + 48) = v105;
    *(void *)(a2 + 56) = v24;
    uint64_t v25 = v102;
    *(void *)(a2 + 64) = v103;
    *(void *)(a2 + 72) = v25;
    uint64_t v26 = v100;
    *(void *)(a2 + 80) = v101;
    *(void *)(a2 + 88) = v26;
    uint64_t v27 = v98;
    *(void *)(a2 + 96) = v99;
    *(void *)(a2 + 104) = v27;
    uint64_t v28 = v96;
    *(void *)(a2 + 112) = v97;
    *(void *)(a2 + 120) = v28;
    uint64_t v29 = v94;
    *(void *)(a2 + 128) = v95;
    *(void *)(a2 + 136) = v29;
    uint64_t v30 = v92;
    *(void *)(a2 + 144) = v93;
    *(void *)(a2 + 152) = v30;
    *(_OWORD *)(a2 + 160) = v20;
    *(_OWORD *)(a2 + 176) = v21;
    uint64_t v31 = v90;
    *(void *)(a2 + 192) = v91;
    *(void *)(a2 + 200) = v31;
    uint64_t v32 = v88;
    *(void *)(a2 + 208) = v89;
    *(void *)(a2 + 216) = v32;
    uint64_t v33 = v86;
    *(void *)(a2 + 224) = v87;
    *(void *)(a2 + 232) = v33;
    uint64_t v34 = v84;
    *(void *)(a2 + 240) = v85;
    *(void *)(a2 + 248) = v34;
    uint64_t v35 = v82;
    *(void *)(a2 + 256) = v83;
    *(void *)(a2 + 264) = v35;
    uint64_t v36 = v80;
    *(void *)(a2 + 272) = v81;
    *(void *)(a2 + 280) = v36;
    uint64_t v37 = v78;
    *(void *)(a2 + 288) = v79;
    *(void *)(a2 + 296) = v37;
    uint64_t v38 = v76;
    *(void *)(a2 + 304) = v77;
    *(void *)(a2 + 312) = v38;
    uint64_t v39 = v74;
    *(void *)(a2 + 320) = v75;
    *(void *)(a2 + 328) = v39;
    uint64_t v40 = v72;
    *(void *)(a2 + 336) = v73;
    *(void *)(a2 + 344) = v40;
    uint64_t v41 = v70;
    *(void *)(a2 + 352) = v71;
    *(void *)(a2 + 360) = v41;
    uint64_t v42 = v68;
    *(void *)(a2 + 368) = v69;
    *(void *)(a2 + 376) = v42;
    uint64_t v43 = v66;
    *(void *)(a2 + 384) = v67;
    *(void *)(a2 + 392) = v43;
    uint64_t v44 = v64;
    *(void *)(a2 + 400) = v65;
    *(void *)(a2 + 408) = v44;
    uint64_t v45 = v62;
    *(void *)(a2 + 416) = v63;
    *(void *)(a2 + 424) = v45;
    uint64_t v46 = v60;
    *(void *)(a2 + 432) = v61;
    *(void *)(a2 + 440) = v46;
    uint64_t v47 = v58;
    *(void *)(a2 + 448) = v59;
    *(void *)(a2 + 456) = v47;
    uint64_t v48 = v56;
    *(void *)(a2 + 464) = v57;
    *(void *)(a2 + 472) = v48;
    uint64_t v49 = v54;
    *(void *)(a2 + 480) = v55;
    *(void *)(a2 + 488) = v49;
    uint64_t v50 = v52;
    *(void *)(a2 + 496) = v53;
    *(void *)(a2 + 504) = v50;
    long long v51 = v109;
    *(_OWORD *)(a2 + 512) = v108;
    *(_OWORD *)(a2 + 528) = v51;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE887F74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE887254(a1, a2);
}

uint64_t sub_1DE887F8C(void *a1)
{
  return sub_1DE886558(a1);
}

__n128 sub_1DE887FA8@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 sub_1DE887FB4@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

BOOL sub_1DE887FC0(double *a1, double *a2)
{
  return sub_1DE88C414(a1, a2);
}

unint64_t sub_1DE887FE4()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_1DE888024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89EEFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE88804C()
{
  return 0;
}

void sub_1DE888058(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE888064(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CB98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8880A0(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CB98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8880DC(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D0B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v10 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88CB98();
  sub_1DE8E1C10();
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v15 = 0;
  sub_1DE83C004();
  sub_1DE8E1A40();
  if (!v2)
  {
    uint64_t v16 = v11;
    uint64_t v17 = v12;
    char v15 = 1;
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE888278@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D0C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88CB98();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v14 = 0;
    sub_1DE83BFAC();
    sub_1DE8E1930();
    long long v10 = v13;
    char v14 = 1;
    sub_1DE8E1930();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    long long v11 = v13;
    *a2 = v10;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE888454@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1DE888278(a1, a2);
}

uint64_t sub_1DE88846C(void *a1)
{
  return sub_1DE8880DC(a1);
}

BOOL sub_1DE888484(double *a1, double *a2)
{
  return sub_1DE88C414(a1, a2);
}

double sub_1DE8884A0()
{
  return *(double *)v0;
}

uint64_t sub_1DE8884AC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8884F8()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE88853C()
{
  return 0;
}

void sub_1DE888548(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE888554(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CBEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE888590(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CBEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8885CC(void *a1)
{
  return sub_1DE888608(a1, &qword_1EAC0D0C8, (void (*)(void))sub_1DE88CBEC);
}

uint64_t sub_1DE888608(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1DE8E1C10();
  char v14 = 0;
  uint64_t v10 = v12[1];
  sub_1DE8E1A20();
  if (!v10)
  {
    char v13 = 1;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DE88877C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE8887B8(a1, &qword_1EAC0D0D8, (void (*)(void))sub_1DE88CBEC, a2);
}

uint64_t sub_1DE8887B8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  long long v19 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v18 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1DE8E1BF0();
  if (!v4)
  {
    uint64_t v12 = v18;
    long long v11 = v19;
    char v21 = 0;
    sub_1DE8E1910();
    uint64_t v14 = v13;
    char v20 = 1;
    sub_1DE8E1910();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v7);
    *long long v11 = v14;
    v11[1] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE888968@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE88877C(a1, a2);
}

uint64_t sub_1DE888980(void *a1)
{
  return sub_1DE8885CC(a1);
}

unint64_t sub_1DE88899C(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE888A60()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE888AAC()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE888AF0()
{
  return sub_1DE88899C(*v0);
}

uint64_t sub_1DE888AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE89F0EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE888B20()
{
  return 0;
}

void sub_1DE888B2C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1DE888B38(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CC40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE888B74(uint64_t a1)
{
  unint64_t v2 = sub_1DE88CC40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE888BB0(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D0E0);
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v9 = v2[1];
  char v10 = *((unsigned char *)v2 + 16);
  LODWORD(v38) = *((unsigned __int8 *)v2 + 17);
  LODWORD(v37) = *((unsigned __int8 *)v2 + 18);
  uint64_t v11 = v2[3];
  uint64_t v36 = v2[4];
  uint64_t v12 = v2[368];
  uint64_t v33 = v2[369];
  uint64_t v34 = v12;
  uint64_t v13 = v2[370];
  uint64_t v14 = v2[371];
  uint64_t v15 = v2[372];
  uint64_t v16 = v2[373];
  uint64_t v17 = v2[374];
  uint64_t v18 = v2[375];
  uint64_t v19 = v2[376];
  uint64_t v31 = v2[377];
  uint64_t v32 = v19;
  uint64_t v30 = v2[378];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE88CC40();
  char v20 = v7;
  sub_1DE8E1C10();
  v40[0] = v8;
  v40[1] = v9;
  LOBYTE(v40[2]) = v10;
  BYTE1(v40[2]) = v38;
  BYTE2(v40[2]) = v37;
  void v40[3] = v11;
  v40[4] = v36;
  char v41 = 0;
  sub_1DE88CC94();
  uint64_t v21 = v39;
  sub_1DE8E1A40();
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
  }
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  uint64_t v28 = v18;
  uint64_t v29 = v17;
  uint64_t v36 = v16;
  uint64_t v37 = v15;
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  uint64_t v26 = v33;
  uint64_t v25 = v34;
  uint64_t v27 = v35;
  memcpy(v40, v2 + 5, sizeof(v40));
  char v41 = 1;
  sub_1DE850CE8();
  sub_1DE8E1A40();
  memcpy(v40, v2 + 242, 0x3EBuLL);
  char v41 = 2;
  sub_1DE88CCE8();
  sub_1DE8E1A40();
  v40[0] = v25;
  v40[1] = v26;
  v40[2] = v39;
  void v40[3] = v38;
  v40[4] = v37;
  v40[5] = v36;
  v40[6] = v29;
  v40[7] = v28;
  v40[8] = v23;
  char v41 = 3;
  sub_1DE88CD3C();
  sub_1DE8E1A40();
  v40[0] = v24;
  char v41 = 4;
  sub_1DE88CD90();
  sub_1DE8E1A40();
  v40[0] = v30;
  char v41 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9588);
  sub_1DE88CDE4(&qword_1EBEA9590, (void (*)(void))sub_1DE88CE60);
  sub_1DE8E1A40();
  memcpy(v40, v2 + 379, 0x238uLL);
  char v41 = 6;
  sub_1DE88CEB4();
  sub_1DE8E1A40();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v20, v4);
}

uint64_t sub_1DE888FD4(uint64_t a1, uint64_t a2)
{
  long long v3 = (void *)MEMORY[0x1F4188790](a1, a2);
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D118);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  char v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v3[3];
  uint64_t v81 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v11);
  sub_1DE88CC40();
  sub_1DE8E1BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  }
  long long v51 = v5;
  uint64_t v52 = v7;
  LOBYTE(v53[0]) = 0;
  sub_1DE88CF08();
  uint64_t v12 = v6;
  sub_1DE8E1930();
  uint64_t v13 = v54;
  uint64_t v14 = v55;
  int v50 = v56;
  int v15 = BYTE1(v56);
  int v16 = BYTE2(v56);
  uint64_t v17 = v57;
  uint64_t v18 = v58;
  v76[1903] = 1;
  sub_1DE850BA4();
  sub_1DE8E1930();
  int v46 = v16;
  int v47 = v15;
  uint64_t v48 = v17;
  uint64_t v49 = v18;
  memcpy(v76, v77, 0x768uLL);
  memcpy(v80, v77, sizeof(v80));
  v74[1007] = 2;
  sub_1DE84E628((uint64_t)v76);
  sub_1DE88CF5C();
  sub_1DE8E1930();
  memcpy(v74, v75, 0x3EBuLL);
  memcpy(v79, v75, sizeof(v79));
  LOBYTE(v53[0]) = 3;
  sub_1DE88CFB0();
  sub_1DE8E1930();
  uint64_t v44 = v55;
  uint64_t v45 = v54;
  uint64_t v19 = v56;
  uint64_t v20 = v57;
  uint64_t v21 = v58;
  uint64_t v22 = v59[0];
  uint64_t v23 = v59[1];
  uint64_t v24 = v59[2];
  uint64_t v25 = v59[3];
  LOBYTE(v53[0]) = 4;
  sub_1DE88D004();
  sub_1DE8E1930();
  uint64_t v42 = v24;
  uint64_t v43 = v22;
  uint64_t v38 = v21;
  uint64_t v39 = v20;
  uint64_t v40 = v19;
  uint64_t v41 = v23;
  uint64_t v26 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9588);
  LOBYTE(v53[0]) = 5;
  sub_1DE88CDE4(&qword_1EAC0D140, (void (*)(void))sub_1DE88D058);
  swift_bridgeObjectRetain();
  sub_1DE8E1930();
  uint64_t v27 = v54;
  v72[575] = 6;
  sub_1DE88D0AC();
  swift_bridgeObjectRetain();
  sub_1DE8E1930();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v12);
  memcpy(&v53[379], v73, 0x238uLL);
  memcpy(v78, v73, sizeof(v78));
  v53[0] = v13;
  v53[1] = v14;
  LOBYTE(v53[2]) = v50;
  LOBYTE(v12) = v46;
  char v28 = v47;
  BYTE1(v53[2]) = v47;
  BYTE2(v53[2]) = v46;
  uint64_t v29 = v26;
  uint64_t v30 = v48;
  v53[3] = v48;
  v53[4] = v49;
  memcpy(&v53[5], v76, 0x768uLL);
  memcpy(&v53[242], v74, 0x3EBuLL);
  uint64_t v32 = v44;
  uint64_t v31 = v45;
  v53[368] = v45;
  v53[369] = v44;
  uint64_t v34 = v39;
  uint64_t v33 = v40;
  v53[370] = v40;
  v53[371] = v39;
  uint64_t v35 = v38;
  v53[372] = v38;
  v53[373] = v43;
  uint64_t v36 = v41;
  v53[374] = v41;
  v53[375] = v42;
  v53[376] = v25;
  v53[377] = v29;
  v53[378] = v27;
  sub_1DE88D100((uint64_t)v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE850D3C((uint64_t)v76);
  memcpy(v51, v53, 0xE10uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  uint64_t v54 = v13;
  uint64_t v55 = v14;
  LOBYTE(v56) = v50;
  BYTE1(v56) = v28;
  BYTE2(v56) = v12;
  uint64_t v57 = v30;
  uint64_t v58 = v49;
  memcpy(v59, v80, sizeof(v59));
  memcpy(v60, v79, sizeof(v60));
  uint64_t v61 = v31;
  uint64_t v62 = v32;
  uint64_t v63 = v33;
  uint64_t v64 = v34;
  uint64_t v65 = v35;
  uint64_t v66 = v43;
  uint64_t v67 = v36;
  uint64_t v68 = v42;
  uint64_t v69 = v25;
  uint64_t v70 = v29;
  uint64_t v71 = v27;
  memcpy(v72, v78, 0x238uLL);
  return sub_1DE88D208((uint64_t)&v54);
}

uint64_t sub_1DE889700(uint64_t a1, uint64_t a2)
{
  return sub_1DE888FD4(a1, a2);
}

uint64_t sub_1DE889718(void *a1)
{
  return sub_1DE888BB0(a1);
}

void sub_1DE889734(uint64_t a1@<X8>)
{
  if (qword_1EBEA8010 != -1) {
    swift_once();
  }
  v13[0] = xmmword_1EBEA8C30;
  v13[1] = xmmword_1EBEA8C40;
  uint64_t v14 = qword_1EBEA8C50;
  long long v2 = xmmword_1EBEA8C30;
  long long v3 = xmmword_1EBEA8C40;
  uint64_t v4 = qword_1EBEA8C50;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  v32[0] = 0;
  v32[1] = MEMORY[0x1E4FBC860];
  long long v33 = xmmword_1EBEA8C30;
  long long v34 = xmmword_1EBEA8C40;
  uint64_t v35 = qword_1EBEA8C50;
  uint64_t v36 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  memset(v20, 0, sizeof(v20));
  __int16 v21 = 256;
  uint64_t v6 = MEMORY[0x1E4FBC870];
  sub_1DE85DED0(0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)__src, 1.0, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v32, 1, MEMORY[0x1E4FBC870], (uint64_t)v20);
  v27[0] = 0;
  v27[1] = v5;
  long long v28 = v2;
  long long v29 = v3;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  swift_bridgeObjectRelease();
  sub_1DE85E230(0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v11, 1.0, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v27, 1, v6, (uint64_t)v20);
  char v10 = 1;
  uint64_t v7 = sub_1DE85C6B0(v5);
  v22[0] = 0;
  v22[1] = v5;
  long long v23 = v2;
  long long v24 = v3;
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  swift_bridgeObjectRelease();
  sub_1DE85E590(0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v9, 1.0, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v22, 1, v6, (uint64_t)v20);
  v15[0] = 0;
  v15[1] = v5;
  long long v16 = v2;
  long long v17 = v3;
  uint64_t v18 = v4;
  uint64_t v19 = v5;
  swift_bridgeObjectRelease();
  sub_1DE85E8D8(0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v8, 1.0, 0, (uint64_t)v13, 0, (uint64_t)v13, (uint64_t)v15, 1, v6, (uint64_t)v20);
  sub_1DE865D30(__src, v11, &v10, 0, (uint64_t)v7, 0, 0, 0, a1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, v9,
    0,
    0,
    v8,
    0,
    0,
    0,
    0,
    0.0);
}

unint64_t sub_1DE889A24()
{
  unint64_t result = qword_1EAC0C030;
  if (!qword_1EAC0C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C030);
  }
  return result;
}

unint64_t sub_1DE889A78()
{
  unint64_t result = qword_1EAC0C038;
  if (!qword_1EAC0C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C038);
  }
  return result;
}

unint64_t sub_1DE889ACC()
{
  unint64_t result = qword_1EAC0C050;
  if (!qword_1EAC0C050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C050);
  }
  return result;
}

uint64_t sub_1DE889B20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA7EF8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1DE889B88(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t sub_1DE889BD0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    if (*(unsigned char *)(a1 + 48))
    {
      if (*(unsigned char *)(a2 + 48)) {
        return 1;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 1) == 0 {
           && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
    }
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1DE889C50(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  double v2 = *(double *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  float64x2_t v9 = *(float64x2_t *)(a1 + 16);
  float64x2_t v10 = *(float64x2_t *)(a1 + 32);
  float64x2_t v7 = *(float64x2_t *)(a2 + 16);
  float64x2_t v8 = *(float64x2_t *)(a2 + 32);
  double v4 = *(double *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  if (!sub_1DE86BA0C(*(void *)(a1 + 8), *(void *)(a2 + 8))
    || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, v7), (int32x4_t)vceqq_f64(v10, v8))), 0xFuLL))) & 1) == 0|| v2 != v4)
  {
    return 0;
  }
  return sub_1DE86BA78(v3, v5);
}

uint64_t sub_1DE889D2C(char *__src, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2 + 888;
  uint64_t v5 = __src + 888;
  memcpy(__dst, __src, 0x1AAuLL);
  memcpy(v67, __src + 432, 0x1AAuLL);
  double v55 = *((double *)__src + 108);
  int v53 = __src[872];
  uint64_t v48 = *((void *)__src + 110);
  int v43 = __src[888];
  uint64_t v59 = *((void *)__src + 112);
  int v61 = v5[16];
  int v60 = v5[17];
  float64_t v52 = *((double *)__src + 114);
  float64_t v50 = *((double *)__src + 115);
  uint64_t v62 = *((void *)__src + 116);
  float64_t v51 = *((double *)__src + 117);
  float64_t v49 = *((double *)__src + 118);
  memcpy(v65, __src + 952, 0x1AAuLL);
  double v58 = *((double *)__src + 173);
  double v6 = *((double *)__src + 174);
  int v56 = __src[1400];
  uint64_t v57 = *((void *)__src + 176);
  double v7 = *((double *)__src + 177);
  memcpy(v63, __src + 1424, 0x1AAuLL);
  double v8 = *((double *)__src + 236);
  memcpy(v70, (const void *)v2, 0x1AAuLL);
  memcpy(v68, (const void *)(v2 + 432), 0x1AAuLL);
  double v9 = *(double *)(v2 + 864);
  int v54 = *(unsigned __int8 *)(v2 + 872);
  uint64_t v10 = *(void *)(v2 + 880);
  int v11 = *(unsigned __int8 *)(v2 + 888);
  uint64_t v12 = *(void *)(v2 + 896);
  int v13 = *(unsigned __int8 *)(v4 + 16);
  int v14 = *(unsigned __int8 *)(v4 + 17);
  float64_t v47 = *(double *)(v2 + 912);
  float64_t v45 = *(double *)(v2 + 920);
  uint64_t v15 = *(void *)(v2 + 928);
  float64_t v46 = *(double *)(v2 + 936);
  float64_t v44 = *(double *)(v2 + 944);
  memcpy(v66, (const void *)(v2 + 952), 0x1AAuLL);
  double v16 = *(double *)(v2 + 1384);
  double v17 = *(double *)(v2 + 1392);
  int v18 = *(unsigned __int8 *)(v2 + 1400);
  uint64_t v19 = *(void *)(v2 + 1408);
  double v20 = *(double *)(v2 + 1416);
  memcpy(v64, (const void *)(v2 + 1424), 0x1AAuLL);
  float64x2_t v41 = *((float64x2_t *)__src + 116);
  float64x2_t v42 = *((float64x2_t *)__src + 117);
  float64x2_t v39 = *(float64x2_t *)(v2 + 1856);
  float64x2_t v40 = *(float64x2_t *)(v2 + 1872);
  double v21 = *(double *)(v2 + 1888);
  sub_1DE89F52C((uint64_t)__dst);
  sub_1DE89F52C((uint64_t)v70);
  LOBYTE(v2) = sub_1DE86E8D8((uint64_t)__dst, (uint64_t)v70, (void (*)(long long *, double))sub_1DE89F760, (void (*)(long long *))sub_1DE89F764);
  sub_1DE89F578((uint64_t)v70);
  sub_1DE89F578((uint64_t)__dst);
  if ((v2 & 1) == 0) {
    return 0;
  }
  int v38 = v13;
  sub_1DE89F52C((uint64_t)v67);
  sub_1DE89F52C((uint64_t)v68);
  char v22 = sub_1DE86E8D8((uint64_t)v67, (uint64_t)v68, (void (*)(long long *, double))sub_1DE89F758, (void (*)(long long *))sub_1DE89F75C);
  sub_1DE89F578((uint64_t)v68);
  sub_1DE89F578((uint64_t)v67);
  uint64_t result = 0;
  if ((v22 & 1) != 0 && v55 == v9)
  {
    if (v53)
    {
      if (v53 == 1)
      {
        uint64_t v24 = 0x6C616E6F73726570;
        unint64_t v25 = 0xEC00000064657A69;
        int v26 = v54;
        if (!v54)
        {
LABEL_15:
          unint64_t v27 = 0xE700000000000000;
          if (v24 != 0x6C616369706F74) {
            goto LABEL_20;
          }
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v24 = 0x6669737265766964;
        unint64_t v25 = 0xEB00000000646569;
        int v26 = v54;
        if (!v54) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      unint64_t v25 = 0xE700000000000000;
      uint64_t v24 = 0x6C616369706F74;
      int v26 = v54;
      if (!v54) {
        goto LABEL_15;
      }
    }
    if (v26 == 1)
    {
      unint64_t v27 = 0xEC00000064657A69;
      if (v24 != 0x6C616E6F73726570) {
        goto LABEL_20;
      }
    }
    else
    {
      unint64_t v27 = 0xEB00000000646569;
      if (v24 != 0x6669737265766964) {
        goto LABEL_20;
      }
    }
LABEL_18:
    if (v25 == v27)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v28 = v57;
LABEL_21:
      char v30 = sub_1DE867C78(v48, v10);
      uint64_t result = 0;
      v31.f64[0] = v52;
      v31.f64[1] = v50;
      v32.f64[0] = v51;
      v32.f64[1] = v49;
      v33.f64[0] = v47;
      v33.f64[1] = v45;
      v34.f64[0] = v46;
      v34.f64[1] = v44;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v31, v33), (int32x4_t)vceqq_f64(v32, v34))), 0xFuLL))) & 1) != 0&& ((v43 ^ v11) & 1) == 0&& ((v61 ^ v38) & 1) == 0&& ((v60 ^ v14) & 1) == 0&& (v30 & 1) != 0&& v59 == v12&& v62 == v15)
      {
        sub_1DE89F52C((uint64_t)v65);
        sub_1DE89F52C((uint64_t)v66);
        char v35 = sub_1DE86E8D8((uint64_t)v65, (uint64_t)v66, (void (*)(long long *, double))sub_1DE89F748, (void (*)(long long *))sub_1DE89F74C);
        sub_1DE89F578((uint64_t)v66);
        sub_1DE89F578((uint64_t)v65);
        uint64_t result = 0;
        if ((v35 & 1) != 0 && v58 == v16 && v6 == v17 && v56 == v18 && v28 == v19 && v7 == v20)
        {
          sub_1DE89F52C((uint64_t)v63);
          sub_1DE89F52C((uint64_t)v64);
          int v36 = sub_1DE86E8D8((uint64_t)v63, (uint64_t)v64, (void (*)(long long *, double))sub_1DE89F46C, (void (*)(long long *))sub_1DE89F498);
          sub_1DE89F578((uint64_t)v64);
          sub_1DE89F578((uint64_t)v63);
          uint16x4_t v37 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v41, v39), (int32x4_t)vceqq_f64(v42, v40))), 0xFuLL));
          v37.i16[0] = vminv_u16(v37);
          return v36 & v37.i32[0] & (v8 == v21);
        }
      }
      return result;
    }
LABEL_20:
    char v29 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    uint64_t v28 = v57;
    if ((v29 & 1) == 0) {
      return result;
    }
    goto LABEL_21;
  }
  return result;
}

BOOL sub_1DE88A350(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    return *(double *)(a1 + 40) == *(double *)(a2 + 40);
  }
  return result;
}

uint64_t sub_1DE88A3B8(uint64_t a1, uint64_t a2)
{
  char v2 = 0;
  v3.f64[0] = *(float64_t *)a1;
  v4.f64[0] = *(float64_t *)a2;
  v3.f64[1] = *(float64_t *)(a1 + 16);
  v4.f64[1] = *(float64_t *)(a2 + 16);
  if ((vmaxv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(v3, v4), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)))), (int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 64), *(float64x2_t *)(a2 + 64)))))), 7uLL))) & 1) == 0&& *(double *)(a1 + 80) == *(double *)(a2 + 80)&& *(double *)(a1 + 88) == *(double *)(a2 + 88)&& ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 96) ^ *(unsigned __int8 *)(a2 + 96)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 97) ^ *(unsigned __int8 *)(a2 + 97)) & 1) == 0)
  {
    char v2 = *(unsigned char *)(a2 + 98) ^ *(unsigned char *)(a1 + 98) ^ 1;
  }
  return v2 & 1;
}

BOOL sub_1DE88A498(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

BOOL sub_1DE88A4F0(uint64_t a1, uint64_t a2, double a3, double a4, int64x2_t a5)
{
  BOOL result = 0;
  if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48)
    && ((*(unsigned __int8 *)(a1 + 112) ^ *(unsigned __int8 *)(a2 + 112)) & 1) == 0)
  {
    a5.i64[0] = *(void *)(a1 + 40);
    v5.i64[0] = *(void *)(a2 + 40);
    if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vzip1q_s64(a5, *(int64x2_t *)(a1 + 56)), (float64x2_t)vzip1q_s64(v5, *(int64x2_t *)(a2 + 56))), (int32x4_t)vceqq_f64(
                                                                             (float64x2_t)vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 72), 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 72), 8uLL)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 80), *(float64x2_t *)(a2 + 80)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 96), *(float64x2_t *)(a2 + 96))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 120), *(float64x2_t *)(a2 + 120)),
                                                                (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 136), *(float64x2_t *)(a2 + 136))))), 7uLL))) & (*(double *)(a1 + 152) == *(double *)(a2 + 152)) & ~(*(unsigned char *)a1 ^ *(unsigned char *)a2) & (*(double *)(a1 + 168) == *(double *)(a2 + 168))) != 0&& ((*(unsigned __int8 *)(a1 + 160) ^ *(unsigned __int8 *)(a2 + 160)) & 1) == 0)
    {
      return *(double *)(a1 + 176) == *(double *)(a2 + 176);
    }
  }
  return result;
}

uint64_t sub_1DE88A614(uint64_t a1, uint64_t a2)
{
  char v3 = 0;
  float64x2_t v4 = *(float64x2_t *)(a1 + 32);
  float64x2_t v5 = *(float64x2_t *)(a1 + 48);
  int8x16_t v6 = *(int8x16_t *)a1;
  float64x2_t v7 = *(float64x2_t *)(a1 + 16);
  float64x2_t v8 = *(float64x2_t *)(a1 + 64);
  float64x2_t v9 = *(float64x2_t *)(a1 + 80);
  int v10 = *(unsigned __int8 *)(a1 + 96);
  float64x2_t v11 = *(float64x2_t *)(a1 + 104);
  float64x2_t v12 = *(float64x2_t *)(a1 + 120);
  double v14 = *(double *)(a1 + 136);
  double v13 = *(double *)(a1 + 144);
  int v15 = *(unsigned __int8 *)(a1 + 152);
  int8x16_t v16 = *(int8x16_t *)(a1 + 160);
  uint64_t v17 = *(void *)(a1 + 176);
  float64x2_t v18 = *(float64x2_t *)(a1 + 184);
  double v20 = *(double *)(a1 + 200);
  uint64_t v19 = *(void *)(a1 + 208);
  char v21 = *(unsigned char *)(a1 + 216);
  uint64_t v22 = *(void *)(a1 + 224);
  char v23 = *(unsigned char *)(a1 + 232);
  long long v24 = *(_OWORD *)(a1 + 240);
  long long v25 = *(_OWORD *)(a1 + 256);
  long long v26 = *(_OWORD *)(a1 + 272);
  long long v27 = *(_OWORD *)(a1 + 288);
  char v28 = *(unsigned char *)(a1 + 304);
  char v29 = *(unsigned char *)(a1 + 305);
  char v30 = *(unsigned char *)(a1 + 306);
  double v31 = *(double *)(a1 + 312);
  double v32 = *(double *)(a1 + 320);
  double v152 = *(double *)(a1 + 392);
  int v33 = *(unsigned __int8 *)(a1 + 400);
  double v34 = *(double *)(a1 + 408);
  long long v35 = *(_OWORD *)(a1 + 560);
  long long v185 = *(_OWORD *)(a1 + 544);
  long long v186 = v35;
  long long v187 = *(_OWORD *)(a1 + 576);
  uint64_t v188 = *(void *)(a1 + 592);
  long long v36 = *(_OWORD *)(a1 + 496);
  long long v181 = *(_OWORD *)(a1 + 480);
  long long v182 = v36;
  long long v37 = *(_OWORD *)(a1 + 528);
  long long v183 = *(_OWORD *)(a1 + 512);
  long long v184 = v37;
  long long v38 = *(_OWORD *)(a1 + 432);
  long long v177 = *(_OWORD *)(a1 + 416);
  long long v178 = v38;
  long long v39 = *(_OWORD *)(a1 + 464);
  long long v179 = *(_OWORD *)(a1 + 448);
  long long v180 = v39;
  float64x2_t v41 = *(float64x2_t *)(a1 + 632);
  float64x2_t v40 = *(float64x2_t *)(a1 + 648);
  float64x2_t v42 = *(float64x2_t *)(a1 + 616);
  float64x2_t v143 = *(float64x2_t *)(a1 + 680);
  int8x16_t v141 = *(int8x16_t *)(a1 + 600);
  float64x2_t v142 = *(float64x2_t *)(a1 + 664);
  float64x2_t v140 = *(float64x2_t *)(a1 + 696);
  int v136 = *(unsigned __int8 *)(a1 + 712);
  long long v43 = *(_OWORD *)(a2 + 560);
  long long v197 = *(_OWORD *)(a2 + 544);
  long long v198 = v43;
  long long v199 = *(_OWORD *)(a2 + 576);
  long long v44 = *(_OWORD *)(a2 + 496);
  long long v193 = *(_OWORD *)(a2 + 480);
  long long v194 = v44;
  long long v45 = *(_OWORD *)(a2 + 528);
  long long v195 = *(_OWORD *)(a2 + 512);
  long long v196 = v45;
  long long v46 = *(_OWORD *)(a2 + 432);
  long long v189 = *(_OWORD *)(a2 + 416);
  long long v190 = v46;
  long long v47 = *(_OWORD *)(a2 + 464);
  long long v191 = *(_OWORD *)(a2 + 448);
  float64x2_t v137 = *(float64x2_t *)(a1 + 720);
  long long v192 = v47;
  double v48 = *(double *)(a1 + 832);
  double v139 = *(double *)(a1 + 840);
  int8x16_t v49 = (int8x16_t)vuzp1q_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(v8, *(float64x2_t *)(a2 + 64)), (int32x4_t)vceqq_f64(v9, *(float64x2_t *)(a2 + 80)))), (int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(v11, *(float64x2_t *)(a2 + 104)), (int32x4_t)vceqq_f64(v12, *(float64x2_t *)(a2 + 120)))));
  v11.f64[0] = *(float64_t *)(a2 + 144);
  double v138 = *(double *)(a1 + 848);
  char v50 = *(unsigned char *)(a1 + 912);
  char v51 = *(unsigned char *)(a1 + 928);
  char v52 = *(unsigned char *)(a1 + 1000);
  char v53 = *(unsigned char *)(a1 + 1001);
  char v133 = *(unsigned char *)(a1 + 1002);
  BOOL v54 = v14 != *(double *)(a2 + 136);
  int v55 = *(unsigned __int8 *)(a2 + 96);
  int v56 = *(unsigned __int8 *)(a2 + 152);
  uint64_t v57 = *(void *)(a2 + 176);
  char v58 = *(unsigned char *)(a2 + 216);
  char v59 = *(unsigned char *)(a2 + 232);
  char v60 = *(unsigned char *)(a2 + 304);
  char v61 = *(unsigned char *)(a2 + 305);
  char v62 = *(unsigned char *)(a2 + 306);
  float64x2_t v150 = *(float64x2_t *)(a1 + 360);
  float64x2_t v151 = *(float64x2_t *)(a1 + 376);
  float64x2_t v148 = *(float64x2_t *)(a2 + 376);
  float64x2_t v149 = *(float64x2_t *)(a1 + 344);
  float64x2_t v146 = *(float64x2_t *)(a2 + 360);
  float64x2_t v147 = *(float64x2_t *)(a1 + 328);
  unsigned __int8 v63 = vmaxvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v6, v6, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(v7, *(float64x2_t *)(a2 + 16)))), (int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(v4, *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(v5, *(float64x2_t *)(a2 + 48))))), v49), 7uLL)));
  float64x2_t v144 = *(float64x2_t *)(a2 + 328);
  float64x2_t v145 = *(float64x2_t *)(a2 + 344);
  int v64 = *(unsigned __int8 *)(a2 + 400);
  uint64_t v200 = *(void *)(a2 + 592);
  BOOL v65 = v13 != v11.f64[0];
  double v135 = *(double *)(a1 + 888);
  double v134 = *(double *)(a1 + 896);
  uint64_t v130 = *(void *)(a1 + 904);
  uint64_t v131 = *(void *)(a1 + 920);
  long long v132 = *(_OWORD *)(a1 + 936);
  uint64_t v66 = *(void *)(a2 + 208);
  uint64_t v67 = *(void *)(a2 + 224);
  long long v69 = *(_OWORD *)(a2 + 240);
  long long v68 = *(_OWORD *)(a2 + 256);
  long long v71 = *(_OWORD *)(a2 + 272);
  long long v70 = *(_OWORD *)(a2 + 288);
  double v73 = *(double *)(a2 + 312);
  double v72 = *(double *)(a2 + 320);
  double v74 = *(double *)(a2 + 392);
  double v75 = *(double *)(a2 + 408);
  if ((v63 & 1) == 0 && !v54 && !v65 && ((v10 ^ v55) & 1) == 0 && ((v15 ^ v56) & 1) == 0)
  {
    char v3 = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v16, v16, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)(a2 + 160), *(int8x16_t *)(a2 + 160), 8uLL)), (int32x4_t)vceqq_f64(v18, *(float64x2_t *)(a2 + 184)))), 0xFuLL))) & 1) != 0&& v20 == *(double *)(a2 + 200)&& v17 == v57)
    {
      long long v101 = *(_OWORD *)(a1 + 952);
      long long v102 = *(_OWORD *)(a1 + 968);
      long long v103 = *(_OWORD *)(a1 + 984);
      float64x2_t v127 = v42;
      float64x2_t v128 = v41;
      float64x2_t v129 = v40;
      float64x2_t v124 = *(float64x2_t *)(a2 + 632);
      float64x2_t v121 = *(float64x2_t *)(a2 + 616);
      int8x16_t v109 = *(int8x16_t *)(a2 + 600);
      float64x2_t v113 = *(float64x2_t *)(a2 + 680);
      float64x2_t v110 = *(float64x2_t *)(a2 + 664);
      float64x2_t v108 = *(float64x2_t *)(a2 + 696);
      int v76 = *(unsigned __int8 *)(a2 + 712);
      float64x2_t v125 = *(float64x2_t *)(a1 + 784);
      float64x2_t v126 = *(float64x2_t *)(a2 + 648);
      float64x2_t v120 = *(float64x2_t *)(a1 + 752);
      float64x2_t v116 = *(float64x2_t *)(a1 + 736);
      float64x2_t v117 = *(float64x2_t *)(a2 + 768);
      float64x2_t v114 = *(float64x2_t *)(a2 + 752);
      float64x2_t v105 = *(float64x2_t *)(a2 + 720);
      float64x2_t v111 = *(float64x2_t *)(a2 + 736);
      float64x2_t v122 = *(float64x2_t *)(a1 + 816);
      float64x2_t v123 = *(float64x2_t *)(a1 + 768);
      float64x2_t v118 = *(float64x2_t *)(a2 + 816);
      float64x2_t v119 = *(float64x2_t *)(a1 + 800);
      float64x2_t v112 = *(float64x2_t *)(a2 + 784);
      float64x2_t v115 = *(float64x2_t *)(a2 + 800);
      *(void *)&long long v165 = v19;
      double v104 = *(double *)(a2 + 832);
      *(void *)&long long v166 = v22;
      double v77 = *(double *)(a2 + 840);
      long long v167 = v24;
      double v106 = *(double *)(a2 + 848);
      double v107 = v77;
      long long v168 = v25;
      long long v169 = v26;
      float64x2_t v99 = *(float64x2_t *)(a1 + 856);
      float64x2_t v100 = *(float64x2_t *)(a1 + 872);
      long long v170 = v27;
      *(void *)&long long v153 = v66;
      float64x2_t v96 = *(float64x2_t *)(a2 + 856);
      float64x2_t v97 = *(float64x2_t *)(a2 + 872);
      *(void *)&long long v154 = v67;
      double v98 = *(double *)(a2 + 888);
      long long v155 = v69;
      long long v156 = v68;
      double v95 = *(double *)(a2 + 896);
      uint64_t v78 = *(void *)(a2 + 904);
      char v79 = *(unsigned char *)(a2 + 912);
      long long v157 = v71;
      long long v158 = v70;
      uint64_t v91 = v78;
      uint64_t v92 = *(void *)(a2 + 920);
      char v93 = *(unsigned char *)(a2 + 928);
      char v94 = *(unsigned char *)(a2 + 1000);
      char v80 = *(unsigned char *)(a2 + 1001);
      BYTE8(v165) = v21;
      char v81 = *(unsigned char *)(a2 + 1002);
      BYTE8(v166) = v23;
      LOBYTE(v171) = v28;
      BYTE1(v171) = v29;
      BYTE2(v171) = v30;
      BYTE8(v153) = v58;
      BYTE8(v154) = v59;
      LOBYTE(v159) = v60;
      BYTE1(v159) = v61;
      BYTE2(v159) = v62;
      long long v87 = *(_OWORD *)(a2 + 936);
      long long v88 = *(_OWORD *)(a2 + 952);
      long long v89 = *(_OWORD *)(a2 + 968);
      long long v90 = *(_OWORD *)(a2 + 984);
      char v82 = sub_1DE88A3B8((uint64_t)&v165, (uint64_t)&v153);
      char v3 = 0;
      if ((v82 & 1) != 0 && v31 == v73 && v32 == v72)
      {
        char v3 = 0;
        int32x4_t v83 = (int32x4_t)vceqq_f64(v151, v148);
        if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v147, v144), (int32x4_t)vceqq_f64(v149, v145)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v150, v146), v83))), 7uLL))) & 1) != 0&& v152 == v74&& v34 == v75&& ((v33 ^ v64) & 1) == 0)
        {
          long long v173 = v185;
          long long v174 = v186;
          long long v175 = v187;
          uint64_t v176 = v188;
          long long v169 = v181;
          long long v170 = v182;
          long long v171 = v183;
          long long v172 = v184;
          long long v165 = v177;
          long long v166 = v178;
          long long v167 = v179;
          long long v168 = v180;
          long long v161 = v197;
          long long v162 = v198;
          long long v163 = v199;
          uint64_t v164 = v200;
          long long v157 = v193;
          long long v158 = v194;
          long long v159 = v195;
          long long v160 = v196;
          long long v153 = v189;
          long long v154 = v190;
          long long v155 = v191;
          long long v156 = v192;
          if (sub_1DE88A4F0((uint64_t)&v165, (uint64_t)&v153, *(double *)&v191, *(double *)&v192, (int64x2_t)v83))
          {
            char v3 = 0;
            uint8x16_t v84 = (uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v141, v141, 8uLL), (float64x2_t)vextq_s8(v109, v109, 8uLL)), (int32x4_t)vceqq_f64(v127, v121)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v128, v124), (int32x4_t)vceqq_f64(v129, v126))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v142, v110), (int32x4_t)vceqq_f64(v143, v113)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v140, v108), (int32x4_t)vceqq_f64(v137, v105)))), 7uLL));
            v84.i8[0] = vminvq_u8(v84);
            __int32 v85 = v84.i32[0];
            *(int8x8_t *)v84.i8 = vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v116, v111), (int32x4_t)vceqq_f64(v120, v114)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v123, v117), (int32x4_t)vceqq_f64(v125, v112)))), 7uLL));
            v84.i8[0] = vminv_u8(*(uint8x8_t *)v84.i8);
            if ((v85 & v84.i32[0] & vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v119, v115), (int32x4_t)vceqq_f64(v122, v118))), 0xFuLL))) & (v48 == v104) & (v139 == v107) & (v138 == v106)) == 1&& ((v136 ^ v76) & 1) == 0)
            {
              char v3 = 0;
              if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v99, v96), (int32x4_t)vceqq_f64(v100, v97))), 0xFuLL))) & 1) != 0&& v135 == v98&& v134 == v95)
              {
                *(void *)&long long v165 = v130;
                BYTE8(v165) = v50;
                *(void *)&long long v166 = v131;
                BYTE8(v166) = v51;
                long long v167 = v132;
                long long v168 = v101;
                long long v169 = v102;
                long long v170 = v103;
                LOBYTE(v171) = v52;
                BYTE1(v171) = v53;
                BYTE2(v171) = v133;
                *(void *)&long long v153 = v91;
                BYTE8(v153) = v79;
                *(void *)&long long v154 = v92;
                BYTE8(v154) = v93;
                long long v155 = v87;
                long long v156 = v88;
                long long v157 = v89;
                long long v158 = v90;
                LOBYTE(v159) = v94;
                BYTE1(v159) = v80;
                BYTE2(v159) = v81;
                char v3 = sub_1DE88A3B8((uint64_t)&v165, (uint64_t)&v153);
              }
            }
          }
          else
          {
            char v3 = 0;
          }
        }
      }
    }
  }
  return v3 & 1;
}

uint64_t sub_1DE88AEA8(uint64_t a1, uint64_t a2)
{
  char v2 = 0;
  if (*(double *)a1 == *(double *)a2
    && ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) == 0)
  {
    char v2 = *(unsigned char *)(a2 + 10) ^ *(unsigned char *)(a1 + 10) ^ 1;
  }
  return v2 & 1;
}

BOOL sub_1DE88AEF4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

BOOL sub_1DE88AF30(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  BOOL v4 = *(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
  if (v4
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(a2 + 17)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 18) ^ *(unsigned __int8 *)(a2 + 18)) & 1) == 0
    && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    return *(void *)(a1 + 32) == *(void *)(a2 + 32);
  }
  return result;
}

unint64_t sub_1DE88AFA0()
{
  unint64_t result = qword_1EAC0C068;
  if (!qword_1EAC0C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C068);
  }
  return result;
}

unint64_t sub_1DE88AFF4()
{
  unint64_t result = qword_1EAC0C070;
  if (!qword_1EAC0C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C070);
  }
  return result;
}

unint64_t sub_1DE88B048()
{
  unint64_t result = qword_1EAC0C078;
  if (!qword_1EAC0C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C078);
  }
  return result;
}

unint64_t sub_1DE88B09C()
{
  unint64_t result = qword_1EAC0C080;
  if (!qword_1EAC0C080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C080);
  }
  return result;
}

unint64_t sub_1DE88B0F0()
{
  unint64_t result = qword_1EAC0C088;
  if (!qword_1EAC0C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C088);
  }
  return result;
}

unint64_t sub_1DE88B144()
{
  unint64_t result = qword_1EAC0C098;
  if (!qword_1EAC0C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C098);
  }
  return result;
}

unint64_t sub_1DE88B198()
{
  unint64_t result = qword_1EAC0C0A0;
  if (!qword_1EAC0C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C0A0);
  }
  return result;
}

unint64_t sub_1DE88B1EC()
{
  unint64_t result = qword_1EAC0C0A8;
  if (!qword_1EAC0C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C0A8);
  }
  return result;
}

unint64_t sub_1DE88B240()
{
  unint64_t result = qword_1EAC0C0B0;
  if (!qword_1EAC0C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C0B0);
  }
  return result;
}

unint64_t sub_1DE88B294()
{
  unint64_t result = qword_1EAC0C0C0;
  if (!qword_1EAC0C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C0C0);
  }
  return result;
}

unint64_t sub_1DE88B2E8()
{
  unint64_t result = qword_1EAC0C0F0;
  if (!qword_1EAC0C0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C0F0);
  }
  return result;
}

unint64_t sub_1DE88B33C()
{
  unint64_t result = qword_1EAC0C168;
  if (!qword_1EAC0C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C168);
  }
  return result;
}

unint64_t sub_1DE88B390()
{
  unint64_t result = qword_1EAC0C198;
  if (!qword_1EAC0C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C198);
  }
  return result;
}

unint64_t sub_1DE88B3E4()
{
  unint64_t result = qword_1EBEA9280;
  if (!qword_1EBEA9280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9280);
  }
  return result;
}

unint64_t sub_1DE88B438()
{
  unint64_t result = qword_1EBEA92A0;
  if (!qword_1EBEA92A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA92A0);
  }
  return result;
}

unint64_t sub_1DE88B48C()
{
  unint64_t result = qword_1EBEA8C58;
  if (!qword_1EBEA8C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C58);
  }
  return result;
}

unint64_t sub_1DE88B4E0()
{
  unint64_t result = qword_1EAC0C1E0;
  if (!qword_1EAC0C1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C1E0);
  }
  return result;
}

uint64_t sub_1DE88B534(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA8C88);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE88B5A4()
{
  unint64_t result = qword_1EAC0C1F0;
  if (!qword_1EAC0C1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C1F0);
  }
  return result;
}

uint64_t sub_1DE88B5F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0C1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE88B658(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1DE88B670()
{
  unint64_t result = qword_1EAC0C208;
  if (!qword_1EAC0C208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C208);
  }
  return result;
}

unint64_t sub_1DE88B6C4()
{
  unint64_t result = qword_1EBEA8C78;
  if (!qword_1EBEA8C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C78);
  }
  return result;
}

unint64_t sub_1DE88B718()
{
  unint64_t result = qword_1EBEA8C80;
  if (!qword_1EBEA8C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C80);
  }
  return result;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsV10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1DE88B784()
{
  unint64_t result = qword_1EBEA8B90[0];
  if (!qword_1EBEA8B90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBEA8B90);
  }
  return result;
}

unint64_t sub_1DE88B7D8()
{
  unint64_t result = qword_1EAC0C218;
  if (!qword_1EAC0C218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C218);
  }
  return result;
}

unint64_t sub_1DE88B82C()
{
  unint64_t result = qword_1EBEA8C18;
  if (!qword_1EBEA8C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C18);
  }
  return result;
}

unint64_t sub_1DE88B880()
{
  unint64_t result = qword_1EBEA9AE0;
  if (!qword_1EBEA9AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9AD8);
    sub_1DE88CB54(&qword_1EBEA9A68, &qword_1EBEA9A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AE0);
  }
  return result;
}

unint64_t sub_1DE88B920()
{
  unint64_t result = qword_1EAC0C248;
  if (!qword_1EAC0C248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9AD8);
    sub_1DE88CB54(&qword_1EAC0C250, &qword_1EBEA9A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C248);
  }
  return result;
}

unint64_t sub_1DE88B9C0()
{
  unint64_t result = qword_1EAC0C308;
  if (!qword_1EAC0C308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C308);
  }
  return result;
}

unint64_t sub_1DE88BA14()
{
  unint64_t result = qword_1EAC0C420;
  if (!qword_1EAC0C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C420);
  }
  return result;
}

unint64_t sub_1DE88BA68()
{
  unint64_t result = qword_1EAC0C428;
  if (!qword_1EAC0C428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C428);
  }
  return result;
}

unint64_t sub_1DE88BABC()
{
  unint64_t result = qword_1EAC0C450;
  if (!qword_1EAC0C450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C450);
  }
  return result;
}

unint64_t sub_1DE88BB10()
{
  unint64_t result = qword_1EAC0C4A8;
  if (!qword_1EAC0C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C4A8);
  }
  return result;
}

unint64_t sub_1DE88BB64()
{
  unint64_t result = qword_1EAC0C4B0;
  if (!qword_1EAC0C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C4B0);
  }
  return result;
}

unint64_t sub_1DE88BBB8()
{
  unint64_t result = qword_1EAC0C678;
  if (!qword_1EAC0C678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C678);
  }
  return result;
}

unint64_t sub_1DE88BC0C()
{
  unint64_t result = qword_1EAC0C680;
  if (!qword_1EAC0C680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C680);
  }
  return result;
}

unint64_t sub_1DE88BC60()
{
  unint64_t result = qword_1EAC0C698;
  if (!qword_1EAC0C698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C698);
  }
  return result;
}

unint64_t sub_1DE88BCB4()
{
  unint64_t result = qword_1EAC0C6C8;
  if (!qword_1EAC0C6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C6C8);
  }
  return result;
}

unint64_t sub_1DE88BD08()
{
  unint64_t result = qword_1EAC0C6D0;
  if (!qword_1EAC0C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C6D0);
  }
  return result;
}

unint64_t sub_1DE88BD5C()
{
  unint64_t result = qword_1EAC0C778;
  if (!qword_1EAC0C778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C778);
  }
  return result;
}

unint64_t sub_1DE88BDB0()
{
  unint64_t result = qword_1EAC0C790;
  if (!qword_1EAC0C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C790);
  }
  return result;
}

unint64_t sub_1DE88BE04()
{
  unint64_t result = qword_1EAC0C838;
  if (!qword_1EAC0C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C838);
  }
  return result;
}

unint64_t sub_1DE88BE58()
{
  unint64_t result = qword_1EAC0C9B8;
  if (!qword_1EAC0C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0C9B8);
  }
  return result;
}

unint64_t sub_1DE88BEAC()
{
  unint64_t result = qword_1EAC0CA60;
  if (!qword_1EAC0CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CA60);
  }
  return result;
}

unint64_t sub_1DE88BF00()
{
  unint64_t result = qword_1EAC0CA98;
  if (!qword_1EAC0CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CA98);
  }
  return result;
}

unint64_t sub_1DE88BF54()
{
  unint64_t result = qword_1EAC0CBA0;
  if (!qword_1EAC0CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CBA0);
  }
  return result;
}

unint64_t sub_1DE88BFA8()
{
  unint64_t result = qword_1EAC0CC20;
  if (!qword_1EAC0CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CC20);
  }
  return result;
}

unint64_t sub_1DE88BFFC()
{
  unint64_t result = qword_1EAC0CC80;
  if (!qword_1EAC0CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CC80);
  }
  return result;
}

BOOL sub_1DE88C050(uint64_t a1, uint64_t a2)
{
  return (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48))))), 7uLL))) & 1) != 0&& *(void *)(a1 + 64) == *(void *)(a2 + 64);
}

uint64_t sub_1DE88C0B0(float64x2_t *a1, float64x2_t *a2)
{
  int16x8_t v2 = (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[16], a2[16]), (int32x4_t)vceqq_f64(a1[17], a2[17]));
  int8x16_t v3 = vandq_s8(vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16(v2, (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[18], a2[18]), (int32x4_t)vceqq_f64(a1[19], a2[19]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[20], a2[20]), (int32x4_t)vceqq_f64(a1[21], a2[21])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[22], a2[22]), (int32x4_t)vceqq_f64(a1[23], a2[23])))), 7uLL)), (int8x16_t)xmmword_1DE8E79A0);
  v2.i8[0] = vaddv_s8(*(int8x8_t *)v3.i8);
  v3.i64[0] = vextq_s8(v3, v3, 8uLL).u64[0];
  v3.i8[0] = vaddv_s8(*(int8x8_t *)v3.i8);
  __int16 v4 = v3.i16[0];
  int8x16_t v5 = vandq_s8(vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[24], a2[24]), (int32x4_t)vceqq_f64(a1[25], a2[25])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[26], a2[26]), (int32x4_t)vceqq_f64(a1[27], a2[27]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[28], a2[28]), (int32x4_t)vceqq_f64(a1[29], a2[29])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[30], a2[30]), (int32x4_t)vceqq_f64(a1[31], a2[31])))), 7uLL)), (int8x16_t)xmmword_1DE8E79A0);
  v3.i8[0] = vaddv_s8(*(int8x8_t *)v5.i8);
  v5.i64[0] = vextq_s8(v5, v5, 8uLL).u64[0];
  v5.i8[0] = vaddv_s8(*(int8x8_t *)v5.i8);
  __int32 v6 = v5.i32[0];
  int8x16_t v7 = vandq_s8(vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[4], a2[4]), (int32x4_t)vceqq_f64(a1[5], a2[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[6], a2[6]), (int32x4_t)vceqq_f64(a1[7], a2[7])))), 7uLL)), (int8x16_t)xmmword_1DE8E79A0);
  v5.i8[0] = vaddv_s8(*(int8x8_t *)v7.i8);
  v7.i64[0] = vextq_s8(v7, v7, 8uLL).u64[0];
  v7.i8[0] = vaddv_s8(*(int8x8_t *)v7.i8);
  __int16 v8 = v7.i16[0];
  int8x16_t v9 = vandq_s8(vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[8], a2[8]), (int32x4_t)vceqq_f64(a1[9], a2[9])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[10], a2[10]), (int32x4_t)vceqq_f64(a1[11], a2[11]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[12], a2[12]), (int32x4_t)vceqq_f64(a1[13], a2[13])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[14], a2[14]), (int32x4_t)vceqq_f64(a1[15], a2[15])))), 7uLL)), (int8x16_t)xmmword_1DE8E79A0);
  v7.i8[0] = vaddv_s8(*(int8x8_t *)v9.i8);
  v9.i64[0] = vextq_s8(v9, v9, 8uLL).u64[0];
  v9.i8[0] = vaddv_s8(*(int8x8_t *)v9.i8);
  if ((((v6 << 24) | (v3.i32[0] << 16) | (unsigned __int16)(v2.i16[0] | (v4 << 8))) & ((v9.i32[0] << 24) | (v7.i32[0] << 16) | (unsigned __int16)(v5.i16[0] | (v8 << 8)))) == 0xFFFFFFFFLL) {
    char v10 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(a1[32], a2[32]), (int32x4_t)vceqq_f64(a1[33], a2[33]))), 0xFuLL)));
  }
  else {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1DE88C31C(double *a1, double *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
  {
    int8x16_t v5 = a2 + 3;
    memcpy(__dst, a1 + 3, sizeof(__dst));
    memcpy(v7, v5, sizeof(v7));
    char v4 = sub_1DE88C0B0(__dst, v7);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1DE88C39C(double *a1, double *a2)
{
  char v2 = 0;
  if (((*(unsigned __int8 *)a1 ^ *(unsigned __int8 *)a2) & 1) == 0)
  {
    BOOL v5 = a1[1] == a2[1] && *((void *)a1 + 2) == *((void *)a2 + 2) && a1[3] == a2[3] && a1[4] == a2[4];
    if (v5 && ((*((unsigned __int8 *)a1 + 40) ^ *((unsigned __int8 *)a2 + 40)) & 1) == 0 && a1[6] == a2[6]) {
      char v2 = *((unsigned char *)a2 + 56) ^ *((unsigned char *)a1 + 56) ^ 1;
    }
  }
  return v2 & 1;
}

BOOL sub_1DE88C414(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  if (a1[3] == a2[3]) {
    return a1[2] == a2[2];
  }
  return 0;
}

unint64_t sub_1DE88C44C()
{
  unint64_t result = qword_1EAC0CCF8;
  if (!qword_1EAC0CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CCF8);
  }
  return result;
}

unint64_t sub_1DE88C4A0()
{
  unint64_t result = qword_1EAC0CD30;
  if (!qword_1EAC0CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CD30);
  }
  return result;
}

unint64_t sub_1DE88C4F4()
{
  unint64_t result = qword_1EAC0CD78;
  if (!qword_1EAC0CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CD78);
  }
  return result;
}

unint64_t sub_1DE88C548()
{
  unint64_t result = qword_1EAC0CD98;
  if (!qword_1EAC0CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CD98);
  }
  return result;
}

unint64_t sub_1DE88C59C()
{
  unint64_t result = qword_1EAC0CDE0;
  if (!qword_1EAC0CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CDE0);
  }
  return result;
}

uint64_t sub_1DE88C5F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(a2 + 17)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 18) ^ *(unsigned __int8 *)(a2 + 18)) & 1) == 0
    && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    && *(void *)(a1 + 32) == *(void *)(a2 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 3008);
    unint64_t v6 = *(void *)(a1 + 3016);
    uint64_t v7 = *(void *)(a1 + 3024);
    double v8 = *(double *)(a1 + 3032);
    double v9 = *(double *)(a1 + 3040);
    double v10 = *(double *)(a1 + 3048);
    float64x2_t v23 = *(float64x2_t *)(a1 + 2976);
    float64x2_t v24 = *(float64x2_t *)(a1 + 2992);
    float64x2_t v21 = *(float64x2_t *)(a1 + 2960);
    float64x2_t v22 = *(float64x2_t *)(a2 + 2992);
    float64x2_t v19 = *(float64x2_t *)(a1 + 2944);
    float64x2_t v20 = *(float64x2_t *)(a2 + 2976);
    float64x2_t v17 = *(float64x2_t *)(a2 + 2944);
    float64x2_t v18 = *(float64x2_t *)(a2 + 2960);
    uint64_t v11 = *(void *)(a2 + 3008);
    uint64_t v12 = *(void *)(a2 + 3016);
    uint64_t v13 = *(void *)(a2 + 3024);
    double v14 = *(double *)(a2 + 3032);
    double v15 = *(double *)(a2 + 3040);
    double v16 = *(double *)(a2 + 3048);
    memcpy(__dst, (const void *)(a1 + 40), sizeof(__dst));
    memcpy(v25, (const void *)(a2 + 40), sizeof(v25));
    if ((sub_1DE889D2C(__dst, (uint64_t)v25) & 1) == 0) {
      return 0;
    }
    memcpy(__dst, (const void *)(a1 + 1936), 0x3EBuLL);
    memcpy(v25, (const void *)(a2 + 1936), 0x3EBuLL);
    if ((sub_1DE88A614((uint64_t)__dst, (uint64_t)v25) & 1) == 0) {
      return 0;
    }
    uint64_t result = 0;
    if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v19, v17), (int32x4_t)vceqq_f64(v21, v18)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v23, v20), (int32x4_t)vceqq_f64(v24, v22)))), 7uLL))) & 1) != 0&& v5 == v11)
    {
      if ((sub_1DE867968(v6, v12) & 1) != 0
        && (sub_1DE86770C(v7, v13) & 1) != 0
        && v8 == v14
        && v9 == v15
        && v10 == v16)
      {
        memcpy(__dst, (const void *)(a1 + 3056), 0x220uLL);
        memcpy(v25, (const void *)(a2 + 3056), 0x220uLL);
        if (sub_1DE88C0B0((float64x2_t *)__dst, (float64x2_t *)v25)) {
          return 1;
        }
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1DE88C860()
{
  unint64_t result = qword_1EAC0CDF8;
  if (!qword_1EAC0CDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CDF8);
  }
  return result;
}

unint64_t sub_1DE88C8B4()
{
  unint64_t result = qword_1EBEA92E8;
  if (!qword_1EBEA92E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA92E8);
  }
  return result;
}

unint64_t sub_1DE88C908()
{
  unint64_t result = qword_1EAC0CE70;
  if (!qword_1EAC0CE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CE70);
  }
  return result;
}

unint64_t sub_1DE88C95C()
{
  unint64_t result = qword_1EAC0CE78;
  if (!qword_1EAC0CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CE78);
  }
  return result;
}

unint64_t sub_1DE88C9B0()
{
  unint64_t result = qword_1EAC0CE80;
  if (!qword_1EAC0CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CE80);
  }
  return result;
}

unint64_t sub_1DE88CA04()
{
  unint64_t result = qword_1EAC0CE90;
  if (!qword_1EAC0CE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CE90);
  }
  return result;
}

unint64_t sub_1DE88CA58()
{
  unint64_t result = qword_1EAC0CE98;
  if (!qword_1EAC0CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CE98);
  }
  return result;
}

unint64_t sub_1DE88CAAC()
{
  unint64_t result = qword_1EAC0CEA8;
  if (!qword_1EAC0CEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CEA8);
  }
  return result;
}

unint64_t sub_1DE88CB00()
{
  unint64_t result = qword_1EAC0CF08;
  if (!qword_1EAC0CF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0CF08);
  }
  return result;
}

uint64_t sub_1DE88CB54(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE88CB98()
{
  unint64_t result = qword_1EAC0D0B8;
  if (!qword_1EAC0D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D0B8);
  }
  return result;
}

unint64_t sub_1DE88CBEC()
{
  unint64_t result = qword_1EAC0D0D0;
  if (!qword_1EAC0D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D0D0);
  }
  return result;
}

unint64_t sub_1DE88CC40()
{
  unint64_t result = qword_1EAC0D0E8;
  if (!qword_1EAC0D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D0E8);
  }
  return result;
}

unint64_t sub_1DE88CC94()
{
  unint64_t result = qword_1EAC0D0F0;
  if (!qword_1EAC0D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D0F0);
  }
  return result;
}

unint64_t sub_1DE88CCE8()
{
  unint64_t result = qword_1EAC0D0F8;
  if (!qword_1EAC0D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D0F8);
  }
  return result;
}

unint64_t sub_1DE88CD3C()
{
  unint64_t result = qword_1EAC0D100;
  if (!qword_1EAC0D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D100);
  }
  return result;
}

unint64_t sub_1DE88CD90()
{
  unint64_t result = qword_1EAC0D108;
  if (!qword_1EAC0D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D108);
  }
  return result;
}

uint64_t sub_1DE88CDE4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9588);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE88CE60()
{
  unint64_t result = qword_1EBEA9450;
  if (!qword_1EBEA9450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9450);
  }
  return result;
}

unint64_t sub_1DE88CEB4()
{
  unint64_t result = qword_1EAC0D110;
  if (!qword_1EAC0D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D110);
  }
  return result;
}

unint64_t sub_1DE88CF08()
{
  unint64_t result = qword_1EAC0D120;
  if (!qword_1EAC0D120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D120);
  }
  return result;
}

unint64_t sub_1DE88CF5C()
{
  unint64_t result = qword_1EAC0D128;
  if (!qword_1EAC0D128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D128);
  }
  return result;
}

unint64_t sub_1DE88CFB0()
{
  unint64_t result = qword_1EAC0D130;
  if (!qword_1EAC0D130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D130);
  }
  return result;
}

unint64_t sub_1DE88D004()
{
  unint64_t result = qword_1EAC0D138;
  if (!qword_1EAC0D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D138);
  }
  return result;
}

unint64_t sub_1DE88D058()
{
  unint64_t result = qword_1EAC0D148;
  if (!qword_1EAC0D148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D148);
  }
  return result;
}

unint64_t sub_1DE88D0AC()
{
  unint64_t result = qword_1EAC0D150;
  if (!qword_1EAC0D150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D150);
  }
  return result;
}

uint64_t sub_1DE88D100(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE88D208(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DE88D314()
{
  unint64_t result = qword_1EAC0D158;
  if (!qword_1EAC0D158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D158);
  }
  return result;
}

uint64_t sub_1DE88D368()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D374()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D380()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D38C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D398()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D3A4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D3B0()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88D3BC()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88D3C8()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88D3D4()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88D3E0()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88D3EC()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88D3F8()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88D404()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88D410()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88D41C()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D428()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D434()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D440()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D44C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D458()
{
  return MEMORY[0x1E4FBB570];
}

unint64_t sub_1DE88D468()
{
  unint64_t result = qword_1EAC0D160;
  if (!qword_1EAC0D160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D160);
  }
  return result;
}

uint64_t sub_1DE88D4BC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D4C8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D4D4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D4E0()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D4EC()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D4F8()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D504()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D510()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D51C()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D528()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D534()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D540()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D54C()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D558()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D564()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D570()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D57C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D588()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D594()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D5A0()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D5AC()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D5D0()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D5DC()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D5E8()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D5F4()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D600()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D60C()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D618()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D624()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D630()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D63C()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D648()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D654()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D660()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D66C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D678()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D684()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D690()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D69C()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D6C0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D6CC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D6D8()
{
  return MEMORY[0x1E4FBB400];
}

unint64_t sub_1DE88D6E8()
{
  unint64_t result = qword_1EAC0D168;
  if (!qword_1EAC0D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D168);
  }
  return result;
}

unint64_t sub_1DE88D740()
{
  unint64_t result = qword_1EBEA8C60;
  if (!qword_1EBEA8C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C60);
  }
  return result;
}

uint64_t sub_1DE88D798()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D7A4()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D7B0()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D7BC()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D7C8()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D7D4()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D7E0()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D7EC()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D7F8()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D804()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D810()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D81C()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D828()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D834()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D840()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D84C()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D858()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D864()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D888()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88D894()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88D8A0()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88D8AC()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D8B8()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D8C4()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D8D0()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88D8DC()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88D8E8()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88D8F4()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88D900()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88D90C()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88D918()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D924()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D930()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D93C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D948()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D954()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D960()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D96C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D978()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D984()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D990()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D99C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D9A8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88D9B4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88D9C0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88D9CC()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D9D8()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88D9E4()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88D9F0()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88D9FC()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DA08()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DA14()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DA20()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DA2C()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DA38()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DA44()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DA50()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DA5C()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DA68()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DA74()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DA80()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DA8C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DA98()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DABC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DAC8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DAD4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DAE0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DAEC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DAF8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DB04()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88DB10()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88DB1C()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88DB28()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DB34()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DB40()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DB4C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DB58()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DB64()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DB70()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DB7C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DB88()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DB94()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DBA0()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DBAC()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DBB8()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DBC4()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DBD0()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DBDC()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DBE8()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DBF4()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DC00()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DC0C()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DC18()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DC24()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88DC30()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88DC3C()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88DC60()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DC6C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DC78()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DC84()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DC90()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DC9C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DCA8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DCB4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DCC0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DCCC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DCD8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DCE4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DCF0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DCFC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DD08()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DD14()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DD20()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DD2C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DD38()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DD44()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DD50()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DD5C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DD68()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DD74()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DD80()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DD8C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DD98()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DDB0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DDBC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DDC8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DDD4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DDE0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DDEC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DDF8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DE04()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DE10()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DE1C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DE28()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DE34()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DE40()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88DE4C()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88DE58()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88DE64()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DE70()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DE7C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DE88()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DE94()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DEA0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DEAC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DEB8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DEC4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DED0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DEDC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DEE8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DEF4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DF00()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DF0C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DF18()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DF24()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DF30()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DF3C()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88DF48()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88DF54()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88DF60()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DF6C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DF78()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DF84()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DF90()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DF9C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DFA8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DFB4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DFC0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DFCC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DFD8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88DFE4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88DFF0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88DFFC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E008()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E014()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E020()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E02C()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E038()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E044()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E050()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E05C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E068()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E074()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E080()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E08C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E098()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E0A4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E0B0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E0BC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E0C8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E0D4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E0E0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E0EC()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E0F8()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E104()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E110()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E11C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E128()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E134()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E140()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E14C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E158()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E164()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E170()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E17C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E188()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E194()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E1A0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E1AC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E1B8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E1C4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E1D0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E1DC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E1E8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E1F4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E200()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E20C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E218()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E224()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E230()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E23C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E248()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E254()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E260()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E26C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E278()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E284()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E290()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E29C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E2A8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E2B4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E2CC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E2D8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E2E4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E2F0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E2FC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E308()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E314()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E320()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E32C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E338()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88E344()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88E350()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88E35C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E368()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E374()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E380()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E38C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E398()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E3A4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E3B0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E3BC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E3C8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E3D4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E3E0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E3EC()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E3F8()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E404()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E410()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E41C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E428()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E434()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E440()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E44C()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E458()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E464()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E470()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E47C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E488()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E494()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E4A0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E4AC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E4B8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E4C4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E4D0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E4DC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E4E8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E4F4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E500()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E50C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E518()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E524()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E530()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E53C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E548()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E554()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E560()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E56C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E578()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E584()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E590()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E59C()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E5A8()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E5B4()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E5C0()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E5CC()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E5D8()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E5E4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E5F0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E5FC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E608()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E614()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E620()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E62C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E638()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E644()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E650()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E65C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E668()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E674()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E680()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E68C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E698()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E6A4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E6B0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E6BC()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E6C8()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E6D4()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E6E0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E6EC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E6F8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E704()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E710()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E71C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E728()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E734()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E740()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E74C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E758()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E764()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E770()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E77C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E788()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E794()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E7A0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E7AC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E7B8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E7C4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E7D0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E7DC()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E7E8()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E7F4()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E800()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E80C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E818()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E824()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E830()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E83C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E848()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E854()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E860()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E86C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E878()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E884()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E890()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E89C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E8A8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E8B4()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88E8C0()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88E8CC()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88E8D8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E8E4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E8F0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E8FC()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E908()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E914()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E920()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E92C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E938()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E944()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E950()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E95C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E968()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E974()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E980()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E98C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E998()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E9A4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E9B0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E9BC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E9C8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E9D4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88E9E0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88E9EC()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88E9F8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EA04()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EA10()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EA1C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EA28()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EA34()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EA40()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EA4C()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EA58()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EA64()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EA70()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EA7C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EA88()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EA94()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EAA0()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EAAC()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88EAB8()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88EAC4()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88EAE8()
{
  return sub_1DE88EB70(&qword_1EAC0BB60);
}

uint64_t sub_1DE88EB2C()
{
  return sub_1DE88EB70(&qword_1EAC0BB70);
}

uint64_t sub_1DE88EB70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BB68);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE88EBD8()
{
  return sub_1DE88EC1C((unint64_t *)&qword_1EAC0BB78, &qword_1EAC0BB68);
}

uint64_t sub_1DE88EC1C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE88EC7C()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88EC88()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88EC94()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88ECA0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88ECAC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88ECB8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88ECC4()
{
  return MEMORY[0x1E4FBB580];
}

uint64_t sub_1DE88ECD0()
{
  return MEMORY[0x1E4FBB558];
}

uint64_t sub_1DE88ECDC()
{
  return MEMORY[0x1E4FBB570];
}

uint64_t sub_1DE88ECE8()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88ECF4()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88ED00()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88ED0C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88ED18()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88ED24()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88ED30()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88ED3C()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88ED48()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88ED54()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88ED60()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88ED6C()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88ED78()
{
  return MEMORY[0x1E4FBB3B0];
}

uint64_t sub_1DE88ED84()
{
  return MEMORY[0x1E4FBB398];
}

uint64_t sub_1DE88ED90()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1DE88ED9C()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EDA8()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EDB4()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EDC0()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EDCC()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EDD8()
{
  return MEMORY[0x1E4FBB400];
}

uint64_t sub_1DE88EDE4()
{
  return MEMORY[0x1E4FBB408];
}

uint64_t sub_1DE88EDF0()
{
  return MEMORY[0x1E4FBB3E0];
}

uint64_t sub_1DE88EDFC()
{
  return MEMORY[0x1E4FBB400];
}

double sub_1DE88EED4@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE88EEE0(double *a1)
{
  return sub_1DE856274(*a1);
}

double sub_1DE88EF08@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE88EF14(double *a1)
{
  return sub_1DE856290(*a1);
}

uint64_t sub_1DE88EF3C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8);
  return result;
}

unsigned char *sub_1DE88EF48(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 8) = *result;
  return result;
}

uint64_t sub_1DE88EF54@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 9);
  return result;
}

unsigned char *sub_1DE88EF60(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 9) = *result;
  return result;
}

uint64_t sub_1DE88EF6C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 10);
  return result;
}

unsigned char *sub_1DE88EF78(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 10) = *result;
  return result;
}

void *sub_1DE88EF84@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1DE88EF90(uint64_t *a1)
{
  return sub_1DE8562AC(*a1);
}

uint64_t sub_1DE88EFB8(uint64_t *a1)
{
  return sub_1DE8562C8(*a1);
}

double sub_1DE88EFE0@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE88EFEC(double *a1)
{
  return sub_1DE856254(*a1);
}

uint64_t sub_1DE88F01C()
{
  return 128;
}

__n128 sub_1DE88F028(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = (__n128)a1[4];
  long long v6 = a1[5];
  long long v7 = a1[7];
  *(_OWORD *)(a2 + 96) = a1[6];
  *(_OWORD *)(a2 + 112) = v7;
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v6;
  return result;
}

uint64_t sub_1DE88F054()
{
  return 128;
}

__n128 sub_1DE88F060(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = (__n128)a1[4];
  long long v6 = a1[5];
  long long v7 = a1[7];
  *(_OWORD *)(a2 + 96) = a1[6];
  *(_OWORD *)(a2 + 112) = v7;
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v6;
  return result;
}

double sub_1DE88F084@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 864);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F090(double *a1)
{
  return sub_1DE8562E4(*a1);
}

uint64_t sub_1DE88F0B8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 872);
  return result;
}

unsigned char *sub_1DE88F0C4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 872) = *result;
  return result;
}

uint64_t sub_1DE88F0D0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 888);
  return result;
}

unsigned char *sub_1DE88F0DC(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 888) = *result;
  return result;
}

uint64_t sub_1DE88F0E8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 896);
  return result;
}

uint64_t sub_1DE88F0F4(uint64_t *a1)
{
  return sub_1DE856300(*a1);
}

uint64_t sub_1DE88F11C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 904);
  return result;
}

unsigned char *sub_1DE88F128(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 904) = *result;
  return result;
}

uint64_t sub_1DE88F134@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 905);
  return result;
}

unsigned char *sub_1DE88F140(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 905) = *result;
  return result;
}

double sub_1DE88F14C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 912);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F158(double *a1)
{
  return sub_1DE8564CC(*a1);
}

double sub_1DE88F180@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 920);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F18C(double *a1)
{
  return sub_1DE8564E8(*a1);
}

uint64_t sub_1DE88F1B4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 928);
  return result;
}

uint64_t sub_1DE88F1C0(uint64_t *a1)
{
  return sub_1DE856504(*a1);
}

double sub_1DE88F1E8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 936);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F1F4(double *a1)
{
  return sub_1DE8566C0(*a1);
}

double sub_1DE88F21C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 944);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F228(double *a1)
{
  return sub_1DE8566DC(*a1);
}

double sub_1DE88F250@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1384);
  *a2 = result;
  return result;
}

void sub_1DE88F25C(double *a1)
{
}

double sub_1DE88F284@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1392);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F290(double *a1)
{
  return sub_1DE8568D0(*a1);
}

uint64_t sub_1DE88F2B8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 1400);
  return result;
}

unsigned char *sub_1DE88F2C4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 1400) = *result;
  return result;
}

uint64_t sub_1DE88F2D0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 1408);
  return result;
}

uint64_t sub_1DE88F2DC(uint64_t *a1)
{
  return sub_1DE8568EC(*a1);
}

double sub_1DE88F304@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1416);
  *a2 = result;
  return result;
}

void sub_1DE88F310(double *a1)
{
}

double sub_1DE88F338@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1856);
  *a2 = result;
  return result;
}

void sub_1DE88F344(double *a1)
{
}

double sub_1DE88F36C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1864);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F378(double *a1)
{
  return sub_1DE856E40(*a1);
}

double sub_1DE88F3A0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1872);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F3AC(double *a1)
{
  return sub_1DE856E5C(*a1);
}

double sub_1DE88F3D4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1880);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F3E0(double *a1)
{
  return sub_1DE856E78(*a1);
}

double sub_1DE88F408@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 1888);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F414(double *a1)
{
  return sub_1DE856E94(*a1);
}

double sub_1DE88F43C@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE88F448(double *a1)
{
  return sub_1DE859328(*a1);
}

double sub_1DE88F470@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F47C(double *a1)
{
  return sub_1DE859344(*a1);
}

double sub_1DE88F4A4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F4B0(double *a1)
{
  return sub_1DE859360(*a1);
}

double sub_1DE88F4D8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F4E4(double *a1)
{
  return sub_1DE85937C(*a1);
}

__n128 sub_1DE88F50C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE88F518(double *a1)
{
}

double sub_1DE88F544@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 64);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F550(double *a1)
{
  return sub_1DE8595DC(*a1);
}

double sub_1DE88F578@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F584(double *a1)
{
  return sub_1DE8595F8(*a1);
}

double sub_1DE88F5AC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F5B8(double *a1)
{
  return sub_1DE859614(*a1);
}

double sub_1DE88F5E0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F5EC(double *a1)
{
  return sub_1DE859630(*a1);
}

uint64_t sub_1DE88F614@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 96);
  return result;
}

unsigned char *sub_1DE88F620(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 96) = *result;
  return result;
}

double sub_1DE88F62C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 104);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F638(double *a1)
{
  return sub_1DE85964C(*a1);
}

double sub_1DE88F660@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 112);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F66C(double *a1)
{
  return sub_1DE859668(*a1);
}

double sub_1DE88F694@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 120);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F6A0(double *a1)
{
  return sub_1DE859684(*a1);
}

double sub_1DE88F6C8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 128);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F6D4(double *a1)
{
  return sub_1DE8596A0(*a1);
}

double sub_1DE88F6FC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 136);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F708(double *a1)
{
  return sub_1DE8596BC(*a1);
}

double sub_1DE88F730@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 144);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F73C(double *a1)
{
  return sub_1DE8596D8(*a1);
}

uint64_t sub_1DE88F764@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 152);
  return result;
}

unsigned char *sub_1DE88F770(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 152) = *result;
  return result;
}

double sub_1DE88F77C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 312);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F788(double *a1)
{
  return sub_1DE8596F4(*a1);
}

double sub_1DE88F7B0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 320);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F7BC(double *a1)
{
  return sub_1DE859710(*a1);
}

double sub_1DE88F7E4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 376);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F7F0(double *a1)
{
  return sub_1DE85972C(*a1);
}

double sub_1DE88F818@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 384);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F824(double *a1)
{
  return sub_1DE859748(*a1);
}

double sub_1DE88F84C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 392);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F858(double *a1)
{
  return sub_1DE859764(*a1);
}

uint64_t sub_1DE88F880@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 400);
  return result;
}

unsigned char *sub_1DE88F88C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 400) = *result;
  return result;
}

double sub_1DE88F898@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 408);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F8A4(double *a1)
{
  return sub_1DE859780(*a1);
}

double sub_1DE88F8CC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 680);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F8D8(double *a1)
{
  return sub_1DE85979C(*a1);
}

double sub_1DE88F900@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 688);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F90C(double *a1)
{
  return sub_1DE859974(*a1);
}

double sub_1DE88F934@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 696);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F940(double *a1)
{
  return sub_1DE859990(*a1);
}

double sub_1DE88F968@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 704);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F974(double *a1)
{
  return sub_1DE8599AC(*a1);
}

uint64_t sub_1DE88F99C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 712);
  return result;
}

unsigned char *sub_1DE88F9A8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 712) = *result;
  return result;
}

double sub_1DE88F9B4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 720);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F9C0(double *a1)
{
  return sub_1DE8599C8(*a1);
}

double sub_1DE88F9E8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 728);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88F9F4(double *a1)
{
  return sub_1DE8599E4(*a1);
}

double sub_1DE88FA1C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 736);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FA28(double *a1)
{
  return sub_1DE859A00(*a1);
}

double sub_1DE88FA50@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 744);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FA5C(double *a1)
{
  return sub_1DE859A1C(*a1);
}

double sub_1DE88FA84@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 752);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FA90(double *a1)
{
  return sub_1DE859A38(*a1);
}

double sub_1DE88FAB8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 760);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FAC4(double *a1)
{
  return sub_1DE859A54(*a1);
}

double sub_1DE88FAEC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 768);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FAF8(double *a1)
{
  return sub_1DE859A70(*a1);
}

double sub_1DE88FB20@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 776);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FB2C(double *a1)
{
  return sub_1DE859A8C(*a1);
}

double sub_1DE88FB54@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 784);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FB60(double *a1)
{
  return sub_1DE859AA8(*a1);
}

double sub_1DE88FB88@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 792);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FB94(double *a1)
{
  return sub_1DE859D60(*a1);
}

double sub_1DE88FBBC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 800);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FBC8(double *a1)
{
  return sub_1DE859D28(*a1);
}

double sub_1DE88FBF0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 808);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FBFC(double *a1)
{
  return sub_1DE859D44(*a1);
}

__n128 sub_1DE88FC24@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 816);
  long long v3 = *(_OWORD *)(a1 + 832);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE88FC30(double *a1)
{
}

double sub_1DE88FC5C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 848);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FC68(double *a1)
{
  return sub_1DE859D0C(*a1);
}

double sub_1DE88FC90@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE88FC9C(double *a1)
{
  return sub_1DE857B18(*a1);
}

double sub_1DE88FCC4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FCD0(double *a1)
{
  return sub_1DE857B34(*a1);
}

uint64_t sub_1DE88FCF8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 16);
  return result;
}

uint64_t sub_1DE88FD04(uint64_t *a1)
{
  return sub_1DE857B50(*a1);
}

double sub_1DE88FD2C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FD38(double *a1)
{
  return sub_1DE857D0C(*a1);
}

double sub_1DE88FD60@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FD6C(double *a1)
{
  return sub_1DE857D28(*a1);
}

double sub_1DE88FD94@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 40);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FDA0(double *a1)
{
  return sub_1DE857D44(*a1);
}

double sub_1DE88FDC8@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

void sub_1DE88FDD4(double *a1)
{
}

uint64_t sub_1DE88FDFC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8);
  return result;
}

unsigned char *sub_1DE88FE08(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 8) = *result;
  return result;
}

double sub_1DE88FE14@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FE20(double *a1)
{
  return sub_1DE857F40(*a1);
}

uint64_t sub_1DE88FE48@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 24);
  return result;
}

unsigned char *sub_1DE88FE54(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 24) = *result;
  return result;
}

double sub_1DE88FE60@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FE6C(double *a1)
{
  return sub_1DE857F5C(*a1);
}

double sub_1DE88FE94@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 40);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FEA0(double *a1)
{
  return sub_1DE857F78(*a1);
}

double sub_1DE88FEC8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 48);
  *a2 = result;
  return result;
}

void sub_1DE88FED4(double *a1)
{
}

double sub_1DE88FEFC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FF08(double *a1)
{
  return sub_1DE858160(*a1);
}

double sub_1DE88FF30@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 64);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FF3C(double *a1)
{
  return sub_1DE85817C(*a1);
}

double sub_1DE88FF64@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FF70(double *a1)
{
  return sub_1DE858198(*a1);
}

double sub_1DE88FF98@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FFA4(double *a1)
{
  return sub_1DE8581B4(*a1);
}

double sub_1DE88FFCC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_1DE88FFD8(double *a1)
{
  return sub_1DE8581D0(*a1);
}

uint64_t sub_1DE890000@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 96);
  return result;
}

unsigned char *sub_1DE89000C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 96) = *result;
  return result;
}

uint64_t sub_1DE890018@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 97);
  return result;
}

unsigned char *sub_1DE890024(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 97) = *result;
  return result;
}

uint64_t sub_1DE890030@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 98);
  return result;
}

unsigned char *sub_1DE89003C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 98) = *result;
  return result;
}

uint64_t sub_1DE890048(double *a1)
{
  return sub_1DE8583B8(*a1);
}

uint64_t sub_1DE890070(double *a1)
{
  return sub_1DE8583D4(*a1);
}

double sub_1DE890098@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8900A4(double *a1)
{
  return sub_1DE8583F0(*a1);
}

uint64_t sub_1DE8900CC(double *a1)
{
  return sub_1DE85840C(*a1);
}

uint64_t sub_1DE8900F4(double *a1)
{
  return sub_1DE858428(*a1);
}

uint64_t sub_1DE89011C(double *a1)
{
  return sub_1DE858444(*a1);
}

unsigned char *sub_1DE890144@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *sub_1DE890150(unsigned char *result, unsigned char *a2)
{
  *a2 = *result;
  return result;
}

double sub_1DE89015C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890168(double *a1)
{
  return sub_1DE858854(*a1);
}

double sub_1DE890190@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1DE89019C(double *a1)
{
  return sub_1DE858870(*a1);
}

uint64_t sub_1DE8901C4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 48);
  return result;
}

unsigned char *sub_1DE8901D0(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 48) = *result;
  return result;
}

double sub_1DE8901DC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8901E8(double *a1)
{
  return sub_1DE85888C(*a1);
}

double sub_1DE890210@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_1DE89021C(double *a1)
{
  return sub_1DE858A70(*a1);
}

double sub_1DE890244@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 96);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890250(double *a1)
{
  return sub_1DE858A8C(*a1);
}

double sub_1DE890278@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 104);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890284(double *a1)
{
  return sub_1DE858AA8(*a1);
}

uint64_t sub_1DE8902AC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 112);
  return result;
}

unsigned char *sub_1DE8902B8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 112) = *result;
  return result;
}

double sub_1DE8902C4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 120);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8902D0(double *a1)
{
  return sub_1DE858AC4(*a1);
}

double sub_1DE8902F8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 128);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890304(double *a1)
{
  return sub_1DE858CB4(*a1);
}

double sub_1DE89032C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 136);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890338(double *a1)
{
  return sub_1DE858CD0(*a1);
}

double sub_1DE890360@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 144);
  *a2 = result;
  return result;
}

void sub_1DE89036C(double *a1)
{
}

double sub_1DE890394@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 152);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8903A0(double *a1)
{
  return sub_1DE858ED0(*a1);
}

uint64_t sub_1DE8903C8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 160);
  return result;
}

unsigned char *sub_1DE8903D4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 160) = *result;
  return result;
}

double sub_1DE8903E0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 168);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8903EC(double *a1)
{
  return sub_1DE858EEC(*a1);
}

double sub_1DE890414@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 176);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890420(double *a1)
{
  return sub_1DE858F08(*a1);
}

double sub_1DE890448@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE890454(double *a1)
{
  return sub_1DE85862C(*a1);
}

double sub_1DE89047C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890488(double *a1)
{
  return sub_1DE858650(*a1);
}

double sub_1DE8904B0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8904BC(double *a1)
{
  return sub_1DE858834(*a1);
}

double sub_1DE8904E4@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE8904F0(double *a1)
{
  return sub_1DE858F24(*a1);
}

double sub_1DE890518@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890524(double *a1)
{
  return sub_1DE859114(*a1);
}

double sub_1DE89054C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890558(double *a1)
{
  return sub_1DE859130(*a1);
}

double sub_1DE890580@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1DE89058C(double *a1)
{
  return sub_1DE85914C(*a1);
}

double sub_1DE8905B4@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

uint64_t sub_1DE8905C0(double *a1)
{
  return sub_1DE85A150(*a1);
}

double sub_1DE8905E8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

void sub_1DE8905F4(double *a1)
{
}

double sub_1DE89061C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

void sub_1DE890628(double *a1)
{
}

double sub_1DE890650@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_1DE89065C(double *a1)
{
  return sub_1DE85A6D4(*a1);
}

uint64_t sub_1DE890684@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 64);
  return result;
}

uint64_t sub_1DE890690(uint64_t *a1)
{
  return sub_1DE85A6F0(*a1);
}

__n128 sub_1DE8906B8@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1DE8906C4(double *a1)
{
  return sub_1DE859F40(*a1, a1[1]);
}

__n128 sub_1DE8906EC@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[1];
  *a2 = result;
  return result;
}

uint64_t sub_1DE8906F8(double *a1)
{
  return sub_1DE859F5C(*a1, a1[1]);
}

uint64_t sub_1DE890720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE89072C()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  return sub_1DE85A8BC(v0);
}

unsigned char *sub_1DE890758@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *sub_1DE890764(unsigned char *result, unsigned char *a2)
{
  *a2 = *result;
  return result;
}

double sub_1DE890770@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1DE89077C(double *a1)
{
  return sub_1DE85C2B4(*a1);
}

uint64_t sub_1DE8907A4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 16);
  return result;
}

uint64_t sub_1DE8907B0(uint64_t *a1)
{
  return sub_1DE85C2D0(*a1);
}

double sub_1DE8907D8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1DE8907E4(double *a1)
{
  return sub_1DE85C49C(*a1);
}

double sub_1DE89080C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890818(double *a1)
{
  return sub_1DE85C4B8(*a1);
}

uint64_t sub_1DE890840@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 40);
  return result;
}

unsigned char *sub_1DE89084C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 40) = *result;
  return result;
}

double sub_1DE890858@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 48);
  *a2 = result;
  return result;
}

uint64_t sub_1DE890864(double *a1)
{
  return sub_1DE85C4D4(*a1);
}

uint64_t sub_1DE89088C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 56);
  return result;
}

unsigned char *sub_1DE890898(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 56) = *result;
  return result;
}

void sub_1DE8908A4(double *a1)
{
}

uint64_t sub_1DE8908CC(double *a1)
{
  return sub_1DE85ACE8(*a1);
}

uint64_t sub_1DE8908F4(double *a1)
{
  return sub_1DE85AD04(*a1);
}

__n128 sub_1DE89091C@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1DE890928(double *a1)
{
  return sub_1DE85AD20(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890954@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890960(double *a1)
{
  return sub_1DE85AD3C(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE89098C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 80);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE890998(double *a1)
{
}

__n128 sub_1DE8909C4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 112);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE8909D0(double *a1)
{
  return sub_1DE85AF68(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE8909FC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 128);
  long long v3 = *(_OWORD *)(a1 + 144);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE890A08(double *a1)
{
}

__n128 sub_1DE890A34@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 176);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE890A40(double *a1)
{
}

__n128 sub_1DE890A6C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 192);
  long long v3 = *(_OWORD *)(a1 + 208);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890A78(double *a1)
{
  return sub_1DE85B3A4(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890AA4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890AB0(double *a1)
{
  return sub_1DE85B3C0(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890ADC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 272);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890AE8(double *a1)
{
  return sub_1DE85B3DC(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890B14@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 304);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890B20(double *a1)
{
  return sub_1DE85B3F8(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890B4C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 320);
  long long v3 = *(_OWORD *)(a1 + 336);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890B58(double *a1)
{
  return sub_1DE85B414(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890B84@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 352);
  long long v3 = *(_OWORD *)(a1 + 368);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890B90(double *a1)
{
  return sub_1DE85B634(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890BBC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 384);
  long long v3 = *(_OWORD *)(a1 + 400);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE890BC8(double *a1)
{
}

__n128 sub_1DE890BF4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 416);
  long long v3 = *(_OWORD *)(a1 + 432);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE890C00(double *a1)
{
}

__n128 sub_1DE890C2C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 448);
  long long v3 = *(_OWORD *)(a1 + 464);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890C38(double *a1)
{
  return sub_1DE85BC6C(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890C64@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 480);
  long long v3 = *(_OWORD *)(a1 + 496);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1DE890C70(double *a1)
{
  return sub_1DE85BE88(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1DE890C9C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 512);
  long long v3 = *(_OWORD *)(a1 + 528);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1DE890CA8(double *a1)
{
}

uint64_t _s13ConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v11;
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  uint64_t v13 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v13;
  long long v14 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v14;
  uint64_t v15 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v15;
  long long v16 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v16;
  uint64_t v17 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v17;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  long long v18 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v18;
  uint64_t v19 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v19;
  uint64_t v20 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v20;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v21 = *(_OWORD *)(a2 + 416);
  long long v22 = *(_OWORD *)(a2 + 432);
  long long v23 = *(_OWORD *)(a2 + 448);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  *(_OWORD *)(a1 + 432) = v22;
  *(_OWORD *)(a1 + 448) = v23;
  *(_OWORD *)(a1 + 416) = v21;
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  long long v24 = *(_OWORD *)(a2 + 480);
  long long v25 = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(_OWORD *)(a1 + 480) = v24;
  *(_OWORD *)(a1 + 496) = v25;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  long long v26 = *(_OWORD *)(a2 + 528);
  long long v27 = *(_OWORD *)(a2 + 544);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(_OWORD *)(a1 + 528) = v26;
  *(_OWORD *)(a1 + 544) = v27;
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  long long v28 = *(_OWORD *)(a2 + 576);
  long long v29 = *(_OWORD *)(a2 + 592);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(_OWORD *)(a1 + 576) = v28;
  *(_OWORD *)(a1 + 592) = v29;
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  long long v30 = *(_OWORD *)(a2 + 624);
  long long v31 = *(_OWORD *)(a2 + 640);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(_OWORD *)(a1 + 624) = v30;
  *(_OWORD *)(a1 + 640) = v31;
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  long long v32 = *(_OWORD *)(a2 + 672);
  long long v33 = *(_OWORD *)(a2 + 688);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(_OWORD *)(a1 + 672) = v32;
  *(_OWORD *)(a1 + 688) = v33;
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  long long v34 = *(_OWORD *)(a2 + 720);
  long long v35 = *(_OWORD *)(a2 + 736);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(_OWORD *)(a1 + 720) = v34;
  *(_OWORD *)(a1 + 736) = v35;
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  long long v36 = *(_OWORD *)(a2 + 776);
  long long v37 = *(_OWORD *)(a2 + 792);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(_OWORD *)(a1 + 776) = v36;
  *(_OWORD *)(a1 + 792) = v37;
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  long long v38 = *(_OWORD *)(a2 + 848);
  long long v39 = *(_OWORD *)(a2 + 864);
  long long v40 = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(_OWORD *)(a1 + 864) = v39;
  *(_OWORD *)(a1 + 880) = v40;
  *(_OWORD *)(a1 + 848) = v38;
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(unsigned char *)(a1 + 912) = *(unsigned char *)(a2 + 912);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(a2 + 944);
  *(unsigned char *)(a1 + 945) = *(unsigned char *)(a2 + 945);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  long long v41 = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 976) = v41;
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  long long v42 = *(_OWORD *)(a2 + 1000);
  long long v43 = *(_OWORD *)(a2 + 1016);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(_OWORD *)(a1 + 1000) = v42;
  *(_OWORD *)(a1 + 1016) = v43;
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  long long v44 = *(_OWORD *)(a2 + 1048);
  long long v45 = *(_OWORD *)(a2 + 1064);
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  *(_OWORD *)(a1 + 1048) = v44;
  *(_OWORD *)(a1 + 1064) = v45;
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  long long v46 = *(_OWORD *)(a2 + 1096);
  long long v47 = *(_OWORD *)(a2 + 1112);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  *(_OWORD *)(a1 + 1112) = v47;
  *(_OWORD *)(a1 + 1096) = v46;
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  long long v48 = *(_OWORD *)(a2 + 1144);
  long long v49 = *(_OWORD *)(a2 + 1160);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(_OWORD *)(a1 + 1160) = v49;
  *(_OWORD *)(a1 + 1144) = v48;
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  long long v50 = *(_OWORD *)(a2 + 1192);
  long long v51 = *(_OWORD *)(a2 + 1208);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  *(_OWORD *)(a1 + 1208) = v51;
  *(_OWORD *)(a1 + 1192) = v50;
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  long long v52 = *(_OWORD *)(a2 + 1240);
  long long v53 = *(_OWORD *)(a2 + 1256);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(_OWORD *)(a1 + 1256) = v53;
  *(_OWORD *)(a1 + 1240) = v52;
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  long long v54 = *(_OWORD *)(a2 + 1296);
  long long v55 = *(_OWORD *)(a2 + 1312);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(_OWORD *)(a1 + 1312) = v55;
  *(_OWORD *)(a1 + 1296) = v54;
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  long long v56 = *(_OWORD *)(a2 + 1368);
  long long v57 = *(_OWORD *)(a2 + 1384);
  long long v58 = *(_OWORD *)(a2 + 1400);
  *(_WORD *)(a1 + 1416) = *(_WORD *)(a2 + 1416);
  *(_OWORD *)(a1 + 1400) = v58;
  *(_OWORD *)(a1 + 1384) = v57;
  *(_OWORD *)(a1 + 1368) = v56;
  *(_OWORD *)(a1 + 1424) = *(_OWORD *)(a2 + 1424);
  *(unsigned char *)(a1 + 1440) = *(unsigned char *)(a2 + 1440);
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  long long v59 = *(_OWORD *)(a2 + 1472);
  long long v60 = *(_OWORD *)(a2 + 1488);
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  *(_OWORD *)(a1 + 1488) = v60;
  *(_OWORD *)(a1 + 1472) = v59;
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  long long v61 = *(_OWORD *)(a2 + 1520);
  long long v62 = *(_OWORD *)(a2 + 1536);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  *(_OWORD *)(a1 + 1536) = v62;
  *(_OWORD *)(a1 + 1520) = v61;
  *(void *)(a1 + 1560) = *(void *)(a2 + 1560);
  long long v63 = *(_OWORD *)(a2 + 1568);
  long long v64 = *(_OWORD *)(a2 + 1584);
  *(void *)(a1 + 1600) = *(void *)(a2 + 1600);
  *(_OWORD *)(a1 + 1584) = v64;
  *(_OWORD *)(a1 + 1568) = v63;
  *(void *)(a1 + 1608) = *(void *)(a2 + 1608);
  long long v65 = *(_OWORD *)(a2 + 1616);
  long long v66 = *(_OWORD *)(a2 + 1632);
  *(void *)(a1 + 1648) = *(void *)(a2 + 1648);
  *(_OWORD *)(a1 + 1632) = v66;
  *(_OWORD *)(a1 + 1616) = v65;
  *(void *)(a1 + 1656) = *(void *)(a2 + 1656);
  long long v67 = *(_OWORD *)(a2 + 1664);
  long long v68 = *(_OWORD *)(a2 + 1680);
  *(void *)(a1 + 1696) = *(void *)(a2 + 1696);
  *(_OWORD *)(a1 + 1680) = v68;
  *(_OWORD *)(a1 + 1664) = v67;
  *(void *)(a1 + 1704) = *(void *)(a2 + 1704);
  long long v69 = *(_OWORD *)(a2 + 1712);
  long long v70 = *(_OWORD *)(a2 + 1728);
  *(void *)(a1 + 1744) = *(void *)(a2 + 1744);
  *(_OWORD *)(a1 + 1728) = v70;
  *(_OWORD *)(a1 + 1712) = v69;
  *(void *)(a1 + 1752) = *(void *)(a2 + 1752);
  *(void *)(a1 + 1760) = *(void *)(a2 + 1760);
  long long v71 = *(_OWORD *)(a2 + 1768);
  long long v72 = *(_OWORD *)(a2 + 1784);
  *(void *)(a1 + 1800) = *(void *)(a2 + 1800);
  *(_OWORD *)(a1 + 1784) = v72;
  *(_OWORD *)(a1 + 1768) = v71;
  *(void *)(a1 + 1808) = *(void *)(a2 + 1808);
  *(void *)(a1 + 1816) = *(void *)(a2 + 1816);
  *(void *)(a1 + 1824) = *(void *)(a2 + 1824);
  *(void *)(a1 + 1832) = *(void *)(a2 + 1832);
  long long v73 = *(_OWORD *)(a2 + 1840);
  long long v74 = *(_OWORD *)(a2 + 1856);
  long long v75 = *(_OWORD *)(a2 + 1872);
  *(_WORD *)(a1 + 1888) = *(_WORD *)(a2 + 1888);
  *(_OWORD *)(a1 + 1872) = v75;
  *(_OWORD *)(a1 + 1856) = v74;
  *(_OWORD *)(a1 + 1840) = v73;
  *(void *)(a1 + 1896) = *(void *)(a2 + 1896);
  *(_OWORD *)(a1 + 1904) = *(_OWORD *)(a2 + 1904);
  *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
  memcpy((void *)(a1 + 1936), (const void *)(a2 + 1936), 0x3EBuLL);
  *(_OWORD *)(a1 + 2960) = *(_OWORD *)(a2 + 2960);
  *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
  *(_OWORD *)(a1 + 2992) = *(_OWORD *)(a2 + 2992);
  *(void *)(a1 + 3008) = *(void *)(a2 + 3008);
  *(_OWORD *)(a1 + 2944) = *(_OWORD *)(a2 + 2944);
  *(void *)(a1 + 3016) = *(void *)(a2 + 3016);
  *(void *)(a1 + 3024) = *(void *)(a2 + 3024);
  memcpy((void *)(a1 + 3032), (const void *)(a2 + 3032), 0x238uLL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v3 = a2 + 40;
  long long v4 = (unsigned char *)(a2 + 2352);
  uint64_t v5 = a2 + 928;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v6 = (_OWORD *)(a1 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(v3 + 304);
  *(void *)(a1 + 352) = *(void *)(v3 + 312);
  *(void *)(a1 + 360) = *(void *)(v3 + 320);
  *(void *)(a1 + 368) = *(void *)(v3 + 328);
  *(void *)(a1 + 376) = *(void *)(v3 + 336);
  *(void *)(a1 + 384) = *(void *)(v3 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(v3 + 352);
  *(void *)(a1 + 400) = *(void *)(v3 + 360);
  *(void *)(a1 + 408) = *(void *)(v3 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(v3 + 376);
  long long v8 = *(_OWORD *)(v3 + 392);
  long long v9 = *(_OWORD *)(v3 + 408);
  *(_WORD *)(a1 + 464) = *(_WORD *)(v3 + 424);
  *(_OWORD *)(a1 + 432) = v8;
  *(_OWORD *)(a1 + 448) = v9;
  *(_OWORD *)(a1 + 416) = v7;
  *(void *)(a1 + 472) = *(void *)(v3 + 432);
  *(void *)(a1 + 480) = *(void *)(v3 + 440);
  *(void *)(a1 + 488) = *(void *)(v3 + 448);
  *(void *)(a1 + 496) = *(void *)(v3 + 456);
  *(void *)(a1 + 504) = *(void *)(v3 + 464);
  *(void *)(a1 + 512) = *(void *)(v3 + 472);
  *(void *)(a1 + 520) = *(void *)(v3 + 480);
  *(void *)(a1 + 528) = *(void *)(v3 + 488);
  *(void *)(a1 + 536) = *(void *)(v3 + 496);
  *(void *)(a1 + 544) = *(void *)(v3 + 504);
  *(void *)(a1 + 552) = *(void *)(v3 + 512);
  *(void *)(a1 + 560) = *(void *)(v3 + 520);
  *(void *)(a1 + 568) = *(void *)(v3 + 528);
  *(void *)(a1 + 576) = *(void *)(v3 + 536);
  *(void *)(a1 + 584) = *(void *)(v3 + 544);
  *(void *)(a1 + 592) = *(void *)(v3 + 552);
  *(void *)(a1 + 600) = *(void *)(v3 + 560);
  *(void *)(a1 + 608) = *(void *)(v3 + 568);
  *(void *)(a1 + 616) = *(void *)(v3 + 576);
  *(void *)(a1 + 624) = *(void *)(v3 + 584);
  *(void *)(a1 + 632) = *(void *)(v3 + 592);
  *(void *)(a1 + 640) = *(void *)(v3 + 600);
  *(void *)(a1 + 648) = *(void *)(v3 + 608);
  *(void *)(a1 + 656) = *(void *)(v3 + 616);
  *(void *)(a1 + 664) = *(void *)(v3 + 624);
  *(void *)(a1 + 672) = *(void *)(v3 + 632);
  *(void *)(a1 + 680) = *(void *)(v3 + 640);
  *(void *)(a1 + 688) = *(void *)(v3 + 648);
  *(void *)(a1 + 696) = *(void *)(v3 + 656);
  *(void *)(a1 + 704) = *(void *)(v3 + 664);
  *(void *)(a1 + 712) = *(void *)(v3 + 672);
  *(void *)(a1 + 720) = *(void *)(v3 + 680);
  *(void *)(a1 + 728) = *(void *)(v3 + 688);
  *(void *)(a1 + 736) = *(void *)(v3 + 696);
  *(void *)(a1 + 744) = *(void *)(v3 + 704);
  *(void *)(a1 + 752) = *(void *)(v3 + 712);
  *(void *)(a1 + 760) = *(void *)(v3 + 720);
  *(void *)(a1 + 768) = *(void *)(v3 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 776) = *(void *)(v3 + 736);
  *(void *)(a1 + 784) = *(void *)(v3 + 744);
  *(void *)(a1 + 792) = *(void *)(v3 + 752);
  *(void *)(a1 + 800) = *(void *)(v3 + 760);
  *(void *)(a1 + 808) = *(void *)(v3 + 768);
  *(void *)(a1 + 816) = *(void *)(v3 + 776);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(v3 + 784);
  *(void *)(a1 + 832) = *(void *)(v3 + 792);
  *(void *)(a1 + 840) = *(void *)(v3 + 800);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v10 = *(_OWORD *)(v3 + 808);
  long long v11 = *(_OWORD *)(v3 + 824);
  long long v12 = *(_OWORD *)(v3 + 840);
  *(_WORD *)(a1 + 896) = *(_WORD *)(v3 + 856);
  *(_OWORD *)(a1 + 864) = v11;
  *(_OWORD *)(a1 + 880) = v12;
  *(_OWORD *)(a1 + 848) = v10;
  *(void *)(a1 + 904) = *(void *)(v3 + 864);
  *(unsigned char *)(a1 + 912) = *(unsigned char *)(v3 + 872);
  *(void *)(a1 + 920) = *(void *)(v3 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 928) = *(unsigned char *)(v3 + 888);
  *(void *)(a1 + 936) = *(void *)(v3 + 896);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(v5 + 16);
  *(unsigned char *)(a1 + 945) = *(unsigned char *)(v5 + 17);
  *(void *)(a1 + 952) = *(void *)(v3 + 912);
  *(void *)(a1 + 960) = *(void *)(v3 + 920);
  *(void *)(a1 + 968) = *(void *)(v3 + 928);
  *(void *)(a1 + 976) = *(void *)(v3 + 936);
  *(void *)(a1 + 984) = *(void *)(v3 + 944);
  *(void *)(a1 + 992) = *(void *)(v3 + 952);
  *(void *)(a1 + 1000) = *(void *)(v3 + 960);
  *(void *)(a1 + 1008) = *(void *)(v3 + 968);
  *(void *)(a1 + 1016) = *(void *)(v3 + 976);
  *(void *)(a1 + 1024) = *(void *)(v3 + 984);
  *(void *)(a1 + 1032) = *(void *)(v3 + 992);
  *(void *)(a1 + 1040) = *(void *)(v3 + 1000);
  *(void *)(a1 + 1048) = *(void *)(v3 + 1008);
  *(void *)(a1 + 1056) = *(void *)(v3 + 1016);
  *(void *)(a1 + 1064) = *(void *)(v3 + 1024);
  *(void *)(a1 + 1072) = *(void *)(v3 + 1032);
  *(void *)(a1 + 1080) = *(void *)(v3 + 1040);
  *(void *)(a1 + 1088) = *(void *)(v3 + 1048);
  *(void *)(a1 + 1096) = *(void *)(v3 + 1056);
  *(void *)(a1 + 1104) = *(void *)(v3 + 1064);
  *(void *)(a1 + 1112) = *(void *)(v3 + 1072);
  *(void *)(a1 + 1120) = *(void *)(v3 + 1080);
  *(void *)(a1 + 1128) = *(void *)(v3 + 1088);
  *(void *)(a1 + 1136) = *(void *)(v3 + 1096);
  *(void *)(a1 + 1144) = *(void *)(v3 + 1104);
  *(void *)(a1 + 1152) = *(void *)(v3 + 1112);
  *(void *)(a1 + 1160) = *(void *)(v3 + 1120);
  *(void *)(a1 + 1168) = *(void *)(v3 + 1128);
  *(void *)(a1 + 1176) = *(void *)(v3 + 1136);
  *(void *)(a1 + 1184) = *(void *)(v3 + 1144);
  *(void *)(a1 + 1192) = *(void *)(v3 + 1152);
  *(void *)(a1 + 1200) = *(void *)(v3 + 1160);
  *(void *)(a1 + 1208) = *(void *)(v3 + 1168);
  *(void *)(a1 + 1216) = *(void *)(v3 + 1176);
  *(void *)(a1 + 1224) = *(void *)(v3 + 1184);
  *(void *)(a1 + 1232) = *(void *)(v3 + 1192);
  *(void *)(a1 + 1240) = *(void *)(v3 + 1200);
  *(void *)(a1 + 1248) = *(void *)(v3 + 1208);
  *(void *)(a1 + 1256) = *(void *)(v3 + 1216);
  *(void *)(a1 + 1264) = *(void *)(v3 + 1224);
  *(void *)(a1 + 1272) = *(void *)(v3 + 1232);
  *(void *)(a1 + 1280) = *(void *)(v3 + 1240);
  *(void *)(a1 + 1288) = *(void *)(v3 + 1248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1296) = *(void *)(v3 + 1256);
  *(void *)(a1 + 1304) = *(void *)(v3 + 1264);
  *(void *)(a1 + 1312) = *(void *)(v3 + 1272);
  *(void *)(a1 + 1320) = *(void *)(v3 + 1280);
  *(void *)(a1 + 1328) = *(void *)(v3 + 1288);
  *(void *)(a1 + 1336) = *(void *)(v3 + 1296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1344) = *(void *)(v3 + 1304);
  *(void *)(a1 + 1352) = *(void *)(v3 + 1312);
  *(void *)(a1 + 1360) = *(void *)(v3 + 1320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v13 = *(_OWORD *)(v3 + 1328);
  long long v14 = *(_OWORD *)(v3 + 1344);
  long long v15 = *(_OWORD *)(v3 + 1360);
  *(_WORD *)(a1 + 1416) = *(_WORD *)(v3 + 1376);
  v6[85] = v15;
  v6[84] = v14;
  v6[83] = v13;
  *(void *)(a1 + 1424) = *(void *)(v3 + 1384);
  *(void *)(a1 + 1432) = *(void *)(v3 + 1392);
  *(unsigned char *)(a1 + 1440) = *(unsigned char *)(v3 + 1400);
  *(void *)(a1 + 1448) = *(void *)(v3 + 1408);
  *(void *)(a1 + 1456) = *(void *)(v3 + 1416);
  *(void *)(a1 + 1464) = *(void *)(v3 + 1424);
  *(void *)(a1 + 1472) = *(void *)(v3 + 1432);
  *(void *)(a1 + 1480) = *(void *)(v3 + 1440);
  *(void *)(a1 + 1488) = *(void *)(v3 + 1448);
  *(void *)(a1 + 1496) = *(void *)(v3 + 1456);
  *(void *)(a1 + 1504) = *(void *)(v3 + 1464);
  *(void *)(a1 + 1512) = *(void *)(v3 + 1472);
  *(void *)(a1 + 1520) = *(void *)(v3 + 1480);
  *(void *)(a1 + 1528) = *(void *)(v3 + 1488);
  *(void *)(a1 + 1536) = *(void *)(v3 + 1496);
  *(void *)(a1 + 1544) = *(void *)(v3 + 1504);
  *(void *)(a1 + 1552) = *(void *)(v3 + 1512);
  *(void *)(a1 + 1560) = *(void *)(v3 + 1520);
  *(void *)(a1 + 1568) = *(void *)(v3 + 1528);
  *(void *)(a1 + 1576) = *(void *)(v3 + 1536);
  *(void *)(a1 + 1584) = *(void *)(v3 + 1544);
  *(void *)(a1 + 1592) = *(void *)(v3 + 1552);
  *(void *)(a1 + 1600) = *(void *)(v3 + 1560);
  *(void *)(a1 + 1608) = *(void *)(v3 + 1568);
  *(void *)(a1 + 1616) = *(void *)(v3 + 1576);
  *(void *)(a1 + 1624) = *(void *)(v3 + 1584);
  *(void *)(a1 + 1632) = *(void *)(v3 + 1592);
  *(void *)(a1 + 1640) = *(void *)(v3 + 1600);
  *(void *)(a1 + 1648) = *(void *)(v3 + 1608);
  *(void *)(a1 + 1656) = *(void *)(v3 + 1616);
  *(void *)(a1 + 1664) = *(void *)(v3 + 1624);
  *(void *)(a1 + 1672) = *(void *)(v3 + 1632);
  *(void *)(a1 + 1680) = *(void *)(v3 + 1640);
  *(void *)(a1 + 1688) = *(void *)(v3 + 1648);
  *(void *)(a1 + 1696) = *(void *)(v3 + 1656);
  *(void *)(a1 + 1704) = *(void *)(v3 + 1664);
  *(void *)(a1 + 1712) = *(void *)(v3 + 1672);
  *(void *)(a1 + 1720) = *(void *)(v3 + 1680);
  *(void *)(a1 + 1728) = *(void *)(v3 + 1688);
  *(void *)(a1 + 1736) = *(void *)(v3 + 1696);
  *(void *)(a1 + 1744) = *(void *)(v3 + 1704);
  *(void *)(a1 + 1752) = *(void *)(v3 + 1712);
  *(void *)(a1 + 1760) = *(void *)(v3 + 1720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1768) = *(void *)(v3 + 1728);
  *(void *)(a1 + 1776) = *(void *)(v3 + 1736);
  *(void *)(a1 + 1784) = *(void *)(v3 + 1744);
  *(void *)(a1 + 1792) = *(void *)(v3 + 1752);
  *(void *)(a1 + 1800) = *(void *)(v3 + 1760);
  *(void *)(a1 + 1808) = *(void *)(v3 + 1768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1816) = *(void *)(v3 + 1776);
  *(void *)(a1 + 1824) = *(void *)(v3 + 1784);
  *(void *)(a1 + 1832) = *(void *)(v3 + 1792);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v16 = *(_OWORD *)(v3 + 1800);
  long long v17 = *(_OWORD *)(v3 + 1816);
  long long v18 = *(_OWORD *)(v3 + 1832);
  *(_WORD *)(a1 + 1888) = *(_WORD *)(v3 + 1848);
  *(_OWORD *)(a1 + 1872) = v18;
  *(_OWORD *)(a1 + 1856) = v17;
  *(_OWORD *)(a1 + 1840) = v16;
  *(void *)(a1 + 1896) = *(void *)(v3 + 1856);
  *(void *)(a1 + 1904) = *(void *)(v3 + 1864);
  *(void *)(a1 + 1912) = *(void *)(v3 + 1872);
  *(void *)(a1 + 1920) = *(void *)(v3 + 1880);
  *(void *)(a1 + 1928) = *(void *)(v3 + 1888);
  *(void *)(a1 + 1936) = *(void *)(v3 + 1896);
  *(void *)(a1 + 1944) = *(void *)(v3 + 1904);
  *(void *)(a1 + 1952) = *(void *)(v3 + 1912);
  *(void *)(a1 + 1960) = *(void *)(v3 + 1920);
  *(void *)(a1 + 1968) = *(void *)(v3 + 1928);
  *(void *)(a1 + 1976) = *(void *)(v3 + 1936);
  *(void *)(a1 + 1984) = *(void *)(v3 + 1944);
  *(void *)(a1 + 1992) = *(void *)(v3 + 1952);
  *(void *)(a1 + 2000) = *(void *)(v3 + 1960);
  *(void *)(a1 + 2008) = *(void *)(v3 + 1968);
  *(void *)(a1 + 2016) = *(void *)(v3 + 1976);
  *(void *)(a1 + 2024) = *(void *)(v3 + 1984);
  *(unsigned char *)(a1 + 2032) = *(unsigned char *)(v3 + 1992);
  *(void *)(a1 + 2040) = *(void *)(v3 + 2000);
  *(void *)(a1 + 2048) = *(void *)(v3 + 2008);
  *(void *)(a1 + 2056) = *(void *)(v3 + 2016);
  *(void *)(a1 + 2064) = *(void *)(v3 + 2024);
  *(void *)(a1 + 2072) = *(void *)(v3 + 2032);
  *(void *)(a1 + 2080) = *(void *)(v3 + 2040);
  *(unsigned char *)(a1 + 2088) = *(unsigned char *)(v3 + 2048);
  *(void *)(a1 + 2096) = *(void *)(v3 + 2056);
  *(void *)(a1 + 2104) = *(void *)(v3 + 2064);
  *(void *)(a1 + 2112) = *(void *)(v3 + 2072);
  *(void *)(a1 + 2120) = *(void *)(v3 + 2080);
  *(void *)(a1 + 2128) = *(void *)(v3 + 2088);
  *(void *)(a1 + 2136) = *(void *)(v3 + 2096);
  *(void *)(a1 + 2144) = *(void *)(v3 + 2104);
  *(unsigned char *)(a1 + 2152) = *(unsigned char *)(v3 + 2112);
  *(void *)(a1 + 2160) = *(void *)(v3 + 2120);
  *(unsigned char *)(a1 + 2168) = *(unsigned char *)(v3 + 2128);
  *(void *)(a1 + 2176) = *(void *)(v3 + 2136);
  *(void *)(a1 + 2184) = *(void *)(v3 + 2144);
  *(void *)(a1 + 2192) = *(void *)(v3 + 2152);
  *(void *)(a1 + 2200) = *(void *)(v3 + 2160);
  *(void *)(a1 + 2208) = *(void *)(v3 + 2168);
  *(void *)(a1 + 2216) = *(void *)(v3 + 2176);
  *(void *)(a1 + 2224) = *(void *)(v3 + 2184);
  *(void *)(a1 + 2232) = *(void *)(v3 + 2192);
  *(unsigned char *)(a1 + 2240) = *(unsigned char *)(v3 + 2200);
  *(unsigned char *)(a1 + 2241) = *(unsigned char *)(v3 + 2201);
  *(unsigned char *)(a1 + 2242) = *(unsigned char *)(v3 + 2202);
  *(void *)(a1 + 2248) = *(void *)(v3 + 2208);
  *(void *)(a1 + 2256) = *(void *)(v3 + 2216);
  *(void *)(a1 + 2264) = *(void *)(v3 + 2224);
  *(void *)(a1 + 2272) = *(void *)(v3 + 2232);
  *(void *)(a1 + 2280) = *(void *)(v3 + 2240);
  *(void *)(a1 + 2288) = *(void *)(v3 + 2248);
  *(void *)(a1 + 2296) = *(void *)(v3 + 2256);
  *(void *)(a1 + 2304) = *(void *)(v3 + 2264);
  *(void *)(a1 + 2312) = *(void *)(v3 + 2272);
  *(void *)(a1 + 2320) = *(void *)(v3 + 2280);
  *(void *)(a1 + 2328) = *(void *)(v3 + 2288);
  *(unsigned char *)(a1 + 2336) = *(unsigned char *)(v3 + 2296);
  *(void *)(a1 + 2344) = *(void *)(v3 + 2304);
  *(unsigned char *)(a1 + 2352) = *(unsigned char *)(v3 + 2312);
  *(void *)(a1 + 2360) = *(void *)(v3 + 2320);
  *(void *)(a1 + 2368) = *(void *)(v3 + 2328);
  *(void *)(a1 + 2376) = *(void *)(v3 + 2336);
  *(void *)(a1 + 2384) = *(void *)(v3 + 2344);
  *(void *)(a1 + 2392) = *(void *)(v3 + 2352);
  *(unsigned char *)(a1 + 2400) = v4[48];
  *(void *)(a1 + 2408) = *(void *)(v3 + 2368);
  *(void *)(a1 + 2416) = *(void *)(v3 + 2376);
  *(void *)(a1 + 2424) = *(void *)(v3 + 2384);
  *(void *)(a1 + 2432) = *(void *)(v3 + 2392);
  *(void *)(a1 + 2440) = *(void *)(v3 + 2400);
  *(void *)(a1 + 2448) = *(void *)(v3 + 2408);
  *(void *)(a1 + 2456) = *(void *)(v3 + 2416);
  *(unsigned char *)(a1 + 2464) = v4[112];
  *(void *)(a1 + 2472) = *(void *)(v3 + 2432);
  *(void *)(a1 + 2480) = *(void *)(v3 + 2440);
  *(void *)(a1 + 2488) = *(void *)(v3 + 2448);
  *(void *)(a1 + 2496) = *(void *)(v3 + 2456);
  *(void *)(a1 + 2504) = *(void *)(v3 + 2464);
  *(unsigned char *)(a1 + 2512) = v4[160];
  *(void *)(a1 + 2520) = *(void *)(v3 + 2480);
  *(void *)(a1 + 2528) = *(void *)(v3 + 2488);
  *(void *)(a1 + 2536) = *(void *)(v3 + 2496);
  *(void *)(a1 + 2544) = *(void *)(v3 + 2504);
  *(void *)(a1 + 2552) = *(void *)(v3 + 2512);
  *(void *)(a1 + 2560) = *(void *)(v3 + 2520);
  *(void *)(a1 + 2568) = *(void *)(v3 + 2528);
  *(void *)(a1 + 2576) = *(void *)(v3 + 2536);
  *(void *)(a1 + 2584) = *(void *)(v3 + 2544);
  *(void *)(a1 + 2592) = *(void *)(v3 + 2552);
  *(void *)(a1 + 2600) = *(void *)(v3 + 2560);
  *(void *)(a1 + 2608) = *(void *)(v3 + 2568);
  *(void *)(a1 + 2616) = *(void *)(v3 + 2576);
  *(void *)(a1 + 2624) = *(void *)(v3 + 2584);
  *(void *)(a1 + 2632) = *(void *)(v3 + 2592);
  *(void *)(a1 + 2640) = *(void *)(v3 + 2600);
  *(unsigned char *)(a1 + 2648) = *(unsigned char *)(v3 + 2608);
  *(void *)(a1 + 2656) = *(void *)(v3 + 2616);
  *(void *)(a1 + 2664) = *(void *)(v3 + 2624);
  *(void *)(a1 + 2672) = *(void *)(v3 + 2632);
  *(void *)(a1 + 2680) = *(void *)(v3 + 2640);
  *(void *)(a1 + 2688) = *(void *)(v3 + 2648);
  *(void *)(a1 + 2696) = *(void *)(v3 + 2656);
  *(void *)(a1 + 2704) = *(void *)(v3 + 2664);
  *(void *)(a1 + 2712) = *(void *)(v3 + 2672);
  *(void *)(a1 + 2720) = *(void *)(v3 + 2680);
  *(void *)(a1 + 2728) = *(void *)(v3 + 2688);
  *(void *)(a1 + 2736) = *(void *)(v3 + 2696);
  *(void *)(a1 + 2744) = *(void *)(v3 + 2704);
  *(void *)(a1 + 2752) = *(void *)(v3 + 2712);
  *(void *)(a1 + 2760) = *(void *)(v3 + 2720);
  *(void *)(a1 + 2768) = *(void *)(v3 + 2728);
  *(void *)(a1 + 2776) = *(void *)(v3 + 2736);
  *(void *)(a1 + 2784) = *(void *)(v3 + 2744);
  *(void *)(a1 + 2792) = *(void *)(v3 + 2752);
  *(void *)(a1 + 2800) = *(void *)(v3 + 2760);
  *(void *)(a1 + 2808) = *(void *)(v3 + 2768);
  *(void *)(a1 + 2816) = *(void *)(v3 + 2776);
  *(void *)(a1 + 2824) = *(void *)(v3 + 2784);
  *(void *)(a1 + 2832) = *(void *)(v3 + 2792);
  *(void *)(a1 + 2840) = *(void *)(v3 + 2800);
  *(unsigned char *)(a1 + 2848) = *(unsigned char *)(v3 + 2808);
  *(void *)(a1 + 2856) = *(void *)(v3 + 2816);
  *(unsigned char *)(a1 + 2864) = *(unsigned char *)(v3 + 2824);
  *(void *)(a1 + 2872) = *(void *)(v3 + 2832);
  *(void *)(a1 + 2880) = *(void *)(v3 + 2840);
  *(void *)(a1 + 2888) = *(void *)(v3 + 2848);
  *(void *)(a1 + 2896) = *(void *)(v3 + 2856);
  *(void *)(a1 + 2904) = *(void *)(v3 + 2864);
  *(void *)(a1 + 2912) = *(void *)(v3 + 2872);
  *(void *)(a1 + 2920) = *(void *)(v3 + 2880);
  *(void *)(a1 + 2928) = *(void *)(v3 + 2888);
  *(unsigned char *)(a1 + 2936) = *(unsigned char *)(v3 + 2896);
  *(unsigned char *)(a1 + 2937) = *(unsigned char *)(v3 + 2897);
  *(unsigned char *)(a1 + 2938) = *(unsigned char *)(v3 + 2898);
  *(void *)(a1 + 2944) = *(void *)(v3 + 2904);
  *(void *)(a1 + 2952) = *(void *)(v3 + 2912);
  *(void *)(a1 + 2960) = *(void *)(v3 + 2920);
  *(void *)(a1 + 2968) = *(void *)(v3 + 2928);
  *(void *)(a1 + 2976) = *(void *)(v3 + 2936);
  *(void *)(a1 + 2984) = *(void *)(v3 + 2944);
  *(void *)(a1 + 2992) = *(void *)(v3 + 2952);
  *(void *)(a1 + 3000) = *(void *)(v3 + 2960);
  *(void *)(a1 + 3008) = *(void *)(v3 + 2968);
  *(void *)(a1 + 3016) = *(void *)(v3 + 2976);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3024) = *(void *)(v3 + 2984);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3032) = *(void *)(v3 + 2992);
  *(void *)(a1 + 3040) = *(void *)(v3 + 3000);
  *(void *)(a1 + 3048) = *(void *)(v3 + 3008);
  *(void *)(a1 + 3056) = *(void *)(v3 + 3016);
  *(void *)(a1 + 3064) = *(void *)(v3 + 3024);
  *(void *)(a1 + 3072) = *(void *)(v3 + 3032);
  *(void *)(a1 + 3080) = *(void *)(v3 + 3040);
  *(void *)(a1 + 3088) = *(void *)(v3 + 3048);
  *(void *)(a1 + 3096) = *(void *)(v3 + 3056);
  *(void *)(a1 + 3104) = *(void *)(v3 + 3064);
  *(void *)(a1 + 3112) = *(void *)(v3 + 3072);
  *(void *)(a1 + 3120) = *(void *)(v3 + 3080);
  *(void *)(a1 + 3128) = *(void *)(v3 + 3088);
  *(void *)(a1 + 3136) = *(void *)(v3 + 3096);
  *(void *)(a1 + 3144) = *(void *)(v3 + 3104);
  *(void *)(a1 + 3152) = *(void *)(v3 + 3112);
  *(void *)(a1 + 3160) = *(void *)(v3 + 3120);
  *(void *)(a1 + 3168) = *(void *)(v3 + 3128);
  *(void *)(a1 + 3176) = *(void *)(v3 + 3136);
  *(void *)(a1 + 3184) = *(void *)(v3 + 3144);
  *(void *)(a1 + 3192) = *(void *)(v3 + 3152);
  *(void *)(a1 + 3200) = *(void *)(v3 + 3160);
  *(void *)(a1 + 3208) = *(void *)(v3 + 3168);
  *(void *)(a1 + 3216) = *(void *)(v3 + 3176);
  *(void *)(a1 + 3224) = *(void *)(v3 + 3184);
  *(void *)(a1 + 3232) = *(void *)(v3 + 3192);
  *(void *)(a1 + 3240) = *(void *)(v3 + 3200);
  *(void *)(a1 + 3248) = *(void *)(v3 + 3208);
  *(void *)(a1 + 3256) = *(void *)(v3 + 3216);
  *(void *)(a1 + 3264) = *(void *)(v3 + 3224);
  *(void *)(a1 + 3272) = *(void *)(v3 + 3232);
  *(void *)(a1 + 3280) = *(void *)(v3 + 3240);
  *(void *)(a1 + 3288) = *(void *)(v3 + 3248);
  *(void *)(a1 + 3296) = *(void *)(v3 + 3256);
  *(void *)(a1 + 3304) = *(void *)(v3 + 3264);
  *(void *)(a1 + 3312) = *(void *)(v3 + 3272);
  *(void *)(a1 + 3320) = *(void *)(v3 + 3280);
  *(void *)(a1 + 3328) = *(void *)(v3 + 3288);
  *(void *)(a1 + 3336) = *(void *)(v3 + 3296);
  *(void *)(a1 + 3344) = *(void *)(v3 + 3304);
  *(void *)(a1 + 3352) = *(void *)(v3 + 3312);
  *(void *)(a1 + 3360) = *(void *)(v3 + 3320);
  *(void *)(a1 + 3368) = *(void *)(v3 + 3328);
  *(void *)(a1 + 3376) = *(void *)(v3 + 3336);
  *(void *)(a1 + 3384) = *(void *)(v3 + 3344);
  *(void *)(a1 + 3392) = *(void *)(v3 + 3352);
  *(void *)(a1 + 3400) = *(void *)(v3 + 3360);
  *(void *)(a1 + 3408) = *(void *)(v3 + 3368);
  *(void *)(a1 + 3416) = *(void *)(v3 + 3376);
  *(void *)(a1 + 3424) = *(void *)(v3 + 3384);
  *(void *)(a1 + 3432) = *(void *)(v3 + 3392);
  *(void *)(a1 + 3440) = *(void *)(v3 + 3400);
  *(void *)(a1 + 3448) = *(void *)(v3 + 3408);
  *(void *)(a1 + 3456) = *(void *)(v3 + 3416);
  *(void *)(a1 + 3464) = *(void *)(v3 + 3424);
  *(void *)(a1 + 3472) = *(void *)(v3 + 3432);
  *(void *)(a1 + 3480) = *(void *)(v3 + 3440);
  *(void *)(a1 + 3488) = *(void *)(v3 + 3448);
  *(void *)(a1 + 3496) = *(void *)(v3 + 3456);
  *(void *)(a1 + 3504) = *(void *)(v3 + 3464);
  *(void *)(a1 + 3512) = *(void *)(v3 + 3472);
  *(void *)(a1 + 3520) = *(void *)(v3 + 3480);
  *(void *)(a1 + 3528) = *(void *)(v3 + 3488);
  *(void *)(a1 + 3536) = *(void *)(v3 + 3496);
  *(void *)(a1 + 3544) = *(void *)(v3 + 3504);
  *(void *)(a1 + 3552) = *(void *)(v3 + 3512);
  *(void *)(a1 + 3560) = *(void *)(v3 + 3520);
  *(void *)(a1 + 3568) = *(void *)(v3 + 3528);
  *(void *)(a1 + 3576) = *(void *)(v3 + 3536);
  *(void *)(a1 + 3584) = *(void *)(v3 + 3544);
  *(void *)(a1 + 3592) = *(void *)(v3 + 3552);
  return a1;
}

void *__swift_memcpy3600_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE10uLL);
}

uint64_t _s13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = (unsigned char *)(a2 + 2352);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = a2 + 928;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v6 = (_OWORD *)(a2 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v7 = (_OWORD *)(a1 + 40);
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  long long v12 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v12;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  long long v13 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v13;
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  long long v14 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v14;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  uint64_t v15 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v15;
  swift_bridgeObjectRelease();
  long long v16 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v16;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  long long v17 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v17;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  long long v18 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v18;
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  long long v19 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v19;
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  long long v20 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v20;
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  long long v21 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v21;
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  long long v22 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v22;
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  long long v23 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v23;
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 832) = *(void *)(a2 + 832);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  swift_bridgeObjectRelease();
  long long v24 = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 864) = v24;
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(unsigned char *)(a1 + 912) = *(unsigned char *)(a2 + 912);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(v5 + 16);
  *(unsigned char *)(a1 + 945) = *(unsigned char *)(v5 + 17);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  long long v25 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v25;
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(void *)(a1 + 1336) = *(void *)(a2 + 1336);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1344) = *(void *)(a2 + 1344);
  *(void *)(a1 + 1352) = *(void *)(a2 + 1352);
  *(void *)(a1 + 1360) = *(void *)(a2 + 1360);
  swift_bridgeObjectRelease();
  v7[83] = v6[83];
  v7[84] = v6[84];
  v7[85] = v6[85];
  *(_WORD *)(a1 + 1416) = *(_WORD *)(a2 + 1416);
  *(_OWORD *)(a1 + 1424) = *(_OWORD *)(a2 + 1424);
  *(unsigned char *)(a1 + 1440) = *(unsigned char *)(a2 + 1440);
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(_OWORD *)(a1 + 1520) = *(_OWORD *)(a2 + 1520);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  *(void *)(a1 + 1560) = *(void *)(a2 + 1560);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(void *)(a1 + 1600) = *(void *)(a2 + 1600);
  *(void *)(a1 + 1608) = *(void *)(a2 + 1608);
  *(_OWORD *)(a1 + 1616) = *(_OWORD *)(a2 + 1616);
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(void *)(a1 + 1648) = *(void *)(a2 + 1648);
  *(void *)(a1 + 1656) = *(void *)(a2 + 1656);
  *(_OWORD *)(a1 + 1664) = *(_OWORD *)(a2 + 1664);
  *(_OWORD *)(a1 + 1680) = *(_OWORD *)(a2 + 1680);
  *(void *)(a1 + 1696) = *(void *)(a2 + 1696);
  *(void *)(a1 + 1704) = *(void *)(a2 + 1704);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  *(_OWORD *)(a1 + 1728) = *(_OWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(void *)(a1 + 1760) = *(void *)(a2 + 1760);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1768) = *(void *)(a2 + 1768);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(void *)(a1 + 1808) = *(void *)(a2 + 1808);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1816) = *(void *)(a2 + 1816);
  *(void *)(a1 + 1824) = *(void *)(a2 + 1824);
  *(void *)(a1 + 1832) = *(void *)(a2 + 1832);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1840) = *(_OWORD *)(a2 + 1840);
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(_WORD *)(a1 + 1888) = *(_WORD *)(a2 + 1888);
  *(void *)(a1 + 1896) = *(void *)(a2 + 1896);
  *(_OWORD *)(a1 + 1904) = *(_OWORD *)(a2 + 1904);
  *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
  *(_OWORD *)(a1 + 1936) = *(_OWORD *)(a2 + 1936);
  *(_OWORD *)(a1 + 1952) = *(_OWORD *)(a2 + 1952);
  *(_OWORD *)(a1 + 1968) = *(_OWORD *)(a2 + 1968);
  *(_OWORD *)(a1 + 1984) = *(_OWORD *)(a2 + 1984);
  *(_OWORD *)(a1 + 2000) = *(_OWORD *)(a2 + 2000);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(unsigned char *)(a1 + 2032) = *(unsigned char *)(a2 + 2032);
  *(void *)(a1 + 2040) = *(void *)(a2 + 2040);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = *(_OWORD *)(a2 + 2064);
  *(void *)(a1 + 2080) = *(void *)(a2 + 2080);
  *(unsigned char *)(a1 + 2088) = *(unsigned char *)(a2 + 2088);
  *(_OWORD *)(a1 + 2096) = *(_OWORD *)(a2 + 2096);
  *(void *)(a1 + 2112) = *(void *)(a2 + 2112);
  *(void *)(a1 + 2120) = *(void *)(a2 + 2120);
  *(_OWORD *)(a1 + 2128) = *(_OWORD *)(a2 + 2128);
  *(void *)(a1 + 2144) = *(void *)(a2 + 2144);
  *(unsigned char *)(a1 + 2152) = *(unsigned char *)(a2 + 2152);
  *(void *)(a1 + 2160) = *(void *)(a2 + 2160);
  *(unsigned char *)(a1 + 2168) = *(unsigned char *)(a2 + 2168);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_OWORD *)(a1 + 2192) = *(_OWORD *)(a2 + 2192);
  *(_OWORD *)(a1 + 2208) = *(_OWORD *)(a2 + 2208);
  *(_OWORD *)(a1 + 2224) = *(_OWORD *)(a2 + 2224);
  *(unsigned char *)(a1 + 2240) = *(unsigned char *)(a2 + 2240);
  *(unsigned char *)(a1 + 2241) = *(unsigned char *)(a2 + 2241);
  *(unsigned char *)(a1 + 2242) = *(unsigned char *)(a2 + 2242);
  *(void *)(a1 + 2248) = *(void *)(a2 + 2248);
  *(_OWORD *)(a1 + 2256) = *(_OWORD *)(a2 + 2256);
  *(_OWORD *)(a1 + 2272) = *(_OWORD *)(a2 + 2272);
  *(_OWORD *)(a1 + 2288) = *(_OWORD *)(a2 + 2288);
  *(_OWORD *)(a1 + 2304) = *(_OWORD *)(a2 + 2304);
  *(_OWORD *)(a1 + 2320) = *(_OWORD *)(a2 + 2320);
  *(unsigned char *)(a1 + 2336) = *(unsigned char *)(a2 + 2336);
  *(void *)(a1 + 2344) = *(void *)(a2 + 2344);
  *(unsigned char *)(a1 + 2352) = *(unsigned char *)(a2 + 2352);
  *(void *)(a1 + 2360) = *(void *)(a2 + 2360);
  *(_OWORD *)(a1 + 2368) = *(_OWORD *)(a2 + 2368);
  *(_OWORD *)(a1 + 2384) = *(_OWORD *)(a2 + 2384);
  *(unsigned char *)(a1 + 2400) = v4[48];
  *(void *)(a1 + 2408) = *(void *)(a2 + 2408);
  *(_OWORD *)(a1 + 2416) = *(_OWORD *)(a2 + 2416);
  *(_OWORD *)(a1 + 2432) = *(_OWORD *)(a2 + 2432);
  *(_OWORD *)(a1 + 2448) = *(_OWORD *)(a2 + 2448);
  *(unsigned char *)(a1 + 2464) = v4[112];
  *(void *)(a1 + 2472) = *(void *)(a2 + 2472);
  *(_OWORD *)(a1 + 2480) = *(_OWORD *)(a2 + 2480);
  *(_OWORD *)(a1 + 2496) = *(_OWORD *)(a2 + 2496);
  *(unsigned char *)(a1 + 2512) = v4[160];
  *(void *)(a1 + 2520) = *(void *)(a2 + 2520);
  *(_OWORD *)(a1 + 2528) = *(_OWORD *)(a2 + 2528);
  *(_OWORD *)(a1 + 2544) = *(_OWORD *)(a2 + 2544);
  *(_OWORD *)(a1 + 2560) = *(_OWORD *)(a2 + 2560);
  *(_OWORD *)(a1 + 2576) = *(_OWORD *)(a2 + 2576);
  *(_OWORD *)(a1 + 2592) = *(_OWORD *)(a2 + 2592);
  *(_OWORD *)(a1 + 2608) = *(_OWORD *)(a2 + 2608);
  *(_OWORD *)(a1 + 2624) = *(_OWORD *)(a2 + 2624);
  *(void *)(a1 + 2640) = *(void *)(a2 + 2640);
  *(unsigned char *)(a1 + 2648) = *(unsigned char *)(a2 + 2648);
  *(_OWORD *)(a1 + 2656) = *(_OWORD *)(a2 + 2656);
  *(_OWORD *)(a1 + 2672) = *(_OWORD *)(a2 + 2672);
  *(_OWORD *)(a1 + 2688) = *(_OWORD *)(a2 + 2688);
  *(_OWORD *)(a1 + 2704) = *(_OWORD *)(a2 + 2704);
  *(_OWORD *)(a1 + 2720) = *(_OWORD *)(a2 + 2720);
  *(_OWORD *)(a1 + 2736) = *(_OWORD *)(a2 + 2736);
  *(_OWORD *)(a1 + 2752) = *(_OWORD *)(a2 + 2752);
  *(_OWORD *)(a1 + 2768) = *(_OWORD *)(a2 + 2768);
  *(_OWORD *)(a1 + 2784) = *(_OWORD *)(a2 + 2784);
  *(_OWORD *)(a1 + 2800) = *(_OWORD *)(a2 + 2800);
  *(_OWORD *)(a1 + 2816) = *(_OWORD *)(a2 + 2816);
  *(_OWORD *)(a1 + 2832) = *(_OWORD *)(a2 + 2832);
  *(unsigned char *)(a1 + 2848) = *(unsigned char *)(a2 + 2848);
  *(void *)(a1 + 2856) = *(void *)(a2 + 2856);
  *(unsigned char *)(a1 + 2864) = *(unsigned char *)(a2 + 2864);
  *(void *)(a1 + 2872) = *(void *)(a2 + 2872);
  *(_OWORD *)(a1 + 2880) = *(_OWORD *)(a2 + 2880);
  *(_OWORD *)(a1 + 2896) = *(_OWORD *)(a2 + 2896);
  *(_OWORD *)(a1 + 2912) = *(_OWORD *)(a2 + 2912);
  *(void *)(a1 + 2928) = *(void *)(a2 + 2928);
  *(unsigned char *)(a1 + 2936) = *(unsigned char *)(a2 + 2936);
  *(unsigned char *)(a1 + 2937) = *(unsigned char *)(a2 + 2937);
  *(unsigned char *)(a1 + 2938) = *(unsigned char *)(a2 + 2938);
  *(_OWORD *)(a1 + 2944) = *(_OWORD *)(a2 + 2944);
  *(_OWORD *)(a1 + 2960) = *(_OWORD *)(a2 + 2960);
  *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
  *(_OWORD *)(a1 + 2992) = *(_OWORD *)(a2 + 2992);
  *(void *)(a1 + 3008) = *(void *)(a2 + 3008);
  *(void *)(a1 + 3016) = *(void *)(a2 + 3016);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3024) = *(void *)(a2 + 3024);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3032) = *(void *)(a2 + 3032);
  *(_OWORD *)(a1 + 3040) = *(_OWORD *)(a2 + 3040);
  *(_OWORD *)(a1 + 3056) = *(_OWORD *)(a2 + 3056);
  *(_OWORD *)(a1 + 3072) = *(_OWORD *)(a2 + 3072);
  *(_OWORD *)(a1 + 3088) = *(_OWORD *)(a2 + 3088);
  *(_OWORD *)(a1 + 3104) = *(_OWORD *)(a2 + 3104);
  *(_OWORD *)(a1 + 3120) = *(_OWORD *)(a2 + 3120);
  *(_OWORD *)(a1 + 3136) = *(_OWORD *)(a2 + 3136);
  *(_OWORD *)(a1 + 3152) = *(_OWORD *)(a2 + 3152);
  *(_OWORD *)(a1 + 3168) = *(_OWORD *)(a2 + 3168);
  *(_OWORD *)(a1 + 3184) = *(_OWORD *)(a2 + 3184);
  *(_OWORD *)(a1 + 3200) = *(_OWORD *)(a2 + 3200);
  *(_OWORD *)(a1 + 3216) = *(_OWORD *)(a2 + 3216);
  *(_OWORD *)(a1 + 3232) = *(_OWORD *)(a2 + 3232);
  *(_OWORD *)(a1 + 3248) = *(_OWORD *)(a2 + 3248);
  *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
  *(_OWORD *)(a1 + 3280) = *(_OWORD *)(a2 + 3280);
  *(_OWORD *)(a1 + 3296) = *(_OWORD *)(a2 + 3296);
  *(_OWORD *)(a1 + 3312) = *(_OWORD *)(a2 + 3312);
  *(_OWORD *)(a1 + 3328) = *(_OWORD *)(a2 + 3328);
  *(_OWORD *)(a1 + 3344) = *(_OWORD *)(a2 + 3344);
  *(_OWORD *)(a1 + 3360) = *(_OWORD *)(a2 + 3360);
  *(_OWORD *)(a1 + 3376) = *(_OWORD *)(a2 + 3376);
  *(_OWORD *)(a1 + 3392) = *(_OWORD *)(a2 + 3392);
  *(_OWORD *)(a1 + 3408) = *(_OWORD *)(a2 + 3408);
  *(_OWORD *)(a1 + 3424) = *(_OWORD *)(a2 + 3424);
  *(_OWORD *)(a1 + 3440) = *(_OWORD *)(a2 + 3440);
  *(_OWORD *)(a1 + 3456) = *(_OWORD *)(a2 + 3456);
  *(_OWORD *)(a1 + 3472) = *(_OWORD *)(a2 + 3472);
  *(_OWORD *)(a1 + 3488) = *(_OWORD *)(a2 + 3488);
  *(_OWORD *)(a1 + 3504) = *(_OWORD *)(a2 + 3504);
  *(_OWORD *)(a1 + 3520) = *(_OWORD *)(a2 + 3520);
  *(_OWORD *)(a1 + 3536) = *(_OWORD *)(a2 + 3536);
  *(_OWORD *)(a1 + 3552) = *(_OWORD *)(a2 + 3552);
  *(_OWORD *)(a1 + 3568) = *(_OWORD *)(a2 + 3568);
  *(_OWORD *)(a1 + 3584) = *(_OWORD *)(a2 + 3584);
  return a1;
}