uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 3600)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  v2 = *(void *)(a1 + 336);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 3592) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 3576) = 0u;
    *(_OWORD *)(result + 3560) = 0u;
    *(_OWORD *)(result + 3544) = 0u;
    *(_OWORD *)(result + 3528) = 0u;
    *(_OWORD *)(result + 3512) = 0u;
    *(_OWORD *)(result + 3496) = 0u;
    *(_OWORD *)(result + 3480) = 0u;
    *(_OWORD *)(result + 3464) = 0u;
    *(_OWORD *)(result + 3448) = 0u;
    *(_OWORD *)(result + 3432) = 0u;
    *(_OWORD *)(result + 3416) = 0u;
    *(_OWORD *)(result + 3400) = 0u;
    *(_OWORD *)(result + 3384) = 0u;
    *(_OWORD *)(result + 3368) = 0u;
    *(_OWORD *)(result + 3352) = 0u;
    *(_OWORD *)(result + 3336) = 0u;
    *(_OWORD *)(result + 3320) = 0u;
    *(_OWORD *)(result + 3304) = 0u;
    *(_OWORD *)(result + 3288) = 0u;
    *(_OWORD *)(result + 3272) = 0u;
    *(_OWORD *)(result + 3256) = 0u;
    *(_OWORD *)(result + 3240) = 0u;
    *(_OWORD *)(result + 3224) = 0u;
    *(_OWORD *)(result + 3208) = 0u;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 3600) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 336) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 3600) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationVMa()
{
  return &_s13ConfigurationVN;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s13ConfigurationV31PublisherDampeningConfigurationVMa()
{
  return &_s13ConfigurationV31PublisherDampeningConfigurationVN;
}

ValueMetadata *_s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyOMa()
{
  return &_s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyON;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13ConfigurationV19ActionConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13ConfigurationV19ActionConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV19ActionConfigurationVMa()
{
  return &_s13ConfigurationV19ActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV30ArticleReadActionConfigurationVMa()
{
  return &_s13ConfigurationV30ArticleReadActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV30ArticleReadActionConfigurationV32DefaultArticleReadActionDurationVMa()
{
  return &_s13ConfigurationV30ArticleReadActionConfigurationV32DefaultArticleReadActionDurationVN;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t _s13ConfigurationV32SportsTagSeenActionConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 11)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13ConfigurationV32SportsTagSeenActionConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV34DefaultSportsTagSeenActionDurationVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV34DefaultSportsTagSeenActionDurationVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV42DefaultSportsTagSeenActionEnableFeedSourceVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV42DefaultSportsTagSeenActionEnableFeedSourceVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV59DefaultSportsTagSeenActionnableSportsManagementDetailSourceVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV59DefaultSportsTagSeenActionnableSportsManagementDetailSourceVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV54DefaultSportsTagSeenActionEnableSportsManagementSourceVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV54DefaultSportsTagSeenActionEnableSportsManagementSourceVN;
}

ValueMetadata *_s13ConfigurationV32TrackListenedActionConfigurationVMa()
{
  return &_s13ConfigurationV32TrackListenedActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV32TrackListenedActionConfigurationV34DefaultTrackListenedActionDurationVMa()
{
  return &_s13ConfigurationV32TrackListenedActionConfigurationV34DefaultTrackListenedActionDurationVN;
}

ValueMetadata *_s13ConfigurationV31TrackVisitedActionConfigurationVMa()
{
  return &_s13ConfigurationV31TrackVisitedActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV31TrackVisitedActionConfigurationV33DefaultTrackVisitedActionDurationVMa()
{
  return &_s13ConfigurationV31TrackVisitedActionConfigurationV33DefaultTrackVisitedActionDurationVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v5 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v6 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v6;
  long long v7 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = v7;
  uint64_t v8 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v8;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  uint64_t v9 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v9;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  long long v10 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v10;
  uint64_t v11 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v11;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  long long v12 = *(_OWORD *)(a2 + 376);
  long long v13 = *(_OWORD *)(a2 + 392);
  long long v14 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v13;
  *(_OWORD *)(a1 + 408) = v14;
  *(_OWORD *)(a1 + 376) = v12;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  long long v15 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = v15;
  uint64_t v16 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v16;
  long long v17 = *(_OWORD *)(a2 + 488);
  long long v18 = *(_OWORD *)(a2 + 504);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = v18;
  *(_OWORD *)(a1 + 488) = v17;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  long long v19 = *(_OWORD *)(a2 + 536);
  long long v20 = *(_OWORD *)(a2 + 552);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(_OWORD *)(a1 + 552) = v20;
  *(_OWORD *)(a1 + 536) = v19;
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  long long v21 = *(_OWORD *)(a2 + 584);
  long long v22 = *(_OWORD *)(a2 + 600);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = v22;
  *(_OWORD *)(a1 + 584) = v21;
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  long long v23 = *(_OWORD *)(a2 + 632);
  long long v24 = *(_OWORD *)(a2 + 648);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(_OWORD *)(a1 + 648) = v24;
  *(_OWORD *)(a1 + 632) = v23;
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  long long v25 = *(_OWORD *)(a2 + 680);
  long long v26 = *(_OWORD *)(a2 + 696);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = v26;
  *(_OWORD *)(a1 + 680) = v25;
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  long long v27 = *(_OWORD *)(a2 + 736);
  long long v28 = *(_OWORD *)(a2 + 752);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(_OWORD *)(a1 + 736) = v27;
  *(_OWORD *)(a1 + 752) = v28;
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  long long v29 = *(_OWORD *)(a2 + 808);
  long long v30 = *(_OWORD *)(a2 + 824);
  long long v31 = *(_OWORD *)(a2 + 840);
  *(_WORD *)(a1 + 856) = *(_WORD *)(a2 + 856);
  *(_OWORD *)(a1 + 824) = v30;
  *(_OWORD *)(a1 + 840) = v31;
  *(_OWORD *)(a1 + 808) = v29;
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
  *(void *)(a1 + 896) = *(void *)(a2 + 896);
  *(unsigned char *)(a1 + 904) = *(unsigned char *)(a2 + 904);
  *(unsigned char *)(a1 + 905) = *(unsigned char *)(a2 + 905);
  long long v32 = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 928) = v32;
  long long v33 = *(_OWORD *)(a2 + 944);
  long long v34 = *(_OWORD *)(a2 + 960);
  long long v35 = *(_OWORD *)(a2 + 976);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(_OWORD *)(a1 + 960) = v34;
  *(_OWORD *)(a1 + 976) = v35;
  *(_OWORD *)(a1 + 944) = v33;
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  long long v36 = *(_OWORD *)(a2 + 1008);
  long long v37 = *(_OWORD *)(a2 + 1024);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(_OWORD *)(a1 + 1008) = v36;
  *(_OWORD *)(a1 + 1024) = v37;
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  long long v38 = *(_OWORD *)(a2 + 1056);
  long long v39 = *(_OWORD *)(a2 + 1072);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(_OWORD *)(a1 + 1072) = v39;
  *(_OWORD *)(a1 + 1056) = v38;
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  long long v40 = *(_OWORD *)(a2 + 1104);
  long long v41 = *(_OWORD *)(a2 + 1120);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = v41;
  *(_OWORD *)(a1 + 1104) = v40;
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  long long v42 = *(_OWORD *)(a2 + 1152);
  long long v43 = *(_OWORD *)(a2 + 1168);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(_OWORD *)(a1 + 1168) = v43;
  *(_OWORD *)(a1 + 1152) = v42;
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  long long v44 = *(_OWORD *)(a2 + 1200);
  long long v45 = *(_OWORD *)(a2 + 1216);
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = v45;
  *(_OWORD *)(a1 + 1200) = v44;
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  long long v46 = *(_OWORD *)(a2 + 1256);
  long long v47 = *(_OWORD *)(a2 + 1272);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(_OWORD *)(a1 + 1256) = v46;
  *(_OWORD *)(a1 + 1272) = v47;
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  long long v48 = *(_OWORD *)(a2 + 1328);
  long long v49 = *(_OWORD *)(a2 + 1344);
  long long v50 = *(_OWORD *)(a2 + 1360);
  *(_WORD *)(a1 + 1376) = *(_WORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1360) = v50;
  *(_OWORD *)(a1 + 1344) = v49;
  *(_OWORD *)(a1 + 1328) = v48;
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(void *)(a1 + 1392) = *(void *)(a2 + 1392);
  *(unsigned char *)(a1 + 1400) = *(unsigned char *)(a2 + 1400);
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  long long v51 = *(_OWORD *)(a2 + 1432);
  long long v52 = *(_OWORD *)(a2 + 1448);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  *(_OWORD *)(a1 + 1448) = v52;
  *(_OWORD *)(a1 + 1432) = v51;
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  long long v53 = *(_OWORD *)(a2 + 1480);
  long long v54 = *(_OWORD *)(a2 + 1496);
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(_OWORD *)(a1 + 1496) = v54;
  *(_OWORD *)(a1 + 1480) = v53;
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  long long v55 = *(_OWORD *)(a2 + 1528);
  long long v56 = *(_OWORD *)(a2 + 1544);
  *(void *)(a1 + 1560) = *(void *)(a2 + 1560);
  *(_OWORD *)(a1 + 1544) = v56;
  *(_OWORD *)(a1 + 1528) = v55;
  *(void *)(a1 + 1568) = *(void *)(a2 + 1568);
  long long v57 = *(_OWORD *)(a2 + 1576);
  long long v58 = *(_OWORD *)(a2 + 1592);
  *(void *)(a1 + 1608) = *(void *)(a2 + 1608);
  *(_OWORD *)(a1 + 1592) = v58;
  *(_OWORD *)(a1 + 1576) = v57;
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  long long v59 = *(_OWORD *)(a2 + 1624);
  long long v60 = *(_OWORD *)(a2 + 1640);
  *(void *)(a1 + 1656) = *(void *)(a2 + 1656);
  *(_OWORD *)(a1 + 1640) = v60;
  *(_OWORD *)(a1 + 1624) = v59;
  *(void *)(a1 + 1664) = *(void *)(a2 + 1664);
  long long v61 = *(_OWORD *)(a2 + 1672);
  long long v62 = *(_OWORD *)(a2 + 1688);
  *(void *)(a1 + 1704) = *(void *)(a2 + 1704);
  *(_OWORD *)(a1 + 1688) = v62;
  *(_OWORD *)(a1 + 1672) = v61;
  *(void *)(a1 + 1712) = *(void *)(a2 + 1712);
  *(void *)(a1 + 1720) = *(void *)(a2 + 1720);
  long long v63 = *(_OWORD *)(a2 + 1728);
  long long v64 = *(_OWORD *)(a2 + 1744);
  *(void *)(a1 + 1760) = *(void *)(a2 + 1760);
  *(_OWORD *)(a1 + 1744) = v64;
  *(_OWORD *)(a1 + 1728) = v63;
  *(void *)(a1 + 1768) = *(void *)(a2 + 1768);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(void *)(a1 + 1792) = *(void *)(a2 + 1792);
  long long v65 = *(_OWORD *)(a2 + 1800);
  long long v66 = *(_OWORD *)(a2 + 1816);
  long long v67 = *(_OWORD *)(a2 + 1832);
  *(_WORD *)(a1 + 1848) = *(_WORD *)(a2 + 1848);
  *(_OWORD *)(a1 + 1816) = v66;
  *(_OWORD *)(a1 + 1832) = v67;
  *(_OWORD *)(a1 + 1800) = v65;
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(void *)(a1 + 1888) = *(void *)(a2 + 1888);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 888;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 376);
  long long v6 = *(_OWORD *)(a2 + 392);
  long long v7 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v6;
  *(_OWORD *)(a1 + 408) = v7;
  *(_OWORD *)(a1 + 376) = v5;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 808);
  long long v9 = *(_OWORD *)(a2 + 824);
  long long v10 = *(_OWORD *)(a2 + 840);
  *(_WORD *)(a1 + 856) = *(_WORD *)(a2 + 856);
  *(_OWORD *)(a1 + 824) = v9;
  *(_OWORD *)(a1 + 840) = v10;
  *(_OWORD *)(a1 + 808) = v8;
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
  *(void *)(a1 + 896) = *(void *)(a2 + 896);
  *(unsigned char *)(a1 + 904) = *(unsigned char *)(v4 + 16);
  *(unsigned char *)(a1 + 905) = *(unsigned char *)(v4 + 17);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  *(void *)(a1 + 1208) = *(void *)(a2 + 1208);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);
  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v11 = *(_OWORD *)(a2 + 1328);
  long long v12 = *(_OWORD *)(a2 + 1344);
  long long v13 = *(_OWORD *)(a2 + 1360);
  *(_WORD *)(a1 + 1376) = *(_WORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1360) = v13;
  *(_OWORD *)(a1 + 1344) = v12;
  *(_OWORD *)(a1 + 1328) = v11;
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(void *)(a1 + 1392) = *(void *)(a2 + 1392);
  *(unsigned char *)(a1 + 1400) = *(unsigned char *)(a2 + 1400);
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(void *)(a1 + 1440) = *(void *)(a2 + 1440);
  *(void *)(a1 + 1448) = *(void *)(a2 + 1448);
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  *(void *)(a1 + 1464) = *(void *)(a2 + 1464);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(void *)(a1 + 1488) = *(void *)(a2 + 1488);
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  *(void *)(a1 + 1504) = *(void *)(a2 + 1504);
  *(void *)(a1 + 1512) = *(void *)(a2 + 1512);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(void *)(a1 + 1536) = *(void *)(a2 + 1536);
  *(void *)(a1 + 1544) = *(void *)(a2 + 1544);
  *(void *)(a1 + 1552) = *(void *)(a2 + 1552);
  *(void *)(a1 + 1560) = *(void *)(a2 + 1560);
  *(void *)(a1 + 1568) = *(void *)(a2 + 1568);
  *(void *)(a1 + 1576) = *(void *)(a2 + 1576);
  *(void *)(a1 + 1584) = *(void *)(a2 + 1584);
  *(void *)(a1 + 1592) = *(void *)(a2 + 1592);
  *(void *)(a1 + 1600) = *(void *)(a2 + 1600);
  *(void *)(a1 + 1608) = *(void *)(a2 + 1608);
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  *(void *)(a1 + 1624) = *(void *)(a2 + 1624);
  *(void *)(a1 + 1632) = *(void *)(a2 + 1632);
  *(void *)(a1 + 1640) = *(void *)(a2 + 1640);
  *(void *)(a1 + 1648) = *(void *)(a2 + 1648);
  *(void *)(a1 + 1656) = *(void *)(a2 + 1656);
  *(void *)(a1 + 1664) = *(void *)(a2 + 1664);
  *(void *)(a1 + 1672) = *(void *)(a2 + 1672);
  *(void *)(a1 + 1680) = *(void *)(a2 + 1680);
  *(void *)(a1 + 1688) = *(void *)(a2 + 1688);
  *(void *)(a1 + 1696) = *(void *)(a2 + 1696);
  *(void *)(a1 + 1704) = *(void *)(a2 + 1704);
  *(void *)(a1 + 1712) = *(void *)(a2 + 1712);
  *(void *)(a1 + 1720) = *(void *)(a2 + 1720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1728) = *(void *)(a2 + 1728);
  *(void *)(a1 + 1736) = *(void *)(a2 + 1736);
  *(void *)(a1 + 1744) = *(void *)(a2 + 1744);
  *(void *)(a1 + 1752) = *(void *)(a2 + 1752);
  *(void *)(a1 + 1760) = *(void *)(a2 + 1760);
  *(void *)(a1 + 1768) = *(void *)(a2 + 1768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1776) = *(void *)(a2 + 1776);
  *(void *)(a1 + 1784) = *(void *)(a2 + 1784);
  *(void *)(a1 + 1792) = *(void *)(a2 + 1792);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 1800);
  long long v15 = *(_OWORD *)(a2 + 1816);
  long long v16 = *(_OWORD *)(a2 + 1832);
  *(_WORD *)(a1 + 1848) = *(_WORD *)(a2 + 1848);
  *(_OWORD *)(a1 + 1816) = v15;
  *(_OWORD *)(a1 + 1832) = v16;
  *(_OWORD *)(a1 + 1800) = v14;
  *(void *)(a1 + 1856) = *(void *)(a2 + 1856);
  *(void *)(a1 + 1864) = *(void *)(a2 + 1864);
  *(void *)(a1 + 1872) = *(void *)(a2 + 1872);
  *(void *)(a1 + 1880) = *(void *)(a2 + 1880);
  *(void *)(a1 + 1888) = *(void *)(a2 + 1888);
  return a1;
}

void *__swift_memcpy1896_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x768uLL);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 888;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v5;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v6 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v7;
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  long long v8 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v8;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v9 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v9;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  long long v10 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v10;
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  long long v11 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v11;
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  long long v12 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v12;
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  long long v13 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v13;
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v14;
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  swift_bridgeObjectRelease();
  long long v15 = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = v15;
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_WORD *)(a1 + 856) = *(_WORD *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
  *(void *)(a1 + 896) = *(void *)(a2 + 896);
  *(unsigned char *)(a1 + 904) = *(unsigned char *)(v4 + 16);
  *(unsigned char *)(a1 + 905) = *(unsigned char *)(v4 + 17);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  long long v16 = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 976) = v16;
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  long long v17 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v17;
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
  *(void *)(a1 + 1312) = *(void *)(a2 + 1312);
  *(void *)(a1 + 1320) = *(void *)(a2 + 1320);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_WORD *)(a1 + 1376) = *(_WORD *)(a2 + 1376);
  *(void *)(a1 + 1384) = *(void *)(a2 + 1384);
  *(void *)(a1 + 1392) = *(void *)(a2 + 1392);
  *(unsigned char *)(a1 + 1400) = *(unsigned char *)(a2 + 1400);
  *(void *)(a1 + 1408) = *(void *)(a2 + 1408);
  *(void *)(a1 + 1416) = *(void *)(a2 + 1416);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
  *(void *)(a1 + 1480) = *(void *)(a2 + 1480);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(void *)(a1 + 1520) = *(void *)(a2 + 1520);
  *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(void *)(a1 + 1568) = *(void *)(a2 + 1568);
  *(void *)(a1 + 1576) = *(void *)(a2 + 1576);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(void *)(a1 + 1616) = *(void *)(a2 + 1616);
  *(void *)(a1 + 1624) = *(void *)(a2 + 1624);
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_OWORD *)(a1 + 1648) = *(_OWORD *)(a2 + 1648);
  *(void *)(a1 + 1664) = *(void *)(a2 + 1664);
  *(void *)(a1 + 1672) = *(void *)(a2 + 1672);
  *(_OWORD *)(a1 + 1680) = *(_OWORD *)(a2 + 1680);
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(void *)(a1 + 1712) = *(void *)(a2 + 1712);
  *(void *)(a1 + 1720) = *(void *)(a2 + 1720);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1728) = *(_OWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(void *)(a1 + 1760) = *(void *)(a2 + 1760);
  *(void *)(a1 + 1768) = *(void *)(a2 + 1768);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1776) = *(void *)(a2 + 1776);
  *(void *)(a1 + 1784) = *(void *)(a2 + 1784);
  *(void *)(a1 + 1792) = *(void *)(a2 + 1792);
  swift_bridgeObjectRelease();
  long long v18 = *(_OWORD *)(a2 + 1816);
  *(_OWORD *)(a1 + 1800) = *(_OWORD *)(a2 + 1800);
  *(_OWORD *)(a1 + 1816) = v18;
  *(_OWORD *)(a1 + 1832) = *(_OWORD *)(a2 + 1832);
  *(_WORD *)(a1 + 1848) = *(_WORD *)(a2 + 1848);
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(void *)(a1 + 1888) = *(void *)(a2 + 1888);
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1896)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 296);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1896) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 296) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1896) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwCP(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwta(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DE894A64(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeON;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13ConfigurationV23ClusteringConfigurationV6QuotasVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV6QuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV6QuotasVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV14DepthTransformVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV14DepthTransformVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14DepthTransformVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV12DefaultAlphaVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV12DefaultAlphaVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 49) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVN;
}

uint64_t sub_1DE894E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 192);
}

uint64_t sub_1DE894E38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE894E7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v5 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v6 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v6;
  long long v7 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = v7;
  uint64_t v8 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v8;
  long long v9 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v9;
  uint64_t v10 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v10;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  long long v11 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v11;
  uint64_t v12 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v12;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  long long v13 = *(_OWORD *)(a2 + 376);
  long long v14 = *(_OWORD *)(a2 + 392);
  long long v15 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v14;
  *(_OWORD *)(a1 + 408) = v15;
  *(_OWORD *)(a1 + 376) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DE894FA4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 376);
  long long v5 = *(_OWORD *)(a2 + 392);
  long long v6 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v5;
  *(_OWORD *)(a1 + 408) = v6;
  *(_OWORD *)(a1 + 376) = v4;
  return a1;
}

void *__swift_memcpy426_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1AAuLL);
}

uint64_t sub_1DE8951A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v4;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v5 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v6;
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  return a1;
}

uint64_t sub_1DE8952FC(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 426)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 296);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DE895344(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 424) = 0;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 426) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 296) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 426) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsVMa()
{
  return swift_getGenericMetadata();
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV54DefaultAutofavoriteClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV54DefaultAutofavoriteClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV49DefaultAutofavoriteClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV49DefaultAutofavoriteClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV48DefaultAutofavoriteClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV48DefaultAutofavoriteClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV49DefaultChannelClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV49DefaultChannelClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultChannelClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultChannelClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV43DefaultChannelClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV43DefaultChannelClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV25DefaultChannelScoreWeightVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV25DefaultChannelScoreWeightVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultClusteringClusterOrderingModeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultClusteringClusterOrderingModeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV48DefaultCustomClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV48DefaultCustomClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV43DefaultCustomClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV43DefaultCustomClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV42DefaultCustomClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV42DefaultCustomClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultConsiderRejectedHeadlinesInMoreForYouVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultConsiderRejectedHeadlinesInMoreForYouVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultHardPaywallBundleArticleLimitVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultHardPaywallBundleArticleLimitVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV46DefaultKeepOverflowChannelHeadlinesInInventoryVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV46DefaultKeepOverflowChannelHeadlinesInInventoryVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultKeepOverflowTopicHeadlinesInInventoryVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultKeepOverflowTopicHeadlinesInInventoryVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV29DefaultManagedTopicMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV29DefaultManagedTopicMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultManagedWinnerTopicMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultManagedWinnerTopicMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultMaxNumberOfTotalTopicAndChannelGroupsVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultMaxNumberOfTotalTopicAndChannelGroupsVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV27DefaultMinChannelGroupRatioVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV27DefaultMinChannelGroupRatioVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV25DefaultMinTopicGroupRatioVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV25DefaultMinTopicGroupRatioVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultMoreForYouClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultMoreForYouClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV47DefaultMoreForYouClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV47DefaultMoreForYouClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV46DefaultMoreForYouClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV46DefaultMoreForYouClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV29DefaultRelatedTopicMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV29DefaultRelatedTopicMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV30DefaultRelatedTopicRatioFilterVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV30DefaultRelatedTopicRatioFilterVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV33DefaultReorderUsingEmbeddingScoreVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV33DefaultReorderUsingEmbeddingScoreVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV34DefaultThumbnailMinHammingDistanceVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV34DefaultThumbnailMinHammingDistanceVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultTopicAutofavoritedMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultTopicAutofavoritedMultiplierVN;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxEvergreenArticles()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxEvergreenArticles;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxInaccessibleArticles()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxInaccessibleArticles;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxPublisherOccurrences()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxPublisherOccurrences;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxAIGCArticles()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxAIGCArticles;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxSize()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxSize;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMinSize()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMinSize;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsPaidBundleArticleQuotas()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsPaidBundleArticleQuotas;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsTopicDiversity()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsTopicDiversity;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicFavoritedMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicFavoritedMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupSizeMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupSizeMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupableMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupableMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV23DefaultTopicScoreWeightVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV23DefaultTopicScoreWeightVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV33DefaultTopicSpecificityMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV33DefaultTopicSpecificityMultiplierVN;
}

void *__swift_memcpy1003_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3EBuLL);
}

uint64_t _s13ConfigurationV23EvaluationConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 1003)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13ConfigurationV23EvaluationConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 1002) = 0;
    *(_WORD *)(result + 1000) = 0;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 1003) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 1003) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV19DefaultANFMutiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV19DefaultANFMutiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultArticleEmbeddingScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultArticleEmbeddingScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV42DefaultArticleEmbeddingScoreDampenerWeightVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV42DefaultArticleEmbeddingScoreDampenerWeightVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV36DefaultAutofavoritedScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV36DefaultAutofavoritedScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV38DefaultAutofavoritedScoreConfigurationVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV38DefaultAutofavoritedScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV29DefaultClientScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV29DefaultClientScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultClientScoreDemocratizationFactorVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultClientScoreDemocratizationFactorVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV43DefaultConversionScoreDemocratizationFactorVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV43DefaultConversionScoreDemocratizationFactorVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV44DefaultClientSideEngagementBoostANFMutiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV44DefaultClientSideEngagementBoostANFMutiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultClientSideEngagementBoostEnabledVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultClientSideEngagementBoostEnabledVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV57DefaultClientSideEngagementBoostFeaturedArticleMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV57DefaultClientSideEngagementBoostFeaturedArticleMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV65DefaultClientSideEngagementBoostFeatureCandidateArticleMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV65DefaultClientSideEngagementBoostFeatureCandidateArticleMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostFreeCohortCTRCapVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostFreeCohortCTRCapVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostPaidCohortCTRCapVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostPaidCohortCTRCapVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV58DefaultClientSideEngagementBoostReduceVisibilityMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV58DefaultClientSideEngagementBoostReduceVisibilityMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV52DefaultClientSideEngagementBoostTagQualityMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV52DefaultClientSideEngagementBoostTagQualityMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV22DefaultDampenerEnabledVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV22DefaultDampenerEnabledVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV31DefaultCtrWithSubscribedChannelVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV31DefaultCtrWithSubscribedChannelVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV35DefaultEvergreenHalfLifeCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV35DefaultEvergreenHalfLifeCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV26DefaultHalfLifeCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV26DefaultHalfLifeCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV38DefaultUserFeedbackHalfLifeCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV38DefaultUserFeedbackHalfLifeCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV22DefaultListenedPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV22DefaultListenedPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV24DefaultMultiplierEnabledVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV24DefaultMultiplierEnabledVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV24DefaultMutedVoteDampenerVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV24DefaultMutedVoteDampenerVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV30DefaultPublisherDampenerWeightVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV30DefaultPublisherDampenerWeightVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV18DefaultReadPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV18DefaultReadPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV40DefaultRecentlyFollowedDurationThresholdVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV40DefaultRecentlyFollowedDurationThresholdVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV33DefaultRecentlyFollowedMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV33DefaultRecentlyFollowedMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV30DefaultRespectHalfLifeOverrideVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV30DefaultRespectHalfLifeOverrideVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV18DefaultSeenPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV18DefaultSeenPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientFreeVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientFreeVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV37DefaultServerScoreCoefficientHalfLifeVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV37DefaultServerScoreCoefficientHalfLifeVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV46DefaultServerScoreCoefficientInitialMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV46DefaultServerScoreCoefficientInitialMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientPaidVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientPaidVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultServerScoreDemocratizationFactorVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultServerScoreDemocratizationFactorVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV24DefaultSparseTagsPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV24DefaultSparseTagsPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultSubscribedChannelScoreCoefficentVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultSubscribedChannelScoreCoefficentVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV38DefaultSubscribedTopicScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV38DefaultSubscribedTopicScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV37DefaultPeopleAlsoReadScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV37DefaultPeopleAlsoReadScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV48DefaultPeopleAlsoReadConditionalScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV48DefaultPeopleAlsoReadConditionalScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV34DefaultPeopleAlsoReadBaselineScoreVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV34DefaultPeopleAlsoReadBaselineScoreVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV40DefaultSubscribedTopicScoreConfigurationVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV40DefaultSubscribedTopicScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV27DefaultTabiScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV27DefaultTabiScoreCoefficientVN;
}

uint64_t _s13ConfigurationV33SubscribedCountScoreConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV33SubscribedCountScoreConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV33SubscribedCountScoreConfigurationVMa()
{
  return &_s13ConfigurationV33SubscribedCountScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV26DefaultDampenerCoefficientVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV26DefaultDampenerCoefficientVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV18DefaultMaxDampenerVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV18DefaultMaxDampenerVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultMaxEventCountVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultMaxEventCountVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV21DefaultMinScoreWeightVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV21DefaultMinScoreWeightVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultScoreExponentVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultScoreExponentVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV24DefaultTagWeightExponentVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV24DefaultTagWeightExponentVN;
}

__n128 __swift_memcpy99_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 99)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 99) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 99) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV25DefaultBaselineMembershipVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV25DefaultBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV39DefaultConsiderPublisherTopicAggregatesVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV39DefaultConsiderPublisherTopicAggregatesVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV21DefaultDilutionFactorVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV21DefaultDilutionFactorVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV24DefaultEnableUndampeningVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV24DefaultEnableUndampeningVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV33DefaultExponentialSubscribedBoostVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV33DefaultExponentialSubscribedBoostVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV19DefaultGlobalWeightVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV19DefaultGlobalWeightVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultGlobalWeightHalfLifeVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultGlobalWeightHalfLifeVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultGlobalWeightInitialMultiplierVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultGlobalWeightInitialMultiplierVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV20DefaultPaddingFactorVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV20DefaultPaddingFactorVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV28DefaultPostBaselineCurvatureVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV28DefaultPostBaselineCurvatureVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultPreBaselineCurvatureVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultPreBaselineCurvatureVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV22DefaultSubscribedBoostVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV22DefaultSubscribedBoostVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV42DefaultUndampenOnlyAboveBaselineMembershipVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV42DefaultUndampenOnlyAboveBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultUseExponentialSubscribedBoostVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultUseExponentialSubscribedBoostVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV38DefaultUseRelativePersonalizationValueVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV38DefaultUseRelativePersonalizationValueVN;
}

uint64_t _s13ConfigurationV32PremiumSubscriptionConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV32PremiumSubscriptionConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV22DefaultAudioMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV22DefaultAudioMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundleFreeMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundleFreeMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundlePaidMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundlePaidMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV28DefaultConversionCoefficientVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV28DefaultConversionCoefficientVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV26DefaultEvergreenMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV26DefaultEvergreenMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV25DefaultFeaturedMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV25DefaultFeaturedMultiplierVN;
}

__n128 __swift_memcpy184_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[184]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 184) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV35DefaultBoostAllTagsIfTopicIsManagedVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV35DefaultBoostAllTagsIfTopicIsManagedVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultDefaultFlowRateVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultDefaultFlowRateVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV30DefaultDefaultSubscriptionRateVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV30DefaultDefaultSubscriptionRateVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultExcludeNonGroupableTopicsVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultExcludeNonGroupableTopicsVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultFetchFlowWeightVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultFetchFlowWeightVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultManagedTopicBoostVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultManagedTopicBoostVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV45DefaultMultiplierBaselineMembershipMultiplierVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV45DefaultMultiplierBaselineMembershipMultiplierVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultMultiplierBoostVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultMultiplierBoostVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV49DefaultMultiplierBoostOnlyAboveBaselineMembershipVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV49DefaultMultiplierBoostOnlyAboveBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV33DefaultMultiplierMaxProductFactorVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV33DefaultMultiplierMaxProductFactorVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV28DefaultPublisherFlowExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV28DefaultPublisherFlowExponentVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV36DefaultPublisherSubscriptionExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV36DefaultPublisherSubscriptionExponentVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultQualityThresholdVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultQualityThresholdVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultServerFlowWeightVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultServerFlowWeightVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV27DefaultShouldBoostPublisherVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV27DefaultShouldBoostPublisherVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultTopicFlowExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultTopicFlowExponentVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultTopicSubscriptionExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultTopicSubscriptionExponentVN;
}

uint64_t _s13ConfigurationV27FlowEstimationConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV27FlowEstimationConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV15DefaultExponentVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV15DefaultExponentVN;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV14DefaultPaddingVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV14DefaultPaddingVN;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV12DefaultPriorVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV12DefaultPriorVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultBaselineMembershipVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultMembershipDampenerVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultMembershipDampenerVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV28DefaultPostBaselineCurvatureVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV28DefaultPostBaselineCurvatureVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV27DefaultPreBaselineCurvatureVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV27DefaultPreBaselineCurvatureVN;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s13ConfigurationV20FeatureConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV20FeatureConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthAggregateWeightVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthAggregateWeightVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV33DefaultArticleLengthLongThresholdVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV33DefaultArticleLengthLongThresholdVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthMediumThresholdVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthMediumThresholdVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV31DefaultPublisherAggregateWeightVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV31DefaultPublisherAggregateWeightVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV38DefaultPublisherTopicMinimumEventCountVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV38DefaultPublisherTopicMinimumEventCountVN;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsVMa()
{
  return &_s13ConfigurationV13FeaturePriorsVN;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsV27DefaultBaselineFeaturePriorVMa()
{
  return &_s13ConfigurationV13FeaturePriorsV27DefaultBaselineFeaturePriorVN;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsV26DefaultGeneralFeaturePriorVMa()
{
  return &_s13ConfigurationV13FeaturePriorsV26DefaultGeneralFeaturePriorVN;
}

uint64_t _s13ConfigurationV12FeaturePriorVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV12FeaturePriorVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV12FeaturePriorVMa()
{
  return &_s13ConfigurationV12FeaturePriorVN;
}

ValueMetadata *_s13ConfigurationV26OntologyLevelConfigurationVMa()
{
  return &_s13ConfigurationV26OntologyLevelConfigurationVN;
}

ValueMetadata *_s13ConfigurationV26OntologyLevelConfigurationV23DefaultTagWeightMappingVMa()
{
  return &_s13ConfigurationV26OntologyLevelConfigurationV23DefaultTagWeightMappingVN;
}

uint64_t _s13ConfigurationV11TopicConfigVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[57]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13ConfigurationV11TopicConfigVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV11TopicConfigVMa()
{
  return &_s13ConfigurationV11TopicConfigVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV20DefaultCapAtBaselineVMa()
{
  return &_s13ConfigurationV11TopicConfigV20DefaultCapAtBaselineVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV34DefaultHalfLifeCoefficientOverrideVMa()
{
  return &_s13ConfigurationV11TopicConfigV34DefaultHalfLifeCoefficientOverrideVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV19DefaultLimitInGroupVMa()
{
  return &_s13ConfigurationV11TopicConfigV19DefaultLimitInGroupVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV27DefaultPublisherTopicWeightVMa()
{
  return &_s13ConfigurationV11TopicConfigV27DefaultPublisherTopicWeightVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV22DefaultScoreMultiplierVMa()
{
  return &_s13ConfigurationV11TopicConfigV22DefaultScoreMultiplierVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV25DefaultShouldLimitInGroupVMa()
{
  return &_s13ConfigurationV11TopicConfigV25DefaultShouldLimitInGroupVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV16DefaultTagWeightVMa()
{
  return &_s13ConfigurationV11TopicConfigV16DefaultTagWeightVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV37DefaultUseHalfLifeCoefficientOverrideVMa()
{
  return &_s13ConfigurationV11TopicConfigV37DefaultUseHalfLifeCoefficientOverrideVN;
}

void *__swift_memcpy568_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x238uLL);
}

uint64_t _s13ConfigurationV21TrainingConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 568)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV21TrainingConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 568) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV21TrainingConfigurationVMa()
{
  return &_s13ConfigurationV21TrainingConfigurationVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV16DefaultDecayRateVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV16DefaultDecayRateVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV35DefaultTopStoriesGroupAggregateBiasVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV35DefaultTopStoriesGroupAggregateBiasVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV33DefaultTrendingGroupAggregateBiasVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV33DefaultTrendingGroupAggregateBiasVN;
}

void *__swift_memcpy544_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x220uLL);
}

uint64_t _s13ConfigurationV21TrainerConfigurationsVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 544)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13ConfigurationV21TrainerConfigurationsVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 536) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 544) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleReadAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleReadAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleSeenAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleSeenAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV55DefaultArticleVisitedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV55DefaultArticleVisitedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV48DefaultDislikeAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV48DefaultDislikeAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV49DefaultFeedViewAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV49DefaultFeedViewAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV47DefaultFollowAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV47DefaultFollowAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV47DefaultIgnoreAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV47DefaultIgnoreAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV45DefaultLikeAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV45DefaultLikeAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV45DefaultMuteAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV45DefaultMuteAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV46DefaultSavedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV46DefaultSavedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV46DefaultShareAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV46DefaultShareAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV54DefaultSportsTagSeenAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV54DefaultSportsTagSeenAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackFinishedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackFinishedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackListenedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackListenedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV53DefaultTrackVisitedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV53DefaultTrackVisitedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV49DefaultUnfollowAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV49DefaultUnfollowAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV47DefaultUnmuteAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV47DefaultUnmuteAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV34AggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV34AggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV25AggregateModificationDataVMa()
{
  return &_s13ConfigurationV25AggregateModificationDataVN;
}

uint64_t _s13ConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE896A34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV25AggregateModificationDataV10CodingKeysOMa()
{
  return &_s13ConfigurationV25AggregateModificationDataV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV21TrainerConfigurationsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV21TrainerConfigurationsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *__n128 result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE896C04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV10CodingKeysOMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV21TrainingConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV21TrainingConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV11TopicConfigV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV11TopicConfigV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE896DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV10CodingKeysOMa()
{
  return &_s13ConfigurationV11TopicConfigV10CodingKeysON;
}

uint64_t sub_1DE896E18()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV12FeaturePriorV10CodingKeysOMa()
{
  return &_s13ConfigurationV12FeaturePriorV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsV10CodingKeysOMa()
{
  return &_s13ConfigurationV13FeaturePriorsV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *__n128 result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE897020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV20FeatureConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV20FeatureConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8971F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV23EvaluationConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCE) {
    goto LABEL_17;
  }
  if (a2 + 50 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 50) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 50;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x33;
  int v8 = v6 - 51;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV23EvaluationConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 50 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 50) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCD)
  {
    unsigned int v6 = ((a2 - 206) >> 8) + 1;
    *__n128 result = a2 + 50;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8973ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 50;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV23ClusteringConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *__n128 result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE897544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV10CodingKeysON;
}

uint64_t sub_1DE897580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 128);
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *__n128 result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8976ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 14;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE897714(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE897720(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

uint64_t _s13ConfigurationV25AggregateModificationDataV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV25AggregateModificationDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE89788CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8978B4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8978C0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE897A40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysON;
}

uint64_t sub_1DE897ABC()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysON;
}

uint64_t sub_1DE897AE4()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE897C14);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE897C3C()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE897DC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV19ActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV19ActionConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE897F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysON;
}

unint64_t sub_1DE897FA0()
{
  unint64_t result = qword_1EAC0D170;
  if (!qword_1EAC0D170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D170);
  }
  return result;
}

unint64_t sub_1DE897FF8()
{
  unint64_t result = qword_1EAC0D178;
  if (!qword_1EAC0D178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D178);
  }
  return result;
}

unint64_t sub_1DE898050()
{
  unint64_t result = qword_1EAC0D180;
  if (!qword_1EAC0D180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D180);
  }
  return result;
}

unint64_t sub_1DE8980A8()
{
  unint64_t result = qword_1EAC0D188;
  if (!qword_1EAC0D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D188);
  }
  return result;
}

unint64_t sub_1DE898100()
{
  unint64_t result = qword_1EAC0D190;
  if (!qword_1EAC0D190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D190);
  }
  return result;
}

unint64_t sub_1DE898158()
{
  unint64_t result = qword_1EAC0D198;
  if (!qword_1EAC0D198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D198);
  }
  return result;
}

unint64_t sub_1DE8981B0()
{
  unint64_t result = qword_1EAC0D1A0;
  if (!qword_1EAC0D1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1A0);
  }
  return result;
}

unint64_t sub_1DE898208()
{
  unint64_t result = qword_1EAC0D1A8;
  if (!qword_1EAC0D1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1A8);
  }
  return result;
}

unint64_t sub_1DE898260()
{
  unint64_t result = qword_1EAC0D1B0;
  if (!qword_1EAC0D1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1B0);
  }
  return result;
}

unint64_t sub_1DE8982B8()
{
  unint64_t result = qword_1EAC0D1B8;
  if (!qword_1EAC0D1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1B8);
  }
  return result;
}

uint64_t sub_1DE89830C()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DE89832C()
{
  unint64_t result = qword_1EAC0D1C0;
  if (!qword_1EAC0D1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1C0);
  }
  return result;
}

unint64_t sub_1DE898384()
{
  unint64_t result = qword_1EAC0D1C8;
  if (!qword_1EAC0D1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1C8);
  }
  return result;
}

unint64_t sub_1DE8983DC()
{
  unint64_t result = qword_1EAC0D1D0;
  if (!qword_1EAC0D1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1D0);
  }
  return result;
}

unint64_t sub_1DE898434()
{
  unint64_t result = qword_1EAC0D1D8;
  if (!qword_1EAC0D1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1D8);
  }
  return result;
}

unint64_t sub_1DE89848C()
{
  unint64_t result = qword_1EAC0D1E0;
  if (!qword_1EAC0D1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1E0);
  }
  return result;
}

unint64_t sub_1DE8984E4()
{
  unint64_t result = qword_1EAC0D1E8;
  if (!qword_1EAC0D1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1E8);
  }
  return result;
}

unint64_t sub_1DE89853C()
{
  unint64_t result = qword_1EAC0D1F0;
  if (!qword_1EAC0D1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1F0);
  }
  return result;
}

unint64_t sub_1DE898594()
{
  unint64_t result = qword_1EAC0D1F8;
  if (!qword_1EAC0D1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D1F8);
  }
  return result;
}

unint64_t sub_1DE8985EC()
{
  unint64_t result = qword_1EAC0D200;
  if (!qword_1EAC0D200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D200);
  }
  return result;
}

unint64_t sub_1DE898644()
{
  unint64_t result = qword_1EAC0D208;
  if (!qword_1EAC0D208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D208);
  }
  return result;
}

unint64_t sub_1DE89869C()
{
  unint64_t result = qword_1EAC0D210;
  if (!qword_1EAC0D210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D210);
  }
  return result;
}

unint64_t sub_1DE8986F4()
{
  unint64_t result = qword_1EAC0D218;
  if (!qword_1EAC0D218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D218);
  }
  return result;
}

unint64_t sub_1DE89874C()
{
  unint64_t result = qword_1EAC0D220;
  if (!qword_1EAC0D220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D220);
  }
  return result;
}

unint64_t sub_1DE8987A4()
{
  unint64_t result = qword_1EAC0D228;
  if (!qword_1EAC0D228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D228);
  }
  return result;
}

unint64_t sub_1DE8987FC()
{
  unint64_t result = qword_1EAC0D230;
  if (!qword_1EAC0D230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D230);
  }
  return result;
}

unint64_t sub_1DE898854()
{
  unint64_t result = qword_1EAC0D238;
  if (!qword_1EAC0D238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D238);
  }
  return result;
}

unint64_t sub_1DE8988AC()
{
  unint64_t result = qword_1EAC0D240;
  if (!qword_1EAC0D240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D240);
  }
  return result;
}

unint64_t sub_1DE898904()
{
  unint64_t result = qword_1EAC0D248;
  if (!qword_1EAC0D248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D248);
  }
  return result;
}

unint64_t sub_1DE89895C()
{
  unint64_t result = qword_1EAC0D250;
  if (!qword_1EAC0D250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D250);
  }
  return result;
}

unint64_t sub_1DE8989B4()
{
  unint64_t result = qword_1EAC0D258;
  if (!qword_1EAC0D258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D258);
  }
  return result;
}

unint64_t sub_1DE898A0C()
{
  unint64_t result = qword_1EAC0D260;
  if (!qword_1EAC0D260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D260);
  }
  return result;
}

unint64_t sub_1DE898A64()
{
  unint64_t result = qword_1EAC0D268;
  if (!qword_1EAC0D268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D268);
  }
  return result;
}

unint64_t sub_1DE898ABC()
{
  unint64_t result = qword_1EAC0D270;
  if (!qword_1EAC0D270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D270);
  }
  return result;
}

unint64_t sub_1DE898B14()
{
  unint64_t result = qword_1EAC0D278;
  if (!qword_1EAC0D278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D278);
  }
  return result;
}

unint64_t sub_1DE898B6C()
{
  unint64_t result = qword_1EAC0D280;
  if (!qword_1EAC0D280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D280);
  }
  return result;
}

unint64_t sub_1DE898BC4()
{
  unint64_t result = qword_1EAC0D288;
  if (!qword_1EAC0D288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D288);
  }
  return result;
}

unint64_t sub_1DE898C1C()
{
  unint64_t result = qword_1EAC0D290;
  if (!qword_1EAC0D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D290);
  }
  return result;
}

unint64_t sub_1DE898C74()
{
  unint64_t result = qword_1EAC0D298;
  if (!qword_1EAC0D298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D298);
  }
  return result;
}

unint64_t sub_1DE898CCC()
{
  unint64_t result = qword_1EAC0D2A0;
  if (!qword_1EAC0D2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2A0);
  }
  return result;
}

unint64_t sub_1DE898D24()
{
  unint64_t result = qword_1EAC0D2A8;
  if (!qword_1EAC0D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2A8);
  }
  return result;
}

unint64_t sub_1DE898D7C()
{
  unint64_t result = qword_1EAC0D2B0;
  if (!qword_1EAC0D2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2B0);
  }
  return result;
}

unint64_t sub_1DE898DD4()
{
  unint64_t result = qword_1EAC0D2B8;
  if (!qword_1EAC0D2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2B8);
  }
  return result;
}

unint64_t sub_1DE898E2C()
{
  unint64_t result = qword_1EBEA92F8;
  if (!qword_1EBEA92F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA92F8);
  }
  return result;
}

unint64_t sub_1DE898E84()
{
  unint64_t result = qword_1EBEA92F0;
  if (!qword_1EBEA92F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA92F0);
  }
  return result;
}

unint64_t sub_1DE898EDC()
{
  unint64_t result = qword_1EAC0D2C0;
  if (!qword_1EAC0D2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2C0);
  }
  return result;
}

unint64_t sub_1DE898F34()
{
  unint64_t result = qword_1EAC0D2C8;
  if (!qword_1EAC0D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2C8);
  }
  return result;
}

unint64_t sub_1DE898F8C()
{
  unint64_t result = qword_1EAC0D2D0;
  if (!qword_1EAC0D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2D0);
  }
  return result;
}

unint64_t sub_1DE898FE4()
{
  unint64_t result = qword_1EAC0D2D8;
  if (!qword_1EAC0D2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2D8);
  }
  return result;
}

unint64_t sub_1DE89903C()
{
  unint64_t result = qword_1EAC0D2E0;
  if (!qword_1EAC0D2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2E0);
  }
  return result;
}

unint64_t sub_1DE899094()
{
  unint64_t result = qword_1EAC0D2E8;
  if (!qword_1EAC0D2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2E8);
  }
  return result;
}

unint64_t sub_1DE8990EC()
{
  unint64_t result = qword_1EAC0D2F0;
  if (!qword_1EAC0D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2F0);
  }
  return result;
}

unint64_t sub_1DE899144()
{
  unint64_t result = qword_1EAC0D2F8;
  if (!qword_1EAC0D2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D2F8);
  }
  return result;
}

unint64_t sub_1DE89919C()
{
  unint64_t result = qword_1EAC0D300;
  if (!qword_1EAC0D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D300);
  }
  return result;
}

unint64_t sub_1DE8991F4()
{
  unint64_t result = qword_1EAC0D308;
  if (!qword_1EAC0D308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D308);
  }
  return result;
}

unint64_t sub_1DE89924C()
{
  unint64_t result = qword_1EAC0D310;
  if (!qword_1EAC0D310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D310);
  }
  return result;
}

unint64_t sub_1DE8992A4()
{
  unint64_t result = qword_1EAC0D318;
  if (!qword_1EAC0D318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D318);
  }
  return result;
}

unint64_t sub_1DE8992FC()
{
  unint64_t result = qword_1EAC0D320;
  if (!qword_1EAC0D320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D320);
  }
  return result;
}

unint64_t sub_1DE899354()
{
  unint64_t result = qword_1EAC0D328;
  if (!qword_1EAC0D328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D328);
  }
  return result;
}

unint64_t sub_1DE8993AC()
{
  unint64_t result = qword_1EAC0D330;
  if (!qword_1EAC0D330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D330);
  }
  return result;
}

unint64_t sub_1DE899404()
{
  unint64_t result = qword_1EAC0D338;
  if (!qword_1EAC0D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D338);
  }
  return result;
}

unint64_t sub_1DE89945C()
{
  unint64_t result = qword_1EAC0D340;
  if (!qword_1EAC0D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D340);
  }
  return result;
}

unint64_t sub_1DE8994B4()
{
  unint64_t result = qword_1EAC0D348;
  if (!qword_1EAC0D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D348);
  }
  return result;
}

unint64_t sub_1DE89950C()
{
  unint64_t result = qword_1EAC0D350;
  if (!qword_1EAC0D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D350);
  }
  return result;
}

unint64_t sub_1DE899564()
{
  unint64_t result = qword_1EAC0D358;
  if (!qword_1EAC0D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D358);
  }
  return result;
}

unint64_t sub_1DE8995BC()
{
  unint64_t result = qword_1EAC0D360;
  if (!qword_1EAC0D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D360);
  }
  return result;
}

unint64_t sub_1DE899614()
{
  unint64_t result = qword_1EAC0D368;
  if (!qword_1EAC0D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D368);
  }
  return result;
}

unint64_t sub_1DE89966C()
{
  unint64_t result = qword_1EAC0D370;
  if (!qword_1EAC0D370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D370);
  }
  return result;
}

unint64_t sub_1DE8996C4()
{
  unint64_t result = qword_1EAC0D378;
  if (!qword_1EAC0D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D378);
  }
  return result;
}

unint64_t sub_1DE89971C()
{
  unint64_t result = qword_1EBEA8C28;
  if (!qword_1EBEA8C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C28);
  }
  return result;
}

unint64_t sub_1DE899774()
{
  unint64_t result = qword_1EBEA8C20;
  if (!qword_1EBEA8C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C20);
  }
  return result;
}

uint64_t sub_1DE8997C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8997E4()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DE899804()
{
  unint64_t result = qword_1EAC0D380;
  if (!qword_1EAC0D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D380);
  }
  return result;
}

unint64_t sub_1DE89985C()
{
  unint64_t result = qword_1EAC0D388;
  if (!qword_1EAC0D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D388);
  }
  return result;
}

unint64_t sub_1DE8998B4()
{
  unint64_t result = qword_1EBEA9AB8;
  if (!qword_1EBEA9AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AB8);
  }
  return result;
}

unint64_t sub_1DE89990C()
{
  unint64_t result = qword_1EBEA9AB0;
  if (!qword_1EBEA9AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AB0);
  }
  return result;
}

unint64_t sub_1DE899964()
{
  unint64_t result = qword_1EBEA92B0;
  if (!qword_1EBEA92B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA92B0);
  }
  return result;
}

unint64_t sub_1DE8999BC()
{
  unint64_t result = qword_1EBEA92A8;
  if (!qword_1EBEA92A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA92A8);
  }
  return result;
}

unint64_t sub_1DE899A14()
{
  unint64_t result = qword_1EBEA9290;
  if (!qword_1EBEA9290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9290);
  }
  return result;
}

unint64_t sub_1DE899A6C()
{
  unint64_t result = qword_1EBEA9288;
  if (!qword_1EBEA9288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9288);
  }
  return result;
}

unint64_t sub_1DE899AC4()
{
  unint64_t result = qword_1EAC0D390;
  if (!qword_1EAC0D390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D390);
  }
  return result;
}

unint64_t sub_1DE899B1C()
{
  unint64_t result = qword_1EAC0D398;
  if (!qword_1EAC0D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D398);
  }
  return result;
}

unint64_t sub_1DE899B74()
{
  unint64_t result = qword_1EAC0D3A0;
  if (!qword_1EAC0D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3A0);
  }
  return result;
}

unint64_t sub_1DE899BCC()
{
  unint64_t result = qword_1EAC0D3A8;
  if (!qword_1EAC0D3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3A8);
  }
  return result;
}

unint64_t sub_1DE899C24()
{
  unint64_t result = qword_1EAC0D3B0;
  if (!qword_1EAC0D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3B0);
  }
  return result;
}

unint64_t sub_1DE899C7C()
{
  unint64_t result = qword_1EAC0D3B8;
  if (!qword_1EAC0D3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3B8);
  }
  return result;
}

unint64_t sub_1DE899CD4()
{
  unint64_t result = qword_1EAC0D3C0;
  if (!qword_1EAC0D3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3C0);
  }
  return result;
}

unint64_t sub_1DE899D2C()
{
  unint64_t result = qword_1EAC0D3C8;
  if (!qword_1EAC0D3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3C8);
  }
  return result;
}

unint64_t sub_1DE899D84()
{
  unint64_t result = qword_1EAC0D3D0;
  if (!qword_1EAC0D3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3D0);
  }
  return result;
}

unint64_t sub_1DE899DDC()
{
  unint64_t result = qword_1EAC0D3D8;
  if (!qword_1EAC0D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3D8);
  }
  return result;
}

unint64_t sub_1DE899E34()
{
  unint64_t result = qword_1EAC0D3E0;
  if (!qword_1EAC0D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3E0);
  }
  return result;
}

unint64_t sub_1DE899E8C()
{
  unint64_t result = qword_1EAC0D3E8;
  if (!qword_1EAC0D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3E8);
  }
  return result;
}

uint64_t sub_1DE899EE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F3C10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F3C30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697070616DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE89A030(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x52656C6369747261 && a2 == 0xEB00000000646165;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61547374726F7073 && a2 == 0xED00006E65655367 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73694C6B63617274 && a2 == 0xED000064656E6574 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7369566B63617274 && a2 == 0xEC00000064657469)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE89A264(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F3C50 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001DE8F3C70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F3CA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE89A408(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F646E6977 && a2 == 0xEA0000000000657ALL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546465776F6C6C61 && a2 == 0xEF7344496369706FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_1DE89A59C(uint64_t a1, uint64_t a2, double (*a3)(long long *))
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v32 = *(void *)(a2 + 16);
  if (v32 >= v4) {
    int64_t v5 = *(void *)(a1 + 16);
  }
  else {
    int64_t v5 = *(void *)(a2 + 16);
  }
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1DE84BF18(0, v5, 0);
  uint64_t v6 = v38;
  uint64_t v29 = a2;
  if (v5)
  {
    uint64_t v30 = a2 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      long long v9 = 0uLL;
      uint64_t v10 = 0;
      if (v8 == v4)
      {
        char v11 = 1;
        unint64_t v8 = v4;
      }
      else
      {
        if (v8 >= v4)
        {
          __break(1u);
          goto LABEL_37;
        }
        if (v7 != v32)
        {
          if (v7 >= v32) {
            goto LABEL_39;
          }
          char v11 = 0;
          long long v13 = (long long *)(v30 + 40 * v7++);
          uint64_t v10 = *((void *)v13 + 4);
          long long v9 = *v13;
          long long v12 = v13[1];
          ++v8;
          goto LABEL_14;
        }
        char v11 = 1;
        ++v8;
      }
      long long v12 = 0uLL;
LABEL_14:
      long long v34 = v9;
      long long v35 = v12;
      uint64_t v36 = v10;
      char v37 = v11;
      if (v11) {
        goto LABEL_40;
      }
      double v14 = a3(&v34);
      uint64_t v38 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1DE84BF18((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v6 = v38;
      }
      *(void *)(v6 + 16) = v16 + 1;
      *(double *)(v6 + 8 * v16 + 32) = v14;
      if (!--v5) {
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v7 = 0;
  unint64_t v8 = 0;
LABEL_20:
  if (v8 <= v4) {
    unint64_t v17 = v4;
  }
  else {
    unint64_t v17 = v8;
  }
  if (v7 <= v32) {
    unint64_t v18 = v32;
  }
  else {
    unint64_t v18 = v7;
  }
  unint64_t v31 = v4 - v8;
  if (v4 == v8)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
    long long v20 = (void *)(v29 + 40 * v7 + 64);
    unint64_t v21 = v32 - v7;
    unint64_t v22 = v17 - v8;
    unint64_t v23 = v18 - v7;
    while (v22 != v19)
    {
      if (v21 == v19) {
        goto LABEL_27;
      }
      if (v23 == v19) {
        goto LABEL_38;
      }
      uint64_t v24 = *v20;
      long long v25 = *((_OWORD *)v20 - 1);
      long long v34 = *((_OWORD *)v20 - 2);
      long long v35 = v25;
      uint64_t v36 = v24;
      double v26 = a3(&v34);
      uint64_t v38 = v6;
      unint64_t v28 = *(void *)(v6 + 16);
      unint64_t v27 = *(void *)(v6 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1DE84BF18((char *)(v27 > 1), v28 + 1, 1);
        uint64_t v6 = v38;
      }
      *(void *)(v6 + 16) = v28 + 1;
      *(double *)(v6 + 8 * v28 + 32) = v26;
      v20 += 5;
      if (v31 == ++v19) {
        goto LABEL_27;
      }
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
}

uint64_t sub_1DE89A894(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x52746C7561666564 && a2 == 0xEC0000006F697461;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x52646574746F6C73 && a2 == 0xED0000736F697461 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F3CC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F3CE0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE89AA80()
{
  unint64_t v0 = sub_1DE8E1840();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DE89AACC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657A69536E696DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F3D00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE89ABBC()
{
  return 15;
}

uint64_t sub_1DE89ABC4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE8F3E90 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F3EB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F3ED0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F3EF0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F3F10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001DE8F3F30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F3F60 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001DE8F3F80 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001DE8F3FB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F3FE0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001DE8F4020 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4050 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4070 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DE8F4090 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F40B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F40D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F40F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE8F4110 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4130 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4150 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F4170 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F4190 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F41B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F41D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F41F0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 25;
    }
    else {
      return 26;
    }
  }
}

uint64_t sub_1DE89B4A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69746C754D666E61 && a2 == 0xED00007265696C70;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F4210 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DE8F4240 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F4270 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F4290 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F42B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F42D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001DE8F4300 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001DE8F4330 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F4360 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000032 && a2 == 0x80000001DE8F4390 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000003ALL && a2 == 0x80000001DE8F43D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001DE8F4410 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001DE8F4440 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000033 && a2 == 0x80000001DE8F4470 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x80000001DE8F44B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x72656E65706D6164 && a2 == 0xEF64656C62616E45 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DE8F44E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4510 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F4530 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4550 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001DE8F4570 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F45A0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F45C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x64656E657473696CLL && a2 == 0xEF79746C616E6550 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F45E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F4600 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4620 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001DE8F4640 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DE8F4670 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F46A0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE8F46C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F46F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F4710 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x616E65506E656573 && a2 == 0xEB0000000079746CLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F4730 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4750 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001DE8F4770 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F47A0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F47C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F47F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F4810 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F4840 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4860 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001DE8F4880 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE8F48B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE8F48D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4900 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001DE8F4920 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4950)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 50;
    }
    else {
      return 51;
    }
  }
}

uint64_t sub_1DE89C698(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4970 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F4990 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F49B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F49D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE89C830(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F49F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706D614478616DLL && a2 == 0xEB0000000072656ELL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65764578616DLL && a2 == 0xED0000746E756F43 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65726F63536E696DLL && a2 == 0xEE00746867696557 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x70784565726F6373 && a2 == 0xED0000746E656E6FLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F4A10)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1DE89CB30(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4A30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F4A50 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974756C6964 && a2 == 0xEE00726F74636146 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F4A80 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F4AA0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65576C61626F6C67 && a2 == 0xEC00000074686769 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4AC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F4AE0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x46676E6964646170 && a2 == 0xED0000726F746361 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F4B00 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4B20 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEF74736F6F426465 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DE8F4B40 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F4B70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F4B90)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_1DE89D168(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C754D6F69647561 && a2 == 0xEF7265696C706974;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4BB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4BD0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F4BF0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F4C10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4C30)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1DE89D3DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4C50 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x46746C7561666564 && a2 == 0xEF65746152776F6CLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F4C70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4C90 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DE8F4CB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4CD0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6C466863746566 && a2 == 0xEF74686769655777 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F4CF0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001DE8F4D10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEF74736F6F427265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001DE8F4D40 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F4D70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F4D90 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F4DB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F4DD0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F4DF0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4E10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F4E30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DE8F4E50)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

uint64_t sub_1DE89DB10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656E6F707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE89DC60(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4A30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4E70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F4B00 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4B20)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE89DDF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4E90 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F4EB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F4ED0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726F697270 && a2 == 0xE600000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F4EF0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F4F10)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1DE89E044(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E696C65736162 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6172656E6567 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE89E138(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F4F30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE89E1C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7361427441706163 && a2 == 0xED0000656E696C65;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE8F4F50 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x476E4974696D696CLL && a2 == 0xEC00000070756F72 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4F70 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C754D65726F6373 && a2 == 0xEF7265696C706974 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4F90 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6867696557676174 && a2 == 0xE900000000000074 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DE8F4FB0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1DE89E554(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4FD0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F4FF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE89E640(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461527961636564 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F5010 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F5030)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE89E79C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x52656C6369747261 && a2 == 0xEB00000000646165;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53656C6369747261 && a2 == 0xEB000000006E6565 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x56656C6369747261 && a2 == 0xEE00646574697369 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656B696C736964 && a2 == 0xE700000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7765695664656566 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x776F6C6C6F66 && a2 == 0xE600000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65726F6E6769 && a2 == 0xE600000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701538156 && a2 == 0xE400000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1702131053 && a2 == 0xE400000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465766173 && a2 == 0xE500000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6572616873 && a2 == 0xE500000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x61547374726F7073 && a2 == 0xED00006E65655367 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E69466B63617274 && a2 == 0xED00006465687369 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x73694C6B63617274 && a2 == 0xED000064656E6574 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7369566B63617274 && a2 == 0xEC00000064657469 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x776F6C6C6F666E75 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6574756D6E75 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_1DE89EEFC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001DE8F5050 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F5070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE89EFE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B63696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DE89F0EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F5090 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F50B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F50D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F50F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F5110 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F5130 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F5150)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_1DE89F380()
{
  unint64_t result = qword_1EBEA8C68;
  if (!qword_1EBEA8C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA8C68);
  }
  return result;
}

unint64_t sub_1DE89F3D4()
{
  unint64_t result = qword_1EAC0D3F0;
  if (!qword_1EAC0D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D3F0);
  }
  return result;
}

void sub_1DE89F428()
{
  sub_1DE86B8F4(*(void *)(v0 + 16));
}

uint64_t sub_1DE89F46C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE89F498(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE89F4C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DE89F52C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE89F578(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE89F8E4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1DE8AC840(&v16, v11, v12);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1DE89FA64(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v19 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v20 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      unint64_t v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v7 = v6 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v20) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v19 + 8 * v16);
    ++v2;
    if (!v17)
    {
      int64_t v2 = v16 + 1;
      if (v16 + 1 >= v20) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v19 + 8 * v2);
      if (!v17)
      {
        int64_t v2 = v16 + 2;
        if (v16 + 2 >= v20) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v19 + 8 * v2);
        if (!v17)
        {
          int64_t v2 = v16 + 3;
          if (v16 + 3 >= v20) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v19 + 8 * v2);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v7 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_5:
    unint64_t v8 = (_OWORD *)(*(void *)(v1 + 48) + 112 * v7);
    long long v10 = v8[1];
    long long v9 = v8[2];
    v24[0] = *v8;
    v24[1] = v10;
    v24[2] = v9;
    long long v12 = v8[4];
    long long v11 = v8[5];
    long long v13 = v8[3];
    *(_OWORD *)&v25[9] = *(_OWORD *)((char *)v8 + 89);
    v24[4] = v12;
    *(_OWORD *)long long v25 = v11;
    v24[3] = v13;
    sub_1DE82F388((uint64_t)v24);
    sub_1DE8AC9F0((uint64_t)v21, (uint64_t)v24);
    uint64_t v14 = v22;
    unint64_t v15 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1DE82F470(v14, v15);
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v20) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v19 + 8 * v18);
  if (v17)
  {
    int64_t v2 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v2 >= v20) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v19 + 8 * v2);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DE89FC74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a3 + 40) != 1) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a4 + 16);
  if (!v6)
  {
    if (v5 <= 0) {
      goto LABEL_29;
    }
    return result;
  }
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v34 = a4 + 32;
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v32 = v4;
  uint64_t v33 = v6;
  do
  {
    long long v9 = (void *)(v34 + 112 * v7);
    uint64_t v10 = v9[4];
    if (!*(void *)(v10 + 16))
    {
      uint64_t v20 = 0;
      goto LABEL_26;
    }
    uint64_t v11 = v9[9];
    unint64_t v12 = v9[10];
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v36 = v11;
    unint64_t v35 = v12;
    sub_1DE82F404(v11, v12);
    sub_1DE8E1480();
    uint64_t v13 = sub_1DE8E1BD0();
    uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v15 = v13 & ~v14;
    uint64_t v16 = v10 + 56;
    if ((*(void *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
    {
      uint64_t v17 = *(void *)(v10 + 48);
      int64_t v18 = (void *)(v17 + 16 * v15);
      if (*v18 != v4 || v18[1] != a2)
      {
        if (sub_1DE8E1AC0())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v20 = 1;
          uint64_t v4 = v32;
LABEL_24:
          uint64_t v6 = v33;
          uint64_t v21 = v36;
          unint64_t v22 = v35;
          goto LABEL_25;
        }
        uint64_t v23 = ~v14;
        unint64_t v24 = (v15 + 1) & v23;
        uint64_t v25 = a2;
        uint64_t v4 = v32;
        if (((*(void *)(v16 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v20 = 0;
          goto LABEL_24;
        }
        while (1)
        {
          double v26 = (void *)(v17 + 16 * v24);
          if (*v26 == v32 && v26[1] == v25) {
            break;
          }
          char v28 = sub_1DE8E1AC0();
          uint64_t v25 = a2;
          if (v28) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v23;
          if (((*(void *)(v16 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
            goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = 1;
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    uint64_t v21 = v36;
    unint64_t v22 = v12;
    uint64_t v6 = v33;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1DE82F470(v21, v22);
LABEL_26:
    BOOL v29 = __OFADD__(v8, v20);
    v8 += v20;
    if (v29)
    {
      __break(1u);
      return result;
    }
    ++v7;
  }
  while (v7 != v6);
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = v31;
  if (v8 < v31) {
    return result;
  }
LABEL_29:
  sub_1DE8BE6DC();
  swift_allocError();
  *(void *)uint64_t v30 = v4;
  *(void *)(v30 + 8) = a2;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = 0;
  *(void *)(v30 + 16) = v5;
  *(unsigned char *)(v30 + 40) = 5;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

unint64_t sub_1DE89FFD8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 24))
  {
    case 1:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000010;
      goto LABEL_11;
    case 2:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000012;
      goto LABEL_11;
    case 3:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000019;
      goto LABEL_12;
    case 4:
      unint64_t v10 = 0;
      swift_bridgeObjectRetain();
      sub_1DE8E1730();
      sub_1DE8E1490();
      sub_1DE8E1620();
      sub_1DE8E1490();
      sub_1DE8E1A80();
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      sub_1DE8E1490();
      sub_1DE8E1630();
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      uint64_t v5 = v1;
      uint64_t v6 = v2;
      uint64_t v7 = v3;
      char v8 = 4;
      goto LABEL_8;
    case 5:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000019;
      swift_bridgeObjectRetain();
      sub_1DE8E13E0();
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      uint64_t v5 = v1;
      uint64_t v6 = v2;
      uint64_t v7 = v3;
      char v8 = 5;
LABEL_8:
      sub_1DE8A0390(v5, v6, v7, v8);
      sub_1DE8E1490();
      return v10;
    case 6:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000021;
      goto LABEL_11;
    case 7:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      goto LABEL_11;
    default:
      sub_1DE8E1730();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001ALL;
LABEL_11:
      unint64_t v10 = v4;
LABEL_12:
      sub_1DE8E1A80();
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      return v10;
  }
}

uint64_t sub_1DE8A0390(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 4 || a4 == 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DE8A03B8(char a1)
{
  unint64_t result = 0x6269737365636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6565726772657665;
      break;
    case 2:
      unint64_t result = 0x696D694C63676961;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x7669446369706F74;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE8A04F4()
{
  return 1;
}

unint64_t sub_1DE8A0504()
{
  return 0xD000000000000018;
}

uint64_t sub_1DE8A0520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8B8AB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE8A054C()
{
  return 0;
}

void sub_1DE8A0558(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A0564(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7E7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A05A0(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7E7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A05DC()
{
  return 1;
}

unint64_t sub_1DE8A05EC()
{
  return 0xD000000000000010;
}

uint64_t sub_1DE8A0608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8B8B3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE8A0634()
{
  return 0;
}

void sub_1DE8A0640(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A064C(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7DD4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0688(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7DD4();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1DE8A06C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8A06DC()
{
  return sub_1DE8E1BB0();
}

unint64_t sub_1DE8A070C()
{
  return sub_1DE8A03B8(*v0);
}

uint64_t sub_1DE8A0714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8B8BC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8A073C()
{
  return 0;
}

void sub_1DE8A0748(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DE8A0754(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7BDC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0790(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7BDC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A07CC()
{
  return 1;
}

unint64_t sub_1DE8A07DC()
{
  return 0xD000000000000015;
}

uint64_t sub_1DE8A07F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8B8F60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE8A0824()
{
  return 0;
}

void sub_1DE8A0830(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A083C(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7E28();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0878(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7E28();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A08B4()
{
  return 1;
}

uint64_t sub_1DE8A08C0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8A08EC()
{
  return 0x74696D696CLL;
}

uint64_t sub_1DE8A0900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE8A0990()
{
  return 0;
}

void sub_1DE8A099C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A09A8(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7C84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A09E4(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7C84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A0A20()
{
  return 1;
}

unint64_t sub_1DE8A0A30()
{
  return 0xD000000000000012;
}

uint64_t sub_1DE8A0A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8B8FE8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE8A0A78()
{
  return 0;
}

void sub_1DE8A0A84(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A0A90(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7C30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0ACC(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7C30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A0B08()
{
  return 1;
}

unint64_t sub_1DE8A0B18()
{
  return 0xD000000000000017;
}

uint64_t sub_1DE8A0B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8B9070(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE8A0B60()
{
  return 0;
}

void sub_1DE8A0B6C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A0B78(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7D80();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0BB4(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7D80();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A0BF0()
{
  return 1;
}

uint64_t sub_1DE8A0C00()
{
  return 0x6769666E6F63;
}

uint64_t sub_1DE8A0C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE8A0CA4()
{
  return 0;
}

void sub_1DE8A0CB0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A0CBC(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7CD8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0CF8(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7CD8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A0D34()
{
  return 1;
}

uint64_t sub_1DE8A0D40()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8A0D88()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8A0DC8()
{
  return 12383;
}

uint64_t sub_1DE8A0DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE8A0E54()
{
  return 0;
}

void sub_1DE8A0E60(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE8A0E6C(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7D2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8A0EA8(uint64_t a1)
{
  unint64_t v2 = sub_1DE8B7D2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8A0EE4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97B8);
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  MEMORY[0x1F4188790](v3, v4);
  long long v64 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9780);
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63, v6);
  long long v59 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97A8);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62, v8);
  long long v58 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97A0);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10, v11);
  long long v55 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA97B0);
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  MEMORY[0x1F4188790](v13, v14);
  long long v52 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B10);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51, v16);
  long long v49 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9798);
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48, v18);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9790);
  uint64_t v46 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v22);
  unint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9788);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v68 = v25;
  uint64_t v69 = v26;
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v67 = *v1;
  uint64_t v29 = v1[2];
  uint64_t v45 = v1[1];
  uint64_t v30 = *((unsigned __int8 *)v1 + 24);
  uint64_t v31 = a1[3];
  uint64_t v32 = a1;
  uint64_t v33 = (char *)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v32, v31);
  sub_1DE8B7BDC();
  sub_1DE8E1C10();
  switch(v30)
  {
    case 1:
      LOBYTE(v70) = 1;
      sub_1DE8B7E28();
      uint64_t v34 = v68;
      sub_1DE8E1970();
      uint64_t v35 = v48;
      sub_1DE8E1A30();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v47 + 8);
      char v37 = v20;
      goto LABEL_11;
    case 2:
      LOBYTE(v70) = 2;
      sub_1DE8B7DD4();
      uint64_t v38 = v49;
      uint64_t v34 = v68;
      sub_1DE8E1970();
      uint64_t v35 = v51;
      sub_1DE8E1A30();
      uint64_t v39 = v50;
      goto LABEL_10;
    case 3:
      LOBYTE(v70) = 3;
      sub_1DE8B7D80();
      uint64_t v38 = v52;
      uint64_t v34 = v68;
      sub_1DE8E1970();
      uint64_t v35 = v54;
      sub_1DE8E1A30();
      uint64_t v39 = v53;
      goto LABEL_10;
    case 4:
      LOBYTE(v70) = 4;
      sub_1DE8B7D2C();
      uint64_t v38 = v55;
      uint64_t v34 = v68;
      sub_1DE8E1970();
      uint64_t v70 = v67;
      uint64_t v71 = v45;
      uint64_t v72 = v29;
      sub_1DE83BB8C();
      uint64_t v35 = v57;
      sub_1DE8E1A40();
      uint64_t v39 = v56;
      goto LABEL_10;
    case 5:
      LOBYTE(v70) = 5;
      sub_1DE8B7CD8();
      long long v40 = v58;
      uint64_t v41 = v68;
      sub_1DE8E1970();
      uint64_t v70 = v67;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9588);
      sub_1DE8B7ED0(&qword_1EBEA9590, (void (*)(void))sub_1DE88CE60);
      uint64_t v42 = v62;
      sub_1DE8E1A40();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v33, v41);
    case 6:
      LOBYTE(v70) = 6;
      sub_1DE8B7C84();
      uint64_t v38 = v59;
      uint64_t v34 = v68;
      sub_1DE8E1970();
      uint64_t v35 = v63;
      sub_1DE8E1A30();
      uint64_t v39 = v61;
      goto LABEL_10;
    case 7:
      LOBYTE(v70) = 7;
      sub_1DE8B7C30();
      uint64_t v38 = v64;
      uint64_t v34 = v68;
      sub_1DE8E1970();
      uint64_t v35 = v66;
      sub_1DE8E1A30();
      uint64_t v39 = v65;
LABEL_10:
      uint64_t v36 = *(void (**)(char *, uint64_t))(v39 + 8);
      char v37 = v38;
LABEL_11:
      v36(v37, v35);
      break;
    default:
      LOBYTE(v70) = 0;
      sub_1DE8B7E7C();
      uint64_t v34 = v68;
      sub_1DE8E1970();
      sub_1DE8E1A30();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v21);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v33, v34);
}

uint64_t sub_1DE8A1818@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D408);
  uint64_t v92 = *(void *)(v3 - 8);
  uint64_t v93 = v3;
  MEMORY[0x1F4188790](v3, v4);
  v99 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D410);
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91, v6);
  v96 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D418);
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88, v8);
  v98 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D420);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v86 = v10;
  uint64_t v87 = v11;
  MEMORY[0x1F4188790](v10, v12);
  v97 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D428);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v84 = v14;
  uint64_t v85 = v15;
  MEMORY[0x1F4188790](v14, v16);
  v95 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D430);
  uint64_t v83 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80, v18);
  v94 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D438);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82, v20);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D440);
  uint64_t v79 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D448);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27, v29);
  uint64_t v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1[3];
  v101 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1DE8B7BDC();
  uint64_t v33 = v104;
  sub_1DE8E1BF0();
  if (v33)
  {
LABEL_21:
    uint64_t v45 = (uint64_t)v101;
    return __swift_destroy_boxed_opaque_existential_1(v45);
  }
  v77 = v26;
  uint64_t v76 = v23;
  uint64_t v35 = v97;
  uint64_t v34 = v98;
  uint64_t v78 = 0;
  char v37 = v99;
  uint64_t v36 = v100;
  uint64_t v104 = v28;
  uint64_t v38 = sub_1DE8E1950();
  uint64_t v39 = (char *)v38;
  if (*(void *)(v38 + 16) != 1)
  {
    uint64_t v48 = sub_1DE8E1760();
    swift_allocError();
    uint64_t v50 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0B898);
    *uint64_t v50 = &_s22HeadlineClusteringRuleON;
    sub_1DE8E1860();
    sub_1DE8E1740();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v48 - 8) + 104))(v50, *MEMORY[0x1E4FBBA70], v48);
    swift_willThrow();
LABEL_20:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v31, v27);
    goto LABEL_21;
  }
  uint64_t v40 = *(unsigned __int8 *)(v38 + 32);
  uint64_t v75 = v40;
  switch(v40)
  {
    case 1:
      LOBYTE(v102) = 1;
      sub_1DE8B7E28();
      uint64_t v51 = v22;
      uint64_t v52 = v78;
      sub_1DE8E1850();
      if (v52) {
        goto LABEL_20;
      }
      uint64_t v53 = v82;
      uint64_t v54 = sub_1DE8E1920();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v31, v27);
      uint64_t v45 = (uint64_t)v101;
      uint64_t v46 = 0;
      long long v47 = (unint64_t)v54;
      break;
    case 2:
      LOBYTE(v102) = 2;
      sub_1DE8B7DD4();
      long long v55 = v94;
      uint64_t v56 = v78;
      sub_1DE8E1850();
      if (v56) {
        goto LABEL_20;
      }
      uint64_t v57 = v80;
      uint64_t v70 = sub_1DE8E1920();
      uint64_t v71 = v83;
      goto LABEL_24;
    case 3:
      LOBYTE(v102) = 3;
      sub_1DE8B7D80();
      long long v55 = v95;
      uint64_t v58 = v78;
      sub_1DE8E1850();
      if (v58) {
        goto LABEL_20;
      }
      uint64_t v57 = v84;
      uint64_t v70 = sub_1DE8E1920();
      uint64_t v71 = v85;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v31, v27);
      uint64_t v46 = 0;
      long long v47 = (unint64_t)v70;
      goto LABEL_26;
    case 4:
      LOBYTE(v102) = 4;
      sub_1DE8B7D2C();
      uint64_t v59 = v78;
      sub_1DE8E1850();
      if (v59) {
        goto LABEL_20;
      }
      v99 = v39;
      sub_1DE83BB34();
      uint64_t v60 = v86;
      sub_1DE8E1930();
      uint64_t v61 = v104;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v27);
      long long v47 = v102;
      uint64_t v46 = v103;
      goto LABEL_26;
    case 5:
      LOBYTE(v102) = 5;
      sub_1DE8B7CD8();
      uint64_t v62 = v34;
      uint64_t v63 = v78;
      sub_1DE8E1850();
      if (v63) {
        goto LABEL_20;
      }
      v99 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9588);
      sub_1DE8B7ED0(&qword_1EAC0D140, (void (*)(void))sub_1DE88D058);
      uint64_t v64 = v88;
      sub_1DE8E1930();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v62, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v31, v27);
      uint64_t v46 = 0;
      *(void *)&long long v47 = v102;
      goto LABEL_26;
    case 6:
      LOBYTE(v102) = 6;
      sub_1DE8B7C84();
      uint64_t v65 = v96;
      uint64_t v66 = v78;
      sub_1DE8E1850();
      if (v66) {
        goto LABEL_20;
      }
      uint64_t v67 = v91;
      uint64_t v72 = sub_1DE8E1920();
      uint64_t v73 = v89;
      goto LABEL_25;
    case 7:
      LOBYTE(v102) = 7;
      sub_1DE8B7C30();
      uint64_t v65 = v37;
      uint64_t v68 = v78;
      sub_1DE8E1850();
      if (v68) {
        goto LABEL_20;
      }
      uint64_t v67 = v93;
      uint64_t v72 = sub_1DE8E1920();
      uint64_t v73 = v92;
LABEL_25:
      (*(void (**)(char *, uint64_t))(v73 + 8))(v65, v67);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v31, v27);
      uint64_t v46 = 0;
      long long v47 = (unint64_t)v72;
LABEL_26:
      uint64_t v45 = (uint64_t)v101;
      break;
    default:
      LOBYTE(v102) = 0;
      sub_1DE8B7E7C();
      uint64_t v41 = v77;
      uint64_t v42 = v78;
      sub_1DE8E1850();
      if (v42) {
        goto LABEL_20;
      }
      uint64_t v43 = v76;
      uint64_t v44 = sub_1DE8E1920();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v31, v27);
      uint64_t v45 = (uint64_t)v101;
      uint64_t v46 = 0;
      long long v47 = (unint64_t)v44;
      break;
  }
  *(_OWORD *)uint64_t v36 = v47;
  *(void *)(v36 + 16) = v46;
  *(unsigned char *)(v36 + 24) = v75;
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_1DE8A2538@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE8A1818(a1, a2);
}

uint64_t sub_1DE8A2550(void *a1)
{
  return sub_1DE8A0EE4(a1);
}

uint64_t sub_1DE8A256C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8A25B8()
{
  return sub_1DE8E1BD0();
}

void sub_1DE8A25FC(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, char a6@<W7>, void *a7@<X8>)
{
  uint64_t v7 = *(void *)(a4 + 8);
  uint64_t v8 = *(void *)(a4 + 48);
  uint64_t v9 = *(void *)(a4 + 56);
  v11[0] = *(void *)a4;
  v11[1] = v7;
  long long v10 = *(_OWORD *)(a4 + 32);
  long long v12 = *(_OWORD *)(a4 + 16);
  long long v13 = v10;
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  sub_1DE8A2670(a1, 0, 1, a2, a3, (uint64_t)v11, a5, 0x7FFFFFFFFFFFFFFFLL, a7, 0, (double (*)(char *, double, double))sub_1DE8A2E9C, 0, a6);
}

void sub_1DE8A2670(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, long long *a10, double (*a11)(char *, double, double), uint64_t a12, char a13)
{
  uint64_t v79 = a8;
  uint64_t v16 = a5;
  uint64_t v17 = a4;
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  uint64_t v67 = a9;
  long long v21 = *(_OWORD *)(a6 + 16);
  v88[0] = *(_OWORD *)a6;
  v88[1] = v21;
  long long v22 = *(_OWORD *)(a6 + 48);
  v88[2] = *(_OWORD *)(a6 + 32);
  v88[3] = v22;
  uint64_t v77 = a4;
  if (a7)
  {
    uint64_t v23 = *(void *)(a6 + 56);
    *(void *)&long long v82 = *(void *)a6;
    long long v24 = *(_OWORD *)(a6 + 32);
    long long v83 = *(_OWORD *)(a6 + 16);
    uint64_t v25 = *(void *)(a6 + 48);
    long long v13 = (long long *)a1;
    if (a3) {
      uint64_t v26 = 0;
    }
    else {
      uint64_t v26 = a2;
    }
    *((void *)&v82 + 1) = *(void *)(a6 + 8);
    long long v84 = v24;
    *(void *)&long long v85 = v25;
    *((void *)&v85 + 1) = v23;
    *(void *)&long long v86 = v26;
    *((void *)&v86 + 1) = a4;
    *(void *)&v87[0] = a5;
    sub_1DE8BE378((uint64_t)v88);
    swift_bridgeObjectRetain();
    ClusteringJournal.set(clusteringRequirements:)(&v82);
    uint64_t v17 = v77;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t)v13;
    swift_bridgeObjectRelease();
  }
  if ((a3 & 1) == 0)
  {
    uint64_t v27 = *(void *)(v20 + 16);
    if (v27 < v19)
    {
      uint64_t v28 = v67;
      if (a7 && *(unsigned char *)(a7 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
      {
        unint64_t v29 = *(void *)(a7 + 48);
        if (v29)
        {
          *(void *)&long long v82 = v19;
          *((void *)&v82 + 1) = v27;
          long long v83 = v29;
          LOBYTE(v84) = 1;
          swift_bridgeObjectRetain();
          sub_1DE849AD8((uint64_t)&v82);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (qword_1EBEA80A8[0] != -1) {
            swift_once();
          }
          id v58 = (id)qword_1EBEA9228;
          sub_1DE8E16A0();
          sub_1DE8E13A0();
        }
      }
      *uint64_t v67 = 0;
      v28[1] = 0;
      return;
    }
  }
  if (v17 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v78 = a7;
    long long v13 = a10;
    sub_1DE8BE378((uint64_t)v88);
    swift_retain();
    sub_1DE8B42C8(0, v17, (double *)v88, a11);
    uint64_t v14 = v30;
    swift_release();
    sub_1DE8BCBA0((uint64_t)v88);
    uint64_t v31 = (uint64_t *)swift_allocObject();
    uint64_t v32 = MEMORY[0x1E4FBC860];
    uint64_t v74 = v31;
    v31[2] = MEMORY[0x1E4FBC860];
    uint64_t v66 = v31 + 2;
    uint64_t v33 = swift_allocObject();
    uint64_t v75 = v33;
    *(void *)(v33 + 16) = v32;
    uint64_t v65 = v33 + 16;
    uint64_t v34 = swift_allocObject();
    uint64_t v76 = v34;
    *(void *)(v34 + 16) = MEMORY[0x1E4FBC870];
    if (qword_1EBEA8188 == -1) {
      goto LABEL_14;
    }
  }
  uint64_t v34 = swift_once();
LABEL_14:
  MEMORY[0x1F4188790](v34, v35);
  uint64_t v70 = v14;
  v60[0] = v16;
  v60[1] = v79;
  uint64_t v61 = v13;
  v36(sub_1DE8B7F84);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_1DE83AA80(0, *((void *)v16 + 2) + 1, 1, v16);
  }
  char v37 = v67;
  uint64_t v38 = v78;
  unint64_t v40 = *((void *)v16 + 2);
  unint64_t v39 = *((void *)v16 + 3);
  if (v40 >= v39 >> 1) {
    uint64_t v16 = sub_1DE83AA80((char *)(v39 > 1), v40 + 1, 1, v16);
  }
  *((void *)v16 + 2) = v40 + 1;
  uint64_t v41 = &v16[32 * v40];
  *((void *)v41 + 5) = 0;
  *((void *)v41 + 6) = 0;
  uint64_t v42 = v79;
  *((void *)v41 + 4) = v79;
  v41[56] = 6;
  uint64_t v71 = swift_allocObject();
  *(unsigned char *)(v71 + 16) = (uint64_t)v13 >= v42;
  uint64_t v72 = swift_allocObject();
  *(unsigned char *)(v72 + 16) = 0;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = 0;
  uint64_t v69 = *(void *)(v20 + 16);
  if (v69)
  {
    int v63 = a3;
    uint64_t v64 = v19;
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v45 = 0;
    uint64_t v46 = 32;
    int v68 = a13 & 1;
    while (1)
    {
      long long v47 = *(_OWORD *)(v20 + v46 + 80);
      long long v86 = *(_OWORD *)(v20 + v46 + 64);
      v87[0] = v47;
      *(_OWORD *)((char *)v87 + 9) = *(_OWORD *)(v20 + v46 + 89);
      long long v48 = *(_OWORD *)(v20 + v46 + 16);
      long long v82 = *(_OWORD *)(v20 + v46);
      long long v83 = v48;
      long long v49 = *(_OWORD *)(v20 + v46 + 48);
      long long v84 = *(_OWORD *)(v20 + v46 + 32);
      long long v85 = v49;
      uint64_t v50 = (uint64_t)v13;
      uint64_t v51 = (void (*)(uint64_t (*)(), void *))qword_1EBEB2000;
      MEMORY[0x1F4188790](v43, v44);
      uint64_t v61 = &v82;
      uint64_t v62 = v45;
      sub_1DE82F388((uint64_t)&v82);
      v51(sub_1DE8B7FDC, v60);
      long long v13 = (long long *)v50;
      if ((sub_1DE8B69C4(v76, (uint64_t)&v82, v74, v77, v20, v45, v75, v78, v68, (uint64_t)v16, v50, v73, v71, v72, v70, v79) & 1) == 0)break; {
      ++v45;
      }
      uint64_t v43 = sub_1DE8B7FE4((uint64_t)&v82);
      v46 += 112;
      if (v69 == v45)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    qword_1EBEB2000(sub_1DE8A6FB0, 0);
    sub_1DE8B7FE4((uint64_t)&v82);
LABEL_26:
    char v37 = v67;
    uint64_t v38 = v78;
    uint64_t v19 = v64;
    uint64_t v52 = v66;
    if (v63) {
      goto LABEL_31;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v66;
    if (a3) {
      goto LABEL_31;
    }
  }
  swift_beginAccess();
  if (*(void *)(*v52 + 16) >= v19)
  {
LABEL_31:
    swift_beginAccess();
    uint64_t v54 = v74[2];
    swift_beginAccess();
    uint64_t v55 = *(void *)(v75 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *char v37 = v54;
    v37[1] = v55;
    return;
  }
  if (v38
    && (uint64_t v53 = v65, swift_beginAccess(), *(unsigned char *)(v38 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2))
  {
    uint64_t v56 = *(void *)(v38 + 48);
    if (v56)
    {
      uint64_t v57 = *(void *)(*(void *)v53 + 16);
      v80[0] = v19;
      v80[1] = v69;
      v80[2] = v57;
      v80[3] = v56;
      char v81 = 2;
      swift_bridgeObjectRetain();
      sub_1DE849AD8((uint64_t)v80);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBEA80A8[0] != -1) {
        swift_once();
      }
      id v59 = (id)qword_1EBEA9228;
      sub_1DE8E16A0();
      sub_1DE8E13A0();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  *char v37 = 0;
  v37[1] = 0;
}

void sub_1DE8A2E9C(double a1, double a2)
{
  if ((~COERCE__INT64(a2 - a1) & 0x7FF0000000000000) != 0) {
    sub_1DE8AF74C(0x20000000000001uLL);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1DE8A2F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return 0;
}

uint64_t sub_1DE8A3258(uint64_t a1, char *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  char v30 = *(unsigned char *)(a1 + 65);
  char v31 = *(unsigned char *)(a1 + 64);
  char v28 = *(unsigned char *)(a1 + 67);
  char v29 = *(unsigned char *)(a1 + 66);
  uint64_t v14 = *(void *)(a1 + 72);
  unint64_t v15 = *(void *)(a1 + 80);
  uint64_t v27 = *(void *)(a1 + 96);
  char v25 = *a2;
  char v26 = *(unsigned char *)(a1 + 104);
  uint64_t v23 = a3[1];
  uint64_t v24 = *a3;
  uint64_t v33 = *((unsigned __int8 *)a3 + 16);
  uint64_t v35 = (char **)(a6 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1DE82F404(v14, v15);
  sub_1DE82F404(v14, v15);
  sub_1DE8AC840(&v38, v8, v7);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v36[0] = v8;
    v36[1] = v7;
    v36[2] = v13;
    v36[3] = v24;
    v36[4] = v23;
    v36[6] = 0;
    v36[7] = 0;
    v36[5] = v33;
    char v37 = 0;
    ClusteringJournal.record(event:)((uint64_t)v36);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE82F404(v14, v15);
  sub_1DE82F470(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v34 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = *v35;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v35 = v16;
  uint64_t v18 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_1DE83A318(0, *((void *)v16 + 2) + 1, 1, v16);
    *uint64_t v35 = v16;
  }
  unint64_t v20 = *((void *)v16 + 2);
  unint64_t v19 = *((void *)v16 + 3);
  if (v20 >= v19 >> 1)
  {
    uint64_t v16 = sub_1DE83A318((char *)(v19 > 1), v20 + 1, 1, v16);
    *uint64_t v35 = v16;
  }
  *((void *)v16 + 2) = v20 + 1;
  long long v21 = &v16[112 * v20];
  *((void *)v21 + 4) = v18;
  *((void *)v21 + 5) = v7;
  *((void *)v21 + 6) = v32;
  *((void *)v21 + 7) = v34;
  *((void *)v21 + 8) = v10;
  *((void *)v21 + 9) = v11;
  *((void *)v21 + 10) = v12;
  *((void *)v21 + 11) = v13;
  v21[96] = v31;
  v21[97] = v30;
  v21[98] = v29;
  v21[99] = v28;
  *((void *)v21 + 13) = v14;
  *((void *)v21 + 14) = v15;
  v21[120] = v25;
  *((void *)v21 + 16) = v27;
  v21[136] = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1DE82F470(v14, v15);
}

uint64_t sub_1DE8A3560()
{
  return 0;
}

uint64_t sub_1DE8A3644()
{
  return 0;
}

uint64_t sub_1DE8A36E4(uint64_t a1, uint64_t a2)
{
  sub_1DE8E1730();
  uint64_t result = sub_1DE8E1490();
  if (__OFSUB__(*(void *)(a1 + 16), a2))
  {
    __break(1u);
  }
  else
  {
    sub_1DE8E1A80();
    sub_1DE8E1490();
    swift_bridgeObjectRelease();
    sub_1DE8E1490();
    return 0;
  }
  return result;
}

uint64_t sub_1DE8A37BC()
{
  return 0;
}

uint64_t sub_1DE8A385C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  v219 = (uint64_t *)(a4 + 16);
  long long v21 = (void *)(a6 + 16);
  v171 = (uint64_t *)(a7 + 16);
  swift_beginAccess();
  uint64_t v165 = a7;
  uint64_t v22 = *(void *)(a7 + 16);
  uint64_t v23 = *(void *)(v22 + 16);
  swift_retain();
  uint64_t v175 = a3;
  uint64_t v176 = a2;
  uint64_t v172 = a4;
  v217 = v21;
  uint64_t v166 = a6;
  if (!v23)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    goto LABEL_41;
  }
  uint64_t v169 = v23;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v167 = a2 + 16;
  swift_beginAccess();
  uint64_t v24 = v22 + 32;
  uint64_t v25 = v23;
  unint64_t v26 = 0;
  v162 = (char *)(a3 + 56);
  do
  {
    uint64_t v27 = (uint64_t *)(v24 + 112 * v26);
    if (*((unsigned char *)v27 + 66) != 1) {
      goto LABEL_3;
    }
    uint64_t v28 = v27[1];
    uint64_t v195 = v27[2];
    uint64_t v207 = v27[3];
    uint64_t v205 = v27[4];
    uint64_t v203 = v27[5];
    uint64_t v201 = v27[6];
    uint64_t v29 = v27[7];
    char v192 = *((unsigned char *)v27 + 65);
    char v189 = *((unsigned char *)v27 + 67);
    uint64_t v209 = v27[9];
    unint64_t v213 = v27[10];
    char v187 = *((unsigned char *)v27 + 88);
    uint64_t v185 = v27[12];
    char v183 = *((unsigned char *)v27 + 104);
    if (a1)
    {
      if ((v27[8] & 1) == 0) {
        goto LABEL_3;
      }
    }
    else if (v27[8])
    {
      goto LABEL_3;
    }
    char v181 = *((unsigned char *)v27 + 64);
    uint64_t v198 = *v27;
    uint64_t v163 = 112 * v26;
    uint64_t v30 = *(void *)v167;
    unint64_t v174 = v26;
    if (!*(void *)(*(void *)v167 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v209, v213);
      goto LABEL_20;
    }
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE82F404(v209, v213);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t v31 = v28;
    uint64_t v32 = sub_1DE8E1BD0();
    uint64_t v33 = -1 << *(unsigned char *)(v30 + 32);
    unint64_t v34 = v32 & ~v33;
    uint64_t v35 = v30 + 56;
    if (((*(void *)(v30 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v26 = v174;
      uint64_t v28 = v31;
      goto LABEL_19;
    }
    uint64_t v220 = *(void *)(v30 + 48);
    uint64_t v36 = (void *)(v220 + 16 * v34);
    BOOL v37 = *v36 == v198 && v36[1] == v31;
    if (!v37 && (sub_1DE8E1AC0() & 1) == 0)
    {
      uint64_t v44 = ~v33;
      unint64_t v45 = (v34 + 1) & v44;
      if (((*(void *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
      {
LABEL_34:
        uint64_t v28 = v31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v26 = v174;
LABEL_19:
        a2 = v176;
LABEL_20:
        uint64_t v38 = *(void *)(v175 + 16);
        if (v38)
        {
          swift_bridgeObjectRetain();
          swift_beginAccess();
          swift_beginAccess();
          unint64_t v39 = v162;
          uint64_t v179 = v28;
          while (1)
          {
            a2 = a5 + *v21;
            if (__OFADD__(a5, *v21)) {
              break;
            }
            uint64_t v221 = v38;
            uint64_t v40 = *((void *)v39 - 2);
            uint64_t v41 = *((void *)v39 - 1);
            char v42 = *v39;
            uint64_t v43 = *v219;
            *(void *)&long long v230 = *((void *)v39 - 3);
            *((void *)&v230 + 1) = v40;
            *(void *)&long long v231 = v41;
            BYTE8(v231) = v42;
            *(void *)&long long v240 = v198;
            *((void *)&v240 + 1) = v28;
            *(void *)&long long v241 = v195;
            *((void *)&v241 + 1) = v207;
            *(void *)&long long v242 = v205;
            *((void *)&v242 + 1) = v203;
            *(void *)&long long v243 = v201;
            *((void *)&v243 + 1) = v29;
            LOBYTE(v244) = v181;
            BYTE1(v244) = v192;
            BYTE2(v244) = 1;
            BYTE3(v244) = v189;
            *((void *)&v244 + 1) = v209;
            *(void *)v245 = v213;
            v245[8] = v187;
            *(void *)&v245[16] = v185;
            v245[24] = v183;
            sub_1DE8BCF50(v230, v40, v41, v42);
            swift_bridgeObjectRetain();
            sub_1DE8B4680((uint64_t)&v240, v43, a2, 1);
            v39 += 32;
            swift_bridgeObjectRelease();
            sub_1DE8A0390(v230, v40, v41, v42);
            uint64_t v38 = v221 - 1;
            long long v21 = v217;
            uint64_t v28 = v179;
            if (v221 == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = v176;
              unint64_t v26 = v174;
              goto LABEL_35;
            }
          }
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_35:
        sub_1DE82F470(v209, v213);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if (v26 >= *(void *)(*v171 + 16)) {
          goto LABEL_166;
        }
        uint64_t v50 = (_OWORD *)(*v171 + v163);
        long long v51 = v50[2];
        long long v52 = v50[4];
        long long v241 = v50[3];
        long long v242 = v52;
        long long v240 = v51;
        long long v53 = v50[5];
        long long v54 = v50[6];
        long long v55 = v50[7];
        *(_OWORD *)&v245[9] = *(_OWORD *)((char *)v50 + 121);
        long long v244 = v54;
        *(_OWORD *)v245 = v55;
        long long v243 = v53;
        long long v233 = v50[5];
        long long v234 = v50[6];
        v235[0] = v50[7];
        *(_OWORD *)((char *)v235 + 9) = *(_OWORD *)((char *)v50 + 121);
        long long v230 = v50[2];
        long long v231 = v50[3];
        long long v232 = v50[4];
        v236[0] = 8;
        swift_beginAccess();
        uint64_t v237 = *(void *)(*(void *)(v172 + 16) + 16);
        uint64_t v238 = -1;
        char v239 = 2;
        sub_1DE82F388((uint64_t)&v240);
        sub_1DE8A3258((uint64_t)&v230, v236, &v237, a2, a8, v172);
        swift_beginAccess();
        if (__OFADD__(*v21, 1))
        {
LABEL_167:
          __break(1u);
        }
        else
        {
          ++*v21;
          swift_beginAccess();
          sub_1DE8A52BC(v26, (uint64_t)&v230);
          uint64_t v56 = *((void *)&v234 + 1);
          unint64_t v57 = *(void *)&v235[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v58 = sub_1DE82F470(v56, v57);
          if (qword_1EBEA8188 == -1)
          {
LABEL_38:
            MEMORY[0x1F4188790](v58, v59);
            uint64_t v61 = sub_1DE8BE6D4;
            goto LABEL_155;
          }
        }
        uint64_t v58 = swift_once();
        goto LABEL_38;
      }
      uint64_t v46 = v198;
      while (1)
      {
        long long v47 = (void *)(v220 + 16 * v45);
        if (*v47 == v46 && v47[1] == v31) {
          break;
        }
        char v49 = sub_1DE8E1AC0();
        uint64_t v46 = v198;
        if (v49) {
          break;
        }
        unint64_t v45 = (v45 + 1) & v44;
        if (((*(void *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          goto LABEL_34;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v26 = v174;
    a2 = v176;
    sub_1DE82F470(v209, v213);
    uint64_t v25 = v169;
    uint64_t v24 = v22 + 32;
LABEL_3:
    ++v26;
  }
  while (v26 != v25);
  swift_bridgeObjectRelease();
LABEL_41:
  uint64_t v62 = *(void *)(a9 + 16);
  uint64_t v63 = a10;
  if (v62 < a10) {
    goto LABEL_164;
  }
  if (a10 < 0) {
    goto LABEL_165;
  }
  uint64_t v178 = *(void *)(a9 + 16);
  if (v62 == a10) {
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v168 = a2 + 16;
  swift_beginAccess();
  uint64_t v82 = a9 + 32;
  while (2)
  {
    if (v63 >= v62) {
      goto LABEL_160;
    }
    long long v83 = (uint64_t *)(v82 + 112 * v63);
    if (*((unsigned char *)v83 + 66) == 1)
    {
      uint64_t v84 = v83[1];
      uint64_t v196 = v83[2];
      uint64_t v208 = v83[3];
      uint64_t v206 = v83[4];
      uint64_t v204 = v83[5];
      uint64_t v202 = v83[6];
      uint64_t v85 = v83[7];
      char v194 = *((unsigned char *)v83 + 65);
      char v191 = *((unsigned char *)v83 + 67);
      uint64_t v211 = v83[9];
      unint64_t v215 = v83[10];
      char v188 = *((unsigned char *)v83 + 88);
      uint64_t v186 = v83[12];
      char v184 = *((unsigned char *)v83 + 104);
      if (a1)
      {
        if ((v83[8] & 1) == 0) {
          goto LABEL_92;
        }
      }
      else if (v83[8])
      {
        goto LABEL_92;
      }
      char v180 = *((unsigned char *)v83 + 64);
      uint64_t v200 = *v83;
      v164 = (long long *)(v82 + 112 * v63);
      uint64_t v170 = v63;
      uint64_t v86 = *(void *)v168;
      if (*(void *)(*(void *)v168 + 16))
      {
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v211, v215);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v87 = sub_1DE8E1BD0();
        uint64_t v88 = -1 << *(unsigned char *)(v86 + 32);
        unint64_t v89 = v87 & ~v88;
        uint64_t v90 = v86 + 56;
        if ((*(void *)(v86 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89))
        {
          uint64_t v223 = *(void *)(v86 + 48);
          uint64_t v91 = (void *)(v223 + 16 * v89);
          BOOL v92 = *v91 == v200 && v91[1] == v84;
          if (v92 || (sub_1DE8E1AC0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v176;
LABEL_91:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v211, v215);
            uint64_t v82 = a9 + 32;
            uint64_t v63 = v170;
            goto LABEL_92;
          }
          uint64_t v100 = ~v88;
          unint64_t v101 = (v89 + 1) & v100;
          a2 = v176;
          if ((*(void *)(v90 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101))
          {
            uint64_t v102 = v200;
            while (1)
            {
              uint64_t v103 = (void *)(v223 + 16 * v101);
              if (*v103 == v102 && v103[1] == v84) {
                break;
              }
              char v105 = sub_1DE8E1AC0();
              uint64_t v102 = v200;
              if (v105) {
                break;
              }
              unint64_t v101 = (v101 + 1) & v100;
              if (((*(void *)(v90 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101) & 1) == 0) {
                goto LABEL_103;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_91;
          }
LABEL_103:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a2 = v176;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v211, v215);
      }
      uint64_t v93 = *(void *)(v175 + 16);
      if (v93)
      {
        uint64_t v182 = v84;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        swift_beginAccess();
        v94 = (char *)(v175 + 56);
        do
        {
          a2 = a5 + *v21;
          if (__OFADD__(a5, *v21)) {
            goto LABEL_159;
          }
          uint64_t v224 = v93;
          uint64_t v95 = *((void *)v94 - 2);
          uint64_t v96 = *((void *)v94 - 1);
          char v97 = *v94;
          uint64_t v98 = *v219;
          *(void *)&long long v230 = *((void *)v94 - 3);
          *((void *)&v230 + 1) = v95;
          *(void *)&long long v231 = v96;
          BYTE8(v231) = v97;
          *(void *)&long long v240 = v200;
          *((void *)&v240 + 1) = v182;
          *(void *)&long long v241 = v196;
          *((void *)&v241 + 1) = v208;
          *(void *)&long long v242 = v206;
          *((void *)&v242 + 1) = v204;
          *(void *)&long long v243 = v202;
          *((void *)&v243 + 1) = v85;
          LOBYTE(v244) = v180;
          BYTE1(v244) = v194;
          BYTE2(v244) = 1;
          BYTE3(v244) = v191;
          *((void *)&v244 + 1) = v211;
          *(void *)v245 = v215;
          v245[8] = v188;
          *(void *)&v245[16] = v186;
          v245[24] = v184;
          sub_1DE8BCF50(v230, v95, v96, v97);
          swift_bridgeObjectRetain();
          sub_1DE8B4680((uint64_t)&v240, v98, a2, 1);
          v94 += 32;
          swift_bridgeObjectRelease();
          sub_1DE8A0390(v230, v95, v96, v97);
          --v93;
          long long v21 = v217;
        }
        while (v224 != 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v176;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1DE82F470(v211, v215);
      swift_bridgeObjectRelease();
      long long v106 = v164[3];
      long long v107 = v164[5];
      long long v244 = v164[4];
      *(_OWORD *)v245 = v107;
      *(_OWORD *)&v245[9] = *(long long *)((char *)v164 + 89);
      long long v108 = v164[1];
      long long v240 = *v164;
      long long v241 = v108;
      long long v109 = v164[3];
      long long v111 = *v164;
      long long v110 = v164[1];
      long long v242 = v164[2];
      long long v243 = v109;
      long long v112 = v164[5];
      long long v234 = v244;
      v235[0] = v112;
      *(_OWORD *)((char *)v235 + 9) = *(long long *)((char *)v164 + 89);
      long long v230 = v111;
      long long v231 = v110;
      long long v232 = v242;
      long long v233 = v106;
      v236[0] = 8;
      swift_beginAccess();
      uint64_t v237 = *(void *)(*(void *)(v172 + 16) + 16);
      uint64_t v238 = v170;
      char v239 = 2;
      sub_1DE82F388((uint64_t)&v240);
      sub_1DE8A3258((uint64_t)&v230, v236, &v237, a2, a8, v172);
      uint64_t v113 = swift_beginAccess();
      if (__OFADD__(*v21, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v21;
        if (qword_1EBEA8188 == -1)
        {
LABEL_107:
          MEMORY[0x1F4188790](v113, v114);
          uint64_t v61 = sub_1DE8BE6CC;
          goto LABEL_155;
        }
      }
      uint64_t v113 = swift_once();
      goto LABEL_107;
    }
LABEL_92:
    BOOL v99 = __OFADD__(v63++, 1);
    if (v99) {
      goto LABEL_161;
    }
    if (v63 != v62) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_44:
  swift_beginAccess();
  uint64_t v65 = *v171;
  uint64_t v66 = *(void *)(*v171 + 16);
  if (!v66) {
    goto LABEL_109;
  }
  uint64_t v67 = v65 + 32;
  swift_bridgeObjectRetain();
  uint64_t v199 = a2 + 16;
  swift_beginAccess();
  uint64_t v68 = v67;
  unint64_t v69 = 0;
  uint64_t v190 = v67;
  uint64_t v193 = v66;
  while (1)
  {
    uint64_t v70 = (uint64_t *)(v68 + 112 * v69);
    if (*((unsigned char *)v70 + 66) != 1) {
      goto LABEL_47;
    }
    uint64_t v71 = v70[1];
    unint64_t v222 = v70[10];
    if (a1)
    {
      if ((v70[8] & 1) == 0) {
        goto LABEL_47;
      }
    }
    else if (v70[8])
    {
      goto LABEL_47;
    }
    uint64_t v72 = *(void *)v199;
    if (!*(void *)(*(void *)v199 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_151;
    }
    uint64_t v210 = *v70;
    uint64_t v214 = v70[9];
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE82F404(v214, v222);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t v73 = sub_1DE8E1BD0();
    uint64_t v74 = -1 << *(unsigned char *)(v72 + 32);
    unint64_t v75 = v73 & ~v74;
    if (((*(void *)(v72 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0) {
      goto LABEL_150;
    }
    uint64_t v76 = *(void *)(v72 + 48);
    uint64_t v77 = (void *)(v76 + 16 * v75);
    BOOL v78 = *v77 == v210 && v77[1] == v71;
    if (!v78 && (sub_1DE8E1AC0() & 1) == 0) {
      break;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a2 = v176;
    sub_1DE82F470(v214, v222);
    uint64_t v62 = v178;
    uint64_t v68 = v190;
    uint64_t v66 = v193;
LABEL_47:
    if (++v69 == v66)
    {
      uint64_t v65 = swift_bridgeObjectRelease();
LABEL_109:
      if (v62 == a10)
      {
LABEL_143:
        if (a8)
        {
          long long v242 = 0u;
          long long v243 = 0u;
          long long v240 = 0u;
          long long v241 = 0u;
          LOBYTE(v244) = -16;
          uint64_t v65 = ClusteringJournal.record(event:)((uint64_t)&v240);
        }
        if (qword_1EBEA8188 != -1) {
          uint64_t v65 = swift_once();
        }
        MEMORY[0x1F4188790](v65, v64);
        v142(sub_1DE8BE6B4);
        swift_beginAccess();
        *(unsigned char *)(a11 + 16) = 1;
        uint64_t v161 = a16;
        uint64_t v160 = a15;
        uint64_t v159 = a14;
        char v143 = a1 & 1;
        uint64_t v158 = a11;
        uint64_t v156 = a5;
        uint64_t v157 = v166;
        goto LABEL_156;
      }
      swift_bridgeObjectRetain();
      uint64_t v197 = a2 + 16;
      swift_beginAccess();
      uint64_t v115 = a10;
      uint64_t v116 = a9 + 32;
      while (1)
      {
        if (v115 >= v62) {
          goto LABEL_162;
        }
        v117 = (uint64_t *)(v116 + 112 * v115);
        if (*((unsigned char *)v117 + 66) != 1) {
          goto LABEL_116;
        }
        uint64_t v118 = *v117;
        uint64_t v225 = v117[1];
        if (a1)
        {
          if ((v117[8] & 1) == 0) {
            goto LABEL_115;
          }
        }
        else if (v117[8])
        {
LABEL_115:
          a2 = v176;
LABEL_116:
          BOOL v99 = __OFADD__(v115++, 1);
          if (v99) {
            goto LABEL_163;
          }
          goto LABEL_117;
        }
        uint64_t v119 = *(void *)v197;
        if (!*(void *)(*(void *)v197 + 16)) {
          goto LABEL_139;
        }
        uint64_t v212 = v117[9];
        unint64_t v216 = v117[10];
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v212, v216);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v120 = sub_1DE8E1BD0();
        uint64_t v121 = v119;
        uint64_t v122 = -1 << *(unsigned char *)(v119 + 32);
        unint64_t v123 = v120 & ~v122;
        uint64_t v124 = v121 + 56;
        if (((*(void *)(v121 + 56 + ((v123 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v123) & 1) == 0)
        {
LABEL_138:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1DE82F470(v212, v216);
LABEL_139:
          swift_bridgeObjectRelease();
          long long v133 = *((_OWORD *)v117 + 3);
          long long v134 = *((_OWORD *)v117 + 5);
          long long v244 = *((_OWORD *)v117 + 4);
          *(_OWORD *)v245 = v134;
          *(_OWORD *)&v245[9] = *(_OWORD *)((char *)v117 + 89);
          long long v135 = *((_OWORD *)v117 + 1);
          long long v240 = *(_OWORD *)v117;
          long long v241 = v135;
          long long v136 = *((_OWORD *)v117 + 3);
          long long v138 = *(_OWORD *)v117;
          long long v137 = *((_OWORD *)v117 + 1);
          long long v242 = *((_OWORD *)v117 + 2);
          long long v243 = v136;
          long long v139 = *((_OWORD *)v117 + 5);
          long long v234 = v244;
          v235[0] = v139;
          *(_OWORD *)((char *)v235 + 9) = *(_OWORD *)((char *)v117 + 89);
          long long v230 = v138;
          long long v231 = v137;
          long long v232 = v242;
          long long v233 = v133;
          v226[0] = 8;
          swift_beginAccess();
          uint64_t v227 = *(void *)(*(void *)(v172 + 16) + 16);
          uint64_t v228 = v115;
          char v229 = 2;
          sub_1DE82F388((uint64_t)&v240);
          a2 = v176;
          sub_1DE8A3258((uint64_t)&v230, v226, &v227, v176, a8, v172);
          uint64_t v140 = swift_beginAccess();
          if (__OFADD__(*v217, 1))
          {
            __break(1u);
          }
          else
          {
            ++*v217;
            if (qword_1EBEA8188 == -1)
            {
LABEL_141:
              MEMORY[0x1F4188790](v140, v141);
              uint64_t v61 = sub_1DE8BE6BC;
              goto LABEL_155;
            }
          }
          uint64_t v140 = swift_once();
          goto LABEL_141;
        }
        uint64_t v125 = *(void *)(v121 + 48);
        v126 = (void *)(v125 + 16 * v123);
        BOOL v127 = *v126 == v118 && v126[1] == v225;
        if (!v127 && (sub_1DE8E1AC0() & 1) == 0)
        {
          uint64_t v128 = ~v122;
          unint64_t v129 = (v123 + 1) & v128;
          if (((*(void *)(v124 + ((v129 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v129) & 1) == 0) {
            goto LABEL_138;
          }
          uint64_t v130 = v118;
          while (1)
          {
            v131 = (void *)(v125 + 16 * v129);
            BOOL v132 = *v131 == v130 && v131[1] == v225;
            if (v132 || (sub_1DE8E1AC0() & 1) != 0) {
              break;
            }
            uint64_t v130 = v118;
            unint64_t v129 = (v129 + 1) & v128;
            if (((*(void *)(v124 + ((v129 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v129) & 1) == 0) {
              goto LABEL_138;
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1DE82F470(v212, v216);
        a2 = v176;
        uint64_t v62 = v178;
        uint64_t v116 = a9 + 32;
        BOOL v99 = __OFADD__(v115++, 1);
        if (v99) {
          goto LABEL_163;
        }
LABEL_117:
        if (v115 == v62)
        {
          uint64_t v65 = swift_bridgeObjectRelease();
          goto LABEL_143;
        }
      }
    }
  }
  uint64_t v79 = ~v74;
  while (1)
  {
    unint64_t v75 = (v75 + 1) & v79;
    if (((*(void *)(v72 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0) {
      break;
    }
    uint64_t v80 = (void *)(v76 + 16 * v75);
    BOOL v81 = *v80 == v210 && v80[1] == v71;
    if (v81 || (sub_1DE8E1AC0() & 1) != 0) {
      goto LABEL_46;
    }
  }
LABEL_150:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_1DE82F470(v214, v222);
  swift_bridgeObjectRelease();
  a2 = v176;
LABEL_151:
  swift_beginAccess();
  if (v69 >= *(void *)(*v171 + 16))
  {
    __break(1u);
  }
  else
  {
    v144 = (_OWORD *)(*v171 + 112 * v69);
    long long v145 = v144[2];
    long long v146 = v144[4];
    long long v241 = v144[3];
    long long v242 = v146;
    long long v240 = v145;
    long long v147 = v144[5];
    long long v148 = v144[6];
    long long v149 = v144[7];
    *(_OWORD *)&v245[9] = *(_OWORD *)((char *)v144 + 121);
    long long v244 = v148;
    *(_OWORD *)v245 = v149;
    long long v243 = v147;
    long long v233 = v144[5];
    long long v234 = v144[6];
    v235[0] = v144[7];
    *(_OWORD *)((char *)v235 + 9) = *(_OWORD *)((char *)v144 + 121);
    long long v230 = v144[2];
    long long v231 = v144[3];
    long long v232 = v144[4];
    v226[0] = 8;
    swift_beginAccess();
    uint64_t v227 = *(void *)(*(void *)(v172 + 16) + 16);
    uint64_t v228 = -1;
    char v229 = 2;
    sub_1DE82F388((uint64_t)&v240);
    sub_1DE8A3258((uint64_t)&v230, v226, &v227, a2, a8, v172);
    swift_beginAccess();
    if (!__OFADD__(*v217, 1))
    {
      ++*v217;
      swift_beginAccess();
      sub_1DE8A52BC(v69, (uint64_t)&v230);
      uint64_t v150 = *((void *)&v234 + 1);
      unint64_t v151 = *(void *)&v235[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v152 = sub_1DE82F470(v150, v151);
      if (qword_1EBEA8188 == -1) {
        goto LABEL_154;
      }
      goto LABEL_173;
    }
  }
  __break(1u);
LABEL_173:
  uint64_t v152 = swift_once();
LABEL_154:
  MEMORY[0x1F4188790](v152, v153);
  uint64_t v61 = sub_1DE8BE6C4;
LABEL_155:
  v60(v61);
  sub_1DE8B7FE4((uint64_t)&v240);
  uint64_t v161 = a16;
  uint64_t v160 = a15;
  uint64_t v159 = a14;
  char v143 = a1 & 1;
  uint64_t v158 = a11;
  uint64_t v157 = v166;
  uint64_t v156 = a5;
LABEL_156:
  char v154 = sub_1DE8B69C4(a2, a12, v172, a13, a9, a10, v165, a8, v143, v175, v156, v157, v158, v159, v160, v161);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  return v154 & 1;
}

uint64_t sub_1DE8A52BC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DE8AF7D8(v5);
    uint64_t v5 = result;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v5 + 112 * a1;
    long long v9 = *(_OWORD *)(v8 + 32);
    v8 += 32;
    uint64_t v10 = *(void *)(v8 + 16);
    unint64_t v11 = v7 - 1;
    uint64_t v12 = *(void *)(v8 + 56);
    char v13 = *(unsigned char *)(v8 + 64);
    char v14 = *(unsigned char *)(v8 + 65);
    char v15 = *(unsigned char *)(v8 + 66);
    char v16 = *(unsigned char *)(v8 + 67);
    char v17 = *(unsigned char *)(v8 + 88);
    uint64_t v18 = *(void *)(v8 + 96);
    char v19 = *(unsigned char *)(v8 + 104);
    *(_OWORD *)a2 = v9;
    *(void *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(v8 + 40);
    *(void *)(a2 + 56) = v12;
    *(unsigned char *)(a2 + 64) = v13;
    *(unsigned char *)(a2 + 65) = v14;
    *(unsigned char *)(a2 + 66) = v15;
    *(unsigned char *)(a2 + 67) = v16;
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(v8 + 72);
    *(unsigned char *)(a2 + 88) = v17;
    *(void *)(a2 + 96) = v18;
    *(unsigned char *)(a2 + 104) = v19;
    uint64_t result = (uint64_t)memmove((void *)v8, (const void *)(v8 + 112), 112 * (v11 - a1));
    *(void *)(v5 + 16) = v11;
    *unint64_t v2 = v5;
  }
  return result;
}

uint64_t sub_1DE8A53B0()
{
  return 0;
}

uint64_t sub_1DE8A5434()
{
  return 0;
}

uint64_t sub_1DE8A54B8()
{
  return 0;
}

uint64_t sub_1DE8A553C()
{
  return 0;
}

uint64_t sub_1DE8A55C0()
{
  return 0;
}

uint64_t sub_1DE8A5668(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (*(void *)(a6 + 16) < a7)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (a7 < 0)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  char v17 = a1;
  uint64_t v133 = a8;
  uint64_t v18 = a7;
  char v16 = 0;
  uint64_t v120 = a16;
  uint64_t v121 = a15;
  uint64_t v123 = a14;
  char v122 = a13;
  uint64_t v125 = a12;
  uint64_t v124 = a11;
  uint64_t v156 = (uint64_t *)(a3 + 16);
  long long v149 = (void *)(a5 + 16);
  uint64_t v136 = a6 + 32;
  uint64_t v127 = a10;
  uint64_t v130 = a9;
  uint64_t v134 = *(void *)(a6 + 16);
  uint64_t v135 = swift_retain();
  uint64_t v131 = a3;
  uint64_t v132 = a6;
  uint64_t v126 = a5;
  uint64_t v128 = v18;
  if (v134 == v18)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    goto LABEL_5;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v119 = v17 + 16;
  swift_beginAccess();
  uint64_t v41 = v134;
  do
  {
    if (v18 >= v41) {
      goto LABEL_103;
    }
    char v42 = (uint64_t *)(v136 + 112 * v18);
    if (*((unsigned char *)v42 + 64) == 1)
    {
      uint64_t v129 = v18;
      uint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      uint64_t v146 = v42[2];
      uint64_t v45 = v42[7];
      char v144 = *((unsigned char *)v42 + 65);
      char v143 = *((unsigned char *)v42 + 66);
      uint64_t v47 = v42[9];
      unint64_t v46 = v42[10];
      char v140 = *((unsigned char *)v42 + 88);
      char v141 = *((unsigned char *)v42 + 67);
      uint64_t v139 = v42[12];
      uint64_t v118 = (long long *)(v136 + 112 * v18);
      char v138 = *((unsigned char *)v42 + 104);
      unint64_t v162 = v46;
      uint64_t v163 = *v42;
      uint64_t v152 = v42[6];
      uint64_t v155 = v47;
      uint64_t v158 = v42[4];
      uint64_t v159 = v42[3];
      uint64_t v157 = v42[5];
      if (*(void *)(*(void *)v119 + 16))
      {
        uint64_t v164 = *(void *)v119;
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v47, v46);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v48 = sub_1DE8E1BD0();
        uint64_t v49 = -1 << *(unsigned char *)(v164 + 32);
        unint64_t v50 = v48 & ~v49;
        uint64_t v51 = v164 + 56;
        if (((*(void *)(v164 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
          goto LABEL_37;
        }
        uint64_t v52 = *(void *)(v164 + 48);
        long long v53 = (void *)(v52 + 16 * v50);
        BOOL v54 = *v53 == v44 && v53[1] == v43;
        if (v54 || (sub_1DE8E1AC0() & 1) != 0) {
          goto LABEL_43;
        }
        uint64_t v63 = ~v49;
        unint64_t v64 = (v50 + 1) & v63;
        if ((*(void *)(v51 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64))
        {
          uint64_t v65 = v163;
          while (1)
          {
            uint64_t v66 = (void *)(v52 + 16 * v64);
            if (*v66 == v65 && v66[1] == v43) {
              break;
            }
            char v68 = sub_1DE8E1AC0();
            uint64_t v65 = v163;
            if (v68) {
              break;
            }
            unint64_t v64 = (v64 + 1) & v63;
            if (((*(void *)(v51 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0) {
              goto LABEL_37;
            }
          }
LABEL_43:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v17 = (char *)v135;
          sub_1DE82F470(v155, v162);
          uint64_t v41 = v134;
          uint64_t v18 = v129;
          goto LABEL_44;
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v46 = v162;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v47, v46);
      }
      uint64_t v55 = *(void *)(a2 + 16);
      if (!v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v17 = (char *)v135;
LABEL_57:
        sub_1DE82F470(v155, v46);
        swift_bridgeObjectRelease();
        long long v69 = v118[3];
        long long v70 = v118[5];
        long long v184 = v118[4];
        *(_OWORD *)uint64_t v185 = v70;
        *(_OWORD *)&v185[9] = *(long long *)((char *)v118 + 89);
        long long v71 = v118[1];
        long long v180 = *v118;
        long long v181 = v71;
        long long v72 = v118[3];
        long long v74 = *v118;
        long long v73 = v118[1];
        long long v182 = v118[2];
        long long v183 = v72;
        long long v75 = v118[5];
        long long v175 = v184;
        v176[0] = v75;
        *(_OWORD *)((char *)v176 + 9) = *(long long *)((char *)v118 + 89);
        long long v171 = v74;
        long long v172 = v73;
        long long v173 = v182;
        long long v174 = v69;
        v177[0] = 8;
        swift_beginAccess();
        v178[0] = *(void *)(*(void *)(v131 + 16) + 16);
        v178[1] = v129;
        char v179 = 3;
        char v16 = &v180;
        sub_1DE82F388((uint64_t)&v180);
        uint64_t v76 = sub_1DE8A3258((uint64_t)&v171, v177, v178, (uint64_t)v17, v133, v131);
        if (qword_1EBEA8188 == -1)
        {
LABEL_58:
          MEMORY[0x1F4188790](v76, v77);
          uint64_t v79 = sub_1DE8BECC8;
          goto LABEL_100;
        }
LABEL_109:
        uint64_t v76 = swift_once();
        goto LABEL_58;
      }
      uint64_t v148 = v43;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v56 = v149;
      swift_beginAccess();
      char v17 = (char *)(a2 + 56);
      while (1)
      {
        uint64_t v57 = a4 + *v56;
        if (__OFADD__(a4, *v56)) {
          break;
        }
        uint64_t v165 = v55;
        uint64_t v58 = *((void *)v17 - 2);
        uint64_t v59 = *((void *)v17 - 1);
        char v60 = *v17;
        uint64_t v61 = *v156;
        *(void *)&long long v171 = *((void *)v17 - 3);
        *((void *)&v171 + 1) = v58;
        *(void *)&long long v172 = v59;
        BYTE8(v172) = v60;
        *(void *)&long long v180 = v163;
        *((void *)&v180 + 1) = v148;
        *(void *)&long long v181 = v146;
        *((void *)&v181 + 1) = v159;
        *(void *)&long long v182 = v158;
        *((void *)&v182 + 1) = v157;
        *(void *)&long long v183 = v152;
        *((void *)&v183 + 1) = v45;
        LOBYTE(v184) = 1;
        BYTE1(v184) = v144;
        BYTE2(v184) = v143;
        BYTE3(v184) = v141;
        *((void *)&v184 + 1) = v155;
        *(void *)uint64_t v185 = v162;
        v185[8] = v140;
        *(void *)&v185[16] = v139;
        v185[24] = v138;
        sub_1DE8BCF50(v171, v58, v59, v60);
        swift_bridgeObjectRetain();
        sub_1DE8B4680((uint64_t)&v180, v61, v57, 0);
        v17 += 32;
        swift_bridgeObjectRelease();
        sub_1DE8A0390(v171, v58, v59, v60);
        --v55;
        uint64_t v56 = v149;
        if (v165 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v17 = (char *)v135;
          unint64_t v46 = v162;
          goto LABEL_57;
        }
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
LABEL_44:
    BOOL v62 = __OFADD__(v18++, 1);
    if (v62) {
      goto LABEL_104;
    }
  }
  while (v18 != v41);
  swift_bridgeObjectRelease();
LABEL_5:
  swift_beginAccess();
  uint64_t v22 = *(void *)(*(void *)(a9 + 16) + 16);
  if (!v22)
  {
LABEL_61:
    if (v134 != v128)
    {
      swift_bridgeObjectRetain();
      uint64_t v150 = v17 + 16;
      swift_beginAccess();
      uint64_t v80 = v134;
      uint64_t v81 = v128;
      while (1)
      {
        if (v81 >= v80) {
          goto LABEL_105;
        }
        uint64_t v82 = (uint64_t *)(v136 + 112 * v81);
        if (*((unsigned char *)v82 + 64) == 1)
        {
          if (!*(void *)(*(void *)v150 + 16))
          {
            swift_bridgeObjectRelease();
            goto LABEL_97;
          }
          uint64_t v153 = v81;
          uint64_t v83 = *v82;
          uint64_t v84 = v82[1];
          uint64_t v166 = *(void *)v150;
          uint64_t v86 = v82[9];
          unint64_t v85 = v82[10];
          sub_1DE8E1BA0();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v160 = v86;
          sub_1DE82F404(v86, v85);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1DE8E1480();
          uint64_t v87 = sub_1DE8E1BD0();
          uint64_t v88 = -1 << *(unsigned char *)(v166 + 32);
          unint64_t v89 = v87 & ~v88;
          if (((*(void *)(v166 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89) & 1) == 0) {
            goto LABEL_96;
          }
          uint64_t v90 = *(void *)(v166 + 48);
          uint64_t v91 = (void *)(v90 + 16 * v89);
          BOOL v92 = *v91 == v83 && v91[1] == v84;
          if (!v92 && (sub_1DE8E1AC0() & 1) == 0)
          {
            uint64_t v93 = ~v88;
            while (1)
            {
              unint64_t v89 = (v89 + 1) & v93;
              if (((*(void *)(v166 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89) & 1) == 0) {
                break;
              }
              v94 = (void *)(v90 + 16 * v89);
              BOOL v95 = *v94 == v83 && v94[1] == v84;
              if (v95 || (sub_1DE8E1AC0() & 1) != 0) {
                goto LABEL_79;
              }
            }
LABEL_96:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v160, v85);
            swift_bridgeObjectRelease();
            char v17 = (char *)v135;
            uint64_t v81 = v153;
LABEL_97:
            long long v104 = *((_OWORD *)v82 + 3);
            long long v105 = *((_OWORD *)v82 + 5);
            long long v184 = *((_OWORD *)v82 + 4);
            *(_OWORD *)uint64_t v185 = v105;
            *(_OWORD *)&v185[9] = *(_OWORD *)((char *)v82 + 89);
            long long v106 = *((_OWORD *)v82 + 1);
            long long v180 = *(_OWORD *)v82;
            long long v181 = v106;
            long long v107 = *((_OWORD *)v82 + 3);
            long long v109 = *(_OWORD *)v82;
            long long v108 = *((_OWORD *)v82 + 1);
            long long v182 = *((_OWORD *)v82 + 2);
            long long v183 = v107;
            long long v110 = *((_OWORD *)v82 + 5);
            long long v175 = v184;
            v176[0] = v110;
            *(_OWORD *)((char *)v176 + 9) = *(_OWORD *)((char *)v82 + 89);
            long long v171 = v109;
            long long v172 = v108;
            long long v173 = v182;
            long long v174 = v104;
            char v170 = 8;
            swift_beginAccess();
            uint64_t v167 = *(void *)(*(void *)(v131 + 16) + 16);
            uint64_t v168 = v81;
            char v169 = 3;
            char v16 = &v180;
            sub_1DE82F388((uint64_t)&v180);
            uint64_t v111 = sub_1DE8A3258((uint64_t)&v171, &v170, &v167, (uint64_t)v17, v133, v131);
            if (qword_1EBEA8188 != -1) {
              uint64_t v111 = swift_once();
            }
            MEMORY[0x1F4188790](v111, v112);
            uint64_t v79 = sub_1DE8BE74C;
            goto LABEL_100;
          }
LABEL_79:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v81 = v153;
          sub_1DE82F470(v160, v85);
          uint64_t v80 = v134;
          char v17 = (char *)v135;
        }
        BOOL v62 = __OFADD__(v81++, 1);
        if (v62) {
          goto LABEL_106;
        }
        if (v81 == v80)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    if (v133)
    {
      long long v182 = 0u;
      long long v183 = 0u;
      long long v180 = 0u;
      long long v181 = 0u;
      LOBYTE(v184) = 112;
      ClusteringJournal.record(event:)((uint64_t)&v180);
    }
    if (qword_1EBEA8188 != -1) {
      swift_once();
    }
    qword_1EBEB2000(sub_1DE8A68AC, 0);
    swift_beginAccess();
    *(unsigned char *)(a10 + 16) = 1;
    uint64_t v117 = a16;
    uint64_t v115 = a10;
    uint64_t v116 = a15;
    goto LABEL_101;
  }
  uint64_t v142 = a9 + 16;
  uint64_t v23 = *(void *)(a9 + 16) + 32;
  swift_bridgeObjectRetain();
  char v154 = v17 + 16;
  swift_beginAccess();
  unint64_t v24 = 0;
  uint64_t v145 = v23;
  uint64_t v147 = v22;
  while (2)
  {
    uint64_t v25 = 112 * v24;
    uint64_t v26 = v23 + 112 * v24;
    if (*(unsigned char *)(v26 + 64) != 1)
    {
LABEL_8:
      if (++v24 == v22)
      {
        swift_bridgeObjectRelease();
        char v16 = 0;
        goto LABEL_61;
      }
      continue;
    }
    break;
  }
  uint64_t v27 = *(void *)v154;
  if (*(void *)(*(void *)v154 + 16))
  {
    uint64_t v28 = *(void *)v26;
    uint64_t v29 = *(void *)(v26 + 8);
    uint64_t v31 = *(void *)(v26 + 72);
    unint64_t v30 = *(void *)(v26 + 80);
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v161 = v31;
    sub_1DE82F404(v31, v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t v32 = sub_1DE8E1BD0();
    uint64_t v33 = -1 << *(unsigned char *)(v27 + 32);
    unint64_t v34 = v32 & ~v33;
    if (((*(void *)(v27 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
      goto LABEL_59;
    }
    uint64_t v35 = *(void *)(v27 + 48);
    uint64_t v36 = (void *)(v35 + 16 * v34);
    BOOL v37 = *v36 == v28 && v36[1] == v29;
    if (!v37 && (sub_1DE8E1AC0() & 1) == 0)
    {
      uint64_t v38 = ~v33;
      while (1)
      {
        unint64_t v34 = (v34 + 1) & v38;
        if (((*(void *)(v27 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
          break;
        }
        unint64_t v39 = (void *)(v35 + 16 * v34);
        BOOL v40 = *v39 == v28 && v39[1] == v29;
        if (v40 || (sub_1DE8E1AC0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_59:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v161, v30);
      swift_bridgeObjectRelease();
      char v17 = (char *)v135;
      uint64_t v25 = 112 * v24;
      goto LABEL_90;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    char v17 = (char *)v135;
    sub_1DE82F470(v161, v30);
    uint64_t v23 = v145;
    uint64_t v22 = v147;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_90:
  swift_beginAccess();
  if (v24 >= *(void *)(*(void *)v142 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v96 = (_OWORD *)(*(void *)v142 + v25);
    long long v97 = v96[2];
    long long v98 = v96[4];
    long long v181 = v96[3];
    long long v182 = v98;
    long long v180 = v97;
    long long v99 = v96[5];
    long long v100 = v96[6];
    long long v101 = v96[7];
    *(_OWORD *)&v185[9] = *(_OWORD *)((char *)v96 + 121);
    long long v184 = v100;
    *(_OWORD *)uint64_t v185 = v101;
    long long v183 = v99;
    long long v174 = v96[5];
    long long v175 = v96[6];
    v176[0] = v96[7];
    *(_OWORD *)((char *)v176 + 9) = *(_OWORD *)((char *)v96 + 121);
    long long v171 = v96[2];
    long long v172 = v96[3];
    long long v173 = v96[4];
    char v170 = 8;
    swift_beginAccess();
    uint64_t v167 = *(void *)(*(void *)(v131 + 16) + 16);
    uint64_t v168 = -1;
    char v169 = 3;
    sub_1DE82F388((uint64_t)&v180);
    sub_1DE8A3258((uint64_t)&v171, &v170, &v167, (uint64_t)v17, v133, v131);
    uint64_t v102 = swift_beginAccess();
    if (!__OFADD__(*v149, 1))
    {
      ++*v149;
      if (qword_1EBEA8188 == -1) {
        goto LABEL_93;
      }
      goto LABEL_112;
    }
  }
  __break(1u);
LABEL_112:
  uint64_t v102 = swift_once();
LABEL_93:
  MEMORY[0x1F4188790](v102, v103);
  char v16 = &v180;
  uint64_t v79 = sub_1DE8BE754;
LABEL_100:
  v78(v79);
  sub_1DE8B7FE4((uint64_t)v16);
  uint64_t v117 = v120;
  uint64_t v116 = v121;
  uint64_t v115 = v127;
LABEL_101:
  char v113 = sub_1DE8B69C4(v17, v124, v131, v125, v132, v128, v130, v133, v122 & 1, a2, a4, v126, v123, v115, v116, v117);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  return v113 & 1;
}

uint64_t sub_1DE8A67A4()
{
  return 0;
}

uint64_t sub_1DE8A6828()
{
  return 0;
}

unint64_t sub_1DE8A68AC()
{
  return 0xD000000000000037;
}

uint64_t sub_1DE8A68C8()
{
  return 0;
}

uint64_t sub_1DE8A694C()
{
  return 0;
}

uint64_t sub_1DE8A69EC()
{
  return 0;
}

uint64_t sub_1DE8A6A8C()
{
  return 0;
}

uint64_t sub_1DE8A6B2C()
{
  return 0;
}

uint64_t sub_1DE8A6BCC()
{
  return 0;
}

uint64_t sub_1DE8A6C6C()
{
  return 0;
}

uint64_t sub_1DE8A6D10()
{
  return 0;
}

uint64_t sub_1DE8A6DB4()
{
  return 0;
}

uint64_t sub_1DE8A6E54()
{
  return 0;
}

uint64_t sub_1DE8A6EF4()
{
  return 0;
}

unint64_t sub_1DE8A6FB0()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_1DE8A6FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x1F4188790](a1, a2);
  char v210 = v3;
  uint64_t v211 = v5;
  uint64_t v212 = v4;
  unint64_t v7 = v6;
  uint64_t v209 = v8;
  uint64_t v10 = v9;
  uint64_t v11 = v2;
  uint64_t v207 = v12;
  uint64_t v14 = (uint64_t)memcpy(v262, v13, sizeof(v262));
  if (qword_1EBEA8188 != -1) {
    goto LABEL_141;
  }
LABEL_2:
  uint64_t v213 = (uint64_t)v7;
  MEMORY[0x1F4188790](v14, v15);
  v16(sub_1DE8B8060);
  if (qword_1EBEA80A8[0] != -1) {
    swift_once();
  }
  char v17 = (void *)qword_1EBEA9228;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DE8E31B0;
  uint64_t v19 = *(void *)(v11 + 16);
  uint64_t v20 = MEMORY[0x1E4FBB550];
  uint64_t v21 = MEMORY[0x1E4FBB5C8];
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v18 + 64) = v21;
  *(void *)(v18 + 32) = v19;
  uint64_t v22 = *(void *)(v10 + 16);
  *(void *)(v18 + 96) = v20;
  *(void *)(v18 + 104) = v21;
  *(void *)(v18 + 72) = v22;
  id v23 = v17;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t v231 = v11;
    swift_bridgeObjectRetain();
    unint64_t v227 = v10;
    unint64_t v24 = (char *)(v10 + 60);
    v218 = (void *)MEMORY[0x1E4FBC868];
    do
    {
      uint64_t v237 = v22;
      uint64_t v26 = *(void *)(v24 - 28);
      uint64_t v11 = *(void *)(v24 - 20);
      uint64_t v27 = *(void *)(v24 - 12);
      uint64_t v10 = *(v24 - 4);
      char v28 = *(v24 - 3);
      char v241 = *(v24 - 2);
      LODWORD(v245) = *(v24 - 1);
      char v247 = *v24;
      swift_bridgeObjectRetain_n();
      unint64_t v7 = v218;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)v253 = v218;
      unint64_t v31 = sub_1DE821D84(v26, v11);
      uint64_t v32 = v218[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_138;
      }
      char v35 = v30;
      if (v218[3] >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v7 = v253;
          sub_1DE8235EC();
        }
      }
      else
      {
        sub_1DE826D08(v34, isUniquelyReferenced_nonNull_native);
        unint64_t v7 = *(unsigned char **)v253;
        unint64_t v36 = sub_1DE821D84(v26, v11);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_143;
        }
        unint64_t v31 = v36;
      }
      uint64_t v38 = *(void **)v253;
      v218 = *(void **)v253;
      if (v35)
      {
        uint64_t v25 = *(void *)(*(void *)v253 + 56) + 32 * v31;
        swift_bridgeObjectRelease();
        *(void *)uint64_t v25 = v26;
        *(void *)(v25 + 8) = v11;
        *(void *)(v25 + 16) = v27;
        *(unsigned char *)(v25 + 24) = v10;
        *(unsigned char *)(v25 + 25) = v28;
        *(unsigned char *)(v25 + 26) = v241;
        *(unsigned char *)(v25 + 27) = v245;
        *(unsigned char *)(v25 + 28) = v247;
      }
      else
      {
        *(void *)(*(void *)v253 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        unint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
        *unint64_t v39 = v26;
        v39[1] = v11;
        uint64_t v40 = v38[7] + 32 * v31;
        *(void *)uint64_t v40 = v26;
        *(void *)(v40 + 8) = v11;
        *(void *)(v40 + 16) = v27;
        *(unsigned char *)(v40 + 24) = v10;
        *(unsigned char *)(v40 + 25) = v28;
        *(unsigned char *)(v40 + 26) = v241;
        *(unsigned char *)(v40 + 27) = v245;
        *(unsigned char *)(v40 + 28) = v247;
        uint64_t v41 = v38[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_139;
        }
        v38[2] = v43;
        swift_bridgeObjectRetain();
      }
      v24 += 32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v237 - 1;
    }
    while (v237 != 1);
    swift_bridgeObjectRelease();
    uint64_t v11 = v231;
  }
  else
  {
    v218 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v44 = sub_1DE8A87D4((uint64_t)v262, (char *)v11);
  uint64_t v45 = MEMORY[0x1E4FBC870];
  *(void *)&v270[0] = MEMORY[0x1E4FBC870];
  uint64_t v46 = MEMORY[0x1E4FBC868];
  uint64_t v215 = *((void *)v44 + 2);
  uint64_t v208 = (uint64_t)v44;
  if (!v215)
  {
    uint64_t v48 = 0;
    uint64_t v49 = MEMORY[0x1E4FBC868];
LABEL_56:
    v257[0] = v49;
    uint64_t v256 = v45;
    uint64_t v255 = v46;
    v254 = 0;
    uint64_t v93 = v213;
    if (!*(void *)(v49 + 16) || (uint64_t v249 = *(void *)&v262[928], *(uint64_t *)&v262[928] < 1))
    {
LABEL_104:
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    uint64_t v94 = v49;
    while (1)
    {
      ClusteringJournal.startedBuildingCandidateGroups()();
      swift_retain();
      sub_1DE84E628((uint64_t)v262);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      BOOL v95 = sub_1DE8B75C0(MEMORY[0x1E4FBC860], v94, v93, v262, v209, (uint64_t *)&v254, (uint64_t)v212, v211, v210 & 1, (uint64_t)&v255, (uint64_t)&v256, v257);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1DE850D3C((uint64_t)v262);
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)v253 = v95;
      swift_bridgeObjectRetain();
      sub_1DE8AD31C((char **)v253);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)v253;
      int v96 = sub_1DE8A98B0(&v255, (uint64_t)v262);
      uint64_t v97 = sub_1DE8A9DB8(&v255, (uint64_t)v262);
      int v98 = v97;
      MEMORY[0x1F4188790](v97, v99);
      v100(sub_1DE8BCC18);
      uint64_t v101 = *(void *)(v11 + 16);
      if (!v101) {
        goto LABEL_102;
      }
      uint64_t v102 = (uint64_t *)(v11 + 32);
      uint64_t v103 = (uint64_t *)(v11 + 64);
      while (1)
      {
        unint64_t v7 = (unsigned char *)*((unsigned __int8 *)v103 - 16);
        if ((v96 ^ v98 ^ 1 | v96 ^ v7)) {
          break;
        }
        v103 += 5;
        if (!--v101)
        {
          long long v104 = (void **)(v11 + 40);
          unint64_t v7 = (unsigned char *)*(unsigned __int8 *)(v11 + 48);
          long long v105 = (uint64_t *)(v11 + 56);
          uint64_t v103 = (uint64_t *)(v11 + 64);
          goto LABEL_65;
        }
      }
      uint64_t v102 = v103 - 4;
      long long v104 = (void **)(v103 - 3);
      long long v105 = v103 - 1;
LABEL_65:
      uint64_t v106 = *v105;
      long long v107 = *v104;
      uint64_t v108 = *v102;
      uint64_t v10 = *v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v109 = *(void *)(v106 + 16);
      uint64_t v93 = v213;
      uint64_t v110 = 0;
      if (v109)
      {
        uint64_t v111 = (unsigned char *)(v106 + 98);
        do
        {
          uint64_t v112 = *v111 & ~*(v111 - 2) & 1;
          BOOL v42 = __OFADD__(v110, v112);
          v110 += v112;
          if (v42) {
            goto LABEL_137;
          }
          v111 += 112;
        }
        while (--v109);
      }
      BOOL v42 = __OFADD__(v254, v110);
      uint64_t v113 = (uint64_t)v254 + v110;
      if (v42) {
        goto LABEL_140;
      }
      v254 = (long long *)v113;
      v114._countAndFlagsBits = v108;
      v114._object = v107;
      ClusteringJournal.finishedBuildingCandidateGroups(selectedTag:)(v114);
      v258[0] = v108;
      v258[1] = v107;
      char v259 = (char)v7;
      uint64_t v260 = v106;
      uint64_t v261 = v10;
      swift_bridgeObjectRetain_n();
      sub_1DE8BCC2C(v108, (uint64_t)v107);
      char v115 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)v253 = v255;
      uint64_t v255 = 0x8000000000000000;
      sub_1DE829D40((uint64_t)v258, v108, (uint64_t)v107, v115);
      uint64_t v255 = *(void *)v253;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v218[2] || (unint64_t v116 = sub_1DE821D84(v108, (uint64_t)v107), (v117 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_1DE8BCC70(v108, (uint64_t)v107);
        goto LABEL_98;
      }
      uint64_t v118 = v218[7] + 32 * v116;
      uint64_t v119 = *(void *)(v118 + 8);
      double v120 = *(double *)(v118 + 16);
      uint64_t v239 = *(unsigned __int8 *)(v118 + 24);
      uint64_t v243 = *(void *)v118;
      int v121 = *(unsigned __int8 *)(v118 + 25);
      int v122 = *(unsigned __int8 *)(v118 + 26);
      int v233 = *(unsigned __int8 *)(v118 + 27);
      LODWORD(v245) = *(unsigned __int8 *)(v118 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v123 = v257[0];
      if (*(void *)(v257[0] + 16))
      {
        if (v121) {
          uint64_t v124 = 256;
        }
        else {
          uint64_t v124 = 0;
        }
        uint64_t v125 = 0x10000;
        if (!v122) {
          uint64_t v125 = 0;
        }
        uint64_t v126 = 0x1000000;
        if (!v233) {
          uint64_t v126 = 0;
        }
        if (v245) {
          uint64_t v127 = 0x100000000;
        }
        else {
          uint64_t v127 = 0;
        }
        uint64_t v234 = v124;
        uint64_t v128 = v125 | v126;
        uint64_t v225 = v127;
        unint64_t v129 = v227 & 0xFFFFFF0000000000 | v239 | v124 | v125 | v126 | v127;
        swift_bridgeObjectRetain();
        unint64_t v227 = v129;
        unint64_t v130 = sub_1DE821EC8(v243, v119, v129, v120);
        if (v131)
        {
          uint64_t v221 = *(void *)(*(void *)(v123 + 56) + 8 * v130);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1DE8AD1B0(v243, v119, v222 & 0xFFFFFF0000000000 | v239 | v234 | v128 | v225, v120);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v132 = 904;
          if (v245) {
            uint64_t v132 = 905;
          }
          unint64_t v222 = v222 & 0xFFFFFF0000000000 | v239 | v234 | v128 | v225;
          if (v262[v132])
          {
            uint64_t v135 = swift_bridgeObjectRetain();
            uint64_t v134 = sub_1DE82E1E8(v135);
            swift_bridgeObjectRelease();
            uint64_t v133 = v221;
          }
          else
          {
            uint64_t v133 = v221;
            swift_bridgeObjectRetain();
            uint64_t v134 = v221;
          }
          swift_bridgeObjectRetain();
          uint64_t v136 = swift_bridgeObjectRetain();
          sub_1DE8B8494(v136, (uint64_t)v257, v134);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if (v262[888])
          {
            swift_bridgeObjectRelease();
            uint64_t v137 = swift_bridgeObjectRetain();
            uint64_t v138 = sub_1DE82E1E8(v137);
            swift_bridgeObjectRelease();
            sub_1DE8BCC70(v108, (uint64_t)v107);
            sub_1DE8AF7EC(v138);
          }
          else
          {
            sub_1DE8BCC70(v108, (uint64_t)v107);
            sub_1DE8AF7EC(v133);
          }
          swift_bridgeObjectRelease();
          goto LABEL_97;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1DE8BCC70(v108, (uint64_t)v107);
LABEL_97:
      uint64_t v93 = v213;
LABEL_98:
      uint64_t v94 = v257[0];
      uint64_t v48 = 0;
      if (!*(void *)(v257[0] + 16) || *(void *)(v255 + 16) >= v249) {
        goto LABEL_104;
      }
    }
  }
  uint64_t v214 = v44 + 32;
  swift_bridgeObjectRetain();
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v49 = MEMORY[0x1E4FBC868];
LABEL_23:
  uint64_t v217 = v47;
  unint64_t v50 = &v214[112 * v47];
  long long v51 = *(_OWORD *)v50;
  long long v52 = *((_OWORD *)v50 + 1);
  long long v265 = *((_OWORD *)v50 + 2);
  long long v264 = v52;
  long long v53 = *((_OWORD *)v50 + 3);
  long long v54 = *((_OWORD *)v50 + 4);
  long long v55 = *((_OWORD *)v50 + 5);
  *(_OWORD *)((char *)v268 + 9) = *(_OWORD *)(v50 + 89);
  long long v267 = v54;
  v268[0] = v55;
  long long v266 = v53;
  long long v263 = v51;
  long long v269 = v264;
  int64_t v56 = *(void *)(v265 + 16) + 1;
  sub_1DE82F388((uint64_t)&v263);
  swift_bridgeObjectRetain();
  sub_1DE8B843C((uint64_t)&v269);
  *(void *)v253 = sub_1DE83A608(0, v56, 0, MEMORY[0x1E4FBC860]);
  uint64_t v57 = swift_bridgeObjectRetain();
  sub_1DE813448(v57);
  uint64_t v58 = *(char **)v253;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v58 = sub_1DE83A608(0, *((void *)v58 + 2) + 1, 1, v58);
  }
  unint64_t v60 = *((void *)v58 + 2);
  unint64_t v59 = *((void *)v58 + 3);
  if (v60 >= v59 >> 1) {
    uint64_t v58 = sub_1DE83A608((char *)(v59 > 1), v60 + 1, 1, v58);
  }
  *((void *)v58 + 2) = v60 + 1;
  *(_OWORD *)&v58[16 * v60 + 32] = v269;
  sub_1DE8B8468((uint64_t)&v269);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_1DE8B8298((uint64_t)v58, (uint64_t)v218);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = *((void *)v61 + 2);
  if (!v62)
  {
    swift_bridgeObjectRelease();
    sub_1DE82F388((uint64_t)&v263);
    sub_1DE8AC9F0((uint64_t)v253, (uint64_t)&v263);
    uint64_t v91 = *(void *)&v253[72];
    unint64_t v92 = *(void *)&v253[80];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v91, v92);
    sub_1DE8B7FE4((uint64_t)&v263);
    goto LABEL_22;
  }
  uint64_t v216 = v48;
  swift_bridgeObjectRetain();
  uint64_t v63 = (unsigned __int8 *)(v61 + 60);
  unint64_t v64 = (void *)v49;
  while (1)
  {
    uint64_t v232 = v62;
    uint64_t v248 = *(void *)(v63 - 28);
    uint64_t v67 = *(void *)(v63 - 20);
    double v68 = *(double *)(v63 - 12);
    int v69 = *v63;
    int v70 = *(v63 - 1);
    int v71 = *(v63 - 2);
    int v72 = *(v63 - 3);
    uint64_t v73 = *(v63 - 4);
    swift_bridgeObjectRetain();
    sub_1DE82F388((uint64_t)&v263);
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)v253 = v64;
    char v220 = v72;
    BOOL v74 = v72 == 0;
    unint64_t v7 = v64;
    uint64_t v48 = v74 ? 0 : 256;
    LODWORD(v222) = v71;
    uint64_t v75 = v71 ? 0x10000 : 0;
    char v224 = v70;
    uint64_t v76 = v70 ? 0x1000000 : 0;
    LODWORD(v227) = v69;
    uint64_t v77 = v69 ? 0x100000000 : 0;
    uint64_t v238 = v73;
    uint64_t v242 = v67;
    unint64_t v245 = v77 | v245 & 0xFFFFFF0000000000 | v76 | v75 | v48 | v73;
    unint64_t v79 = sub_1DE821EC8(v248, v67, v245, v68);
    uint64_t v80 = *((void *)v7 + 2);
    BOOL v81 = (v78 & 1) == 0;
    uint64_t v82 = v80 + v81;
    if (__OFADD__(v80, v81)) {
      break;
    }
    char v83 = v78;
    if (*((void *)v7 + 3) < v82)
    {
      sub_1DE82662C(v82, v10);
      unint64_t v7 = *(unsigned char **)v253;
      unint64_t v84 = v77 | v219 & 0xFFFFFF0000000000 | v76 | v75;
      uint64_t v11 = v242;
      uint64_t v85 = v84 | v48 | v238;
      unint64_t v86 = sub_1DE821EC8(v248, v242, v85, v68);
      if ((v83 & 1) == (v87 & 1))
      {
        unint64_t v79 = v86;
        uint64_t v219 = v85;
        goto LABEL_49;
      }
      sub_1DE8E1B40();
      __break(1u);
LABEL_143:
      sub_1DE8E1B40();
      __break(1u);
LABEL_144:
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    if ((v10 & 1) == 0)
    {
      unint64_t v7 = v253;
      sub_1DE823218();
    }
    uint64_t v11 = v242;
LABEL_49:
    unint64_t v64 = *(void **)v253;
    swift_bridgeObjectRelease();
    if (v83) {
      goto LABEL_29;
    }
    v64[(v79 >> 6) + 8] |= 1 << v79;
    uint64_t v88 = v64[6] + 32 * v79;
    *(void *)uint64_t v88 = v248;
    *(void *)(v88 + 8) = v11;
    *(double *)(v88 + 16) = v68;
    *(unsigned char *)(v88 + 24) = v238;
    *(unsigned char *)(v88 + 25) = v220;
    *(unsigned char *)(v88 + 26) = v222;
    *(unsigned char *)(v88 + 27) = v224;
    *(unsigned char *)(v88 + 28) = v227;
    *(void *)(v64[7] + 8 * v79) = MEMORY[0x1E4FBC870];
    uint64_t v89 = v64[2];
    BOOL v42 = __OFADD__(v89, 1);
    uint64_t v90 = v89 + 1;
    if (v42)
    {
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      uint64_t v14 = swift_once();
      goto LABEL_2;
    }
    v64[2] = v90;
    swift_bridgeObjectRetain();
LABEL_29:
    v63 += 32;
    sub_1DE8AC9F0((uint64_t)v253, (uint64_t)&v263);
    uint64_t v66 = *(void *)&v253[72];
    unint64_t v65 = *(void *)&v253[80];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v66, v65);
    swift_bridgeObjectRelease_n();
    uint64_t v62 = v232 - 1;
    if (v232 == 1)
    {
      uint64_t v49 = (uint64_t)v64;
      swift_bridgeObjectRelease_n();
      sub_1DE8B7FE4((uint64_t)&v263);
      uint64_t v48 = v216;
LABEL_22:
      uint64_t v47 = v217 + 1;
      if (v217 + 1 == v215)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void *)&v270[0];
        uint64_t v46 = MEMORY[0x1E4FBC868];
        goto LABEL_56;
      }
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_102:
  swift_bridgeObjectRelease();
  swift_release();
  if (*(unsigned char *)(v213 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    swift_beginAccess();
    *(void *)(v213 + 16) = 0;
    goto LABEL_104;
  }
LABEL_105:
  uint64_t v139 = MEMORY[0x1E4FBC860];
  uint64_t v140 = swift_bridgeObjectRetain();
  sub_1DE8AF334(v140, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1DE8AF5F8);
  swift_bridgeObjectRelease();
  char v141 = sub_1DE8B90F8();
  swift_release();
  uint64_t v142 = swift_bridgeObjectRetain();
  uint64_t v143 = sub_1DE8AF334(v142, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1DE8AF4A0);
  uint64_t v240 = v48;
  swift_bridgeObjectRelease();
  memcpy(v253, v262, sizeof(v253));
  char v144 = sub_1DE8BC884(v143, v208, v253);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v145 = (void *)qword_1EBEA9228;
  uint64_t v146 = swift_allocObject();
  uint64_t v147 = (void *)v146;
  *(_OWORD *)(v146 + 16) = xmmword_1DE8E25E0;
  int64_t v148 = *((void *)v141 + 2);
  long long v244 = v141;
  v246 = v144;
  if (v148)
  {
    uint64_t v228 = (void *)v146;
    *(void *)v253 = v139;
    id v149 = v145;
    sub_1DE84BFD8(0, v148, 0);
    uint64_t v150 = *(void *)v253;
    unint64_t v151 = v141 + 48;
    do
    {
      uint64_t v153 = *((void *)v151 - 2);
      uint64_t v152 = *((void *)v151 - 1);
      uint64_t v154 = *(void *)(*(void *)v151 + 16);
      *(void *)v253 = v150;
      unint64_t v156 = *(void *)(v150 + 16);
      unint64_t v155 = *(void *)(v150 + 24);
      swift_bridgeObjectRetain();
      if (v156 >= v155 >> 1)
      {
        sub_1DE84BFD8((void *)(v155 > 1), v156 + 1, 1);
        uint64_t v150 = *(void *)v253;
      }
      *(void *)(v150 + 16) = v156 + 1;
      uint64_t v157 = (void *)(v150 + 24 * v156);
      v157[4] = v153;
      v157[5] = v152;
      v157[6] = v154;
      v151 += 24;
      --v148;
    }
    while (v148);
    char v144 = v246;
    uint64_t v139 = MEMORY[0x1E4FBC860];
    uint64_t v147 = v228;
  }
  else
  {
    id v158 = v145;
    uint64_t v150 = MEMORY[0x1E4FBC860];
  }
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9AF0);
  v147[7] = v159;
  unint64_t v160 = sub_1DE8BCB44();
  v147[8] = v160;
  v147[4] = v150;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  uint64_t v161 = (void *)qword_1EBEA9228;
  uint64_t v162 = swift_allocObject();
  uint64_t v163 = (void *)v162;
  *(_OWORD *)(v162 + 16) = xmmword_1DE8E25E0;
  int64_t v164 = *((void *)v144 + 2);
  if (v164)
  {
    uint64_t v223 = (void *)v162;
    v226 = v161;
    unint64_t v229 = v160;
    uint64_t v235 = v159;
    *(void *)v253 = v139;
    id v165 = v161;
    sub_1DE84BFD8(0, v164, 0);
    uint64_t v166 = *(void *)v253;
    uint64_t v167 = v144 + 48;
    do
    {
      uint64_t v169 = *((void *)v167 - 2);
      uint64_t v168 = *((void *)v167 - 1);
      uint64_t v170 = *(void *)(*(void *)v167 + 16);
      *(void *)v253 = v166;
      unint64_t v172 = *(void *)(v166 + 16);
      unint64_t v171 = *(void *)(v166 + 24);
      swift_bridgeObjectRetain();
      if (v172 >= v171 >> 1)
      {
        sub_1DE84BFD8((void *)(v171 > 1), v172 + 1, 1);
        uint64_t v166 = *(void *)v253;
      }
      *(void *)(v166 + 16) = v172 + 1;
      long long v173 = (void *)(v166 + 24 * v172);
      v173[4] = v169;
      v173[5] = v168;
      v173[6] = v170;
      v167 += 24;
      --v164;
    }
    while (v164);
    unint64_t v160 = v229;
    uint64_t v159 = v235;
    uint64_t v163 = v223;
    uint64_t v161 = v226;
  }
  else
  {
    id v174 = v161;
    uint64_t v166 = MEMORY[0x1E4FBC860];
  }
  v163[7] = v159;
  v163[8] = v160;
  v163[4] = v166;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  *(void *)v253 = 0;
  *(void *)&v253[8] = 0;
  v253[16] = 2;
  ClusteringJournal.startedClustering(group:)((uint64_t)v253);
  long long v175 = (void *)qword_1EBEA9228;
  uint64_t v176 = swift_allocObject();
  *(_OWORD *)(v176 + 16) = xmmword_1DE8E25E0;
  uint64_t v177 = v256;
  uint64_t v178 = *(void *)(v256 + 16);
  *(void *)(v176 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v176 + 64) = MEMORY[0x1E4FBB5C8];
  *(void *)(v176 + 32) = v178;
  id v179 = v175;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  long long v180 = sub_1DE82ACB0(v177);
  swift_bridgeObjectRelease();
  *(void *)v253 = v180;
  sub_1DE8AD2A8((char **)v253, sub_1DE8ADB84);
  if (v240) {
    goto LABEL_144;
  }
  swift_bridgeObjectRelease();
  uint64_t v181 = *(void *)v253;
  uint64_t v182 = *(void *)&v262[952];
  uint64_t v183 = *(void *)&v262[1000];
  uint64_t v184 = *(void *)&v262[1048];
  uint64_t v185 = *(void *)&v262[1096];
  uint64_t v230 = *(void *)&v262[1192];
  uint64_t v236 = *(void *)&v262[1144];
  *(_OWORD *)&v253[64] = *(_OWORD *)&v262[1264];
  *(_OWORD *)&v253[80] = *(_OWORD *)&v262[1280];
  *(void *)&v253[96] = *(void *)&v262[1296];
  *(_OWORD *)v253 = *(_OWORD *)&v262[1200];
  *(_OWORD *)&v253[16] = *(_OWORD *)&v262[1216];
  *(_OWORD *)&v253[32] = *(_OWORD *)&v262[1232];
  *(_OWORD *)&v253[48] = *(_OWORD *)&v262[1248];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F30);
  uint64_t v186 = swift_allocObject();
  *(_OWORD *)(v186 + 16) = xmmword_1DE8EE080;
  *(void *)(v186 + 40) = 0;
  *(void *)(v186 + 48) = 0;
  *(void *)(v186 + 32) = v183;
  *(unsigned char *)(v186 + 56) = 0;
  *(void *)(v186 + 72) = 0;
  *(void *)(v186 + 80) = 0;
  *(void *)(v186 + 64) = v184;
  *(unsigned char *)(v186 + 88) = 3;
  *(void *)(v186 + 104) = 0;
  *(void *)(v186 + 112) = 0;
  *(void *)(v186 + 96) = v182;
  *(unsigned char *)(v186 + 120) = 1;
  *(void *)(v186 + 136) = 0;
  *(void *)(v186 + 144) = 0;
  *(void *)(v186 + 128) = v185;
  *(unsigned char *)(v186 + 152) = 2;
  uint64_t v187 = *(void *)&v262[1320];
  long long v271 = *(_OWORD *)&v262[1304];
  uint64_t v272 = *(void *)&v262[1320];
  *(_OWORD *)(v186 + 160) = *(_OWORD *)&v262[1304];
  *(void *)(v186 + 176) = v187;
  *(unsigned char *)(v186 + 184) = 4;
  *(void *)(v186 + 192) = v209;
  *(void *)(v186 + 200) = 0;
  *(void *)(v186 + 208) = 0;
  *(unsigned char *)(v186 + 216) = 5;
  *(void *)(v186 + 224) = *(void *)&v262[1408];
  *(void *)(v186 + 232) = 0;
  *(void *)(v186 + 240) = 0;
  *(unsigned char *)(v186 + 248) = 7;
  v270[2] = *(_OWORD *)&v253[72];
  v270[3] = *(_OWORD *)&v253[88];
  v270[0] = *(_OWORD *)&v253[40];
  v270[1] = *(_OWORD *)&v253[56];
  uint64_t v188 = *(void *)&v262[896];
  char v189 = v254;
  swift_bridgeObjectRetain();
  sub_1DE89F46C((uint64_t)&v271);
  sub_1DE8BE378((uint64_t)v270);
  sub_1DE8A2670(v181, v230, 0, v236, (char *)v186, (uint64_t)&v253[40], v213, v188, v251, v189, v212, v211, v210 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DE8BCBA0((uint64_t)v270);
  uint64_t v190 = v251[0];
  uint64_t v191 = v213;
  if (v251[0])
  {
    uint64_t v192 = swift_bridgeObjectRetain();
    sub_1DE8BCBD8(v192);
    int64_t v193 = *(void *)(v190 + 16);
    if (v193)
    {
      uint64_t v250 = MEMORY[0x1E4FBC860];
      sub_1DE84BBE0(0, v193, 0);
      uint64_t v194 = v250;
      uint64_t v195 = (uint64_t *)(v190 + 40);
      do
      {
        uint64_t v197 = *(v195 - 1);
        uint64_t v196 = *v195;
        unint64_t v199 = *(void *)(v250 + 16);
        unint64_t v198 = *(void *)(v250 + 24);
        swift_bridgeObjectRetain();
        if (v199 >= v198 >> 1) {
          sub_1DE84BBE0((char *)(v198 > 1), v199 + 1, 1);
        }
        v195 += 14;
        *(void *)(v250 + 16) = v199 + 1;
        uint64_t v200 = v250 + 16 * v199;
        *(void *)(v200 + 32) = v197;
        *(void *)(v200 + 40) = v196;
        --v193;
      }
      while (v193);
      swift_bridgeObjectRelease();
      uint64_t v191 = v213;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v194 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v194 = 0;
  }
  if (*(unsigned char *)(v191 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) == 2)
  {
LABEL_132:
    if (!v194) {
      goto LABEL_135;
    }
    goto LABEL_133;
  }
  if (*(void *)(v191 + 48))
  {
    v251[0] = *(void *)(v191 + 48);
    memset(&v251[1], 0, 24);
    char v252 = 0;
    swift_bridgeObjectRetain();
    sub_1DE849AD8((uint64_t)v251);
    swift_bridgeObjectRelease();
    goto LABEL_132;
  }
  id v205 = (id)qword_1EBEA9228;
  sub_1DE8E16A0();
  sub_1DE8E13A0();

  if (v194)
  {
LABEL_133:
    uint64_t v201 = (void *)qword_1EBEA9228;
    uint64_t v202 = swift_allocObject();
    *(_OWORD *)(v202 + 16) = xmmword_1DE8E25E0;
    uint64_t v203 = *(void *)(v194 + 16);
    *(void *)(v202 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v202 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v202 + 32) = v203;
    id v204 = v201;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    goto LABEL_136;
  }
LABEL_135:
  uint64_t v194 = MEMORY[0x1E4FBC860];
LABEL_136:
  *uint64_t v207 = v244;
  v207[1] = v246;
  v207[2] = (char *)v194;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8A8738(uint64_t a1)
{
  return 0;
}

char *sub_1DE8A87D4(uint64_t a1, char *a2)
{
  if (*(unsigned char *)(a1 + 1400))
  {
    if (qword_1EBEA80A8[0] != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBEA9228;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    uint64_t v5 = a2;
    swift_bridgeObjectRetain();
    sub_1DE8AD2A8(&v5, sub_1DE8AD388);
    return v5;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_1DE8A88D0(char **a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v14 = *(void *)(a2 + 8);
  double v16 = *(double *)(a2 + 16);
  uint64_t v17 = *(unsigned __int8 *)(a2 + 24);
  int v18 = *(unsigned __int8 *)(a2 + 25);
  int v19 = *(unsigned __int8 *)(a2 + 26);
  int v20 = *(unsigned __int8 *)(a2 + 27);
  int v21 = *(unsigned __int8 *)(a2 + 28);
  uint64_t v58 = *(void *)(a2 + 32);
  *(void *)__dst = *(void *)a2;
  uint64_t v15 = *(void *)__dst;
  *(void *)&__dst[8] = v14;
  __dst[16] = v21 ^ 1;
  swift_bridgeObjectRetain();
  ClusteringJournal.startedClustering(group:)((uint64_t)__dst);
  swift_bridgeObjectRelease();
  v73[0] = v15;
  v73[1] = v14;
  *(double *)&v73[2] = v16;
  uint64_t v55 = v17;
  char v74 = v17;
  int v22 = v19;
  char v75 = v18;
  char v76 = v19;
  char v77 = v20;
  char v78 = v21;
  uint64_t v57 = a4;
  memcpy(__dst, a4, sizeof(__dst));
  sub_1DE8A8D28((uint64_t)v73, v58, (uint64_t)__dst, a5, a3, *a6, a7, a8, a9, *(void *)(*(void *)a10 + 16));
  uint64_t v23 = v65;
  if (v65)
  {
    uint64_t v24 = v64;
    uint64_t v25 = v67;
    char v63 = v66;
    uint64_t v27 = v68;
    uint64_t v26 = v69;
    if (*(unsigned char *)(a3 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
    {
      unint64_t v28 = *(void *)(a3 + 48);
      if (v28)
      {
        *(_OWORD *)__dst = v28;
        memset(&__dst[16], 0, 17);
        swift_bridgeObjectRetain();
        sub_1DE849AD8((uint64_t)__dst);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EBEA80A8[0] != -1) {
          swift_once();
        }
        id v40 = (id)qword_1EBEA9228;
        sub_1DE8E16A0();
        sub_1DE8E13A0();
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v41 = sub_1DE83ABB0(0, *((void *)v41 + 2) + 1, 1, v41);
    }
    unint64_t v43 = *((void *)v41 + 2);
    unint64_t v42 = *((void *)v41 + 3);
    if (v43 >= v42 >> 1) {
      uint64_t v41 = sub_1DE83ABB0((char *)(v42 > 1), v43 + 1, 1, v41);
    }
    *((void *)v41 + 2) = v43 + 1;
    uint64_t v44 = &v41[40 * v43];
    *((void *)v44 + 4) = v24;
    *((void *)v44 + 5) = v23;
    v44[48] = v63 & 1;
    *((void *)v44 + 7) = v25;
    *((void *)v44 + 8) = v27;
    *a1 = v41;
    if ((v57[888] & 1) == 0) {
      return sub_1DE8BDF4C(v24, v23);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void *)(v26 + 16);
    if (v46)
    {
      uint64_t v47 = 32;
      do
      {
        long long v48 = *(_OWORD *)(v26 + v47);
        long long v49 = *(_OWORD *)(v26 + v47 + 32);
        *(_OWORD *)&__dst[16] = *(_OWORD *)(v26 + v47 + 16);
        *(_OWORD *)&__dst[32] = v49;
        *(_OWORD *)__dst = v48;
        long long v50 = *(_OWORD *)(v26 + v47 + 48);
        long long v51 = *(_OWORD *)(v26 + v47 + 64);
        long long v52 = *(_OWORD *)(v26 + v47 + 80);
        *(_OWORD *)&__dst[89] = *(_OWORD *)(v26 + v47 + 89);
        *(_OWORD *)&__dst[64] = v51;
        *(_OWORD *)&__dst[80] = v52;
        *(_OWORD *)&__dst[48] = v50;
        sub_1DE82F388((uint64_t)__dst);
        sub_1DE8AC9F0((uint64_t)&v64, (uint64_t)__dst);
        uint64_t v53 = v70;
        unint64_t v54 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DE82F470(v53, v54);
        v47 += 112;
        --v46;
      }
      while (v46);
    }
  }
  else
  {
    uint64_t v29 = *a12;
    uint64_t v30 = 256;
    if (!v18) {
      uint64_t v30 = 0;
    }
    uint64_t v31 = v30 | v55;
    uint64_t v32 = 0x10000;
    if (!v22) {
      uint64_t v32 = 0;
    }
    uint64_t v33 = 0x1000000;
    if (!v20) {
      uint64_t v33 = 0;
    }
    uint64_t v34 = v31 | v32 | v33;
    uint64_t v35 = 0x100000000;
    if (!v21) {
      uint64_t v35 = 0;
    }
    uint64_t v36 = v34 | v35;
    if (*(void *)(*a12 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_1DE821EC8(v15, v14, v36, v16);
      if (v38)
      {
        uint64_t v39 = *(void *)(*(void *)(v29 + 56) + 8 * v37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1DE89FA64(v39);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_1DE8AD1B0(v15, v14, v36, v16);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8A8D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v99 = v12;
  long long v100 = v11;
  uint64_t v101 = v14;
  uint64_t v102 = v13;
  uint64_t v98 = v15;
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)v10;
  uint64_t v19 = *(void *)(v10 + 8);
  double v20 = *(double *)(v10 + 16);
  uint64_t v105 = *(unsigned __int8 *)(v10 + 24);
  int v107 = *(unsigned __int8 *)(v10 + 25);
  int v103 = *(unsigned __int8 *)(v10 + 26);
  int v104 = *(unsigned __int8 *)(v10 + 27);
  uint64_t v21 = *(unsigned __int8 *)(v10 + 28);
  memcpy(__dst, v22, sizeof(__dst));
  uint64_t v23 = __dst[110];
  uint64_t v106 = v18;
  if (*(void *)(__dst[110] + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1DE821D84(v18, v19);
    if (v25)
    {
      uint64_t v26 = (const void *)(*(void *)(v23 + 56) + 432 * v24);
      memcpy(v115, v26, 0x1AAuLL);
      memmove(v116, v26, 0x1AAuLL);
      nullsub_153(v116);
      sub_1DE8BE3B4((uint64_t)v115);
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)&v115[18];
      uint64_t v28 = v21;
      uint64_t v29 = *((void *)&v115[18] + 1);
      long long v96 = v115[20];
      long long v97 = v115[19];
      long long v30 = v115[21];
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v27;
      *(void *)(v31 + 24) = v29;
      *(_OWORD *)(v31 + 32) = v97;
      *(_OWORD *)(v31 + 48) = v96;
      *(_OWORD *)(v31 + 64) = v30;
      uint64_t v21 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE8BDFE4((uint64_t)v116, (uint64_t)v121);
      uint64_t v32 = sub_1DE8BEC88;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  sub_1DE8BDF9C(v115);
  if (v21)
  {
    if (v107)
    {
      memcpy(v116, &__dst[178], 0x1AAuLL);
      long long v117 = v116[18];
      long long v118 = v116[19];
      long long v119 = v116[20];
      long long v120 = v116[21];
      uint64_t v33 = (_OWORD *)swift_allocObject();
      long long v34 = v116[19];
      v33[1] = v116[18];
      v33[2] = v34;
      long long v35 = v116[21];
      v33[3] = v116[20];
      v33[4] = v35;
      sub_1DE8BE378((uint64_t)&v117);
      sub_1DE8BDFE4((uint64_t)v115, (uint64_t)v121);
      uint64_t v32 = sub_1DE8BEC84;
    }
    else
    {
      memcpy(v116, __dst, 0x1AAuLL);
      long long v117 = v116[18];
      long long v118 = v116[19];
      long long v119 = v116[20];
      long long v120 = v116[21];
      uint64_t v39 = (_OWORD *)swift_allocObject();
      long long v40 = v116[19];
      v39[1] = v116[18];
      v39[2] = v40;
      long long v41 = v116[21];
      v39[3] = v116[20];
      v39[4] = v41;
      sub_1DE8BE378((uint64_t)&v117);
      sub_1DE8BDFE4((uint64_t)v115, (uint64_t)v121);
      uint64_t v32 = sub_1DE8BEC80;
    }
  }
  else
  {
    memcpy(v116, &__dst[54], 0x1AAuLL);
    long long v117 = v116[18];
    long long v118 = v116[19];
    long long v119 = v116[20];
    long long v120 = v116[21];
    uint64_t v36 = (_OWORD *)swift_allocObject();
    long long v37 = v116[19];
    v36[1] = v116[18];
    v36[2] = v37;
    long long v38 = v116[21];
    v36[3] = v116[20];
    v36[4] = v38;
    sub_1DE8BE378((uint64_t)&v117);
    sub_1DE8BDFE4((uint64_t)v115, (uint64_t)v121);
    uint64_t v32 = sub_1DE8BE33C;
  }
LABEL_10:
  unint64_t v42 = v32;
  sub_1DE8BDFE4((uint64_t)v121, (uint64_t)v112);
  ((void (*)(_OWORD *__return_ptr, uint64_t))v42)(v115, a10);
  swift_release();
  long long v43 = v115[0];
  long long v44 = v115[1];
  long long v45 = v115[2];
  long long v46 = v115[3];
  sub_1DE8BDFE4((uint64_t)v121, (uint64_t)__src);
  if (sub_1DE8BE04C((uint64_t)__src) == 1)
  {
    if (v21)
    {
      if (v107)
      {
        memcpy(v115, &__dst[178], 0x1AAuLL);
        uint64_t v47 = swift_allocObject();
        memcpy((void *)(v47 + 16), &__dst[178], 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)v115);
        long long v48 = sub_1DE8BE06C;
        long long v49 = sub_1DE8BE290;
      }
      else
      {
        memcpy(v115, __dst, 0x1AAuLL);
        uint64_t v47 = swift_allocObject();
        memcpy((void *)(v47 + 16), __dst, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)v115);
        long long v48 = sub_1DE8BE06C;
        long long v49 = sub_1DE8BE068;
      }
    }
    else
    {
      memcpy(v115, &__dst[54], 0x1AAuLL);
      uint64_t v47 = swift_allocObject();
      memcpy((void *)(v47 + 16), &__dst[54], 0x1AAuLL);
      sub_1DE8BE3B4((uint64_t)v115);
      long long v48 = sub_1DE8BE06C;
      long long v49 = sub_1DE8BE298;
    }
    long long v50 = v49;
  }
  else
  {
    uint64_t v47 = swift_allocObject();
    memcpy((void *)(v47 + 16), __src, 0x1AAuLL);
    long long v48 = sub_1DE8BECA0;
    long long v50 = sub_1DE8BE2A0;
  }
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v50;
  *(void *)(v51 + 24) = v47;
  sub_1DE8BE104((uint64_t)v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE098);
  uint64_t v52 = v48(a10);
  swift_release();
  sub_1DE8BDFE4((uint64_t)v121, (uint64_t)v110);
  if (sub_1DE8BE04C((uint64_t)v110) == 1)
  {
    if (v21)
    {
      uint64_t v53 = v21;
      if (v107)
      {
        memcpy(v114, &__dst[178], 0x1AAuLL);
        uint64_t v54 = swift_allocObject();
        memcpy((void *)(v54 + 16), &__dst[178], 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)v114);
        uint64_t v55 = sub_1DE8BEC98;
        int64_t v56 = sub_1DE8BE220;
      }
      else
      {
        memcpy(v114, __dst, 0x1AAuLL);
        uint64_t v54 = swift_allocObject();
        memcpy((void *)(v54 + 16), __dst, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)v114);
        uint64_t v55 = sub_1DE8BEC98;
        int64_t v56 = sub_1DE8BE100;
      }
    }
    else
    {
      uint64_t v53 = v21;
      memcpy(v114, &__dst[54], 0x1AAuLL);
      uint64_t v54 = swift_allocObject();
      memcpy((void *)(v54 + 16), &__dst[54], 0x1AAuLL);
      sub_1DE8BE3B4((uint64_t)v114);
      uint64_t v55 = sub_1DE8BEC98;
      int64_t v56 = sub_1DE8BE228;
    }
    uint64_t v57 = v56;
  }
  else
  {
    uint64_t v53 = v21;
    uint64_t v54 = swift_allocObject();
    memcpy((void *)(v54 + 16), v110, 0x1AAuLL);
    uint64_t v55 = sub_1DE8BEC9C;
    uint64_t v57 = sub_1DE8BE230;
  }
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v57;
  *(void *)(v58 + 24) = v54;
  sub_1DE8BE104((uint64_t)v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE098);
  uint64_t v59 = v55(a10);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1DE84E628((uint64_t)__dst);
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = sub_1DE82ACB0(v60);
  swift_bridgeObjectRelease();
  *(void *)&v108[0] = v61;
  sub_1DE8B41D4((char **)v108, v106, v19, (uint64_t)__dst);
  sub_1DE850D3C((uint64_t)__dst);
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void *)&v108[0];
  uint64_t v63 = 256;
  if (!v107) {
    uint64_t v63 = 0;
  }
  uint64_t v64 = v63 | v105;
  uint64_t v65 = 0x10000;
  if (!v103) {
    uint64_t v65 = 0;
  }
  uint64_t v66 = 0x1000000;
  if (!v104) {
    uint64_t v66 = 0;
  }
  uint64_t v67 = v64 | v65 | v66;
  uint64_t v68 = 0x100000000;
  if (!v53) {
    uint64_t v68 = 0;
  }
  uint64_t v69 = (char *)sub_1DE8AA4C4((uint64_t)v112, v106, v19, v67 | v68, (uint64_t)__dst, a10, v98);
  sub_1DE8BE104((uint64_t)v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE1B8);
  v108[0] = v43;
  v108[1] = v44;
  v108[2] = v45;
  v108[3] = v46;
  sub_1DE8A2670(v62, v52, 0, v59, v69, (uint64_t)v108, v102, __dst[112], v109, v101, v100, v99, a9 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v71 = v109[0];
  if (!v109[0])
  {
    *(_OWORD *)(v17 + 16) = 0u;
    *(_OWORD *)(v17 + 32) = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    return result;
  }
  uint64_t v72 = v109[1];
  uint64_t v73 = *(void *)(v109[0] + 16);
  double v74 = 0.0;
  double v75 = 0.0;
  if (v52 < v59)
  {
    if (__OFSUB__(v73, v52))
    {
      __break(1u);
    }
    else if (!__OFSUB__(v59, v52))
    {
      double v75 = (double)(v73 - v52) / (double)(v59 - v52);
      goto LABEL_39;
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
LABEL_39:
  if (v107) {
    double v76 = 1.0;
  }
  else {
    double v76 = 0.0;
  }
  if (v103) {
    double v77 = 1.0;
  }
  else {
    double v77 = 0.0;
  }
  if (v104) {
    double v78 = 1.0;
  }
  else {
    double v78 = 0.0;
  }
  if (v105) {
    double v79 = 1.0;
  }
  else {
    double v79 = 0.0;
  }
  double v80 = pow(*(long double *)&__dst[232], v76);
  long double v81 = v80 * pow(*(long double *)&__dst[177], v77);
  long double v82 = v81 * pow(*(long double *)&__dst[234], v78);
  long double v83 = v82 * pow(*(long double *)&__dst[236], v79);
  double v84 = v83 * pow(*(long double *)&__dst[233], v75);
  if (!v73) {
    goto LABEL_61;
  }
  if (v73 == 1)
  {
    uint64_t v85 = 0;
    double v86 = 0.0;
  }
  else
  {
    uint64_t v85 = v73 & 0x7FFFFFFFFFFFFFFELL;
    char v87 = (double *)(v71 + 200);
    double v86 = 0.0;
    uint64_t v88 = v73 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v89 = *(v87 - 14);
      double v90 = *v87;
      v87 += 28;
      double v86 = v86 + v89 + v90;
      v88 -= 2;
    }
    while (v88);
    if (v73 == v85) {
      goto LABEL_60;
    }
  }
  uint64_t v91 = v73 - v85;
  unint64_t v92 = (double *)(v71 + 112 * v85 + 88);
  do
  {
    double v93 = *v92;
    v92 += 14;
    double v86 = v86 + v93;
    --v91;
  }
  while (v91);
LABEL_60:
  double v74 = v86 / (double)v73;
LABEL_61:
  uint64_t v94 = 108;
  if (v53) {
    uint64_t v94 = 235;
  }
  double v95 = v84 * (v20 * *(double *)&__dst[v94] + v74 * (1.0 - *(double *)&__dst[v94]));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DE8BCBD8(v71);
  *(void *)uint64_t v17 = v106;
  *(void *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = v53;
  *(void *)(v17 + 24) = v71;
  *(double *)(v17 + 32) = v95;
  *(void *)(v17 + 40) = v72;
  return result;
}

uint64_t sub_1DE8A98B0(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  double v3 = floor(*(double *)(a2 + 936) * (double)(*(void *)(result + 16) + 1));
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    uint64_t v4 = (uint64_t)v3;
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = *(void *)(sub_1DE8A9958(v5) + 16);
    swift_bridgeObjectRelease();
    return v6 < v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DE8A9958(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v2 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    uint64_t v11 = *(void *)(v1 + 56);
    if (*(unsigned char *)(v11 + 40 * i + 16))
    {
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v15 = (uint64_t *)(v11 + 40 * i);
      uint64_t v21 = *v15;
      uint64_t v22 = v15[1];
      uint64_t v16 = v15[3];
      uint64_t v17 = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_1DE84BF98(0, *(void *)(v8 + 16) + 1, 1);
      }
      unint64_t v19 = *(void *)(v8 + 16);
      unint64_t v18 = *(void *)(v8 + 24);
      if (v19 >= v18 >> 1) {
        uint64_t result = (uint64_t)sub_1DE84BF98((char *)(v18 > 1), v19 + 1, 1);
      }
      *(void *)(v8 + 16) = v19 + 1;
      uint64_t v20 = v8 + 40 * v19;
      *(void *)(v20 + 32) = v21;
      *(void *)(v20 + 40) = v22;
      *(unsigned char *)(v20 + 48) = 0;
      *(void *)(v20 + 56) = v16;
      *(void *)(v20 + 64) = v17;
      if (v6) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v7) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v2);
      if (!v13)
      {
        int64_t v2 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v2);
        if (!v13)
        {
          int64_t v2 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v2);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_29:
    swift_release();
    return v8;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v2);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1DE8A9B84(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v2 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    uint64_t v11 = *(void *)(v1 + 56);
    if (*(unsigned char *)(v11 + 40 * i + 16) == 1)
    {
      uint64_t v15 = (uint64_t *)(v11 + 40 * i);
      uint64_t v21 = *v15;
      uint64_t v22 = v15[1];
      uint64_t v16 = v15[3];
      uint64_t v17 = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_1DE84BF98(0, *(void *)(v8 + 16) + 1, 1);
      }
      unint64_t v19 = *(void *)(v8 + 16);
      unint64_t v18 = *(void *)(v8 + 24);
      if (v19 >= v18 >> 1) {
        uint64_t result = (uint64_t)sub_1DE84BF98((char *)(v18 > 1), v19 + 1, 1);
      }
      *(void *)(v8 + 16) = v19 + 1;
      uint64_t v20 = v8 + 40 * v19;
      *(void *)(v20 + 32) = v21;
      *(void *)(v20 + 40) = v22;
      *(unsigned char *)(v20 + 48) = 1;
      *(void *)(v20 + 56) = v16;
      *(void *)(v20 + 64) = v17;
      if (v6) {
        goto LABEL_4;
      }
    }
    else if (v6)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v7) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      int64_t v2 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v2);
      if (!v13)
      {
        int64_t v2 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v2);
        if (!v13)
        {
          int64_t v2 = v12 + 3;
          if (v12 + 3 >= v7) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v2);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_29:
    swift_release();
    return v8;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v2);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1DE8A9DB8(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  double v3 = floor(*(double *)(a2 + 944) * (double)(*(void *)(result + 16) + 1));
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    uint64_t v4 = (uint64_t)v3;
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = *(void *)(sub_1DE8A9B84(v5) + 16);
    swift_bridgeObjectRelease();
    return v6 < v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DE8A9E60(uint64_t a1)
{
  sub_1DE8E1730();
  sub_1DE8E1490();
  unint64_t v2 = *(void *)(a1 + 16);
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_2:
  if (v4 <= v2) {
    unint64_t v6 = v2;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v7 = 40 * v4;
  unint64_t v8 = v6 + 1;
  while (v2 != v4)
  {
    if (v8 == ++v4)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    uint64_t v9 = v7 + 40;
    char v10 = *(unsigned char *)(a1 + v7 + 48);
    v7 += 40;
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = *(void *)(a1 + v9 - 8);
      uint64_t v12 = *(void *)(a1 + v9);
      uint64_t v13 = *(void *)(a1 + v9 + 16);
      uint64_t v14 = *(void *)(a1 + v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_1DE84BF98(0, *(void *)(v5 + 16) + 1, 1);
      }
      unint64_t v16 = *(void *)(v5 + 16);
      unint64_t v15 = *(void *)(v5 + 24);
      if (v16 >= v15 >> 1) {
        uint64_t result = (uint64_t)sub_1DE84BF98((char *)(v15 > 1), v16 + 1, 1);
      }
      *(void *)(v5 + 16) = v16 + 1;
      uint64_t v17 = v5 + 40 * v16;
      *(void *)(v17 + 32) = v11;
      *(void *)(v17 + 40) = v12;
      *(unsigned char *)(v17 + 48) = 0;
      *(void *)(v17 + 56) = v13;
      *(void *)(v17 + 64) = v14;
      goto LABEL_2;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_15:
  if (v18 <= v2) {
    unint64_t v20 = v2;
  }
  else {
    unint64_t v20 = v18;
  }
  uint64_t v21 = 40 * v18;
  unint64_t v22 = v20 + 1;
  while (v2 != v18)
  {
    if (v22 == ++v18) {
      goto LABEL_29;
    }
    uint64_t v23 = v21 + 40;
    int v24 = *(unsigned __int8 *)(a1 + v21 + 48);
    v21 += 40;
    if (v24 == 1)
    {
      uint64_t v25 = *(void *)(a1 + v23 - 8);
      uint64_t v26 = *(void *)(a1 + v23);
      uint64_t v27 = *(void *)(a1 + v23 + 16);
      uint64_t v28 = *(void *)(a1 + v23 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_1DE84BF98(0, *(void *)(v19 + 16) + 1, 1);
      }
      unint64_t v30 = *(void *)(v19 + 16);
      unint64_t v29 = *(void *)(v19 + 24);
      if (v30 >= v29 >> 1) {
        uint64_t result = (uint64_t)sub_1DE84BF98((char *)(v29 > 1), v30 + 1, 1);
      }
      *(void *)(v19 + 16) = v30 + 1;
      uint64_t v31 = v19 + 40 * v30;
      *(void *)(v31 + 32) = v25;
      *(void *)(v31 + 40) = v26;
      *(unsigned char *)(v31 + 48) = 1;
      *(void *)(v31 + 56) = v27;
      *(void *)(v31 + 64) = v28;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  uint64_t v32 = swift_bridgeObjectRetain();
  sub_1DE8A9958(v32);
  swift_bridgeObjectRelease();
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_1DE8A9B84(v33);
  swift_bridgeObjectRelease();
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  sub_1DE8E1620();
  sub_1DE8E1490();
  sub_1DE8E1620();
  sub_1DE8E1490();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  return 0;
}

void (*sub_1DE8AA3D0(double ****a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5))(void *a1)
{
  char v10 = (double ***)malloc(0x30uLL);
  *a1 = v10;
  v10[4] = (double **)a3;
  swift_bridgeObjectRetain();
  v10[5] = (double **)sub_1DE8AFEA8(v10, a2, a3, a4 & 0x101010101, a5);
  return sub_1DE8AA470;
}

void sub_1DE8AA470(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1DE8AA4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F30);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DE8EE090;
  uint64_t v15 = sub_1DE8AA888(a1, a2, a3, a4 & 0x101010101, (char *)a5, a6);
  *(void *)(v14 + 40) = 0;
  *(void *)(v14 + 48) = 0;
  *(void *)(v14 + 32) = v15;
  *(unsigned char *)(v14 + 56) = 0;
  uint64_t v16 = sub_1DE8AAAE8(a1, a2, a3, a4 & 0x101010101, (char *)a5, a6);
  *(void *)(v14 + 72) = 0;
  *(void *)(v14 + 80) = 0;
  *(void *)(v14 + 64) = v16;
  *(unsigned char *)(v14 + 88) = 1;
  uint64_t v17 = sub_1DE8AAD48(a1, a2, a3, a4 & 0x101010101, (char *)a5, a6);
  *(void *)(v14 + 104) = 0;
  *(void *)(v14 + 112) = 0;
  *(void *)(v14 + 96) = v17;
  *(unsigned char *)(v14 + 120) = 2;
  *(void *)(v14 + 136) = 0;
  *(void *)(v14 + 144) = 0;
  *(void *)(v14 + 128) = a7;
  *(unsigned char *)(v14 + 152) = 5;
  sub_1DE8BDFE4(a1, (uint64_t)v31);
  if (sub_1DE8BE04C((uint64_t)v31) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0) {
        unint64_t v18 = (unsigned char *)(a5 + 1424);
      }
      else {
        unint64_t v18 = (unsigned char *)a5;
      }
    }
    else
    {
      unint64_t v18 = (unsigned char *)(a5 + 432);
    }
  }
  else
  {
    unint64_t v18 = v31;
  }
  memcpy(__dst, v18, 0x1AAuLL);
  long long v34 = __dst[22];
  uint64_t v35 = *(void *)&__dst[23];
  long long v20 = __dst[22];
  uint64_t v19 = *(void *)&__dst[23];
  sub_1DE89F46C((uint64_t)&v34);
  *(_OWORD *)(v14 + 160) = v20;
  *(void *)(v14 + 176) = v19;
  *(unsigned char *)(v14 + 184) = 4;
  uint64_t v21 = *(void *)(a5 + 1408);
  *(void *)(v14 + 200) = 0;
  *(void *)(v14 + 208) = 0;
  *(void *)(v14 + 192) = v21;
  *(unsigned char *)(v14 + 216) = 7;
  if ((a4 & 0x100000000) != 0)
  {
    sub_1DE8BDFE4(a1, (uint64_t)v30);
    if (sub_1DE8BE04C((uint64_t)v30) == 1)
    {
      if ((a4 & 0x100) != 0)
      {
        uint64_t v26 = (const void *)(a5 + 1424);
        memcpy(v32, v26, 0x1AAuLL);
        uint64_t v22 = swift_allocObject();
        memcpy((void *)(v22 + 16), v26, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)v32);
        uint64_t v23 = sub_1DE8BECA4;
        int v24 = sub_1DE8BE450;
      }
      else
      {
        memcpy(v32, (const void *)a5, 0x1AAuLL);
        uint64_t v22 = swift_allocObject();
        memcpy((void *)(v22 + 16), (const void *)a5, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)v32);
        uint64_t v23 = sub_1DE8BECA4;
        int v24 = sub_1DE8BE448;
      }
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v22 = swift_allocObject();
      memcpy((void *)(v22 + 16), v30, 0x1AAuLL);
      uint64_t v23 = sub_1DE8BECA8;
      uint64_t v25 = sub_1DE8BE458;
    }
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v25;
    *(void *)(v27 + 24) = v22;
    swift_bridgeObjectRetain();
    sub_1DE8BE104(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE098);
    uint64_t v28 = v23(a6);
    swift_release();
    uint64_t v14 = (uint64_t)sub_1DE83AA80((char *)1, 7, 1, (char *)v14);
    *(void *)(v14 + 16) = 7;
    *(void *)(v14 + 232) = 0;
    *(void *)(v14 + 240) = 0;
    *(void *)(v14 + 224) = v28;
    *(unsigned char *)(v14 + 248) = 3;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1DE8AA888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  sub_1DE8BDFE4(a1, (uint64_t)v19);
  if (sub_1DE8BE04C((uint64_t)v19) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
      {
        uint64_t v15 = a5 + 1424;
        memcpy(__dst, v15, 0x1AAuLL);
        uint64_t v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), v15, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)__dst);
        uint64_t v12 = sub_1DE8BECBC;
        uint64_t v13 = sub_1DE8BE5B0;
      }
      else
      {
        memcpy(__dst, a5, 0x1AAuLL);
        uint64_t v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), a5, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)__dst);
        uint64_t v12 = sub_1DE8BECBC;
        uint64_t v13 = sub_1DE8BE5A8;
      }
    }
    else
    {
      char v10 = a5 + 432;
      memcpy(__dst, v10, 0x1AAuLL);
      uint64_t v11 = swift_allocObject();
      memcpy((void *)(v11 + 16), v10, 0x1AAuLL);
      sub_1DE8BE3B4((uint64_t)__dst);
      uint64_t v12 = sub_1DE8BECBC;
      uint64_t v13 = sub_1DE8BE5B8;
    }
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    memcpy((void *)(v11 + 16), v19, 0x1AAuLL);
    uint64_t v12 = sub_1DE8BECC0;
    uint64_t v14 = sub_1DE8BE608;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v11;
  sub_1DE8BE104(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE098);
  uint64_t v17 = v12(a6);
  swift_release();
  return v17;
}

uint64_t sub_1DE8AAAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  sub_1DE8BDFE4(a1, (uint64_t)v19);
  if (sub_1DE8BE04C((uint64_t)v19) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
      {
        uint64_t v15 = a5 + 1424;
        memcpy(__dst, v15, 0x1AAuLL);
        uint64_t v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), v15, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)__dst);
        uint64_t v12 = sub_1DE8BECB4;
        uint64_t v13 = sub_1DE8BE538;
      }
      else
      {
        memcpy(__dst, a5, 0x1AAuLL);
        uint64_t v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), a5, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)__dst);
        uint64_t v12 = sub_1DE8BECB4;
        uint64_t v13 = sub_1DE8BE530;
      }
    }
    else
    {
      char v10 = a5 + 432;
      memcpy(__dst, v10, 0x1AAuLL);
      uint64_t v11 = swift_allocObject();
      memcpy((void *)(v11 + 16), v10, 0x1AAuLL);
      sub_1DE8BE3B4((uint64_t)__dst);
      uint64_t v12 = sub_1DE8BECB4;
      uint64_t v13 = sub_1DE8BE540;
    }
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    memcpy((void *)(v11 + 16), v19, 0x1AAuLL);
    uint64_t v12 = sub_1DE8BECB8;
    uint64_t v14 = sub_1DE8BE548;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v11;
  sub_1DE8BE104(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE098);
  uint64_t v17 = v12(a6);
  swift_release();
  return v17;
}

uint64_t sub_1DE8AAD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  sub_1DE8BDFE4(a1, (uint64_t)v19);
  if (sub_1DE8BE04C((uint64_t)v19) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
      {
        uint64_t v15 = a5 + 1424;
        memcpy(__dst, v15, 0x1AAuLL);
        uint64_t v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), v15, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)__dst);
        uint64_t v12 = sub_1DE8BECAC;
        uint64_t v13 = sub_1DE8BE4C0;
      }
      else
      {
        memcpy(__dst, a5, 0x1AAuLL);
        uint64_t v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), a5, 0x1AAuLL);
        sub_1DE8BE3B4((uint64_t)__dst);
        uint64_t v12 = sub_1DE8BECAC;
        uint64_t v13 = sub_1DE8BE4B8;
      }
    }
    else
    {
      char v10 = a5 + 432;
      memcpy(__dst, v10, 0x1AAuLL);
      uint64_t v11 = swift_allocObject();
      memcpy((void *)(v11 + 16), v10, 0x1AAuLL);
      sub_1DE8BE3B4((uint64_t)__dst);
      uint64_t v12 = sub_1DE8BECAC;
      uint64_t v13 = sub_1DE8BE4C8;
    }
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    memcpy((void *)(v11 + 16), v19, 0x1AAuLL);
    uint64_t v12 = sub_1DE8BECB0;
    uint64_t v14 = sub_1DE8BE4D0;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v11;
  sub_1DE8BE104(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1DE8BE098);
  uint64_t v17 = v12(a6);
  swift_release();
  return v17;
}

uint64_t sub_1DE8AAFA8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(*(void *)a1 + 16);
  if (v13)
  {
    uint64_t result = *(void *)(v12 + 32);
    BOOL v15 = result == v10 && *(void *)(v12 + 40) == v11;
    if (v15) {
      return result;
    }
    uint64_t result = sub_1DE8E1AC0();
    if (result) {
      return result;
    }
    if (v13 != 1)
    {
      uint64_t result = *(void *)(v12 + 48);
      if (result == v10 && *(void *)(v12 + 56) == v11) {
        return result;
      }
      uint64_t result = sub_1DE8E1AC0();
      if (result) {
        return result;
      }
      if (v13 != 2)
      {
        uint64_t v68 = (void *)(v12 + 72);
        uint64_t v69 = 2;
        uint64_t v76 = v12;
        while (1)
        {
          uint64_t v70 = a5;
          uint64_t v71 = v69 + 1;
          if (__OFADD__(v69, 1)) {
            break;
          }
          uint64_t result = *(v68 - 1);
          if (result == v10 && *v68 == v11) {
            return result;
          }
          uint64_t result = sub_1DE8E1AC0();
          if (result) {
            return result;
          }
          v68 += 2;
          ++v69;
          BOOL v15 = v71 == v13;
          a5 = v70;
          uint64_t v12 = v76;
          if (v15) {
            goto LABEL_8;
          }
        }
        __break(1u);
        goto LABEL_69;
      }
    }
  }
LABEL_8:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_67:
  }
    uint64_t v12 = (uint64_t)sub_1DE83A608(0, v13 + 1, 1, (char *)v12);
  unint64_t v17 = *(void *)(v12 + 16);
  unint64_t v16 = *(void *)(v12 + 24);
  if (v17 >= v16 >> 1) {
    uint64_t v12 = (uint64_t)sub_1DE83A608((char *)(v16 > 1), v17 + 1, 1, (char *)v12);
  }
  *(void *)(v12 + 16) = v17 + 1;
  uint64_t v18 = v12 + 16 * v17;
  uint64_t v75 = v10;
  *(void *)(v18 + 32) = v10;
  *(void *)(v18 + 40) = v11;
  *(void *)a1 = v12;
  uint64_t v19 = MEMORY[0x1E4FBC868];
  double v94 = MEMORY[0x1E4FBC868];
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v77 = a6;
  if (v20)
  {
    uint64_t v73 = a5;
    uint64_t v74 = v11;
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    while (1)
    {
      uint64_t v81 = v20;
      uint64_t v23 = *(void *)(v21 + v22 + 64);
      uint64_t v24 = *(void *)(v21 + v22 + 72);
      uint64_t v25 = *(void *)(v21 + v22 + 80);
      uint64_t v10 = *(void *)(v21 + v22 + 104);
      uint64_t v11 = *(void *)(v21 + v22 + 112);
      char v26 = *(unsigned char *)(v21 + v22 + 136);
      uint64_t v27 = *(void *)(v21 + v22 + 128);
      char v28 = *(unsigned char *)(v21 + v22 + 120);
      char v29 = *(unsigned char *)(v21 + v22 + 99);
      char v30 = *(unsigned char *)(v21 + v22 + 98);
      char v31 = *(unsigned char *)(v21 + v22 + 97);
      char v32 = *(unsigned char *)(v21 + v22 + 96);
      uint64_t v33 = *(void *)(v21 + v22 + 88);
      uint64_t v34 = *(void *)(v21 + v22 + 48);
      uint64_t v35 = *(void *)(v21 + v22 + 56);
      uint64_t v36 = *(void *)(v21 + v22 + 40);
      v84[0] = *(void *)(v21 + v22 + 32);
      v84[1] = v36;
      v84[2] = v34;
      v84[3] = v35;
      v84[4] = v23;
      v84[5] = v24;
      v84[6] = v25;
      v84[7] = v33;
      char v85 = v32;
      char v86 = v31;
      char v87 = v30;
      char v88 = v29;
      uint64_t v89 = v10;
      uint64_t v90 = v11;
      char v91 = v28;
      uint64_t v92 = v27;
      char v93 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v10, v11);
      sub_1DE8AB828(&v94, (uint64_t)v84, a4);
      if (v7) {
        goto LABEL_70;
      }
      uint64_t v7 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v10, v11);
      v22 += 112;
      --v20;
      uint64_t v21 = a3;
      if (v81 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = *(void *)&v94;
        a6 = v77;
        uint64_t v19 = MEMORY[0x1E4FBC868];
        a5 = v73;
        uint64_t v11 = v74;
        goto LABEL_17;
      }
    }
  }
  uint64_t v37 = MEMORY[0x1E4FBC868];
LABEL_17:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE84E628(a5);
  uint64_t v12 = sub_1DE8B13BC(v19, a4, v37, a4, a5);
  sub_1DE850D3C(a5);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DE8B0728(v38, a4);
  swift_bridgeObjectRelease();
  v84[0] = v19;
  double v39 = *(double *)(a5 + 1384);
  double v94 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 32) = v75;
  *(void *)(inited + 40) = v11;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1DE82DA80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (*(void *)(v41 + 16))
  {
    uint64_t v42 = MEMORY[0x1E4FBC870];
    do
    {
      uint64_t v83 = v42;
      swift_bridgeObjectRetain();
      sub_1DE8B8894(v41, v12, a1, (uint64_t)&v94, (uint64_t)v84, (uint64_t)&v83, (void (*)(uint64_t, uint64_t, double))sub_1DE8BEC2C);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v94 = v94 * v94;
      uint64_t v41 = v83;
    }
    while (*(void *)(v83 + 16));
    swift_bridgeObjectRelease();
    uint64_t v43 = v84[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x1E4FBC868];
  }
  uint64_t v13 = sub_1DE8B02B8(v43, v10);
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_1DE8B0F48(v13);
  if (v46)
  {
LABEL_69:
    __break(1u);
LABEL_70:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v10, v11);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_71:
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  a5 = MEMORY[0x1E4FBC870];
  while (1)
  {
    if (*(_DWORD *)(v13 + 36) != v45)
    {
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    uint64_t v48 = 1 << *(unsigned char *)(v13 + 32);
    if (v44 == v48)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v44 < 0 || v44 >= v48) {
      goto LABEL_65;
    }
    if (((*(void *)(v13 + 8 * ((unint64_t)v44 >> 6) + 56) >> v44) & 1) == 0) {
      goto LABEL_66;
    }
    long long v49 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v44);
    uint64_t v50 = *v49;
    uint64_t v51 = v49[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_1DE82A8F0(v52);
    swift_bridgeObjectRelease();
    v84[0] = (uint64_t)v53;
    sub_1DE8BC624(v84, a6, (uint64_t (*)(uint64_t))sub_1DE8CB9E4, (void (*)(void *, uint64_t))sub_1DE8BBBB8);
    if (v7) {
      goto LABEL_71;
    }
    uint64_t v7 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v84[0] + 16)) {
      break;
    }
    uint64_t v54 = *(void *)(v84[0] + 32);
    uint64_t v10 = *(void *)(v84[0] + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v55 = *(char **)a1;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v55 = sub_1DE83A608(0, *((void *)v55 + 2) + 1, 1, v55);
    }
    unint64_t v57 = *((void *)v55 + 2);
    unint64_t v56 = *((void *)v55 + 3);
    if (v57 >= v56 >> 1) {
      uint64_t v55 = sub_1DE83A608((char *)(v56 > 1), v57 + 1, 1, v55);
    }
    *((void *)v55 + 2) = v57 + 1;
    uint64_t v58 = &v55[16 * v57];
    *((void *)v58 + 4) = v54;
    *((void *)v58 + 5) = v10;
    *(void *)a1 = v55;
    swift_bridgeObjectRetain();
    uint64_t v59 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DE8B0728(v59, a4);
    swift_bridgeObjectRelease();
    uint64_t v60 = MEMORY[0x1E4FBC868];
    double v94 = MEMORY[0x1E4FBC868];
    uint64_t v83 = *(void *)&v39;
    swift_bridgeObjectRetain();
    uint64_t v82 = sub_1DE8E1640();
    swift_bridgeObjectRetain();
    sub_1DE8AC840(v84, v54, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = v82;
    if (*(void *)(v82 + 16))
    {
      double v62 = v39;
      a6 = v77;
      do
      {
        v84[0] = a5;
        swift_bridgeObjectRetain();
        sub_1DE8B8894(v61, v12, a1, (uint64_t)&v83, (uint64_t)&v94, (uint64_t)v84, (void (*)(uint64_t, uint64_t, double))sub_1DE8BEC2C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v62 = v62 * v62;
        uint64_t v83 = *(void *)&v62;
        uint64_t v61 = v84[0];
      }
      while (*(void *)(v84[0] + 16));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v60 = *(void *)&v94;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a6 = v77;
    }
    uint64_t v13 = sub_1DE8B02B8(v60, v11);
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_1DE8B0F48(v13);
    if (v47) {
      goto LABEL_69;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v63 = *(void *)a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DE83A608(0, *(void *)(v63 + 16) + 1, 1, (char *)v63);
    uint64_t v63 = result;
  }
  unint64_t v65 = *(void *)(v63 + 16);
  unint64_t v64 = *(void *)(v63 + 24);
  if (v65 >= v64 >> 1)
  {
    uint64_t result = (uint64_t)sub_1DE83A608((char *)(v64 > 1), v65 + 1, 1, (char *)v63);
    uint64_t v63 = result;
  }
  *(void *)(v63 + 16) = v65 + 1;
  unint64_t v66 = v63 + 16 * v65;
  *(void *)(v66 + 32) = v50;
  *(void *)(v66 + 40) = v51;
  *(void *)a1 = v63;
  return result;
}

uint64_t sub_1DE8AB828(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DE8CADC8(v5, a3);
  uint64_t v7 = sub_1DE82A8F0(v6);
  swift_release();
  if (!v7[2])
  {
    swift_release();
    uint64_t v59 = 0;
    uint64_t v9 = 0;
    goto LABEL_45;
  }
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  uint64_t v61 = v7 + 4;
  uint64_t v11 = v7 + 7;
  unint64_t v12 = 1;
  unint64_t v64 = v7;
  unint64_t v65 = v7[2];
  while (2)
  {
    uint64_t v13 = &v61[2 * v10];
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain_n();
    sub_1DE8BE684((uint64_t)v8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = (void *)*a1;
    uint64_t v66 = v15;
    uint64_t v67 = (void *)*a1;
    *a1 = 0x8000000000000000;
    uint64_t v71 = v14;
    unint64_t v19 = sub_1DE821D84(v15, v14);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    char v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DE8237DC();
        unint64_t v17 = v67;
      }
      goto LABEL_10;
    }
    sub_1DE827080(v22, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v67;
    unint64_t v24 = sub_1DE821D84(v66, v71);
    if ((v23 & 1) == (v25 & 1))
    {
      unint64_t v19 = v24;
LABEL_10:
      *a1 = v17;
      swift_bridgeObjectRelease();
      char v26 = (void *)*a1;
      if ((v23 & 1) == 0)
      {
        v26[(v19 >> 6) + 8] |= 1 << v19;
        uint64_t v27 = (uint64_t *)(v26[6] + 16 * v19);
        *uint64_t v27 = v66;
        v27[1] = v71;
        *(void *)(v26[7] + 8 * v19) = 0;
        uint64_t v28 = v26[2];
        uint64_t v29 = v28 + 1;
        BOOL v30 = __OFADD__(v28, 1);
        swift_bridgeObjectRetain();
        if (v30) {
          goto LABEL_54;
        }
        v26[2] = v29;
      }
      swift_bridgeObjectRetain();
      uint64_t v31 = v26[7];
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(v31 + 8 * v19);
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33)
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        break;
      }
      *(void *)(v31 + 8 * v19) = v34;
      uint64_t v35 = v71;
      swift_bridgeObjectRelease();
      unint64_t v36 = v65;
      if (v12 != v65)
      {
        unint64_t v62 = v12;
        uint64_t v63 = v11;
        do
        {
          if (v12 >= v36)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v12 >= v7[2]) {
            goto LABEL_47;
          }
          uint64_t v38 = *(v11 - 1);
          uint64_t v37 = *v11;
          BOOL v39 = v66 == v38 && v35 == v37;
          if (v39 || (sub_1DE8E1AC0() & 1) == 0)
          {
            uint64_t v68 = v38;
            uint64_t v70 = v37;
            swift_bridgeObjectRetain_n();
          }
          else
          {
            uint64_t v68 = v66;
            uint64_t v70 = v35;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_1DE8E1490();
          swift_bridgeObjectRelease();
          sub_1DE8BE684((uint64_t)v9);
          uint64_t v40 = v68;
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = (void *)*a1;
          uint64_t v69 = (void *)*a1;
          *a1 = 0x8000000000000000;
          unint64_t v44 = sub_1DE821D84(v40, v70);
          uint64_t v45 = v42[2];
          BOOL v46 = (v43 & 1) == 0;
          uint64_t v47 = v45 + v46;
          if (__OFADD__(v45, v46)) {
            goto LABEL_48;
          }
          char v48 = v43;
          if (v42[3] >= v47)
          {
            if ((v41 & 1) == 0)
            {
              sub_1DE8237DC();
              uint64_t v42 = v69;
            }
          }
          else
          {
            sub_1DE827080(v47, v41);
            uint64_t v42 = v69;
            unint64_t v49 = sub_1DE821D84(v40, v70);
            if ((v48 & 1) != (v50 & 1)) {
              goto LABEL_55;
            }
            unint64_t v44 = v49;
          }
          uint64_t v7 = v64;
          *a1 = v42;
          swift_bridgeObjectRelease();
          uint64_t v51 = (void *)*a1;
          if ((v48 & 1) == 0)
          {
            v51[(v44 >> 6) + 8] |= 1 << v44;
            uint64_t v52 = (uint64_t *)(v51[6] + 16 * v44);
            *uint64_t v52 = v40;
            v52[1] = v70;
            *(void *)(v51[7] + 8 * v44) = 0;
            uint64_t v53 = v51[2];
            uint64_t v54 = v53 + 1;
            BOOL v55 = __OFADD__(v53, 1);
            swift_bridgeObjectRetain();
            if (v55) {
              goto LABEL_50;
            }
            v51[2] = v54;
          }
          swift_bridgeObjectRetain();
          uint64_t v56 = v51[7];
          swift_bridgeObjectRelease();
          uint64_t v57 = *(void *)(v56 + 8 * v44);
          BOOL v33 = __OFADD__(v57, 1);
          uint64_t v58 = v57 + 1;
          if (v33) {
            goto LABEL_49;
          }
          ++v12;
          *(void *)(v56 + 8 * v44) = v58;
          swift_bridgeObjectRelease();
          v11 += 2;
          uint64_t v9 = sub_1DE8ABD28;
          unint64_t v36 = v65;
          uint64_t v35 = v71;
        }
        while (v65 != v12);
        swift_bridgeObjectRelease();
        unint64_t v10 = v62;
        unint64_t v12 = v62 + 1;
        uint64_t v11 = v63 + 2;
        uint64_t v9 = sub_1DE8ABD28;
        unint64_t v8 = sub_1DE8ABD20;
        if (v62 < v64[2]) {
          continue;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_1DE8ABD20;
LABEL_45:
      sub_1DE8BE684((uint64_t)v59);
      return sub_1DE8BE684((uint64_t)v9);
    }
    break;
  }
LABEL_55:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

void sub_1DE8ABD10(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_1DE8ABD18(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_1DE8ABD20(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_1DE8ABD28(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DE8ABD30(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DE8CADC8(v5, a3);
  uint64_t v7 = sub_1DE82A8F0(v6);
  swift_release();
  if (!v7[2])
  {
    swift_release();
    uint64_t v59 = 0;
    uint64_t v9 = 0;
    goto LABEL_45;
  }
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  uint64_t v61 = v7 + 4;
  uint64_t v11 = v7 + 7;
  unint64_t v12 = 1;
  unint64_t v64 = v7;
  unint64_t v65 = v7[2];
  while (2)
  {
    uint64_t v13 = &v61[2 * v10];
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain_n();
    sub_1DE8BE684((uint64_t)v8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = (void *)*a1;
    uint64_t v66 = v15;
    uint64_t v67 = (void *)*a1;
    *a1 = 0x8000000000000000;
    uint64_t v71 = v14;
    unint64_t v19 = sub_1DE821D84(v15, v14);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    char v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DE8237DC();
        unint64_t v17 = v67;
      }
      goto LABEL_10;
    }
    sub_1DE827080(v22, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v67;
    unint64_t v24 = sub_1DE821D84(v66, v71);
    if ((v23 & 1) == (v25 & 1))
    {
      unint64_t v19 = v24;
LABEL_10:
      *a1 = v17;
      swift_bridgeObjectRelease();
      char v26 = (void *)*a1;
      if ((v23 & 1) == 0)
      {
        v26[(v19 >> 6) + 8] |= 1 << v19;
        uint64_t v27 = (uint64_t *)(v26[6] + 16 * v19);
        *uint64_t v27 = v66;
        v27[1] = v71;
        *(void *)(v26[7] + 8 * v19) = 0;
        uint64_t v28 = v26[2];
        uint64_t v29 = v28 + 1;
        BOOL v30 = __OFADD__(v28, 1);
        swift_bridgeObjectRetain();
        if (v30) {
          goto LABEL_54;
        }
        v26[2] = v29;
      }
      swift_bridgeObjectRetain();
      uint64_t v31 = v26[7];
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(v31 + 8 * v19);
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33)
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        break;
      }
      *(void *)(v31 + 8 * v19) = v34;
      uint64_t v35 = v71;
      swift_bridgeObjectRelease();
      unint64_t v36 = v65;
      if (v12 != v65)
      {
        unint64_t v62 = v12;
        uint64_t v63 = v11;
        do
        {
          if (v12 >= v36)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v12 >= v7[2]) {
            goto LABEL_47;
          }
          uint64_t v38 = *(v11 - 1);
          uint64_t v37 = *v11;
          BOOL v39 = v66 == v38 && v35 == v37;
          if (v39 || (sub_1DE8E1AC0() & 1) == 0)
          {
            uint64_t v68 = v38;
            uint64_t v70 = v37;
            swift_bridgeObjectRetain_n();
          }
          else
          {
            uint64_t v68 = v66;
            uint64_t v70 = v35;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_1DE8E1490();
          swift_bridgeObjectRelease();
          sub_1DE8BE684((uint64_t)v9);
          uint64_t v40 = v68;
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = (void *)*a1;
          uint64_t v69 = (void *)*a1;
          *a1 = 0x8000000000000000;
          unint64_t v44 = sub_1DE821D84(v40, v70);
          uint64_t v45 = v42[2];
          BOOL v46 = (v43 & 1) == 0;
          uint64_t v47 = v45 + v46;
          if (__OFADD__(v45, v46)) {
            goto LABEL_48;
          }
          char v48 = v43;
          if (v42[3] >= v47)
          {
            if ((v41 & 1) == 0)
            {
              sub_1DE8237DC();
              uint64_t v42 = v69;
            }
          }
          else
          {
            sub_1DE827080(v47, v41);
            uint64_t v42 = v69;
            unint64_t v49 = sub_1DE821D84(v40, v70);
            if ((v48 & 1) != (v50 & 1)) {
              goto LABEL_55;
            }
            unint64_t v44 = v49;
          }
          uint64_t v7 = v64;
          *a1 = v42;
          swift_bridgeObjectRelease();
          uint64_t v51 = (void *)*a1;
          if ((v48 & 1) == 0)
          {
            v51[(v44 >> 6) + 8] |= 1 << v44;
            uint64_t v52 = (uint64_t *)(v51[6] + 16 * v44);
            *uint64_t v52 = v40;
            v52[1] = v70;
            *(void *)(v51[7] + 8 * v44) = 0;
            uint64_t v53 = v51[2];
            uint64_t v54 = v53 + 1;
            BOOL v55 = __OFADD__(v53, 1);
            swift_bridgeObjectRetain();
            if (v55) {
              goto LABEL_50;
            }
            v51[2] = v54;
          }
          swift_bridgeObjectRetain();
          uint64_t v56 = v51[7];
          swift_bridgeObjectRelease();
          uint64_t v57 = *(void *)(v56 + 8 * v44);
          BOOL v33 = __OFADD__(v57, 1);
          uint64_t v58 = v57 + 1;
          if (v33) {
            goto LABEL_49;
          }
          ++v12;
          *(void *)(v56 + 8 * v44) = v58;
          swift_bridgeObjectRelease();
          v11 += 2;
          uint64_t v9 = sub_1DE8ABD18;
          unint64_t v36 = v65;
          uint64_t v35 = v71;
        }
        while (v65 != v12);
        swift_bridgeObjectRelease();
        unint64_t v10 = v62;
        unint64_t v12 = v62 + 1;
        uint64_t v11 = v63 + 2;
        uint64_t v9 = sub_1DE8ABD18;
        unint64_t v8 = sub_1DE8ABD10;
        if (v62 < v64[2]) {
          continue;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_1DE8ABD10;
LABEL_45:
      sub_1DE8BE684((uint64_t)v59);
      return sub_1DE8BE684((uint64_t)v9);
    }
    break;
  }
LABEL_55:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t sub_1DE8AC218(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  unint64_t v10 = *(char **)a1;
  uint64_t v11 = *(void *)(*(void *)a1 + 16);
  if (v11)
  {
    uint64_t result = *((void *)v10 + 4);
    if (result == v9 && *((void *)v10 + 5) == v8) {
      return result;
    }
    uint64_t result = sub_1DE8E1AC0();
    if (result) {
      return result;
    }
    if (v11 != 1)
    {
      uint64_t result = *((void *)v10 + 6);
      if (result == v9 && *((void *)v10 + 7) == v8) {
        return result;
      }
      uint64_t result = sub_1DE8E1AC0();
      if (result) {
        return result;
      }
      if (v11 != 2)
      {
        BOOL v33 = v10 + 72;
        uint64_t v34 = 2;
        while (!__OFADD__(v34, 1))
        {
          uint64_t result = *(v33 - 1);
          if (result == v9 && *v33 == v8) {
            return result;
          }
          uint64_t v36 = v34 + 1;
          uint64_t result = sub_1DE8E1AC0();
          if (result) {
            return result;
          }
          v33 += 2;
          ++v34;
          if (v36 == v11) {
            goto LABEL_8;
          }
        }
        __break(1u);
        goto LABEL_43;
      }
    }
  }
LABEL_8:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_1DE83A608(0, v11 + 1, 1, v10);
  }
  unint64_t v15 = *((void *)v10 + 2);
  unint64_t v14 = *((void *)v10 + 3);
  if (v15 >= v14 >> 1) {
    unint64_t v10 = sub_1DE83A608((char *)(v14 > 1), v15 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v15 + 1;
  unint64_t v16 = &v10[16 * v15];
  *((void *)v16 + 4) = v9;
  *((void *)v16 + 5) = v8;
  *(void *)a1 = v10;
  uint64_t v41 = MEMORY[0x1E4FBC868];
  double v40 = *(double *)(a3 + 1384);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v8;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DE82DA80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (*(void *)(v18 + 16))
  {
    uint64_t v19 = MEMORY[0x1E4FBC870];
    uint64_t v20 = a5;
    do
    {
      BOOL v39 = (void *)v19;
      swift_bridgeObjectRetain();
      sub_1DE8B8894(v18, a4, a1, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v39, (void (*)(uint64_t, uint64_t, double))sub_1DE8BE664);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v40 = v40 * v40;
      uint64_t v18 = (uint64_t)v39;
    }
    while (v39[2]);
    swift_bridgeObjectRelease();
    uint64_t v21 = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC868];
    uint64_t v20 = a5;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DE82ADAC(v21);
  swift_bridgeObjectRelease();
  BOOL v39 = v22;
  sub_1DE8BC624((uint64_t *)&v39, v20, (uint64_t (*)(uint64_t))sub_1DE8CB9F8, (void (*)(void *, uint64_t))sub_1DE8B98A0);
  if (v5)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t)v39;
  int64_t v24 = v39[2];
  if (v24)
  {
    BOOL v39 = (void *)MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v24, 0);
    uint64_t v25 = (uint64_t)v39;
    char v26 = (uint64_t *)(v23 + 40);
    do
    {
      uint64_t v27 = *(v26 - 1);
      uint64_t v28 = *v26;
      BOOL v39 = (void *)v25;
      unint64_t v30 = *(void *)(v25 + 16);
      unint64_t v29 = *(void *)(v25 + 24);
      swift_bridgeObjectRetain();
      if (v30 >= v29 >> 1)
      {
        sub_1DE84BBE0((char *)(v29 > 1), v30 + 1, 1);
        uint64_t v25 = (uint64_t)v39;
      }
      v26 += 3;
      *(void *)(v25 + 16) = v30 + 1;
      uint64_t v31 = v25 + 16 * v30;
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v28;
      --v24;
    }
    while (v24);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  sub_1DE81335C(v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8AC614(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t *a5, double a6)
{
  uint64_t v11 = *(void **)a3;
  uint64_t v12 = *(void *)(*(void *)a3 + 16);
  if (!v12) {
    goto LABEL_8;
  }
  uint64_t result = v11[4];
  if (result != a1 || v11[5] != a2)
  {
    uint64_t result = sub_1DE8E1AC0();
    if ((result & 1) == 0)
    {
      if (v12 == 1) {
        goto LABEL_8;
      }
      uint64_t result = v11[6];
      if (result != a1 || v11[7] != a2)
      {
        uint64_t result = sub_1DE8E1AC0();
        if ((result & 1) == 0)
        {
          if (v12 != 2)
          {
            uint64_t v23 = v11 + 9;
            uint64_t v24 = 2;
            while (1)
            {
              uint64_t v25 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                break;
              }
              uint64_t result = *(v23 - 1);
              if (result == a1 && *v23 == a2) {
                return result;
              }
              uint64_t result = sub_1DE8E1AC0();
              if (result) {
                return result;
              }
              v23 += 2;
              ++v24;
              if (v25 == v12) {
                goto LABEL_8;
              }
            }
            __break(1u);
            return result;
          }
LABEL_8:
          double v15 = *a4 * a6;
          uint64_t v16 = *a5;
          if (*(void *)(*a5 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v17 = sub_1DE821D84(a1, a2);
            if (v18)
            {
              double v19 = *(double *)(*(void *)(v16 + 56) + 8 * v17);
              swift_bridgeObjectRelease();
              if (v19 > v15) {
                double v15 = v19;
              }
              swift_bridgeObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v27 = *a5;
              *a5 = 0x8000000000000000;
              sub_1DE829BD8(a1, a2, isUniquelyReferenced_nonNull_native, v15);
              *a5 = v27;
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRetain();
          char v21 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v27 = *a5;
          *a5 = 0x8000000000000000;
          sub_1DE829BD8(a1, a2, v21, v15);
          *a5 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1DE8AC840(&v27, a1, a2);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DE8AC840(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1DE8E1BA0();
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  uint64_t v8 = sub_1DE8E1BD0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DE8E1AC0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DE8E1AC0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *double v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DE8ACC8C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *double v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1DE8AC9F0(uint64_t a1, uint64_t a2)
{
  double v3 = v2;
  uint64_t v6 = *v2;
  sub_1DE8E1BA0();
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1DE8E1BD0();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t i = v9 & ~v10;
  uint64_t v12 = v6 + 56;
  if ((*(void *)(v6 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v13 = 112 * i;
    unint64_t v14 = (void *)(*(void *)(v6 + 48) + 112 * i);
    BOOL v15 = *v14 == v7 && v14[1] == v8;
    if (v15 || (uint64_t v40 = *(void *)(v6 + 48), (sub_1DE8E1AC0() & 1) != 0))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      sub_1DE8B7FE4(a2);
      uint64_t v16 = *(void *)(*v3 + 48) + v13;
      uint64_t v18 = *(void *)v16;
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 24);
      uint64_t v21 = *(void *)(v16 + 32);
      uint64_t v22 = *(void *)(v16 + 40);
      uint64_t v23 = *(void *)(v16 + 48);
      uint64_t v24 = *(void *)(v16 + 56);
      char v25 = *(unsigned char *)(v16 + 64);
      char v26 = *(unsigned char *)(v16 + 65);
      char v27 = *(unsigned char *)(v16 + 66);
      char v28 = *(unsigned char *)(v16 + 67);
      uint64_t v29 = *(void *)(v16 + 72);
      unint64_t v30 = *(void *)(v16 + 80);
      char v31 = *(unsigned char *)(v16 + 88);
      uint64_t v32 = *(void *)(v16 + 96);
      LOBYTE(v16) = *(unsigned char *)(v16 + 104);
      *(void *)a1 = v18;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v20;
      *(void *)(a1 + 32) = v21;
      *(void *)(a1 + 40) = v22;
      *(void *)(a1 + 48) = v23;
      *(void *)(a1 + 56) = v24;
      *(unsigned char *)(a1 + 64) = v25;
      *(unsigned char *)(a1 + 65) = v26;
      *(unsigned char *)(a1 + 66) = v27;
      *(unsigned char *)(a1 + 67) = v28;
      *(void *)(a1 + 72) = v29;
      *(void *)(a1 + 80) = v30;
      *(unsigned char *)(a1 + 88) = v31;
      *(void *)(a1 + 96) = v32;
      *(unsigned char *)(a1 + 104) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v29, v30);
      return 0;
    }
    for (unint64_t i = (i + 1) & ~v10; ((*(void *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & ~v10)
    {
      uint64_t v13 = 112 * i;
      uint64_t v34 = (void *)(v40 + 112 * i);
      BOOL v35 = *v34 == v7 && v34[1] == v8;
      if (v35 || (sub_1DE8E1AC0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = *v3;
  *double v3 = 0x8000000000000000;
  sub_1DE82F388(a2);
  sub_1DE8ACE28(a2, i, isUniquelyReferenced_nonNull_native);
  *double v3 = v41;
  swift_bridgeObjectRelease();
  long long v37 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v37;
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  long long v38 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v38;
  long long v39 = *(_OWORD *)(a2 + 48);
  uint64_t result = 1;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v39;
  return result;
}

uint64_t sub_1DE8ACC8C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1DE8623F0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1DE862D3C();
      goto LABEL_22;
    }
    sub_1DE863314();
  }
  uint64_t v11 = *v4;
  sub_1DE8E1BA0();
  sub_1DE8E1480();
  uint64_t result = sub_1DE8E1BD0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    BOOL v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1DE8E1AC0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1DE8E1B30();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1DE8E1AC0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1DE8ACE28(uint64_t result, unint64_t i, char a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_1DE8626D0();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1DE862EF0();
      goto LABEL_21;
    }
    sub_1DE8635C4();
  }
  uint64_t v9 = *v3;
  sub_1DE8E1BA0();
  uint64_t v10 = *(void *)v6;
  uint64_t v11 = *(void *)(v6 + 8);
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DE8E1BD0();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t i = result & ~v12;
  uint64_t v13 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v14 = *(void *)(v9 + 48);
    BOOL v15 = (void *)(v14 + 112 * i);
    if (*v15 == v10 && v15[1] == v11) {
      goto LABEL_24;
    }
    uint64_t result = sub_1DE8E1AC0();
    if (result) {
      goto LABEL_24;
    }
    uint64_t v17 = ~v12;
    for (unint64_t i = (i + 1) & v17; ((*(void *)(v13 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v17)
    {
      uint64_t v18 = (void *)(v14 + 112 * i);
      if (*v18 == v10 && v18[1] == v11) {
        goto LABEL_24;
      }
      uint64_t result = sub_1DE8E1AC0();
      if (result) {
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v20 = *v4;
  *(void *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t v21 = (_OWORD *)(*(void *)(v20 + 48) + 112 * i);
  long long v22 = *(_OWORD *)(v6 + 16);
  *uint64_t v21 = *(_OWORD *)v6;
  v21[1] = v22;
  *(_OWORD *)((char *)v21 + 89) = *(_OWORD *)(v6 + 89);
  long long v23 = *(_OWORD *)(v6 + 80);
  v21[4] = *(_OWORD *)(v6 + 64);
  v21[5] = v23;
  long long v24 = *(_OWORD *)(v6 + 48);
  v21[2] = *(_OWORD *)(v6 + 32);
  v21[3] = v24;
  uint64_t v25 = *(void *)(v20 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v20 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DE8E1B30();
  __break(1u);
  return result;
}

uint64_t sub_1DE8AD020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DE821D84(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DE822320();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for ReadonlyAggregate(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1DE8BE7AC(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_1DE8C9584(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ReadonlyAggregate(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1DE8AD1B0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a3 & 0x101010101;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1DE821EC8(a1, a2, v9, a4);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v5;
  uint64_t v16 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DE823218();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  sub_1DE8C996C(v10, v13);
  *uint64_t v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DE8AD2A8(char **a1, uint64_t (*a2)(void *))
{
  unint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v4 = sub_1DE8CB9BC((uint64_t)v4);
  }
  uint64_t v5 = *((void *)v4 + 2);
  v7[0] = v4 + 32;
  v7[1] = v5;
  uint64_t result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_1DE8AD31C(char **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_1DE8CB9D0((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1DE8AE3E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DE8AD388(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DE8E1A70();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_146;
    }
    if (v3) {
      return sub_1DE8AEAF4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v113 = result;
  uint64_t v127 = v1;
  uint64_t v110 = a1;
  if (v3 > 1)
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_1DE8E15C0();
    *(void *)(result + 16) = v6;
    uint64_t v112 = result;
    uint64_t v125 = (double *)(result + 32);
LABEL_13:
    uint64_t v8 = 0;
    uint64_t v9 = *a1;
    uint64_t v111 = *a1 + 328;
    uint64_t v109 = *a1 - 112;
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v114 = v3;
    uint64_t v126 = *a1;
    while (1)
    {
      uint64_t v12 = v8++;
      if (v8 >= v3) {
        goto LABEL_39;
      }
      uint64_t v13 = v9 + 112 * v8;
      double v14 = *(double *)(v13 + 96);
      uint64_t v15 = v9 + 112 * v12;
      double v16 = *(double *)(v15 + 96);
      int v17 = *(unsigned __int8 *)(v15 + 104);
      if (*(unsigned char *)(v13 + 104)) {
        double v14 = 0.0;
      }
      if (v17) {
        double v16 = 0.0;
      }
      uint64_t v8 = v12 + 2;
      if (v12 + 2 >= v3) {
        break;
      }
      uint64_t v18 = (double *)(v111 + 112 * v12);
      do
      {
        double v19 = *(v18 - 1);
        if (*(unsigned char *)v18) {
          double v19 = 0.0;
        }
        if (*(unsigned char *)(v18 - 14))
        {
          if (v16 < v14 == v19 <= 0.0) {
            goto LABEL_29;
          }
        }
        else if (v16 < v14 == *(v18 - 15) >= v19)
        {
          goto LABEL_29;
        }
        ++v8;
        v18 += 14;
      }
      while (v3 != v8);
      uint64_t v8 = v3;
      if (v16 < v14) {
        goto LABEL_30;
      }
LABEL_39:
      if (v8 < v3)
      {
        if (__OFSUB__(v8, v12)) {
          goto LABEL_144;
        }
        if (v8 - v12 < v113)
        {
          uint64_t v28 = v12 + v113;
          if (__OFADD__(v12, v113)) {
            goto LABEL_148;
          }
          if (v28 >= v3) {
            uint64_t v28 = v3;
          }
          if (v28 < v12)
          {
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            return result;
          }
          if (v8 != v28)
          {
            uint64_t v29 = v109 + 112 * v8;
            do
            {
              uint64_t v30 = v12;
              uint64_t v31 = v29;
              do
              {
                uint64_t v32 = *(void *)(v31 + 208);
                char v33 = *(unsigned char *)(v31 + 216);
                if (v33) {
                  double v34 = 0.0;
                }
                else {
                  double v34 = *(double *)(v31 + 208);
                }
                if (*(unsigned char *)(v31 + 104))
                {
                  if (v34 <= 0.0) {
                    break;
                  }
                }
                else if (*(double *)(v31 + 96) >= v34)
                {
                  break;
                }
                if (!v9) {
                  goto LABEL_150;
                }
                uint64_t v35 = v31 + 112;
                uint64_t v36 = *(void *)(v31 + 128);
                uint64_t v37 = *(void *)(v31 + 168);
                char v38 = *(unsigned char *)(v31 + 176);
                char v39 = *(unsigned char *)(v31 + 177);
                char v40 = *(unsigned char *)(v31 + 178);
                char v41 = *(unsigned char *)(v31 + 179);
                uint64_t result = *(unsigned __int8 *)(v31 + 200);
                long long v42 = *(_OWORD *)(v31 + 136);
                long long v43 = *(_OWORD *)(v31 + 152);
                long long v44 = *(_OWORD *)(v31 + 184);
                long long v45 = *(_OWORD *)(v31 + 80);
                long long v47 = *(_OWORD *)(v31 + 96);
                long long v46 = *(_OWORD *)(v31 + 112);
                *(_OWORD *)(v31 + 176) = *(_OWORD *)(v31 + 64);
                *(_OWORD *)(v31 + 192) = v45;
                *(_OWORD *)(v31 + 208) = v47;
                long long v48 = *(_OWORD *)(v31 + 16);
                *(_OWORD *)(v31 + 112) = *(_OWORD *)v31;
                *(_OWORD *)(v31 + 128) = v48;
                *(_OWORD *)uint64_t v31 = v46;
                long long v50 = *(_OWORD *)(v31 + 32);
                long long v49 = *(_OWORD *)(v31 + 48);
                *(void *)(v31 + 16) = v36;
                *(_OWORD *)(v31 + 24) = v42;
                *(_OWORD *)(v31 + 40) = v43;
                *(void *)(v31 + 56) = v37;
                *(unsigned char *)(v31 + 64) = v38;
                *(unsigned char *)(v31 + 65) = v39;
                *(unsigned char *)(v31 + 66) = v40;
                *(unsigned char *)(v31 + 67) = v41;
                *(_OWORD *)(v31 + 72) = v44;
                *(unsigned char *)(v31 + 88) = result;
                *(void *)(v31 + 96) = v32;
                *(unsigned char *)(v31 + 104) = v33;
                v31 -= 112;
                ++v30;
                *(_OWORD *)(v35 + 32) = v50;
                *(_OWORD *)(v35 + 48) = v49;
              }
              while (v8 != v30);
              ++v8;
              v29 += 112;
            }
            while (v8 != v28);
            uint64_t v8 = v28;
          }
        }
      }
      if (v8 < v12) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DE8CA414(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
        uint64_t v10 = result;
      }
      unint64_t v52 = *(void *)(v10 + 16);
      unint64_t v51 = *(void *)(v10 + 24);
      unint64_t v11 = v52 + 1;
      uint64_t v9 = v126;
      if (v52 >= v51 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DE8CA414((char *)(v51 > 1), v52 + 1, 1, (char *)v10);
        uint64_t v9 = v126;
        uint64_t v10 = result;
      }
      *(void *)(v10 + 16) = v11;
      uint64_t v53 = v10 + 32;
      uint64_t v54 = (uint64_t *)(v10 + 32 + 16 * v52);
      *uint64_t v54 = v12;
      v54[1] = v8;
      if (v52)
      {
        while (1)
        {
          unint64_t v55 = v11 - 1;
          if (v11 >= 4)
          {
            unint64_t v60 = v53 + 16 * v11;
            uint64_t v61 = *(void *)(v60 - 64);
            uint64_t v62 = *(void *)(v60 - 56);
            BOOL v66 = __OFSUB__(v62, v61);
            uint64_t v63 = v62 - v61;
            if (v66) {
              goto LABEL_128;
            }
            uint64_t v65 = *(void *)(v60 - 48);
            uint64_t v64 = *(void *)(v60 - 40);
            BOOL v66 = __OFSUB__(v64, v65);
            uint64_t v58 = v64 - v65;
            char v59 = v66;
            if (v66) {
              goto LABEL_129;
            }
            unint64_t v67 = v11 - 2;
            uint64_t v68 = (uint64_t *)(v53 + 16 * (v11 - 2));
            uint64_t v70 = *v68;
            uint64_t v69 = v68[1];
            BOOL v66 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v66) {
              goto LABEL_130;
            }
            BOOL v66 = __OFADD__(v58, v71);
            uint64_t v72 = v58 + v71;
            if (v66) {
              goto LABEL_132;
            }
            if (v72 >= v63)
            {
              uint64_t v90 = (uint64_t *)(v53 + 16 * v55);
              uint64_t v92 = *v90;
              uint64_t v91 = v90[1];
              BOOL v66 = __OFSUB__(v91, v92);
              uint64_t v93 = v91 - v92;
              if (v66) {
                goto LABEL_138;
              }
              BOOL v83 = v58 < v93;
              goto LABEL_98;
            }
          }
          else
          {
            if (v11 != 3)
            {
              uint64_t v84 = *(void *)(v10 + 32);
              uint64_t v85 = *(void *)(v10 + 40);
              BOOL v66 = __OFSUB__(v85, v84);
              uint64_t v77 = v85 - v84;
              char v78 = v66;
              goto LABEL_92;
            }
            uint64_t v57 = *(void *)(v10 + 32);
            uint64_t v56 = *(void *)(v10 + 40);
            BOOL v66 = __OFSUB__(v56, v57);
            uint64_t v58 = v56 - v57;
            char v59 = v66;
          }
          if (v59) {
            goto LABEL_131;
          }
          unint64_t v67 = v11 - 2;
          uint64_t v73 = (uint64_t *)(v53 + 16 * (v11 - 2));
          uint64_t v75 = *v73;
          uint64_t v74 = v73[1];
          BOOL v76 = __OFSUB__(v74, v75);
          uint64_t v77 = v74 - v75;
          char v78 = v76;
          if (v76) {
            goto LABEL_133;
          }
          double v79 = (uint64_t *)(v53 + 16 * v55);
          uint64_t v81 = *v79;
          uint64_t v80 = v79[1];
          BOOL v66 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v66) {
            goto LABEL_135;
          }
          if (__OFADD__(v77, v82)) {
            goto LABEL_137;
          }
          if (v77 + v82 >= v58)
          {
            BOOL v83 = v58 < v82;
LABEL_98:
            if (v83) {
              unint64_t v55 = v67;
            }
            goto LABEL_100;
          }
LABEL_92:
          if (v78) {
            goto LABEL_134;
          }
          char v86 = (uint64_t *)(v53 + 16 * v55);
          uint64_t v88 = *v86;
          uint64_t v87 = v86[1];
          BOOL v66 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          if (v66) {
            goto LABEL_136;
          }
          if (v89 < v77) {
            goto LABEL_15;
          }
LABEL_100:
          unint64_t v94 = v55 - 1;
          if (v55 - 1 >= v11)
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            goto LABEL_149;
          }
          if (!v9) {
            goto LABEL_151;
          }
          uint64_t v95 = v10;
          long long v96 = (uint64_t *)(v53 + 16 * v94);
          uint64_t v97 = *v96;
          uint64_t v98 = (void *)(v53 + 16 * v55);
          uint64_t v99 = v98[1];
          uint64_t result = sub_1DE8AEBFC((double *)(v9 + 112 * *v96), (double *)(v9 + 112 * *v98), v9 + 112 * v99, v125);
          if (v127) {
            goto LABEL_108;
          }
          if (v99 < v97) {
            goto LABEL_125;
          }
          if (v55 > *(void *)(v95 + 16)) {
            goto LABEL_126;
          }
          uint64_t *v96 = v97;
          *(void *)(v53 + 16 * v94 + 8) = v99;
          unint64_t v100 = *(void *)(v95 + 16);
          if (v55 >= v100) {
            goto LABEL_127;
          }
          uint64_t v10 = v95;
          unint64_t v11 = v100 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v53 + 16 * v55), v98 + 2, 16 * (v100 - 1 - v55));
          *(void *)(v95 + 16) = v100 - 1;
          uint64_t v9 = v126;
          if (v100 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v11 = 1;
LABEL_15:
      uint64_t v3 = v114;
      if (v8 >= v114)
      {
        uint64_t v7 = v112;
        goto LABEL_111;
      }
    }
LABEL_29:
    if (v16 >= v14) {
      goto LABEL_39;
    }
LABEL_30:
    if (v8 < v12) {
      goto LABEL_147;
    }
    if (v12 < v8)
    {
      uint64_t v20 = 112 * v8;
      uint64_t v21 = v8;
      uint64_t v22 = v12;
      uint64_t v108 = v12;
      uint64_t v23 = 112 * v12;
      do
      {
        if (v22 != --v21)
        {
          if (!v9) {
            goto LABEL_152;
          }
          long long v118 = *(_OWORD *)(v9 + v23);
          uint64_t v24 = v9 + v20;
          uint64_t v25 = *(void *)(v9 + v23 + 16);
          uint64_t v26 = *(void *)(v9 + v23 + 56);
          char v27 = *(unsigned char *)(v9 + v23 + 64);
          char v120 = *(unsigned char *)(v9 + v23 + 66);
          char v121 = *(unsigned char *)(v9 + v23 + 65);
          char v119 = *(unsigned char *)(v9 + v23 + 67);
          char v124 = *(unsigned char *)(v9 + v23 + 88);
          uint64_t v123 = *(void *)(v9 + v23 + 96);
          char v122 = *(unsigned char *)(v9 + v23 + 104);
          long long v115 = *(_OWORD *)(v9 + v23 + 40);
          long long v116 = *(_OWORD *)(v9 + v23 + 24);
          long long v117 = *(_OWORD *)(v9 + v23 + 72);
          uint64_t result = (uint64_t)memmove((void *)(v9 + v23), (const void *)(v9 + v20 - 112), 0x70uLL);
          uint64_t v9 = v126;
          *(_OWORD *)(v24 - 112) = v118;
          *(void *)(v24 - 96) = v25;
          *(_OWORD *)(v24 - 88) = v116;
          *(_OWORD *)(v24 - 72) = v115;
          *(void *)(v24 - 56) = v26;
          *(unsigned char *)(v24 - 48) = v27;
          *(unsigned char *)(v24 - 47) = v121;
          *(unsigned char *)(v24 - 46) = v120;
          *(unsigned char *)(v24 - 45) = v119;
          *(_OWORD *)(v24 - 40) = v117;
          *(unsigned char *)(v24 - 24) = v124;
          *(void *)(v24 - 16) = v123;
          *(unsigned char *)(v24 - 8) = v122;
        }
        ++v22;
        v20 -= 112;
        v23 += 112;
      }
      while (v22 < v21);
      uint64_t v3 = v114;
      uint64_t v12 = v108;
    }
    goto LABEL_39;
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v125 = (double *)(MEMORY[0x1E4FBC860] + 32);
  if (v3 == 1)
  {
    uint64_t v112 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_111:
  uint64_t result = v10;
  uint64_t v112 = v7;
  if (v11 >= 2)
  {
    uint64_t v101 = *v110;
    do
    {
      unint64_t v102 = v11 - 2;
      if (v11 < 2) {
        goto LABEL_140;
      }
      if (!v101) {
        goto LABEL_153;
      }
      uint64_t v103 = result;
      uint64_t v104 = *(void *)(result + 32 + 16 * v102);
      uint64_t v105 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
      uint64_t result = sub_1DE8AEBFC((double *)(v101 + 112 * v104), (double *)(v101 + 112 * *(void *)(result + 32 + 16 * (v11 - 1))), v101 + 112 * v105, v125);
      if (v127) {
        break;
      }
      if (v105 < v104) {
        goto LABEL_141;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DE8CA510(v103);
        uint64_t v103 = result;
      }
      if (v102 >= *(void *)(v103 + 16)) {
        goto LABEL_142;
      }
      uint64_t v106 = (void *)(v103 + 32 + 16 * v102);
      *uint64_t v106 = v104;
      v106[1] = v105;
      unint64_t v107 = *(void *)(v103 + 16);
      if (v11 > v107) {
        goto LABEL_143;
      }
      memmove((void *)(v103 + 32 + 16 * (v11 - 1)), (const void *)(v103 + 32 + 16 * v11), 16 * (v107 - v11));
      uint64_t result = v103;
      *(void *)(v103 + 16) = v107 - 1;
      unint64_t v11 = v107 - 1;
    }
    while (v107 > 2);
  }
LABEL_108:
  swift_bridgeObjectRelease();
  *(void *)(v112 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8ADB84(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DE8E1A70();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_140;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v95 = *v2;
      uint64_t v96 = -1;
      uint64_t v97 = 1;
      uint64_t v98 = *v2;
      do
      {
        uint64_t v99 = v96;
        uint64_t v100 = v98;
        do
        {
          double v101 = *(double *)(v100 + 168);
          if (*(double *)(v100 + 56) >= v101) {
            break;
          }
          if (!v95) {
            goto LABEL_144;
          }
          uint64_t v102 = v100 + 112;
          uint64_t v103 = *(void *)(v100 + 128);
          char v104 = *(unsigned char *)(v100 + 176);
          char v105 = *(unsigned char *)(v100 + 177);
          char v106 = *(unsigned char *)(v100 + 178);
          uint64_t result = *(unsigned __int8 *)(v100 + 179);
          char v107 = *(unsigned char *)(v100 + 200);
          uint64_t v108 = *(void *)(v100 + 208);
          char v109 = *(unsigned char *)(v100 + 216);
          long long v110 = *(_OWORD *)(v100 + 136);
          long long v111 = *(_OWORD *)(v100 + 152);
          long long v112 = *(_OWORD *)(v100 + 184);
          long long v113 = *(_OWORD *)(v100 + 80);
          long long v115 = *(_OWORD *)(v100 + 96);
          long long v114 = *(_OWORD *)(v100 + 112);
          *(_OWORD *)(v100 + 176) = *(_OWORD *)(v100 + 64);
          *(_OWORD *)(v100 + 192) = v113;
          *(_OWORD *)(v100 + 208) = v115;
          long long v116 = *(_OWORD *)(v100 + 16);
          *(_OWORD *)(v100 + 112) = *(_OWORD *)v100;
          *(_OWORD *)(v100 + 128) = v116;
          *(_OWORD *)uint64_t v100 = v114;
          long long v118 = *(_OWORD *)(v100 + 32);
          long long v117 = *(_OWORD *)(v100 + 48);
          *(void *)(v100 + 16) = v103;
          *(_OWORD *)(v100 + 24) = v110;
          *(_OWORD *)(v100 + 40) = v111;
          *(double *)(v100 + 56) = v101;
          *(unsigned char *)(v100 + 64) = v104;
          *(unsigned char *)(v100 + 65) = v105;
          *(unsigned char *)(v100 + 66) = v106;
          *(unsigned char *)(v100 + 67) = result;
          *(_OWORD *)(v100 + 72) = v112;
          *(unsigned char *)(v100 + 88) = v107;
          *(void *)(v100 + 96) = v108;
          *(unsigned char *)(v100 + 104) = v109;
          v100 -= 112;
          *(_OWORD *)(v102 + 32) = v118;
          *(_OWORD *)(v102 + 48) = v117;
        }
        while (!__CFADD__(v99++, 1));
        ++v97;
        v98 += 112;
        --v96;
      }
      while (v97 != v3);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_139;
    }
    uint64_t v131 = result;
    uint64_t v145 = v1;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_1DE8E15C0();
      *(void *)(result + 16) = v6;
      uint64_t v130 = result;
      uint64_t v143 = (double *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v128 = v2;
      uint64_t v9 = *v2;
      uint64_t v129 = v9 + 56;
      uint64_t v144 = MEMORY[0x1E4FBC860];
      uint64_t v132 = v3;
      while (1)
      {
        uint64_t v11 = v8++;
        if (v8 < v3)
        {
          double v12 = *(double *)(v129 + 112 * v8);
          double v13 = *(double *)(v129 + 112 * v11);
          uint64_t v8 = v11 + 2;
          if (v11 + 2 < v3)
          {
            double v14 = (double *)(v9 + 168 + 112 * v11);
            while (v13 < v12 != *v14 >= v14[14])
            {
              ++v8;
              v14 += 14;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v12)
          {
            if (v8 < v11) {
              goto LABEL_141;
            }
            if (v11 < v8)
            {
              uint64_t v15 = 112 * v8;
              uint64_t v16 = v8;
              uint64_t v17 = v11;
              uint64_t v127 = v11;
              uint64_t v18 = 112 * v11;
              do
              {
                if (v17 != --v16)
                {
                  if (!v9) {
                    goto LABEL_147;
                  }
                  long long v136 = *(_OWORD *)(v9 + v18);
                  uint64_t v19 = v9 + v15;
                  uint64_t v20 = *(void *)(v9 + v18 + 16);
                  uint64_t v21 = *(void *)(v9 + v18 + 56);
                  char v22 = *(unsigned char *)(v9 + v18 + 64);
                  char v138 = *(unsigned char *)(v9 + v18 + 66);
                  char v139 = *(unsigned char *)(v9 + v18 + 65);
                  char v137 = *(unsigned char *)(v9 + v18 + 67);
                  char v142 = *(unsigned char *)(v9 + v18 + 88);
                  uint64_t v141 = *(void *)(v9 + v18 + 96);
                  char v140 = *(unsigned char *)(v9 + v18 + 104);
                  long long v133 = *(_OWORD *)(v9 + v18 + 40);
                  long long v134 = *(_OWORD *)(v9 + v18 + 24);
                  long long v135 = *(_OWORD *)(v9 + v18 + 72);
                  uint64_t result = (uint64_t)memmove((void *)(v9 + v18), (const void *)(v9 + v15 - 112), 0x70uLL);
                  *(_OWORD *)(v19 - 112) = v136;
                  *(void *)(v19 - 96) = v20;
                  *(_OWORD *)(v19 - 88) = v134;
                  *(_OWORD *)(v19 - 72) = v133;
                  *(void *)(v19 - 56) = v21;
                  *(unsigned char *)(v19 - 48) = v22;
                  *(unsigned char *)(v19 - 47) = v139;
                  *(unsigned char *)(v19 - 46) = v138;
                  *(unsigned char *)(v19 - 45) = v137;
                  *(_OWORD *)(v19 - 40) = v135;
                  *(unsigned char *)(v19 - 24) = v142;
                  *(void *)(v19 - 16) = v141;
                  *(unsigned char *)(v19 - 8) = v140;
                }
                ++v17;
                v15 -= 112;
                v18 += 112;
              }
              while (v17 < v16);
              uint64_t v3 = v132;
              uint64_t v11 = v127;
            }
          }
        }
        if (v8 >= v3) {
          goto LABEL_39;
        }
        if (__OFSUB__(v8, v11)) {
          goto LABEL_138;
        }
        if (v8 - v11 >= v131) {
          goto LABEL_39;
        }
        uint64_t v23 = v11 + v131;
        if (__OFADD__(v11, v131)) {
          goto LABEL_142;
        }
        if (v23 >= v3) {
          uint64_t v23 = v3;
        }
        if (v23 < v11)
        {
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          return result;
        }
        if (v8 == v23)
        {
LABEL_39:
          uint64_t v24 = v144;
          if (v8 < v11) {
            goto LABEL_133;
          }
        }
        else
        {
          uint64_t v74 = v9 - 112 + 112 * v8;
          uint64_t v24 = v144;
          do
          {
            uint64_t v75 = v11;
            uint64_t v76 = v74;
            do
            {
              double v77 = *(double *)(v76 + 168);
              if (*(double *)(v76 + 56) >= v77) {
                break;
              }
              if (!v9) {
                goto LABEL_145;
              }
              uint64_t v78 = v76 + 112;
              uint64_t v79 = *(void *)(v76 + 128);
              char v80 = *(unsigned char *)(v76 + 176);
              char v81 = *(unsigned char *)(v76 + 177);
              char v82 = *(unsigned char *)(v76 + 178);
              char v83 = *(unsigned char *)(v76 + 179);
              char v84 = *(unsigned char *)(v76 + 200);
              uint64_t result = *(void *)(v76 + 208);
              char v85 = *(unsigned char *)(v76 + 216);
              long long v86 = *(_OWORD *)(v76 + 136);
              long long v87 = *(_OWORD *)(v76 + 152);
              long long v88 = *(_OWORD *)(v76 + 184);
              long long v89 = *(_OWORD *)(v76 + 80);
              long long v91 = *(_OWORD *)(v76 + 96);
              long long v90 = *(_OWORD *)(v76 + 112);
              *(_OWORD *)(v76 + 176) = *(_OWORD *)(v76 + 64);
              *(_OWORD *)(v76 + 192) = v89;
              *(_OWORD *)(v76 + 208) = v91;
              long long v92 = *(_OWORD *)(v76 + 16);
              *(_OWORD *)(v76 + 112) = *(_OWORD *)v76;
              *(_OWORD *)(v76 + 128) = v92;
              *(_OWORD *)uint64_t v76 = v90;
              long long v94 = *(_OWORD *)(v76 + 32);
              long long v93 = *(_OWORD *)(v76 + 48);
              *(void *)(v76 + 16) = v79;
              *(_OWORD *)(v76 + 24) = v86;
              *(_OWORD *)(v76 + 40) = v87;
              *(double *)(v76 + 56) = v77;
              *(unsigned char *)(v76 + 64) = v80;
              *(unsigned char *)(v76 + 65) = v81;
              *(unsigned char *)(v76 + 66) = v82;
              *(unsigned char *)(v76 + 67) = v83;
              *(_OWORD *)(v76 + 72) = v88;
              *(unsigned char *)(v76 + 88) = v84;
              *(void *)(v76 + 96) = result;
              *(unsigned char *)(v76 + 104) = v85;
              v76 -= 112;
              ++v75;
              *(_OWORD *)(v78 + 32) = v94;
              *(_OWORD *)(v78 + 48) = v93;
            }
            while (v8 != v75);
            ++v8;
            v74 += 112;
          }
          while (v8 != v23);
          uint64_t v8 = v23;
          if (v23 < v11) {
            goto LABEL_133;
          }
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414(0, *(void *)(v24 + 16) + 1, 1, (char *)v24);
          uint64_t v24 = result;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        unint64_t v25 = *(void *)(v24 + 24);
        unint64_t v10 = v26 + 1;
        if (v26 >= v25 >> 1)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414((char *)(v25 > 1), v26 + 1, 1, (char *)v24);
          uint64_t v24 = result;
        }
        *(void *)(v24 + 16) = v10;
        uint64_t v27 = v24 + 32;
        uint64_t v28 = (uint64_t *)(v24 + 32 + 16 * v26);
        *uint64_t v28 = v11;
        v28[1] = v8;
        uint64_t v144 = v24;
        if (v26)
        {
          while (1)
          {
            unint64_t v29 = v10 - 1;
            if (v10 >= 4)
            {
              unint64_t v34 = v27 + 16 * v10;
              uint64_t v35 = *(void *)(v34 - 64);
              uint64_t v36 = *(void *)(v34 - 56);
              BOOL v40 = __OFSUB__(v36, v35);
              uint64_t v37 = v36 - v35;
              if (v40) {
                goto LABEL_122;
              }
              uint64_t v39 = *(void *)(v34 - 48);
              uint64_t v38 = *(void *)(v34 - 40);
              BOOL v40 = __OFSUB__(v38, v39);
              uint64_t v32 = v38 - v39;
              char v33 = v40;
              if (v40) {
                goto LABEL_123;
              }
              unint64_t v41 = v10 - 2;
              long long v42 = (uint64_t *)(v27 + 16 * (v10 - 2));
              uint64_t v44 = *v42;
              uint64_t v43 = v42[1];
              BOOL v40 = __OFSUB__(v43, v44);
              uint64_t v45 = v43 - v44;
              if (v40) {
                goto LABEL_124;
              }
              BOOL v40 = __OFADD__(v32, v45);
              uint64_t v46 = v32 + v45;
              if (v40) {
                goto LABEL_126;
              }
              if (v46 >= v37)
              {
                uint64_t v64 = (uint64_t *)(v27 + 16 * v29);
                uint64_t v66 = *v64;
                uint64_t v65 = v64[1];
                BOOL v40 = __OFSUB__(v65, v66);
                uint64_t v67 = v65 - v66;
                if (v40) {
                  goto LABEL_132;
                }
                BOOL v57 = v32 < v67;
                goto LABEL_76;
              }
            }
            else
            {
              if (v10 != 3)
              {
                uint64_t v58 = *(void *)(v24 + 32);
                uint64_t v59 = *(void *)(v24 + 40);
                BOOL v40 = __OFSUB__(v59, v58);
                uint64_t v51 = v59 - v58;
                char v52 = v40;
                goto LABEL_70;
              }
              uint64_t v31 = *(void *)(v24 + 32);
              uint64_t v30 = *(void *)(v24 + 40);
              BOOL v40 = __OFSUB__(v30, v31);
              uint64_t v32 = v30 - v31;
              char v33 = v40;
            }
            if (v33) {
              goto LABEL_125;
            }
            unint64_t v41 = v10 - 2;
            long long v47 = (uint64_t *)(v27 + 16 * (v10 - 2));
            uint64_t v49 = *v47;
            uint64_t v48 = v47[1];
            BOOL v50 = __OFSUB__(v48, v49);
            uint64_t v51 = v48 - v49;
            char v52 = v50;
            if (v50) {
              goto LABEL_127;
            }
            uint64_t v53 = (uint64_t *)(v27 + 16 * v29);
            uint64_t v55 = *v53;
            uint64_t v54 = v53[1];
            BOOL v40 = __OFSUB__(v54, v55);
            uint64_t v56 = v54 - v55;
            if (v40) {
              goto LABEL_129;
            }
            if (__OFADD__(v51, v56)) {
              goto LABEL_131;
            }
            if (v51 + v56 >= v32)
            {
              BOOL v57 = v32 < v56;
LABEL_76:
              if (v57) {
                unint64_t v29 = v41;
              }
              goto LABEL_78;
            }
LABEL_70:
            if (v52) {
              goto LABEL_128;
            }
            unint64_t v60 = (uint64_t *)(v27 + 16 * v29);
            uint64_t v62 = *v60;
            uint64_t v61 = v60[1];
            BOOL v40 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v40) {
              goto LABEL_130;
            }
            if (v63 < v51) {
              goto LABEL_15;
            }
LABEL_78:
            unint64_t v68 = v29 - 1;
            if (v29 - 1 >= v10)
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            if (!v9) {
              goto LABEL_146;
            }
            uint64_t v69 = (uint64_t *)(v27 + 16 * v68);
            uint64_t v70 = *v69;
            uint64_t v71 = (void *)(v27 + 16 * v29);
            uint64_t v72 = v71[1];
            uint64_t result = sub_1DE8AEE90((double *)(v9 + 112 * *v69), (double *)(v9 + 112 * *v71), v9 + 112 * v72, v143);
            if (v145) {
              goto LABEL_95;
            }
            if (v72 < v70) {
              goto LABEL_119;
            }
            if (v29 > *(void *)(v144 + 16)) {
              goto LABEL_120;
            }
            *uint64_t v69 = v70;
            *(void *)(v27 + 16 * v68 + 8) = v72;
            unint64_t v73 = *(void *)(v144 + 16);
            if (v29 >= v73) {
              goto LABEL_121;
            }
            uint64_t v24 = v144;
            unint64_t v10 = v73 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v27 + 16 * v29), v71 + 2, 16 * (v73 - 1 - v29));
            *(void *)(v144 + 16) = v73 - 1;
            if (v73 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v10 = 1;
LABEL_15:
        uint64_t v3 = v132;
        if (v8 >= v132)
        {
          uint64_t v7 = v130;
          uint64_t result = v144;
          unint64_t v2 = v128;
          goto LABEL_105;
        }
      }
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v143 = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v130 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v10 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t result = MEMORY[0x1E4FBC860];
LABEL_105:
    uint64_t v130 = v7;
    if (v10 >= 2)
    {
      uint64_t v120 = *v2;
      do
      {
        unint64_t v121 = v10 - 2;
        if (v10 < 2) {
          goto LABEL_134;
        }
        if (!v120) {
          goto LABEL_148;
        }
        uint64_t v122 = result;
        uint64_t v123 = *(void *)(result + 32 + 16 * v121);
        uint64_t v124 = *(void *)(result + 32 + 16 * (v10 - 1) + 8);
        uint64_t result = sub_1DE8AEE90((double *)(v120 + 112 * v123), (double *)(v120 + 112 * *(void *)(result + 32 + 16 * (v10 - 1))), v120 + 112 * v124, v143);
        if (v145) {
          break;
        }
        if (v124 < v123) {
          goto LABEL_135;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA510(v122);
          uint64_t v122 = result;
        }
        if (v121 >= *(void *)(v122 + 16)) {
          goto LABEL_136;
        }
        uint64_t v125 = (void *)(v122 + 32 + 16 * v121);
        *uint64_t v125 = v123;
        v125[1] = v124;
        unint64_t v126 = *(void *)(v122 + 16);
        if (v10 > v126) {
          goto LABEL_137;
        }
        memmove((void *)(v122 + 32 + 16 * (v10 - 1)), (const void *)(v122 + 32 + 16 * v10), 16 * (v126 - v10));
        uint64_t result = v122;
        *(void *)(v122 + 16) = v126 - 1;
        unint64_t v10 = v126 - 1;
      }
      while (v126 > 2);
    }
LABEL_95:
    swift_bridgeObjectRelease();
    *(void *)(v130 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE8AE3E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DE8E1A70();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v95 = *a1;
      uint64_t v96 = *a1 + 32;
      uint64_t v97 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v99 = *(double *)(v95 + 40 * i + 32);
        uint64_t v100 = v97;
        uint64_t v101 = v96;
        do
        {
          if (*(double *)v101 >= v99) {
            break;
          }
          if (!v95) {
            goto LABEL_142;
          }
          uint64_t v102 = v101 + 8;
          uint64_t v103 = *(void *)(v101 + 8);
          uint64_t v104 = *(void *)(v101 + 16);
          uint64_t result = *(unsigned __int8 *)(v101 + 24);
          uint64_t v105 = *(void *)(v101 + 32);
          long long v106 = *(_OWORD *)(v101 - 16);
          *(_OWORD *)(v101 + 8) = *(_OWORD *)(v101 - 32);
          *(_OWORD *)(v101 + 24) = v106;
          double v107 = *(double *)v101;
          *(void *)(v101 - 32) = v103;
          *(void *)(v101 - 24) = v104;
          *(unsigned char *)(v101 - 16) = result;
          *(void *)(v101 - 8) = v105;
          *(double *)uint64_t v101 = v99;
          v101 -= 40;
          *(double *)(v102 + 32) = v107;
        }
        while (!__CFADD__(v100++, 1));
        v96 += 40;
        --v97;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    uint64_t v124 = v1;
    long long v117 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      uint64_t v8 = sub_1DE8E15C0();
      *(void *)(v8 + 16) = v7;
      uint64_t v119 = v8;
      uint64_t v123 = (double *)(v8 + 32);
LABEL_13:
      uint64_t v10 = 0;
      uint64_t v11 = *a1;
      uint64_t v118 = *a1 + 112;
      uint64_t v116 = *a1 + 24;
      uint64_t v12 = MEMORY[0x1E4FBC860];
      uint64_t result = 40;
      uint64_t v120 = v6;
      uint64_t v121 = v3;
      uint64_t v122 = v11;
      while (1)
      {
        uint64_t v14 = v10++;
        if (v10 < v3)
        {
          double v15 = *(double *)(v11 + 40 * v10 + 32);
          double v16 = *(double *)(v11 + 40 * v14 + 32);
          uint64_t v10 = v14 + 2;
          if (v14 + 2 < v3)
          {
            uint64_t v17 = (double *)(v118 + 40 * v14);
            double v18 = v15;
            while (1)
            {
              double v19 = v18;
              double v18 = *v17;
              if (v16 < v15 == v19 >= *v17) {
                break;
              }
              ++v10;
              v17 += 5;
              if (v3 == v10)
              {
                uint64_t v10 = v3;
                break;
              }
            }
          }
          if (v16 < v15)
          {
            if (v10 < v14) {
              goto LABEL_139;
            }
            if (v14 < v10)
            {
              uint64_t v20 = 40 * v10;
              uint64_t v21 = 40 * v14;
              uint64_t v22 = v10;
              uint64_t v23 = v14;
              do
              {
                if (v23 != --v22)
                {
                  if (!v11) {
                    goto LABEL_145;
                  }
                  uint64_t v24 = v11 + v21;
                  uint64_t v25 = v11 + v20;
                  uint64_t v26 = *(void *)(v11 + v21);
                  uint64_t v27 = *(void *)(v11 + v21 + 8);
                  char v28 = *(unsigned char *)(v11 + v21 + 16);
                  uint64_t v29 = *(void *)(v11 + v21 + 24);
                  uint64_t v30 = *(void *)(v11 + v21 + 32);
                  uint64_t v31 = *(void *)(v11 + v20 - 8);
                  long long v32 = *(_OWORD *)(v11 + v20 - 24);
                  *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 40);
                  *(_OWORD *)(v24 + 16) = v32;
                  *(void *)(v24 + 32) = v31;
                  *(void *)(v25 - 40) = v26;
                  *(void *)(v25 - 32) = v27;
                  *(unsigned char *)(v25 - 24) = v28;
                  *(void *)(v25 - 16) = v29;
                  *(void *)(v25 - 8) = v30;
                }
                ++v23;
                v20 -= 40;
                v21 += 40;
              }
              while (v23 < v22);
            }
          }
        }
        if (v10 < v3)
        {
          if (__OFSUB__(v10, v14)) {
            goto LABEL_136;
          }
          if (v10 - v14 < v6)
          {
            uint64_t v33 = v14 + v6;
            if (__OFADD__(v14, v6)) {
              goto LABEL_140;
            }
            if (v33 >= v3) {
              uint64_t v33 = v3;
            }
            if (v33 < v14)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v10 != v33)
            {
              uint64_t v34 = v116 + 40 * v10;
              do
              {
                double v35 = *(double *)(v11 + 40 * v10 + 32);
                uint64_t v36 = v14;
                uint64_t v37 = v34;
                do
                {
                  if (*(double *)(v37 - 32) >= v35) {
                    break;
                  }
                  if (!v11) {
                    goto LABEL_143;
                  }
                  uint64_t v38 = v37 - 24;
                  uint64_t v39 = *(void *)(v37 - 32);
                  long long v41 = *(_OWORD *)(v37 - 64);
                  long long v40 = *(_OWORD *)(v37 - 48);
                  *(void *)(v37 - 40) = *(void *)v37;
                  v37 -= 40;
                  uint64_t v42 = *(void *)(v37 + 16);
                  uint64_t v43 = *(void *)(v37 + 24);
                  char v44 = *(unsigned char *)(v37 + 32);
                  *(_OWORD *)uint64_t v38 = v41;
                  *(_OWORD *)(v38 + 16) = v40;
                  *(void *)(v38 + 32) = v39;
                  *(void *)(v37 - 24) = v42;
                  *(void *)(v37 - 16) = v43;
                  *(unsigned char *)(v37 - 8) = v44;
                  *(double *)(v37 + 8) = v35;
                  ++v36;
                }
                while (v10 != v36);
                ++v10;
                v34 += 40;
              }
              while (v10 != v33);
              uint64_t v10 = v33;
            }
          }
        }
        if (v10 < v14) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414(0, *(void *)(v12 + 16) + 1, 1, (char *)v12);
          uint64_t v12 = result;
        }
        unint64_t v46 = *(void *)(v12 + 16);
        unint64_t v45 = *(void *)(v12 + 24);
        unint64_t v13 = v46 + 1;
        uint64_t v11 = v122;
        if (v46 >= v45 >> 1)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414((char *)(v45 > 1), v46 + 1, 1, (char *)v12);
          uint64_t v11 = v122;
          uint64_t v12 = result;
        }
        *(void *)(v12 + 16) = v13;
        uint64_t v47 = v12 + 32;
        uint64_t v48 = (uint64_t *)(v12 + 32 + 16 * v46);
        *uint64_t v48 = v14;
        v48[1] = v10;
        if (v46)
        {
          while (1)
          {
            unint64_t v49 = v13 - 1;
            if (v13 >= 4)
            {
              unint64_t v54 = v47 + 16 * v13;
              uint64_t v55 = *(void *)(v54 - 64);
              uint64_t v56 = *(void *)(v54 - 56);
              BOOL v60 = __OFSUB__(v56, v55);
              uint64_t v57 = v56 - v55;
              if (v60) {
                goto LABEL_120;
              }
              uint64_t v59 = *(void *)(v54 - 48);
              uint64_t v58 = *(void *)(v54 - 40);
              BOOL v60 = __OFSUB__(v58, v59);
              uint64_t v52 = v58 - v59;
              char v53 = v60;
              if (v60) {
                goto LABEL_121;
              }
              unint64_t v61 = v13 - 2;
              uint64_t v62 = (uint64_t *)(v47 + 16 * (v13 - 2));
              uint64_t v64 = *v62;
              uint64_t v63 = v62[1];
              BOOL v60 = __OFSUB__(v63, v64);
              uint64_t v65 = v63 - v64;
              if (v60) {
                goto LABEL_122;
              }
              BOOL v60 = __OFADD__(v52, v65);
              uint64_t v66 = v52 + v65;
              if (v60) {
                goto LABEL_124;
              }
              if (v66 >= v57)
              {
                char v84 = (uint64_t *)(v47 + 16 * v49);
                uint64_t v86 = *v84;
                uint64_t v85 = v84[1];
                BOOL v60 = __OFSUB__(v85, v86);
                uint64_t v87 = v85 - v86;
                if (v60) {
                  goto LABEL_130;
                }
                BOOL v77 = v52 < v87;
                goto LABEL_83;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v78 = *(void *)(v12 + 32);
                uint64_t v79 = *(void *)(v12 + 40);
                BOOL v60 = __OFSUB__(v79, v78);
                uint64_t v71 = v79 - v78;
                char v72 = v60;
                goto LABEL_77;
              }
              uint64_t v51 = *(void *)(v12 + 32);
              uint64_t v50 = *(void *)(v12 + 40);
              BOOL v60 = __OFSUB__(v50, v51);
              uint64_t v52 = v50 - v51;
              char v53 = v60;
            }
            if (v53) {
              goto LABEL_123;
            }
            unint64_t v61 = v13 - 2;
            uint64_t v67 = (uint64_t *)(v47 + 16 * (v13 - 2));
            uint64_t v69 = *v67;
            uint64_t v68 = v67[1];
            BOOL v70 = __OFSUB__(v68, v69);
            uint64_t v71 = v68 - v69;
            char v72 = v70;
            if (v70) {
              goto LABEL_125;
            }
            unint64_t v73 = (uint64_t *)(v47 + 16 * v49);
            uint64_t v75 = *v73;
            uint64_t v74 = v73[1];
            BOOL v60 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v60) {
              goto LABEL_127;
            }
            if (__OFADD__(v71, v76)) {
              goto LABEL_129;
            }
            if (v71 + v76 >= v52)
            {
              BOOL v77 = v52 < v76;
LABEL_83:
              if (v77) {
                unint64_t v49 = v61;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v72) {
              goto LABEL_126;
            }
            char v80 = (uint64_t *)(v47 + 16 * v49);
            uint64_t v82 = *v80;
            uint64_t v81 = v80[1];
            BOOL v60 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v60) {
              goto LABEL_128;
            }
            if (v83 < v71) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v88 = v49 - 1;
            if (v49 - 1 >= v13)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v11) {
              goto LABEL_144;
            }
            uint64_t v89 = v12;
            long long v90 = (uint64_t *)(v47 + 16 * v88);
            uint64_t v91 = *v90;
            long long v92 = (void *)(v47 + 16 * v49);
            uint64_t v93 = v92[1];
            uint64_t result = sub_1DE8AF0DC((double *)(v11 + 40 * *v90), (double *)(v11 + 40 * *v92), v11 + 40 * v93, v123);
            if (v124) {
              goto LABEL_93;
            }
            if (v93 < v91) {
              goto LABEL_117;
            }
            if (v49 > *(void *)(v89 + 16)) {
              goto LABEL_118;
            }
            *long long v90 = v91;
            *(void *)(v47 + 16 * v88 + 8) = v93;
            unint64_t v94 = *(void *)(v89 + 16);
            if (v49 >= v94) {
              goto LABEL_119;
            }
            uint64_t v12 = v89;
            unint64_t v13 = v94 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v47 + 16 * v49), v92 + 2, 16 * (v94 - 1 - v49));
            *(void *)(v89 + 16) = v94 - 1;
            uint64_t v11 = v122;
            if (v94 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_15:
        uint64_t v6 = v120;
        uint64_t v3 = v121;
        uint64_t result = 40;
        if (v10 >= v121)
        {
          uint64_t v9 = v119;
          goto LABEL_103;
        }
      }
    }
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v123 = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v119 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_103:
    uint64_t result = v12;
    uint64_t v119 = v9;
    if (v13 >= 2)
    {
      uint64_t v109 = *v117;
      do
      {
        unint64_t v110 = v13 - 2;
        if (v13 < 2) {
          goto LABEL_132;
        }
        if (!v109) {
          goto LABEL_146;
        }
        uint64_t v111 = result;
        uint64_t v112 = *(void *)(result + 32 + 16 * v110);
        uint64_t v113 = *(void *)(result + 32 + 16 * (v13 - 1) + 8);
        uint64_t result = sub_1DE8AF0DC((double *)(v109 + 40 * v112), (double *)(v109 + 40 * *(void *)(result + 32 + 16 * (v13 - 1))), v109 + 40 * v113, v123);
        if (v124) {
          break;
        }
        if (v113 < v112) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA510(v111);
          uint64_t v111 = result;
        }
        if (v110 >= *(void *)(v111 + 16)) {
          goto LABEL_134;
        }
        long long v114 = (void *)(v111 + 32 + 16 * v110);
        *long long v114 = v112;
        v114[1] = v113;
        unint64_t v115 = *(void *)(v111 + 16);
        if (v13 > v115) {
          goto LABEL_135;
        }
        memmove((void *)(v111 + 32 + 16 * (v13 - 1)), (const void *)(v111 + 32 + 16 * v13), 16 * (v115 - v13));
        uint64_t result = v111;
        *(void *)(v111 + 16) = v115 - 1;
        unint64_t v13 = v115 - 1;
      }
      while (v115 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v119 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE8AEAF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 112 * a3 - 112;
LABEL_5:
    uint64_t v6 = result;
    uint64_t v7 = v5;
    while (1)
    {
      uint64_t v8 = *(void *)(v7 + 208);
      char v9 = *(unsigned char *)(v7 + 216);
      double v10 = v9 ? 0.0 : *(double *)(v7 + 208);
      if (*(unsigned char *)(v7 + 104))
      {
        if (v10 <= 0.0) {
          goto LABEL_4;
        }
      }
      else if (*(double *)(v7 + 96) >= v10)
      {
        goto LABEL_4;
      }
      if (!v4) {
        break;
      }
      uint64_t v11 = v7 + 112;
      uint64_t v12 = *(void *)(v7 + 128);
      uint64_t v13 = *(void *)(v7 + 168);
      char v14 = *(unsigned char *)(v7 + 176);
      char v15 = *(unsigned char *)(v7 + 177);
      char v16 = *(unsigned char *)(v7 + 178);
      char v17 = *(unsigned char *)(v7 + 179);
      char v18 = *(unsigned char *)(v7 + 200);
      long long v19 = *(_OWORD *)(v7 + 136);
      long long v20 = *(_OWORD *)(v7 + 152);
      long long v21 = *(_OWORD *)(v7 + 184);
      long long v22 = *(_OWORD *)(v7 + 80);
      long long v24 = *(_OWORD *)(v7 + 96);
      long long v23 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)(v7 + 176) = *(_OWORD *)(v7 + 64);
      *(_OWORD *)(v7 + 192) = v22;
      *(_OWORD *)(v7 + 208) = v24;
      long long v25 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)(v7 + 112) = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 128) = v25;
      *(_OWORD *)uint64_t v7 = v23;
      long long v27 = *(_OWORD *)(v7 + 32);
      long long v26 = *(_OWORD *)(v7 + 48);
      *(void *)(v7 + 16) = v12;
      *(_OWORD *)(v7 + 24) = v19;
      *(_OWORD *)(v7 + 40) = v20;
      *(void *)(v7 + 56) = v13;
      *(unsigned char *)(v7 + 64) = v14;
      *(unsigned char *)(v7 + 65) = v15;
      *(unsigned char *)(v7 + 66) = v16;
      *(unsigned char *)(v7 + 67) = v17;
      *(_OWORD *)(v7 + 72) = v21;
      *(unsigned char *)(v7 + 88) = v18;
      *(void *)(v7 + 96) = v8;
      *(unsigned char *)(v7 + 104) = v9;
      v7 -= 112;
      ++v6;
      *(_OWORD *)(v11 + 32) = v27;
      *(_OWORD *)(v11 + 48) = v26;
      if (a3 == v6)
      {
LABEL_4:
        ++a3;
        v5 += 112;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DE8AEBFC(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 112;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 112;
  if (v9 >= v11)
  {
    uint64_t v18 = 14 * v11;
    if (a4 != __src || &__src[v18] <= a4) {
      memmove(a4, __src, 112 * v11);
    }
    uint64_t v13 = (char *)&v4[v18];
    if (v7 >= v6 || v10 < 112) {
      goto LABEL_47;
    }
    long long v19 = (char *)(a3 - 112);
    while (1)
    {
      long long v20 = v19 + 112;
      double v21 = *((double *)v13 - 2);
      if (*(v13 - 8)) {
        double v21 = 0.0;
      }
      if (*(unsigned char *)(v6 - 1))
      {
        if (v21 <= 0.0) {
          goto LABEL_33;
        }
      }
      else if (*(v6 - 2) >= v21)
      {
LABEL_33:
        long long v22 = (double *)(v13 - 112);
        if (v20 != v13)
        {
          v13 -= 112;
LABEL_44:
          memmove(v19, v22, 0x70uLL);
          goto LABEL_45;
        }
        BOOL v23 = v19 >= v13;
        v13 -= 112;
        if (v23) {
          goto LABEL_44;
        }
        goto LABEL_45;
      }
      long long v22 = v6 - 14;
      if (v20 != (char *)v6)
      {
        v6 -= 14;
        goto LABEL_44;
      }
      BOOL v23 = v19 >= (char *)v6;
      v6 -= 14;
      if (v23) {
        goto LABEL_44;
      }
LABEL_45:
      if (v6 > v7)
      {
        v19 -= 112;
        if (v13 > (char *)v4) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
  size_t v12 = 14 * v9;
  if (a4 != __dst || &__dst[v12] <= a4) {
    memmove(a4, __dst, v12 * 8);
  }
  uint64_t v13 = (char *)&v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 112)
  {
    while (1)
    {
      double v14 = v6[12];
      if (*((unsigned char *)v6 + 104)) {
        double v14 = 0.0;
      }
      if ((_BYTE)v4[13])
      {
        if (v14 > 0.0) {
          goto LABEL_15;
        }
      }
      else if (v4[12] < v14)
      {
LABEL_15:
        char v17 = v6 + 14;
        char v16 = v6;
        if (v7 == v6 && v7 < v17) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }
      char v15 = (char *)(v4 + 14);
      char v16 = v4;
      char v17 = v6;
      if (v7 == v4)
      {
        v4 += 14;
        if (v7 < (double *)v15) {
          goto LABEL_20;
        }
      }
      else
      {
        v4 += 14;
      }
LABEL_19:
      memmove(v7, v16, 0x70uLL);
LABEL_20:
      v7 += 14;
      if (v4 < (double *)v13)
      {
        uint64_t v6 = v17;
        if ((unint64_t)v17 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_47:
  size_t v24 = 14 * ((v13 - (char *)v4) / 112);
  if (v6 != v4 || v6 >= &v4[v24]) {
    memmove(v6, v4, v24 * 8);
  }
  return 1;
}

uint64_t sub_1DE8AEE90(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 112;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 112;
  if (v9 >= v11)
  {
    uint64_t v17 = 14 * v11;
    if (a4 != __src || &__src[v17] <= a4) {
      memmove(a4, __src, 112 * v11);
    }
    uint64_t v13 = &v4[v17];
    if (v7 >= v6 || v10 < 112) {
      goto LABEL_39;
    }
    uint64_t v18 = (double *)(a3 - 112);
    while (1)
    {
      long long v19 = v18 + 14;
      if (*(v6 - 7) >= *(v13 - 7))
      {
        long long v20 = v13 - 14;
        if (v19 != v13)
        {
          v13 -= 14;
          goto LABEL_36;
        }
        BOOL v21 = v18 >= v13;
        v13 -= 14;
        if (v21) {
          goto LABEL_36;
        }
      }
      else
      {
        long long v20 = v6 - 14;
        if (v19 != v6)
        {
          v6 -= 14;
LABEL_36:
          memmove(v18, v20, 0x70uLL);
          goto LABEL_37;
        }
        BOOL v21 = v18 >= v6;
        v6 -= 14;
        if (v21) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 14;
        if (v13 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  size_t v12 = 14 * v9;
  if (a4 != __dst || &__dst[v12] <= a4) {
    memmove(a4, __dst, v12 * 8);
  }
  uint64_t v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 112)
  {
    while (1)
    {
      if (v4[7] >= v6[7])
      {
        char v16 = v4 + 14;
        char v15 = v4;
        double v14 = v6;
        if (v7 == v4)
        {
          v4 += 14;
          if (v7 < v16) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 14;
        }
      }
      else
      {
        double v14 = v6 + 14;
        char v15 = v6;
        if (v7 == v6 && v7 < v14) {
          goto LABEL_16;
        }
      }
      memmove(v7, v15, 0x70uLL);
LABEL_16:
      v7 += 14;
      if (v4 < v13)
      {
        uint64_t v6 = v14;
        if ((unint64_t)v14 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  size_t v22 = 14 * (((char *)v13 - (char *)v4) / 112);
  if (v6 != v4 || v6 >= &v4[v22]) {
    memmove(v6, v4, v22 * 8);
  }
  return 1;
}

uint64_t sub_1DE8AF0DC(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 40;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 40;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[5 * v11] <= a4) {
      memmove(a4, __src, 40 * v11);
    }
    size_t v12 = &v4[5 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_39;
    }
    unint64_t v18 = a3 - 40;
    while (1)
    {
      long long v19 = (double *)(v18 + 40);
      if (*(v6 - 1) >= *(v12 - 1))
      {
        long long v20 = v12 - 5;
        if (v19 != v12)
        {
          v12 -= 5;
          goto LABEL_36;
        }
        BOOL v21 = v18 >= (unint64_t)v12;
        v12 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
      else
      {
        long long v20 = v6 - 5;
        if (v19 != v6)
        {
          v6 -= 5;
LABEL_36:
          long long v22 = *(_OWORD *)v20;
          long long v23 = *((_OWORD *)v20 + 1);
          *(double *)(v18 + 32) = v20[4];
          *(_OWORD *)unint64_t v18 = v22;
          *(_OWORD *)(v18 + 16) = v23;
          goto LABEL_37;
        }
        BOOL v21 = v18 >= (unint64_t)v6;
        v6 -= 5;
        if (v21) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 40;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[5 * v9] <= a4) {
    memmove(a4, __dst, 40 * v9);
  }
  size_t v12 = &v4[5 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (1)
    {
      if (v4[4] >= v6[4])
      {
        char v15 = v4 + 5;
        double v14 = v4;
        uint64_t v13 = v6;
        if (v7 == v4)
        {
          v4 += 5;
          if (v7 < v15) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 5;
        }
      }
      else
      {
        uint64_t v13 = v6 + 5;
        double v14 = v6;
        if (v7 == v6 && v7 < v13) {
          goto LABEL_16;
        }
      }
      long long v16 = *(_OWORD *)v14;
      long long v17 = *((_OWORD *)v14 + 1);
      v7[4] = v14[4];
      *(_OWORD *)uint64_t v7 = v16;
      *((_OWORD *)v7 + 1) = v17;
LABEL_16:
      v7 += 5;
      if (v4 < v12)
      {
        uint64_t v6 = v13;
        if ((unint64_t)v13 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v24 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x6666666666666667) >> 64;
  uint64_t v25 = (v24 >> 4) + ((unint64_t)v24 >> 63);
  if (v6 != v4 || v6 >= &v4[5 * v25]) {
    memmove(v6, v4, 40 * v25);
  }
  return 1;
}

uint64_t sub_1DE8AF334(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    MEMORY[0x1E01D4C70](v10, -1, -1);
  }
  return v4;
}

unint64_t *sub_1DE8AF4A0(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(unsigned char *)(*(void *)(a3 + 56) + 40 * v12 + 16) == 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_1DE8AF5F8(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if ((*(unsigned char *)(*(void *)(a3 + 56) + 40 * v12 + 16) & 1) == 0)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1DE8CA7C0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1DE8AF74C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1E01D4C90](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1E01D4C90](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1DE8AF7D8(uint64_t a1)
{
  return sub_1DE83A318(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DE8AF7EC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v7) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v3 + 8 * v17);
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v3 + 8 * v8);
      if (!v18)
      {
        int64_t v8 = v17 + 2;
        if (v17 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v3 + 8 * v8);
        if (!v18)
        {
          int64_t v8 = v17 + 3;
          if (v17 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v3 + 8 * v8);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v18 - 1) & v18;
    unint64_t v10 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_6:
    unint64_t v11 = (_OWORD *)(*(void *)(v2 + 48) + 112 * v10);
    long long v13 = v11[1];
    long long v12 = v11[2];
    v21[0] = *v11;
    v21[1] = v13;
    v21[2] = v12;
    long long v15 = v11[4];
    long long v14 = v11[5];
    long long v16 = v11[3];
    *(_OWORD *)&v22[9] = *(_OWORD *)((char *)v11 + 89);
    v21[4] = v15;
    *(_OWORD *)long long v22 = v14;
    v21[3] = v16;
    sub_1DE82F388((uint64_t)v21);
    sub_1DE8AF9C0((uint64_t *)v21, (uint64_t)v20);
    sub_1DE8BDEC4(v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6], v20[7], v20[8], v20[9], v20[10]);
    uint64_t result = sub_1DE8B7FE4((uint64_t)v21);
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v7) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v3 + 8 * v19);
  if (v18)
  {
    int64_t v8 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v3 + 8 * v8);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

double sub_1DE8AF9C0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1DE8E1BA0();
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1DE8E1BD0();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t i = v9 & ~v10;
  uint64_t v12 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v6 + 48);
  long long v14 = (void *)(v13 + 112 * i);
  BOOL v15 = *v14 == v7 && v14[1] == v8;
  if (!v15 && (sub_1DE8E1AC0() & 1) == 0)
  {
    uint64_t v29 = ~v10;
    for (unint64_t i = (i + 1) & v29; ((*(void *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v29)
    {
      uint64_t v30 = (void *)(v13 + 112 * i);
      BOOL v31 = *v30 == v7 && v30[1] == v8;
      if (v31 || (sub_1DE8E1AC0() & 1) != 0) {
        goto LABEL_7;
      }
    }
LABEL_19:
    swift_bridgeObjectRelease();
    double result = 0.0;
    *(_OWORD *)(a2 + 89) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v3;
  uint64_t v32 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DE862EF0();
    uint64_t v17 = v32;
  }
  uint64_t v18 = *(void *)(v17 + 48) + 112 * i;
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = *(void *)(v18 + 56);
  char v21 = *(unsigned char *)(v18 + 64);
  char v22 = *(unsigned char *)(v18 + 65);
  char v23 = *(unsigned char *)(v18 + 66);
  char v24 = *(unsigned char *)(v18 + 67);
  char v25 = *(unsigned char *)(v18 + 88);
  uint64_t v26 = *(void *)(v18 + 96);
  char v27 = *(unsigned char *)(v18 + 104);
  *(_OWORD *)a2 = *(_OWORD *)v18;
  *(void *)(a2 + 16) = v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v18 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v18 + 40);
  *(void *)(a2 + 56) = v20;
  *(unsigned char *)(a2 + 64) = v21;
  *(unsigned char *)(a2 + 65) = v22;
  *(unsigned char *)(a2 + 66) = v23;
  *(unsigned char *)(a2 + 67) = v24;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v18 + 72);
  *(unsigned char *)(a2 + 88) = v25;
  *(void *)(a2 + 96) = v26;
  *(unsigned char *)(a2 + 104) = v27;
  sub_1DE8AFC20(i);
  *uint64_t v3 = v32;
  swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1DE8AFC20(unint64_t result)
{
  unint64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1DE8E16F0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      unint64_t v24 = (v8 + 1) & v7;
      uint64_t v25 = v7;
      do
      {
        int64_t v26 = v2;
        uint64_t v9 = 112 * v6;
        uint64_t v10 = *(void *)(v3 + 48) + 112 * v6;
        uint64_t v12 = *(void *)(v10 + 72);
        unint64_t v11 = *(void *)(v10 + 80);
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v12, v11);
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        swift_bridgeObjectRelease();
        uint64_t v13 = sub_1DE8E1BD0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v14 = v11;
        unint64_t v2 = v26;
        sub_1DE82F470(v12, v14);
        unint64_t v15 = v13 & v25;
        if (v26 >= (uint64_t)v24)
        {
          if (v15 < v24)
          {
            uint64_t v4 = v22;
            uint64_t v3 = v23;
          }
          else
          {
            uint64_t v4 = v22;
            uint64_t v3 = v23;
            if (v26 >= (uint64_t)v15) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v22;
          uint64_t v3 = v23;
          if (v15 >= v24 || v26 >= (uint64_t)v15)
          {
LABEL_12:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (char *)(v16 + 112 * v26);
            uint64_t v18 = (char *)(v16 + v9);
            if (112 * v26 < v9 || v17 >= v18 + 112 || (unint64_t v2 = v6, v26 != v6))
            {
              memmove(v17, v18, 0x70uLL);
              unint64_t v2 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v25;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    double result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void (*sub_1DE8AFEA8(double ***a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5))(uint64_t a1)
{
  uint64_t v10 = (double **)malloc(0x58uLL);
  *a1 = v10;
  v10[8] = (double *)a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v10[9] = (double *)sub_1DE8B01C4(v10);
  v10[10] = (double *)sub_1DE8AFFE8(v10 + 4, a2, a3, a4 & 0x101010101, isUniquelyReferenced_nonNull_native, a5);
  return sub_1DE8AFF74;
}

void sub_1DE8AFF74(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1DE8AFFE8(double **a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6))(uint64_t **a1)
{
  uint64_t v7 = v6;
  unint64_t v14 = (double *)malloc(0x40uLL);
  *a1 = v14;
  *((void *)v14 + 4) = a4;
  *((void *)v14 + 5) = v7;
  v14[3] = a6;
  *((void *)v14 + 1) = a2;
  *((void *)v14 + 2) = a3;
  uint64_t v15 = a4 & 0x101010101;
  uint64_t v16 = *v7;
  unint64_t v18 = sub_1DE821EC8(a2, a3, v15, a6);
  *((unsigned char *)v14 + 56) = v17 & 1;
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    char v22 = v17;
    uint64_t v23 = *(void *)(v16 + 24);
    if (v23 >= v21 && (a5 & 1) != 0)
    {
LABEL_7:
      *((void *)v14 + 6) = v18;
      if (v22)
      {
LABEL_8:
        uint64_t v24 = *(void *)(*(void *)(*v7 + 56) + 8 * v18);
LABEL_12:
        *(void *)unint64_t v14 = v24;
        return sub_1DE8B0160;
      }
LABEL_11:
      uint64_t v24 = 0;
      goto LABEL_12;
    }
    if (v23 >= v21 && (a5 & 1) == 0)
    {
      sub_1DE823218();
      goto LABEL_7;
    }
    sub_1DE82662C(v21, a5 & 1);
    unint64_t v25 = sub_1DE821EC8(a2, a3, v15, a6);
    if ((v22 & 1) == (v26 & 1))
    {
      unint64_t v18 = v25;
      *((void *)v14 + 6) = v25;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  double result = (void (*)(uint64_t **))sub_1DE8E1B40();
  __break(1u);
  return result;
}

void sub_1DE8B0160(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1DE8B0200(*a1, *((unsigned char *)*a1 + 56), (uint64_t *)(*a1)[5], (*a1)[6], (*a1)[1], (*a1)[2], (*a1)[4] & 0x101010101, *((double *)*a1 + 3));
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1DE8B01C4(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1DE8B01F4;
}

uint64_t sub_1DE8B01F4(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1DE8B0200(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v10 = *a1;
  if (*a1)
  {
    uint64_t v12 = (void *)*a3;
    if (a2)
    {
      *(void *)(v12[7] + 8 * a4) = v10;
    }
    else
    {
      sub_1DE82A464(a4, a5, a6, a7 & 0x101010101, v10, v12, a8);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1DE8C996C(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8B02B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 64);
    uint64_t v38 = a1 + 64;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v37 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v38 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v37) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v38 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v37) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v38 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v37) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v38 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_1DE82F204();
                  return v2;
                }
                unint64_t v13 = *(void *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v37) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v38 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      uint64_t v19 = sub_1DE8E1BD0();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1DE8E1AC0() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        char v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1DE8E1AC0() & 1) == 0);
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v30 = *(unsigned char *)(v2 + 32);
    unint64_t v31 = (unint64_t)((1 << v30) + 63) >> 6;
    size_t v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      uint64_t v33 = sub_1DE8B0A3C((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_1DE82F204();
    }
    else
    {
      uint64_t v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      uint64_t v33 = sub_1DE8B0A3C((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_1DE82F204();
      MEMORY[0x1E01D4C70](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1DE8B0728(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v27 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v26[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v26[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      uint64_t v9 = sub_1DE8E1BD0();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1DE8E1AC0() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v28 = v5;
LABEL_19:
          char v20 = *(unsigned char *)(v2 + 32);
          unint64_t v21 = (unint64_t)((1 << v20) + 63) >> 6;
          size_t v22 = 8 * v21;
          if ((v20 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe, v19);
            memcpy((char *)v26 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v22);
            uint64_t v23 = sub_1DE8B0D1C((uint64_t)v26 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), v21, v2, v11, &v27);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            BOOL v24 = (void *)swift_slowAlloc();
            memcpy(v24, (const void *)(v2 + 56), v22);
            uint64_t v23 = sub_1DE8B0D1C((uint64_t)v24, v21, v2, v11, &v27);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1E01D4C70](v24, -1, -1);
          }
          return v23;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          uint64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1DE8E1AC0() & 1) != 0)
          {
            uint64_t v28 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1DE8B0A3C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_1DE8CB490(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v22 = sub_1DE8E1BD0();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        double result = swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1DE8E1AC0() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1DE8E1AC0() & 1) != 0)
          {
            double result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      double result = swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1DE8B0D1C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  unint64_t v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1DE8CB490(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t v14 = sub_1DE8E1BD0();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    uint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1DE8E1AC0() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1DE8E1AC0() & 1) != 0)
        {
          double result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      double result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    double result = swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x1E4FBC870];
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DE8B0F48(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1DE8B0FE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = a2;
  uint64_t v11 = a2 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a2 + 56);
  int64_t v53 = (unint64_t)(v12 + 63) >> 6;
  double v15 = (double)a6;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v48 = v11;
  uint64_t v49 = v10;
  while (v14)
  {
    unint64_t v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v18 = v17 | (v16 << 6);
LABEL_24:
    unint64_t v22 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v18);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    BOOL v25 = *v22 == a3 && v24 == a4;
    if (!v25 && (sub_1DE8E1AC0() & 1) == 0)
    {
      if (sub_1DE8E1AC0())
      {
        uint64_t v50 = a3;
        uint64_t v52 = a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v50 = v23;
        uint64_t v52 = v24;
        swift_bridgeObjectRetain_n();
      }
      sub_1DE8E1490();
      if (!*(void *)(a5 + 16) || (unint64_t v26 = sub_1DE821D84(v50, v52), (v27 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      uint64_t v28 = *(void *)(*(void *)(a5 + 56) + 8 * v26);
      swift_bridgeObjectRelease();
      double v29 = (double)v28 / v15;
      if (*(double *)(a7 + 1392) >= v29)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        uint64_t v11 = v48;
        uint64_t v10 = v49;
      }
      else
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v51 = a1;
        unint64_t v31 = sub_1DE821D84(v23, v24);
        uint64_t v32 = a1[2];
        BOOL v33 = (v30 & 1) == 0;
        uint64_t v34 = v32 + v33;
        if (__OFADD__(v32, v33)) {
          goto LABEL_49;
        }
        if (a1[3] >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            char v46 = v30;
            sub_1DE823068();
            char v30 = v46;
          }
        }
        else
        {
          char v45 = v30;
          sub_1DE826324(v34, isUniquelyReferenced_nonNull_native);
          unint64_t v35 = sub_1DE821D84(v23, v24);
          int v37 = v36 & 1;
          char v30 = v45;
          if ((v45 & 1) != v37) {
            goto LABEL_51;
          }
          unint64_t v31 = v35;
        }
        a1 = v51;
        if (v30)
        {
          *(double *)(v51[7] + 8 * v31) = v29;
        }
        else
        {
          v51[(v31 >> 6) + 8] |= 1 << v31;
          uint64_t v38 = (uint64_t *)(v51[6] + 16 * v31);
          *uint64_t v38 = v23;
          v38[1] = v24;
          *(double *)(v51[7] + 8 * v31) = v29;
          uint64_t v39 = v51[2];
          BOOL v40 = __OFADD__(v39, 1);
          uint64_t v41 = v39 + 1;
          if (v40) {
            goto LABEL_50;
          }
          v51[2] = v41;
          swift_bridgeObjectRetain();
        }
        uint64_t v11 = v48;
        uint64_t v10 = v49;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v19 >= v53) {
    goto LABEL_46;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v19);
  ++v16;
  if (v20) {
    goto LABEL_23;
  }
  int64_t v16 = v19 + 1;
  if (v19 + 1 >= v53) {
    goto LABEL_46;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v16);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v16 = v19 + 2;
  if (v19 + 2 >= v53) {
    goto LABEL_46;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v16);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v16 = v19 + 3;
  if (v19 + 3 >= v53) {
    goto LABEL_46;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v16);
  if (v20)
  {
LABEL_23:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_24;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v53)
  {
LABEL_46:
    swift_release();
    return (uint64_t)a1;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v53) {
      goto LABEL_46;
    }
    unint64_t v20 = *(void *)(v11 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t sub_1DE8B13BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    while (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      if (*(void *)(a3 + 16)) {
        goto LABEL_20;
      }
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v11) {
      goto LABEL_27;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_19:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    if (*(void *)(a3 + 16))
    {
LABEL_20:
      int64_t v19 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DE821D84(v20, v21);
      if (v23)
      {
        uint64_t v25 = *(void *)(*(void *)(a3 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE84E628(a5);
        uint64_t v26 = sub_1DE8B0FE8(MEMORY[0x1E4FBC868], a4, v20, v21, a3, v25, a5);
        sub_1DE850D3C(a5);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1DE829ED0(v26, v20, v21, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease_n();
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_27;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_27;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_27;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_27:
    swift_release();
    return a1;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v13 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_27;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DE8B1614(char *__dst, char *__src, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a4;
  uint64_t v9 = __src;
  unint64_t v10 = __dst;
  int64_t v11 = __src - __dst;
  int64_t v12 = (__src - __dst) / 112;
  unint64_t v115 = a3;
  uint64_t v13 = a3 - __src;
  uint64_t v14 = (a3 - __src) / 112;
  if (v12 >= v14)
  {
    uint64_t v57 = 112 * v14;
    if (a4 != __src || &__src[v57] <= a4) {
      memmove(a4, __src, 112 * v14);
    }
    int64_t v16 = &v8[v57];
    if (v10 >= v9 || v13 < 112) {
      goto LABEL_111;
    }
    double v58 = *(double *)(a7 + 912);
    double v59 = *(double *)(a7 + 920);
    uint64_t v109 = v10;
    uint64_t v111 = v8;
    while (1)
    {
      uint64_t v60 = *((void *)v16 - 8);
      uint64_t v112 = *((void *)v16 - 9);
      long long v114 = v9;
      double v61 = *((double *)v16 - 7);
      double v107 = v16;
      uint64_t v63 = *((void *)v16 - 5);
      unint64_t v62 = *((void *)v16 - 4);
      double v64 = *((double *)v9 - 7);
      uint64_t v65 = *((void *)v9 - 5);
      unint64_t v66 = *((void *)v9 - 4);
      uint64_t v117 = v60;
      uint64_t v119 = *((void *)v9 - 8);
      uint64_t v101 = v63;
      unint64_t v99 = v62;
      uint64_t v105 = *((void *)v9 - 9);
      if (*(void *)(v60 + 16))
      {
        uint64_t v67 = *((void *)v9 - 5);
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v63, v62);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v67, v66);
        sub_1DE8E1480();
        uint64_t v68 = sub_1DE8E1BD0();
        uint64_t v69 = -1 << *(unsigned char *)(v117 + 32);
        unint64_t v70 = v68 & ~v69;
        if ((*(void *)(v117 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70))
        {
          uint64_t v71 = *(void *)(v117 + 48);
          char v72 = (void *)(v71 + 16 * v70);
          BOOL v73 = *v72 == a5 && v72[1] == a6;
          double v74 = v59;
          if (v73) {
            goto LABEL_81;
          }
          char v75 = sub_1DE8E1AC0();
          double v74 = v59;
          if (v75) {
            goto LABEL_81;
          }
          uint64_t v76 = ~v69;
          while (1)
          {
            unint64_t v70 = (v70 + 1) & v76;
            if (((*(void *)(v117 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
              break;
            }
            BOOL v77 = (void *)(v71 + 16 * v70);
            BOOL v78 = *v77 == a5 && v77[1] == a6;
            if (v78 || (sub_1DE8E1AC0() & 1) != 0)
            {
              double v74 = v59;
              goto LABEL_81;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v63, v62);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v65, v66);
      }
      if (sub_1DE83C5AC(a5, a6, v112)) {
        double v74 = v58;
      }
      else {
        double v74 = 1.0;
      }
LABEL_81:
      double v79 = v61 * v74;
      if (*(void *)(v119 + 16))
      {
        sub_1DE8E1BA0();
        sub_1DE8E1480();
        uint64_t v80 = sub_1DE8E1BD0();
        uint64_t v81 = -1 << *(unsigned char *)(v119 + 32);
        unint64_t v82 = v80 & ~v81;
        uint64_t v83 = v119 + 56;
        if ((*(void *)(v119 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82))
        {
          uint64_t v84 = *(void *)(v119 + 48);
          uint64_t v85 = (void *)(v84 + 16 * v82);
          BOOL v86 = *v85 == a5 && v85[1] == a6;
          if (v86 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_101;
          }
          uint64_t v87 = ~v81;
          unint64_t v88 = (v82 + 1) & v87;
          if ((*(void *)(v83 + ((v88 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v88))
          {
            while (1)
            {
              uint64_t v89 = (void *)(v84 + 16 * v88);
              BOOL v90 = *v89 == a5 && v89[1] == a6;
              if (v90 || (sub_1DE8E1AC0() & 1) != 0) {
                break;
              }
              unint64_t v88 = (v88 + 1) & v87;
              if (((*(void *)(v83 + ((v88 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v88) & 1) == 0) {
                goto LABEL_95;
              }
            }
LABEL_101:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v65, v66);
            swift_bridgeObjectRelease();
            uint64_t v8 = v111;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v101, v99);
            double v92 = v59;
            unint64_t v93 = (unint64_t)v109;
            unint64_t v94 = v115 - 112;
            goto LABEL_102;
          }
        }
      }
LABEL_95:
      char v91 = sub_1DE83C5AC(a5, a6, v105);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v65, v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v101, v99);
      double v92 = v58;
      unint64_t v93 = (unint64_t)v109;
      uint64_t v8 = v111;
      unint64_t v94 = v115 - 112;
      if ((v91 & 1) == 0)
      {
        int64_t v16 = v107;
        if (v64 < v79) {
          goto LABEL_103;
        }
        goto LABEL_97;
      }
LABEL_102:
      int64_t v16 = v107;
      if (v64 * v92 < v79)
      {
LABEL_103:
        uint64_t v95 = v9 - 112;
        if (v115 == v9)
        {
          v9 -= 112;
          if (v94 < v114) {
            goto LABEL_109;
          }
        }
        else
        {
          v9 -= 112;
        }
        goto LABEL_108;
      }
LABEL_97:
      uint64_t v95 = v16 - 112;
      if (v115 != v16)
      {
        v16 -= 112;
LABEL_108:
        memmove(v94, v95, 0x70uLL);
        goto LABEL_109;
      }
      BOOL v96 = v94 >= v16;
      v16 -= 112;
      if (v96) {
        goto LABEL_108;
      }
LABEL_109:
      if (v16 > v8)
      {
        unint64_t v115 = v94;
        if ((unint64_t)v9 > v93) {
          continue;
        }
      }
      goto LABEL_111;
    }
  }
  size_t v15 = 112 * v12;
  if (a4 != __dst || &__dst[v15] <= a4) {
    memmove(a4, __dst, v15);
  }
  int64_t v16 = &v8[v15];
  if (v9 < v115 && v11 >= 112)
  {
    double v17 = *(double *)(a7 + 912);
    double v18 = *(double *)(a7 + 920);
    long long v106 = v16;
    while (1)
    {
      uint64_t v108 = v10;
      uint64_t v19 = *((void *)v9 + 6);
      double v20 = *((double *)v9 + 7);
      uint64_t v21 = *((void *)v9 + 9);
      unint64_t v22 = *((void *)v9 + 10);
      uint64_t v113 = v9;
      unint64_t v110 = v8;
      uint64_t v104 = *((void *)v8 + 5);
      uint64_t v116 = *((void *)v9 + 5);
      uint64_t v118 = *((void *)v8 + 6);
      double v23 = *((double *)v8 + 7);
      uint64_t v24 = *((void *)v8 + 9);
      unint64_t v25 = *((void *)v8 + 10);
      __dsta = (void *)v22;
      uint64_t v103 = v21;
      unint64_t v100 = v25;
      if (*(void *)(v19 + 16))
      {
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v21, v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v27 = v24;
        sub_1DE82F404(v24, v25);
        sub_1DE8E1480();
        uint64_t v28 = sub_1DE8E1BD0();
        uint64_t v29 = -1 << *(unsigned char *)(v19 + 32);
        unint64_t v30 = v28 & ~v29;
        if ((*(void *)(v19 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
        {
          uint64_t v31 = *(void *)(v19 + 48);
          uint64_t v32 = (void *)(v31 + 16 * v30);
          BOOL v33 = *v32 == a5 && v32[1] == a6;
          double v34 = v18;
          if (v33) {
            goto LABEL_27;
          }
          char v35 = sub_1DE8E1AC0();
          double v34 = v18;
          if (v35) {
            goto LABEL_27;
          }
          uint64_t v36 = ~v29;
          while (1)
          {
            unint64_t v30 = (v30 + 1) & v36;
            if (((*(void *)(v19 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
              break;
            }
            int v37 = (void *)(v31 + 16 * v30);
            BOOL v38 = *v37 == a5 && v37[1] == a6;
            if (v38 || (sub_1DE8E1AC0() & 1) != 0)
            {
              double v34 = v18;
              goto LABEL_27;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v21, v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v27 = v24;
        sub_1DE82F404(v24, v25);
      }
      if (sub_1DE83C5AC(a5, a6, v116)) {
        double v34 = v17;
      }
      else {
        double v34 = 1.0;
      }
LABEL_27:
      double v39 = v20 * v34;
      if (*(void *)(v118 + 16))
      {
        sub_1DE8E1BA0();
        sub_1DE8E1480();
        uint64_t v40 = sub_1DE8E1BD0();
        uint64_t v41 = -1 << *(unsigned char *)(v118 + 32);
        unint64_t v42 = v40 & ~v41;
        uint64_t v43 = v118 + 56;
        if ((*(void *)(v118 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42))
        {
          uint64_t v44 = *(void *)(v118 + 48);
          char v45 = (void *)(v44 + 16 * v42);
          BOOL v46 = *v45 == a5 && v45[1] == a6;
          if (v46 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_46;
          }
          uint64_t v47 = ~v41;
          unint64_t v48 = (v42 + 1) & v47;
          if ((*(void *)(v43 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48))
          {
            while (1)
            {
              uint64_t v49 = (void *)(v44 + 16 * v48);
              BOOL v50 = *v49 == a5 && v49[1] == a6;
              if (v50 || (sub_1DE8E1AC0() & 1) != 0) {
                break;
              }
              unint64_t v48 = (v48 + 1) & v47;
              if (((*(void *)(v43 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
                goto LABEL_41;
              }
            }
LABEL_46:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v27, v100);
            swift_bridgeObjectRelease();
            uint64_t v8 = v110;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v103, (unint64_t)__dsta);
            double v52 = v18;
            int64_t v53 = v108;
            goto LABEL_47;
          }
        }
      }
LABEL_41:
      char v51 = sub_1DE83C5AC(a5, a6, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v27, v100);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v103, (unint64_t)__dsta);
      double v52 = v17;
      int64_t v53 = v108;
      uint64_t v8 = v110;
      if ((v51 & 1) == 0)
      {
        int64_t v16 = v106;
        if (v23 < v39) {
          goto LABEL_48;
        }
        goto LABEL_43;
      }
LABEL_47:
      int64_t v16 = v106;
      if (v23 * v52 < v39)
      {
LABEL_48:
        uint64_t v56 = v113 + 112;
        uint64_t v55 = v113;
        if (v53 == v113 && v53 < v56) {
          goto LABEL_53;
        }
        goto LABEL_52;
      }
LABEL_43:
      unint64_t v54 = v8 + 112;
      uint64_t v55 = v8;
      uint64_t v56 = v113;
      if (v53 == v8)
      {
        v8 += 112;
        if (v53 < v54) {
          goto LABEL_53;
        }
      }
      else
      {
        v8 += 112;
      }
LABEL_52:
      memmove(v53, v55, 0x70uLL);
LABEL_53:
      unint64_t v10 = v53 + 112;
      if (v8 < v16)
      {
        uint64_t v9 = v56;
        if (v56 < v115) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v9 = v10;
LABEL_111:
  size_t v97 = 112 * ((v16 - v8) / 112);
  if (v9 != v8 || v9 >= &v8[v97]) {
    memmove(v9, v8, v97);
  }
  return 1;
}

uint64_t sub_1DE8B2180(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v77 = result;
  if (a3 != a2)
  {
    uint64_t v78 = *a4;
    double v8 = *(double *)(a7 + 912);
    double v9 = *(double *)(a7 + 920);
LABEL_5:
    uint64_t v76 = a3;
    uint64_t v10 = a3;
    while (1)
    {
      uint64_t v79 = v10;
      int64_t v11 = (long long *)(v78 + 112 * v10);
      double v12 = *((double *)v11 + 7);
      unint64_t v13 = *((void *)v11 + 10);
      uint64_t v14 = *((void *)v11 - 8);
      uint64_t v82 = *((void *)v11 + 9);
      uint64_t v83 = *((void *)v11 - 9);
      double v15 = *((double *)v11 - 7);
      unint64_t v80 = *((void *)v11 - 4);
      uint64_t v81 = *((void *)v11 - 5);
      uint64_t v84 = *((void *)v11 + 6);
      uint64_t v85 = *((void *)v11 + 5);
      if (*(void *)(v84 + 16))
      {
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v82, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v81, v80);
        sub_1DE8E1480();
        uint64_t v16 = sub_1DE8E1BD0();
        uint64_t v17 = -1 << *(unsigned char *)(v84 + 32);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)(v84 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
        {
          uint64_t v19 = *(void *)(v84 + 48);
          double v20 = (void *)(v19 + 16 * v18);
          BOOL v21 = *v20 == a5 && v20[1] == a6;
          double v22 = v9;
          if (v21) {
            goto LABEL_41;
          }
          double v22 = v9;
          if (sub_1DE8E1AC0()) {
            goto LABEL_41;
          }
          uint64_t v23 = ~v17;
          for (unint64_t i = v18 + 1; ; unint64_t i = v25 + 1)
          {
            uint64_t v25 = i & v23;
            if (((*(void *)(v84 + 56 + (((i & v23) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v23)) & 1) == 0) {
              break;
            }
            uint64_t v26 = (void *)(v19 + 16 * v25);
            BOOL v27 = *v26 == a5 && v26[1] == a6;
            if (v27 || (sub_1DE8E1AC0() & 1) != 0)
            {
              double v22 = v9;
              if (*(void *)(v14 + 16)) {
                goto LABEL_42;
              }
              goto LABEL_58;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v82, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v81, v80);
      }
      if (*(void *)(v85 + 16))
      {
        sub_1DE8E1BA0();
        sub_1DE8E1480();
        uint64_t v28 = sub_1DE8E1BD0();
        uint64_t v29 = -1 << *(unsigned char *)(v85 + 32);
        unint64_t v30 = v28 & ~v29;
        if (((*(void *)(v85 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
          double v22 = 1.0;
LABEL_41:
          if (!*(void *)(v14 + 16)) {
            goto LABEL_58;
          }
          goto LABEL_42;
        }
        uint64_t v31 = *(void *)(v85 + 48);
        uint64_t v32 = (void *)(v31 + 16 * v30);
        BOOL v33 = *v32 == a5 && v32[1] == a6;
        double v22 = v8;
        if (v33) {
          goto LABEL_41;
        }
        double v22 = v8;
        if (sub_1DE8E1AC0()) {
          goto LABEL_41;
        }
        uint64_t v34 = ~v29;
        while (1)
        {
          unint64_t v30 = (v30 + 1) & v34;
          if (((*(void *)(v85 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          char v35 = (void *)(v31 + 16 * v30);
          BOOL v36 = *v35 == a5 && v35[1] == a6;
          if (v36 || (sub_1DE8E1AC0() & 1) != 0)
          {
            double v22 = v8;
            if (*(void *)(v14 + 16)) {
              goto LABEL_42;
            }
            goto LABEL_58;
          }
        }
      }
      double v22 = 1.0;
      if (!*(void *)(v14 + 16)) {
        goto LABEL_58;
      }
LABEL_42:
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t v37 = sub_1DE8E1BD0();
      uint64_t v38 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v39 = v37 & ~v38;
      if ((*(void *)(v14 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
      {
        uint64_t v40 = *(void *)(v14 + 48);
        uint64_t v41 = (void *)(v40 + 16 * v39);
        BOOL v42 = *v41 == a5 && v41[1] == a6;
        if (v42 || (sub_1DE8E1AC0() & 1) != 0)
        {
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          double v43 = v9;
          goto LABEL_77;
        }
        uint64_t v44 = ~v38;
        while (1)
        {
          unint64_t v39 = (v39 + 1) & v44;
          if (((*(void *)(v14 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
            break;
          }
          char v45 = (void *)(v40 + 16 * v39);
          BOOL v46 = *v45 == a5 && v45[1] == a6;
          if (v46 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_48;
          }
        }
      }
LABEL_58:
      if (!*(void *)(v83 + 16)
        || (sub_1DE8E1BA0(),
            sub_1DE8E1480(),
            uint64_t v47 = sub_1DE8E1BD0(),
            uint64_t v48 = -1 << *(unsigned char *)(v83 + 32),
            unint64_t v49 = v47 & ~v48,
            uint64_t v50 = v83 + 56,
            ((*(void *)(v83 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0))
      {
LABEL_75:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v43 = 1.0;
        goto LABEL_77;
      }
      uint64_t v51 = *(void *)(v83 + 48);
      double v52 = (void *)(v51 + 16 * v49);
      BOOL v53 = *v52 == a5 && v52[1] == a6;
      if (!v53 && (sub_1DE8E1AC0() & 1) == 0)
      {
        uint64_t v54 = ~v48;
        unint64_t v55 = (v49 + 1) & v54;
        if (((*(void *)(v50 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0) {
          goto LABEL_75;
        }
        while (1)
        {
          uint64_t v56 = (void *)(v51 + 16 * v55);
          BOOL v57 = *v56 == a5 && v56[1] == a6;
          if (v57 || (sub_1DE8E1AC0() & 1) != 0) {
            break;
          }
          unint64_t v55 = (v55 + 1) & v54;
          if (((*(void *)(v50 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0) {
            goto LABEL_75;
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v43 = v8;
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v81, v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DE82F470(v82, v13);
      if (v15 * v43 >= v12 * v22) {
        goto LABEL_4;
      }
      if (!v78)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = v79 - 1;
      long long v58 = *v11;
      double v59 = v11 - 7;
      uint64_t v60 = *((void *)v11 + 2);
      uint64_t v61 = *((void *)v11 + 7);
      char v62 = *((unsigned char *)v11 + 64);
      char v63 = *((unsigned char *)v11 + 65);
      char v64 = *((unsigned char *)v11 + 66);
      char v65 = *((unsigned char *)v11 + 67);
      char v66 = *((unsigned char *)v11 + 88);
      uint64_t v67 = *((void *)v11 + 12);
      char v68 = *((unsigned char *)v11 + 104);
      long long v69 = *(long long *)((char *)v11 + 24);
      long long v70 = *(long long *)((char *)v11 + 40);
      long long v71 = *(long long *)((char *)v11 + 72);
      long long v72 = *(v11 - 2);
      v11[4] = *(v11 - 3);
      v11[5] = v72;
      v11[6] = *(v11 - 1);
      long long v73 = *(v11 - 6);
      *int64_t v11 = *(v11 - 7);
      v11[1] = v73;
      long long v74 = *(v11 - 4);
      void v11[2] = *(v11 - 5);
      v11[3] = v74;
      *double v59 = v58;
      *((void *)v59 + 2) = v60;
      *(long long *)((char *)v59 + 24) = v69;
      *(long long *)((char *)v59 + 40) = v70;
      *((void *)v59 + 7) = v61;
      *((unsigned char *)v59 + 64) = v62;
      *((unsigned char *)v59 + 65) = v63;
      *((unsigned char *)v59 + 66) = v64;
      *((unsigned char *)v59 + 67) = v65;
      *(long long *)((char *)v59 + 72) = v71;
      *((unsigned char *)v59 + 88) = v66;
      *((void *)v59 + 12) = v67;
      *((unsigned char *)v59 + 104) = v68;
      if (v79 - 1 == v77)
      {
LABEL_4:
        a3 = v76 + 1;
        if (v76 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1DE8B28C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain();
  sub_1DE84E628(a4);
  swift_bridgeObjectRetain();
  sub_1DE84E628(a4);
  uint64_t v287 = a3;
  swift_bridgeObjectRetain();
  sub_1DE84E628(a4);
  uint64_t v9 = sub_1DE8E1A70();
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_303;
    }
    if (v8)
    {
      swift_bridgeObjectRetain();
      sub_1DE84E628(a4);
      sub_1DE8B2180(0, v8, 1, a1, a2, a3, a4);
      sub_1DE850D3C(a4);
      goto LABEL_277;
    }
LABEL_278:
    swift_bridgeObjectRelease();
    sub_1DE850D3C(a4);
    swift_bridgeObjectRelease();
    sub_1DE850D3C(a4);
    swift_bridgeObjectRelease();
    return sub_1DE850D3C(a4);
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_302;
  }
  uint64_t v248 = a4;
  uint64_t v254 = a2;
  uint64_t v244 = v8;
  uint64_t v242 = v9;
  uint64_t v240 = a1;
  if (v8 <= 1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    unint64_t v245 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v8 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v16 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_265;
    }
    uint64_t v241 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v11 = v10 >> 1;
    uint64_t v12 = sub_1DE8E15C0();
    *(void *)(v12 + 16) = v11;
    uint64_t v241 = v12;
    unint64_t v245 = (char *)(v12 + 32);
  }
  uint64_t v14 = 0;
  uint64_t v15 = *a1;
  uint64_t v16 = (char *)MEMORY[0x1E4FBC860];
  double v17 = 1.0;
  uint64_t v18 = v244;
  uint64_t v253 = *a1;
LABEL_16:
  uint64_t v20 = v14 + 1;
  uint64_t v249 = v16;
  uint64_t v252 = v14;
  if (v14 + 1 >= v18)
  {
    uint64_t v37 = v248;
    goto LABEL_112;
  }
  uint64_t v21 = v15 + 112 * v20;
  uint64_t v22 = *(void *)(v21 + 48);
  uint64_t v282 = *(void *)(v21 + 40);
  double v23 = *(double *)(v21 + 56);
  uint64_t v24 = *(void *)(v21 + 72);
  unint64_t v25 = *(void *)(v21 + 80);
  uint64_t v26 = v15 + 112 * v14;
  uint64_t v27 = *(void *)(v26 + 40);
  uint64_t v257 = *(void *)(v26 + 48);
  double v28 = *(double *)(v26 + 56);
  uint64_t v30 = *(void *)(v26 + 72);
  unint64_t v29 = *(void *)(v26 + 80);
  double v31 = *(double *)(v248 + 912);
  double v32 = *(double *)(v248 + 920);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE82F404(v24, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v30;
  sub_1DE82F404(v30, v29);
  double v35 = v32;
  if ((sub_1DE83C5AC(v254, v287, v22) & 1) == 0)
  {
    if (sub_1DE83C5AC(v254, v287, v282)) {
      double v35 = v31;
    }
    else {
      double v35 = v17;
    }
  }
  if (sub_1DE83C5AC(v254, v287, v257))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v30, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v24, v25);
    double v36 = v32;
  }
  else
  {
    char v38 = sub_1DE83C5AC(v254, v287, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v34, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v24, v25);
    if (v38) {
      double v36 = v31;
    }
    else {
      double v36 = v17;
    }
  }
  uint64_t v37 = v248;
  uint64_t v16 = v249;
  double v39 = v23 * v35;
  double v40 = v28 * v36;
  uint64_t v15 = v253;
  uint64_t v41 = v14 + 2;
  uint64_t v42 = v14 + 1;
  if (v14 + 2 >= v244) {
    goto LABEL_102;
  }
  while (1)
  {
    uint64_t v263 = v41;
    uint64_t v43 = v15 + 112 * v41;
    uint64_t v45 = *(void *)(v43 + 40);
    uint64_t v44 = *(void *)(v43 + 48);
    double v46 = *(double *)(v43 + 56);
    uint64_t v47 = *(void *)(v43 + 72);
    unint64_t v48 = *(void *)(v43 + 80);
    uint64_t v49 = v15 + 112 * v42;
    uint64_t v273 = v45;
    uint64_t v270 = *(void *)(v49 + 48);
    double v50 = *(double *)(v49 + 56);
    uint64_t v267 = *(void *)(v49 + 72);
    unint64_t v265 = *(void *)(v49 + 80);
    unint64_t v258 = v48;
    uint64_t v255 = *(void *)(v49 + 40);
    if (*(void *)(v44 + 16))
    {
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v47, v48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v51 = v270;
      swift_bridgeObjectRetain();
      uint64_t v52 = v267;
      unint64_t v53 = v265;
      sub_1DE82F404(v267, v265);
      sub_1DE8E1480();
      uint64_t v54 = sub_1DE8E1BD0();
      uint64_t v55 = -1 << *(unsigned char *)(v44 + 32);
      unint64_t v56 = v54 & ~v55;
      if ((*(void *)(v44 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56))
      {
        uint64_t v57 = *(void *)(v44 + 48);
        long long v58 = (void *)(v57 + 16 * v56);
        BOOL v59 = *v58 == v254 && v58[1] == v287;
        if (v59 || (sub_1DE8E1AC0() & 1) != 0)
        {
LABEL_35:
          double v60 = v32;
          goto LABEL_45;
        }
        uint64_t v74 = ~v55;
        while (1)
        {
          unint64_t v56 = (v56 + 1) & v74;
          if (((*(void *)(v44 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) == 0) {
            break;
          }
          char v75 = (void *)(v57 + 16 * v56);
          BOOL v76 = *v75 == v254 && v75[1] == v287;
          if (v76 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v47, v48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v51 = v270;
      swift_bridgeObjectRetain();
      uint64_t v52 = v267;
      unint64_t v53 = v265;
      sub_1DE82F404(v267, v265);
    }
    double v60 = 1.0;
    if (*(void *)(v273 + 16))
    {
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t v61 = sub_1DE8E1BD0();
      uint64_t v62 = -1 << *(unsigned char *)(v273 + 32);
      unint64_t v63 = v61 & ~v62;
      if ((*(void *)(v273 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63))
      {
        uint64_t v64 = *(void *)(v273 + 48);
        char v65 = (void *)(v64 + 16 * v63);
        BOOL v66 = *v65 == v254 && v65[1] == v287;
        if (v66 || (sub_1DE8E1AC0() & 1) != 0)
        {
LABEL_44:
          double v60 = v31;
        }
        else
        {
          uint64_t v86 = ~v62;
          while (1)
          {
            unint64_t v63 = (v63 + 1) & v86;
            if (((*(void *)(v273 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0) {
              break;
            }
            uint64_t v87 = (void *)(v64 + 16 * v63);
            BOOL v88 = *v87 == v254 && v87[1] == v287;
            if (v88 || (sub_1DE8E1AC0() & 1) != 0) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_45:
    if (*(void *)(v51 + 16))
    {
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t v67 = sub_1DE8E1BD0();
      uint64_t v68 = -1 << *(unsigned char *)(v51 + 32);
      unint64_t v69 = v67 & ~v68;
      if ((*(void *)(v51 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69))
      {
        uint64_t v70 = *(void *)(v51 + 48);
        long long v71 = (void *)(v70 + 16 * v69);
        BOOL v72 = *v71 == v254 && v71[1] == v287;
        if (v72 || (sub_1DE8E1AC0() & 1) != 0)
        {
LABEL_52:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          double v73 = v32;
          goto LABEL_80;
        }
        uint64_t v77 = ~v68;
        while (1)
        {
          unint64_t v69 = (v69 + 1) & v77;
          if (((*(void *)(v51 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0) {
            break;
          }
          uint64_t v78 = (void *)(v70 + 16 * v69);
          BOOL v79 = *v78 == v254 && v78[1] == v287;
          if (v79 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_52;
          }
        }
      }
    }
    if (*(void *)(v255 + 16)
      && (sub_1DE8E1BA0(),
          sub_1DE8E1480(),
          uint64_t v80 = sub_1DE8E1BD0(),
          uint64_t v81 = -1 << *(unsigned char *)(v255 + 32),
          unint64_t v82 = v80 & ~v81,
          ((*(void *)(v255 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82) & 1) != 0))
    {
      uint64_t v83 = *(void *)(v255 + 48);
      uint64_t v84 = (void *)(v83 + 16 * v82);
      BOOL v85 = *v84 == v254 && v84[1] == v287;
      if (v85 || (sub_1DE8E1AC0() & 1) != 0)
      {
LABEL_78:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v73 = v31;
      }
      else
      {
        uint64_t v89 = ~v81;
        while (1)
        {
          unint64_t v82 = (v82 + 1) & v89;
          if (((*(void *)(v255 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82) & 1) == 0) {
            break;
          }
          BOOL v90 = (void *)(v83 + 16 * v82);
          BOOL v91 = *v90 == v254 && v90[1] == v287;
          if (v91 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_78;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v73 = 1.0;
      }
      uint64_t v52 = v267;
      unint64_t v53 = v265;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v73 = 1.0;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v52, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(v47, v258);
    uint64_t v16 = v249;
    if (v40 < v39 == v50 * v73 >= v46 * v60) {
      break;
    }
    uint64_t v42 = v41++;
    uint64_t v37 = v248;
    uint64_t v15 = v253;
    if (v263 + 1 == v244)
    {
      uint64_t v41 = v244;
      goto LABEL_101;
    }
  }
  uint64_t v37 = v248;
  uint64_t v15 = v253;
LABEL_101:
  double v17 = 1.0;
  uint64_t v14 = v252;
LABEL_102:
  if (v40 >= v39) {
    goto LABEL_110;
  }
  if (v41 < v14) {
    goto LABEL_304;
  }
  if (v14 >= v41)
  {
LABEL_110:
    uint64_t v20 = v41;
  }
  else
  {
    uint64_t v92 = 112 * v41;
    uint64_t v264 = v41;
    uint64_t v93 = v14;
    uint64_t v94 = 112 * v14;
    do
    {
      if (v93 != --v41)
      {
        if (!v15) {
          goto LABEL_309;
        }
        long long v268 = *(_OWORD *)(v15 + v94);
        uint64_t v95 = v15 + v92;
        uint64_t v96 = *(void *)(v15 + v94 + 16);
        uint64_t v97 = *(void *)(v15 + v94 + 56);
        char v98 = *(unsigned char *)(v15 + v94 + 64);
        char v99 = *(unsigned char *)(v15 + v94 + 65);
        char v100 = *(unsigned char *)(v15 + v94 + 66);
        char v271 = *(unsigned char *)(v15 + v94 + 67);
        char v283 = *(unsigned char *)(v15 + v94 + 88);
        __srca = *(void **)(v15 + v94 + 96);
        char v274 = *(unsigned char *)(v15 + v94 + 104);
        long long v261 = *(_OWORD *)(v15 + v94 + 40);
        long long v262 = *(_OWORD *)(v15 + v94 + 24);
        long long v266 = *(_OWORD *)(v15 + v94 + 72);
        memmove((void *)(v15 + v94), (const void *)(v15 + v92 - 112), 0x70uLL);
        uint64_t v15 = v253;
        *(_OWORD *)(v95 - 112) = v268;
        *(void *)(v95 - 96) = v96;
        *(_OWORD *)(v95 - 88) = v262;
        *(_OWORD *)(v95 - 72) = v261;
        *(void *)(v95 - 56) = v97;
        *(unsigned char *)(v95 - 48) = v98;
        *(unsigned char *)(v95 - 47) = v99;
        *(unsigned char *)(v95 - 46) = v100;
        *(unsigned char *)(v95 - 45) = v271;
        *(_OWORD *)(v95 - 40) = v266;
        *(unsigned char *)(v95 - 24) = v283;
        *(void *)(v95 - 16) = __srca;
        *(unsigned char *)(v95 - 8) = v274;
        uint64_t v16 = v249;
      }
      ++v93;
      v92 -= 112;
      v94 += 112;
    }
    while (v93 < v41);
    uint64_t v20 = v264;
    uint64_t v37 = v248;
    uint64_t v14 = v252;
  }
LABEL_112:
  if (v20 >= v244) {
    goto LABEL_213;
  }
  if (__OFSUB__(v20, v14)) {
    goto LABEL_301;
  }
  if (v20 - v14 >= v242) {
    goto LABEL_213;
  }
  uint64_t v101 = v14 + v242;
  if (__OFADD__(v14, v242)) {
    goto LABEL_305;
  }
  if (v101 >= v244) {
    uint64_t v101 = v244;
  }
  if (v101 >= v14)
  {
    if (v20 == v101) {
      goto LABEL_213;
    }
    double v102 = *(double *)(v37 + 912);
    double v103 = *(double *)(v37 + 920);
    uint64_t v243 = v101;
LABEL_123:
    uint64_t v246 = v20;
    uint64_t v104 = v20;
    while (2)
    {
      uint64_t v256 = v104;
      uint64_t v105 = v15 + 112 * v104;
      uint64_t v106 = *(void *)(v105 + 48);
      double v107 = *(double *)(v105 + 56);
      uint64_t v108 = *(void *)(v105 + 72);
      unint64_t v109 = *(void *)(v105 + 80);
      uint64_t v269 = *(void *)(v105 - 72);
      double v110 = *(double *)(v105 - 56);
      uint64_t v272 = *(void *)(v105 - 40);
      uint64_t v275 = *(void *)(v105 - 64);
      unint64_t v284 = *(void *)(v105 - 32);
      __src = *(void **)(v105 + 40);
      uint64_t v260 = v108;
      unint64_t v259 = v109;
      if (*(void *)(v106 + 16))
      {
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v108, v109);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v272, v284);
        sub_1DE8E1480();
        uint64_t v111 = sub_1DE8E1BD0();
        uint64_t v112 = -1 << *(unsigned char *)(v106 + 32);
        unint64_t v113 = v111 & ~v112;
        uint64_t v114 = v106 + 56;
        if ((*(void *)(v106 + 56 + ((v113 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v113))
        {
          uint64_t v115 = *(void *)(v106 + 48);
          uint64_t v116 = (void *)(v115 + 16 * v113);
          if (*v116 != v254 || v116[1] != v287)
          {
            uint64_t v118 = v254;
            if (sub_1DE8E1AC0())
            {
              double v119 = v103;
              goto LABEL_144;
            }
            uint64_t v129 = ~v112;
            unint64_t v130 = (v113 + 1) & v129;
            unint64_t v120 = v284;
            if (((*(void *)(v114 + ((v130 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v130) & 1) == 0) {
              break;
            }
            while (1)
            {
              uint64_t v131 = (void *)(v115 + 16 * v130);
              BOOL v132 = *v131 == v254 && v131[1] == v287;
              if (v132 || (sub_1DE8E1AC0() & 1) != 0) {
                break;
              }
              unint64_t v130 = (v130 + 1) & v129;
              if (((*(void *)(v114 + ((v130 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v130) & 1) == 0) {
                goto LABEL_134;
              }
            }
            double v119 = v103;
LABEL_164:
            uint64_t v128 = v275;
LABEL_165:
            if (*(void *)(v128 + 16)) {
              goto LABEL_166;
            }
LABEL_174:
            uint64_t v145 = v272;
            if (!*(void *)(v269 + 16))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              double v144 = 1.0;
              goto LABEL_187;
            }
            sub_1DE8E1BA0();
            sub_1DE8E1480();
            uint64_t v146 = sub_1DE8E1BD0();
            uint64_t v147 = -1 << *(unsigned char *)(v269 + 32);
            unint64_t v148 = v146 & ~v147;
            uint64_t v149 = v269 + 56;
            if (((*(void *)(v269 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v148) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              double v144 = 1.0;
              goto LABEL_186;
            }
            uint64_t v150 = *(void *)(v269 + 48);
            unint64_t v151 = (void *)(v150 + 16 * v148);
            BOOL v152 = *v151 == v118 && v151[1] == v287;
            if (!v152 && (sub_1DE8E1AC0() & 1) == 0)
            {
              uint64_t v174 = ~v147;
              unint64_t v175 = (v148 + 1) & v174;
              unint64_t v120 = v284;
              if ((*(void *)(v149 + ((v175 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v175))
              {
                while (1)
                {
                  uint64_t v176 = (void *)(v150 + 16 * v175);
                  BOOL v177 = *v176 == v118 && v176[1] == v287;
                  if (v177 || (sub_1DE8E1AC0() & 1) != 0) {
                    break;
                  }
                  unint64_t v175 = (v175 + 1) & v174;
                  if (((*(void *)(v149 + ((v175 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v175) & 1) == 0) {
                    goto LABEL_206;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                double v144 = v102;
              }
              else
              {
LABEL_206:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                double v144 = 1.0;
              }
LABEL_209:
              uint64_t v145 = v272;
              goto LABEL_187;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            double v144 = v102;
LABEL_185:
            uint64_t v145 = v272;
LABEL_186:
            unint64_t v120 = v284;
LABEL_187:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v145, v120);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DE82F470(v260, v259);
            uint64_t v14 = v252;
            if (v110 * v144 < v107 * v119)
            {
              uint64_t v15 = v253;
              if (!v253) {
                goto LABEL_307;
              }
              --v104;
              long long v153 = *(_OWORD *)v105;
              uint64_t v154 = v105 - 112;
              uint64_t v155 = *(void *)(v105 + 16);
              uint64_t v156 = *(void *)(v105 + 56);
              char v157 = *(unsigned char *)(v105 + 64);
              char v158 = *(unsigned char *)(v105 + 65);
              char v159 = *(unsigned char *)(v105 + 66);
              char v160 = *(unsigned char *)(v105 + 67);
              char v161 = *(unsigned char *)(v105 + 88);
              uint64_t v162 = *(void *)(v105 + 96);
              char v163 = *(unsigned char *)(v105 + 104);
              long long v164 = *(_OWORD *)(v105 + 24);
              long long v165 = *(_OWORD *)(v105 + 40);
              long long v166 = *(_OWORD *)(v105 + 72);
              long long v167 = *(_OWORD *)(v105 - 32);
              *(_OWORD *)(v105 + 64) = *(_OWORD *)(v105 - 48);
              *(_OWORD *)(v105 + 80) = v167;
              *(_OWORD *)(v105 + 96) = *(_OWORD *)(v105 - 16);
              long long v168 = *(_OWORD *)(v105 - 96);
              *(_OWORD *)uint64_t v105 = *(_OWORD *)(v105 - 112);
              *(_OWORD *)(v105 + 16) = v168;
              long long v169 = *(_OWORD *)(v105 - 64);
              *(_OWORD *)(v105 + 32) = *(_OWORD *)(v105 - 80);
              *(_OWORD *)(v105 + 48) = v169;
              *(_OWORD *)uint64_t v154 = v153;
              *(void *)(v154 + 16) = v155;
              *(_OWORD *)(v154 + 24) = v164;
              *(_OWORD *)(v154 + 40) = v165;
              *(void *)(v154 + 56) = v156;
              *(unsigned char *)(v154 + 64) = v157;
              *(unsigned char *)(v154 + 65) = v158;
              *(unsigned char *)(v154 + 66) = v159;
              *(unsigned char *)(v154 + 67) = v160;
              *(_OWORD *)(v154 + 72) = v166;
              *(unsigned char *)(v154 + 88) = v161;
              *(void *)(v154 + 96) = v162;
              *(unsigned char *)(v154 + 104) = v163;
              if (v256 - 1 == v252) {
                goto LABEL_122;
              }
              continue;
            }
            uint64_t v15 = v253;
LABEL_122:
            uint64_t v20 = v246 + 1;
            if (v246 + 1 != v243) {
              goto LABEL_123;
            }
            uint64_t v20 = v243;
            uint64_t v16 = v249;
LABEL_213:
            if (v20 < v14) {
              goto LABEL_296;
            }
            uint64_t v178 = v16;
            uint64_t v247 = v20;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v16 = v178;
            }
            else {
              uint64_t v16 = sub_1DE8CA414(0, *((void *)v178 + 2) + 1, 1, v178);
            }
            unint64_t v180 = *((void *)v16 + 2);
            unint64_t v179 = *((void *)v16 + 3);
            unint64_t v19 = v180 + 1;
            uint64_t v15 = v253;
            if (v180 >= v179 >> 1)
            {
              uint64_t v230 = sub_1DE8CA414((char *)(v179 > 1), v180 + 1, 1, v16);
              uint64_t v15 = v253;
              uint64_t v16 = v230;
            }
            *((void *)v16 + 2) = v19;
            v276 = v16 + 32;
            uint64_t v181 = &v16[16 * v180 + 32];
            *(void *)uint64_t v181 = v14;
            *((void *)v181 + 1) = v247;
            if (v180)
            {
              uint64_t v182 = v16 + 32;
              uint64_t v250 = v16;
              while (1)
              {
                unint64_t v183 = v19 - 1;
                if (v19 >= 4)
                {
                  uint64_t v188 = &v182[16 * v19];
                  uint64_t v189 = *((void *)v188 - 8);
                  uint64_t v190 = *((void *)v188 - 7);
                  BOOL v194 = __OFSUB__(v190, v189);
                  uint64_t v191 = v190 - v189;
                  if (v194) {
                    goto LABEL_285;
                  }
                  uint64_t v193 = *((void *)v188 - 6);
                  uint64_t v192 = *((void *)v188 - 5);
                  BOOL v194 = __OFSUB__(v192, v193);
                  uint64_t v186 = v192 - v193;
                  char v187 = v194;
                  if (v194) {
                    goto LABEL_286;
                  }
                  unint64_t v195 = v19 - 2;
                  uint64_t v196 = &v182[16 * v19 - 32];
                  uint64_t v198 = *(void *)v196;
                  uint64_t v197 = *((void *)v196 + 1);
                  BOOL v194 = __OFSUB__(v197, v198);
                  uint64_t v199 = v197 - v198;
                  if (v194) {
                    goto LABEL_287;
                  }
                  BOOL v194 = __OFADD__(v186, v199);
                  uint64_t v200 = v186 + v199;
                  if (v194) {
                    goto LABEL_289;
                  }
                  if (v200 >= v191)
                  {
                    v218 = &v182[16 * v183];
                    uint64_t v220 = *(void *)v218;
                    uint64_t v219 = *((void *)v218 + 1);
                    BOOL v194 = __OFSUB__(v219, v220);
                    uint64_t v221 = v219 - v220;
                    if (v194) {
                      goto LABEL_295;
                    }
                    BOOL v211 = v186 < v221;
                    goto LABEL_251;
                  }
                }
                else
                {
                  if (v19 != 3)
                  {
                    uint64_t v212 = *((void *)v16 + 4);
                    uint64_t v213 = *((void *)v16 + 5);
                    BOOL v194 = __OFSUB__(v213, v212);
                    uint64_t v205 = v213 - v212;
                    char v206 = v194;
                    goto LABEL_245;
                  }
                  uint64_t v185 = *((void *)v16 + 4);
                  uint64_t v184 = *((void *)v16 + 5);
                  BOOL v194 = __OFSUB__(v184, v185);
                  uint64_t v186 = v184 - v185;
                  char v187 = v194;
                }
                if (v187) {
                  goto LABEL_288;
                }
                unint64_t v195 = v19 - 2;
                uint64_t v201 = &v182[16 * v19 - 32];
                uint64_t v203 = *(void *)v201;
                uint64_t v202 = *((void *)v201 + 1);
                BOOL v204 = __OFSUB__(v202, v203);
                uint64_t v205 = v202 - v203;
                char v206 = v204;
                if (v204) {
                  goto LABEL_290;
                }
                uint64_t v207 = &v182[16 * v183];
                uint64_t v209 = *(void *)v207;
                uint64_t v208 = *((void *)v207 + 1);
                BOOL v194 = __OFSUB__(v208, v209);
                uint64_t v210 = v208 - v209;
                if (v194) {
                  goto LABEL_292;
                }
                if (__OFADD__(v205, v210)) {
                  goto LABEL_294;
                }
                if (v205 + v210 >= v186)
                {
                  BOOL v211 = v186 < v210;
LABEL_251:
                  if (v211) {
                    unint64_t v183 = v195;
                  }
                  goto LABEL_253;
                }
LABEL_245:
                if (v206) {
                  goto LABEL_291;
                }
                uint64_t v214 = &v182[16 * v183];
                uint64_t v216 = *(void *)v214;
                uint64_t v215 = *((void *)v214 + 1);
                BOOL v194 = __OFSUB__(v215, v216);
                uint64_t v217 = v215 - v216;
                if (v194) {
                  goto LABEL_293;
                }
                if (v217 < v205) {
                  goto LABEL_15;
                }
LABEL_253:
                unint64_t v222 = v183 - 1;
                if (v183 - 1 >= v19)
                {
                  __break(1u);
LABEL_282:
                  __break(1u);
LABEL_283:
                  __break(1u);
LABEL_284:
                  __break(1u);
LABEL_285:
                  __break(1u);
LABEL_286:
                  __break(1u);
LABEL_287:
                  __break(1u);
LABEL_288:
                  __break(1u);
LABEL_289:
                  __break(1u);
LABEL_290:
                  __break(1u);
LABEL_291:
                  __break(1u);
LABEL_292:
                  __break(1u);
LABEL_293:
                  __break(1u);
LABEL_294:
                  __break(1u);
LABEL_295:
                  __break(1u);
LABEL_296:
                  __break(1u);
LABEL_297:
                  __break(1u);
LABEL_298:
                  __break(1u);
LABEL_299:
                  __break(1u);
LABEL_300:
                  __break(1u);
LABEL_301:
                  __break(1u);
LABEL_302:
                  __break(1u);
LABEL_303:
                  __break(1u);
LABEL_304:
                  __break(1u);
LABEL_305:
                  __break(1u);
                  goto LABEL_306;
                }
                if (!v15) {
                  goto LABEL_308;
                }
                uint64_t v223 = &v182[16 * v222];
                uint64_t v224 = *(void *)v223;
                unint64_t v225 = v183;
                v226 = &v182[16 * v183];
                uint64_t v227 = *((void *)v226 + 1);
                uint64_t v228 = (char *)(v15 + 112 * *(void *)v223);
                v285 = (char *)(v15 + 112 * *(void *)v226);
                __srcb = (char *)(v15 + 112 * v227);
                swift_bridgeObjectRetain();
                a4 = v248;
                sub_1DE84E628(v248);
                sub_1DE8B1614(v228, v285, __srcb, v245, v254, v287, v248);
                if (v251)
                {
LABEL_262:
                  sub_1DE850D3C(a4);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(void *)(v241 + 16) = 0;
                  goto LABEL_277;
                }
                sub_1DE850D3C(v248);
                swift_bridgeObjectRelease();
                if (v227 < v224) {
                  goto LABEL_282;
                }
                if (v225 > *((void *)v250 + 2)) {
                  goto LABEL_283;
                }
                *(void *)uint64_t v223 = v224;
                uint64_t v182 = v276;
                *(void *)&v276[16 * v222 + 8] = v227;
                unint64_t v229 = *((void *)v250 + 2);
                if (v225 >= v229) {
                  goto LABEL_284;
                }
                unint64_t v19 = v229 - 1;
                memmove(v226, v226 + 16, 16 * (v229 - 1 - v225));
                uint64_t v16 = v250;
                *((void *)v250 + 2) = v229 - 1;
                uint64_t v15 = v253;
                if (v229 <= 2) {
                  goto LABEL_15;
                }
              }
            }
            unint64_t v19 = 1;
LABEL_15:
            uint64_t v18 = v244;
            uint64_t v14 = v247;
            if (v247 < v244) {
              goto LABEL_16;
            }
            uint64_t v13 = v241;
LABEL_265:
            uint64_t v241 = v13;
            if (v19 >= 2)
            {
              uint64_t v231 = *v240;
              uint64_t v277 = *v240;
              do
              {
                unint64_t v232 = v19 - 2;
                if (v19 < 2) {
                  goto LABEL_297;
                }
                if (!v231) {
                  goto LABEL_310;
                }
                int v233 = v16;
                uint64_t v234 = *(void *)&v16[16 * v232 + 32];
                uint64_t v235 = *(void *)&v16[16 * v19 + 24];
                v286 = (char *)(v231 + 112 * v234);
                __srcc = (char *)(v231 + 112 * *(void *)&v16[16 * v19 + 16]);
                uint64_t v236 = (char *)(v231 + 112 * v235);
                swift_bridgeObjectRetain();
                sub_1DE84E628(v248);
                sub_1DE8B1614(v286, __srcc, v236, v245, v254, v287, v248);
                if (v251)
                {
                  a4 = v248;
                  goto LABEL_262;
                }
                sub_1DE850D3C(v248);
                swift_bridgeObjectRelease();
                if (v235 < v234) {
                  goto LABEL_298;
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  int v233 = sub_1DE8CA510((uint64_t)v233);
                }
                if (v232 >= *((void *)v233 + 2)) {
                  goto LABEL_299;
                }
                uint64_t v237 = &v233[16 * v232 + 32];
                *(void *)uint64_t v237 = v234;
                *((void *)v237 + 1) = v235;
                unint64_t v238 = *((void *)v233 + 2);
                if (v19 > v238) {
                  goto LABEL_300;
                }
                memmove(&v233[16 * v19 + 16], &v233[16 * v19 + 32], 16 * (v238 - v19));
                uint64_t v16 = v233;
                *((void *)v233 + 2) = v238 - 1;
                unint64_t v19 = v238 - 1;
                uint64_t v231 = v277;
              }
              while (v238 > 2);
            }
            swift_bridgeObjectRelease();
            *(void *)(v241 + 16) = 0;
            a4 = v248;
LABEL_277:
            swift_bridgeObjectRelease();
            goto LABEL_278;
          }
          double v119 = v103;
          uint64_t v118 = v254;
LABEL_144:
          unint64_t v120 = v284;
          goto LABEL_164;
        }
        uint64_t v118 = v254;
        unint64_t v120 = v284;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v108, v109);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v120 = v284;
        sub_1DE82F404(v272, v284);
        uint64_t v118 = v254;
      }
      break;
    }
LABEL_134:
    double v119 = 1.0;
    if (!__src[2]) {
      goto LABEL_164;
    }
    sub_1DE8E1BA0();
    sub_1DE8E1480();
    uint64_t v121 = sub_1DE8E1BD0();
    uint64_t v122 = -1 << *((unsigned char *)__src + 32);
    unint64_t v123 = v121 & ~v122;
    uint64_t v124 = (char *)(__src + 7);
    if ((*(void *)((char *)__src + ((v123 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v123))
    {
      uint64_t v125 = __src[6];
      unint64_t v126 = (void *)(v125 + 16 * v123);
      BOOL v127 = *v126 == v118 && v126[1] == v287;
      uint64_t v128 = v275;
      if (v127)
      {
        double v119 = v102;
        unint64_t v120 = v284;
        if (*(void *)(v275 + 16)) {
          goto LABEL_166;
        }
        goto LABEL_174;
      }
      if (sub_1DE8E1AC0())
      {
        double v119 = v102;
        unint64_t v120 = v284;
        if (*(void *)(v275 + 16)) {
          goto LABEL_166;
        }
        goto LABEL_174;
      }
      uint64_t v133 = ~v122;
      unint64_t v134 = (v123 + 1) & v133;
      unint64_t v120 = v284;
      if (((*(void *)&v124[(v134 >> 3) & 0xFFFFFFFFFFFFFF8] >> v134) & 1) == 0) {
        goto LABEL_165;
      }
      while (1)
      {
        long long v135 = (void *)(v125 + 16 * v134);
        BOOL v136 = *v135 == v118 && v135[1] == v287;
        if (v136 || (sub_1DE8E1AC0() & 1) != 0) {
          break;
        }
        unint64_t v134 = (v134 + 1) & v133;
        if (((*(void *)&v124[(v134 >> 3) & 0xFFFFFFFFFFFFFF8] >> v134) & 1) == 0) {
          goto LABEL_165;
        }
      }
      double v119 = v102;
      if (!*(void *)(v275 + 16)) {
        goto LABEL_174;
      }
LABEL_166:
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t v137 = sub_1DE8E1BD0();
      uint64_t v138 = -1 << *(unsigned char *)(v128 + 32);
      unint64_t v139 = v137 & ~v138;
      uint64_t v140 = v128 + 56;
      if (((*(void *)(v128 + 56 + ((v139 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v139) & 1) == 0)
      {
        unint64_t v120 = v284;
        goto LABEL_174;
      }
      uint64_t v141 = *(void *)(v128 + 48);
      char v142 = (void *)(v141 + 16 * v139);
      BOOL v143 = *v142 == v118 && v142[1] == v287;
      if (v143 || (sub_1DE8E1AC0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v144 = v103;
        goto LABEL_185;
      }
      uint64_t v170 = ~v138;
      unint64_t v171 = (v139 + 1) & v170;
      unint64_t v120 = v284;
      if (((*(void *)(v140 + ((v171 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v171) & 1) == 0) {
        goto LABEL_174;
      }
      while (1)
      {
        unint64_t v172 = (void *)(v141 + 16 * v171);
        BOOL v173 = *v172 == v118 && v172[1] == v287;
        if (v173 || (sub_1DE8E1AC0() & 1) != 0) {
          break;
        }
        unint64_t v171 = (v171 + 1) & v170;
        if (((*(void *)(v140 + ((v171 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v171) & 1) == 0) {
          goto LABEL_174;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v144 = v103;
      goto LABEL_209;
    }
    goto LABEL_144;
  }
LABEL_306:
  __break(1u);
LABEL_307:
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  __break(1u);
LABEL_308:
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  __break(1u);
LABEL_309:
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  __break(1u);
LABEL_310:
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  sub_1DE850D3C(v248);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DE850D3C(v248);
  __break(1u);
  return result;
}

uint64_t sub_1DE8B41D4(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain();
  sub_1DE84E628(a4);
  swift_bridgeObjectRetain();
  sub_1DE84E628(a4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_1DE8CB9BC((uint64_t)v8);
  }
  uint64_t v9 = *((void *)v8 + 2);
  v11[0] = (uint64_t)(v8 + 32);
  v11[1] = v9;
  swift_bridgeObjectRetain();
  sub_1DE84E628(a4);
  sub_1DE8B28C0(v11, a2, a3, a4);
  sub_1DE850D3C(a4);
  swift_bridgeObjectRelease();
  *a1 = v8;
  swift_bridgeObjectRelease();
  sub_1DE850D3C(a4);
  swift_bridgeObjectRelease();
  return sub_1DE850D3C(a4);
}

void sub_1DE8B42C8(uint64_t a1, uint64_t a2, double *a3, double (*a4)(char *, double, double))
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_24;
  }
  if (v4)
  {
    uint64_t v8 = a1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v9 = sub_1DE84BF78(0, v4 & ~(v4 >> 63), 0);
    if (a2 < v8 || v4 < 0) {
      goto LABEL_25;
    }
    double v10 = *a3;
    uint64_t v11 = *((void *)a3 + 1);
    uint64_t v12 = *(void *)(v11 + 16);
    uint64_t v17 = v11 + 32;
    while (a2 != v8)
    {
      double v13 = v10;
      if ((v8 & 0x8000000000000000) == 0)
      {
        double v13 = v10;
        if (v8 < v12) {
          double v13 = *(double *)(v17 + 8 * v8);
        }
      }
      if (v13 <= 0.0)
      {
        if (v13 < 0.0)
        {
          if (a4(v9, 0.0, 1.0) > -v13) {
            char v14 = 1;
          }
          else {
            char v14 = 2;
          }
        }
        else
        {
          char v14 = 0;
        }
      }
      else if (a4(v9, 0.0, 1.0) <= v13)
      {
        char v14 = 1;
      }
      else
      {
        char v14 = 2;
      }
      unint64_t v16 = *(void *)(v18 + 16);
      unint64_t v15 = *(void *)(v18 + 24);
      if (v16 >= v15 >> 1) {
        uint64_t v9 = sub_1DE84BF78((char *)(v15 > 1), v16 + 1, 1);
      }
      *(void *)(v18 + 16) = v16 + 1;
      *(unsigned char *)(v18 + v16 + 32) = v14;
      if (a2 == ++v8) {
        return;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
}

uint64_t sub_1DE8B4464(uint64_t a1, void (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v34 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unint64_t v20 = *(void *)(a1 + 56) + (i << 6);
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    char v23 = *(unsigned char *)(v20 + 40);
    uint64_t v24 = *(void *)(v20 + 48);
    char v25 = *(unsigned char *)(v20 + 56);
    v27[0] = *(unsigned char *)v20;
    uint64_t v28 = v21;
    uint64_t v29 = v22;
    long long v30 = *(_OWORD *)(v20 + 24);
    char v31 = v23;
    uint64_t v32 = v24;
    char v33 = v25;
    swift_bridgeObjectRetain();
    a2(v18, v19, v27);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v34) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v34) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v34) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v34) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_14:
        int64_t v11 = v16;
        goto LABEL_15;
      }
      int64_t v26 = v11 + 4;
      if (v11 + 4 >= v34) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v6 + 8 * v26);
      v11 += 4;
      if (!v15) {
        break;
      }
    }
LABEL_15:
    unint64_t v9 = (v15 - 1) & v15;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v34) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v26;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE8B4680(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v104 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = *(void *)(result + 24);
  uint64_t v7 = *(void *)(result + 32);
  int v8 = *(unsigned __int8 *)(result + 64);
  uint64_t v10 = *(void *)(result + 72);
  unint64_t v9 = *(void *)(result + 80);
  double v11 = *(double *)v4;
  unint64_t v12 = *(void *)(v4 + 8);
  uint64_t v13 = *(void *)(v4 + 16);
  uint64_t v14 = a2;
  switch(*(unsigned char *)(v4 + 24))
  {
    case 1:
      if (*(unsigned char *)(result + 65) != 1) {
        return result;
      }
      uint64_t v20 = *(void *)(a2 + 16);
      if (v20)
      {
        uint64_t v21 = 0;
        uint64_t v22 = (unsigned __int8 *)(a2 + 97);
        do
        {
          uint64_t v23 = *v22;
          BOOL v19 = __OFADD__(v21, v23);
          v21 += v23;
          if (v19) {
            goto LABEL_138;
          }
          v22 += 112;
          --v20;
        }
        while (v20);
        if (v21 < *(uint64_t *)&v11) {
          return result;
        }
      }
      else if (*(uint64_t *)&v11 > 0)
      {
        return result;
      }
      sub_1DE8BE6DC();
      swift_allocError();
      *(double *)uint64_t v37 = v11;
      *(_OWORD *)(v37 + 8) = 0u;
      *(_OWORD *)(v37 + 24) = 0u;
      char v38 = 3;
      goto LABEL_132;
    case 2:
      if (*(unsigned char *)(result + 67) != 1) {
        return result;
      }
      uint64_t v24 = *(void *)(a2 + 16);
      if (v24)
      {
        uint64_t v25 = 0;
        int64_t v26 = (unsigned __int8 *)(a2 + 99);
        do
        {
          uint64_t v27 = *v26;
          BOOL v19 = __OFADD__(v25, v27);
          v25 += v27;
          if (v19) {
            goto LABEL_139;
          }
          v26 += 112;
          --v24;
        }
        while (v24);
        if (v25 < *(uint64_t *)&v11) {
          return result;
        }
      }
      else if (*(uint64_t *)&v11 > 0)
      {
        return result;
      }
      sub_1DE8BE6DC();
      swift_allocError();
      *(double *)uint64_t v37 = v11;
      *(_OWORD *)(v37 + 8) = 0u;
      *(_OWORD *)(v37 + 24) = 0u;
      char v38 = 4;
      goto LABEL_132;
    case 3:
      uint64_t v28 = *(void *)(a2 + 16);
      if (!v28)
      {
        if (*(uint64_t *)&v11 <= 0) {
          goto LABEL_124;
        }
        return result;
      }
      uint64_t v29 = 0;
      long long v30 = (void *)(a2 + 56);
      do
      {
        uint64_t result = *(v30 - 1);
        if (result == v5 && *v30 == v6)
        {
          uint64_t v32 = 1;
        }
        else
        {
          uint64_t result = sub_1DE8E1AC0();
          uint64_t v32 = result & 1;
        }
        BOOL v19 = __OFADD__(v29, v32);
        v29 += v32;
        if (v19)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
          goto LABEL_156;
        }
        v30 += 14;
        --v28;
      }
      while (v28);
      if (v29 < *(uint64_t *)&v11) {
        return result;
      }
LABEL_124:
      sub_1DE8BE6DC();
      swift_allocError();
      *(double *)uint64_t v37 = v11;
      *(_OWORD *)(v37 + 8) = 0u;
      *(_OWORD *)(v37 + 24) = 0u;
      char v38 = 1;
LABEL_132:
      *(unsigned char *)(v37 + 40) = v38;
      return swift_willThrow();
    case 4:
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_154;
      }
      unint64_t v9 = *(void *)(a2 + 16);
      unint64_t v33 = v9 - v12;
      if (v9 < v12) {
        unint64_t v33 = 0;
      }
      uint64_t v101 = MEMORY[0x1E4FBC870];
      BOOL v34 = v33 >= v9;
      uint64_t v95 = v7;
      if (v33 != v9) {
        goto LABEL_104;
      }
      uint64_t v35 = v13;
      swift_bridgeObjectRetain();
      sub_1DE8BCF50(*(uint64_t *)&v11, v12, v35, 4);
      swift_unknownObjectRelease();
      uint64_t v36 = MEMORY[0x1E4FBC870];
      goto LABEL_110;
    case 5:
      MEMORY[0x1F4188790](result, a2);
      return sub_1DE8B4464(*(uint64_t *)&v11, (void (*)(uint64_t, uint64_t, char *))sub_1DE8BE730);
    case 6:
      if (v8 & 1 | ((*(unsigned char *)(result + 66) & 1) == 0) || *(uint64_t *)&v11 > a3) {
        return result;
      }
      sub_1DE8BE6DC();
      swift_allocError();
      *(double *)uint64_t v37 = v11;
      *(_OWORD *)(v37 + 8) = 0u;
      *(_OWORD *)(v37 + 24) = 0u;
      char v38 = 6;
      goto LABEL_132;
    case 7:
      if (v9 >> 60 == 15 || !*(void *)(a2 + 16)) {
        return result;
      }
      uint64_t v39 = a2 + 32;
      uint64_t v91 = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      sub_1DE82F404(v10, v9);
      uint64_t v40 = v14 + 32;
      uint64_t v41 = (unint64_t *)(v14 + 56);
      uint64_t v42 = (uint64_t *)(v14 + 104);
      uint64_t v43 = (unint64_t *)(v14 + 112);
      unint64_t v100 = v9 >> 62;
      BOOL v44 = __OFSUB__(HIDWORD(v10), v10);
      BOOL v89 = v44;
      uint64_t v45 = v91;
      unint64_t v94 = BYTE6(v9);
      unint64_t v92 = v9;
      uint64_t v46 = 1;
      double v98 = v11;
      uint64_t v95 = v9 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_50:
      unint64_t v12 = *v43;
      if (*v43 >> 60 == 15) {
        goto LABEL_100;
      }
      unint64_t v9 = *v41;
      uint64_t v47 = *v42;
      uint64_t v14 = 0;
      unint64_t v93 = HIDWORD(*v42);
      switch(v12 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(v93, v47)) {
            goto LABEL_162;
          }
          uint64_t v14 = (int)v93 - (int)v47;
LABEL_56:
          unint64_t v50 = v94;
          switch((int)v100)
          {
            case 1:
              unint64_t v50 = HIDWORD(v10) - (int)v10;
              if (v89) {
                goto LABEL_164;
              }
              goto LABEL_60;
            case 2:
              uint64_t v52 = *(void *)(v10 + 16);
              uint64_t v51 = *(void *)(v10 + 24);
              BOOL v19 = __OFSUB__(v51, v52);
              unint64_t v50 = v51 - v52;
              if (!v19) {
                goto LABEL_60;
              }
              goto LABEL_165;
            case 3:
              if (!v14) {
                goto LABEL_125;
              }
              goto LABEL_100;
            default:
LABEL_60:
              if (v14 != v50) {
                goto LABEL_100;
              }
              if (v14 < 0) {
                goto LABEL_155;
              }
              if (!v14) {
                goto LABEL_125;
              }
              uint64_t v90 = v46;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1DE82F404(v47, v12);
              int v54 = v12 >> 62;
              unint64_t v9 = 0;
              uint64_t v55 = 0;
              uint64_t v96 = v14;
              break;
          }
          break;
        case 2uLL:
          uint64_t v49 = *(void *)(v47 + 16);
          uint64_t v48 = *(void *)(v47 + 24);
          uint64_t v14 = v48 - v49;
          if (!__OFSUB__(v48, v49)) {
            goto LABEL_56;
          }
          goto LABEL_163;
        case 3uLL:
          goto LABEL_56;
        default:
          uint64_t v14 = BYTE6(v12);
          goto LABEL_56;
      }
      while (1)
      {
        if (v14 == v55) {
          goto LABEL_140;
        }
        uint64_t v56 = v55 + 1;
        switch(v54)
        {
          case 1:
            if (v55 < (int)v47 || v55 >= v47 >> 32) {
              goto LABEL_143;
            }
            uint64_t v59 = sub_1DE8E12F0();
            if (!v59) {
              goto LABEL_167;
            }
            uint64_t v60 = v59;
            uint64_t v61 = sub_1DE8E1300();
            uint64_t v62 = v55 - v61;
            if (!__OFSUB__(v55, v61)) {
              goto LABEL_80;
            }
            goto LABEL_145;
          case 2:
            if (v55 < *(void *)(v47 + 16)) {
              goto LABEL_144;
            }
            if (v55 >= *(void *)(v47 + 24)) {
              goto LABEL_146;
            }
            uint64_t v63 = sub_1DE8E12F0();
            if (!v63) {
              goto LABEL_168;
            }
            uint64_t v60 = v63;
            uint64_t v64 = sub_1DE8E1300();
            uint64_t v62 = v55 - v64;
            if (__OFSUB__(v55, v64)) {
              goto LABEL_148;
            }
LABEL_80:
            uint64_t v14 = *(unsigned __int8 *)(v60 + v62);
            int v57 = v100;
            if (v100)
            {
LABEL_81:
              if (v57 == 1)
              {
                if (v55 < (int)v10 || v55 >= v10 >> 32) {
                  goto LABEL_149;
                }
                uint64_t v65 = sub_1DE8E12F0();
                if (!v65) {
                  goto LABEL_169;
                }
                uint64_t v66 = v65;
                uint64_t v67 = sub_1DE8E1300();
                uint64_t v68 = v55 - v67;
                if (__OFSUB__(v55, v67)) {
                  goto LABEL_151;
                }
              }
              else
              {
                if (v55 < *(void *)(v10 + 16)) {
                  goto LABEL_150;
                }
                if (v55 >= *(void *)(v10 + 24)) {
                  goto LABEL_152;
                }
                uint64_t v69 = sub_1DE8E12F0();
                if (!v69) {
                  goto LABEL_170;
                }
                uint64_t v66 = v69;
                uint64_t v70 = sub_1DE8E1300();
                uint64_t v68 = v55 - v70;
                if (__OFSUB__(v55, v70)) {
                  goto LABEL_153;
                }
              }
              int v58 = *(unsigned __int8 *)(v66 + v68);
            }
            else
            {
LABEL_68:
              if (v55 >= v94) {
                goto LABEL_147;
              }
              uint64_t v101 = v10;
              int v102 = v92;
              __int16 v103 = WORD2(v92);
              int v58 = *((unsigned __int8 *)&v101 + v55);
            }
            v53.i32[0] = v58 ^ v14;
            int8x8_t v53 = vcnt_s8(v53);
            v53.i16[0] = vaddlv_u8((uint8x8_t)v53);
            BOOL v19 = __OFADD__(v9, v53.u32[0]);
            v9 += v53.u32[0];
            double v11 = v98;
            int v54 = v12 >> 62;
            if (v19) {
              goto LABEL_141;
            }
            if ((uint64_t)v9 >= *(uint64_t *)&v98)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1DE82F470(v47, v12);
              uint64_t v45 = v91;
              uint64_t v40 = v39;
              uint64_t v46 = v90;
LABEL_100:
              if (v46 == v45)
              {
                swift_bridgeObjectRelease();
                return sub_1DE82F470(v10, v92);
              }
              uint64_t v71 = v40 + 112 * v46;
              uint64_t v41 = (unint64_t *)(v71 + 24);
              uint64_t v13 = v71 + 40;
              uint64_t v42 = (uint64_t *)(v71 + 72);
              uint64_t v43 = (unint64_t *)(v71 + 80);
              BOOL v34 = __CFADD__(v46, 1);
              BOOL v19 = __OFADD__(v46++, 1);
              if (!v19) {
                goto LABEL_50;
              }
              __break(1u);
LABEL_104:
              if (!v34)
              {
                uint64_t v72 = v13;
                swift_bridgeObjectRetain();
                sub_1DE8BCF50(*(uint64_t *)&v11, v12, v72, 4);
                swift_unknownObjectRetain();
                uint64_t v97 = v12;
                if (v12 >= v9) {
                  unint64_t v12 = v9;
                }
                double v73 = (void *)(112 * v9 - 112 * v12 + v14 + 56);
                do
                {
                  uint64_t v74 = v73[1];
                  unint64_t v75 = v73[7];
                  uint64_t v99 = v73[6];
                  sub_1DE8BCF50(*(uint64_t *)&v11, v97, v72, 4);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1DE82F404(v99, v75);
                  uint64_t v76 = sub_1DE8CADC8(v74, v72);
                  sub_1DE89F8E4(v76);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1DE82F470(v99, v75);
                  v73 += 14;
                  --v12;
                }
                while (v12);
                swift_unknownObjectRelease_n();
                uint64_t v36 = v101;
                uint64_t v35 = v72;
                unint64_t v12 = v97;
LABEL_110:
                uint64_t v77 = sub_1DE8CADC8(v95, v35);
                swift_bridgeObjectRetain();
                uint64_t v78 = swift_retain();
                uint64_t v79 = *(void *)(sub_1DE860DCC(v78, v36) + 16);
                swift_bridgeObjectRelease();
                double v80 = (double)v79;
                uint64_t v81 = sub_1DE8CADC8(v77, v36);
                swift_release();
                uint64_t v82 = *(void *)(v81 + 16);
                uint64_t result = swift_release();
                double v83 = (double)v82;
                if (v79) {
                  double v84 = (double)v82 / v80;
                }
                else {
                  double v84 = 0.0;
                }
                if (v84 <= v11) {
                  return result;
                }
                if (v80 > -9.22337204e18)
                {
                  if (v80 < 9.22337204e18)
                  {
                    if ((*(void *)&v80 & 0x7FF0000000000000) != 0x7FF0000000000000
                      && (*(void *)&v83 & 0x7FF0000000000000) != 0x7FF0000000000000)
                    {
                      if (v83 > -9.22337204e18)
                      {
                        if (v83 < 9.22337204e18)
                        {
                          uint64_t v86 = (uint64_t)v83;
                          sub_1DE8BE6DC();
                          swift_allocError();
                          *(void *)uint64_t v37 = v12;
                          *(void *)(v37 + 8) = (uint64_t)v80;
                          *(void *)(v37 + 16) = v86;
                          *(double *)(v37 + 24) = v84;
                          *(double *)(v37 + 32) = v11;
                          char v38 = 2;
                          goto LABEL_132;
                        }
LABEL_161:
                        __break(1u);
LABEL_162:
                        __break(1u);
LABEL_163:
                        __break(1u);
LABEL_164:
                        __break(1u);
LABEL_165:
                        __break(1u);
LABEL_166:
                        __break(1u);
LABEL_167:
                        __break(1u);
LABEL_168:
                        __break(1u);
LABEL_169:
                        __break(1u);
LABEL_170:
                        __break(1u);
                        JUMPOUT(0x1DE8B5360);
                      }
LABEL_160:
                      __break(1u);
                      goto LABEL_161;
                    }
LABEL_159:
                    __break(1u);
                    goto LABEL_160;
                  }
LABEL_158:
                  __break(1u);
                  goto LABEL_159;
                }
LABEL_157:
                __break(1u);
                goto LABEL_158;
              }
LABEL_156:
              __break(1u);
              goto LABEL_157;
            }
            uint64_t v55 = v56;
            uint64_t v14 = v96;
            if (v96 == v56)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1DE82F470(v47, v12);
LABEL_125:
              swift_bridgeObjectRelease();
              sub_1DE8BE6DC();
              swift_allocError();
              *(_OWORD *)uint64_t v87 = 0u;
              *(_OWORD *)(v87 + 16) = 0u;
              *(void *)(v87 + 32) = 0;
              *(unsigned char *)(v87 + 40) = 7;
              swift_willThrow();
              return sub_1DE82F470(v10, v92);
            }
            break;
          case 3:
            goto LABEL_166;
          default:
            if (v55 >= (unint64_t)BYTE6(v12)) {
              goto LABEL_142;
            }
            LOWORD(v101) = v47;
            BYTE2(v101) = BYTE2(v47);
            BYTE3(v101) = BYTE3(v47);
            BYTE4(v101) = v93;
            BYTE5(v101) = BYTE5(v47);
            BYTE6(v101) = BYTE6(v47);
            HIBYTE(v101) = HIBYTE(v47);
            LOWORD(v102) = v12;
            BYTE2(v102) = BYTE2(v12);
            HIBYTE(v102) = BYTE3(v12);
            LOBYTE(v103) = BYTE4(v12);
            HIBYTE(v103) = BYTE5(v12);
            uint64_t v14 = *((unsigned __int8 *)&v101 + v55);
            int v57 = v100;
            if (!v100) {
              goto LABEL_68;
            }
            goto LABEL_81;
        }
      }
    default:
      if ((a4 | v8)) {
        return result;
      }
      uint64_t v15 = *(void *)(a2 + 16);
      if (v15)
      {
        uint64_t v16 = 0;
        uint64_t v17 = (unsigned char *)(a2 + 96);
        do
        {
          uint64_t v18 = (*v17 & 1) == 0;
          BOOL v19 = __OFADD__(v16, v18);
          v16 += v18;
          if (v19) {
            goto LABEL_137;
          }
          v17 += 112;
          --v15;
        }
        while (v15);
        if (v16 < *(uint64_t *)&v11) {
          return result;
        }
      }
      else if (*(uint64_t *)&v11 > 0)
      {
        return result;
      }
      sub_1DE8BE6DC();
      swift_allocError();
      *(double *)uint64_t v88 = v11;
      *(_OWORD *)(v88 + 8) = 0u;
      *(_OWORD *)(v88 + 24) = 0u;
      *(unsigned char *)(v88 + 40) = 0;
      return swift_willThrow();
  }
}

uint64_t sub_1DE8B53B0(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  unint64_t v10 = a8;
  uint64_t v11 = a7;
  unint64_t v12 = a6;
  uint64_t v13 = (uint64_t *)(a3 + 16);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = (char *)(a5 + 16);
  uint64_t v82 = (char **)(a3 + 16);
  double v84 = (char *)(a5 + 16);
  if (v14)
  {
    unint64_t v73 = a8;
    uint64_t v78 = a7;
    unint64_t v75 = (char **)(a9 + 16);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v17 = 0;
    char v76 = a1;
    uint64_t v18 = (unsigned __int8 *)(a1 + 56);
    while (1)
    {
      uint64_t v88 = v14;
      uint64_t v20 = *((void *)v18 - 3);
      uint64_t v19 = *((void *)v18 - 2);
      uint64_t v21 = *((void *)v18 - 1);
      uint64_t v22 = *v18;
      long long v23 = a2[5];
      long long v93 = a2[4];
      v94[0] = v23;
      *(_OWORD *)((char *)v94 + 9) = *(long long *)((char *)a2 + 89);
      long long v24 = a2[1];
      long long v89 = *a2;
      long long v90 = v24;
      long long v25 = a2[3];
      long long v91 = a2[2];
      long long v92 = v25;
      uint64_t v26 = a4 + *(void *)v15;
      if (__OFADD__(a4, *(void *)v15)) {
        break;
      }
      uint64_t v27 = *v13;
      sub_1DE8BCF50(v20, v19, v21, v22);
      swift_bridgeObjectRetain();
      sub_1DE8B4680((uint64_t)&v89, v27, v26, 0);
      v18 += 32;
      swift_bridgeObjectRelease();
      sub_1DE8A0390(v20, v19, v21, v22);
      uint64_t v14 = v88 - 1;
      uint64_t v13 = (uint64_t *)v82;
      uint64_t v15 = v84;
      if (v88 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = v78;
        unint64_t v12 = a6;
        unint64_t v10 = v73;
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_6:
  swift_beginAccess();
  *((unsigned char *)v12 + 88) = 0;
  if (v11)
  {
    swift_beginAccess();
    uint64_t v28 = *v12;
    uint64_t v29 = v12[1];
    uint64_t v30 = v12[7];
    swift_beginAccess();
    uint64_t v31 = *(void *)(*v13 + 16);
    *(void *)&long long v89 = v28;
    *((void *)&v89 + 1) = v29;
    *(void *)&long long v90 = v30;
    *((void *)&v90 + 1) = v31;
    long long v91 = v10;
    long long v92 = 0uLL;
    LOBYTE(v93) = 0;
    swift_bridgeObjectRetain();
    ClusteringJournal.record(event:)((uint64_t)&v89);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v32 = v12[1];
  a4 = *v12;
  uint64_t v17 = (void *)v12[3];
  uint64_t v78 = v12[2];
  uint64_t v19 = v12[4];
  uint64_t v18 = (unsigned __int8 *)v12[5];
  unint64_t v33 = v12;
  uint64_t v22 = v12[6];
  uint64_t v9 = v12[7];
  char v76 = *((unsigned char *)v12 + 64);
  LODWORD(v75) = *((unsigned __int8 *)v12 + 65);
  LOBYTE(v73) = *((unsigned char *)v12 + 66);
  char v34 = *((unsigned char *)v12 + 67);
  uint64_t v35 = v12[9];
  unint64_t v36 = v33[10];
  char v69 = *((unsigned char *)v33 + 88);
  char v71 = v34;
  uint64_t v67 = v33[12];
  char v65 = *((unsigned char *)v33 + 104);
  swift_beginAccess();
  uint64_t v15 = (char *)*v13;
  uint64_t v88 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = (char **)v13;
  uint64_t v13 = (uint64_t *)v35;
  uint64_t v38 = v35;
  uint64_t v26 = v36;
  sub_1DE82F404(v38, v36);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v37 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_25:
    uint64_t v15 = sub_1DE83A318(0, *((void *)v15 + 2) + 1, 1, v15);
    *uint64_t v82 = v15;
  }
  unint64_t v41 = *((void *)v15 + 2);
  unint64_t v40 = *((void *)v15 + 3);
  if (v41 >= v40 >> 1)
  {
    uint64_t v15 = sub_1DE83A318((char *)(v40 > 1), v41 + 1, 1, v15);
    *uint64_t v82 = v15;
  }
  *((void *)v15 + 2) = v41 + 1;
  uint64_t v42 = &v15[112 * v41];
  *((void *)v42 + 4) = a4;
  *((void *)v42 + 5) = v88;
  *((void *)v42 + 6) = v78;
  *((void *)v42 + 7) = v17;
  *((void *)v42 + 8) = v19;
  *((void *)v42 + 9) = v18;
  *((void *)v42 + 10) = v22;
  *((void *)v42 + 11) = v9;
  v42[96] = v76;
  v42[97] = (char)v75;
  v42[98] = v73;
  v42[99] = v71;
  *((void *)v42 + 13) = v13;
  *((void *)v42 + 14) = v26;
  v42[120] = v69;
  *((void *)v42 + 16) = v67;
  v42[136] = v65;
  uint64_t v43 = swift_beginAccess();
  if (*((unsigned char *)a6 + 66) != 1) {
    goto LABEL_15;
  }
  uint64_t v43 = swift_beginAccess();
  if (a6[8]) {
    goto LABEL_15;
  }
  uint64_t v43 = swift_beginAccess();
  if (!__OFADD__(*(void *)v84, 1))
  {
    ++*(void *)v84;
LABEL_15:
    if (qword_1EBEA8188 != -1) {
      uint64_t v43 = swift_once();
    }
    MEMORY[0x1F4188790](v43, v44);
    v45(sub_1DE8BE7A4);
    return 1;
  }
  __break(1u);
  uint64_t v63 = swift_once();
  MEMORY[0x1F4188790](v63, v47);
  v48(sub_1DE8BE75C);
  swift_beginAccess();
  uint64_t v49 = *(void *)(v22 + 8);
  uint64_t v83 = *(void *)v22;
  uint64_t v50 = *(void *)(v22 + 24);
  uint64_t v79 = *(void *)(v22 + 16);
  uint64_t v51 = *(void *)(v22 + 32);
  uint64_t v52 = *(void *)(v22 + 40);
  uint64_t v53 = *(void *)(v22 + 48);
  uint64_t v54 = *(void *)(v22 + 56);
  char v77 = *(unsigned char *)(v22 + 64);
  char v74 = *(unsigned char *)(v22 + 65);
  char v70 = *(unsigned char *)(v22 + 67);
  char v72 = *(unsigned char *)(v22 + 66);
  uint64_t v55 = v22;
  uint64_t v56 = *(void *)(v22 + 72);
  unint64_t v57 = *(void *)(v22 + 80);
  char v68 = *(unsigned char *)(v55 + 88);
  uint64_t v64 = v53;
  uint64_t v66 = *(void *)(v55 + 96);
  char v81 = *(unsigned char *)(v55 + 104);
  swift_beginAccess();
  int v58 = *v75;
  swift_bridgeObjectRetain();
  uint64_t v87 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE82F404(v56, v57);
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v75 = v58;
  if ((v59 & 1) == 0)
  {
    int v58 = sub_1DE83A318(0, *((void *)v58 + 2) + 1, 1, v58);
    *unint64_t v75 = v58;
  }
  unint64_t v61 = *((void *)v58 + 2);
  unint64_t v60 = *((void *)v58 + 3);
  if (v61 >= v60 >> 1)
  {
    int v58 = sub_1DE83A318((char *)(v60 > 1), v61 + 1, 1, v58);
    *unint64_t v75 = v58;
  }
  *((void *)v58 + 2) = v61 + 1;
  uint64_t v62 = &v58[112 * v61];
  *((void *)v62 + 4) = v83;
  *((void *)v62 + 5) = v49;
  *((void *)v62 + 6) = v79;
  *((void *)v62 + 7) = v87;
  *((void *)v62 + 8) = v51;
  *((void *)v62 + 9) = v52;
  *((void *)v62 + 10) = v64;
  *((void *)v62 + 11) = v54;
  v62[96] = v77;
  v62[97] = v74;
  v62[98] = v72;
  v62[99] = v70;
  *((void *)v62 + 13) = v56;
  *((void *)v62 + 14) = v57;
  v62[120] = v68;
  *((void *)v62 + 16) = v66;
  v62[136] = v81;

  return 1;
}

uint64_t sub_1DE8B65D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  int64_t v7 = a3 >> 1;
  uint64_t result = swift_beginAccess();
  if (v7 == a2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v37 = a4;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v35 = a2;
  uint64_t v9 = a2;
  uint64_t v10 = a1;
  uint64_t v38 = a1;
  uint64_t v36 = v7;
  do
  {
    uint64_t v47 = v9;
    while (1)
    {
      if (v47 < a2 || v9 >= v7)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = (uint64_t *)(v10 + 112 * v9);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v39 = v11[2];
      uint64_t v14 = v11[5];
      uint64_t v15 = v11[6];
      uint64_t v16 = v11[7];
      char v45 = *((unsigned char *)v11 + 65);
      char v46 = *((unsigned char *)v11 + 64);
      char v43 = *((unsigned char *)v11 + 67);
      char v44 = *((unsigned char *)v11 + 66);
      uint64_t v18 = v11[9];
      unint64_t v17 = v11[10];
      char v42 = *((unsigned char *)v11 + 88);
      uint64_t v41 = v11[12];
      char v40 = *((unsigned char *)v11 + 104);
      uint64_t v48 = v9 + 1;
      uint64_t v49 = v11[4];
      uint64_t v19 = *v37;
      uint64_t v50 = v18;
      unint64_t v51 = v17;
      uint64_t v52 = v11[3];
      if (!*(void *)(*v37 + 16)) {
        break;
      }
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v18, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      uint64_t v20 = sub_1DE8E1BD0();
      uint64_t v21 = -1 << *(unsigned char *)(v19 + 32);
      unint64_t v22 = v20 & ~v21;
      if (((*(void *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_24;
      }
      uint64_t v23 = *(void *)(v19 + 48);
      long long v24 = (void *)(v23 + 16 * v22);
      BOOL v25 = *v24 == v12 && v24[1] == v13;
      if (!v25 && (sub_1DE8E1AC0() & 1) == 0)
      {
        uint64_t v26 = ~v21;
        while (1)
        {
          unint64_t v22 = (v22 + 1) & v26;
          if (((*(void *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            break;
          }
          uint64_t v27 = (void *)(v23 + 16 * v22);
          BOOL v28 = *v27 == v12 && v27[1] == v13;
          if (v28 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_6;
          }
        }
LABEL_24:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = v34;
        a2 = v35;
        goto LABEL_26;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v35;
      int64_t v7 = v36;
      uint64_t v9 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DE82F470(v50, v51);
      uint64_t v10 = v38;
      if (v48 == v36) {
        return v34;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE82F404(v18, v17);
    uint64_t v29 = v34;
LABEL_26:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = (uint64_t)sub_1DE84BF58(0, *(void *)(v29 + 16) + 1, 1);
    }
    uint64_t v30 = v52;
    unint64_t v32 = *(void *)(v29 + 16);
    unint64_t v31 = *(void *)(v29 + 24);
    uint64_t v10 = v38;
    if (v32 >= v31 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DE84BF58((char *)(v31 > 1), v32 + 1, 1);
      uint64_t v10 = v38;
      uint64_t v30 = v52;
    }
    *(void *)(v29 + 16) = v32 + 1;
    uint64_t v34 = v29;
    uint64_t v33 = v29 + 112 * v32;
    *(void *)(v33 + 32) = v12;
    *(void *)(v33 + 40) = v13;
    *(void *)(v33 + 48) = v39;
    *(void *)(v33 + 56) = v30;
    *(void *)(v33 + 64) = v49;
    *(void *)(v33 + 72) = v14;
    *(void *)(v33 + 80) = v15;
    *(void *)(v33 + 88) = v16;
    *(unsigned char *)(v33 + 96) = v46;
    *(unsigned char *)(v33 + 97) = v45;
    *(unsigned char *)(v33 + 98) = v44;
    *(unsigned char *)(v33 + 99) = v43;
    *(void *)(v33 + 104) = v50;
    *(void *)(v33 + 112) = v51;
    *(unsigned char *)(v33 + 120) = v42;
    *(void *)(v33 + 128) = v41;
    *(unsigned char *)(v33 + 136) = v40;
    int64_t v7 = v36;
    uint64_t v9 = v48;
  }
  while (v48 != v36);
  return v34;
}

uint64_t sub_1DE8B69C4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v101 = a5;
  unint64_t v100 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)a2;
  uint64_t v25 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1DE83C5AC(v24, v25, v23);
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v26)
  {
    if (qword_1EBEA8188 != -1) {
      uint64_t v27 = swift_once();
    }
    MEMORY[0x1F4188790](v27, v28);
    v29(sub_1DE8BE6AC);
    char v30 = 1;
    return v30 & 1;
  }
  uint64_t v31 = swift_beginAccess();
  uint64_t v33 = *(void *)(a3[2] + 16);
  if (v33 < a4)
  {
    unint64_t v96 = a6;
    uint64_t v26 = a11;
    uint64_t v34 = a12;
    uint64_t v25 = a10;
    long long v35 = *(_OWORD *)(a2 + 80);
    long long v112 = *(_OWORD *)(a2 + 64);
    v113[0] = v35;
    *(_OWORD *)((char *)v113 + 9) = *(_OWORD *)(a2 + 89);
    long long v36 = *(_OWORD *)(a2 + 16);
    v111[0] = *(_OWORD *)a2;
    v111[1] = v36;
    long long v37 = *(_OWORD *)(a2 + 32);
    v111[3] = *(_OWORD *)(a2 + 48);
    v111[2] = v37;
    if ((unint64_t)v33 >= *(void *)(a15 + 16) || (int v38 = *(unsigned __int8 *)(a15 + v33 + 32)) == 0)
    {
      sub_1DE82F388(a2);
      uint64_t v93 = a7;
      uint64_t v39 = a10;
      char v40 = (long long *)a2;
      uint64_t v64 = (uint64_t)a3;
      uint64_t v65 = a11;
      uint64_t v66 = a12;
      uint64_t v67 = a8;
LABEL_49:
      char v30 = sub_1DE8B53B0(v39, v40, v64, v65, v66, (uint64_t *)v111, v67, v96, v93);
      uint64_t v90 = *((void *)&v112 + 1);
      unint64_t v91 = *(void *)&v113[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v90, v91);
      return v30 & 1;
    }
    uint64_t v97 = (long long *)a2;
    uint64_t v95 = a8;
    double v110 = (void *)a16;
    LODWORD(v108) = a9;
    uint64_t v109 = a13;
    if (v38 != 1)
    {
      swift_beginAccess();
      char v83 = *(unsigned char *)(a14 + 16);
      uint64_t v107 = a14;
      uint64_t v84 = (uint64_t)v97;
      sub_1DE82F388((uint64_t)v97);
      if (v83)
      {
        uint64_t v93 = a7;
        uint64_t v39 = a10;
        char v40 = v97;
        goto LABEL_48;
      }
      char v88 = sub_1DE8A5668((char *)a1, a10, (uint64_t)a3, a11, a12, v101, v96, v95, a7, v107, (uint64_t)v97, a4, v108 & 1, v109, a15, (uint64_t)v110);
LABEL_45:
      char v30 = v88;
      sub_1DE8B7FE4(v84);
      return v30 & 1;
    }
    swift_beginAccess();
    if (*(unsigned char *)(a13 + 16))
    {
      sub_1DE82F388((uint64_t)v97);
      uint64_t v93 = a7;
      uint64_t v39 = a10;
      char v40 = v97;
LABEL_48:
      uint64_t v64 = (uint64_t)a3;
      uint64_t v65 = v26;
      uint64_t v66 = v34;
      uint64_t v67 = v95;
      goto LABEL_49;
    }
    uint64_t v107 = a14;
    swift_beginAccess();
    uint64_t v85 = *(void *)(a12 + 16) + a11;
    if (!__OFADD__(*(void *)(a12 + 16), a11))
    {
      uint64_t v84 = (uint64_t)v97;
      uint64_t v86 = sub_1DE82F388((uint64_t)v97);
      if (v85 < (uint64_t)v110)
      {
        char v88 = sub_1DE8A385C(v108 & 1, a1, a10, (uint64_t)a3, a11, a12, a7, v95, v101, v96, v109, (uint64_t)v97, a4, v107, a15, (uint64_t)v110);
        goto LABEL_45;
      }
      if (qword_1EBEA8188 == -1)
      {
LABEL_47:
        MEMORY[0x1F4188790](v86, v87);
        v89(sub_1DE8BE6A4);
        uint64_t v93 = a7;
        uint64_t v39 = v25;
        char v40 = v97;
        goto LABEL_48;
      }
LABEL_55:
      uint64_t v86 = swift_once();
      goto LABEL_47;
    }
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (qword_1EBEA8188 != -1) {
    uint64_t v31 = swift_once();
  }
  a3 = &v94;
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = v101;
  v41(sub_1DE8BE694);
  uint64_t v42 = *(void *)(v34 + 16);
  if (v42 < a6)
  {
    __break(1u);
    goto LABEL_52;
  }
  if (a6 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  double v98 = (char **)(a7 + 16);
  a3 = (uint64_t *)(v42 - a6);
  if (v42 != a6)
  {
    uint64_t v94 = v42;
    uint64_t v97 = (long long *)a2;
    uint64_t v95 = a8;
    if (v42 > (unint64_t)a6)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      unint64_t v96 = a6;
      uint64_t v43 = 112 * a6;
      do
      {
        double v110 = a3;
        uint64_t v47 = *(void *)(v101 + v43 + 32);
        uint64_t v48 = *(void *)(v101 + v43 + 40);
        uint64_t v49 = *(void *)(v101 + v43 + 56);
        uint64_t v108 = *(void *)(v101 + v43 + 48);
        uint64_t v50 = *(void *)(v101 + v43 + 64);
        uint64_t v51 = *(void *)(v101 + v43 + 72);
        uint64_t v52 = *(void *)(v101 + v43 + 80);
        uint64_t v53 = *(void *)(v101 + v43 + 88);
        LODWORD(v107) = *(unsigned __int8 *)(v101 + v43 + 96);
        int v106 = *(unsigned __int8 *)(v101 + v43 + 97);
        int v105 = *(unsigned __int8 *)(v101 + v43 + 98);
        int v104 = *(unsigned __int8 *)(v101 + v43 + 99);
        uint64_t v54 = *(void *)(v101 + v43 + 104);
        unint64_t v55 = *(void *)(v101 + v43 + 112);
        uint64_t v103 = *(void *)(v101 + v43 + 128);
        int v102 = *(unsigned __int8 *)(v101 + v43 + 136);
        uint64_t v56 = *v100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v54, v55);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DE82F404(v54, v55);
        swift_bridgeObjectRetain();
        uint64_t v109 = v47;
        LOBYTE(v47) = sub_1DE83C5AC(v47, v48, v56);
        swift_bridgeObjectRelease();
        if (v47)
        {
          sub_1DE82F470(v54, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v44 = swift_bridgeObjectRelease();
          MEMORY[0x1F4188790](v44, v45);
          v46(sub_1DE8BE69C);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DE82F470(v54, v55);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1DE82F404(v54, v55);
          uint64_t v99 = v54;
          sub_1DE82F470(v54, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v57 = v98;
          int v58 = *v98;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *unint64_t v57 = v58;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            int v58 = sub_1DE83A318(0, *((void *)v58 + 2) + 1, 1, v58);
            void *v98 = v58;
          }
          unint64_t v61 = *((void *)v58 + 2);
          unint64_t v60 = *((void *)v58 + 3);
          if (v61 >= v60 >> 1)
          {
            int v58 = sub_1DE83A318((char *)(v60 > 1), v61 + 1, 1, v58);
            void *v98 = v58;
          }
          *((void *)v58 + 2) = v61 + 1;
          uint64_t v62 = &v58[112 * v61];
          *((void *)v62 + 4) = v109;
          *((void *)v62 + 5) = v48;
          *((void *)v62 + 6) = v108;
          *((void *)v62 + 7) = v49;
          *((void *)v62 + 8) = v50;
          *((void *)v62 + 9) = v51;
          *((void *)v62 + 10) = v52;
          *((void *)v62 + 11) = v53;
          v62[96] = v107;
          v62[97] = v106;
          v62[98] = v105;
          v62[99] = v104;
          uint64_t v63 = v99;
          *((void *)v62 + 13) = v99;
          *((void *)v62 + 14) = v55;
          v62[120] = 2;
          *((void *)v62 + 16) = v103;
          v62[136] = v102;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DE82F470(v63, v55);
        }
        v43 += 112;
        a3 = (void *)((char *)v110 - 1);
      }
      while (v110 != (void *)1);
      swift_bridgeObjectRelease();
      a8 = v95;
      a6 = v96;
      uint64_t v42 = v94;
      goto LABEL_29;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_29:
  if (a8)
  {
    uint64_t v68 = v101 + 32;
    unint64_t v69 = (2 * v42) | 1;
    char v70 = v98;
    swift_beginAccess();
    char v71 = *v70;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1DE8B65D0(v68, a6, v69, v100);
    *(void *)&v111[0] = v71;
    sub_1DE81326C(v72);
    uint64_t v73 = *(void *)&v111[0];
    int64_t v74 = *(void *)(*(void *)&v111[0] + 16);
    if (v74)
    {
      uint64_t v95 = a8;
      *(void *)&v111[0] = MEMORY[0x1E4FBC860];
      sub_1DE84BF38(0, v74, 0);
      uint64_t v75 = *(void *)&v111[0];
      char v76 = (uint64_t *)(v73 + 88);
      do
      {
        uint64_t v78 = *(v76 - 7);
        uint64_t v77 = *(v76 - 6);
        uint64_t v79 = *v76;
        *(void *)&v111[0] = v75;
        unint64_t v81 = *(void *)(v75 + 16);
        unint64_t v80 = *(void *)(v75 + 24);
        swift_bridgeObjectRetain();
        if (v81 >= v80 >> 1)
        {
          sub_1DE84BF38((char *)(v80 > 1), v81 + 1, 1);
          uint64_t v75 = *(void *)&v111[0];
        }
        v76 += 14;
        *(void *)(v75 + 16) = v81 + 1;
        uint64_t v82 = (void *)(v75 + 24 * v81);
        v82[4] = v78;
        v82[5] = v77;
        v82[6] = v79;
        --v74;
      }
      while (v74);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = MEMORY[0x1E4FBC860];
    }
    *(void *)&v111[0] = v75;
    *(_OWORD *)((char *)v111 + 8) = 0u;
    *(_OWORD *)((char *)&v111[1] + 8) = 0u;
    *(_OWORD *)((char *)&v111[2] + 8) = 0u;
    *((void *)&v111[3] + 1) = 0;
    LOBYTE(v112) = -127;
    ClusteringJournal.record(event:)((uint64_t)v111);
    swift_bridgeObjectRelease();
    char v30 = 0;
  }
  else
  {
    char v30 = 0;
  }
  return v30 & 1;
}

char *sub_1DE8B75C0(char *a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v48 = a1;
  uint64_t v33 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a2 + 64);
  int64_t v34 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = (char *)swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = *(void *)(a2 + 48) + 32 * i;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    char v28 = *(unsigned char *)(v24 + 24);
    char v29 = *(unsigned char *)(v24 + 25);
    char v30 = *(unsigned char *)(v24 + 26);
    char v31 = *(unsigned char *)(v24 + 27);
    LOBYTE(v24) = *(unsigned char *)(v24 + 28);
    uint64_t v32 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    v41[0] = v25;
    v41[1] = v26;
    v41[2] = v27;
    char v42 = v28;
    char v43 = v29;
    char v44 = v30;
    char v45 = v31;
    char v46 = v24;
    uint64_t v47 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE8A88D0(&v48, (uint64_t)v41, a3, a4, a5, a6, a7, a8, a9 & 1, a10, a11, a12);
    if (v12)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (char *)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = (char *)swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v34) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_17:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v34) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v34) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v34) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v34)
  {
LABEL_26:
    swift_release();
    return v48;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v34) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL sub_1DE8B7844(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_24;
      }
      sub_1DE8A0390(*(void *)a1, v3, v4, 1);
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      char v13 = 1;
      goto LABEL_22;
    case 2:
      if (v9 != 2) {
        goto LABEL_24;
      }
      sub_1DE8A0390(*(void *)a1, v3, v4, 2);
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      char v13 = 2;
      goto LABEL_22;
    case 3:
      if (v9 != 3) {
        goto LABEL_24;
      }
      sub_1DE8A0390(*(void *)a1, v3, v4, 3);
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      char v13 = 3;
      goto LABEL_22;
    case 4:
      if (v9 != 4) {
        goto LABEL_23;
      }
      double v14 = *(double *)a2;
      if (*(double *)&v2 != *(double *)&v6 || v3 != v7)
      {
        sub_1DE8BCF50(*(uint64_t *)&v14, *(void *)(a2 + 8), v8, 4);
        sub_1DE8BCF50(v2, v3, v4, 4);
        sub_1DE8A0390(v2, v3, v4, 4);
        uint64_t v16 = v6;
        uint64_t v17 = v7;
        uint64_t v18 = v8;
        char v19 = 4;
        goto LABEL_25;
      }
      sub_1DE8BCF50(*(uint64_t *)&v14, v3, v8, 4);
      sub_1DE8BCF50(v2, v3, v4, 4);
      sub_1DE8BCF50(v6, v3, v8, 4);
      sub_1DE8BCF50(v2, v3, v4, 4);
      char v22 = sub_1DE86A4D0(v4, v8);
      sub_1DE8A0390(v2, v3, v4, 4);
      sub_1DE8A0390(v6, v3, v8, 4);
      sub_1DE8A0390(v6, v3, v8, 4);
      sub_1DE8A0390(v2, v3, v4, 4);
      if ((v22 & 1) == 0) {
        goto LABEL_26;
      }
      BOOL result = 1;
      break;
    case 5:
      if (v9 == 5)
      {
        sub_1DE8BCF50(*(void *)a2, *(void *)(a2 + 8), v8, 5);
        sub_1DE8BCF50(v2, v3, v4, 5);
        char v20 = sub_1DE86770C(v2, v6);
        sub_1DE8A0390(v2, v3, v4, 5);
        sub_1DE8A0390(v6, v7, v8, 5);
        BOOL result = v20 & 1;
      }
      else
      {
LABEL_23:
        swift_bridgeObjectRetain();
LABEL_24:
        sub_1DE8BCF50(v6, v7, v8, v9);
        sub_1DE8A0390(v2, v3, v4, v5);
        uint64_t v16 = v6;
        uint64_t v17 = v7;
        uint64_t v18 = v8;
        char v19 = v9;
LABEL_25:
        sub_1DE8A0390(v16, v17, v18, v19);
LABEL_26:
        BOOL result = 0;
      }
      break;
    case 6:
      if (v9 != 6) {
        goto LABEL_24;
      }
      sub_1DE8A0390(*(void *)a1, v3, v4, 6);
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      char v13 = 6;
      goto LABEL_22;
    case 7:
      if (v9 != 7) {
        goto LABEL_24;
      }
      sub_1DE8A0390(*(void *)a1, v3, v4, 7);
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      char v13 = 7;
      goto LABEL_22;
    default:
      if (*(unsigned char *)(a2 + 24)) {
        goto LABEL_24;
      }
      sub_1DE8A0390(*(void *)a1, v3, v4, 0);
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      char v13 = 0;
LABEL_22:
      sub_1DE8A0390(v10, v11, v12, v13);
      return v2 == v6;
  }
  return result;
}

unint64_t sub_1DE8B7BDC()
{
  unint64_t result = qword_1EBEA9468;
  if (!qword_1EBEA9468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9468);
  }
  return result;
}

unint64_t sub_1DE8B7C30()
{
  unint64_t result = qword_1EBEA94F8;
  if (!qword_1EBEA94F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94F8);
  }
  return result;
}

unint64_t sub_1DE8B7C84()
{
  unint64_t result = qword_1EAC0D400;
  if (!qword_1EAC0D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D400);
  }
  return result;
}

unint64_t sub_1DE8B7CD8()
{
  unint64_t result = qword_1EBEA94C8;
  if (!qword_1EBEA94C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94C8);
  }
  return result;
}

unint64_t sub_1DE8B7D2C()
{
  unint64_t result = qword_1EBEA94B0;
  if (!qword_1EBEA94B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94B0);
  }
  return result;
}

unint64_t sub_1DE8B7D80()
{
  unint64_t result = qword_1EBEA94E0;
  if (!qword_1EBEA94E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94E0);
  }
  return result;
}

unint64_t sub_1DE8B7DD4()
{
  unint64_t result = qword_1EBEA9AC0;
  if (!qword_1EBEA9AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AC0);
  }
  return result;
}

unint64_t sub_1DE8B7E28()
{
  unint64_t result = qword_1EBEA9498;
  if (!qword_1EBEA9498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9498);
  }
  return result;
}

unint64_t sub_1DE8B7E7C()
{
  unint64_t result = qword_1EBEA9480;
  if (!qword_1EBEA9480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9480);
  }
  return result;
}

uint64_t sub_1DE8B7ED0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9588);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE8B7F4C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DE8B7F84()
{
  return sub_1DE8A2F10(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1DE8B7FBC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1DE8B7FCC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DE8B7FDC()
{
  return sub_1DE8A3560();
}

uint64_t sub_1DE8B7FE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  unint64_t v3 = *(void *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE82F470(v2, v3);
  return a1;
}

uint64_t sub_1DE8B8060()
{
  return sub_1DE8A8738(*(void *)(v0 + 16));
}

uint64_t sub_1DE8B8068(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1DE84BFB8(0, v2, 0);
  uint64_t v6 = 0;
  uint64_t v7 = v34;
  uint64_t v8 = a1 + 32;
  int64_t v28 = v2;
  uint64_t v29 = a2;
  uint64_t v30 = a1 + 32;
  do
  {
    int v9 = (uint64_t *)(v8 + 16 * v6);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    uint64_t v12 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v32 = v11;
    uint64_t v33 = v10;
    if (v12)
    {
      uint64_t v31 = v7;
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1DE821D84(v11, v10);
      if (v14)
      {
        int64_t v15 = *(void *)(*(void *)(*(void *)(a2 + 56) + 40 * v13 + 24) + 16);
        if (v15)
        {
          uint64_t v16 = swift_bridgeObjectRetain();
          sub_1DE84BBE0(0, v15, 0);
          uint64_t v17 = v3;
          uint64_t v18 = (uint64_t *)(v16 + 40);
          do
          {
            uint64_t v20 = *(v18 - 1);
            uint64_t v19 = *v18;
            unint64_t v22 = *(void *)(v17 + 16);
            unint64_t v21 = *(void *)(v17 + 24);
            swift_bridgeObjectRetain();
            if (v22 >= v21 >> 1)
            {
              sub_1DE84BBE0((char *)(v21 > 1), v22 + 1, 1);
              uint64_t v7 = v31;
            }
            v18 += 14;
            *(void *)(v17 + 16) = v22 + 1;
            uint64_t v23 = v17 + 16 * v22;
            *(void *)(v23 + 32) = v20;
            *(void *)(v23 + 40) = v19;
            --v15;
          }
          while (v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v2 = v28;
          a2 = v29;
          uint64_t v3 = MEMORY[0x1E4FBC860];
          uint64_t v8 = v30;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = v3;
          uint64_t v8 = v30;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v3;
      }
    }
    else
    {
      uint64_t v17 = v3;
    }
    unint64_t v25 = *(void *)(v7 + 16);
    unint64_t v24 = *(void *)(v7 + 24);
    if (v25 >= v24 >> 1) {
      sub_1DE84BFB8((void *)(v24 > 1), v25 + 1, 1);
    }
    ++v6;
    *(void *)(v7 + 16) = v25 + 1;
    uint64_t v26 = (void *)(v7 + 24 * v25);
    v26[4] = v32;
    v26[5] = v33;
    v26[6] = v17;
  }
  while (v6 != v2);
  return v7;
}

char *sub_1DE8B8298(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  char v5 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v7 = *v4;
      swift_bridgeObjectRetain_n();
      unint64_t v8 = sub_1DE821D84(v6, v7);
      if (v9)
      {
        uint64_t v10 = *(void *)(a2 + 56) + 32 * v8;
        uint64_t v12 = *(void *)v10;
        uint64_t v11 = *(void *)(v10 + 8);
        uint64_t v13 = *(void *)(v10 + 16);
        char v14 = *(unsigned char *)(v10 + 25);
        char v21 = *(unsigned char *)(v10 + 26);
        char v22 = *(unsigned char *)(v10 + 24);
        char v19 = *(unsigned char *)(v10 + 28);
        char v20 = *(unsigned char *)(v10 + 27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v5 = sub_1DE83AA94(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v16 = *((void *)v5 + 2);
        unint64_t v15 = *((void *)v5 + 3);
        if (v16 >= v15 >> 1) {
          char v5 = sub_1DE83AA94((char *)(v15 > 1), v16 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v16 + 1;
        uint64_t v17 = &v5[32 * v16];
        *((void *)v17 + 4) = v12;
        *((void *)v17 + 5) = v11;
        *((void *)v17 + 6) = v13;
        v17[56] = v22;
        v17[57] = v14;
        v17[58] = v21;
        v17[59] = v20;
        v17[60] = v19;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DE8B843C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE8B8468(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE8B8494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v11 >= v33) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v31 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v33) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v31 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v33) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v31 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v33) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v31 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_23:
    uint64_t v14 = *(void *)(a1 + 48) + 32 * v10;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    double v17 = *(double *)(v14 + 16);
    uint64_t v18 = *(unsigned __int8 *)(v14 + 24);
    int v19 = *(unsigned __int8 *)(v14 + 25);
    int v20 = *(unsigned __int8 *)(v14 + 26);
    int v21 = *(unsigned __int8 *)(v14 + 27);
    int v22 = *(unsigned __int8 *)(v14 + 28);
    swift_bridgeObjectRetain();
    uint64_t v23 = 256;
    if (!v19) {
      uint64_t v23 = 0;
    }
    unint64_t v24 = v3 & 0xFFFFFF0000000000 | v18 | v23;
    uint64_t v25 = 0x10000;
    if (!v20) {
      uint64_t v25 = 0;
    }
    uint64_t v26 = 0x1000000;
    if (!v21) {
      uint64_t v26 = 0;
    }
    unint64_t v27 = v24 | v25 | v26;
    uint64_t v28 = 0x100000000;
    if (!v22) {
      uint64_t v28 = 0;
    }
    uint64_t v3 = v27 | v28;
    uint64_t v29 = sub_1DE8AA3D0(v35, v15, v16, v27 | v28, v17);
    if (*v30) {
      sub_1DE8AF7EC(a3);
    }
    ((void (*)(double ****, void))v29)(v35, 0);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v33) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v31 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v33) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v31 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DE8B86FC(uint64_t a1, void (*a2)(uint64_t, uint64_t, double))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v4 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v4 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v4 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    int64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    double v16 = *(double *)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DE8B8894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, double))
{
  uint64_t v9 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (1)
  {
    while (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      if (*(void *)(a2 + 16)) {
        goto LABEL_21;
      }
    }
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v15 >= v13) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v9 + 8 * v15);
    if (!v19) {
      break;
    }
LABEL_20:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    if (*(void *)(a2 + 16))
    {
LABEL_21:
      int v21 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v17);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1DE821D84(v22, v23);
      if (v25)
      {
        MEMORY[0x1F4188790](v24, v25);
        uint64_t v26 = swift_bridgeObjectRetain();
        sub_1DE8B86FC(v26, a7);
        swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v20 = v15 + 1;
  if (v15 + 1 >= v13) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_19;
  }
  int64_t v20 = v15 + 2;
  if (v15 + 2 >= v13) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_19;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v13) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_19;
  }
  int64_t v20 = v15 + 4;
  if (v15 + 4 >= v13) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19)
  {
LABEL_19:
    int64_t v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v13) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v9 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DE8B8AB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F55A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE8B8B3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F5560)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE8B8BC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6269737365636361 && a2 == 0xED00007974696C69;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6565726772657665 && a2 == 0xEE0074696D694C6ELL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696D694C63676961 && a2 == 0xE900000000000074 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F1AA0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7669446369706F74 && a2 == 0xEE00797469737265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F54E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F1AC0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F5500)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1DE8B8F60(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F5580)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE8B8FE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F5520)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DE8B9070(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F5540)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

char *sub_1DE8B90F8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v26 = (char *)sub_1DE82ABBC(v0);
  sub_1DE8AD31C(&v26);
  swift_bridgeObjectRelease();
  unint64_t v1 = v26;
  int64_t v2 = *((void *)v26 + 2);
  if (v2)
  {
    uint64_t v26 = (char *)MEMORY[0x1E4FBC860];
    sub_1DE84BFB8(0, v2, 0);
    uint64_t v3 = 0;
    uint64_t v4 = v26;
    int64_t v21 = v2;
    uint64_t v22 = v1 + 32;
    do
    {
      uint64_t v5 = &v22[40 * v3];
      uint64_t v6 = *(void *)v5;
      uint64_t v7 = *((void *)v5 + 1);
      uint64_t v8 = *((void *)v5 + 3);
      int64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v23 = *(void *)v5;
        unint64_t v24 = v4;
        uint64_t v25 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1DE84BBE0(0, v9, 0);
        uint64_t v10 = v25;
        uint64_t v11 = (uint64_t *)(v8 + 40);
        do
        {
          uint64_t v12 = *(v11 - 1);
          uint64_t v13 = *v11;
          unint64_t v15 = *(void *)(v25 + 16);
          unint64_t v14 = *(void *)(v25 + 24);
          swift_bridgeObjectRetain();
          if (v15 >= v14 >> 1) {
            sub_1DE84BBE0((char *)(v14 > 1), v15 + 1, 1);
          }
          v11 += 14;
          *(void *)(v25 + 16) = v15 + 1;
          uint64_t v16 = v25 + 16 * v15;
          *(void *)(v16 + 32) = v12;
          *(void *)(v16 + 40) = v13;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        int64_t v2 = v21;
        uint64_t v6 = v23;
        uint64_t v4 = v24;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = MEMORY[0x1E4FBC860];
      }
      uint64_t v26 = v4;
      unint64_t v18 = *((void *)v4 + 2);
      unint64_t v17 = *((void *)v4 + 3);
      if (v18 >= v17 >> 1)
      {
        sub_1DE84BFB8((void *)(v17 > 1), v18 + 1, 1);
        uint64_t v4 = v26;
      }
      ++v3;
      *((void *)v4 + 2) = v18 + 1;
      unint64_t v19 = &v4[24 * v18];
      *((void *)v19 + 4) = v6;
      *((void *)v19 + 5) = v7;
      *((void *)v19 + 6) = v10;
    }
    while (v3 != v2);
    swift_release();
  }
  else
  {
    swift_release();
    return (char *)MEMORY[0x1E4FBC860];
  }
  return v4;
}

uint64_t sub_1DE8B931C(uint64_t *__src, uint64_t *__dst, char *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = a3;
  uint64_t v7 = __dst;
  uint64_t v8 = __src;
  int64_t v9 = (char *)__dst - (char *)__src;
  int64_t v10 = ((char *)__dst - (char *)__src) / 24;
  uint64_t v11 = a3 - (char *)__dst;
  uint64_t v12 = (a3 - (char *)__dst) / 24;
  uint64_t v54 = a4;
  if (v10 < v12)
  {
    if (a4 != __src || &__src[3 * v10] <= a4)
    {
      memmove(a4, __src, 24 * v10);
      a4 = v54;
    }
    uint64_t v13 = &a4[3 * v10];
    if (v7 >= (uint64_t *)v6 || v9 < 24)
    {
LABEL_54:
      uint64_t v7 = v8;
      goto LABEL_55;
    }
    while (1)
    {
      double v14 = *((double *)v7 + 2);
      double v15 = *((double *)a4 + 2);
      if (v14 == v15)
      {
        uint64_t v16 = *v7;
        uint64_t v17 = v7[1];
        uint64_t v18 = *a4;
        uint64_t v19 = a4[1];
        unint64_t v55 = a4;
        uint64_t v20 = *(void *)(a5 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
        {
          unint64_t v21 = sub_1DE821D84(v16, v17);
          double v22 = 0.0;
          double v23 = 0.0;
          if (v24) {
            double v23 = *(double *)(*(void *)(a5 + 56) + 40 * v21 + 32);
          }
          if (*(void *)(a5 + 16))
          {
            unint64_t v25 = sub_1DE821D84(v18, v19);
            if (v26) {
              double v22 = *(double *)(*(void *)(a5 + 56) + 40 * v25 + 32);
            }
          }
        }
        else
        {
          double v23 = 0.0;
          double v22 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a4 = v55;
        if (v22 >= v23)
        {
LABEL_15:
          unint64_t v27 = a4;
          BOOL v28 = v8 == a4;
          a4 += 3;
          if (v28) {
            goto LABEL_17;
          }
LABEL_16:
          long long v29 = *(_OWORD *)v27;
          v8[2] = v27[2];
          *(_OWORD *)uint64_t v8 = v29;
          goto LABEL_17;
        }
      }
      else if (v15 >= v14)
      {
        goto LABEL_15;
      }
      unint64_t v27 = v7;
      BOOL v28 = v8 == v7;
      v7 += 3;
      if (!v28) {
        goto LABEL_16;
      }
LABEL_17:
      v8 += 3;
      if (a4 >= v13 || v7 >= (uint64_t *)v6) {
        goto LABEL_54;
      }
    }
  }
  if (a4 != __dst || &__dst[3 * v12] <= a4)
  {
    memmove(a4, __dst, 24 * v12);
    a4 = v54;
  }
  uint64_t v13 = &a4[3 * v12];
  if (v8 < v7 && v11 >= 24)
  {
    uint64_t v30 = v7;
    while (1)
    {
      uint64_t v32 = (char *)(v13 - 3);
      uint64_t v31 = *(v13 - 3);
      double v33 = *((double *)v13 - 1);
      uint64_t v35 = *(v30 - 3);
      v30 -= 3;
      uint64_t v34 = v35;
      double v36 = *((double *)v30 + 2);
      if (v33 != v36)
      {
        unint64_t v47 = (unint64_t)(v6 - 24);
        if (v36 >= v33) {
          goto LABEL_39;
        }
        goto LABEL_47;
      }
      uint64_t v52 = v34;
      uint64_t v53 = v6;
      long long v37 = v13;
      uint64_t v38 = *(v13 - 2);
      uint64_t v39 = v30[1];
      uint64_t v40 = *(void *)(a5 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v40) {
        break;
      }
      unint64_t v41 = sub_1DE821D84(v31, v38);
      double v42 = 0.0;
      double v43 = 0.0;
      if (v44) {
        double v43 = *(double *)(*(void *)(a5 + 56) + 40 * v41 + 32);
      }
      uint64_t v13 = v37;
      if (!*(void *)(a5 + 16)) {
        goto LABEL_45;
      }
      unint64_t v45 = sub_1DE821D84(v52, v39);
      uint64_t v6 = v53;
      if (v46) {
        double v42 = *(double *)(*(void *)(a5 + 56) + 40 * v45 + 32);
      }
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v47 = (unint64_t)(v6 - 24);
      a4 = v54;
      if (v42 >= v43)
      {
LABEL_39:
        if (v6 < (char *)v13 || v47 >= (unint64_t)v13 || v6 != (char *)v13)
        {
          long long v48 = *(_OWORD *)v32;
          *(void *)(v47 + 16) = *((void *)v32 + 2);
          *(_OWORD *)unint64_t v47 = v48;
        }
        uint64_t v30 = v7;
        uint64_t v13 = (uint64_t *)v32;
        goto LABEL_51;
      }
LABEL_47:
      if (v6 < (char *)v7 || v47 >= (unint64_t)v7 || v6 != (char *)v7)
      {
        long long v49 = *(_OWORD *)v30;
        *(void *)(v47 + 16) = v30[2];
        *(_OWORD *)unint64_t v47 = v49;
      }
LABEL_51:
      if (v30 > v8)
      {
        uint64_t v7 = v30;
        uint64_t v6 = (char *)v47;
        if (v13 > a4) {
          continue;
        }
      }
      uint64_t v7 = v30;
      goto LABEL_55;
    }
    double v43 = 0.0;
    double v42 = 0.0;
    uint64_t v13 = v37;
LABEL_45:
    uint64_t v6 = v53;
    goto LABEL_46;
  }
LABEL_55:
  uint64_t v50 = ((char *)v13 - (char *)a4) / 24;
  if (v7 != a4 || v7 >= &a4[3 * v50]) {
    memmove(v7, a4, 24 * v50);
  }
  return 1;
}

uint64_t sub_1DE8B9700(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v26 = *a4;
    uint64_t v7 = *a4 + 24 * a3;
LABEL_5:
    uint64_t v8 = v26 + 24 * v6;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    double v11 = *(double *)(v8 + 16);
    uint64_t v12 = v24;
    uint64_t v25 = v7;
    while (1)
    {
      uint64_t v13 = *(void *)(v7 - 24);
      double v14 = *(double *)(v7 - 8);
      if (v11 == v14)
      {
        uint64_t v15 = *(void *)(v7 - 16);
        uint64_t v16 = *(void *)(a5 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16)
        {
          unint64_t v17 = sub_1DE821D84(v9, v10);
          double v18 = 0.0;
          double v19 = 0.0;
          if (v20) {
            double v19 = *(double *)(*(void *)(a5 + 56) + 40 * v17 + 32);
          }
          if (*(void *)(a5 + 16))
          {
            unint64_t v21 = sub_1DE821D84(v13, v15);
            if (v22) {
              double v18 = *(double *)(*(void *)(a5 + 56) + 40 * v21 + 32);
            }
          }
        }
        else
        {
          double v19 = 0.0;
          double v18 = 0.0;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v18 >= v19)
        {
LABEL_4:
          ++v6;
          uint64_t v7 = v25 + 24;
          if (v6 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      else if (v14 >= v11)
      {
        goto LABEL_4;
      }
      if (!v26) {
        break;
      }
      uint64_t v9 = *(void *)v7;
      uint64_t v10 = *(void *)(v7 + 8);
      double v11 = *(double *)(v7 + 16);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 24);
      *(void *)(v7 + 16) = *(void *)(v7 - 8);
      *(void *)(v7 - 16) = v10;
      *(double *)(v7 - 8) = v11;
      *(void *)(v7 - 24) = v9;
      v7 -= 24;
      if (v6 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DE8B98A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1DE8E1A70();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_164;
    }
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_1DE8B9700(0, v5, 1, a1, a2);
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_140:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_163;
  }
  uint64_t v152 = a2;
  uint64_t v153 = v2;
  uint64_t v147 = v5;
  uint64_t v145 = v6;
  char v142 = a1;
  if (v5 <= 1)
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v150 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v144 = MEMORY[0x1E4FBC860];
    if (v5 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_127:
      uint64_t v155 = (uint64_t)v10;
      if (v14 >= 2)
      {
        uint64_t v132 = *v142;
        do
        {
          unint64_t v133 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_158;
          }
          if (!v132) {
            goto LABEL_171;
          }
          uint64_t v134 = *(void *)(v155 + 32 + 16 * v133);
          uint64_t v135 = *(void *)(v155 + 32 + 16 * (v14 - 1) + 8);
          BOOL v136 = (uint64_t *)(v132 + 24 * *(void *)(v155 + 32 + 16 * (v14 - 1)));
          swift_bridgeObjectRetain();
          sub_1DE8B931C((uint64_t *)(v132 + 24 * v134), v136, (char *)(v132 + 24 * v135), v150, v152);
          if (v153) {
            goto LABEL_139;
          }
          swift_bridgeObjectRelease();
          if (v135 < v134) {
            goto LABEL_159;
          }
          uint64_t v137 = (char *)v155;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v137 = sub_1DE8CA510(v155);
          }
          if (v133 >= *((void *)v137 + 2)) {
            goto LABEL_160;
          }
          uint64_t v138 = v137 + 32;
          unint64_t v139 = &v137[16 * v133 + 32];
          *(void *)unint64_t v139 = v134;
          *((void *)v139 + 1) = v135;
          uint64_t v140 = v137;
          unint64_t v141 = *((void *)v137 + 2);
          if (v14 > v141) {
            goto LABEL_161;
          }
          memmove(&v138[16 * v14 - 16], &v138[16 * v14], 16 * (v141 - v14));
          uint64_t v155 = (uint64_t)v140;
          *((void *)v140 + 2) = v141 - 1;
          unint64_t v14 = v141 - 1;
        }
        while (v141 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v144 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7F00);
    uint64_t v9 = sub_1DE8E15C0();
    *(void *)(v9 + 16) = v8;
    uint64_t v144 = v9;
    uint64_t v150 = (uint64_t *)(v9 + 32);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v143 = *a1 + 32;
  uint64_t v154 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v13 = v147;
  uint64_t v156 = *a1;
  while (1)
  {
    uint64_t v15 = v11++;
    if (v11 < v13)
    {
      uint64_t v16 = v12 + 24 * v11;
      double v17 = *(double *)(v16 + 16);
      uint64_t v18 = v12 + 24 * v15;
      double v19 = *(double *)(v18 + 16);
      if (v17 == v19)
      {
        uint64_t v20 = *(void *)v16;
        uint64_t v21 = *(void *)(v16 + 8);
        uint64_t v23 = *(void *)v18;
        uint64_t v22 = *(void *)(v18 + 8);
        uint64_t v24 = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24)
        {
          unint64_t v25 = sub_1DE821D84(v20, v21);
          double v26 = 0.0;
          double v27 = 0.0;
          if (v28) {
            double v27 = *(double *)(*(void *)(a2 + 56) + 40 * v25 + 32);
          }
          if (*(void *)(a2 + 16))
          {
            unint64_t v29 = sub_1DE821D84(v23, v22);
            if (v30) {
              double v26 = *(double *)(*(void *)(a2 + 56) + 40 * v29 + 32);
            }
          }
        }
        else
        {
          double v27 = 0.0;
          double v26 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v31 = v26 < v27;
        uint64_t v13 = v147;
        uint64_t v12 = v156;
      }
      else
      {
        int v31 = v19 < v17;
      }
      uint64_t v11 = v15 + 2;
      if (v15 + 2 < v13)
      {
        uint64_t v32 = v143 + 24 * v15;
        uint64_t v33 = v32;
        while (1)
        {
          uint64_t v35 = *(void *)(v33 + 24);
          v33 += 24;
          uint64_t v34 = v35;
          double v36 = *(double *)(v32 + 32);
          double v37 = *(double *)(v32 + 8);
          if (v36 == v37)
          {
            uint64_t v38 = *(void *)(v32 + 16);
            uint64_t v40 = *(void *)(v32 - 8);
            uint64_t v39 = *(void *)v32;
            uint64_t v41 = *(void *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v41)
            {
              unint64_t v42 = sub_1DE821D84(v38, v34);
              double v43 = 0.0;
              double v44 = 0.0;
              if (v45) {
                double v44 = *(double *)(*(void *)(a2 + 56) + 40 * v42 + 32);
              }
              if (*(void *)(a2 + 16))
              {
                unint64_t v46 = sub_1DE821D84(v40, v39);
                if (v47) {
                  double v43 = *(double *)(*(void *)(a2 + 56) + 40 * v46 + 32);
                }
              }
            }
            else
            {
              double v44 = 0.0;
              double v43 = 0.0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v48 = v43 < v44;
            uint64_t v12 = v156;
          }
          else
          {
            int v48 = v37 < v36;
          }
          uint64_t v13 = v147;
          if (v31 != v48) {
            break;
          }
          ++v11;
          uint64_t v32 = v33;
          if (v147 == v11)
          {
            uint64_t v11 = v147;
            break;
          }
        }
      }
      if (v31)
      {
        if (v11 < v15) {
          goto LABEL_165;
        }
        if (v15 < v11)
        {
          uint64_t v49 = 24 * v11;
          uint64_t v50 = 24 * v15;
          uint64_t v51 = v11;
          uint64_t v52 = v15;
          do
          {
            if (v52 != --v51)
            {
              if (!v12) {
                goto LABEL_170;
              }
              uint64_t v53 = v12 + v50;
              uint64_t v54 = v12 + v49;
              uint64_t v55 = *(void *)(v12 + v50);
              uint64_t v56 = *(void *)(v12 + v50 + 8);
              uint64_t v57 = *(void *)(v12 + v50 + 16);
              uint64_t v58 = *(void *)(v12 + v49 - 8);
              *(_OWORD *)uint64_t v53 = *(_OWORD *)(v12 + v49 - 24);
              *(void *)(v53 + 16) = v58;
              *(void *)(v54 - 24) = v55;
              *(void *)(v54 - 16) = v56;
              *(void *)(v54 - 8) = v57;
            }
            ++v52;
            v49 -= 24;
            v50 += 24;
          }
          while (v52 < v51);
        }
      }
    }
    if (v11 >= v13) {
      goto LABEL_77;
    }
    if (__OFSUB__(v11, v15)) {
      goto LABEL_162;
    }
    if (v11 - v15 >= v145) {
      goto LABEL_77;
    }
    if (__OFADD__(v15, v145)) {
      goto LABEL_166;
    }
    uint64_t v59 = v15 + v145 >= v13 ? v13 : v15 + v145;
    if (v59 < v15) {
      break;
    }
    if (v11 != v59)
    {
      uint64_t v60 = v12 + 24 * v11;
      uint64_t v146 = v15;
      uint64_t v148 = v59;
      do
      {
        uint64_t v61 = v12 + 24 * v11;
        uint64_t v62 = *(void *)v61;
        uint64_t v63 = *(void *)(v61 + 8);
        double v64 = *(double *)(v61 + 16);
        uint64_t v65 = v15;
        uint64_t v151 = v60;
        do
        {
          uint64_t v66 = *(void *)(v60 - 24);
          double v67 = *(double *)(v60 - 8);
          if (v64 == v67)
          {
            uint64_t v68 = v11;
            uint64_t v69 = *(void *)(v60 - 16);
            uint64_t v70 = *(void *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v70)
            {
              unint64_t v71 = sub_1DE821D84(v62, v63);
              double v72 = 0.0;
              double v73 = 0.0;
              if (v74) {
                double v73 = *(double *)(*(void *)(a2 + 56) + 40 * v71 + 32);
              }
              uint64_t v11 = v68;
              if (*(void *)(a2 + 16))
              {
                unint64_t v75 = sub_1DE821D84(v66, v69);
                if (v76) {
                  double v72 = *(double *)(*(void *)(a2 + 56) + 40 * v75 + 32);
                }
              }
            }
            else
            {
              double v73 = 0.0;
              double v72 = 0.0;
              uint64_t v11 = v68;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v12 = v156;
            if (v72 >= v73) {
              break;
            }
          }
          else if (v67 >= v64)
          {
            break;
          }
          if (!v12) {
            goto LABEL_168;
          }
          uint64_t v62 = *(void *)v60;
          uint64_t v63 = *(void *)(v60 + 8);
          double v64 = *(double *)(v60 + 16);
          *(_OWORD *)uint64_t v60 = *(_OWORD *)(v60 - 24);
          *(void *)(v60 + 16) = *(void *)(v60 - 8);
          *(void *)(v60 - 16) = v63;
          *(double *)(v60 - 8) = v64;
          *(void *)(v60 - 24) = v62;
          v60 -= 24;
          ++v65;
        }
        while (v11 != v65);
        ++v11;
        uint64_t v60 = v151 + 24;
        uint64_t v15 = v146;
      }
      while (v11 != v148);
      uint64_t v11 = v148;
    }
LABEL_77:
    if (v11 < v15) {
      goto LABEL_157;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v154 = sub_1DE8CA414(0, *((void *)v154 + 2) + 1, 1, v154);
    }
    unint64_t v78 = *((void *)v154 + 2);
    unint64_t v77 = *((void *)v154 + 3);
    unint64_t v14 = v78 + 1;
    uint64_t v12 = v156;
    if (v78 >= v77 >> 1)
    {
      uint64_t v154 = sub_1DE8CA414((char *)(v77 > 1), v78 + 1, 1, v154);
      uint64_t v12 = v156;
    }
    *((void *)v154 + 2) = v14;
    uint64_t v79 = &v154[16 * v78 + 32];
    *(void *)uint64_t v79 = v15;
    *((void *)v79 + 1) = v11;
    if (v78)
    {
      unint64_t v80 = v154 + 32;
      uint64_t v149 = v11;
      while (1)
      {
        unint64_t v81 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v86 = &v80[16 * v14];
          uint64_t v87 = *((void *)v86 - 8);
          uint64_t v88 = *((void *)v86 - 7);
          BOOL v92 = __OFSUB__(v88, v87);
          uint64_t v89 = v88 - v87;
          if (v92) {
            goto LABEL_146;
          }
          uint64_t v91 = *((void *)v86 - 6);
          uint64_t v90 = *((void *)v86 - 5);
          BOOL v92 = __OFSUB__(v90, v91);
          uint64_t v84 = v90 - v91;
          char v85 = v92;
          if (v92) {
            goto LABEL_147;
          }
          unint64_t v93 = v14 - 2;
          uint64_t v94 = &v80[16 * v14 - 32];
          uint64_t v96 = *(void *)v94;
          uint64_t v95 = *((void *)v94 + 1);
          BOOL v92 = __OFSUB__(v95, v96);
          uint64_t v97 = v95 - v96;
          if (v92) {
            goto LABEL_148;
          }
          BOOL v92 = __OFADD__(v84, v97);
          uint64_t v98 = v84 + v97;
          if (v92) {
            goto LABEL_150;
          }
          if (v98 >= v89)
          {
            uint64_t v116 = &v80[16 * v81];
            uint64_t v118 = *(void *)v116;
            uint64_t v117 = *((void *)v116 + 1);
            BOOL v92 = __OFSUB__(v117, v118);
            uint64_t v119 = v117 - v118;
            if (v92) {
              goto LABEL_156;
            }
            BOOL v109 = v84 < v119;
            goto LABEL_115;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v110 = *((void *)v154 + 4);
            uint64_t v111 = *((void *)v154 + 5);
            BOOL v92 = __OFSUB__(v111, v110);
            uint64_t v103 = v111 - v110;
            char v104 = v92;
            goto LABEL_109;
          }
          uint64_t v83 = *((void *)v154 + 4);
          uint64_t v82 = *((void *)v154 + 5);
          BOOL v92 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          char v85 = v92;
        }
        if (v85) {
          goto LABEL_149;
        }
        unint64_t v93 = v14 - 2;
        uint64_t v99 = &v80[16 * v14 - 32];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v102 = __OFSUB__(v100, v101);
        uint64_t v103 = v100 - v101;
        char v104 = v102;
        if (v102) {
          goto LABEL_151;
        }
        int v105 = &v80[16 * v81];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v92 = __OFSUB__(v106, v107);
        uint64_t v108 = v106 - v107;
        if (v92) {
          goto LABEL_153;
        }
        if (__OFADD__(v103, v108)) {
          goto LABEL_155;
        }
        if (v103 + v108 >= v84)
        {
          BOOL v109 = v84 < v108;
LABEL_115:
          if (v109) {
            unint64_t v81 = v93;
          }
          goto LABEL_117;
        }
LABEL_109:
        if (v104) {
          goto LABEL_152;
        }
        long long v112 = &v80[16 * v81];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        BOOL v92 = __OFSUB__(v113, v114);
        uint64_t v115 = v113 - v114;
        if (v92) {
          goto LABEL_154;
        }
        if (v115 < v103) {
          goto LABEL_15;
        }
LABEL_117:
        unint64_t v120 = v81 - 1;
        if (v81 - 1 >= v14)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        if (!v12) {
          goto LABEL_169;
        }
        uint64_t v121 = v80;
        uint64_t v122 = &v80[16 * v120];
        uint64_t v123 = *(void *)v122;
        unint64_t v124 = v81;
        uint64_t v125 = &v121[16 * v81];
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v127 = (uint64_t *)(v12 + 24 * *(void *)v122);
        uint64_t v128 = (uint64_t *)(v12 + 24 * *(void *)v125);
        uint64_t v129 = (char *)(v12 + 24 * v126);
        swift_bridgeObjectRetain();
        sub_1DE8B931C(v127, v128, v129, v150, v152);
        if (v153)
        {
LABEL_139:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(v144 + 16) = 0;
          goto LABEL_140;
        }
        swift_bridgeObjectRelease();
        if (v126 < v123) {
          goto LABEL_143;
        }
        if (v124 > *((void *)v154 + 2)) {
          goto LABEL_144;
        }
        *(void *)uint64_t v122 = v123;
        unint64_t v80 = v154 + 32;
        *(void *)&v154[16 * v120 + 40] = v126;
        unint64_t v130 = *((void *)v154 + 2);
        if (v124 >= v130) {
          goto LABEL_145;
        }
        uint64_t v153 = 0;
        unint64_t v14 = v130 - 1;
        memmove(v125, v125 + 16, 16 * (v130 - 1 - v124));
        *((void *)v154 + 2) = v130 - 1;
        a2 = v152;
        uint64_t v12 = v156;
        uint64_t v11 = v149;
        if (v130 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    uint64_t v13 = v147;
    if (v11 >= v147)
    {
      uint64_t v10 = v154;
      goto LABEL_127;
    }
  }
LABEL_167:
  __break(1u);
LABEL_168:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_169:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_170:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_171:
  uint64_t result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

uint64_t sub_1DE8BA26C(uint64_t a1, uint64_t a2, void *__src)
{
  memcpy(__dst, __src, 0x768uLL);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DE81FA70(v5);
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (char *)sub_1DE82A8F0(v7);
  uint64_t v40 = v6;
  swift_bridgeObjectRelease();
  uint64_t v41 = v8;
  sub_1DE8BB58C(&v41, a1);
  swift_bridgeObjectRelease();
  uint64_t v9 = v41;
  uint64_t v10 = MEMORY[0x1E4FBC868];
  v58[0] = MEMORY[0x1E4FBC868];
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    double v37 = v41;
    uint64_t v38 = a1;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v39 = a2;
    do
    {
      uint64_t v13 = a2 + v12;
      uint64_t v15 = *(void *)(a2 + v12 + 64);
      uint64_t v14 = *(void *)(v13 + 72);
      uint64_t v16 = *(void *)(v13 + 80);
      uint64_t v17 = *(void *)(v13 + 104);
      unint64_t v18 = *(void *)(v13 + 112);
      char v19 = *(unsigned char *)(v13 + 136);
      uint64_t v20 = *(void *)(v13 + 128);
      char v21 = *(unsigned char *)(v13 + 120);
      char v22 = *(unsigned char *)(v13 + 99);
      char v23 = *(unsigned char *)(v13 + 98);
      char v24 = *(unsigned char *)(v13 + 97);
      char v25 = *(unsigned char *)(v13 + 96);
      uint64_t v26 = *(void *)(v13 + 88);
      uint64_t v27 = *(void *)(v13 + 48);
      uint64_t v28 = *(void *)(v13 + 56);
      uint64_t v29 = *(void *)(v13 + 40);
      uint64_t v41 = *(char **)(v13 + 32);
      uint64_t v42 = v29;
      uint64_t v43 = v27;
      uint64_t v44 = v28;
      uint64_t v45 = v15;
      uint64_t v46 = v14;
      uint64_t v47 = v16;
      uint64_t v48 = v26;
      char v49 = v25;
      char v50 = v24;
      char v51 = v23;
      char v52 = v22;
      uint64_t v53 = v17;
      unint64_t v54 = v18;
      char v55 = v21;
      uint64_t v56 = v20;
      char v57 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DE82F404(v17, v18);
      sub_1DE8ABD30(v58, (uint64_t)&v41, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE82F470(v17, v18);
      v12 += 112;
      --v11;
      a2 = v39;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v10 = v58[0];
    uint64_t v9 = v37;
    a1 = v38;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE84E628((uint64_t)__dst);
  uint64_t v30 = sub_1DE8B13BC(MEMORY[0x1E4FBC868], v40, v10, v40, (uint64_t)__dst);
  sub_1DE850D3C((uint64_t)__dst);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v58[0] = MEMORY[0x1E4FBC860];
  uint64_t v31 = *((void *)v9 + 2);
  if (v31)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = (uint64_t *)(v9 + 40);
    do
    {
      uint64_t v33 = *v32;
      uint64_t v41 = (char *)*(v32 - 1);
      uint64_t v42 = v33;
      swift_bridgeObjectRetain();
      sub_1DE8AC218((uint64_t)v58, (uint64_t *)&v41, (uint64_t)__dst, v30, a1);
      v32 += 2;
      swift_bridgeObjectRelease();
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v34 = v58[0];
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1DE8B8068(v34, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1DE8BA5E8(uint64_t *__dst, uint64_t *__src, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7 = a3;
  uint64_t v8 = __src;
  uint64_t v9 = __dst;
  int64_t v10 = (char *)__src - (char *)__dst;
  int64_t v11 = (char *)__src - (char *)__dst + 15;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v11 = (char *)__src - (char *)__dst;
  }
  uint64_t v12 = v11 >> 4;
  uint64_t v13 = (char *)a3 - (char *)__src;
  uint64_t v14 = (char *)a3 - (char *)__src + 15;
  if ((char *)a3 - (char *)__src >= 0) {
    uint64_t v14 = (char *)a3 - (char *)__src;
  }
  uint64_t v15 = v14 >> 4;
  if (v12 >= v14 >> 4)
  {
    if (a4 != __src || &__src[2 * v15] <= a4) {
      memmove(a4, __src, 16 * v15);
    }
    uint64_t v46 = a4;
    uint64_t v17 = (char *)&a4[2 * v15];
    if (v9 >= v8 || v13 < 16)
    {
LABEL_62:
      uint64_t v16 = v46;
      goto LABEL_63;
    }
    uint64_t v32 = v8;
    while (1)
    {
      uint64_t v33 = (uint64_t *)(v17 - 16);
      uint64_t v48 = v17;
      uint64_t v34 = *((void *)v17 - 1);
      uint64_t v36 = *(v32 - 2);
      uint64_t v35 = *(v32 - 1);
      v32 -= 2;
      uint64_t v47 = v33;
      if (*(void *)(a5 + 16))
      {
        uint64_t v37 = *v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v38 = sub_1DE821D84(v37, v34);
        double v39 = 0.0;
        if (v40) {
          double v39 = *(double *)(*(void *)(a5 + 56) + 40 * v38 + 32);
        }
        uint64_t v41 = v7 - 2;
        if (*(void *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v42 = sub_1DE821D84(v36, v35);
          if (v43)
          {
            double v44 = *(double *)(*(void *)(a5 + 56) + 40 * v42 + 32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v17 = v48;
            if (v44 < v39) {
              goto LABEL_54;
            }
            goto LABEL_44;
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v41 = v7 - 2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v39 = 0.0;
      }
      uint64_t v17 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v39 > 0.0)
      {
LABEL_54:
        if (v7 < v8 || v41 >= v8 || v7 != v8) {
          *(_OWORD *)uint64_t v41 = *(_OWORD *)v32;
        }
        goto LABEL_58;
      }
LABEL_44:
      if (v7 < (uint64_t *)v17 || v41 >= (uint64_t *)v17)
      {
        uint64_t v17 = (char *)v47;
      }
      else
      {
        BOOL v30 = v7 == (uint64_t *)v17;
        uint64_t v17 = (char *)v47;
        if (v30)
        {
          uint64_t v32 = v8;
          goto LABEL_58;
        }
      }
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v17;
      uint64_t v32 = v8;
LABEL_58:
      if (v32 <= v9)
      {
        uint64_t v8 = v32;
        goto LABEL_62;
      }
      uint64_t v8 = v32;
      uint64_t v7 = v41;
      uint64_t v16 = v46;
      if (v17 <= (char *)v46)
      {
        uint64_t v8 = v32;
        goto LABEL_63;
      }
    }
  }
  uint64_t v16 = a4;
  if (a4 != __dst || &__dst[2 * v12] <= a4) {
    memmove(a4, __dst, 16 * v12);
  }
  uint64_t v17 = (char *)&a4[2 * v12];
  if (v8 < v7 && v10 >= 16)
  {
    do
    {
      uint64_t v18 = v8[1];
      uint64_t v19 = v16[1];
      if (*(void *)(a5 + 16))
      {
        uint64_t v20 = v17;
        uint64_t v21 = *v16;
        uint64_t v22 = *v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_1DE821D84(v22, v18);
        double v24 = 0.0;
        if (v25) {
          double v24 = *(double *)(*(void *)(a5 + 56) + 40 * v23 + 32);
        }
        if (*(void *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v26 = sub_1DE821D84(v21, v19);
          if (v27)
          {
            double v28 = *(double *)(*(void *)(a5 + 56) + 40 * v26 + 32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v17 = v20;
            if (v28 < v24) {
              goto LABEL_24;
            }
            goto LABEL_17;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v17 = v20;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v24 = 0.0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24 > 0.0)
      {
LABEL_24:
        uint64_t v31 = v8 + 2;
        uint64_t v29 = v8;
        if (v9 == v8)
        {
          v8 += 2;
          if (v9 < v31) {
            goto LABEL_29;
          }
        }
        else
        {
          v8 += 2;
        }
LABEL_28:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v29;
        goto LABEL_29;
      }
LABEL_17:
      uint64_t v29 = v16;
      BOOL v30 = v9 == v16;
      v16 += 2;
      if (!v30) {
        goto LABEL_28;
      }
LABEL_29:
      v9 += 2;
    }
    while (v16 < (uint64_t *)v17 && v8 < v7);
  }
  uint64_t v8 = v9;
LABEL_63:
  if (v8 != v16
    || v8 >= (uint64_t *)((char *)v16
                       + ((v17 - (char *)v16 + (v17 - (char *)v16 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0)))
  {
    memmove(v8, v16, 16 * ((v17 - (char *)v16) / 16));
  }
  return 1;
}

uint64_t sub_1DE8BA9F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v22 = result;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = *a4;
    uint64_t v8 = (uint64_t *)(*a4 + 16 * a3);
LABEL_5:
    uint64_t v9 = *(void *)(v7 + 16 * v6 + 8);
    uint64_t v10 = v22;
    unint64_t v23 = v8;
    while (1)
    {
      uint64_t v12 = *(v8 - 2);
      uint64_t v11 = *(v8 - 1);
      if (*(void *)(a5 + 16))
      {
        uint64_t v13 = *v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v14 = sub_1DE821D84(v13, v9);
        double v15 = 0.0;
        if (v16) {
          double v15 = *(double *)(*(void *)(a5 + 56) + 40 * v14 + 32);
        }
        if (*(void *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v17 = sub_1DE821D84(v12, v11);
          if (v18)
          {
            double v19 = *(double *)(*(void *)(a5 + 56) + 40 * v17 + 32);
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease_n();
            if (v19 >= v15) {
              goto LABEL_4;
            }
            goto LABEL_16;
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v15 = 0.0;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v15 <= 0.0) {
        goto LABEL_4;
      }
LABEL_16:
      if (!v7)
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = *v8;
      uint64_t v9 = v8[1];
      *(_OWORD *)uint64_t v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v9;
      *(v8 - 2) = v20;
      v8 -= 2;
      if (v6 == ++v10)
      {
LABEL_4:
        ++v6;
        uint64_t v8 = v23 + 2;
        if (v6 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1DE8BAB8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1DE8E1A70();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_160;
    }
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_1DE8BA9F0(0, v5, 1, a1, a2);
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_137:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_159;
  }
  uint64_t v141 = a2;
  uint64_t v129 = v6;
  uint64_t v130 = v5;
  uint64_t v138 = v2;
  uint64_t v126 = a1;
  if (v5 > 1)
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_1DE8E15C0();
    *(void *)(v9 + 16) = v8;
    uint64_t v128 = v9;
    unint64_t v133 = (uint64_t *)(v9 + 32);
LABEL_13:
    uint64_t v11 = 0;
    uint64_t v139 = *a1;
    uint64_t v127 = *a1 + 24;
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v12 = v130;
    while (1)
    {
      uint64_t v14 = v11++;
      if (v11 >= v12)
      {
        uint64_t v27 = v139;
      }
      else
      {
        double v15 = (uint64_t *)(v139 + 16 * v11);
        uint64_t v16 = v15[1];
        unint64_t v17 = (uint64_t *)(v139 + 16 * v14);
        uint64_t v18 = v17[1];
        if (*(void *)(a2 + 16))
        {
          uint64_t v19 = *v17;
          uint64_t v20 = *v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v21 = sub_1DE821D84(v20, v16);
          a2 = v141;
          double v22 = 0.0;
          double v23 = 0.0;
          if (v24) {
            double v23 = *(double *)(*(void *)(v141 + 56) + 40 * v21 + 32);
          }
          if (*(void *)(v141 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v25 = sub_1DE821D84(v19, v18);
            if (v26) {
              double v22 = *(double *)(*(void *)(v141 + 56) + 40 * v25 + 32);
            }
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          double v23 = 0.0;
          double v22 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v14 + 2;
        uint64_t v12 = v130;
        if (v14 + 2 < v130)
        {
          double v28 = (uint64_t *)(v127 + 16 * v14);
          uint64_t v29 = v28;
          while (1)
          {
            uint64_t v32 = v29[2];
            v29 += 2;
            uint64_t v31 = v32;
            uint64_t v33 = *v28;
            if (*(void *)(a2 + 16))
            {
              uint64_t v34 = *(v28 - 1);
              uint64_t v35 = v28[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v36 = sub_1DE821D84(v35, v31);
              a2 = v141;
              double v30 = 0.0;
              if (v37) {
                double v30 = *(double *)(*(void *)(v141 + 56) + 40 * v36 + 32);
              }
              if (*(void *)(v141 + 16))
              {
                swift_bridgeObjectRetain();
                unint64_t v38 = sub_1DE821D84(v34, v33);
                if (v39)
                {
                  double v40 = *(double *)(*(void *)(v141 + 56) + 40 * v38 + 32);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  if (v22 < v23 == v40 >= v30)
                  {
LABEL_39:
                    uint64_t v12 = v130;
                    break;
                  }
                  goto LABEL_30;
                }
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              double v30 = 0.0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v22 < v23 == v30 <= 0.0) {
              goto LABEL_39;
            }
LABEL_30:
            ++v11;
            double v28 = v29;
            uint64_t v12 = v130;
            if (v130 == v11)
            {
              uint64_t v11 = v130;
              break;
            }
          }
        }
        uint64_t v27 = v139;
        if (v22 < v23)
        {
          if (v11 < v14) {
            goto LABEL_161;
          }
          if (v14 < v11)
          {
            uint64_t v41 = 16 * v11;
            uint64_t v42 = 16 * v14;
            uint64_t v43 = v11;
            uint64_t v44 = v14;
            do
            {
              if (v44 != --v43)
              {
                if (!v139) {
                  goto LABEL_166;
                }
                uint64_t v45 = v139 + v41;
                uint64_t v46 = *(void *)(v139 + v42);
                uint64_t v47 = *(void *)(v139 + v42 + 8);
                *(_OWORD *)(v139 + v42) = *(_OWORD *)(v139 + v41 - 16);
                *(void *)(v45 - 16) = v46;
                *(void *)(v45 - 8) = v47;
              }
              ++v44;
              v41 -= 16;
              v42 += 16;
            }
            while (v44 < v43);
          }
        }
      }
      if (v11 >= v12) {
        goto LABEL_74;
      }
      if (__OFSUB__(v11, v14)) {
        goto LABEL_158;
      }
      if (v11 - v14 >= v129) {
        goto LABEL_74;
      }
      uint64_t v48 = v14 + v129;
      if (__OFADD__(v14, v129)) {
        goto LABEL_162;
      }
      if (v48 >= v12) {
        uint64_t v48 = v12;
      }
      if (v48 < v14)
      {
LABEL_163:
        __break(1u);
LABEL_164:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_165:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_166:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_167:
        uint64_t result = swift_bridgeObjectRelease_n();
        __break(1u);
        return result;
      }
      if (v11 == v48) {
        goto LABEL_74;
      }
      uint64_t v136 = v14;
      char v49 = (uint64_t *)(v27 + 16 * v11);
      uint64_t v131 = v48;
      while (2)
      {
        uint64_t v50 = *(void *)(v27 + 16 * v11 + 8);
        uint64_t v51 = v136;
        char v52 = v49;
        do
        {
          uint64_t v54 = *(v52 - 2);
          uint64_t v53 = *(v52 - 1);
          if (*(void *)(a2 + 16))
          {
            uint64_t v55 = *v52;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v56 = sub_1DE821D84(v55, v50);
            a2 = v141;
            double v57 = 0.0;
            if (v58) {
              double v57 = *(double *)(*(void *)(v141 + 56) + 40 * v56 + 32);
            }
            if (*(void *)(v141 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v59 = sub_1DE821D84(v54, v53);
              if (v60)
              {
                double v61 = *(double *)(*(void *)(v141 + 56) + 40 * v59 + 32);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                if (v61 >= v57) {
                  break;
                }
                goto LABEL_70;
              }
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            double v57 = 0.0;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57 <= 0.0) {
            break;
          }
LABEL_70:
          if (!v139) {
            goto LABEL_164;
          }
          uint64_t v62 = *v52;
          uint64_t v50 = v52[1];
          *(_OWORD *)char v52 = *((_OWORD *)v52 - 1);
          *(v52 - 1) = v50;
          *(v52 - 2) = v62;
          v52 -= 2;
          ++v51;
        }
        while (v11 != v51);
        ++v11;
        v49 += 2;
        uint64_t v27 = v139;
        if (v11 != v131) {
          continue;
        }
        break;
      }
      uint64_t v11 = v131;
      uint64_t v14 = v136;
LABEL_74:
      if (v11 < v14) {
        goto LABEL_153;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1DE8CA414(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v64 = *((void *)v10 + 2);
      unint64_t v63 = *((void *)v10 + 3);
      unint64_t v13 = v64 + 1;
      if (v64 >= v63 >> 1) {
        uint64_t v10 = sub_1DE8CA414((char *)(v63 > 1), v64 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v13;
      uint64_t v65 = v10 + 32;
      uint64_t v66 = &v10[16 * v64 + 32];
      *(void *)uint64_t v66 = v14;
      *((void *)v66 + 1) = v11;
      if (v64)
      {
        uint64_t v134 = v10;
        uint64_t v137 = v10 + 32;
        uint64_t v132 = v11;
        while (1)
        {
          unint64_t v67 = v13 - 1;
          if (v13 >= 4)
          {
            double v72 = &v65[16 * v13];
            uint64_t v73 = *((void *)v72 - 8);
            uint64_t v74 = *((void *)v72 - 7);
            BOOL v78 = __OFSUB__(v74, v73);
            uint64_t v75 = v74 - v73;
            if (v78) {
              goto LABEL_142;
            }
            uint64_t v77 = *((void *)v72 - 6);
            uint64_t v76 = *((void *)v72 - 5);
            BOOL v78 = __OFSUB__(v76, v77);
            uint64_t v70 = v76 - v77;
            char v71 = v78;
            if (v78) {
              goto LABEL_143;
            }
            unint64_t v79 = v13 - 2;
            unint64_t v80 = &v65[16 * v13 - 32];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v78 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v78) {
              goto LABEL_144;
            }
            BOOL v78 = __OFADD__(v70, v83);
            uint64_t v84 = v70 + v83;
            if (v78) {
              goto LABEL_146;
            }
            if (v84 >= v75)
            {
              BOOL v102 = &v65[16 * v67];
              uint64_t v104 = *(void *)v102;
              uint64_t v103 = *((void *)v102 + 1);
              BOOL v78 = __OFSUB__(v103, v104);
              uint64_t v105 = v103 - v104;
              if (v78) {
                goto LABEL_152;
              }
              BOOL v95 = v70 < v105;
              goto LABEL_112;
            }
          }
          else
          {
            if (v13 != 3)
            {
              uint64_t v96 = *((void *)v10 + 4);
              uint64_t v97 = *((void *)v10 + 5);
              BOOL v78 = __OFSUB__(v97, v96);
              uint64_t v89 = v97 - v96;
              char v90 = v78;
              goto LABEL_106;
            }
            uint64_t v69 = *((void *)v10 + 4);
            uint64_t v68 = *((void *)v10 + 5);
            BOOL v78 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            char v71 = v78;
          }
          if (v71) {
            goto LABEL_145;
          }
          unint64_t v79 = v13 - 2;
          char v85 = &v65[16 * v13 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v89 = v86 - v87;
          char v90 = v88;
          if (v88) {
            goto LABEL_147;
          }
          uint64_t v91 = &v65[16 * v67];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v78 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v78) {
            goto LABEL_149;
          }
          if (__OFADD__(v89, v94)) {
            goto LABEL_151;
          }
          if (v89 + v94 >= v70)
          {
            BOOL v95 = v70 < v94;
LABEL_112:
            if (v95) {
              unint64_t v67 = v79;
            }
            goto LABEL_114;
          }
LABEL_106:
          if (v90) {
            goto LABEL_148;
          }
          uint64_t v98 = &v65[16 * v67];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v78 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v78) {
            goto LABEL_150;
          }
          if (v101 < v89) {
            goto LABEL_15;
          }
LABEL_114:
          unint64_t v106 = v67 - 1;
          if (v67 - 1 >= v13)
          {
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
            goto LABEL_163;
          }
          if (!v139) {
            goto LABEL_165;
          }
          uint64_t v107 = &v65[16 * v106];
          uint64_t v108 = *(void *)v107;
          unint64_t v109 = v67;
          uint64_t v110 = &v65[16 * v67];
          uint64_t v111 = *((void *)v110 + 1);
          long long v112 = (uint64_t *)(v139 + 16 * *(void *)v107);
          uint64_t v113 = (uint64_t *)(v139 + 16 * *(void *)v110);
          swift_bridgeObjectRetain();
          sub_1DE8BA5E8(v112, v113, (uint64_t *)(v139 + 16 * v111), v133, v141);
          if (v138)
          {
LABEL_136:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v128 + 16) = 0;
            goto LABEL_137;
          }
          swift_bridgeObjectRelease();
          if (v111 < v108) {
            goto LABEL_139;
          }
          if (v109 > *((void *)v134 + 2)) {
            goto LABEL_140;
          }
          *(void *)uint64_t v107 = v108;
          *(void *)&v137[16 * v106 + 8] = v111;
          unint64_t v114 = *((void *)v134 + 2);
          if (v109 >= v114) {
            goto LABEL_141;
          }
          uint64_t v10 = v134;
          uint64_t v138 = 0;
          unint64_t v13 = v114 - 1;
          memmove(v110, v110 + 16, 16 * (v114 - 1 - v109));
          uint64_t v65 = v137;
          *((void *)v134 + 2) = v114 - 1;
          a2 = v141;
          uint64_t v11 = v132;
          if (v114 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v13 = 1;
LABEL_15:
      uint64_t v12 = v130;
      if (v11 >= v130) {
        goto LABEL_124;
      }
    }
  }
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v133 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
  uint64_t v128 = MEMORY[0x1E4FBC860];
  if (v5 == 1) {
    goto LABEL_13;
  }
  unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_124:
  if (v13 >= 2)
  {
    uint64_t v116 = *v126;
    uint64_t v140 = *v126;
    do
    {
      unint64_t v117 = v13 - 2;
      if (v13 < 2) {
        goto LABEL_154;
      }
      if (!v116) {
        goto LABEL_167;
      }
      uint64_t v135 = v10;
      uint64_t v118 = v10 + 32;
      uint64_t v119 = *(void *)&v10[16 * v117 + 32];
      uint64_t v120 = *(void *)&v118[16 * v13 - 8];
      uint64_t v121 = (uint64_t *)(v116 + 16 * v119);
      uint64_t v122 = (uint64_t *)(v116 + 16 * *(void *)&v118[16 * v13 - 16]);
      uint64_t v123 = (uint64_t *)(v116 + 16 * v120);
      swift_bridgeObjectRetain();
      sub_1DE8BA5E8(v121, v122, v123, v133, v141);
      if (v138) {
        goto LABEL_136;
      }
      swift_bridgeObjectRelease();
      if (v120 < v119) {
        goto LABEL_155;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v135 = sub_1DE8CA510((uint64_t)v135);
      }
      if (v117 >= *((void *)v135 + 2)) {
        goto LABEL_156;
      }
      unint64_t v124 = &v135[16 * v117 + 32];
      *(void *)unint64_t v124 = v119;
      *((void *)v124 + 1) = v120;
      unint64_t v125 = *((void *)v135 + 2);
      if (v13 > v125) {
        goto LABEL_157;
      }
      uint64_t v10 = v135;
      memmove(&v135[16 * v13 + 16], &v135[16 * v13 + 32], 16 * (v125 - v13));
      *((void *)v135 + 2) = v125 - 1;
      unint64_t v13 = v125 - 1;
      uint64_t v116 = v140;
    }
    while (v125 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v128 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8BB58C(char **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1DE8CB9E4((uint64_t)v4);
  }
  uint64_t v5 = *((void *)v4 + 2);
  v7[0] = (uint64_t)(v4 + 32);
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_1DE8BAB8C(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1DE8BB630(uint64_t *__src, char *__dst, unint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = a4;
  uint64_t v8 = (char *)__src;
  int64_t v9 = __dst - (char *)__src;
  int64_t v10 = __dst - (char *)__src + 15;
  if (__dst - (char *)__src >= 0) {
    int64_t v10 = __dst - (char *)__src;
  }
  uint64_t v11 = v10 >> 4;
  uint64_t v12 = a3 - (void)__dst;
  uint64_t v13 = a3 - (void)__dst + 15;
  if ((uint64_t)(a3 - (void)__dst) >= 0) {
    uint64_t v13 = a3 - (void)__dst;
  }
  uint64_t v14 = v13 >> 4;
  if (v11 >= v13 >> 4)
  {
    if (a4 != (uint64_t *)__dst || &__dst[16 * v14] <= (char *)a4)
    {
      uint64_t v32 = __dst;
      memmove(a4, __dst, 16 * v14);
      __dst = v32;
    }
    uint64_t v16 = &v6[2 * v14];
    if (v8 >= __dst || v12 < 16) {
      goto LABEL_58;
    }
    uint64_t v33 = (_OWORD *)(a3 - 16);
    while (1)
    {
      uint64_t v34 = (uint64_t *)(v33 + 1);
      uint64_t v35 = v16 - 2;
      if (*(void *)(a5 + 16))
      {
        uint64_t v36 = *(v16 - 1);
        uint64_t v50 = __dst;
        uint64_t v38 = *((void *)__dst - 1);
        char v37 = (uint64_t *)(__dst - 16);
        uint64_t v48 = *((void *)__dst - 2);
        char v49 = v16;
        uint64_t v39 = *v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v40 = sub_1DE821D84(v39, v36);
        if (v41)
        {
          if (!*(void *)(a5 + 16)) {
            goto LABEL_51;
          }
          double v42 = *(double *)(*(void *)(a5 + 56) + 40 * v40 + 32);
          swift_bridgeObjectRetain();
          unint64_t v43 = sub_1DE821D84(v48, v38);
          if ((v44 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_51:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __dst = v50;
            uint64_t v16 = v49;
            if (v34 != (uint64_t *)v50)
            {
LABEL_52:
              __dst = (char *)v37;
              goto LABEL_53;
            }
LABEL_41:
            BOOL v46 = v33 >= (_OWORD *)__dst;
            __dst = (char *)v37;
            if (v46) {
              goto LABEL_53;
            }
            goto LABEL_54;
          }
          double v45 = *(double *)(*(void *)(a5 + 56) + 40 * v43 + 32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          __dst = v50;
          uint64_t v16 = v49;
          if (v45 < v42)
          {
            if (v34 != (uint64_t *)v50) {
              goto LABEL_52;
            }
            goto LABEL_41;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __dst = v50;
          uint64_t v16 = v49;
        }
      }
      char v37 = v35;
      if (v34 != v16)
      {
        uint64_t v16 = v35;
LABEL_53:
        *uint64_t v33 = *(_OWORD *)v37;
        goto LABEL_54;
      }
      BOOL v46 = v33 >= (_OWORD *)v16;
      uint64_t v16 = v35;
      if (v46) {
        goto LABEL_53;
      }
LABEL_54:
      if (__dst > v8)
      {
        --v33;
        if (v16 > v6) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
  if (a4 != __src || &__src[2 * v11] <= a4)
  {
    double v15 = __dst;
    memmove(a4, __src, 16 * v11);
    __dst = v15;
  }
  uint64_t v16 = &v6[2 * v11];
  if ((unint64_t)__dst < a3 && v9 >= 16)
  {
    while (1)
    {
      if (!*(void *)(a5 + 16)) {
        goto LABEL_18;
      }
      unint64_t v17 = v16;
      uint64_t v19 = *v6;
      uint64_t v18 = v6[1];
      uint64_t v20 = *(void *)__dst;
      uint64_t v21 = *((void *)__dst + 1);
      double v22 = __dst;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1DE821D84(v20, v21);
      if ((v24 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __dst = v22;
        uint64_t v16 = v17;
LABEL_18:
        uint64_t v29 = v6;
        BOOL v30 = v8 == (char *)v6;
        v6 += 2;
        if (v30) {
          goto LABEL_20;
        }
LABEL_19:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v29;
        goto LABEL_20;
      }
      if (!*(void *)(a5 + 16)) {
        goto LABEL_24;
      }
      double v25 = *(double *)(*(void *)(a5 + 56) + 40 * v23 + 32);
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_1DE821D84(v19, v18);
      if ((v27 & 1) == 0) {
        break;
      }
      double v28 = *(double *)(*(void *)(a5 + 56) + 40 * v26 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      __dst = v22;
      uint64_t v16 = v17;
      if (v28 >= v25) {
        goto LABEL_18;
      }
LABEL_25:
      uint64_t v31 = __dst + 16;
      uint64_t v29 = (uint64_t *)__dst;
      if (v8 != __dst)
      {
        __dst += 16;
        goto LABEL_19;
      }
      __dst += 16;
      if (v8 >= v31) {
        goto LABEL_19;
      }
LABEL_20:
      v8 += 16;
      if (v6 >= v16 || (unint64_t)__dst >= a3) {
        goto LABEL_57;
      }
    }
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __dst = v22;
    uint64_t v16 = v17;
    goto LABEL_25;
  }
LABEL_57:
  __dst = v8;
LABEL_58:
  if (__dst != (char *)v6
    || __dst >= (char *)v6
              + (((char *)v16 - (char *)v6 + ((char *)v16 - (char *)v6 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0))
  {
    memmove(__dst, v6, 16 * (((char *)v16 - (char *)v6) / 16));
  }
  return 1;
}

uint64_t sub_1DE8BBA14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v21 = result;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v23 = *a4;
    uint64_t v7 = (uint64_t *)(*a4 + 16 * a3);
LABEL_6:
    uint64_t v8 = *(void *)(v23 + 16 * v6 + 8);
    uint64_t v9 = v21;
    double v22 = v7;
    while (1)
    {
      if (!*(void *)(a5 + 16)) {
        goto LABEL_5;
      }
      uint64_t v11 = *(v7 - 2);
      uint64_t v10 = *(v7 - 1);
      uint64_t v12 = *v7;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1DE821D84(v12, v8);
      if ((v14 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v6;
        uint64_t v7 = v22 + 2;
        if (v6 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      double v15 = *(double *)(*(void *)(a5 + 56) + 40 * v13 + 32);
      swift_bridgeObjectRelease();
      if (!*(void *)(a5 + 16)) {
        goto LABEL_14;
      }
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1DE821D84(v11, v10);
      if ((v17 & 1) == 0) {
        break;
      }
      double v18 = *(double *)(*(void *)(a5 + 56) + 40 * v16 + 32);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      if (v18 >= v15) {
        goto LABEL_5;
      }
LABEL_15:
      if (!v23)
      {
        __break(1u);
        return result;
      }
      uint64_t v19 = *v7;
      uint64_t v8 = v7[1];
      *(_OWORD *)uint64_t v7 = *((_OWORD *)v7 - 1);
      *(v7 - 1) = v8;
      *(v7 - 2) = v19;
      v7 -= 2;
      if (v6 == ++v9) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1DE8BBBB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1DE8E1A70();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_169;
    }
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_1DE8BBA14(0, v5, 1, a1, a2);
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_146:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_168;
  }
  uint64_t v145 = a2;
  uint64_t v136 = v5;
  uint64_t v132 = v6;
  uint64_t v142 = v2;
  uint64_t v129 = a1;
  if (v5 > 1)
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_1DE8E15C0();
    *(void *)(v9 + 16) = v8;
    uint64_t v131 = v9;
    uint64_t v137 = (uint64_t *)(v9 + 32);
LABEL_13:
    uint64_t v11 = 0;
    uint64_t v12 = *a1;
    uint64_t v130 = *a1 + 8;
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = v136;
    uint64_t v143 = *a1;
    while (1)
    {
      uint64_t v15 = v11 + 1;
      if (v11 + 1 < v13)
      {
        if (!*(void *)(a2 + 16))
        {
          uint64_t v29 = v11 + 2;
          if (v11 + 2 < v13)
          {
            BOOL v28 = 0;
            goto LABEL_32;
          }
          goto LABEL_56;
        }
        unint64_t v16 = (uint64_t *)(v12 + 16 * v15);
        char v17 = (uint64_t *)(v12 + 16 * v11);
        uint64_t v18 = *v17;
        uint64_t v19 = v17[1];
        uint64_t v20 = *v16;
        uint64_t v21 = v16[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v22 = sub_1DE821D84(v20, v21);
        if (v23)
        {
          if (!*(void *)(a2 + 16)) {
            goto LABEL_29;
          }
          double v24 = *(double *)(*(void *)(a2 + 56) + 40 * v22 + 32);
          swift_bridgeObjectRetain();
          unint64_t v25 = sub_1DE821D84(v18, v19);
          if ((v26 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_29:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v29 = v11 + 2;
            uint64_t v13 = v136;
            if (v11 + 2 < v136)
            {
              BOOL v28 = 1;
LABEL_31:
              uint64_t v12 = v143;
LABEL_32:
              uint64_t v30 = v11 + 1;
              uint64_t v31 = (uint64_t *)(v130 + 16 * v29);
              uint64_t v32 = v29;
              while (2)
              {
                uint64_t v29 = v32;
                if (!*(void *)(v145 + 16))
                {
                  if (v28) {
                    goto LABEL_48;
                  }
                  goto LABEL_34;
                }
                uint64_t v33 = *(v31 - 1);
                uint64_t v34 = *v31;
                uint64_t v35 = (uint64_t *)(v12 + 16 * v30);
                uint64_t v37 = *v35;
                uint64_t v36 = v35[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                unint64_t v38 = sub_1DE821D84(v33, v34);
                if (v39)
                {
                  if (*(void *)(v145 + 16))
                  {
                    double v40 = *(double *)(*(void *)(v145 + 56) + 40 * v38 + 32);
                    swift_bridgeObjectRetain();
                    unint64_t v41 = sub_1DE821D84(v37, v36);
                    if (v42)
                    {
                      double v43 = *(double *)(*(void *)(v145 + 56) + 40 * v41 + 32);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
                      uint64_t v13 = v136;
                      uint64_t v12 = v143;
                      if (((v28 ^ (v43 >= v40)) & 1) == 0) {
                        goto LABEL_47;
                      }
                      goto LABEL_34;
                    }
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v13 = v136;
                  uint64_t v12 = v143;
                  if (!v28) {
                    goto LABEL_56;
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v13 = v136;
                  uint64_t v12 = v143;
                  if (v28) {
                    goto LABEL_48;
                  }
                }
LABEL_34:
                uint64_t v32 = v29 + 1;
                v31 += 2;
                uint64_t v30 = v29;
                if (v29 + 1 >= v13)
                {
                  ++v29;
                  goto LABEL_47;
                }
                continue;
              }
            }
            uint64_t v12 = v143;
            if (v11 < v29) {
              goto LABEL_50;
            }
LABEL_56:
            uint64_t v15 = v29;
            goto LABEL_57;
          }
          double v27 = *(double *)(*(void *)(a2 + 56) + 40 * v25 + 32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          BOOL v28 = v27 < v24;
          uint64_t v29 = v11 + 2;
          uint64_t v13 = v136;
          uint64_t v12 = v143;
          if (v11 + 2 < v136) {
            goto LABEL_32;
          }
LABEL_47:
          uint64_t v15 = v29;
          if (v28)
          {
LABEL_48:
            if (v29 < v11) {
              goto LABEL_172;
            }
            if (v11 < v29)
            {
LABEL_50:
              uint64_t v44 = 16 * v29;
              uint64_t v45 = 16 * v11;
              uint64_t v46 = v29;
              uint64_t v47 = v11;
              while (1)
              {
                if (v47 != --v46)
                {
                  if (!v12) {
                    goto LABEL_175;
                  }
                  uint64_t v48 = v12 + v44;
                  uint64_t v49 = *(void *)(v12 + v45);
                  uint64_t v50 = *(void *)(v12 + v45 + 8);
                  *(_OWORD *)(v12 + v45) = *(_OWORD *)(v12 + v44 - 16);
                  *(void *)(v48 - 16) = v49;
                  *(void *)(v48 - 8) = v50;
                }
                ++v47;
                v44 -= 16;
                v45 += 16;
                if (v47 >= v46) {
                  goto LABEL_56;
                }
              }
            }
            goto LABEL_56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v29 = v11 + 2;
          uint64_t v13 = v136;
          if (v11 + 2 < v136)
          {
            BOOL v28 = 0;
            goto LABEL_31;
          }
          uint64_t v15 = v11 + 2;
          uint64_t v12 = v143;
        }
      }
LABEL_57:
      if (v15 >= v13) {
        goto LABEL_80;
      }
      if (__OFSUB__(v15, v11)) {
        goto LABEL_167;
      }
      if (v15 - v11 >= v132)
      {
LABEL_80:
        a2 = v145;
LABEL_81:
        if (v15 < v11) {
          goto LABEL_162;
        }
        goto LABEL_82;
      }
      uint64_t v51 = v11 + v132;
      if (__OFADD__(v11, v132)) {
        goto LABEL_170;
      }
      if (v51 >= v13) {
        uint64_t v51 = v13;
      }
      a2 = v145;
      if (v51 < v11)
      {
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_174:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_175:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_176:
        uint64_t result = swift_bridgeObjectRelease_n();
        __break(1u);
        return result;
      }
      if (v15 == v51) {
        goto LABEL_81;
      }
      char v52 = (uint64_t *)(v12 + 16 * v15);
      uint64_t v133 = v51;
      uint64_t v135 = v11;
      while (2)
      {
        uint64_t v53 = *(void *)(v12 + 16 * v15 + 8);
        uint64_t v138 = v52;
        while (*(void *)(a2 + 16))
        {
          uint64_t v55 = *(v52 - 2);
          uint64_t v54 = *(v52 - 1);
          uint64_t v56 = *v52;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          a2 = v145;
          unint64_t v57 = sub_1DE821D84(v56, v53);
          if ((v58 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v12 = v143;
            break;
          }
          double v59 = *(double *)(*(void *)(v145 + 56) + 40 * v57 + 32);
          swift_bridgeObjectRelease();
          if (!*(void *)(v145 + 16)) {
            goto LABEL_76;
          }
          swift_bridgeObjectRetain();
          unint64_t v60 = sub_1DE821D84(v55, v54);
          if ((v61 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_76:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_77;
          }
          double v62 = *(double *)(*(void *)(v145 + 56) + 40 * v60 + 32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if (v62 >= v59)
          {
            uint64_t v12 = v143;
            break;
          }
LABEL_77:
          uint64_t v12 = v143;
          if (!v143) {
            goto LABEL_173;
          }
          uint64_t v63 = *v52;
          uint64_t v53 = v52[1];
          *(_OWORD *)char v52 = *((_OWORD *)v52 - 1);
          *(v52 - 1) = v53;
          *(v52 - 2) = v63;
          v52 -= 2;
          if (v15 == ++v11) {
            break;
          }
        }
        ++v15;
        char v52 = v138 + 2;
        uint64_t v11 = v135;
        if (v15 != v133) {
          continue;
        }
        break;
      }
      uint64_t v15 = v133;
      if (v133 < v135) {
        goto LABEL_162;
      }
LABEL_82:
      uint64_t v134 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1DE8CA414(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v65 = *((void *)v10 + 2);
      unint64_t v64 = *((void *)v10 + 3);
      unint64_t v14 = v65 + 1;
      uint64_t v12 = v143;
      if (v65 >= v64 >> 1)
      {
        unint64_t v117 = sub_1DE8CA414((char *)(v64 > 1), v65 + 1, 1, v10);
        uint64_t v12 = v143;
        uint64_t v10 = v117;
      }
      *((void *)v10 + 2) = v14;
      uint64_t v139 = v10 + 32;
      uint64_t v66 = &v10[16 * v65 + 32];
      *(void *)uint64_t v66 = v11;
      *((void *)v66 + 1) = v134;
      if (v65)
      {
        unint64_t v67 = v10 + 32;
        uint64_t v140 = v10;
        while (1)
        {
          unint64_t v68 = v14 - 1;
          if (v14 >= 4)
          {
            uint64_t v73 = &v67[16 * v14];
            uint64_t v74 = *((void *)v73 - 8);
            uint64_t v75 = *((void *)v73 - 7);
            BOOL v79 = __OFSUB__(v75, v74);
            uint64_t v76 = v75 - v74;
            if (v79) {
              goto LABEL_151;
            }
            uint64_t v78 = *((void *)v73 - 6);
            uint64_t v77 = *((void *)v73 - 5);
            BOOL v79 = __OFSUB__(v77, v78);
            uint64_t v71 = v77 - v78;
            char v72 = v79;
            if (v79) {
              goto LABEL_152;
            }
            unint64_t v80 = v14 - 2;
            uint64_t v81 = &v67[16 * v14 - 32];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v79 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v79) {
              goto LABEL_153;
            }
            BOOL v79 = __OFADD__(v71, v84);
            uint64_t v85 = v71 + v84;
            if (v79) {
              goto LABEL_155;
            }
            if (v85 >= v76)
            {
              uint64_t v103 = &v67[16 * v68];
              uint64_t v105 = *(void *)v103;
              uint64_t v104 = *((void *)v103 + 1);
              BOOL v79 = __OFSUB__(v104, v105);
              uint64_t v106 = v104 - v105;
              if (v79) {
                goto LABEL_161;
              }
              BOOL v96 = v71 < v106;
              goto LABEL_119;
            }
          }
          else
          {
            if (v14 != 3)
            {
              uint64_t v97 = *((void *)v10 + 4);
              uint64_t v98 = *((void *)v10 + 5);
              BOOL v79 = __OFSUB__(v98, v97);
              uint64_t v90 = v98 - v97;
              char v91 = v79;
              goto LABEL_113;
            }
            uint64_t v70 = *((void *)v10 + 4);
            uint64_t v69 = *((void *)v10 + 5);
            BOOL v79 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            char v72 = v79;
          }
          if (v72) {
            goto LABEL_154;
          }
          unint64_t v80 = v14 - 2;
          uint64_t v86 = &v67[16 * v14 - 32];
          uint64_t v88 = *(void *)v86;
          uint64_t v87 = *((void *)v86 + 1);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v90 = v87 - v88;
          char v91 = v89;
          if (v89) {
            goto LABEL_156;
          }
          uint64_t v92 = &v67[16 * v68];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v79 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v79) {
            goto LABEL_158;
          }
          if (__OFADD__(v90, v95)) {
            goto LABEL_160;
          }
          if (v90 + v95 >= v71)
          {
            BOOL v96 = v71 < v95;
LABEL_119:
            if (v96) {
              unint64_t v68 = v80;
            }
            goto LABEL_121;
          }
LABEL_113:
          if (v91) {
            goto LABEL_157;
          }
          uint64_t v99 = &v67[16 * v68];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v79 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v79) {
            goto LABEL_159;
          }
          if (v102 < v90) {
            goto LABEL_15;
          }
LABEL_121:
          unint64_t v107 = v68 - 1;
          if (v68 - 1 >= v14)
          {
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
            goto LABEL_171;
          }
          if (!v12) {
            goto LABEL_174;
          }
          uint64_t v108 = v67;
          unint64_t v109 = &v67[16 * v107];
          uint64_t v110 = *(void *)v109;
          uint64_t v111 = &v108[16 * v68];
          uint64_t v112 = *((void *)v111 + 1);
          uint64_t v113 = (uint64_t *)(v12 + 16 * *(void *)v109);
          unint64_t v114 = (char *)(v12 + 16 * *(void *)v111);
          unint64_t v115 = v12 + 16 * v112;
          swift_bridgeObjectRetain();
          sub_1DE8BB630(v113, v114, v115, v137, v145);
          if (v142)
          {
LABEL_145:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v131 + 16) = 0;
            goto LABEL_146;
          }
          swift_bridgeObjectRelease();
          if (v112 < v110) {
            goto LABEL_148;
          }
          if (v68 > *((void *)v140 + 2)) {
            goto LABEL_149;
          }
          *(void *)unint64_t v109 = v110;
          unint64_t v67 = v139;
          *(void *)&v139[16 * v107 + 8] = v112;
          unint64_t v116 = *((void *)v140 + 2);
          if (v68 >= v116) {
            goto LABEL_150;
          }
          uint64_t v10 = v140;
          uint64_t v142 = 0;
          unint64_t v14 = v116 - 1;
          memmove(v111, v111 + 16, 16 * (v116 - 1 - v68));
          *((void *)v140 + 2) = v116 - 1;
          a2 = v145;
          uint64_t v12 = v143;
          if (v116 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v14 = 1;
LABEL_15:
      uint64_t v13 = v136;
      uint64_t v11 = v134;
      if (v134 >= v136) {
        goto LABEL_133;
      }
    }
  }
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v137 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
  uint64_t v131 = MEMORY[0x1E4FBC860];
  if (v5 == 1) {
    goto LABEL_13;
  }
  unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_133:
  if (v14 >= 2)
  {
    uint64_t v119 = *v129;
    uint64_t v144 = *v129;
    do
    {
      unint64_t v120 = v14 - 2;
      if (v14 < 2) {
        goto LABEL_163;
      }
      if (!v119) {
        goto LABEL_176;
      }
      uint64_t v141 = v10;
      uint64_t v121 = v10 + 32;
      uint64_t v122 = *(void *)&v10[16 * v120 + 32];
      uint64_t v123 = *(void *)&v121[16 * v14 - 8];
      unint64_t v124 = (uint64_t *)(v119 + 16 * v122);
      unint64_t v125 = (char *)(v119 + 16 * *(void *)&v121[16 * v14 - 16]);
      unint64_t v126 = v119 + 16 * v123;
      swift_bridgeObjectRetain();
      sub_1DE8BB630(v124, v125, v126, v137, v145);
      if (v142) {
        goto LABEL_145;
      }
      swift_bridgeObjectRelease();
      if (v123 < v122) {
        goto LABEL_164;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v141 = sub_1DE8CA510((uint64_t)v141);
      }
      if (v120 >= *((void *)v141 + 2)) {
        goto LABEL_165;
      }
      uint64_t v127 = &v141[16 * v120 + 32];
      *(void *)uint64_t v127 = v122;
      *((void *)v127 + 1) = v123;
      unint64_t v128 = *((void *)v141 + 2);
      if (v14 > v128) {
        goto LABEL_166;
      }
      uint64_t v10 = v141;
      memmove(&v141[16 * v14 + 16], &v141[16 * v14 + 32], 16 * (v128 - v14));
      *((void *)v141 + 2) = v128 - 1;
      unint64_t v14 = v128 - 1;
      uint64_t v119 = v144;
    }
    while (v128 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v131 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8BC624(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(void *, uint64_t))
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  swift_bridgeObjectRetain();
  a4(v11, a2);
  swift_bridgeObjectRelease();
  *a1 = v8;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1DE8BC6E0(uint64_t a1, uint64_t a2, void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DE81FA70(v5);
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (char *)sub_1DE82A8F0(v7);
  swift_bridgeObjectRelease();
  v16[0] = v8;
  sub_1DE8BB58C(v16, a1);
  swift_bridgeObjectRelease();
  uint64_t v9 = v16[0];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *((void *)v16[0] + 2);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (char **)(v9 + 40);
    do
    {
      uint64_t v12 = *v11;
      v16[0] = *(v11 - 1);
      v16[1] = v12;
      swift_bridgeObjectRetain();
      sub_1DE8AAFA8((uint64_t)&v17, (uint64_t *)v16, a2, v6, (uint64_t)__dst, a1);
      v11 += 2;
      swift_bridgeObjectRelease();
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v13 = v17;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DE8B8068(v13, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

char *sub_1DE8BC884(uint64_t a1, uint64_t a2, char *__src)
{
  uint64_t v5 = __src + 873;
  if (!__src[872])
  {
    memcpy(__dst, __src, sizeof(__dst));
    char v34 = 0;
    memcpy(v35, v5, sizeof(v35));
    return (char *)sub_1DE8BA26C(a1, a2, __dst);
  }
  if (__src[872] != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    char v34 = 2;
    memcpy(v35, v5, sizeof(v35));
    return (char *)sub_1DE8BC6E0(a1, a2, __dst);
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  __dst[0] = (char *)sub_1DE82ABBC(v6);
  sub_1DE8AD31C(__dst);
  swift_bridgeObjectRelease();
  uint64_t v7 = __dst[0];
  int64_t v8 = *((void *)__dst[0] + 2);
  if (v8)
  {
    __dst[0] = (char *)MEMORY[0x1E4FBC860];
    sub_1DE84BFB8(0, v8, 0);
    uint64_t v9 = 0;
    uint64_t v10 = __dst[0];
    int64_t v28 = v8;
    uint64_t v29 = v7 + 32;
    do
    {
      uint64_t v11 = &v29[40 * v9];
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *((void *)v11 + 1);
      uint64_t v14 = *((void *)v11 + 3);
      int64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v30 = *(void *)v11;
        uint64_t v31 = v10;
        uint64_t v32 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1DE84BBE0(0, v15, 0);
        uint64_t v16 = v32;
        uint64_t v17 = (uint64_t *)(v14 + 40);
        do
        {
          uint64_t v18 = *(v17 - 1);
          uint64_t v19 = *v17;
          unint64_t v21 = *(void *)(v32 + 16);
          unint64_t v20 = *(void *)(v32 + 24);
          swift_bridgeObjectRetain();
          if (v21 >= v20 >> 1) {
            sub_1DE84BBE0((char *)(v20 > 1), v21 + 1, 1);
          }
          v17 += 14;
          *(void *)(v32 + 16) = v21 + 1;
          uint64_t v22 = v32 + 16 * v21;
          *(void *)(v22 + 32) = v18;
          *(void *)(v22 + 40) = v19;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        int64_t v8 = v28;
        uint64_t v12 = v30;
        uint64_t v10 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = MEMORY[0x1E4FBC860];
      }
      __dst[0] = v10;
      unint64_t v24 = *((void *)v10 + 2);
      unint64_t v23 = *((void *)v10 + 3);
      if (v24 >= v23 >> 1)
      {
        sub_1DE84BFB8((void *)(v23 > 1), v24 + 1, 1);
        uint64_t v10 = __dst[0];
      }
      ++v9;
      *((void *)v10 + 2) = v24 + 1;
      unint64_t v25 = &v10[24 * v24];
      *((void *)v25 + 4) = v12;
      *((void *)v25 + 5) = v13;
      *((void *)v25 + 6) = v16;
    }
    while (v9 != v8);
    swift_release();
  }
  else
  {
    swift_release();
    return (char *)MEMORY[0x1E4FBC860];
  }
  return v10;
}

unint64_t sub_1DE8BCB44()
{
  unint64_t result = qword_1EBEA9AF8;
  if (!qword_1EBEA9AF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA9AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AF8);
  }
  return result;
}

uint64_t sub_1DE8BCBA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE8BCBD8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE8BCC18()
{
  return sub_1DE8A9E60(*(void *)(v0 + 16));
}

uint64_t sub_1DE8BCC2C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DE8BCC70(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE8BCCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s23HeadlineClusteringErrorOwxx(uint64_t a1)
{
  return sub_1DE8BCCE4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t sub_1DE8BCCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23HeadlineClusteringErrorOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1DE8BCCB4(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s23HeadlineClusteringErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1DE8BCCB4(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1DE8BCCE4(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s23HeadlineClusteringErrorOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1DE8BCCE4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t _s23HeadlineClusteringErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s23HeadlineClusteringErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE8BCF00(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 6u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_1DE8BCF1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)__n128 result = a2 - 7;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *_s23HeadlineClusteringErrorOMa()
{
  return &_s23HeadlineClusteringErrorON;
}

uint64_t sub_1DE8BCF50(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 4 || a4 == 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s22HeadlineClusteringRuleOwxx(uint64_t a1)
{
  return sub_1DE8A0390(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t _s22HeadlineClusteringRuleOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1DE8BCF50(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s22HeadlineClusteringRuleOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1DE8BCF50(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1DE8A0390(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22HeadlineClusteringRuleOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1DE8A0390(v5, v7, v6, v8);
  return a1;
}

uint64_t _s22HeadlineClusteringRuleOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s22HeadlineClusteringRuleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE8BD14C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1DE8BD158(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *_s22HeadlineClusteringRuleOMa()
{
  return &_s22HeadlineClusteringRuleON;
}

ValueMetadata *_s17HeadlineClustererVMa()
{
  return &_s17HeadlineClustererVN;
}

uint64_t _s22HeadlineClusteringRuleO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22HeadlineClusteringRuleO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8BD2DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8BD304(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8BD310(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *_s22HeadlineClusteringRuleO10CodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO10CodingKeysON;
}

uint64_t sub_1DE8BD330()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO23AccessibilityCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO23AccessibilityCodingKeysON;
}

uint64_t sub_1DE8BD358()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysON;
}

uint64_t sub_1DE8BD380()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO19AigcLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO19AigcLimitCodingKeysON;
}

uint64_t sub_1DE8BD3A8()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysON;
}

uint64_t sub_1DE8BD3D0()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysON;
}

uint64_t sub_1DE8BD3F8()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysON;
}

uint64_t sub_1DE8BD420()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysON;
}

uint64_t _s22HeadlineClusteringRuleO23AccessibilityCodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s22HeadlineClusteringRuleO23AccessibilityCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE8BD534);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE8BD55C()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysON;
}

unint64_t sub_1DE8BD580()
{
  unint64_t result = qword_1EAC0D450;
  if (!qword_1EAC0D450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D450);
  }
  return result;
}

unint64_t sub_1DE8BD5D8()
{
  unint64_t result = qword_1EAC0D458;
  if (!qword_1EAC0D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D458);
  }
  return result;
}

unint64_t sub_1DE8BD630()
{
  unint64_t result = qword_1EAC0D460;
  if (!qword_1EAC0D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D460);
  }
  return result;
}

unint64_t sub_1DE8BD688()
{
  unint64_t result = qword_1EAC0D468;
  if (!qword_1EAC0D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D468);
  }
  return result;
}

unint64_t sub_1DE8BD6E0()
{
  unint64_t result = qword_1EAC0D470;
  if (!qword_1EAC0D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D470);
  }
  return result;
}

unint64_t sub_1DE8BD738()
{
  unint64_t result = qword_1EAC0D478;
  if (!qword_1EAC0D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D478);
  }
  return result;
}

unint64_t sub_1DE8BD790()
{
  unint64_t result = qword_1EAC0D480;
  if (!qword_1EAC0D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D480);
  }
  return result;
}

unint64_t sub_1DE8BD7E8()
{
  unint64_t result = qword_1EAC0D488;
  if (!qword_1EAC0D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D488);
  }
  return result;
}

unint64_t sub_1DE8BD840()
{
  unint64_t result = qword_1EAC0D490;
  if (!qword_1EAC0D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D490);
  }
  return result;
}

unint64_t sub_1DE8BD898()
{
  unint64_t result = qword_1EBEA9490;
  if (!qword_1EBEA9490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9490);
  }
  return result;
}

unint64_t sub_1DE8BD8F0()
{
  unint64_t result = qword_1EBEA9488;
  if (!qword_1EBEA9488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9488);
  }
  return result;
}

unint64_t sub_1DE8BD948()
{
  unint64_t result = qword_1EBEA94A8;
  if (!qword_1EBEA94A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94A8);
  }
  return result;
}

unint64_t sub_1DE8BD9A0()
{
  unint64_t result = qword_1EBEA94A0;
  if (!qword_1EBEA94A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94A0);
  }
  return result;
}

unint64_t sub_1DE8BD9F8()
{
  unint64_t result = qword_1EBEA9AD0;
  if (!qword_1EBEA9AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AD0);
  }
  return result;
}

unint64_t sub_1DE8BDA50()
{
  unint64_t result = qword_1EBEA9AC8;
  if (!qword_1EBEA9AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9AC8);
  }
  return result;
}

unint64_t sub_1DE8BDAA8()
{
  unint64_t result = qword_1EBEA94F0;
  if (!qword_1EBEA94F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94F0);
  }
  return result;
}

unint64_t sub_1DE8BDB00()
{
  unint64_t result = qword_1EBEA94E8;
  if (!qword_1EBEA94E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94E8);
  }
  return result;
}

unint64_t sub_1DE8BDB58()
{
  unint64_t result = qword_1EBEA94C0;
  if (!qword_1EBEA94C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94C0);
  }
  return result;
}

unint64_t sub_1DE8BDBB0()
{
  unint64_t result = qword_1EBEA94B8;
  if (!qword_1EBEA94B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94B8);
  }
  return result;
}

unint64_t sub_1DE8BDC08()
{
  unint64_t result = qword_1EBEA94D8;
  if (!qword_1EBEA94D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94D8);
  }
  return result;
}

unint64_t sub_1DE8BDC60()
{
  unint64_t result = qword_1EBEA94D0;
  if (!qword_1EBEA94D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA94D0);
  }
  return result;
}

unint64_t sub_1DE8BDCB8()
{
  unint64_t result = qword_1EBEA9460;
  if (!qword_1EBEA9460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9460);
  }
  return result;
}

unint64_t sub_1DE8BDD10()
{
  unint64_t result = qword_1EBEA9458;
  if (!qword_1EBEA9458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9458);
  }
  return result;
}

unint64_t sub_1DE8BDD68()
{
  unint64_t result = qword_1EBEA9508;
  if (!qword_1EBEA9508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9508);
  }
  return result;
}

unint64_t sub_1DE8BDDC0()
{
  unint64_t result = qword_1EBEA9500;
  if (!qword_1EBEA9500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9500);
  }
  return result;
}

unint64_t sub_1DE8BDE18()
{
  unint64_t result = qword_1EBEA9478;
  if (!qword_1EBEA9478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9478);
  }
  return result;
}

unint64_t sub_1DE8BDE70()
{
  unint64_t result = qword_1EBEA9470;
  if (!qword_1EBEA9470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA9470);
  }
  return result;
}

void sub_1DE8BDEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE82F470(a10, a11);
  }
}

uint64_t sub_1DE8BDF4C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1DE8BDF9C(_OWORD *a1)
{
  double result = 0.0;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 410) = 0u;
  return result;
}

uint64_t sub_1DE8BDFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE8BE04C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 296);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1DE8BE06C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, 0);
}

uint64_t sub_1DE8BE098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t result = a38;
  if (a38)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DE8BE104(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v15 = *(_WORD *)(a1 + 424);
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    *(void *)(a1 + 416),
    v15);
  return a1;
}

uint64_t sub_1DE8BE1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t result = a38;
  if (a38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE8BE234(uint64_t a1, char a2)
{
  if (a2) {
    return *(void *)(v2 + 208);
  }
  else {
    return sub_1DE86C50C(*(void *)(v2 + 208), a1);
  }
}

uint64_t sub_1DE8BE2A4(uint64_t a1, char a2)
{
  if (a2) {
    return *(void *)(v2 + 256);
  }
  else {
    return sub_1DE86C50C(*(void *)(v2 + 256), a1);
  }
}

uint64_t sub_1DE8BE2FC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8BE33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DE86B730(a1, a2);
}

uint64_t sub_1DE8BE378(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE8BE3B4(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_66Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1DE8BE45C(uint64_t a1, char a2)
{
  if (a2) {
    return *(void *)(v2 + 112);
  }
  else {
    return sub_1DE86C50C(*(void *)(v2 + 112), a1);
  }
}

uint64_t sub_1DE8BE4D4(uint64_t a1, char a2)
{
  if (a2) {
    return *(void *)(v2 + 160);
  }
  else {
    return sub_1DE86C50C(*(void *)(v2 + 160), a1);
  }
}

uint64_t sub_1DE8BE54C(uint64_t a1, char a2)
{
  if (a2) {
    return *(void *)(v2 + 16);
  }
  else {
    return sub_1DE86C50C(*(void *)(v2 + 16), a1);
  }
}

uint64_t objectdestroy_69Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 442, 7);
}

uint64_t sub_1DE8BE60C(uint64_t a1, char a2)
{
  if (a2) {
    return *(void *)(v2 + 64);
  }
  else {
    return sub_1DE86C50C(*(void *)(v2 + 64), a1);
  }
}

uint64_t sub_1DE8BE664(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1DE8AC614(a1, a2, *(void *)(v3 + 16), *(double **)(v3 + 24), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_1DE8BE684(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DE8BE694()
{
  return sub_1DE8A36E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DE8BE69C()
{
  return sub_1DE8A37BC();
}

uint64_t sub_1DE8BE6A4()
{
  return sub_1DE8A6EF4();
}

uint64_t sub_1DE8BE6AC()
{
  return sub_1DE8A3644();
}

uint64_t sub_1DE8BE6B4()
{
  return sub_1DE8A55C0();
}

uint64_t sub_1DE8BE6BC()
{
  return sub_1DE8A553C();
}

uint64_t sub_1DE8BE6C4()
{
  return sub_1DE8A54B8();
}

uint64_t sub_1DE8BE6CC()
{
  return sub_1DE8A5434();
}

uint64_t sub_1DE8BE6D4()
{
  return sub_1DE8A53B0();
}

unint64_t sub_1DE8BE6DC()
{
  unint64_t result = qword_1EBEA7EF0;
  if (!qword_1EBEA7EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEA7EF0);
  }
  return result;
}

uint64_t sub_1DE8BE730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE89FC74(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1DE8BE74C()
{
  return sub_1DE8A6828();
}

uint64_t sub_1DE8BE754()
{
  return sub_1DE8A67A4();
}

uint64_t sub_1DE8BE75C()
{
  return sub_1DE8A6E54();
}

uint64_t sub_1DE8BE764()
{
  return sub_1DE8A6DB4();
}

uint64_t sub_1DE8BE76C()
{
  return sub_1DE8A6D10();
}

uint64_t sub_1DE8BE774()
{
  return sub_1DE8A6C6C();
}

uint64_t sub_1DE8BE77C()
{
  return sub_1DE8A6BCC();
}

uint64_t sub_1DE8BE784()
{
  return sub_1DE8A6B2C();
}

uint64_t sub_1DE8BE78C()
{
  return sub_1DE8A6A8C();
}

uint64_t sub_1DE8BE794()
{
  return sub_1DE8A69EC();
}

uint64_t sub_1DE8BE79C()
{
  return sub_1DE8A694C();
}

uint64_t sub_1DE8BE7A4()
{
  return sub_1DE8A68C8();
}

uint64_t sub_1DE8BE7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadonlyAggregate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s24BundleArticleQuotaResultOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s24BundleArticleQuotaResultOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8BE96CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s24BundleArticleQuotaResultOMa()
{
  return &_s24BundleArticleQuotaResultON;
}

uint64_t _s14CandidateGroupVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s14CandidateGroupVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14CandidateGroupVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14CandidateGroupVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s14CandidateGroupVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s14CandidateGroupVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14CandidateGroupVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14CandidateGroupVMa()
{
  return &_s14CandidateGroupVN;
}

unint64_t sub_1DE8BEBD4()
{
  unint64_t result = qword_1EAC0D498;
  if (!qword_1EAC0D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D498);
  }
  return result;
}

uint64_t sub_1DE8BECCC(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v20 = (uint64_t (*)(void *))result;
  uint64_t v19 = *(void *)(a3 + 16);
  if (v19)
  {
    unint64_t v3 = 0;
    uint64_t v4 = (char *)(a3 + 80);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v18 = a3;
    while (v3 < *(void *)(a3 + 16))
    {
      unint64_t v21 = v3;
      uint64_t v7 = *((void *)v4 - 6);
      uint64_t v6 = *((void *)v4 - 5);
      uint64_t v9 = *((void *)v4 - 4);
      uint64_t v8 = *((void *)v4 - 3);
      uint64_t v11 = *((void *)v4 - 2);
      uint64_t v10 = *((void *)v4 - 1);
      char v12 = *v4;
      v24[0] = v7;
      v24[1] = v6;
      v24[2] = v9;
      v24[3] = v8;
      v24[4] = v11;
      _OWORD v24[5] = v10;
      char v25 = v12;
      char v22 = v12;
      sub_1DE813E10(v7, v6, v9, v8, v11, v10, v12);
      char v13 = v20(v24);
      if (v23)
      {
        sub_1DE864B40(v7, v6, v9, v8, v11, v10, v22);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      uint64_t v23 = 0;
      if (v13)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v26 = v5;
        if ((result & 1) == 0)
        {
          unint64_t result = (uint64_t)sub_1DE84BFF8(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v26;
        }
        unint64_t v15 = *(void *)(v5 + 16);
        unint64_t v14 = *(void *)(v5 + 24);
        unint64_t v16 = v15 + 1;
        if (v15 >= v14 >> 1)
        {
          unint64_t result = (uint64_t)sub_1DE84BFF8((char *)(v14 > 1), v15 + 1, 1);
          unint64_t v16 = v15 + 1;
          uint64_t v5 = v26;
        }
        *(void *)(v5 + 16) = v16;
        uint64_t v17 = v5 + 56 * v15;
        *(void *)(v17 + 32) = v7;
        *(void *)(v17 + 40) = v6;
        *(void *)(v17 + 48) = v9;
        *(void *)(v17 + 56) = v8;
        *(void *)(v17 + 64) = v11;
        *(void *)(v17 + 72) = v10;
        *(unsigned char *)(v17 + 80) = v22;
      }
      else
      {
        unint64_t result = sub_1DE864B40(v7, v6, v9, v8, v11, v10, v22);
      }
      unint64_t v3 = v21 + 1;
      v4 += 56;
      a3 = v18;
      if (v19 == v21 + 1) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t ClassicAggregateContextType.lookupBaseline(with:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1DE8E16E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  unint64_t v14 = (char *)&v18 - v13;
  long long v18 = *a1;
  char v19 = 0;
  sub_1DE8BF0F0((uint64_t)&v18, a2, a3, (uint64_t (**)())&v20);
  uint64_t v15 = v20;
  long long v18 = v20;
  AggregateContextType.lookup(identifier:option:)(12390, 0xE200000000000000, (uint64_t *)&v18, a2, v8);
  sub_1DE8BF24C(v15);
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v14, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t result = sub_1DE8E17F0();
  __break(1u);
  return result;
}

uint64_t sub_1DE8BF0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t result = MEMORY[0x1F4188790](a1, a2);
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v14 = *(void *)result;
    uint64_t v13 = *(void *)(result + 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
    unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(void *)(v12 + 24) = a3;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v15, (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    uint64_t v16 = (void *)(v12 + ((v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v16 = v14;
    v16[1] = v13;
    uint64_t v11 = sub_1DE8C0DB8;
  }
  *a4 = v11;
  a4[1] = (uint64_t (*)())v12;
  return result;
}

uint64_t sub_1DE8BF24C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t ClassicAggregateContextType.updateBaseline(with:updateBlock:)(uint64_t (**a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = sub_1DE82DA80((uint64_t)&unk_1F3A3F9E8);
  swift_arrayDestroy();
  uint64_t v14 = v9;
  unint64_t v15 = v10;
  char v16 = 0;
  sub_1DE8BF0F0((uint64_t)&v14, a4, a5, v17);
  uint64_t v12 = v17[0];
  uint64_t v14 = v17[0];
  unint64_t v15 = v17[1];
  (*(void (**)(uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + 56))(v11, &v14, a2, a3, a4);
  swift_bridgeObjectRelease();
  return sub_1DE8BF24C((uint64_t)v12);
}

uint64_t ClassicAggregateContextType.update(with:using:updateBlock:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v13 = *a2;
  char v14 = 0;
  sub_1DE8BF0F0((uint64_t)&v13, a5, a6, (uint64_t (**)())&v15);
  uint64_t v11 = v15;
  long long v13 = v15;
  (*(void (**)(uint64_t, long long *, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8) + 56))(a1, &v13, a3, a4, a5);
  return sub_1DE8BF24C(v11);
}

uint64_t ClassicAggregateContextType.lookup(with:using:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  char v7 = *((unsigned char *)a2 + 16);
  long long v11 = *a2;
  char v12 = v7;
  sub_1DE8BF0F0((uint64_t)&v11, a3, a4, (uint64_t (**)())&v13);
  uint64_t v8 = v13;
  long long v11 = v13;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, long long *, uint64_t))(*(void *)(a4 + 8) + 48))(a1, &v11, a3);
  sub_1DE8BF24C(v8);
  return v9;
}

uint64_t ClassicAggregateContextType.lookupBaseline(and:baselinePrior:featurePrior:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a4;
  uint64_t v10 = a4[1];
  char v11 = *((unsigned char *)a4 + 16);
  long long v13 = *a3;
  ClassicAggregateContextType.lookupBaseline(with:)(&v13, a5, a6, a1);
  *(void *)&long long v13 = v9;
  *((void *)&v13 + 1) = v10;
  char v14 = v11;
  return ClassicAggregateContextType.lookup(with:using:)(a2, &v13, a5, a6);
}

uint64_t ClassicAggregateContextType.validate(features:publisherTopicMinimumEventCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    v25[0] = MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v8, 0);
    uint64_t v9 = v25[0];
    uint64_t v10 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      v25[0] = v9;
      unint64_t v14 = *(void *)(v9 + 16);
      unint64_t v13 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
      {
        sub_1DE84BBE0((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v9 = v25[0];
      }
      v10 += 7;
      *(void *)(v9 + 16) = v14 + 1;
      uint64_t v15 = v9 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      --v8;
    }
    while (v8);
    uint64_t v4 = v23;
    uint64_t v6 = v24;
    a3 = v22[7];
  }
  uint64_t v16 = sub_1DE82DA80(v9);
  swift_bridgeObjectRelease();
  v25[0] = 0;
  v25[1] = 0;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(*(void *)(v4 + 8) + 48))(v16, v25, a3);
  uint64_t v18 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v18, v19);
  v22[2] = a3;
  v22[3] = v4;
  v22[4] = v17;
  v22[5] = v6;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DE8BECCC((uint64_t)sub_1DE8C09E0, (uint64_t)v22, a1);
  swift_bridgeObjectRelease();
  return v20;
}

BOOL sub_1DE8BF6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1DE8E16E0();
  MEMORY[0x1F4188790](v8, v9);
  MEMORY[0x1F4188790](v10, v11);
  unint64_t v13 = (char *)v34 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v15, v16);
  MEMORY[0x1F4188790](v17, v18);
  if (*(unsigned char *)(a1 + 48) != 3) {
    return 1;
  }
  uint64_t v38 = v23;
  char v39 = v22;
  uint64_t v43 = v19;
  uint64_t v44 = (char *)v34 - v20;
  uint64_t v41 = a3;
  uint64_t v42 = v21;
  uint64_t v47 = v3;
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v40 = *(void *)(a1 + 32);
  uint64_t v45 = 2831206;
  unint64_t v46 = 0xE300000000000000;
  sub_1DE8E1490();
  MEMORY[0x1E01D3F40](&v45, a2, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  char v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
    return 0;
  }
  uint64_t v35 = v25;
  uint64_t v36 = v24;
  uint64_t v37 = v14;
  v34[0] = *(void *)(v14 + 32);
  v34[1] = v14 + 32;
  ((void (*)(char *, char *, uint64_t))v34[0])(v44, v13, AssociatedTypeWitness);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  unint64_t v29 = v28(AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v41 >= 1 && v29 < v41)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v44, AssociatedTypeWitness);
    return 0;
  }
  uint64_t v45 = 2831206;
  unint64_t v46 = 0xE300000000000000;
  sub_1DE8E1490();
  uint64_t v30 = v39;
  MEMORY[0x1E01D3F40](&v45, a2, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  if (v35(v30, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v44, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
    return 0;
  }
  else
  {
    uint64_t v31 = v38;
    ((void (*)(uint64_t, char *, uint64_t))v34[0])(v38, v30, AssociatedTypeWitness);
    unint64_t v32 = v28(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v33(v31, AssociatedTypeWitness);
    v33((uint64_t)v44, AssociatedTypeWitness);
    BOOL result = 1;
    if (v41 >= 1) {
      return v32 >= v41;
    }
  }
  return result;
}

uint64_t AggregateContext.createAggregate(for:clicks:impressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  type metadata accessor for Aggregate(0);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DE8E1340();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(void *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_1DE8BFB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  type metadata accessor for Aggregate(0);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DE8E1340();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(void *)(a3 + 32) = 0;
  return result;
}

uint64_t ClassicAggregateContext.context.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 96));
}

uint64_t ClassicAggregateContext.baseline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v9 = v1;
  (*(void (**)(long long *__return_ptr))((char *)v1 + *(void *)(v3 + 104)))(&v8);
  long long v7 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  return ClassicAggregateContextType.lookupBaseline(with:)(&v7, v4, WitnessTable, a1);
}

uint64_t ClassicAggregateContext.baselinePrior.getter()
{
  return (*(uint64_t (**)(void))(v0 + *(void *)(*(void *)v0 + 104)))();
}

uint64_t ClassicAggregateContext.featurePrior.getter()
{
  uint64_t v1 = *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v4);
  uint64_t v6 = (char *)&v13 - v5;
  long long v7 = *(uint64_t (**)(uint64_t, double))((char *)v0 + *(void *)(v1 + 112));
  ClassicAggregateContext.baseline.getter((uint64_t)&v13 - v5);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  double v10 = v9;
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, AssociatedTypeWitness);
  return v7(v11, v10);
}

__n128 ClassicAggregateContext.priors.getter@<Q0>(_OWORD *a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(v1 + *(void *)(*(void *)v1 + 104)))(v8);
  double v3 = *(double *)v8;
  double v4 = *(double *)&v8[1];
  ClassicAggregateContext.featurePrior.getter();
  *(double *)&long long v6 = v3;
  *((double *)&v6 + 1) = v4;
  sub_1DE859F40(v3, v4);
  sub_1DE859F5C(v7.n128_f64[0], v7.n128_f64[1]);
  __n128 result = v7;
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t ClassicAggregateContext.lookup(with:)(uint64_t a1)
{
  void (*v9)(long long *__return_ptr, uint64_t, double);
  uint64_t AssociatedConformanceWitness;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  long long v18;
  char v19;
  long long v20;
  uint64_t *v21;

  uint64_t v17 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v6);
  long long v8 = (char *)&v16 - v7;
  uint64_t v21 = v1;
  double v9 = *(void (**)(long long *__return_ptr, uint64_t, double))((char *)v1 + *(void *)(v2 + 112));
  ClassicAggregateContext.baseline.getter((uint64_t)&v16 - v7);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = v11;
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
  v9(&v20, v13, v12);
  uint64_t v18 = v20;
  uint64_t v19 = 0;
  uint64_t WitnessTable = swift_getWitnessTable();
  return ClassicAggregateContextType.lookup(with:using:)(v17, &v18, v3, WitnessTable);
}

uint64_t ClassicAggregateContext.lookup(identifier:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DE8C0A04(inited);
  swift_setDeallocating();
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  swift_arrayDestroy();
  uint64_t v7 = ClassicAggregateContext.lookup(with:)(v5);
  swift_bridgeObjectRelease();
  v10[0] = a1;
  v10[1] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  MEMORY[0x1E01D3F40](v10, v7, v6, AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ClassicAggregateContext.__allocating_init(context:baselinePriorProvider:featurePriorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v10 + 80) - 8) + 32))(v10 + *(void *)(*(void *)v10 + 96), a1);
  uint64_t v11 = (void *)(v10 + *(void *)(*(void *)v10 + 104));
  *uint64_t v11 = a2;
  v11[1] = a3;
  uint64_t v12 = (void *)(v10 + *(void *)(*(void *)v10 + 112));
  *uint64_t v12 = a4;
  v12[1] = a5;
  return v10;
}

uint64_t ClassicAggregateContext.init(context:baselinePriorProvider:featurePriorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v5 + 80) - 8) + 32))(v5 + *(void *)(*(void *)v5 + 96), a1);
  uint64_t v10 = (void *)(v5 + *(void *)(*(void *)v5 + 104));
  *uint64_t v10 = a2;
  v10[1] = a3;
  uint64_t v11 = (void *)(v5 + *(void *)(*(void *)v5 + 112));
  *uint64_t v11 = a4;
  v11[1] = a5;
  return v5;
}

uint64_t ClassicAggregateContext.lookupAll()()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(*(void *)v0 + 88) + 8) + 40))(*(void *)(*(void *)v0 + 80));
}

uint64_t ClassicAggregateContext.lookup(with:option:)(uint64_t a1, long long *a2)
{
  uint64_t v3 = *v2;
  long long v5 = *a2;
  return (*(uint64_t (**)(uint64_t, long long *, void))(*(void *)(*(void *)(v3 + 88) + 8) + 48))(a1, &v5, *(void *)(v3 + 80));
}

uint64_t ClassicAggregateContext.update(with:option:updateBlock:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *v4;
  long long v7 = *a2;
  return (*(uint64_t (**)(uint64_t, long long *, uint64_t, uint64_t, void))(*(void *)(*(void *)(v5 + 88)
                                                                                              + 8)
                                                                                  + 56))(a1, &v7, a3, a4, *(void *)(v5 + 80));
}

uint64_t ClassicAggregateContext.createAggregate(for:clicks:impressions:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)v2 + 88) + 16))(a1, a2, *(void *)(*(void *)v2 + 80));
}

uint64_t ClassicAggregateContext.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_release();
  swift_release();
  return v0;
}

uint64_t ClassicAggregateContext.__deallocating_deinit()
{
  ClassicAggregateContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1DE8C07C0(uint64_t a1, uint64_t a2)
{
  return ClassicAggregateContext.createAggregate(for:clicks:impressions:)(a1, a2);
}

uint64_t sub_1DE8C07E4()
{
  return ClassicAggregateContext.lookupAll()();
}

uint64_t sub_1DE8C0808(uint64_t a1, long long *a2)
{
  return ClassicAggregateContext.lookup(with:option:)(a1, a2);
}

uint64_t sub_1DE8C082C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return ClassicAggregateContext.update(with:option:updateBlock:)(a1, a2, a3, a4);
}

Swift::Double __swiftcall ClassicAggregateContext.decayedPublisherDiversificationPenalty(initialValue:finalValue:halfLife:)(Swift::Double initialValue, Swift::Double finalValue, Swift::Double halfLife)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v8);
  uint64_t v10 = (char *)&v14 - v9;
  if (halfLife != 0.0)
  {
    ClassicAggregateContext.baseline.getter((uint64_t)&v14 - v9);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
    return (initialValue - finalValue) / exp2((double)v12) / halfLife + finalValue;
  }
  return finalValue;
}

BOOL sub_1DE8C09E0(uint64_t a1)
{
  return sub_1DE8BF6D0(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DE8C0A04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E38);
    uint64_t v3 = sub_1DE8E1720();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1DE8E1AC0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1DE8E1AC0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1DE8C0BA8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DE8C0BE4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DE8C0C04()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of ClassicAggregateContextType.createAggregate(for:clicks:impressions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1DE8C0C3C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ClassicAggregateContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ClassicAggregateContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClassicAggregateContext);
}

uint64_t dispatch thunk of ClassicAggregateContext.__allocating_init(context:baselinePriorProvider:featurePriorProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1DE8C0D24()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v5, v4);
}

uint64_t sub_1DE8C0DB8()
{
  uint64_t v1 = (double *)(v0
                + ((*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)
                  + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80))
                  + 7) & 0xFFFFFFFFFFFFFFF8));
  return (*(uint64_t (**)(double, double))(*(void *)(v0 + 24) + 16))(*v1, v1[1]);
}

uint64_t sub_1DE8C0E54(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1DE84BF18(0, v1, 0);
  uint64_t v2 = v24;
  uint64_t result = sub_1DE8CB90C(a1);
  uint64_t v6 = result;
  uint64_t v7 = v23;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v6 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + (v6 << 6) + 32);
    unint64_t v15 = *(void *)(v24 + 16);
    unint64_t v14 = *(void *)(v24 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t v21 = v10;
      uint64_t v22 = v5;
      uint64_t result = (uint64_t)sub_1DE84BF18((char *)(v14 > 1), v15 + 1, 1);
      uint64_t v10 = v21;
      uint64_t v5 = v22;
      uint64_t v7 = v23;
    }
    *(void *)(v24 + 16) = v15 + 1;
    *(void *)(v24 + 8 * v15 + 32) = v13;
    int64_t v11 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v11) {
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v18 = v12 + 1;
      unint64_t v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            unint64_t v20 = *(void *)(v10 + 8 * v12++);
            if (v20)
            {
              unint64_t v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v6 = v11;
    if (v8 == v7) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DE8C104C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1DE84BF18(0, v1, 0);
  uint64_t v2 = v24;
  uint64_t result = sub_1DE8CB90C(a1);
  uint64_t v6 = result;
  uint64_t v7 = v23;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v6 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + (v6 << 6) + 8);
    unint64_t v15 = *(void *)(v24 + 16);
    unint64_t v14 = *(void *)(v24 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t v21 = v10;
      uint64_t v22 = v5;
      uint64_t result = (uint64_t)sub_1DE84BF18((char *)(v14 > 1), v15 + 1, 1);
      uint64_t v10 = v21;
      uint64_t v5 = v22;
      uint64_t v7 = v23;
    }
    *(void *)(v24 + 16) = v15 + 1;
    *(void *)(v24 + 8 * v15 + 32) = v13;
    int64_t v11 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v11) {
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v18 = v12 + 1;
      unint64_t v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            unint64_t v20 = *(void *)(v10 + 8 * v12++);
            if (v20)
            {
              unint64_t v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    uint64_t v6 = v11;
    if (v8 == v7) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DE8C1244(uint64_t a1, char **a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v21 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v7 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    sub_1DE8E1490();
    unint64_t v15 = *a2;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v15 = sub_1DE83A960(0, *((void *)v15 + 2) + 1, 1, v15);
      *a2 = v15;
    }
    unint64_t v18 = *((void *)v15 + 2);
    unint64_t v17 = *((void *)v15 + 3);
    if (v18 >= v17 >> 1)
    {
      unint64_t v15 = sub_1DE83A960((char *)(v17 > 1), v18 + 1, 1, v15);
      *a2 = v15;
    }
    *((void *)v15 + 2) = v18 + 1;
    unint64_t v19 = &v15[56 * v18];
    *((void *)v19 + 4) = 2831206;
    *((void *)v19 + 5) = 0xE300000000000000;
    *((void *)v19 + 6) = v14;
    *((void *)v19 + 7) = v13;
    *((void *)v19 + 8) = 0;
    *((void *)v19 + 9) = 0;
    v19[80] = 4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v21) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v20 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v21) {
        return swift_release();
      }
      unint64_t v10 = *(void *)(v20 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v21) {
          return swift_release();
        }
        unint64_t v10 = *(void *)(v20 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v21) {
            return swift_release();
          }
          unint64_t v10 = *(void *)(v20 + 8 * v6);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v10 - 1) & v10;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v21) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v20 + 8 * v11);
  if (v10)
  {
    int64_t v6 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v21) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v20 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DE8C14C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, Swift::Double a8)
{
  double v15 = *(double *)a7;
  long double v16 = *(double *)(a7 + 32);
  long double v17 = *(double *)(a7 + 72);
  long double v18 = *(double *)(a7 + 80);
  double v19 = *(double *)(a7 + 88);
  int v35 = *(unsigned __int8 *)(a7 + 97);
  int v36 = *(unsigned __int8 *)(a7 + 98);
  uint64_t v20 = a5[3];
  uint64_t v21 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  LOBYTE(v20) = sub_1DE83C5AC(a1, a2, v22);
  swift_bridgeObjectRelease();
  if (v20) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1DE8CD024(a3, a4);
  swift_bridgeObjectRelease();
  if (!v24[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  double v28 = v27;
  if (!v36)
  {
    double v30 = sub_1DE81656C(a6, (uint64_t)v24, AssociatedTypeWitness, AssociatedConformanceWitness, a8);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  double v29 = sub_1DE8164F8(a6, (uint64_t)v24, AssociatedTypeWitness, AssociatedConformanceWitness, a8);
  swift_bridgeObjectRelease();
  double v30 = v28 + v29;
  if (v30 > 0.0)
  {
    if (v30 > 1.0)
    {
      if (v28 < 1.0)
      {
        double v30 = 1.0;
        if (v28 != 1.0) {
          goto LABEL_20;
        }
        goto LABEL_26;
      }
      if (v28 == 0.0) {
        goto LABEL_26;
      }
      double v30 = 1.0;
LABEL_25:
      double v15 = v15 * pow(v30 / v28, v18);
      goto LABEL_26;
    }
LABEL_12:
    if (v30 > v28)
    {
      if (v28 != 1.0) {
        goto LABEL_20;
      }
      goto LABEL_26;
    }
    if (v28 == 0.0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v28 >= 0.0)
  {
    if (v28 == 0.0) {
      goto LABEL_26;
    }
    double v30 = 0.0;
    goto LABEL_25;
  }
  if (v28 != 1.0)
  {
    double v30 = 0.0;
LABEL_20:
    double v15 = 1.0 - (1.0 - v15) * pow((1.0 - v30) / (1.0 - v28), v17);
  }
LABEL_26:
  uint64_t v31 = a5[3];
  uint64_t v32 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v31);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
  char v34 = sub_1DE83C5AC(a1, a2, v33);
  swift_bridgeObjectRelease();
  if (v34)
  {
    if (v35) {
      double v15 = 1.0 - pow(1.0 - v15, v16);
    }
    else {
      double v15 = v19 + (1.0 - v19) * v15;
    }
  }
  return *(void *)&v15;
}

uint64_t sub_1DE8C17FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1DE8CD874(a2, a4, a5, a6);
}

uint64_t sub_1DE8C1810(uint64_t a1, void *a2, uint64_t a3, long long *a4, const void *a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16 = *(void *)(a6 + 64);
  uint64_t v17 = *a8;
  char v18 = *(unsigned char *)a10;
  double v19 = a10[1];
  double v20 = a10[2];
  long long v21 = a4[1];
  v40[0] = *a4;
  v40[1] = v21;
  long long v22 = *(_OWORD *)(a6 + 16);
  v38[0] = *(_OWORD *)a6;
  v38[1] = v22;
  long long v23 = *(_OWORD *)(a6 + 48);
  v38[2] = *(_OWORD *)(a6 + 32);
  v38[3] = v23;
  uint64_t v39 = v16;
  v36[2] = v20;
  uint64_t v37 = v17;
  LOBYTE(v36[0]) = v18;
  v36[1] = v19;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  unint64_t v25 = sub_1DE85CC74(MEMORY[0x1E4FBC860]);
  unint64_t v26 = sub_1DE85C98C(v24);
  double v27 = (uint64_t *)sub_1DE85C98C(v24);
  unint64_t v28 = sub_1DE85C98C(v24);
  unint64_t v29 = sub_1DE85CD88(v24);
  uint64_t v30 = sub_1DE8C196C(a1, a2, a3, v40, a5, (uint64_t)v38, a7, (double *)&v37, a9, 0.0, v36, a11, a12, 0, v25, v26, v27, v28, v29,
          a13,
          a14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1DE8C196C(uint64_t a1, void *a2, uint64_t a3, long long *a4, const void *a5, uint64_t a6, uint64_t a7, double *a8, double a9, float a10, double *a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v143 = a7;
  BOOL v173 = a4;
  uint64_t v146 = a2;
  uint64_t v129 = a1;
  uint64_t v144 = type metadata accessor for ClassicArticleData();
  uint64_t v172 = *(void *)(v144 - 8);
  MEMORY[0x1F4188790](v144, v27);
  uint64_t v147 = (uint64_t)v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125[2] = *(void *)(a21 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v30);
  uint64_t v32 = (uint64_t)v125 - v31;
  memcpy(v177, a5, 0x3EBuLL);
  long long v33 = *(_OWORD *)(a6 + 48);
  uint64_t v178[2] = *(_OWORD *)(a6 + 32);
  v178[3] = v33;
  uint64_t v179 = *(void *)(a6 + 64);
  long long v34 = *(_OWORD *)(a6 + 16);
  v178[0] = *(_OWORD *)a6;
  v178[1] = v34;
  double v140 = *a8;
  uint64_t v141 = a20;
  int v138 = *(unsigned __int8 *)a11;
  double v35 = a11[1];
  double v137 = a11[2];
  long long v174 = *v173;
  uint64_t v142 = a21;
  uint64_t v126 = a3;
  ClassicAggregateContextType.lookupBaseline(with:)(&v174, a20, a21, v32);
  if (qword_1EBEA9E80 != -1) {
    goto LABEL_54;
  }
  while (1)
  {
    int v36 = (void *)qword_1EBEA9E90;
    v125[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1DE8E31B0;
    *(void *)&long long v174 = *(void *)(v129 + 16);
    uint64_t v38 = v174;
    id v39 = v36;
    uint64_t v40 = sub_1DE8E1A80();
    uint64_t v42 = v41;
    uint64_t v43 = MEMORY[0x1E4FBB1A0];
    *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v44 = sub_1DE819640();
    *(void *)(v37 + 64) = v44;
    *(void *)(v37 + 32) = v40;
    *(void *)(v37 + 40) = v42;
    *(void *)&long long v174 = 0;
    *((void *)&v174 + 1) = 0xE000000000000000;
    uint64_t v148 = v32;
    sub_1DE8E1AA0();
    long long v45 = v174;
    *(void *)(v37 + 96) = v43;
    *(void *)(v37 + 104) = v44;
    v125[0] = v44;
    *(_OWORD *)(v37 + 72) = v45;
    sub_1DE8E16C0();
    sub_1DE8E13A0();

    swift_bridgeObjectRelease();
    uint64_t v154 = v38;
    if (!v38) {
      break;
    }
    uint64_t v127 = AssociatedTypeWitness;
    int v136 = a14;
    uint64_t v135 = a19;
    uint64_t v134 = a18;
    uint64_t v133 = a17;
    uint64_t v132 = a16;
    uint64_t v131 = a15;
    uint64_t v139 = a13;
    uint64_t v130 = a12;
    uint64_t v145 = v129 + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
    uint64_t v153 = *(void *)(v172 + 72);
    swift_bridgeObjectRetain();
    uint64_t v46 = 0;
    uint64_t v47 = MEMORY[0x1E4FBC868];
    uint64_t v48 = v147;
    while (1)
    {
      uint64_t v152 = v46 + 1;
      sub_1DE83603C(v145 + v153 * v46, v48);
      uint64_t v49 = *(void *)(v48 + *(int *)(v144 + 92));
      swift_bridgeObjectRetain();
      uint64_t v50 = (void *)v47;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v174 = v47;
      uint64_t v52 = *(void *)(v49 + 64);
      uint64_t v156 = v49 + 64;
      uint64_t v53 = -1 << *(unsigned char *)(v49 + 32);
      uint64_t v151 = ~v53;
      uint64_t v54 = -v53 < 64 ? ~(-1 << -(char)v53) : -1;
      unint64_t v55 = v54 & v52;
      unint64_t v56 = (unint64_t)(63 - v53) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v32 = 0;
      int64_t v155 = v56;
      uint64_t v157 = v49;
      uint64_t v149 = v49 + 112;
      unint64_t v150 = v56 - 6;
      LODWORD(v173) = isUniquelyReferenced_nonNull_native;
      if (v55) {
        break;
      }
LABEL_12:
      uint64_t v66 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        goto LABEL_52;
      }
      if (v66 < v155)
      {
        unint64_t v67 = *(void *)(v156 + 8 * v66);
        uint64_t v68 = v32 + 1;
        if (v67) {
          goto LABEL_27;
        }
        uint64_t v68 = v32 + 2;
        if (v32 + 2 < v155)
        {
          unint64_t v67 = *(void *)(v156 + 8 * v68);
          if (v67) {
            goto LABEL_27;
          }
          uint64_t v68 = v32 + 3;
          if (v32 + 3 < v155)
          {
            unint64_t v67 = *(void *)(v156 + 8 * v68);
            if (v67) {
              goto LABEL_27;
            }
            uint64_t v68 = v32 + 4;
            if (v32 + 4 < v155)
            {
              unint64_t v67 = *(void *)(v156 + 8 * v68);
              if (v67) {
                goto LABEL_27;
              }
              uint64_t v68 = v32 + 5;
              if (v32 + 5 < v155)
              {
                unint64_t v67 = *(void *)(v156 + 8 * v68);
                if (!v67)
                {
                  uint64_t v69 = v32;
                  do
                  {
                    if (v150 == v69) {
                      goto LABEL_4;
                    }
                    unint64_t v67 = *(void *)(v149 + 8 * v69++);
                  }
                  while (!v67);
                  uint64_t v68 = v69 + 5;
                }
LABEL_27:
                uint64_t v171 = (v67 - 1) & v67;
                uint64_t v172 = v68;
                unint64_t v65 = __clz(__rbit64(v67)) + (v68 << 6);
                goto LABEL_28;
              }
            }
          }
        }
      }
LABEL_4:
      uint64_t v47 = (uint64_t)v50;
      swift_bridgeObjectRelease();
      sub_1DE8CD92C();
      swift_bridgeObjectRelease();
      uint64_t v48 = v147;
      sub_1DE8360A0(v147);
      uint64_t v46 = v152;
      if (v152 == v154)
      {
        uint64_t v89 = v129;
        uint64_t v90 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v90, v91);
        v124[2] = v146;
        uint64_t v92 = sub_1DE85F830(MEMORY[0x1E4FBC870], (void (*)(uint64_t *, void *))sub_1DE8CD934, (uint64_t)v124, v47);
        swift_bridgeObjectRelease();
        uint64_t v93 = v126;
        uint64_t v94 = v141;
        uint64_t v95 = v142;
        unint64_t v96 = sub_1DE8C292C(v89, v126, (uint64_t)&v177[52], v141, v142);
        uint64_t v97 = sub_1DE8CD874(v93, (uint64_t)&v174, v94, v95);
        uint64_t v98 = v127;
        uint64_t v175 = v127;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v174);
        uint64_t v100 = v148;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v128 + 16))(boxed_opaque_existential_1, v148, v98);
        unint64_t v101 = sub_1DE8C3428(v97, &v174, (uint64_t)&v177[20], v94, v95, a9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v174);
        *(double *)&long long v174 = v140;
        uint64_t v102 = sub_1DE8C3554(v89, v97, (uint64_t)v146, v100, (uint64_t)&v177[113], v178, v143, (uint64_t *)&v174, v139, v94, v95);
        if (v177[12] & 1) != 0 && (v136)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EAC0D4A0);
          uint64_t v103 = swift_allocObject();
          *(_OWORD *)(v103 + 16) = xmmword_1DE8EE080;
          uint64_t v104 = v177[13];
          *(void *)(v103 + 48) = v177[11];
          *(void *)(v103 + 72) = v104;
          uint64_t v105 = v177[15];
          *(void *)(v103 + 96) = v177[14];
          uint64_t v106 = v177[16];
          *(void *)(v103 + 120) = v177[17];
          *(void *)(v103 + 144) = v177[18];
          *(void *)(v103 + 168) = v105;
          *(void *)(v103 + 32) = 0xD000000000000025;
          *(void *)(v103 + 40) = 0x80000001DE8F4330;
          *(void *)(v103 + 56) = 0xD000000000000032;
          *(void *)(v103 + 64) = 0x80000001DE8F4390;
          *(void *)(v103 + 80) = 0xD00000000000003ALL;
          *(void *)(v103 + 88) = 0x80000001DE8F43D0;
          *(void *)(v103 + 104) = 0xD000000000000033;
          *(void *)(v103 + 112) = 0x80000001DE8F4470;
          *(void *)(v103 + 128) = 0xD00000000000002DLL;
          *(void *)(v103 + 136) = 0x80000001DE8F44B0;
          *(void *)(v103 + 152) = 0xD000000000000029;
          *(void *)(v103 + 160) = 0x80000001DE8F4410;
          *(void *)(v103 + 176) = 0xD000000000000029;
          *(void *)(v103 + 184) = 0x80000001DE8F4440;
          *(void *)(v103 + 192) = v106;
          sub_1DE85C98C(v103);
          unint64_t v107 = (void *)qword_1EBEA9E90;
          uint64_t v108 = swift_allocObject();
          *(_OWORD *)(v108 + 16) = xmmword_1DE8E25E0;
          BOOL v173 = v107;
          uint64_t v109 = MEMORY[0x1E4FBB1A0];
          uint64_t v110 = sub_1DE8E13D0();
          uint64_t v171 = v111;
          uint64_t v172 = v110;
          swift_bridgeObjectRelease();
          uint64_t v112 = v125[0];
          *(void *)(v108 + 56) = v109;
          *(void *)(v108 + 64) = v112;
          uint64_t v113 = v171;
          *(void *)(v108 + 32) = v172;
          *(void *)(v108 + 40) = v113;
          sub_1DE8E16C0();
          unint64_t v114 = v173;
          sub_1DE8E13A0();

          swift_bridgeObjectRelease();
        }
        sub_1DE85CAA0(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        *(void *)&long long v174 = MEMORY[0x1E4FBC868];
        swift_bridgeObjectRetain();
        uint64_t v120 = 0;
        uint64_t v121 = v148;
        uint64_t v32 = v145;
        while (1)
        {
          uint64_t AssociatedTypeWitness = v120 + 1;
          if (__OFADD__(v120, 1)) {
            goto LABEL_53;
          }
          sub_1DE8CE3E4((double *)&v174, v32, v146, v97, v121, v177, (uint64_t)v178, v143, v35, a9, a10, v115, v116, v117, v118, v119, v140, v138, v137,
            v130,
            v139,
            v96,
            v101,
            v92,
            v102,
            v136 & 1,
            v131,
            v132,
            v133,
            v134,
            v135,
            v141,
            *(double *)&v142);
          ++v120;
          v32 += v153;
          uint64_t v121 = v148;
          if (AssociatedTypeWitness == v154)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v122 = v174;
            uint64_t AssociatedTypeWitness = v127;
            goto LABEL_49;
          }
        }
      }
    }
    while (1)
    {
      uint64_t v171 = (v55 - 1) & v55;
      uint64_t v172 = v32;
      unint64_t v65 = __clz(__rbit64(v55)) | (v32 << 6);
LABEL_28:
      uint64_t v70 = (uint64_t *)(*(void *)(v157 + 48) + 16 * v65);
      uint64_t v72 = *v70;
      uint64_t v71 = v70[1];
      uint64_t v73 = *(void *)(v157 + 56) + 80 * v65;
      uint64_t v74 = *(void *)v73;
      char v75 = *(unsigned char *)(v73 + 8);
      uint64_t AssociatedTypeWitness = *(void *)(v73 + 16);
      LODWORD(v170) = *(unsigned __int8 *)(v73 + 24);
      uint64_t v76 = *(void *)(v73 + 32);
      int v169 = *(unsigned __int8 *)(v73 + 40);
      uint64_t v168 = *(void *)(v73 + 48);
      int v167 = *(unsigned __int8 *)(v73 + 56);
      int v166 = *(_DWORD *)(v73 + 60);
      int v165 = *(unsigned __int8 *)(v73 + 64);
      int v164 = *(_DWORD *)(v73 + 68);
      int v163 = *(unsigned __int8 *)(v73 + 72);
      int v162 = *(unsigned __int8 *)(v73 + 73);
      int v161 = *(unsigned __int8 *)(v73 + 74);
      int v160 = *(unsigned __int8 *)(v73 + 75);
      int v159 = *(unsigned __int8 *)(v73 + 76);
      int v158 = *(unsigned __int8 *)(v73 + 77);
      swift_bridgeObjectRetain();
      if (!v71) {
        goto LABEL_4;
      }
      unint64_t v78 = sub_1DE821D84(v72, v71);
      uint64_t v79 = v50[2];
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80)) {
        break;
      }
      uint64_t v32 = v77;
      if (v50[3] >= v81)
      {
        if (v173)
        {
          uint64_t v50 = (void *)v174;
          if ((v77 & 1) == 0) {
            goto LABEL_36;
          }
        }
        else
        {
          sub_1DE823B1C();
          uint64_t v50 = (void *)v174;
          if ((v32 & 1) == 0) {
            goto LABEL_36;
          }
        }
LABEL_10:
        uint64_t v57 = 80 * v78;
        uint64_t v58 = v50[7] + v57;
        uint64_t v59 = *(void *)v58;
        char v60 = *(unsigned char *)(v58 + 8);
        uint64_t v61 = *(void *)(v58 + 16);
        char v62 = *(unsigned char *)(v58 + 24);
        uint64_t AssociatedTypeWitness = *(void *)(v58 + 32);
        char v63 = *(unsigned char *)(v58 + 40);
        uint64_t v170 = *(void *)(v58 + 48);
        int v169 = *(unsigned __int8 *)(v58 + 56);
        LODWORD(v168) = *(_DWORD *)(v58 + 60);
        int v167 = *(unsigned __int8 *)(v58 + 64);
        int v166 = *(_DWORD *)(v58 + 68);
        int v165 = *(unsigned __int8 *)(v58 + 72);
        int v164 = *(unsigned __int8 *)(v58 + 73);
        int v163 = *(unsigned __int8 *)(v58 + 74);
        int v162 = *(unsigned __int8 *)(v58 + 75);
        int v161 = *(unsigned __int8 *)(v58 + 76);
        LODWORD(v173) = *(unsigned __int8 *)(v58 + 77);
        swift_bridgeObjectRelease();
        uint64_t v64 = v50[7] + v57;
        *(void *)uint64_t v64 = v59;
        *(unsigned char *)(v64 + 8) = v60;
        *(void *)(v64 + 16) = v61;
        *(unsigned char *)(v64 + 24) = v62;
        *(void *)(v64 + 32) = AssociatedTypeWitness;
        *(unsigned char *)(v64 + 40) = v63;
        *(void *)(v64 + 48) = v170;
        *(unsigned char *)(v64 + 56) = v169;
        *(_DWORD *)(v64 + 60) = v168;
        *(unsigned char *)(v64 + 64) = v167;
        *(_DWORD *)(v64 + 68) = v166;
        *(unsigned char *)(v64 + 72) = v165;
        *(unsigned char *)(v64 + 73) = v164;
        *(unsigned char *)(v64 + 74) = v163;
        *(unsigned char *)(v64 + 75) = v162;
        *(unsigned char *)(v64 + 76) = v161;
        unint64_t v55 = v171;
        uint64_t v32 = v172;
        *(unsigned char *)(v64 + 77) = (_BYTE)v173;
        LODWORD(v173) = 1;
        if (!v55) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1DE82763C(v81, v173 & 1);
        unint64_t v82 = sub_1DE821D84(v72, v71);
        if ((v32 & 1) != (v83 & 1))
        {
          sub_1DE8E1B40();
          __break(1u);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        unint64_t v78 = v82;
        uint64_t v50 = (void *)v174;
        if (v32) {
          goto LABEL_10;
        }
LABEL_36:
        v50[(v78 >> 6) + 8] |= 1 << v78;
        uint64_t v84 = (uint64_t *)(v50[6] + 16 * v78);
        *uint64_t v84 = v72;
        v84[1] = v71;
        uint64_t v85 = v50[7] + 80 * v78;
        *(void *)uint64_t v85 = v74;
        *(unsigned char *)(v85 + 8) = v75;
        *(void *)(v85 + 16) = AssociatedTypeWitness;
        *(unsigned char *)(v85 + 24) = v170;
        *(void *)(v85 + 32) = v76;
        *(unsigned char *)(v85 + 40) = v169;
        *(void *)(v85 + 48) = v168;
        *(unsigned char *)(v85 + 56) = v167;
        *(_DWORD *)(v85 + 60) = v166;
        *(unsigned char *)(v85 + 64) = v165;
        *(_DWORD *)(v85 + 68) = v164;
        *(unsigned char *)(v85 + 72) = v163;
        *(unsigned char *)(v85 + 73) = v162;
        *(unsigned char *)(v85 + 74) = v161;
        *(unsigned char *)(v85 + 75) = v160;
        *(unsigned char *)(v85 + 76) = v159;
        *(unsigned char *)(v85 + 77) = v158;
        uint64_t v86 = v50[2];
        BOOL v87 = __OFADD__(v86, 1);
        uint64_t v88 = v86 + 1;
        if (v87) {
          goto LABEL_51;
        }
        v50[2] = v88;
        unint64_t v55 = v171;
        uint64_t v32 = v172;
        LODWORD(v173) = 1;
        if (!v171) {
          goto LABEL_12;
        }
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_once();
  }
  unint64_t v122 = sub_1DE85CAA0(MEMORY[0x1E4FBC860]);
LABEL_49:
  (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v148, AssociatedTypeWitness);
  return v122;
}

uint64_t sub_1DE8C2700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 91);
  int v7 = *(unsigned __int8 *)(a2 + 92);
  int v8 = *(unsigned __int8 *)(a2 + 93);
  sub_1DE8CEAE8(a3, (uint64_t)v29);
  if (v7 == 1)
  {
    int v32 = v8;
    uint64_t v9 = v30;
    uint64_t v10 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    int v33 = v6;
    int64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    int v8 = v32;
    uint64_t v13 = v11(v9, v12);
    int v6 = v33;
    int v14 = sub_1DE83C5AC(v5, v4, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    int v14 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  sub_1DE8CEAE8(a3, (uint64_t)v26);
  if (!v8)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (((v6 | v14) & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_13;
  }
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  LOBYTE(v15) = sub_1DE83C5AC(v5, v4, v17);
  swift_bridgeObjectRelease();
  sub_1DE8CEAE8((uint64_t)v26, (uint64_t)&v23);
  if (v15)
  {
    char v18 = 1;
  }
  else
  {
    uint64_t v19 = v24;
    uint64_t v20 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, v24);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    char v18 = sub_1DE83C5AC(v5, v4, v21);
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  if ((v6 | v14) & 1) != 0 || (v18) {
LABEL_13:
  }
    sub_1DE8AC840(&v23, v5, v4);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DE8C292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ClassicArticleData();
  uint64_t v12 = MEMORY[0x1F4188790](v10, v11);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v17 = (char *)&v122 - v16;
  if (*(double *)(a3 + 104) <= 0.0 || *(double *)(a3 + 152) >= 1.0)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    return sub_1DE85C98C(v19);
  }
  uint64_t v21 = *(void *)(a3 + 24);
  uint64_t v22 = *(void *)(a3 + 32);
  uint64_t v23 = *(void *)(a3 + 40);
  long long v24 = *(_OWORD *)(a3 + 56);
  uint64_t v26 = *(void *)(a3 + 72);
  double v25 = *(double *)(a3 + 80);
  uint64_t v135 = MEMORY[0x1E4FBC870];
  uint64_t v132 = *(void *)(a1 + 16);
  uint64_t v126 = a4;
  uint64_t v127 = a5;
  uint64_t v125 = a2;
  if (v132)
  {
    long long v122 = v24;
    uint64_t v131 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v27 = *(void *)(v14 + 72);
    uint64_t v129 = v15;
    uint64_t v130 = v27;
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    do
    {
      sub_1DE83603C(v131 + v130 * v28, (uint64_t)v17);
      unint64_t v29 = (uint64_t *)&v17[*(int *)(v10 + 56)];
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      swift_bridgeObjectRetain();
      sub_1DE8AC840((uint64_t *)&v133, v30, v31);
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)&v17[*(int *)(v10 + 64)];
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        long long v34 = (uint64_t *)(v32 + 40);
        do
        {
          uint64_t v35 = *(v34 - 1);
          uint64_t v36 = *v34;
          swift_bridgeObjectRetain();
          sub_1DE8AC840((uint64_t *)&v133, v35, v36);
          swift_bridgeObjectRelease();
          v34 += 2;
          --v33;
        }
        while (v33);
        swift_bridgeObjectRelease();
      }
      ++v28;
      sub_1DE8360A0((uint64_t)v17);
    }
    while (v28 != v132);
    swift_bridgeObjectRelease();
    uint64_t v124 = v135;
    uint64_t v123 = a1;
    swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    uint64_t v38 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v39 = v129;
    uint64_t v128 = v10;
    do
    {
      sub_1DE83603C(v131 + v130 * v37, v39);
      uint64_t v40 = *(char **)(v39 + *(int *)(v10 + 64));
      uint64_t v41 = (uint64_t *)(v39 + *(int *)(v10 + 56));
      uint64_t v42 = *v41;
      uint64_t v43 = v41[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1DE83A608(0, *((void *)v40 + 2) + 1, 1, v40);
      }
      unint64_t v45 = *((void *)v40 + 2);
      unint64_t v44 = *((void *)v40 + 3);
      if (v45 >= v44 >> 1) {
        uint64_t v40 = sub_1DE83A608((char *)(v44 > 1), v45 + 1, 1, v40);
      }
      *((void *)v40 + 2) = v45 + 1;
      uint64_t v46 = &v40[16 * v45];
      *((void *)v46 + 4) = v42;
      *((void *)v46 + 5) = v43;
      swift_bridgeObjectRelease();
      uint64_t v47 = *((void *)v40 + 2);
      if (v47)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = (uint64_t *)(v40 + 40);
        do
        {
          uint64_t v49 = *(v48 - 1);
          uint64_t v50 = *v48;
          uint64_t v51 = v38[2];
          swift_bridgeObjectRetain_n();
          double v52 = 0.0;
          if (v51)
          {
            unint64_t v53 = sub_1DE821D84(v49, v50);
            if (v54) {
              double v52 = *(double *)(v38[7] + 8 * v53);
            }
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v133 = v38;
          unint64_t v57 = sub_1DE821D84(v49, v50);
          uint64_t v58 = v38[2];
          BOOL v59 = (v56 & 1) == 0;
          uint64_t v60 = v58 + v59;
          if (__OFADD__(v58, v59))
          {
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
            goto LABEL_113;
          }
          char v61 = v56;
          if (v38[3] >= v60)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1DE823068();
            }
          }
          else
          {
            sub_1DE826324(v60, isUniquelyReferenced_nonNull_native);
            unint64_t v62 = sub_1DE821D84(v49, v50);
            if ((v61 & 1) != (v63 & 1)) {
              goto LABEL_114;
            }
            unint64_t v57 = v62;
          }
          double v64 = v52 + 1.0;
          uint64_t v38 = (void *)v133;
          if (v61)
          {
            *(double *)(*(void *)(v133 + 56) + 8 * v57) = v64;
          }
          else
          {
            *(void *)(v133 + 8 * (v57 >> 6) + 64) |= 1 << v57;
            unint64_t v65 = (uint64_t *)(v38[6] + 16 * v57);
            *unint64_t v65 = v49;
            v65[1] = v50;
            *(double *)(v38[7] + 8 * v57) = v64;
            uint64_t v66 = v38[2];
            BOOL v67 = __OFADD__(v66, 1);
            uint64_t v68 = v66 + 1;
            if (v67) {
              goto LABEL_107;
            }
            v38[2] = v68;
            swift_bridgeObjectRetain();
          }
          v48 += 2;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
        uint64_t v10 = v128;
      }
      ++v37;
      swift_bridgeObjectRelease();
      uint64_t v39 = v129;
      sub_1DE8360A0(v129);
    }
    while (v37 != v132);
    swift_bridgeObjectRelease();
    uint64_t v69 = v124;
    long long v24 = v122;
  }
  else
  {
    uint64_t v38 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v69 = MEMORY[0x1E4FBC870];
  }
  long long v133 = v24;
  uint64_t v134 = v26;
  uint64_t v70 = sub_1DE8C5B18((uint64_t)v38, (double *)&v133);
  swift_bridgeObjectRelease();
  uint64_t v135 = MEMORY[0x1E4FBC870];
  uint64_t v71 = *(void *)(v69 + 56);
  uint64_t v130 = v69 + 56;
  uint64_t v72 = 1 << *(unsigned char *)(v69 + 32);
  uint64_t v73 = -1;
  if (v72 < 64) {
    uint64_t v73 = ~(-1 << v72);
  }
  uint64_t v74 = v73 & v71;
  int64_t v75 = (unint64_t)(v72 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v76 = 0;
  while (1)
  {
    if (v74)
    {
      v74 &= v74 - 1;
      goto LABEL_44;
    }
    int64_t v77 = v76 + 1;
    if (__OFADD__(v76, 1)) {
      goto LABEL_110;
    }
    if (v77 >= v75) {
      break;
    }
    uint64_t v78 = *(void *)(v130 + 8 * v77);
    ++v76;
    if (!v78)
    {
      int64_t v76 = v77 + 1;
      if (v77 + 1 >= v75) {
        break;
      }
      uint64_t v78 = *(void *)(v130 + 8 * v76);
      if (!v78)
      {
        int64_t v76 = v77 + 2;
        if (v77 + 2 >= v75) {
          break;
        }
        uint64_t v78 = *(void *)(v130 + 8 * v76);
        if (!v78)
        {
          int64_t v76 = v77 + 3;
          if (v77 + 3 >= v75) {
            break;
          }
          uint64_t v78 = *(void *)(v130 + 8 * v76);
          if (!v78)
          {
            int64_t v76 = v77 + 4;
            if (v77 + 4 >= v75) {
              break;
            }
            uint64_t v78 = *(void *)(v130 + 8 * v76);
            if (!v78)
            {
              int64_t v79 = v77 + 5;
              if (v79 >= v75) {
                break;
              }
              uint64_t v78 = *(void *)(v130 + 8 * v79);
              if (!v78)
              {
                while (1)
                {
                  int64_t v76 = v79 + 1;
                  if (__OFADD__(v79, 1)) {
                    goto LABEL_112;
                  }
                  if (v76 >= v75) {
                    goto LABEL_64;
                  }
                  uint64_t v78 = *(void *)(v130 + 8 * v76);
                  ++v79;
                  if (v78) {
                    goto LABEL_63;
                  }
                }
              }
              int64_t v76 = v79;
            }
          }
        }
      }
    }
LABEL_63:
    uint64_t v74 = (v78 - 1) & v78;
LABEL_44:
    *(void *)&long long v133 = 2831206;
    *((void *)&v133 + 1) = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1DE8E1490();
    sub_1DE8AC840((uint64_t *)&v133, v133, *((uint64_t *)&v133 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_64:
  swift_release();
  long long v133 = 0uLL;
  uint64_t v81 = v126;
  uint64_t v80 = v127;
  uint64_t v82 = (*(uint64_t (**)(uint64_t, long long *, uint64_t))(*(void *)(v127 + 8) + 48))(v135, &v133, v126);
  uint64_t v83 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v83, v84);
  *((void *)&v122 - 4) = v81;
  *((void *)&v122 - 3) = v80;
  *((void *)&v122 - 2) = v82;
  uint64_t v85 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v86 = sub_1DE85F434(MEMORY[0x1E4FBC868], (void (*)(uint64_t *, void *))sub_1DE8CEC84, (uint64_t)(&v122 - 3), v69);
  swift_bridgeObjectRelease();
  *(void *)&long long v133 = v21;
  *((void *)&v133 + 1) = v22;
  uint64_t v134 = v23;
  uint64_t v131 = sub_1DE8C5B18(v86, (double *)&v133);
  swift_bridgeObjectRelease();
  uint64_t v87 = 1 << *(unsigned char *)(v69 + 32);
  uint64_t v88 = -1;
  if (v87 < 64) {
    uint64_t v88 = ~(-1 << v87);
  }
  unint64_t v89 = v88 & *(void *)(v69 + 56);
  uint64_t v129 = (unint64_t)(v87 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v90 = 0;
  while (v89)
  {
    unint64_t v91 = __clz(__rbit64(v89));
    v89 &= v89 - 1;
    uint64_t v132 = v90;
    unint64_t v92 = v91 | (v90 << 6);
LABEL_89:
    uint64_t v97 = (uint64_t *)(*(void *)(v69 + 48) + 16 * v92);
    uint64_t v99 = *v97;
    uint64_t v98 = v97[1];
    uint64_t v100 = *(void *)(v70 + 16);
    swift_bridgeObjectRetain_n();
    double v101 = 0.0;
    double v102 = 0.0;
    if (v100)
    {
      unint64_t v103 = sub_1DE821D84(v99, v98);
      if (v104) {
        double v102 = *(double *)(*(void *)(v70 + 56) + 8 * v103);
      }
    }
    if (*(void *)(v131 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v105 = sub_1DE821D84(v99, v98);
      if (v106) {
        double v101 = *(double *)(*(void *)(v131 + 56) + 8 * v105);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v107 = v70;
    uint64_t v108 = v69;
    char v109 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v133 = v85;
    unint64_t v111 = sub_1DE821D84(v99, v98);
    uint64_t v112 = v85[2];
    BOOL v113 = (v110 & 1) == 0;
    uint64_t v114 = v112 + v113;
    if (__OFADD__(v112, v113)) {
      goto LABEL_108;
    }
    char v115 = v110;
    if (v85[3] >= v114)
    {
      if ((v109 & 1) == 0) {
        sub_1DE823068();
      }
    }
    else
    {
      sub_1DE826324(v114, v109);
      unint64_t v116 = sub_1DE821D84(v99, v98);
      if ((v115 & 1) != (v117 & 1)) {
        goto LABEL_114;
      }
      unint64_t v111 = v116;
    }
    uint64_t v70 = v107;
    double v118 = v25 * v102 + (1.0 - v25) * v101;
    uint64_t v85 = (void *)v133;
    if (v115)
    {
      *(double *)(*(void *)(v133 + 56) + 8 * v111) = v118;
    }
    else
    {
      *(void *)(v133 + 8 * (v111 >> 6) + 64) |= 1 << v111;
      double v119 = (uint64_t *)(v85[6] + 16 * v111);
      *double v119 = v99;
      v119[1] = v98;
      *(double *)(v85[7] + 8 * v111) = v118;
      uint64_t v120 = v85[2];
      BOOL v67 = __OFADD__(v120, 1);
      uint64_t v121 = v120 + 1;
      if (v67) {
        goto LABEL_109;
      }
      v85[2] = v121;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v69 = v108;
    uint64_t v90 = v132;
  }
  uint64_t v93 = v90 + 1;
  if (__OFADD__(v90, 1)) {
    goto LABEL_111;
  }
  if (v93 >= v129)
  {
LABEL_105:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (unint64_t)v85;
  }
  unint64_t v94 = *(void *)(v130 + 8 * v93);
  uint64_t v95 = v90 + 1;
  if (v94) {
    goto LABEL_88;
  }
  uint64_t v95 = v90 + 2;
  if (v90 + 2 >= v129) {
    goto LABEL_105;
  }
  unint64_t v94 = *(void *)(v130 + 8 * v95);
  if (v94) {
    goto LABEL_88;
  }
  uint64_t v95 = v90 + 3;
  if (v90 + 3 >= v129) {
    goto LABEL_105;
  }
  unint64_t v94 = *(void *)(v130 + 8 * v95);
  if (v94) {
    goto LABEL_88;
  }
  uint64_t v95 = v90 + 4;
  if (v90 + 4 >= v129) {
    goto LABEL_105;
  }
  unint64_t v94 = *(void *)(v130 + 8 * v95);
  if (v94) {
    goto LABEL_88;
  }
  uint64_t v95 = v90 + 5;
  if (v90 + 5 >= v129) {
    goto LABEL_105;
  }
  unint64_t v94 = *(void *)(v130 + 8 * v95);
  if (v94)
  {
LABEL_88:
    unint64_t v89 = (v94 - 1) & v94;
    uint64_t v132 = v95;
    unint64_t v92 = __clz(__rbit64(v94)) + (v95 << 6);
    goto LABEL_89;
  }
  uint64_t v96 = v90 + 6;
  if (v90 + 6 >= v129) {
    goto LABEL_105;
  }
  unint64_t v94 = *(void *)(v130 + 8 * v96);
  if (v94)
  {
    uint64_t v95 = v90 + 6;
    goto LABEL_88;
  }
  while (1)
  {
    uint64_t v95 = v96 + 1;
    if (__OFADD__(v96, 1)) {
      break;
    }
    if (v95 >= v129) {
      goto LABEL_105;
    }
    unint64_t v94 = *(void *)(v130 + 8 * v95);
    ++v96;
    if (v94) {
      goto LABEL_88;
    }
  }
LABEL_113:
  __break(1u);
LABEL_114:
  unint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

unint64_t sub_1DE8C3428(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  if (*(double *)(a3 + 8) == 1.0 || *(double *)a3 == 0.0)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    return sub_1DE85C98C(v17);
  }
  else
  {
    double v11 = (double)*(uint64_t *)(a3 + 16);
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v12);
    ReadonlyAggregateType.personalizationValue.getter(v12, v13);
    v18[2] = a4;
    v18[3] = a5;
    v18[4] = a2;
    *(double *)&v18[5] = a6;
    v18[6] = MEMORY[0x1F4188790](v14, v15);
    *(double *)&v18[7] = v11;
    return sub_1DE85F5FC(MEMORY[0x1E4FBC868], (void (*)(uint64_t *, _OWORD *))sub_1DE8CEC5C, (uint64_t)v18, a1);
  }
}

uint64_t sub_1DE8C3554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  long long v12 = *(_OWORD *)(a5 + 80);
  v34[4] = *(_OWORD *)(a5 + 64);
  v35[0] = v12;
  *(_DWORD *)((char *)v35 + 15) = *(_DWORD *)(a5 + 95);
  long long v13 = *(_OWORD *)(a5 + 16);
  v34[0] = *(_OWORD *)a5;
  v34[1] = v13;
  long long v14 = *(_OWORD *)(a5 + 48);
  void v34[2] = *(_OWORD *)(a5 + 32);
  v34[3] = v14;
  long long v15 = *a6;
  long long v16 = a6[1];
  long long v17 = a6[2];
  long long v18 = a6[3];
  uint64_t v33 = *((void *)a6 + 8);
  v32[2] = v17;
  v32[3] = v18;
  v32[0] = v15;
  v32[1] = v16;
  uint64_t v19 = *a8;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBC868];
  *(void *)(v20 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v31 = v21;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v23 = *(void *)(type metadata accessor for ClassicArticleData() - 8);
    uint64_t v24 = a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v25 = *(void *)(v23 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DE8C8510(&v31, v24, v20, (uint64_t)v32, a7, v19, a2, a3, a4, (uint64_t)v34, a9, a10, a11);
      v24 += v25;
      --v22;
    }
    while (v22);
    swift_release();
    swift_bridgeObjectRelease();
    return v31;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC868];
  }
}

uint64_t sub_1DE8C3714(void *a1, unint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, uint64_t a7, const void *a8, uint64_t a9, uint64_t a10, double a11, double a12, double a13, double a14, double a15, double a16, double *a17, double *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,char a28,uint64_t *a29,uint64_t a30,uint64_t a31,double a32)
{
  double v462 = *(double *)&a10;
  uint64_t v456 = a7;
  unint64_t v450 = a2;
  v465 = a1;
  uint64_t v469 = a21;
  uint64_t v468 = a23;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9C90);
  MEMORY[0x1F4188790](v30 - 8, v31);
  uint64_t v445 = (uint64_t)&v412 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v453 = COERCE_DOUBLE(sub_1DE8E1350());
  uint64_t v444 = *(void *)(*(void *)&v453 - 8);
  MEMORY[0x1F4188790](*(void *)&v453, v33);
  *(void *)&double v443 = (char *)&v412 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35, v36);
  *(void *)&double v438 = (char *)&v412 - v37;
  *(double *)&uint64_t v38 = COERCE_DOUBLE(type metadata accessor for ClassicArticleData());
  MEMORY[0x1F4188790](v38, v39);
  uint64_t v454 = (uint64_t)&v412 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v484, a8, 0x3EBuLL);
  uint64_t v488 = *(void *)(a9 + 64);
  long long v41 = *(_OWORD *)(a9 + 48);
  v486[2] = *(_OWORD *)(a9 + 32);
  long long v487 = v41;
  long long v42 = *(_OWORD *)(a9 + 16);
  v486[0] = *(_OWORD *)a9;
  v486[1] = v42;
  double v452 = *a17;
  unsigned int v414 = *(unsigned __int8 *)a18;
  double v416 = a18[1];
  uint64_t v413 = *((void *)a18 + 2);
  *(void *)&double v430 = v38[16];
  uint64_t v43 = swift_bridgeObjectRetain();
  *(double *)&uint64_t v44 = COERCE_DOUBLE(sub_1DE82DA80(v43));
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1DE8E25E0;
  uint64_t v46 = (uint64_t *)(a3 + v38[14]);
  uint64_t v47 = *v46;
  uint64_t v48 = v46[1];
  v467 = v46;
  *(void *)(v45 + 32) = v47;
  *(void *)(v45 + 40) = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v455 = *(double *)&v44;
  uint64_t v463 = sub_1DE864AC0(v45, v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v49 = a3;
  memcpy(v483, a8, 0x3EBuLL);
  uint64_t v459 = a31;
  double v460 = a32;
  sub_1DE8C72A4(v465, v483, &v496);
  double v51 = *((double *)&v496 + 1);
  double v50 = *(double *)&v496;
  double v451 = *((double *)&v497 + 1);
  double v52 = *(double *)&v497;
  long long v53 = v498;
  long long v504 = v484[34];
  long long v505 = v484[35];
  long long v506 = v484[36];
  uint64_t v507 = *(void *)&v484[37];
  long long v500 = v484[30];
  long long v501 = v484[31];
  long long v502 = v484[32];
  long long v503 = v484[33];
  long long v496 = v484[26];
  long long v497 = v484[27];
  long long v498 = v484[28];
  long long v499 = v484[29];
  unint64_t v457 = sub_1DE8C61D0(a3, v469, v468, (uint64_t)&v484[26]);
  *(double *)&char v54 = COERCE_DOUBLE(sub_1DE8CBA20(a3, 75, (uint64_t)v486));
  uint64_t v55 = *((void *)v54 + 2);
  uint64_t v56 = MEMORY[0x1E4FBC868];
  uint64_t v464 = a3;
  double v458 = *(double *)&v38;
  if (v55)
  {
    uint64_t v466 = v38[23];
    swift_bridgeObjectRetain();
    uint64_t v449 = (uint64_t)v54;
    unint64_t v57 = v54 + 72;
    uint64_t v58 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v469 = MEMORY[0x1E4FBC868];
    while (2)
    {
      uint64_t v468 = v55;
      BOOL v59 = v58;
      sub_1DE82F210((uint64_t)(v57 - 40), (uint64_t)v485);
      uint64_t v60 = *v467;
      uint64_t v61 = v467[1];
      double v62 = *(double *)(v464 + v466);
      sub_1DE82F210((uint64_t)v485, (uint64_t)&v490);
      switch(v495)
      {
        case 1:
          swift_bridgeObjectRetain();
          double v63 = 0.0;
          goto LABEL_18;
        case 2:
          double v63 = *(double *)v486;
          swift_bridgeObjectRetain();
          goto LABEL_18;
        case 3:
          double v461 = v62;
          uint64_t v64 = v493;
          uint64_t v65 = v494;
          double v66 = v462;
          if (*(void *)(*(void *)&v462 + 16))
          {
            sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE813E10);
            swift_bridgeObjectRetain();
            unint64_t v67 = sub_1DE821D84(v64, v65);
            uint64_t v68 = v469;
            if (v69)
            {
              double v63 = *(double *)(*(void *)(*(void *)&v66 + 56) + (v67 << 6) + 24);
              swift_bridgeObjectRelease();
              uint64_t v70 = v59;
              goto LABEL_19;
            }
            swift_bridgeObjectRelease();
            uint64_t v70 = v59;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v70 = v59;
            uint64_t v68 = v469;
          }
          double v101 = v461;
          double v63 = 1.0;
          if (!*(void *)(*(void *)&v461 + 16)) {
            goto LABEL_19;
          }
          swift_bridgeObjectRetain();
          unint64_t v102 = sub_1DE821D84(v64, v65);
          if (v103)
          {
            uint64_t v104 = *(void *)(*(void *)&v101 + 56) + 80 * v102;
            uint64_t v105 = *(void *)(v104 + 48);
            char v106 = *(unsigned char *)(v104 + 56);
            swift_bridgeObjectRelease();
            if ((v106 & 1) == 0) {
              goto LABEL_56;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          goto LABEL_19;
        case 4:
          uint64_t v71 = v491;
          uint64_t v72 = v492;
          if (v491 == v60 && v492 == v61)
          {
            double v63 = *((double *)&v487 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_39:
            uint64_t v70 = v59;
LABEL_40:
            uint64_t v68 = v469;
            goto LABEL_19;
          }
          if (sub_1DE8E1AC0())
          {
            double v63 = *((double *)&v487 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_18:
            uint64_t v70 = v59;
            uint64_t v68 = v469;
          }
          else
          {
            double v107 = v62;
            double v108 = v462;
            if (*(void *)(*(void *)&v462 + 16))
            {
              sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE813E10);
              swift_bridgeObjectRetain();
              unint64_t v109 = sub_1DE821D84(v71, v72);
              if (v110)
              {
                double v63 = *(double *)(*(void *)(*(void *)&v108 + 56) + (v109 << 6) + 48);
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            uint64_t v70 = v59;
            double v63 = 1.0;
            if (!*(void *)(*(void *)&v107 + 16)) {
              goto LABEL_40;
            }
            swift_bridgeObjectRetain();
            unint64_t v111 = sub_1DE821D84(v71, v72);
            if ((v112 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              goto LABEL_40;
            }
            uint64_t v113 = *(void *)(*(void *)&v107 + 56) + 80 * v111;
            uint64_t v105 = *(void *)(v113 + 48);
            char v114 = *(unsigned char *)(v113 + 56);
            swift_bridgeObjectRelease();
            uint64_t v68 = v469;
            if ((v114 & 1) == 0)
            {
LABEL_56:
              if (*(void *)(*(void *)&v452 + 16))
              {
                unint64_t v115 = sub_1DE821DFC(v105);
                if (v116) {
                  double v63 = *(double *)(*(void *)(*(void *)&v452 + 56) + 8 * v115);
                }
              }
            }
          }
LABEL_19:
          sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE813E10);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v483[0] = v68;
          unint64_t v76 = sub_1DE8220D0((uint64_t)v485);
          uint64_t v77 = *(void *)(v68 + 16);
          BOOL v78 = (v75 & 1) == 0;
          uint64_t v79 = v77 + v78;
          if (__OFADD__(v77, v78))
          {
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            __break(1u);
LABEL_290:
            __break(1u);
LABEL_291:
            __break(1u);
LABEL_292:
            __break(1u);
LABEL_293:
            __break(1u);
LABEL_294:
            __break(1u);
LABEL_295:
            __break(1u);
LABEL_296:
            sub_1DE8E1B40();
            __break(1u);
LABEL_297:
            sub_1DE8E1B40();
            __break(1u);
            JUMPOUT(0x1DE8C5B08);
          }
          char v80 = v75;
          if (*(void *)(v68 + 24) >= v79)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1DE823FE8();
            }
          }
          else
          {
            sub_1DE827E38(v79, isUniquelyReferenced_nonNull_native);
            unint64_t v81 = sub_1DE8220D0((uint64_t)v485);
            if ((v80 & 1) != (v82 & 1)) {
              goto LABEL_297;
            }
            unint64_t v76 = v81;
          }
          uint64_t v83 = (void *)v483[0];
          uint64_t v469 = v483[0];
          if (v80)
          {
            *(double *)(*(void *)(v483[0] + 56) + 8 * v76) = v63;
          }
          else
          {
            *(void *)(v483[0] + 8 * (v76 >> 6) + 64) |= 1 << v76;
            sub_1DE82F210((uint64_t)v485, v83[6] + 56 * v76);
            *(double *)(v83[7] + 8 * v76) = v63;
            uint64_t v84 = v83[2];
            BOOL v85 = __OFADD__(v84, 1);
            uint64_t v86 = v84 + 1;
            if (v85) {
              goto LABEL_287;
            }
            v83[2] = v86;
            sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE813E10);
          }
          swift_bridgeObjectRelease();
          sub_1DE82F210((uint64_t)v485, (uint64_t)v489);
          uint64_t v87 = v489[1];
          uint64_t v88 = v489[0];
          swift_bridgeObjectRetain();
          sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE864B40);
          char v89 = swift_isUniquelyReferenced_nonNull_native();
          v483[0] = v70;
          unint64_t v91 = sub_1DE821D84(v88, v87);
          uint64_t v92 = v70[2];
          BOOL v93 = (v90 & 1) == 0;
          uint64_t v94 = v92 + v93;
          if (__OFADD__(v92, v93)) {
            goto LABEL_285;
          }
          char v95 = v90;
          if (v70[3] >= v94)
          {
            if (v89)
            {
              uint64_t v58 = (void *)v483[0];
              if (v90) {
                goto LABEL_3;
              }
            }
            else
            {
              sub_1DE823068();
              uint64_t v58 = (void *)v483[0];
              if (v95) {
                goto LABEL_3;
              }
            }
          }
          else
          {
            sub_1DE826324(v94, v89);
            unint64_t v96 = sub_1DE821D84(v88, v87);
            if ((v95 & 1) != (v97 & 1)) {
              goto LABEL_296;
            }
            unint64_t v91 = v96;
            uint64_t v58 = (void *)v483[0];
            if (v95)
            {
LABEL_3:
              *(double *)(v58[7] + 8 * v91) = v63;
              goto LABEL_4;
            }
          }
          v58[(v91 >> 6) + 8] |= 1 << v91;
          uint64_t v98 = (uint64_t *)(v58[6] + 16 * v91);
          uint64_t *v98 = v88;
          v98[1] = v87;
          *(double *)(v58[7] + 8 * v91) = v63;
          uint64_t v99 = v58[2];
          BOOL v85 = __OFADD__(v99, 1);
          uint64_t v100 = v99 + 1;
          if (v85) {
            goto LABEL_288;
          }
          void v58[2] = v100;
          swift_bridgeObjectRetain();
LABEL_4:
          v57 += 56;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE864B40);
          uint64_t v55 = v468 - 1;
          if (v468 != 1) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v49 = v464;
          uint64_t v56 = v469;
          break;
        default:
          sub_1DE8CE7C8((uint64_t)v485, (void (*)(void, void, void, void, void, void, void))sub_1DE813E10);
          double v63 = 1.0;
          goto LABEL_18;
      }
      break;
    }
  }
  else
  {
    uint64_t v58 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  double v117 = v458;
  *(double *)&long long v473 = v458;
  *((void *)&v473 + 1) = sub_1DE8CE80C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v471);
  sub_1DE83603C(v49, (uint64_t)boxed_opaque_existential_1);
  memcpy(v483, v484, 0x3EBuLL);
  uint64_t v469 = v56;
  uint64_t v119 = v56;
  uint64_t v120 = v450;
  sub_1DE8CD950((uint64_t)&v471, v119, v450, (uint64_t)v480, v456, (uint64_t)v483, (uint64_t)v477, a20, v459, *(uint64_t *)&v460);
  double v452 = v121;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v471);
  uint64_t v122 = *v467;
  uint64_t v123 = v467[1];
  double v124 = sub_1DE8C751C(*v467, v123, *(uint64_t *)&v455, v120);
  char v125 = *(unsigned char *)(v49 + 59);
  sub_1DE8CEAE8((uint64_t)v465, (uint64_t)v480);
  if ((v125 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v480);
    uint64_t v130 = *(void *)(v49 + *(int *)(*(void *)&v117 + 68));
LABEL_74:
    char v137 = 0;
    goto LABEL_75;
  }
  uint64_t v126 = v481;
  uint64_t v127 = v482;
  __swift_project_boxed_opaque_existential_1(v480, v481);
  uint64_t v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 64))(v126, v127);
  LOBYTE(v126) = sub_1DE83C5AC(v122, v123, v128);
  swift_bridgeObjectRelease();
  sub_1DE8CEAE8((uint64_t)v480, (uint64_t)v483);
  if (v126)
  {
    char v129 = 1;
  }
  else
  {
    uint64_t v131 = v483[3];
    uint64_t v132 = v483[4];
    __swift_project_boxed_opaque_existential_1(v483, v483[3]);
    (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(v132 + 48))(v477, v131, v132);
    int v133 = v477[0];
    sub_1DE8CEAE8((uint64_t)v483, (uint64_t)v477);
    if (v133 == 1)
    {
      char v129 = 0;
    }
    else
    {
      uint64_t v134 = *(void *)&v477[24];
      uint64_t v135 = *(void *)&v477[32];
      __swift_project_boxed_opaque_existential_1(v477, *(uint64_t *)&v477[24]);
      uint64_t v136 = (*(uint64_t (**)(uint64_t, uint64_t))(v135 + 56))(v134, v135);
      char v129 = sub_1DE83C5AC(v122, v123, v136);
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v477);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v483);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v480);
  uint64_t v130 = *(void *)(v49 + *(int *)(*(void *)&v458 + 68));
  if ((v129 & 1) == 0) {
    goto LABEL_74;
  }
  char v137 = 1;
LABEL_75:
  double v461 = *(double *)&v123;
  if (*(void *)(v130 + 16) && (unint64_t v138 = sub_1DE822044(v137), (v139 & 1) != 0))
  {
    uint64_t v140 = v122;
    unint64_t v450 = *(void *)(*(void *)(v130 + 56) + 8 * v138);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v140 = v122;
    unint64_t v450 = sub_1DE85CEA4(MEMORY[0x1E4FBC860]);
  }
  double v433 = v52;
  double v437 = v51;
  LODWORD(v447) = a25;
  char v479 = v137;
  uint64_t v141 = *(uint64_t *)(v49 + 8);
  uint64_t v142 = *(void *)(v49 + 16);
  uint64_t v143 = *v467;
  uint64_t v144 = v467[1];
  memcpy(v483, v484, 0x3EBuLL);
  int v145 = *(unsigned __int8 *)(v49 + 58);
  uint64_t v468 = a24;
  v426 = v58;
  uint64_t v466 = v140;
  double v448 = *(double *)&v143;
  uint64_t v449 = v141;
  double v146 = *((double *)&v53 + 1);
  if (v145 == 2)
  {
    double v147 = *(double *)&v53;
    uint64_t v148 = v454;
    sub_1DE83603C(v49, v454);
LABEL_82:
    LODWORD(v446) = 0;
    goto LABEL_84;
  }
  uint64_t v148 = v454;
  sub_1DE83603C(v49, v454);
  double v147 = *(double *)&v53;
  if ((v145 & 1) == 0) {
    goto LABEL_82;
  }
  LODWORD(v446) = *(unsigned __int8 *)(v148 + *(int *)(*(void *)&v458 + 100)) ^ 1;
LABEL_84:
  swift_bridgeObjectRetain();
  uint64_t v149 = v144;
  swift_bridgeObjectRetain();
  sub_1DE8360A0(v148);
  uint64_t v150 = *(int *)(*(void *)&v458 + 84);
  *(void *)&double v434 = *(int *)(*(void *)&v458 + 80);
  char v151 = *(unsigned char *)(v49 + *(void *)&v434);
  uint64_t v152 = v142;
  char v153 = *(unsigned char *)(v49 + v150);
  uint64_t v154 = v49;
  char v155 = *(unsigned char *)(v49 + *(int *)(*(void *)&v458 + 96));
  uint64_t v412 = *(int *)(*(void *)&v458 + 92);
  uint64_t v156 = sub_1DE8C77D8(*(void *)(v49 + v412));
  _s14CohortProviderCMa();
  swift_allocObject();
  uint64_t v157 = swift_bridgeObjectRetain();
  uint64_t v158 = sub_1DE81E33C(v157, &v479, v449, v152, *(uint64_t *)&v448, v149, v483, LOBYTE(v446) & 1, v151, v153, v155, v156, LOBYTE(v447) & 1);
  long long v474 = v484[59];
  long long v475 = v484[60];
  v476[0] = v484[61];
  *(_OWORD *)((char *)v476 + 11) = *(_OWORD *)((char *)&v484[61] + 11);
  long long v472 = v484[57];
  long long v473 = v484[58];
  *(_OWORD *)&v477[40] = v484[59];
  *(_OWORD *)&v477[56] = v484[60];
  *(_OWORD *)&v477[72] = v484[61];
  *(_OWORD *)&v477[83] = *(_OWORD *)((char *)&v484[61] + 11);
  long double v159 = *((double *)&v484[47] + 1);
  *(_OWORD *)&v477[8] = v484[57];
  double v160 = *((double *)&v484[56] + 1);
  *(void *)v477 = *((void *)&v484[56] + 1);
  *(_OWORD *)&v477[24] = v484[58];
  uint64_t v161 = v468;
  uint64_t v162 = v457;
  int v163 = v465;
  *(double *)&uint64_t v454 = sub_1DE8CDAF4(v158, v124, *((long double *)&v484[47] + 1), v468, v457, (uint64_t)v465, (uint64_t)v478, (double *)v477);
  double v471 = v160;
  long double v425 = v159;
  *(double *)&uint64_t v449 = sub_1DE8CDAF4(v158, v124, v159, v161, v162, (uint64_t)v163, (uint64_t)v477, &v471);
  if (*(unsigned char *)(v154 + 59)) {
    int v164 = (double *)&v484[47];
  }
  else {
    int v164 = (double *)&v484[45] + 1;
  }
  double v165 = *v164;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int v167 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v168 = swift_checkMetadataState();
  unint64_t v169 = v167(v168, AssociatedConformanceWitness);
  if (*((double *)&v484[46] + 1) > 0.0 && *(double *)&v484[46] > 0.0)
  {
    double v170 = a5;
    double v171 = v50;
    double v172 = v165;
    double v173 = *((double *)&v484[46] + 1) + -1.0;
    long double v174 = v173 * exp2(-(double)v169 / *(double *)&v484[46]);
    double v175 = v172;
    double v50 = v171;
    a5 = v170;
    double v165 = v175 * (v174 + 1.0);
  }
  uint64_t v176 = v465;
  uint64_t v177 = v465[3];
  uint64_t v178 = v465[4];
  __swift_project_boxed_opaque_existential_1(v465, v177);
  uint64_t v179 = (*(uint64_t (**)(uint64_t, uint64_t))(v178 + 8))(v177, v178);
  char v180 = sub_1DE83C5AC(v466, *(uint64_t *)&v461, v179);
  swift_bridgeObjectRelease();
  double v181 = *((double *)&v484[19] + 1);
  if ((v180 & 1) == 0) {
    double v181 = 0.0;
  }
  double v447 = v181;
  uint64_t v182 = v176[3];
  uint64_t v183 = v176[4];
  __swift_project_boxed_opaque_existential_1(v176, v182);
  uint64_t v184 = *(uint64_t (**)(uint64_t, uint64_t))(v183 + 8);
  uint64_t v185 = *(void *)&v455;
  swift_bridgeObjectRetain();
  uint64_t v186 = v184(v182, v183);
  uint64_t v187 = sub_1DE8CADC8(v186, v185);
  swift_bridgeObjectRelease();
  uint64_t v188 = *(void *)(v187 + 16);
  swift_release();
  uint64_t v424 = v158;
  if (v188)
  {
    uint64_t v189 = *(void *)&v443;
    if (v188 == 2)
    {
      double v446 = *(double *)&v484[52];
    }
    else
    {
      if (v188 == 1) {
        double v190 = *(double *)&v484[51];
      }
      else {
        double v190 = *((double *)&v484[51] + 1);
      }
      double v446 = v190;
    }
  }
  else
  {
    double v446 = *((double *)&v484[52] + 1);
    uint64_t v189 = *(void *)&v443;
  }
  uint64_t v191 = v465;
  uint64_t v192 = v465[3];
  uint64_t v193 = v465[4];
  __swift_project_boxed_opaque_existential_1(v465, v192);
  uint64_t v194 = (*(uint64_t (**)(uint64_t, uint64_t))(v193 + 16))(v192, v193);
  uint64_t v195 = sub_1DE8CADC8(v194, *(uint64_t *)&v455);
  swift_bridgeObjectRelease();
  uint64_t v196 = *(void *)(v195 + 16);
  swift_release();
  sub_1DE8CEAE8((uint64_t)v191, (uint64_t)&v471);
  if (v180)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v471);
  }
  else
  {
    uint64_t v198 = *((void *)&v473 + 1);
    uint64_t v197 = v473;
    __swift_project_boxed_opaque_existential_1(&v471, v473);
    uint64_t v199 = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 16))(v197, v198);
    LOBYTE(v197) = sub_1DE83C5AC(v466, *(uint64_t *)&v461, v199);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v471);
    v196 += v197 & 1;
  }
  uint64_t v200 = *(int **)&v458;
  uint64_t v201 = v445;
  uint64_t v202 = a26;
  if (v196)
  {
    if (v196 == 2)
    {
      double v203 = *(double *)&v484[3];
    }
    else if (v196 == 1)
    {
      double v203 = *(double *)&v484[2];
    }
    else
    {
      double v203 = *((double *)&v484[2] + 1);
    }
  }
  else
  {
    double v203 = *((double *)&v484[3] + 1);
  }
  *(double *)&uint64_t v445 = v203;
  double v204 = v453;
  uint64_t v205 = v444;
  int v206 = a28 & 1;
  uint64_t v436 = a26;
  LODWORD(v444) = v206;
  double v207 = *(float *)&a26;
  if (*(double *)&v449 <= 0.0)
  {
    if ((a26 & 0x100000000) != 0) {
      double v207 = 0.0;
    }
    double v429 = v207;
  }
  else
  {
    double v208 = v165;
    if ((a26 & 0x100000000) != 0) {
      double v209 = 0.0;
    }
    else {
      double v209 = *(float *)&a26;
    }
    long double v210 = pow(*(double *)&v454 / *(double *)&v449, *(long double *)&v484[1]);
    int v206 = v444;
    uint64_t v202 = v436;
    double v429 = v209 * v210;
    double v165 = v208;
  }
  double v443 = *(double *)&a27;
  if ((v202 & 0x100000000) != 0) {
    double v211 = 0.0;
  }
  else {
    double v211 = *((double *)v484 + 1);
  }
  double v458 = 0.0;
  if (v206) {
    double v212 = 0.0;
  }
  else {
    double v212 = *(double *)&v484[53];
  }
  double v442 = *(double *)&v484[4];
  double v441 = *(double *)&v484[49];
  double v440 = *((double *)&v484[48] + 1);
  double v439 = *((double *)&v484[1] + 1);
  double v213 = *((double *)&v484[49] + 1)
       + v212
       + v211
       + v165
       + *(double *)&v484[4]
       + *(double *)&v484[49]
       + *((double *)&v484[48] + 1)
       + *((double *)&v484[1] + 1);
  if (v213 > 0.0)
  {
    double v214 = *(double *)(v464 + v200[26]);
    double v215 = *(double *)&v484[50] * v214;
    BOOL v216 = v214 <= 0.0;
    double v217 = 0.0;
    double v218 = 1.0;
    if (v216) {
      double v218 = 0.0;
    }
    double v219 = v215 + *((double *)&v484[50] + 1) * v218;
    if (!v206) {
      double v217 = v443;
    }
    double v458 = (v217 * *(double *)&v484[53]
          + v429 * *((double *)v484 + 1)
          + *(double *)&v454 * v165
          + v452 * v442
          + v446 * v441
          + v447 * v440
          + *(double *)&v445 * v439
          + *((double *)&v484[49] + 1) * v219)
         / v213;
  }
  sub_1DE833E78(v464 + v200[13], v201);
  (*(void (**)(uint64_t, uint64_t, double))(v205 + 16))(v189, a19, COERCE_DOUBLE(*(void *)&v204));
  int v220 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v205 + 48))(v201, 1, COERCE_DOUBLE(*(void *)&v204));
  double v448 = v165;
  if (v220 == 1)
  {
    uint64_t v221 = v189;
    double v222 = v438;
    (*(void (**)(double, uint64_t, double))(v205 + 32))(COERCE_DOUBLE(*(void *)&v438), v221, COERCE_DOUBLE(*(void *)&v204));
    sub_1DE8CEA74(v201, &qword_1EBEA9C90);
  }
  else
  {
    (*(void (**)(uint64_t, double))(v205 + 8))(v189, COERCE_DOUBLE(*(void *)&v204));
    double v222 = v438;
    (*(void (**)(double, uint64_t, double))(v205 + 32))(COERCE_DOUBLE(*(void *)&v438), v201, COERCE_DOUBLE(*(void *)&v204));
  }
  sub_1DE8E1310();
  double v428 = v223;
  (*(void (**)(double, double))(v205 + 8))(COERCE_DOUBLE(*(void *)&v222), COERCE_DOUBLE(*(void *)&v204));
  char v224 = v484[25];
  uint64_t v422 = v200[18];
  uint64_t v225 = *(void *)(v464 + v422);
  swift_allocObject();
  uint64_t v226 = sub_1DE81E2D0(v225);
  *(_OWORD *)&v477[64] = v484[17];
  *(_OWORD *)&v477[80] = v484[18];
  *(_DWORD *)&v477[95] = *(_DWORD *)((char *)&v484[18] + 15);
  *(_OWORD *)v477 = v484[13];
  *(_OWORD *)&v477[16] = v484[14];
  *(_OWORD *)&v477[32] = v484[15];
  *(_OWORD *)&v477[48] = v484[16];
  long double v227 = *(double *)&v484[5];
  swift_bridgeObjectRetain();
  double v228 = sub_1DE8CDAF4(v226, v124, v227, v468, v457, (uint64_t)v465, (uint64_t)v478, (double *)v477);
  swift_release();
  double v438 = 1.0;
  if (v224) {
    double v438 = sub_1DE8C6C80(v463, v457, v468, (uint64_t)&v496, v160);
  }
  double v435 = sub_1DE8C7044(v463);
  uint64_t v229 = v465[3];
  uint64_t v230 = v465[4];
  __swift_project_boxed_opaque_existential_1(v465, v229);
  uint64_t v231 = (*(uint64_t (**)(uint64_t, uint64_t))(v230 + 56))(v229, v230);
  LOBYTE(v229) = sub_1DE83C5AC(v466, *(uint64_t *)&v461, v231);
  swift_bridgeObjectRelease();
  double v232 = 1.0;
  double v233 = 1.0;
  double v461 = 1.0;
  if (v229)
  {
    if (*(unsigned char *)(v464 + 59)) {
      double v232 = 1.0;
    }
    else {
      double v232 = v437;
    }
    if (*(unsigned char *)(v464 + 59)) {
      double v233 = v433;
    }
    double v461 = v233;
  }
  double v437 = v232;
  double v423 = v228;
  double v234 = v451 * v228;
  double v235 = 1.0;
  if (!*(unsigned char *)(v464 + *(void *)&v434)) {
    double v146 = 1.0;
  }
  if (*(unsigned char *)(v464 + v200[22])) {
    double v236 = v147;
  }
  else {
    double v236 = 1.0;
  }
  double v455 = v236;
  if (*(unsigned char *)(v464 + v200[19])) {
    double v237 = v50;
  }
  else {
    double v237 = 1.0;
  }
  double v453 = v237;
  uint64_t v238 = v465[3];
  uint64_t v239 = v465[4];
  __swift_project_boxed_opaque_existential_1(v465, v238);
  uint64_t v240 = *(uint64_t (**)(uint64_t, uint64_t))(v239 + 104);
  uint64_t v241 = v463;
  swift_bridgeObjectRetain();
  uint64_t v242 = v240(v238, v239);
  uint64_t v243 = sub_1DE8CADC8(v242, v241);
  swift_bridgeObjectRelease();
  uint64_t v244 = *(void *)(v243 + 16);
  swift_release();
  if (v244)
  {
    if (v461 >= 1.0) {
      double v245 = v461;
    }
    else {
      double v245 = 1.0;
    }
    double v246 = fmin(v461, 1.0);
    double v247 = v437;
    double v235 = *(double *)&v484[44];
    if (v437 < 1.0)
    {
LABEL_156:
      double v246 = v247 * v246;
      goto LABEL_162;
    }
  }
  else
  {
    if (v461 >= 1.0) {
      double v245 = v461;
    }
    else {
      double v245 = 1.0;
    }
    double v246 = fmin(v461, 1.0);
    double v247 = v437;
    if (v437 < 1.0) {
      goto LABEL_156;
    }
  }
  double v245 = v247 * v245;
LABEL_162:
  uint64_t v248 = v464;
  double v249 = v234 + 1.0;
  if (v146 >= 1.0) {
    double v250 = v146;
  }
  else {
    double v250 = 1.0;
  }
  double v251 = v250 * v245;
  double v252 = v455;
  if (v455 < 1.0) {
    double v252 = 1.0;
  }
  double v253 = v252 * v251;
  double v254 = v453;
  if (v453 < 1.0) {
    double v254 = 1.0;
  }
  double v255 = v254 * v253;
  if (v235 >= 1.0) {
    double v256 = v235;
  }
  else {
    double v256 = 1.0;
  }
  long double v257 = v255 * v256;
  double v258 = sub_1DE8C7ACC(v224 & 1, (long double *)v484, v458);
  long double v418 = v257;
  double v420 = v258;
  double v259 = pow(v257, v258);
  char v260 = *(unsigned char *)(v248 + 58);
  double v434 = v146;
  if ((v260 & 1) == 0)
  {
    double v261 = v452;
    double v262 = 1.0;
    uint64_t v263 = MEMORY[0x1E4FBC868];
    if ((v224 & 1) == 0) {
      goto LABEL_178;
    }
    goto LABEL_177;
  }
  double v261 = v452;
  double v262 = 1.0;
  uint64_t v263 = MEMORY[0x1E4FBC868];
  if (v224)
  {
    double v262 = *(double *)v484;
LABEL_177:
    double v262 = v249 * v438 * v435 * v259 * v262 * a5;
  }
LABEL_178:
  double v417 = v262;
  double v419 = v259;
  double v421 = v249;
  double v427 = a5;
  char v264 = BYTE8(v484[9]);
  v478[0] = v263;
  *(double *)&uint64_t v456 = sub_1DE8C7BF4(BYTE8(v484[9]) & 1, (uint64_t)v484, v478, v469, a22);
  swift_bridgeObjectRelease();
  long double v265 = *((double *)&v484[25] + 1);
  long long v266 = v465;
  uint64_t v267 = v465[3];
  uint64_t v268 = v465[4];
  __swift_project_boxed_opaque_existential_1(v465, v267);
  uint64_t v269 = *(uint64_t (**)(uint64_t, uint64_t))(v268 + 24);
  uint64_t v270 = v463;
  swift_bridgeObjectRetain();
  uint64_t v271 = v269(v267, v268);
  uint64_t v272 = sub_1DE8CADC8(v271, v270);
  swift_bridgeObjectRelease();
  uint64_t v273 = *(void *)(v272 + 16);
  swift_release();
  double v274 = pow(v265, (double)v273);
  uint64_t v275 = v464;
  uint64_t v276 = *(void *)(v464 + 8);
  uint64_t v277 = *(void *)(v464 + 16);
  uint64_t v278 = v266[3];
  uint64_t v279 = v266[4];
  __swift_project_boxed_opaque_existential_1(v266, v278);
  uint64_t v280 = (*(uint64_t (**)(uint64_t, uint64_t))(v279 + 88))(v278, v279);
  LOBYTE(v278) = sub_1DE83C5AC(v276, v277, v280);
  swift_bridgeObjectRelease();
  double v281 = *(double *)&v484[45];
  if ((v278 & 1) == 0) {
    double v281 = 0.0;
  }
  double v433 = v281;
  uint64_t v282 = v266[3];
  uint64_t v283 = v266[4];
  __swift_project_boxed_opaque_existential_1(v266, v282);
  uint64_t v284 = (*(uint64_t (**)(uint64_t, uint64_t))(v283 + 72))(v282, v283);
  LOBYTE(v282) = sub_1DE83C5AC(v276, v277, v284);
  swift_bridgeObjectRelease();
  double v285 = *(double *)&v484[43];
  if ((v282 & 1) == 0) {
    double v285 = 0.0;
  }
  double v432 = v285;
  uint64_t v286 = v266[3];
  uint64_t v287 = v266[4];
  __swift_project_boxed_opaque_existential_1(v266, v286);
  uint64_t v288 = (*(uint64_t (**)(uint64_t, uint64_t))(v287 + 80))(v286, v287);
  char v289 = sub_1DE83C5AC(v276, v277, v288);
  swift_bridgeObjectRelease();
  if (v289) {
    double v290 = *((double *)&v484[24] + 1);
  }
  else {
    double v290 = 0.0;
  }
  double v291 = *(double *)&v484[48];
  if (*(void *)(*(void *)(v275 + *(void *)&v430) + 16)) {
    double v291 = 0.0;
  }
  double v430 = v291;
  double v431 = v290;
  double v292 = 1.0;
  double v293 = 1.0;
  if (v264)
  {
    double v294 = fmin(v453, 1.0) * (fmin(v455, 1.0) * (fmin(v434, 1.0) * v246)) * fmin(v235, 1.0);
    long double v295 = *((double *)&v484[42] + 1);
    sub_1DE8C8F0C(v414, v413, *(void *)(v464 + v412), *v467, v467[1]);
    double v293 = pow(v296, v295);
    double v292 = v294 * (*(double *)&v456 * v274) * (1.0 - v433) * (1.0 - v432) * (1.0 - v431) * (1.0 - v430) * v293;
  }
  double v297 = v428 * 1000.0;
  uint64_t v298 = v468;
  double v416 = v292;
  if ((BYTE8(v484[44]) & 1) != 0 && (*(unsigned char *)(v464 + 56) & 1) == 0) {
    v299 = (double *)(v464 + 48);
  }
  else {
    v299 = (double *)(v464 + 40);
  }
  uint64_t v300 = v463;
  double v301 = *v299;
  double v302 = sub_1DE8C7D18(v464, (uint64_t)v484, v463);
  double v460 = 1.0;
  double v303 = v448;
  if (v297 <= 0.0)
  {
    double v462 = 1.0;
  }
  else
  {
    double v462 = 1.0;
    if (v301 > 0.0)
    {
      double v304 = v297 / v301;
      double v462 = exp2(-(v302 * v304));
      double v460 = exp2(-(*(double *)&v484[24] * v304));
    }
  }
  uint64_t v459 = a30;
  v305 = a29;
  double v306 = 0.0;
  if (v213 > 0.0)
  {
    double v307 = v443;
    if (v444) {
      double v307 = 0.0;
    }
    double v306 = (*(double *)&v454 * (v303 * v460)
          + v462
          * (v261 * v442
           + v446 * v441
           + v447 * v440
           + *(double *)&v445 * v439
           + v429 * *((double *)v484 + 1)
           + v307 * *(double *)&v484[53]))
         / v213;
  }
  uint64_t v308 = 0;
  uint64_t v309 = *(void *)(v300 + 56);
  v465 = (void *)(v300 + 56);
  uint64_t v310 = 1 << *(unsigned char *)(v300 + 32);
  uint64_t v311 = -1;
  if (v310 < 64) {
    uint64_t v311 = ~(-1 << v310);
  }
  unint64_t v312 = v311 & v309;
  uint64_t v466 = (unint64_t)(v310 + 63) >> 6;
  v313 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v469 = MEMORY[0x1E4FBC868];
  v467 = a29;
  if ((v311 & v309) == 0) {
    goto LABEL_205;
  }
LABEL_204:
  unint64_t v314 = __clz(__rbit64(v312));
  v312 &= v312 - 1;
  for (unint64_t i = v314 | (v308 << 6); ; unint64_t i = __clz(__rbit64(v317)) + (v308 << 6))
  {
    v319 = (uint64_t *)(*(void *)(v300 + 48) + 16 * i);
    uint64_t v321 = *v319;
    uint64_t v320 = v319[1];
    if (v305)
    {
      uint64_t v322 = v305[2];
      swift_bridgeObjectRetain_n();
      if (v322)
      {
        unint64_t v323 = sub_1DE821D84(v321, v320);
        if (v324)
        {
          uint64_t v325 = *(void *)(v305[7] + 8 * v323);
          char v326 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)v477 = v313;
          unint64_t v328 = sub_1DE821D84(v321, v320);
          uint64_t v329 = v313[2];
          BOOL v330 = (v327 & 1) == 0;
          uint64_t v331 = v329 + v330;
          if (__OFADD__(v329, v330)) {
            goto LABEL_289;
          }
          char v332 = v327;
          if (v313[3] < v331)
          {
            sub_1DE826324(v331, v326);
            unint64_t v333 = sub_1DE821D84(v321, v320);
            if ((v332 & 1) != (v334 & 1)) {
              goto LABEL_296;
            }
            unint64_t v328 = v333;
            v313 = *(void **)v477;
            if (v332) {
              goto LABEL_249;
            }
            goto LABEL_244;
          }
          if (v326)
          {
            v313 = *(void **)v477;
            if ((v327 & 1) == 0) {
              goto LABEL_244;
            }
          }
          else
          {
            sub_1DE823068();
            v313 = *(void **)v477;
            if ((v332 & 1) == 0)
            {
LABEL_244:
              v313[(v328 >> 6) + 8] |= 1 << v328;
              v352 = (uint64_t *)(v313[6] + 16 * v328);
              uint64_t *v352 = v321;
              v352[1] = v320;
              *(void *)(v313[7] + 8 * v328) = v325;
              uint64_t v353 = v313[2];
              BOOL v85 = __OFADD__(v353, 1);
              uint64_t v354 = v353 + 1;
              if (v85) {
                goto LABEL_291;
              }
LABEL_254:
              v313[2] = v354;
              swift_bridgeObjectRetain();
              goto LABEL_255;
            }
          }
LABEL_249:
          *(void *)(v313[7] + 8 * v328) = v325;
LABEL_255:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v300 = v463;
          goto LABEL_256;
        }
      }
    }
    else
    {
      uint64_t v335 = *(void *)(v298 + 16);
      swift_bridgeObjectRetain();
      if (v335)
      {
        swift_bridgeObjectRetain();
        unint64_t v336 = sub_1DE821D84(v321, v320);
        if (v337)
        {
          uint64_t v338 = *(void *)(v298 + 56) + 24 * v336;
          uint64_t v325 = *(void *)(v338 + 8);
          char v339 = *(unsigned char *)(v338 + 16);
          swift_bridgeObjectRelease();
          if ((v339 & 1) == 0)
          {
            swift_bridgeObjectRetain();
            char v340 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)v477 = v313;
            unint64_t v328 = sub_1DE821D84(v321, v320);
            uint64_t v342 = v313[2];
            BOOL v343 = (v341 & 1) == 0;
            uint64_t v344 = v342 + v343;
            if (__OFADD__(v342, v343)) {
              goto LABEL_292;
            }
            char v345 = v341;
            if (v313[3] >= v344)
            {
              if (v340)
              {
                v313 = *(void **)v477;
                if (v341) {
                  goto LABEL_249;
                }
              }
              else
              {
                sub_1DE823068();
                v313 = *(void **)v477;
                if (v345) {
                  goto LABEL_249;
                }
              }
            }
            else
            {
              sub_1DE826324(v344, v340);
              unint64_t v346 = sub_1DE821D84(v321, v320);
              if ((v345 & 1) != (v347 & 1)) {
                goto LABEL_296;
              }
              unint64_t v328 = v346;
              v313 = *(void **)v477;
              if (v345) {
                goto LABEL_249;
              }
            }
            v313[(v328 >> 6) + 8] |= 1 << v328;
            v355 = (uint64_t *)(v313[6] + 16 * v328);
            uint64_t *v355 = v321;
            v355[1] = v320;
            *(void *)(v313[7] + 8 * v328) = v325;
            uint64_t v356 = v313[2];
            BOOL v85 = __OFADD__(v356, 1);
            uint64_t v354 = v356 + 1;
            if (v85) {
              goto LABEL_293;
            }
            goto LABEL_254;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    unint64_t v348 = sub_1DE821D84(v321, v320);
    char v350 = v349;
    swift_bridgeObjectRelease();
    if (v350)
    {
      char v351 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)v477 = v313;
      if ((v351 & 1) == 0)
      {
        sub_1DE823068();
        v313 = *(void **)v477;
      }
      swift_bridgeObjectRelease();
      sub_1DE8C9794(v348, (uint64_t)v313);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_256:
    uint64_t v298 = v468;
    if (!*(void *)(v468 + 16)) {
      goto LABEL_259;
    }
    swift_bridgeObjectRetain();
    unint64_t v357 = sub_1DE821D84(v321, v320);
    if ((v358 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_259:
      swift_bridgeObjectRetain();
      unint64_t v359 = sub_1DE821D84(v321, v320);
      char v361 = v360;
      swift_bridgeObjectRelease();
      if (v361)
      {
        uint64_t v362 = v469;
        char v363 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)v477 = v362;
        if ((v363 & 1) == 0)
        {
          sub_1DE823068();
          uint64_t v362 = *(void *)v477;
        }
        swift_bridgeObjectRelease();
        uint64_t v469 = v362;
        sub_1DE8C9794(v359, v362);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v305 = v467;
      if (v312) {
        goto LABEL_204;
      }
      goto LABEL_205;
    }
    uint64_t v364 = *(void *)(*(void *)(v298 + 56) + 24 * v357);
    swift_bridgeObjectRelease();
    uint64_t v365 = v469;
    char v366 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)v477 = v365;
    unint64_t v368 = sub_1DE821D84(v321, v320);
    uint64_t v369 = *(void *)(v365 + 16);
    BOOL v370 = (v367 & 1) == 0;
    uint64_t v371 = v369 + v370;
    if (__OFADD__(v369, v370)) {
      goto LABEL_294;
    }
    char v372 = v367;
    if (*(void *)(v365 + 24) >= v371)
    {
      if ((v366 & 1) == 0) {
        sub_1DE823068();
      }
    }
    else
    {
      sub_1DE826324(v371, v366);
      unint64_t v373 = sub_1DE821D84(v321, v320);
      if ((v372 & 1) != (v374 & 1)) {
        goto LABEL_296;
      }
      unint64_t v368 = v373;
    }
    v305 = v467;
    v375 = *(void **)v477;
    uint64_t v469 = *(void *)v477;
    if (v372)
    {
      *(void *)(*(void *)(*(void *)v477 + 56) + 8 * v368) = v364;
    }
    else
    {
      *(void *)(*(void *)v477 + 8 * (v368 >> 6) + 64) |= 1 << v368;
      v376 = (uint64_t *)(v375[6] + 16 * v368);
      uint64_t *v376 = v321;
      v376[1] = v320;
      *(void *)(v375[7] + 8 * v368) = v364;
      uint64_t v377 = v375[2];
      BOOL v85 = __OFADD__(v377, 1);
      uint64_t v378 = v377 + 1;
      if (v85) {
        goto LABEL_295;
      }
      v375[2] = v378;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v300 = v463;
    uint64_t v298 = v468;
    if (v312) {
      goto LABEL_204;
    }
LABEL_205:
    uint64_t v316 = v308 + 1;
    if (__OFADD__(v308, 1)) {
      goto LABEL_286;
    }
    if (v316 >= v466) {
      break;
    }
    unint64_t v317 = v465[v316];
    ++v308;
    if (!v317)
    {
      uint64_t v308 = v316 + 1;
      if (v316 + 1 >= v466) {
        break;
      }
      unint64_t v317 = v465[v308];
      if (!v317)
      {
        uint64_t v308 = v316 + 2;
        if (v316 + 2 >= v466) {
          break;
        }
        unint64_t v317 = v465[v308];
        if (!v317)
        {
          uint64_t v318 = v316 + 3;
          if (v318 >= v466) {
            break;
          }
          unint64_t v317 = v465[v318];
          if (!v317)
          {
            while (1)
            {
              uint64_t v308 = v318 + 1;
              if (__OFADD__(v318, 1)) {
                goto LABEL_290;
              }
              if (v308 >= v466) {
                goto LABEL_277;
              }
              unint64_t v317 = v465[v308];
              ++v318;
              if (v317) {
                goto LABEL_218;
              }
            }
          }
          uint64_t v308 = v318;
        }
      }
    }
LABEL_218:
    unint64_t v312 = (v317 - 1) & v317;
  }
LABEL_277:
  swift_release();
  swift_release();
  uint64_t v379 = *(void *)(v464 + v422);
  uint64_t v468 = v478[0];
  uint64_t v380 = v459;
  double v415 = v274;
  double v428 = v302;
  if (v459)
  {
    uint64_t v381 = *(void *)(v459 + 352);
    char v382 = *(unsigned char *)(v459 + 360);
    swift_beginAccess();
    uint64_t v383 = *(void *)(v380 + 304);
  }
  else
  {
    uint64_t v383 = 0;
    uint64_t v381 = 0;
    char v382 = 1;
  }
  uint64_t v384 = (uint64_t)v426;
  char v385 = v380 == 0;
  double v386 = v458;
  double v388 = v416;
  double v387 = v417;
  double v389 = v416 * (v417 * v306);
  uint64_t v390 = v436;
  uint64_t v391 = v436;
  uint64_t v392 = *((void *)&v484[0] + 1);
  uint64_t v393 = *(void *)&v484[53];
  _s20HeadlineScoreProfileCMa();
  swift_allocObject();
  char v470 = 0;
  if ((v390 & 0x100000000) != 0) {
    uint64_t v394 = 0;
  }
  else {
    uint64_t v394 = v391;
  }
  *((double *)&v411 + 1) = v387;
  *(void *)&long long v411 = v393;
  *((double *)&v410 + 1) = v440;
  *(double *)&long long v410 = v441;
  *(void *)&long long v409 = v392;
  *((double *)&v409 + 1) = v442;
  *((double *)&v408 + 1) = v439;
  *(double *)&long long v408 = v427;
  *((double *)&v407 + 1) = v462;
  *(double *)&long long v407 = v446;
  *((double *)&v406 + 1) = v447;
  *(long double *)&long long v406 = v418;
  *((double *)&v405 + 1) = v430;
  *(double *)&long long v405 = v448;
  *((void *)&v404 + 1) = v449;
  *(void *)&long long v404 = v454;
  *((double *)&v403 + 1) = v433;
  *(double *)&long long v403 = v431;
  *(double *)&long long v402 = v386;
  *((double *)&v402 + 1) = v432;
  *(double *)&long long v401 = v386 * v387 * v388;
  *((double *)&v401 + 1) = v435;
  *((double *)&v400 + 1) = v415;
  *(double *)&long long v400 = v420;
  *((double *)&v399 + 1) = v438;
  *(double *)&long long v399 = v428;
  *((double *)&v398 + 1) = v434;
  *(double *)&long long v398 = v455;
  *((long double *)&v397 + 1) = v425;
  *(double *)&long long v397 = v419;
  uint64_t v395 = sub_1DE8CF118(v450, v379, v457, v468, (uint64_t)v313, v469, v384, v394, v453, *(double *)&v445, v437, v461, v452, v451, v421, v423, v397, v398, v399,
           v400,
           v456,
           v401,
           v402,
           v403,
           v404,
           v405,
           v406,
           v407,
           *(uint64_t *)&v460,
           *(uint64_t *)&v389,
           *(uint64_t *)&v293,
           *(uint64_t *)&v443,
           v444,
           v408,
           v409,
           v410,
           v411,
           *(uint64_t *)&v388,
           v381,
           v382,
           v383,
           v385);
  swift_bridgeObjectRetain();
  return v395;
}

uint64_t sub_1DE8C5B18(uint64_t a1, double *a2)
{
  long double v3 = *a2;
  double v4 = a2[1];
  double v5 = a2[2];
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  long long v12 = (char *)MEMORY[0x1E4FBC870];
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      sub_1DE8E1B40();
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    if (v17 >= v10) {
      goto LABEL_25;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v17 + 1;
      if (v17 + 1 >= v10) {
        goto LABEL_25;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v11);
      if (!v18)
      {
        int64_t v11 = v17 + 2;
        if (v17 + 2 >= v10) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v11);
        if (!v18)
        {
          int64_t v11 = v17 + 3;
          if (v17 + 3 >= v10) {
            goto LABEL_25;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v11);
          if (!v18)
          {
            int64_t v11 = v17 + 4;
            if (v17 + 4 >= v10) {
              goto LABEL_25;
            }
            unint64_t v18 = *(void *)(v6 + 8 * v11);
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_5:
    double v15 = *(double *)(*(void *)(a1 + 56) + 8 * v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = v12;
    sub_1DE864884(isUniquelyReferenced_nonNull_native, v15);
    swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 5;
  if (v19 < v10)
  {
    unint64_t v18 = *(void *)(v6 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v11 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_44;
        }
        if (v11 >= v10) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v11);
        ++v19;
        if (v18) {
          goto LABEL_24;
        }
      }
    }
    int64_t v11 = v19;
    goto LABEL_24;
  }
LABEL_25:
  swift_release();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = (char *)sub_1DE82AEA4(v20);
  swift_bridgeObjectRelease();
  uint64_t v44 = v21;
  sub_1DE8C9B54(&v44);
  swift_bridgeObjectRelease();
  uint64_t v22 = v44;
  uint64_t v23 = *((void *)v44 + 2);
  if (v23)
  {
    swift_retain();
    uint64_t v24 = 0;
    uint64_t v25 = (char *)MEMORY[0x1E4FBC868];
    while (1)
    {
      double v26 = *(double *)&v22[8 * v24 + 32];
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v44 = v25;
      unint64_t v29 = sub_1DE821F78(v26);
      uint64_t v30 = *((void *)v25 + 2);
      BOOL v31 = (v28 & 1) == 0;
      uint64_t v32 = v30 + v31;
      if (__OFADD__(v30, v31)) {
        goto LABEL_42;
      }
      char v33 = v28;
      if (*((void *)v25 + 3) >= v32)
      {
        if ((v27 & 1) == 0) {
          sub_1DE82398C();
        }
      }
      else
      {
        sub_1DE82738C(v32, v27);
        unint64_t v34 = sub_1DE821F78(v26);
        if ((v33 & 1) != (v35 & 1)) {
          goto LABEL_45;
        }
        unint64_t v29 = v34;
      }
      double v36 = (double)v24;
      uint64_t v25 = v44;
      if (v33)
      {
        *(double *)(*((void *)v44 + 7) + 8 * v29) = v36;
      }
      else
      {
        *(void *)&v44[8 * (v29 >> 6) + 64] |= 1 << v29;
        uint64_t v37 = 8 * v29;
        *(double *)(*((void *)v25 + 6) + v37) = v26;
        *(double *)(*((void *)v25 + 7) + v37) = v36;
        uint64_t v38 = *((void *)v25 + 2);
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_43;
        }
        *((void *)v25 + 2) = v40;
      }
      ++v24;
      swift_bridgeObjectRelease();
      if (v23 == v24)
      {
        swift_release();
        goto LABEL_40;
      }
    }
  }
  uint64_t v25 = (char *)MEMORY[0x1E4FBC868];
LABEL_40:
  swift_release();
  double v41 = (double)(*((void *)v25 + 2) - 1);
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1DE8CC524(MEMORY[0x1E4FBC868], a1, (uint64_t)v25, v3, v4, v5, v41);
  swift_bridgeObjectRelease_n();
  return v42;
}

uint64_t sub_1DE8C5EA4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a3;
  v26[1] = *(void *)(a5 + 8);
  void v26[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1DE8E16E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  unint64_t v13 = (char *)v26 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v11, v15);
  int64_t v17 = (char *)v26 - v16;
  uint64_t v18 = *a2;
  uint64_t v19 = a2[1];
  v29[0] = 2831206;
  v29[1] = 0xE300000000000000;
  uint64_t v28 = v18;
  sub_1DE8E1490();
  MEMORY[0x1E01D3F40](v29, v27, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_1DE829BD8(v28, v19, isUniquelyReferenced_nonNull_native, 0.0);
    *a1 = v29[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, AssociatedTypeWitness);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
    swift_bridgeObjectRetain();
    double v24 = (double)(unint64_t)v23(AssociatedTypeWitness, AssociatedConformanceWitness);
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    v29[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_1DE829BD8(v28, v19, v25, v24);
    *a1 = v29[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, AssociatedTypeWitness);
  }
}

unint64_t sub_1DE8C61D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = *(_OWORD *)(a4 + 128);
  long long v7 = *(_OWORD *)(a4 + 160);
  long long v79 = *(_OWORD *)(a4 + 144);
  long long v80 = v7;
  long long v8 = *(_OWORD *)(a4 + 64);
  long long v9 = *(_OWORD *)(a4 + 96);
  long long v10 = *(_OWORD *)(a4 + 112);
  long long v75 = *(_OWORD *)(a4 + 80);
  long long v76 = v9;
  long long v77 = v10;
  long long v78 = v6;
  long long v11 = *(_OWORD *)(a4 + 16);
  v72[0] = *(_OWORD *)a4;
  v72[1] = v11;
  long long v12 = *(_OWORD *)(a4 + 48);
  v72[2] = *(_OWORD *)(a4 + 32);
  uint64_t v81 = *(void *)(a4 + 176);
  long long v73 = v12;
  long long v74 = v8;
  unint64_t v13 = (int *)type metadata accessor for ClassicArticleData();
  uint64_t v14 = *(void *)(a1 + v13[23]);
  uint64_t v68 = a1;
  uint64_t v15 = *(void *)(a1 + v13[16]);
  if (v73)
  {
    a1 = *(void *)(v15 + 16);
    if (a1)
    {
      uint64_t v64 = v13;
      uint64_t v66 = v15 + 32;
      uint64_t v69 = a3 + 56;
      swift_bridgeObjectRetain_n();
      uint64_t v17 = 0;
      uint64_t v16 = MEMORY[0x1E4FBC860];
      uint64_t v65 = a1;
      do
      {
        if (*(void *)(a3 + 16))
        {
          uint64_t v18 = (uint64_t *)(v66 + 16 * v17);
          uint64_t v20 = *v18;
          uint64_t v19 = v18[1];
          sub_1DE8E1BA0();
          swift_bridgeObjectRetain();
          sub_1DE8E1480();
          uint64_t v21 = sub_1DE8E1BD0();
          uint64_t v22 = -1 << *(unsigned char *)(a3 + 32);
          unint64_t v23 = v21 & ~v22;
          if ((*(void *)(v69 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
          {
            uint64_t v24 = v16;
            uint64_t v25 = *(void *)(a3 + 48);
            double v26 = (void *)(v25 + 16 * v23);
            BOOL v27 = *v26 == v20 && v26[1] == v19;
            if (v27 || (sub_1DE8E1AC0() & 1) != 0)
            {
LABEL_16:
              swift_bridgeObjectRetain();
              uint64_t v16 = v24;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v16 = (uint64_t)sub_1DE83A608(0, *(void *)(v24 + 16) + 1, 1, (char *)v24);
              }
              a1 = v65;
              unint64_t v29 = *(void *)(v16 + 16);
              unint64_t v28 = *(void *)(v16 + 24);
              if (v29 >= v28 >> 1) {
                uint64_t v16 = (uint64_t)sub_1DE83A608((char *)(v28 > 1), v29 + 1, 1, (char *)v16);
              }
              *(void *)(v16 + 16) = v29 + 1;
              uint64_t v30 = v16 + 16 * v29;
              *(void *)(v30 + 32) = v20;
              *(void *)(v30 + 40) = v19;
            }
            else
            {
              uint64_t v31 = ~v22;
              for (unint64_t i = v23 + 1; ; unint64_t i = v33 + 1)
              {
                uint64_t v33 = i & v31;
                if (((*(void *)(v69 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
                  break;
                }
                unint64_t v34 = (void *)(v25 + 16 * v33);
                BOOL v35 = *v34 == v20 && v34[1] == v19;
                if (v35 || (sub_1DE8E1AC0() & 1) != 0) {
                  goto LABEL_16;
                }
              }
              uint64_t v16 = v24;
              a1 = v65;
            }
          }
          swift_bridgeObjectRelease();
        }
        ++v17;
      }
      while (v17 != a1);
      swift_bridgeObjectRelease_n();
      unint64_t v13 = v64;
      if (v80)
      {
LABEL_32:
        uint64_t v37 = (uint64_t *)(v68 + v13[14]);
        a1 = *v37;
        unint64_t v13 = (int *)v37[1];
        swift_bridgeObjectRetain_n();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_76;
      }
    }
    else
    {
      uint64_t v16 = MEMORY[0x1E4FBC860];
      if (v80) {
        goto LABEL_32;
      }
    }
  }
  else
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    if (v80) {
      goto LABEL_32;
    }
  }
  uint64_t v36 = v16;
  while (2)
  {
    int64_t v41 = 0;
    uint64_t v16 = 0;
    uint64_t v42 = v14 + 64;
    uint64_t v43 = 1 << *(unsigned char *)(v14 + 32);
    uint64_t v44 = -1;
    if (v43 < 64) {
      uint64_t v44 = ~(-1 << v43);
    }
    unint64_t v45 = v44 & *(void *)(v14 + 64);
    int64_t v46 = (unint64_t)(v43 + 63) >> 6;
    double v47 = 1.0;
    if (v45)
    {
LABEL_39:
      unint64_t v48 = __clz(__rbit64(v45));
      v45 &= v45 - 1;
      unint64_t v49 = v48 | (v41 << 6);
      goto LABEL_40;
    }
    while (1)
    {
      int64_t v51 = v41 + 1;
      if (__OFADD__(v41, 1))
      {
        __break(1u);
        goto LABEL_75;
      }
      if (v51 >= v46) {
        goto LABEL_64;
      }
      unint64_t v52 = *(void *)(v42 + 8 * v51);
      ++v41;
      if (!v52)
      {
        int64_t v41 = v51 + 1;
        if (v51 + 1 >= v46) {
          goto LABEL_64;
        }
        unint64_t v52 = *(void *)(v42 + 8 * v41);
        if (!v52)
        {
          int64_t v41 = v51 + 2;
          if (v51 + 2 >= v46) {
            goto LABEL_64;
          }
          unint64_t v52 = *(void *)(v42 + 8 * v41);
          if (!v52)
          {
            int64_t v41 = v51 + 3;
            if (v51 + 3 >= v46) {
              goto LABEL_64;
            }
            unint64_t v52 = *(void *)(v42 + 8 * v41);
            if (!v52)
            {
              int64_t v41 = v51 + 4;
              if (v51 + 4 >= v46) {
                goto LABEL_64;
              }
              unint64_t v52 = *(void *)(v42 + 8 * v41);
              if (!v52) {
                break;
              }
            }
          }
        }
      }
LABEL_63:
      unint64_t v45 = (v52 - 1) & v52;
      unint64_t v49 = __clz(__rbit64(v52)) + (v41 << 6);
LABEL_40:
      uint64_t v50 = *(void *)(v14 + 56) + 80 * v49;
      uint64_t v16 = v16 | *(unsigned __int8 *)(v50 + 73);
      if (*(unsigned char *)(v50 + 40))
      {
        if (v45) {
          goto LABEL_39;
        }
      }
      else
      {
        if (*(double *)(v50 + 32) < v47) {
          double v47 = *(double *)(v50 + 32);
        }
        if (v45) {
          goto LABEL_39;
        }
      }
    }
    int64_t v53 = v51 + 5;
    if (v53 < v46)
    {
      unint64_t v52 = *(void *)(v42 + 8 * v53);
      if (!v52)
      {
        while (1)
        {
          int64_t v41 = v53 + 1;
          if (__OFADD__(v53, 1)) {
            break;
          }
          if (v41 >= v46) {
            goto LABEL_64;
          }
          unint64_t v52 = *(void *)(v42 + 8 * v41);
          ++v53;
          if (v52) {
            goto LABEL_63;
          }
        }
LABEL_75:
        __break(1u);
LABEL_76:
        uint64_t v16 = (uint64_t)sub_1DE83A608(0, *(void *)(v16 + 16) + 1, 1, (char *)v16);
LABEL_33:
        unint64_t v39 = *(void *)(v16 + 16);
        unint64_t v38 = *(void *)(v16 + 24);
        if (v39 >= v38 >> 1) {
          uint64_t v16 = (uint64_t)sub_1DE83A608((char *)(v38 > 1), v39 + 1, 1, (char *)v16);
        }
        *(void *)(v16 + 16) = v39 + 1;
        uint64_t v36 = v16;
        uint64_t v40 = v16 + 16 * v39;
        *(void *)(v40 + 32) = a1;
        *(void *)(v40 + 40) = v13;
        swift_bridgeObjectRelease();
        continue;
      }
      int64_t v41 = v53;
      goto LABEL_63;
    }
    break;
  }
LABEL_64:
  if (*(double *)&v79 >= v47)
  {
    swift_bridgeObjectRelease();
    uint64_t v61 = MEMORY[0x1E4FBC860];
    return sub_1DE85C98C(v61);
  }
  else
  {
    double v54 = *((double *)&v79 + 1);
    double v55 = *((double *)&v75 + 1);
    uint64_t v71 = MEMORY[0x1E4FBC868];
    uint64_t v56 = *(void *)(v36 + 16);
    if (v56)
    {
      unint64_t v57 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      int v58 = v72[0] & 1;
      do
      {
        uint64_t v59 = *v57;
        v70[0] = *(v57 - 1);
        v70[1] = v59;
        swift_bridgeObjectRetain();
        sub_1DE8C6798((uint64_t)&v71, v70, a2, v14, v68, (uint64_t)v72, v58, v16 & 1, v54, v55);
        v57 += 2;
        swift_bridgeObjectRelease();
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease_n();
      uint64_t v60 = v71;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v60 = MEMORY[0x1E4FBC868];
    }
    uint64_t v63 = sub_1DE8CB728(v60);
    swift_bridgeObjectRelease();
    return v63;
  }
}

uint64_t sub_1DE8C6798(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10)
{
  uint64_t v16 = (uint64_t *)result;
  uint64_t v18 = *a2;
  uint64_t v17 = a2[1];
  if (!*(void *)(a3 + 16))
  {
    double v21 = 0.0;
    if (!*(void *)(a4 + 16)) {
      return result;
    }
LABEL_7:
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1DE821D84(v18, v17);
    if ((v24 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v25 = *(void *)(a4 + 56) + 80 * v23;
    double v26 = *(double *)v25;
    char v27 = *(unsigned char *)(v25 + 8);
    double v28 = *(double *)(v25 + 16);
    int v29 = *(unsigned __int8 *)(v25 + 24);
    int v42 = *(unsigned __int8 *)(v25 + 73);
    swift_bridgeObjectRelease();
    uint64_t v30 = (void *)(a5 + *(int *)(type metadata accessor for ClassicArticleData() + 56));
    if (v18 == *v30 && v17 == v30[1])
    {
      char v32 = 1;
      double v33 = 1.0 - a9;
      if ((v27 & 1) == 0)
      {
LABEL_17:
        double v34 = v33 * v21;
        if (v29) {
          double v28 = *(double *)(a6 + 16);
        }
        uint64_t v35 = 176;
        if (v32) {
          uint64_t v35 = 136;
        }
        uint64_t v36 = 168;
        if (v32) {
          uint64_t v36 = 128;
        }
        long double v37 = *(double *)(a6 + v35);
        long double v38 = v34 + pow(1.0 - v26, *(long double *)(a6 + v36)) * a9;
        double v39 = pow(1.0 - v28, v37) * v38;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v44 = *v16;
        *uint64_t v16 = 0x8000000000000000;
        if ((v42 | a7 & a8)) {
          double v41 = (1.0 - a10) * v39 + a10;
        }
        else {
          double v41 = v39;
        }
        sub_1DE829BD8(v18, v17, isUniquelyReferenced_nonNull_native, v41);
        *uint64_t v16 = v44;
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v32 = sub_1DE8E1AC0();
      double v33 = 1.0 - a9;
      if ((v27 & 1) == 0) {
        goto LABEL_17;
      }
    }
    double v26 = *(double *)(a6 + 8);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1DE821D84(v18, v17);
  double v21 = 0.0;
  if (v22) {
    double v21 = *(double *)(*(void *)(a3 + 56) + 8 * v20);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a4 + 16)) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1DE8C6A0C(uint64_t *a1, uint64_t *a2, void *a3, Swift::Double a4, double a5, double a6)
{
  uint64_t v12 = *a2;
  uint64_t v11 = a2[1];
  sub_1DE8CEAE8((uint64_t)(a2 + 2), (uint64_t)v25);
  sub_1DE8CEAD0(v25, (uint64_t)v26);
  uint64_t v13 = v27;
  uint64_t v14 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 32);
  swift_bridgeObjectRetain();
  unint64_t v16 = v15(v13, v14);
  uint64_t v17 = v27;
  uint64_t v18 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  double v19 = ReadonlyAggregateType.personalizationValue(baseline:decayRate:)(a3, v17, v18, a4);
  double v20 = 1.0;
  if (v19 < a5)
  {
    double v21 = (double)v16;
    if ((double)v16 > a6) {
      double v21 = a6;
    }
    double v20 = 1.0 - v21 / a6 * (1.0 - v19 / a5);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *a1;
  *a1 = 0x8000000000000000;
  sub_1DE829BD8(v12, v11, isUniquelyReferenced_nonNull_native, v20);
  *a1 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

double sub_1DE8C6B8C(uint64_t a1, uint64_t a2)
{
  long double v2 = *(double *)(a2 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  double result = 1.0;
  if (v3) {
    BOOL v5 = v2 == 1.0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    double v6 = *(double *)a2;
    if (*(double *)a2 != 0.0)
    {
      long long v7 = (double *)(a1 + 32);
      long double v8 = *(double *)(a1 + 32);
      uint64_t v9 = v3 - 1;
      if (v3 != 1)
      {
        long long v10 = (double *)(a1 + 40);
        do
        {
          double v11 = *v10++;
          double v12 = v11;
          if (v11 < v8) {
            long double v8 = v12;
          }
          --v9;
        }
        while (v9);
      }
      double v14 = *(double *)(a2 + 24);
      long double v13 = *(double *)(a2 + 32);
      double v15 = 1.0;
      do
      {
        double v16 = *v7++;
        double v15 = v15 * v16;
        --v3;
      }
      while (v3);
      long double v17 = v14 * pow(v8, *(long double *)(a2 + 32));
      long double v18 = v6 * (1.0 - (v17 + (1.0 - v14) * pow(v15, v13)));
      return pow(v2, v18);
    }
  }
  return result;
}

double sub_1DE8C6C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  long long v6 = *(_OWORD *)(a4 + 144);
  long long v31 = *(_OWORD *)(a4 + 128);
  long long v32 = v6;
  long long v33 = *(_OWORD *)(a4 + 160);
  uint64_t v34 = *(void *)(a4 + 176);
  long long v7 = *(_OWORD *)(a4 + 80);
  v28[4] = *(_OWORD *)(a4 + 64);
  v28[5] = v7;
  long long v8 = *(_OWORD *)(a4 + 112);
  long long v29 = *(_OWORD *)(a4 + 96);
  long long v30 = v8;
  long long v9 = *(_OWORD *)(a4 + 16);
  v28[0] = *(_OWORD *)a4;
  v28[1] = v9;
  long long v10 = *(_OWORD *)(a4 + 48);
  v28[2] = *(_OWORD *)(a4 + 32);
  v28[3] = v10;
  double v11 = 1.0;
  if (!*(void *)(a2 + 16) || *((double *)&v29 + 1) <= 0.0) {
    return v11;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v15 = sub_1DE8CCA44(MEMORY[0x1E4FBC860], a1, a2, a3, (uint64_t)v28, a5, *((double *)&v29 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long double v16 = *((double *)&v30 + 1);
  uint64_t v17 = *((void *)v15 + 2);
  if (*((double *)&v30 + 1) == 0.0)
  {
    if (v17)
    {
      double v11 = *((double *)v15 + 4);
      uint64_t v18 = v17 - 1;
      if (v17 != 1)
      {
        double v19 = (double *)(v15 + 40);
        do
        {
          double v20 = *v19++;
          double v21 = v20;
          if (v11 < v20) {
            double v11 = v21;
          }
          --v18;
        }
        while (v18);
      }
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  if (v17)
  {
    unint64_t v23 = (double *)(v15 + 32);
    long double v24 = 0.0;
    do
    {
      long double v25 = *v23++;
      long double v26 = log(v25);
      long double v24 = v24 + pow(v26, 1.0 / v16);
      --v17;
    }
    while (v17);
  }
  else
  {
    long double v24 = 0.0;
  }
  swift_bridgeObjectRelease();
  long double v27 = pow(v24, v16);
  return exp(v27);
}

void sub_1DE8C6E34(char **a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1DE821D84(v13, v12);
    double v16 = 0.0;
    if (v17) {
      double v16 = *(double *)(*(void *)(a3 + 56) + 8 * v15);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    double v16 = 0.0;
  }
  double v18 = a6;
  if (!*(void *)(a4 + 16))
  {
LABEL_10:
    if ((*(unsigned char *)(a5 + 112) & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1DE821D84(v13, v12);
  if (v20)
  {
    uint64_t v21 = *(void *)(a4 + 56) + 24 * v19;
    double v18 = *(double *)(v21 + 8);
    int v22 = *(unsigned __int8 *)(v21 + 16);
    swift_bridgeObjectRelease();
    if (v22) {
      double v18 = a6;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  double v18 = a6;
  if ((*(unsigned char *)(a5 + 112) & 1) == 0)
  {
LABEL_14:
    unint64_t v23 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_1DE83ACC8(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v25 = *((void *)v23 + 2);
    unint64_t v24 = *((void *)v23 + 3);
    unint64_t v26 = v25 + 1;
    if (v25 >= v24 >> 1) {
      unint64_t v23 = sub_1DE83ACC8((char *)(v24 > 1), v25 + 1, 1, v23);
    }
    long double v27 = pow(v16 * a7 + 1.0, v18);
    goto LABEL_23;
  }
LABEL_13:
  if (*(double *)(a5 + 96) * a6 < v18) {
    goto LABEL_14;
  }
  unint64_t v23 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v23 = sub_1DE83ACC8(0, *((void *)v23 + 2) + 1, 1, v23);
  }
  unint64_t v25 = *((void *)v23 + 2);
  unint64_t v28 = *((void *)v23 + 3);
  unint64_t v26 = v25 + 1;
  long double v27 = 1.0;
  if (v25 >= v28 >> 1) {
    unint64_t v23 = sub_1DE83ACC8((char *)(v28 > 1), v25 + 1, 1, v23);
  }
LABEL_23:
  *((void *)v23 + 2) = v26;
  *(long double *)&v23[8 * v25 + 32] = v27;
  *a1 = v23;
}

double sub_1DE8C7044(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DE8CE21C(v2, a1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1DE8CDC74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1DE8C0E54(v3);
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    long long v6 = (double *)(v4 + 32);
    double v7 = 1.0;
    do
    {
      double v8 = *v6++;
      double v7 = v7 * v8;
      --v5;
    }
    while (v5);
  }
  else
  {
    double v7 = 1.0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DE8C710C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DE8CE21C(v2, a1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1DE8CDF34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1DE8C104C(v3);
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    double v6 = *(double *)(v4 + 32);
    uint64_t v7 = v5 - 1;
    if (v5 != 1)
    {
      double v8 = (double *)(v4 + 40);
      do
      {
        double v9 = *v8++;
        double v10 = v9;
        if (v9 < v6) {
          double v6 = v10;
        }
        --v7;
      }
      while (v7);
    }
    double v11 = v6;
  }
  else
  {
    double v11 = 0.0;
  }
  swift_bridgeObjectRelease();
  return *(void *)&v11;
}

uint64_t sub_1DE8C71E8(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, double a9, float a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t *a17, double *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t *a27,uint64_t a28,uint64_t a29,double a30)
{
  uint64_t v24 = *(void *)(a7 + 64);
  uint64_t v25 = *a17;
  char v26 = *(unsigned char *)a18;
  double v27 = a18[1];
  double v28 = a18[2];
  long long v29 = *(_OWORD *)(a7 + 16);
  v34[0] = *(_OWORD *)a7;
  v34[1] = v29;
  long long v30 = *(_OWORD *)(a7 + 48);
  long long v35 = *(_OWORD *)(a7 + 32);
  long long v36 = v30;
  uint64_t v37 = v24;
  v32[2] = v28;
  uint64_t v33 = v25;
  LOBYTE(v32[0]) = v26;
  v32[1] = v27;
  return sub_1DE8C3714(a1, a2, a3, a9, 1.0, a4, a5, a6, (uint64_t)v34, a8, *(double *)&a19, *(double *)&a21, *(double *)&a27, v27, *(double *)&v35, *(double *)&v30, (double *)&v33, v32, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           0,
           LODWORD(a10),
           a25,
           a26 & 1,
           a27,
           a28,
           a29,
           a30);
}

void *sub_1DE8C72A4@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a2[41];
  uint64_t v5 = a2[42];
  uint64_t v6 = a2[43];
  uint64_t v7 = a2[44];
  uint64_t v8 = a2[45];
  uint64_t v9 = a2[46];
  uint64_t v19 = a2[76];
  uint64_t v20 = a2[75];
  uint64_t v17 = a2[78];
  uint64_t v18 = a2[77];
  uint64_t v15 = a2[80];
  uint64_t v16 = a2[79];
  uint64_t v10 = a2[107];
  uint64_t v11 = a2[108];
  uint64_t v23 = a2[110];
  uint64_t v24 = a2[109];
  uint64_t v21 = a2[112];
  uint64_t v22 = a2[111];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  double result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 48))(&v25, v12, v13);
  if (v25 >= 2u)
  {
    uint64_t v4 = v10;
    uint64_t v5 = v11;
    uint64_t v7 = v23;
    uint64_t v6 = v24;
    uint64_t v9 = v21;
    uint64_t v8 = v22;
    if (v25 == 2)
    {
      uint64_t v5 = v19;
      uint64_t v4 = v20;
      uint64_t v7 = v17;
      uint64_t v6 = v18;
      uint64_t v9 = v15;
      uint64_t v8 = v16;
    }
  }
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v9;
  return result;
}

double sub_1DE8C73AC(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  double v9 = *a4;
  uint64_t v10 = *((void *)a4 + 1);
  uint64_t v12 = *((void *)a4 + 2);
  uint64_t v11 = *((void *)a4 + 3);
  uint64_t v14 = *((void *)a4 + 4);
  uint64_t v13 = *((void *)a4 + 5);
  uint64_t v16 = *((void *)a4 + 6);
  uint64_t v15 = *((void *)a4 + 7);
  uint64_t v17 = *((void *)a4 + 8);
  uint64_t v18 = *a6;
  switch(*(unsigned char *)(a1 + 48))
  {
    case 1:
      double v9 = 0.0;
      break;
    case 2:
      return v9;
    case 3:
      uint64_t v21 = a1 + 32;
      uint64_t v19 = *(void *)(a1 + 32);
      uint64_t v20 = *(void *)(v21 + 8);
      double v29 = *a4;
      uint64_t v30 = v10;
      uint64_t v31 = v12;
      uint64_t v32 = v11;
      uint64_t v33 = v14;
      uint64_t v34 = v13;
      uint64_t v35 = v16;
      uint64_t v36 = v15;
      uint64_t v37 = v17;
      uint64_t v28 = v18;
      char v22 = 0;
      char v23 = 1;
      goto LABEL_10;
    case 4:
      uint64_t v24 = *(void *)(a1 + 16);
      uint64_t v25 = *(void *)(a1 + 24);
      if (v24 == a2 && v25 == a3) {
        char v26 = 1;
      }
      else {
        char v26 = sub_1DE8E1AC0();
      }
      double v29 = v9;
      uint64_t v30 = v10;
      uint64_t v31 = v12;
      uint64_t v32 = v11;
      uint64_t v33 = v14;
      uint64_t v34 = v13;
      uint64_t v35 = v16;
      uint64_t v36 = v15;
      uint64_t v37 = v17;
      uint64_t v28 = v18;
      char v22 = v26 & 1;
      uint64_t v19 = v24;
      uint64_t v20 = v25;
      char v23 = 0;
LABEL_10:
      double v9 = sub_1DE8CE864(v19, v20, v22, v23, (uint64_t)&v29, a5, &v28, a7);
      break;
    default:
      double v9 = 1.0;
      break;
  }
  return v9;
}

double sub_1DE8C751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v48[0] = 2831206;
  v48[1] = 0xE300000000000000;
  sub_1DE8E1490();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DE83A960(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v9 = *((void *)v7 + 2);
  unint64_t v8 = *((void *)v7 + 3);
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_1DE83A960((char *)(v8 > 1), v9 + 1, 1, v7);
  }
  *((void *)v7 + 2) = v9 + 1;
  uint64_t v10 = &v7[56 * v9];
  *((void *)v10 + 4) = 2831206;
  *((void *)v10 + 5) = 0xE300000000000000;
  *((void *)v10 + 6) = a1;
  *((void *)v10 + 7) = a2;
  *((void *)v10 + 8) = 0;
  *((void *)v10 + 9) = 0;
  v10[80] = 4;
  int64_t v51 = v7;
  sub_1DE8C1244(a3, &v51);
  uint64_t v11 = v51;
  uint64_t v12 = *((void *)v51 + 2);
  if (!v12)
  {
    double v14 = 0.0;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = v11 + 80;
  double v14 = 0.0;
  uint64_t v15 = a4;
  do
  {
    uint64_t v27 = *((void *)v13 - 6);
    uint64_t v28 = *((void *)v13 - 5);
    uint64_t v30 = *((void *)v13 - 4);
    uint64_t v29 = *((void *)v13 - 3);
    uint64_t v31 = *((void *)v13 - 2);
    uint64_t v32 = *((void *)v13 - 1);
    char v33 = *v13;
    if (!*(void *)(v15 + 16))
    {
      uint64_t v47 = 0;
      long long v45 = 0u;
      long long v46 = 0u;
      uint64_t v16 = v29;
      uint64_t v17 = v31;
      uint64_t v18 = v32;
      char v19 = v33;
      sub_1DE813E10(v27, v28, v30, v29, v31, v32, v33);
LABEL_6:
      sub_1DE8CEA74((uint64_t)&v45, qword_1EBEA9DA0);
      uint64_t v20 = v27;
      uint64_t v21 = v28;
      uint64_t v22 = v30;
      uint64_t v23 = v16;
      uint64_t v24 = v17;
      uint64_t v25 = v18;
      char v26 = v19;
      goto LABEL_7;
    }
    uint64_t v44 = *((void *)v13 - 3);
    uint64_t v17 = *((void *)v13 - 2);
    uint64_t v18 = *((void *)v13 - 1);
    char v34 = *v13;
    sub_1DE813E10(*((void *)v13 - 6), *((void *)v13 - 5), *((void *)v13 - 4), v29, v31, v32, v33);
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_1DE821D84(v27, v28);
    if (v36)
    {
      sub_1DE8CEAE8(*(void *)(v15 + 56) + 40 * v35, (uint64_t)&v45);
    }
    else
    {
      uint64_t v47 = 0;
      long long v45 = 0u;
      long long v46 = 0u;
    }
    swift_bridgeObjectRelease();
    char v19 = v34;
    uint64_t v16 = v44;
    if (!*((void *)&v46 + 1)) {
      goto LABEL_6;
    }
    sub_1DE8CEAD0(&v45, (uint64_t)v48);
    uint64_t v43 = v30;
    uint64_t v37 = v49;
    uint64_t v38 = v50;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    double v39 = *(double (**)(uint64_t, uint64_t))(v38 + 24);
    uint64_t v40 = v38;
    uint64_t v15 = a4;
    double v14 = v14 + v39(v37, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    uint64_t v22 = v43;
    uint64_t v23 = v44;
    uint64_t v24 = v17;
    uint64_t v25 = v18;
    char v26 = v19;
LABEL_7:
    sub_1DE864B40(v20, v21, v22, v23, v24, v25, v26);
    v13 += 56;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DE8C77D8(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v3 = a1 + 64;
  uint64_t v33 = MEMORY[0x1E4FBC868];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    uint64_t v12 = *(void *)(a1 + 56) + 80 * v11;
    if (*(unsigned char *)(v12 + 40))
    {
      if (v6) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = v17[1];
      uint64_t v32 = *v17;
      uint64_t v19 = *(void *)(v12 + 32);
      unint64_t v20 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v20)
      {
        uint64_t v21 = v20 + 1;
        swift_bridgeObjectRetain();
        sub_1DE826324(v21, 1);
        uint64_t v2 = v33;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1DE8E1BA0();
      sub_1DE8E1480();
      uint64_t result = sub_1DE8E1BD0();
      uint64_t v22 = v2 + 64;
      uint64_t v23 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v2 + 64 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v22 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v2 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t v31 = (void *)(*(void *)(v2 + 48) + 16 * v26);
      *uint64_t v31 = v32;
      v31[1] = v18;
      *(void *)(*(void *)(v2 + 56) + 8 * v26) = v19;
      ++*(void *)(v2 + 16);
      if (v6) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v7) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    int64_t v15 = v9 + 1;
    if (!v14)
    {
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v7) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v9 + 3;
        if (v9 + 3 >= v7) {
          goto LABEL_39;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v9 + 4;
          if (v9 + 4 >= v7) {
            goto LABEL_39;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v9 = v15;
  }
  int64_t v16 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1DE8CD92C();
    return v2;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v7) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

double sub_1DE8C7ACC(char a1, long double *a2, double a3)
{
  if ((a1 & 1) == 0) {
    return 1.0;
  }
  long double v4 = a2[81];
  long double v5 = a2[82];
  long double v6 = a2[83];
  long double v7 = a2[84];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v10 >= a3)
  {
    if (v10 != 0.0) {
      long double v4 = v4 * pow(a3 / v10, v7);
    }
  }
  else if (v10 != 1.0)
  {
    long double v4 = 1.0 - (1.0 - v4) * pow((1.0 - a3) / (1.0 - v10), v6);
  }
  return pow(v4, v5);
}

double sub_1DE8C7BF4(char a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  double v5 = 1.0;
  if (a1)
  {
    long long v9 = *(_OWORD *)(a2 + 176);
    v15[0] = *(_OWORD *)(a2 + 160);
    v15[1] = v9;
    uint64_t v16 = *(void *)(a2 + 192);
    long double v10 = *(double *)(a2 + 200);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DE8CCC4C(MEMORY[0x1E4FBC868], a4, a5, v10);
    swift_bridgeObjectRelease();
    *a3 = v11;
    swift_bridgeObjectRelease();
    uint64_t v12 = swift_bridgeObjectRetain();
    int64_t v13 = sub_1DE82AF8C(v12);
    swift_bridgeObjectRelease();
    long double v17 = v10;
    double v5 = sub_1DE8C6B8C((uint64_t)v13, (uint64_t)v15);
    swift_release();
  }
  return v5;
}

double sub_1DE8C7CC8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, long double a5)
{
  sub_1DE8C8F0C(*a4, *((void *)a4 + 2), a3, a1, a2);
  return pow(v6, a5);
}

double sub_1DE8C7D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for ClassicArticleData() + 88)) == 1) {
    return *(double *)(a2 + 320);
  }
  uint64_t v6 = sub_1DE8C710C(a3);
  if (v7) {
    return *(double *)(a2 + 376);
  }
  else {
    return *(double *)&v6;
  }
}

uint64_t sub_1DE8C7D88(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, Swift::Double a6)
{
  sub_1DE82F210(a2, (uint64_t)v27);
  double v12 = *(double *)(a2 + 56);
  sub_1DE82F210((uint64_t)v27, (uint64_t)v28);
  if (*(void *)(a3 + 16))
  {
    uint64_t v13 = v28[0];
    uint64_t v14 = v28[1];
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1DE821D84(v13, v14);
    if (v16)
    {
      sub_1DE8CEAE8(*(void *)(a3 + 56) + 40 * v15, (uint64_t)&v23);
    }
    else
    {
      uint64_t v25 = 0;
      long long v23 = 0u;
      long long v24 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v24 + 1))
    {
      sub_1DE8CEAD0(&v23, (uint64_t)v26);
      uint64_t v17 = sub_1DE8C7F4C((uint64_t)v27, a4, a3, (uint64_t)v26);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      double v20 = sub_1DE8164F8(a5, v17, AssociatedTypeWitness, AssociatedConformanceWitness, a6);
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      double v22 = v12 + a1[1];
      *a1 = v12 * v20 + *a1;
      a1[1] = v22;
      return result;
    }
  }
  else
  {
    uint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
  }
  uint64_t result = sub_1DE8CEA74((uint64_t)&v23, qword_1EBEA9DA0);
  a1[1] = v12 + a1[1];
  return result;
}

uint64_t sub_1DE8C7F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DE82F210(a1, (uint64_t)v18);
  if (v21 != 4 || !*(void *)(a2 + 16)) {
    goto LABEL_12;
  }
  uint64_t v8 = v19;
  uint64_t v7 = v20;
  swift_bridgeObjectRetain();
  sub_1DE821D84(v8, v7);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DE8E25E0;
    sub_1DE8CEAE8(a4, v12 + 32);
    return v12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v14 = 2831206;
  *((void *)&v14 + 1) = 0xE300000000000000;
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  if (*(void *)(a3 + 16) && (unint64_t v10 = sub_1DE821D84(v14, *((uint64_t *)&v14 + 1)), (v11 & 1) != 0))
  {
    sub_1DE8CEAE8(*(void *)(a3 + 56) + 40 * v10, (uint64_t)&v14);
  }
  else
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
    sub_1DE8CEA74((uint64_t)&v14, qword_1EBEA9DA0);
    goto LABEL_12;
  }
  sub_1DE8CEAD0(&v14, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B38);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DE8E31B0;
  sub_1DE8CEAE8((uint64_t)v17, v12 + 32);
  sub_1DE8CEAE8(a4, v12 + 72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v12;
}

uint64_t sub_1DE8C8108(uint64_t result, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, char a6, char a7, char a8, double a9, uint64_t a10)
{
  uint64_t v17 = (double *)result;
  double v19 = *a4;
  double v18 = a4[1];
  double v20 = a4[2];
  if (a2 != 42 || a3 != 0xE100000000000000)
  {
    uint64_t result = sub_1DE8E1AC0();
    if ((result & 1) == 0)
    {
      if (*(void *)(a5 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_1DE821D84(a2, a3);
        if (v22)
        {
          uint64_t v23 = *(void *)(a5 + 56) + 24 * v21;
          double v24 = *(double *)v23;
          double v25 = *(double *)(v23 + 8);
          int v26 = *(unsigned __int8 *)(v23 + 16);
          uint64_t result = swift_bridgeObjectRelease();
          if (v26) {
            double v27 = a9;
          }
          else {
            double v27 = v25;
          }
          if (a6) {
            double v28 = 1.0;
          }
          else {
            double v28 = 0.0;
          }
          if ((a6 & 1) != 0 || (a7 & 1) == 0)
          {
            a9 = v27;
            if (v20 <= 0.0) {
              goto LABEL_31;
            }
            goto LABEL_27;
          }
          if (a8)
          {
            double v28 = 0.0;
            BOOL v29 = v27 > a9;
            a9 = v27;
            if (!v29) {
              goto LABEL_26;
            }
          }
          else
          {
            a9 = v27;
          }
LABEL_37:
          if (*(void *)(a10 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v35 = sub_1DE821D84(a2, a3);
            double v28 = 0.0;
            if (v36) {
              double v28 = *(double *)(*(void *)(a10 + 56) + 8 * v35);
            }
            uint64_t result = swift_bridgeObjectRelease();
            if (v20 > 0.0) {
              goto LABEL_27;
            }
            goto LABEL_31;
          }
          double v28 = 0.0;
          if (v20 <= 0.0) {
            goto LABEL_31;
          }
LABEL_27:
          double v30 = (v19 * v28 + v18 * (1.0 - v28)) / v20;
          BOOL v31 = a9 == 0.0;
          if (a9 == 0.0) {
            double v30 = 0.0;
          }
          goto LABEL_32;
        }
        uint64_t result = swift_bridgeObjectRelease();
      }
      double v24 = 1.0;
      if (a6) {
        double v28 = 1.0;
      }
      else {
        double v28 = 0.0;
      }
      if ((a6 & 1) != 0 || (a7 & 1) == 0)
      {
LABEL_26:
        if (v20 > 0.0) {
          goto LABEL_27;
        }
LABEL_31:
        BOOL v31 = a9 == 0.0;
        double v30 = 0.0;
LABEL_32:
        double v32 = 1.0;
        if (!v31) {
          double v32 = a9;
        }
        double v33 = v24 * v32;
        double v34 = v17[1];
        *uint64_t v17 = *v17 + v33;
        v17[1] = v30 * v33 + v34;
        v17[2] = v24 + v17[2];
        return result;
      }
      if (a8)
      {
        double v28 = 0.0;
        goto LABEL_26;
      }
      goto LABEL_37;
    }
  }
  return result;
}

double sub_1DE8C832C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  double v2 = 0.0;
  if (*(void *)(v1 + 16))
  {
    unint64_t v3 = sub_1DE821D84(42, 0xE100000000000000);
    if (v4)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      double v6 = *(double *)(v5 + 24 * v3 + 16);
      if (v6 > 0.0) {
        return *(double *)(v5 + 24 * v3 + 8) / v6;
      }
    }
  }
  return v2;
}

uint64_t sub_1DE8C839C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void *__return_ptr, uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unint64_t v10 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  uint64_t v11 = *(void *)(a4 + 16);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1DE821D84(a1, a2);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v19 = swift_endAccess();
    a3(v22, v19);
    double v15 = *(double *)v22;
    uint64_t v16 = v22[1];
    char v17 = v23;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v10;
    *unint64_t v10 = 0x8000000000000000;
    sub_1DE82A05C(v16, v17, a1, a2, isUniquelyReferenced_nonNull_native, v15);
    *unint64_t v10 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 + 56) + 24 * v12;
  double v15 = *(double *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  char v17 = *(unsigned char *)(v14 + 16);
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
  *(double *)a5 = v15;
  *(void *)(a5 + 8) = v16;
  *(unsigned char *)(a5 + 16) = v17;
  return result;
}

uint64_t sub_1DE8C8510(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v37 = type metadata accessor for ClassicArticleData();
  uint64_t v16 = (uint64_t *)(a2 + *(int *)(v37 + 56));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v43 = 2831206;
  unint64_t v44 = 0xE300000000000000;
  sub_1DE8E1490();
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  swift_bridgeObjectRetain();
  sub_1DE8C839C(2831206, 0xE300000000000000, (void (*)(void *__return_ptr, uint64_t))sub_1DE8CEBCC, a3, (uint64_t)&v43);
  swift_bridgeObjectRelease();
  double v19 = *(double *)&v43;
  uint64_t v20 = v44;
  char v21 = v45;
  uint64_t v22 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v42[0] = v22;
  sub_1DE82A05C(v20, v21, v17, v18, isUniquelyReferenced_nonNull_native, v19);
  uint64_t v24 = v18;
  uint64_t v25 = v42[0];
  uint64_t v46 = v42[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(*(void *)(a2 + *(int *)(v37 + 64)) + 16);
  if (v26)
  {
    double v27 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v28 = *v27;
      v42[0] = *(v27 - 1);
      v42[1] = v28;
      swift_bridgeObjectRetain();
      sub_1DE8C88E0(v42, a11, a10, v17, v24, a7, &v46, a3, v36, v35, a6, a2, a8, a9, a12, a13);
      swift_bridgeObjectRelease();
      v27 += 2;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v25 = v46;
    BOOL v29 = a1;
  }
  else
  {
    BOOL v29 = a1;
  }
  uint64_t v30 = *(void *)(a2 + 8);
  uint64_t v31 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = *v29;
  *BOOL v29 = 0x8000000000000000;
  sub_1DE82A1CC(v25, v30, v31, v32);
  *BOOL v29 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8C87C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, Swift::Double a7@<D0>, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = *(void *)(a3 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  *(void *)(inited + 32) = a4;
  *(void *)(inited + 40) = a5;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DE8C14C0(a1, a2, inited, a8, a9, a10, a11, a7);
  LOBYTE(a4) = v19;
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *(void *)a6 = v16;
  *(void *)(a6 + 8) = v18;
  *(unsigned char *)(a6 + 16) = a4 & 1;
  return result;
}

uint64_t sub_1DE8C88E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v20 = *a1;
  uint64_t v19 = a1[1];
  *(void *)&long long v44 = 2831206;
  *((void *)&v44 + 1) = 0xE300000000000000;
  sub_1DE8E1490();
  long long v49 = v44;
  uint64_t v21 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v21) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_1DE821D84(v20, v19);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v24 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v44 = 2831206;
  *((void *)&v44 + 1) = 0xE300000000000000;
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  long long v23 = v44;
  uint64_t v24 = sub_1DE83A608(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v26 = *((void *)v24 + 2);
  unint64_t v25 = *((void *)v24 + 3);
  if (v26 >= v25 >> 1) {
    uint64_t v24 = sub_1DE83A608((char *)(v25 > 1), v26 + 1, 1, v24);
  }
  *((void *)v24 + 2) = v26 + 1;
  *(_OWORD *)&v24[16 * v26 + 32] = v23;
LABEL_8:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v24 = sub_1DE83A608(0, *((void *)v24 + 2) + 1, 1, v24);
  }
  unint64_t v28 = *((void *)v24 + 2);
  unint64_t v27 = *((void *)v24 + 3);
  if (v28 >= v27 >> 1) {
    uint64_t v24 = sub_1DE83A608((char *)(v27 > 1), v28 + 1, 1, v24);
  }
  uint64_t v29 = a16;
  uint64_t v30 = a10;
  *((void *)v24 + 2) = v28 + 1;
  uint64_t v31 = &v24[16 * v28];
  *((void *)v31 + 4) = 2831206;
  *((void *)v31 + 5) = 0xE300000000000000;
  unint64_t v48 = v24;
  if (*(unsigned char *)(a3 + 8))
  {
    *(void *)&long long v44 = 2831462;
    *((void *)&v44 + 1) = 0xE300000000000000;
    sub_1DE8E1490();
    sub_1DE8E1490();
    sub_1DE8E1490();
    long long v32 = v44;
    unint64_t v34 = *((void *)v24 + 2);
    unint64_t v33 = *((void *)v24 + 3);
    swift_bridgeObjectRetain();
    if (v34 >= v33 >> 1) {
      uint64_t v24 = sub_1DE83A608((char *)(v33 > 1), v34 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v34 + 1;
    *(_OWORD *)&v24[16 * v34 + 32] = v32;
    unint64_t v48 = v24;
    if (*(void *)(a6 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_1DE821D84(v32, *((uint64_t *)&v32 + 1));
      if (v36)
      {
        sub_1DE8CEAE8(*(void *)(a6 + 56) + 40 * v35, (uint64_t)&v44);
        swift_bridgeObjectRelease();
        if (*((void *)&v45 + 1))
        {
          sub_1DE8CEA74((uint64_t)&v44, qword_1EBEA9DA0);
          swift_bridgeObjectRelease();
          long long v49 = v32;
LABEL_23:
          uint64_t v30 = a10;
          uint64_t v29 = a16;
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v46 = 0;
        long long v44 = 0u;
        long long v45 = 0u;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = 0;
      long long v44 = 0u;
      long long v45 = 0u;
      swift_bridgeObjectRelease();
    }
    sub_1DE8CEA74((uint64_t)&v44, qword_1EBEA9DA0);
    goto LABEL_23;
  }
LABEL_24:
  long long v37 = v49;
  MEMORY[0x1F4188790](v30, v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DE8C839C(v37, *((uint64_t *)&v37 + 1), (void (*)(void *__return_ptr, uint64_t))sub_1DE8CEC10, a8, (uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v38 = v44;
  char v39 = v45;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v47 = *a7;
  *a7 = 0x8000000000000000;
  sub_1DE82A05C(*((uint64_t *)&v38 + 1), v39, v20, v19, isUniquelyReferenced_nonNull_native, *(double *)&v38);
  *a7 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8C8DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, Swift::Double a10@<D0>, uint64_t a11, uint64_t *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16)
{
  if (*a3 == a4 && a3[1] == a5) {
    char v23 = 0;
  }
  else {
    char v23 = sub_1DE8E1AC0() ^ 1;
  }
  long long v24 = *(_OWORD *)(a6 + 48);
  _OWORD v35[2] = *(_OWORD *)(a6 + 32);
  v35[3] = v24;
  uint64_t v36 = *(void *)(a6 + 64);
  long long v25 = *(_OWORD *)(a6 + 16);
  v35[0] = *(_OWORD *)a6;
  v35[1] = v25;
  uint64_t v34 = a8;
  uint64_t v26 = type metadata accessor for ClassicArticleData();
  double v27 = sub_1DE8CE864(a1, a2, 0, v23 & 1, (uint64_t)v35, a7, &v34, *(void *)(a11 + *(int *)(v26 + 92)));
  uint64_t v28 = *a12;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1DE8C14C0(a1, a2, v28, a13, a14, a15, a16, a10);
  char v31 = v30;
  uint64_t result = swift_bridgeObjectRelease();
  *(double *)a9 = v27;
  *(void *)(a9 + 8) = v29;
  *(unsigned char *)(a9 + 16) = v31 & 1;
  return result;
}

uint64_t sub_1DE8C8F0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  switch((char)result)
  {
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1DE8CD1BC(a3, 1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        double v11 = *(double *)(v9 + 32);
        uint64_t v12 = v10 - 1;
        if (v12)
        {
          char v13 = (double *)(v9 + 40);
          do
          {
            double v14 = *v13++;
            double v15 = v14;
            if (v14 < v11) {
              double v11 = v15;
            }
            --v12;
          }
          while (v12);
        }
      }
      return swift_bridgeObjectRelease();
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1DE8CD1BC(a3, 2, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        double v18 = *(double *)(v16 + 32);
        uint64_t v19 = v17 - 1;
        if (v19)
        {
          uint64_t v20 = (double *)(v16 + 40);
          do
          {
            double v21 = *v20++;
            double v22 = v21;
            if (v18 < v21) {
              double v18 = v22;
            }
            --v19;
          }
          while (v19);
        }
      }
      return swift_bridgeObjectRelease();
    case 3:
      if (!*(void *)(a3 + 16))
      {
        uint64_t v26 = 0;
        uint64_t v31 = 0;
        unsigned __int8 v27 = 1;
        goto LABEL_34;
      }
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1DE821D84(a4, a5);
      if (v24)
      {
        uint64_t v25 = *(void *)(a3 + 56) + 80 * v23;
        uint64_t v26 = *(unsigned int *)(v25 + 60);
        unsigned __int8 v27 = *(unsigned char *)(v25 + 64);
        uint64_t result = swift_bridgeObjectRelease();
        if (!*(void *)(a3 + 16)) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v26 = 0;
        unsigned __int8 v27 = 1;
        if (!*(void *)(a3 + 16)) {
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1DE821D84(a4, a5);
      if (v33)
      {
        uint64_t v34 = *(void *)(a3 + 56) + 80 * v32;
        uint64_t v31 = *(unsigned int *)(v34 + 68);
        unsigned __int8 v35 = *(unsigned char *)(v34 + 72);
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
      uint64_t v31 = 0;
LABEL_34:
      unsigned __int8 v35 = 1;
LABEL_35:
      MEMORY[0x1F4188790](result, a2);
      uint64_t v39 = sub_1DE8CD478(a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_1DE8CE9F8);
      uint64_t v41 = v39;
      if (!*(void *)(v39 + 16)) {
        goto LABEL_55;
      }
      MEMORY[0x1F4188790](v39, v40);
      int v42 = sub_1DE8CD768(v41, sub_1DE8CEA14);
      swift_bridgeObjectRelease();
      uint64_t v43 = *((void *)v42 + 2);
      if (v43)
      {
        double v44 = *((double *)v42 + 4);
        uint64_t v45 = v43 - 1;
        if (v45)
        {
          uint64_t v46 = (double *)(v42 + 40);
          do
          {
            double v47 = *v46++;
            double v48 = v47;
            if (v47 < v44) {
              double v44 = v48;
            }
            --v45;
          }
          while (v45);
        }
      }
      return swift_bridgeObjectRelease();
    case 4:
      if (!*(void *)(a3 + 16))
      {
        uint64_t v26 = 0;
        uint64_t v31 = 0;
        unsigned __int8 v27 = 1;
        goto LABEL_46;
      }
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1DE821D84(a4, a5);
      if (v29)
      {
        uint64_t v30 = *(void *)(a3 + 56) + 80 * v28;
        uint64_t v26 = *(unsigned int *)(v30 + 60);
        unsigned __int8 v27 = *(unsigned char *)(v30 + 64);
        uint64_t result = swift_bridgeObjectRelease();
        if (!*(void *)(a3 + 16)) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v26 = 0;
        unsigned __int8 v27 = 1;
        if (!*(void *)(a3 + 16)) {
          goto LABEL_45;
        }
      }
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1DE821D84(a4, a5);
      if (v37)
      {
        uint64_t v38 = *(void *)(a3 + 56) + 80 * v36;
        uint64_t v31 = *(unsigned int *)(v38 + 68);
        unsigned __int8 v35 = *(unsigned char *)(v38 + 72);
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_45:
      uint64_t v31 = 0;
LABEL_46:
      unsigned __int8 v35 = 1;
LABEL_47:
      MEMORY[0x1F4188790](result, a2);
      uint64_t v49 = sub_1DE8CD478(a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_1DE8CECA8);
      uint64_t v51 = v49;
      if (*(void *)(v49 + 16))
      {
        MEMORY[0x1F4188790](v49, v50);
        unint64_t v52 = sub_1DE8CD768(v51, sub_1DE8CECAC);
        swift_bridgeObjectRelease();
        uint64_t v53 = *((void *)v52 + 2);
        if (v53)
        {
          double v54 = *((double *)v52 + 4);
          uint64_t v55 = v53 - 1;
          if (v55)
          {
            uint64_t v56 = (double *)(v52 + 40);
            do
            {
              double v57 = *v56++;
              double v58 = v57;
              if (v54 < v57) {
                double v54 = v58;
              }
              --v55;
            }
            while (v55);
          }
        }
        return swift_bridgeObjectRelease();
      }
      else
      {
LABEL_55:
        swift_bridgeObjectRelease();
        return sub_1DE8675F4(v26 | ((unint64_t)v27 << 32), v31 | ((unint64_t)v35 << 32));
      }
    default:
      return result;
  }
}

uint64_t sub_1DE8C9424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(unsigned int *)(a3 + 60);
  uint64_t v6 = *(unsigned int *)(a3 + 68);
  if (a1 == a4 && a2 == a5) {
    return 0;
  }
  char v8 = *(unsigned char *)(a3 + 72);
  char v9 = *(unsigned char *)(a3 + 64);
  char v10 = sub_1DE8E1AC0();
  uint64_t v11 = v5 | (v6 << 32);
  if (v8) {
    uint64_t v11 = 0;
  }
  if (v9) {
    uint64_t v11 = 0;
  }
  if (v10) {
    return 0;
  }
  else {
    return v11;
  }
}

uint64_t sub_1DE8C94B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = sub_1DE8E1A80();
  uint64_t v11 = v5;
  sub_1DE8E1A80();
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  if (*(void *)(a4 + 16) && (unint64_t v6 = sub_1DE821D84(v10, v11), (v7 & 1) != 0)) {
    uint64_t v8 = *(void *)(*(void *)(a4 + 56) + 8 * v6);
  }
  else {
    uint64_t v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1DE8C9584(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1DE8E16F0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v9 = sub_1DE8E1BD0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        char v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for ReadonlyAggregate(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DE8C9794(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1DE8E16F0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v9 = sub_1DE8E1BD0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          char v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DE8C996C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1DE8E16F0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = 32 * v6;
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v10 = sub_1DE8E1BD0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          char v13 = (_OWORD *)(v12 + 32 * v3);
          uint64_t v14 = (_OWORD *)(v12 + v9);
          if (32 * v3 != v9 || v13 >= v14 + 2)
          {
            long long v15 = v14[1];
            *char v13 = *v14;
            v13[1] = v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          int64_t v17 = (void *)(v16 + 8 * v3);
          uint64_t v18 = (void *)(v16 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 1))
          {
            *int64_t v17 = *v18;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1DE8C9B54(char **a1)
{
  double v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v2 = sub_1DE8CBA0C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DE8C9BC0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DE8C9BC0(void *a1)
{
  double v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DE8E1A70();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v81 = *(double *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = v79 + 8 * v82;
          if (v81 >= *(double *)v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v83 + 8) = *(void *)v83;
          *(double *)(v79 + 8 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v95 = result;
    uint64_t v96 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_1DE8E15C0();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v96;
      uint64_t v94 = result;
      uint64_t v98 = (double *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      uint64_t v92 = v2;
      uint64_t v93 = *v2 - 8;
      uint64_t v10 = MEMORY[0x1E4FBC860];
      uint64_t v97 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          double v13 = *(double *)(v9 + 8 * v8);
          double v14 = *(double *)(v9 + 8 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            double v15 = v13;
            while (1)
            {
              double v16 = v15;
              double v15 = *(double *)(v9 + 8 * v8);
              if (v13 < v14 == v15 >= v16) {
                break;
              }
              if (v3 == ++v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_138;
            }
            if (v12 < v8)
            {
              int64_t v17 = (uint64_t *)(v93 + 8 * v8);
              uint64_t v18 = v8;
              uint64_t v19 = v12;
              uint64_t v20 = (uint64_t *)(v9 + 8 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9) {
                    goto LABEL_144;
                  }
                  uint64_t v21 = *v20;
                  *uint64_t v20 = *v17;
                  *int64_t v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_135;
          }
          if (v8 - v12 < v95)
          {
            uint64_t v22 = v12 + v95;
            if (__OFADD__(v12, v95)) {
              goto LABEL_139;
            }
            if (v22 >= v3) {
              uint64_t v22 = v3;
            }
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              BOOL v23 = (double *)(v93 + 8 * v8);
              do
              {
                double v24 = *(double *)(v9 + 8 * v8);
                uint64_t v25 = v12;
                uint64_t v26 = v23;
                do
                {
                  double v27 = *v26;
                  if (v24 >= *v26) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_142;
                  }
                  *uint64_t v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              uint64_t v8 = v22;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v29 = *(void *)(v10 + 16);
        unint64_t v28 = *(void *)(v10 + 24);
        unint64_t v11 = v29 + 1;
        uint64_t v9 = v97;
        if (v29 >= v28 >> 1)
        {
          uint64_t result = (uint64_t)sub_1DE8CA414((char *)(v28 > 1), v29 + 1, 1, (char *)v10);
          uint64_t v9 = v97;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v30 = v10 + 32;
        uint64_t v31 = (uint64_t *)(v10 + 32 + 16 * v29);
        *uint64_t v31 = v12;
        v31[1] = v8;
        if (v29)
        {
          while (1)
          {
            unint64_t v32 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v37 = v30 + 16 * v11;
              uint64_t v38 = *(void *)(v37 - 64);
              uint64_t v39 = *(void *)(v37 - 56);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_119;
              }
              uint64_t v42 = *(void *)(v37 - 48);
              uint64_t v41 = *(void *)(v37 - 40);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_120;
              }
              unint64_t v44 = v11 - 2;
              uint64_t v45 = (uint64_t *)(v30 + 16 * (v11 - 2));
              uint64_t v47 = *v45;
              uint64_t v46 = v45[1];
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_121;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_123;
              }
              if (v49 >= v40)
              {
                unint64_t v67 = (uint64_t *)(v30 + 16 * v32);
                uint64_t v69 = *v67;
                uint64_t v68 = v67[1];
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_129;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v61 = *(void *)(v10 + 32);
                uint64_t v62 = *(void *)(v10 + 40);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_77;
              }
              uint64_t v34 = *(void *)(v10 + 32);
              uint64_t v33 = *(void *)(v10 + 40);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_122;
            }
            unint64_t v44 = v11 - 2;
            uint64_t v50 = (uint64_t *)(v30 + 16 * (v11 - 2));
            uint64_t v52 = *v50;
            uint64_t v51 = v50[1];
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_124;
            }
            uint64_t v56 = (uint64_t *)(v30 + 16 * v32);
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_126;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_128;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_83:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v55) {
              goto LABEL_125;
            }
            uint64_t v63 = (uint64_t *)(v30 + 16 * v32);
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_127;
            }
            if (v66 < v54) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9) {
              goto LABEL_143;
            }
            uint64_t v72 = (uint64_t *)(v30 + 16 * v71);
            uint64_t v73 = *v72;
            uint64_t v74 = v30;
            long long v75 = (void *)(v30 + 16 * v32);
            uint64_t v76 = v75[1];
            uint64_t result = sub_1DE8CA210((double *)(v9 + 8 * *v72), (double *)(v9 + 8 * *v75), v9 + 8 * v76, v98);
            if (v1) {
              goto LABEL_113;
            }
            if (v76 < v73) {
              goto LABEL_116;
            }
            if (v32 > *(void *)(v10 + 16)) {
              goto LABEL_117;
            }
            *uint64_t v72 = v73;
            *(void *)(v74 + 16 * v71 + 8) = v76;
            unint64_t v77 = *(void *)(v10 + 16);
            if (v32 >= v77) {
              goto LABEL_118;
            }
            unint64_t v11 = v77 - 1;
            uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            uint64_t v30 = v74;
            *(void *)(v10 + 16) = v77 - 1;
            uint64_t v9 = v97;
            if (v77 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v96;
        if (v8 >= v96)
        {
          uint64_t v7 = v94;
          double v2 = v92;
          goto LABEL_102;
        }
      }
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v98 = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v94 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_102:
    uint64_t v94 = v7;
    if (v11 >= 2)
    {
      uint64_t v84 = *v2;
      do
      {
        unint64_t v85 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_131;
        }
        if (!v84) {
          goto LABEL_145;
        }
        uint64_t v86 = v10;
        uint64_t v87 = v10 + 32;
        uint64_t v88 = *(void *)(v10 + 32 + 16 * v85);
        uint64_t v89 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_1DE8CA210((double *)(v84 + 8 * v88), (double *)(v84 + 8 * *(void *)(v87 + 16 * (v11 - 1))), v84 + 8 * v89, v98);
        if (v1) {
          break;
        }
        if (v89 < v88) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE8CA510(v86);
          uint64_t v86 = result;
        }
        if (v85 >= *(void *)(v86 + 16)) {
          goto LABEL_133;
        }
        char v90 = (void *)(v86 + 32 + 16 * v85);
        *char v90 = v88;
        v90[1] = v89;
        unint64_t v91 = *(void *)(v86 + 16);
        if (v11 > v91) {
          goto LABEL_134;
        }
        uint64_t result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        uint64_t v10 = v86;
        *(void *)(v86 + 16) = v91 - 1;
        unint64_t v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    *(void *)(v94 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE8CA210(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    double v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    int64_t v17 = (double *)(a3 - 8);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      double v20 = *--v18;
      double v21 = v20;
      if (*(v14 - 1) < v20) {
        break;
      }
      double v21 = *(v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *int64_t v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  double v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      double v15 = *v6;
      if (*v6 >= *v4) {
        break;
      }
      BOOL v16 = v7 == v6++;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    double v15 = *v4;
    BOOL v16 = v7 == v4++;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8))) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

char *sub_1DE8CA414(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7DE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  double v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DE8CA510(uint64_t a1)
{
  return sub_1DE8CA414(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DE8CA524(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9618);
  uint64_t result = sub_1DE8E1830();
  uint64_t v9 = result;
  unint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    *uint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CA7C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9620);
  uint64_t result = sub_1DE8E1830();
  uint64_t v8 = result;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v39 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v40 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v37) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v37) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v37) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v37) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v37) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v40 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(v4 + 56) + 40 * v13;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v41 = *(unsigned char *)(v21 + 16);
    uint64_t v24 = *(void *)(v21 + 24);
    uint64_t v25 = *(void *)(v21 + 32);
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = (void *)(*(void *)(v8 + 48) + 16 * v29);
    *uint64_t v34 = v20;
    v34[1] = v19;
    uint64_t v35 = *(void *)(v8 + 56) + 40 * v29;
    *(void *)uint64_t v35 = v22;
    *(void *)(v35 + 8) = v23;
    *(unsigned char *)(v35 + 16) = v41;
    *(void *)(v35 + 24) = v24;
    *(void *)(v35 + 32) = v25;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v39;
    uint64_t v10 = v40;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CAAC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9B48);
  uint64_t result = sub_1DE8E1830();
  uint64_t v8 = result;
  uint64_t v40 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v42 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v43 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v40) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v40) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v40) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v40) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v40) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v43 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void *)(v4 + 56) + (v13 << 6);
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = *(void *)(v21 + 32);
    char v44 = *(unsigned char *)(v21 + 40);
    uint64_t v27 = *(void *)(v21 + 48);
    char v28 = *(unsigned char *)(v21 + 56);
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v29 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v11 + 8 * v31);
      }
      while (v36 == -1);
      unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(void *)(v11 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    uint64_t v37 = (void *)(*(void *)(v8 + 48) + 16 * v32);
    *uint64_t v37 = v20;
    v37[1] = v19;
    unint64_t v38 = *(void *)(v8 + 56) + (v32 << 6);
    *(unsigned char *)unint64_t v38 = v22;
    *(void *)(v38 + 8) = v23;
    *(void *)(v38 + 16) = v24;
    *(void *)(v38 + 24) = v25;
    *(void *)(v38 + 32) = v26;
    *(unsigned char *)(v38 + 40) = v44;
    *(void *)(v38 + 48) = v27;
    *(unsigned char *)(v38 + 56) = v28;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v42;
    uint64_t v10 = v43;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CADC8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1DE8CAF50((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1DE8CAF50((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1E01D4C70](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1DE8CAF50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1DE8E1BA0();
        swift_bridgeObjectRetain();
        sub_1DE8E1480();
        uint64_t v20 = sub_1DE8E1BD0();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1DE8E1AC0() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          unint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1DE8E1AC0() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    char v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t v47 = sub_1DE8E1BD0();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1DE8E1AC0() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1DE8CB490(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1DE8E1AC0() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CB490(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E38);
  uint64_t result = sub_1DE8E1720();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1DE8E1BA0();
    swift_bridgeObjectRetain();
    sub_1DE8E1480();
    uint64_t result = sub_1DE8E1BD0();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CB728(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E50);
  uint64_t result = sub_1DE8E1810();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    uint64_t v18 = 8 * i;
    double v19 = *(double *)(*(void *)(a1 + 56) + 8 * i);
    if ((*(void *)&v19 & 0xFFFFFFFFFFFFFLL) != 0) {
      double v20 = 0.0;
    }
    else {
      double v20 = *(double *)(*(void *)(a1 + 56) + 8 * i);
    }
    if ((~*(void *)&v19 & 0x7FF0000000000000) == 0) {
      double v19 = v20;
    }
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v21 = (void *)(v3[6] + 16 * i);
    *unint64_t v21 = v17;
    v21[1] = result;
    *(double *)(v3[7] + v18) = v19;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v24;
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CB90C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

size_t sub_1DE8CB994(void *a1)
{
  return sub_1DE84C170(0, a1[2], 0, a1);
}

char *sub_1DE8CB9A8(uint64_t a1)
{
  return sub_1DE84C670(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1DE8CB9BC(uint64_t a1)
{
  return sub_1DE84C9A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1DE8CB9D0(uint64_t a1)
{
  return sub_1DE84CBA8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1DE8CB9E4(uint64_t a1)
{
  return sub_1DE84C344(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1DE8CB9F8(void *a1)
{
  return sub_1DE84CF38(0, a1[2], 0, a1);
}

char *sub_1DE8CBA0C(uint64_t a1)
{
  return sub_1DE84C788(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1DE8CBA20(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v93 = a3;
  LOBYTE(v3) = a2;
  uint64_t v5 = 2831206;
  uint64_t v99 = type metadata accessor for ClassicArticleData();
  unint64_t v100 = sub_1DE8CE80C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v98);
  sub_1DE83603C(a1, (uint64_t)boxed_opaque_existential_1);
  unint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v8 = v99;
  unint64_t v9 = v100;
  __swift_project_boxed_opaque_existential_1(v98, v99);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, unint64_t))(v9 + 112))(v8, v9);
  int64_t v12 = v11;
  uint64_t v95 = 2831206;
  unint64_t v96 = 0xE300000000000000;
  sub_1DE8E1490();
  uint64_t v13 = 2831206;
  unint64_t v14 = 0xE300000000000000;
  int64_t v15 = sub_1DE83A960(0, 1, 1, v7);
  unint64_t v17 = *((void *)v15 + 2);
  unint64_t v16 = *((void *)v15 + 3);
  int64_t v18 = v17 + 1;
  if (v17 >= v16 >> 1) {
    goto LABEL_97;
  }
  while (1)
  {
    *((void *)v15 + 2) = v18;
    double v19 = &v15[56 * v17];
    *((void *)v19 + 4) = v13;
    *((void *)v19 + 5) = v14;
    *((void *)v19 + 6) = v10;
    *((void *)v19 + 7) = v12;
    *((void *)v19 + 8) = 0;
    *((void *)v19 + 9) = 0;
    v19[80] = 4;
    uint64_t v97 = v15;
    if (v3 == 25 || v3 == 5)
    {
      uint64_t v95 = v5 + 768;
      unint64_t v96 = 0xE300000000000000;
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      uint64_t v20 = v95;
      unint64_t v21 = v96;
      unint64_t v23 = *((void *)v15 + 2);
      unint64_t v22 = *((void *)v15 + 3);
      if (v23 >= v22 >> 1) {
        int64_t v15 = sub_1DE83A960((char *)(v22 > 1), v23 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v23 + 1;
      uint64_t v24 = &v15[56 * v23];
      *((void *)v24 + 4) = v20;
      *((void *)v24 + 5) = v21;
      *((_OWORD *)v24 + 3) = 0u;
      *((_OWORD *)v24 + 4) = 0u;
      v24[80] = 5;
      uint64_t v97 = v15;
    }
    uint64_t v25 = v99;
    unint64_t v26 = v100;
    uint64_t v5 = (uint64_t)v98;
    __swift_project_boxed_opaque_existential_1(v98, v99);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, unint64_t))(v26 + 120))(v25, v26);
    MEMORY[0x1F4188790](v27, v28);
    v92[2] = v98;
    int64_t v18 = sub_1DE8D4718((void (*)(uint64_t *__return_ptr, void *))sub_1DE8CEB74, (uint64_t)v92, v27);
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void *)(v18 + 16);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    if (!v14) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v17 = 0;
    int64_t v15 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = 56;
    uint64_t v3 = &_s7FeatureON;
    while (1)
    {
      unint64_t v16 = v18 + 8 * v17;
      uint64_t v10 = *(void *)(v16 + 32);
      int64_t v12 = *(void *)(v10 + 16);
      int64_t v30 = *((void *)v15 + 2);
      uint64_t v5 = v30 + v12;
      if (__OFADD__(v30, v12)) {
        break;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v15 + 3) >> 1)
      {
        unint64_t v16 = *(void *)(v10 + 16);
        if (v16) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v30 <= v5) {
          int64_t v32 = v30 + v12;
        }
        else {
          int64_t v32 = v30;
        }
        int64_t v15 = sub_1DE83A960(isUniquelyReferenced_nonNull_native, v32, 1, v15);
        unint64_t v16 = *(void *)(v10 + 16);
        if (v16)
        {
LABEL_20:
          unint64_t v16 = *((void *)v15 + 2);
          if ((uint64_t)((*((void *)v15 + 3) >> 1) - v16) < v12) {
            goto LABEL_95;
          }
          swift_arrayInitWithCopy();
          if (v12)
          {
            uint64_t v33 = *((void *)v15 + 2);
            BOOL v34 = __OFADD__(v33, v12);
            unint64_t v16 = v33 + v12;
            if (v34) {
              goto LABEL_96;
            }
            *((void *)v15 + 2) = v16;
          }
          goto LABEL_10;
        }
      }
      if (v12) {
        goto LABEL_94;
      }
LABEL_10:
      swift_bridgeObjectRelease();
      if (v14 == ++v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = MEMORY[0x1E4FBC860];
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    int64_t v15 = sub_1DE83A960((char *)(v16 > 1), v18, 1, v15);
  }
  int64_t v15 = (char *)MEMORY[0x1E4FBC860];
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1DE813D18((uint64_t)v15);
  uint64_t v35 = v99;
  unint64_t v36 = v100;
  __swift_project_boxed_opaque_existential_1(v98, v99);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, unint64_t))(v36 + 40))(v35, v36);
  if (v38) {
    goto LABEL_59;
  }
  double v39 = *(double *)(v93 + 16);
  uint64_t v40 = *(void *)&v39 & 0x7FF0000000000000;
  if (v37 < 1)
  {
    if (v40 != 0x7FF0000000000000) {
      goto LABEL_37;
    }
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v40 == 0x7FF0000000000000)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  if (v37 <= (uint64_t)v39)
  {
    uint64_t v5 = (uint64_t)v97;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_33;
    }
    goto LABEL_111;
  }
LABEL_37:
  if (v39 <= -9.22337204e18) {
    goto LABEL_99;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  double v45 = *(double *)(v93 + 8);
  uint64_t v46 = *(void *)&v45 & 0x7FF0000000000000;
  if (v37 <= (uint64_t)v39)
  {
    if (v46 != 0x7FF0000000000000) {
      goto LABEL_50;
    }
    goto LABEL_104;
  }
  if (v46 == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_109;
  }
  if (v45 <= -9.22337204e18)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  if (v45 < 9.22337204e18)
  {
    if (v37 <= (uint64_t)v45)
    {
      uint64_t v5 = (uint64_t)v97;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = (uint64_t)sub_1DE83A960(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
      }
      unint64_t v48 = *(void *)(v5 + 16);
      unint64_t v47 = *(void *)(v5 + 24);
      if (v48 >= v47 >> 1) {
        uint64_t v5 = (uint64_t)sub_1DE83A960((char *)(v47 > 1), v48 + 1, 1, (char *)v5);
      }
      *(void *)(v5 + 16) = v48 + 1;
      uint64_t v43 = v5 + 56 * v48;
      long long v44 = xmmword_1DE8EEDE0;
      goto LABEL_58;
    }
LABEL_50:
    if (v45 > -9.22337204e18)
    {
      if (v45 < 9.22337204e18)
      {
        if (v37 > (uint64_t)v45)
        {
          uint64_t v5 = (uint64_t)v97;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = (uint64_t)sub_1DE83A960(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
          }
          unint64_t v50 = *(void *)(v5 + 16);
          unint64_t v49 = *(void *)(v5 + 24);
          if (v50 >= v49 >> 1) {
            uint64_t v5 = (uint64_t)sub_1DE83A960((char *)(v49 > 1), v50 + 1, 1, (char *)v5);
          }
          *(void *)(v5 + 16) = v50 + 1;
          uint64_t v43 = v5 + 56 * v50;
          long long v44 = xmmword_1DE8EEDF0;
          goto LABEL_58;
        }
        goto LABEL_59;
      }
LABEL_106:
      __break(1u);
LABEL_107:
      uint64_t v5 = (uint64_t)sub_1DE83A960(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
LABEL_62:
      unint64_t v57 = *(void *)(v5 + 16);
      unint64_t v56 = *(void *)(v5 + 24);
      if (v57 >= v56 >> 1) {
        uint64_t v5 = (uint64_t)sub_1DE83A960((char *)(v56 > 1), v57 + 1, 1, (char *)v5);
      }
      *(void *)(v5 + 16) = v57 + 1;
      uint64_t v58 = v5 + 56 * v57;
      long long v59 = xmmword_1DE8EEE10;
      goto LABEL_70;
    }
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
LABEL_110:
  __break(1u);
LABEL_111:
  uint64_t v5 = (uint64_t)sub_1DE83A960(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
LABEL_33:
  unint64_t v42 = *(void *)(v5 + 16);
  unint64_t v41 = *(void *)(v5 + 24);
  if (v42 >= v41 >> 1) {
    uint64_t v5 = (uint64_t)sub_1DE83A960((char *)(v41 > 1), v42 + 1, 1, (char *)v5);
  }
  *(void *)(v5 + 16) = v42 + 1;
  uint64_t v43 = v5 + 56 * v42;
  long long v44 = xmmword_1DE8EEDD0;
LABEL_58:
  *(_OWORD *)(v43 + 32) = v44;
  *(_OWORD *)(v43 + 48) = 0u;
  *(_OWORD *)(v43 + 64) = 0u;
  *(unsigned char *)(v43 + 80) = 0;
  uint64_t v97 = (char *)v5;
LABEL_59:
  uint64_t v51 = v99;
  unint64_t v52 = v100;
  __swift_project_boxed_opaque_existential_1(v98, v99);
  char v53 = (*(uint64_t (**)(uint64_t, unint64_t))(v52 + 56))(v51, v52);
  if (v53 != 2)
  {
    char v54 = v53;
    uint64_t v5 = (uint64_t)v97;
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    if ((v54 & 1) == 0)
    {
      if ((v55 & 1) == 0) {
        goto LABEL_107;
      }
      goto LABEL_62;
    }
    if ((v55 & 1) == 0) {
      uint64_t v5 = (uint64_t)sub_1DE83A960(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    }
    unint64_t v61 = *(void *)(v5 + 16);
    unint64_t v60 = *(void *)(v5 + 24);
    if (v61 >= v60 >> 1) {
      uint64_t v5 = (uint64_t)sub_1DE83A960((char *)(v60 > 1), v61 + 1, 1, (char *)v5);
    }
    *(void *)(v5 + 16) = v61 + 1;
    uint64_t v58 = v5 + 56 * v61;
    long long v59 = xmmword_1DE8EEE00;
LABEL_70:
    *(_OWORD *)(v58 + 32) = v59;
    *(_OWORD *)(v58 + 48) = 0u;
    *(_OWORD *)(v58 + 64) = 0u;
    *(unsigned char *)(v58 + 80) = 0;
    uint64_t v97 = (char *)v5;
  }
  uint64_t v62 = v99;
  unint64_t v63 = v100;
  __swift_project_boxed_opaque_existential_1(v98, v99);
  if ((*(uint64_t (**)(uint64_t, unint64_t))(v63 + 64))(v62, v63))
  {
    uint64_t v64 = v99;
    unint64_t v65 = v100;
    __swift_project_boxed_opaque_existential_1(v98, v99);
    (*(void (**)(uint64_t, unint64_t))(v65 + 112))(v64, v65);
    uint64_t v95 = 2831718;
    unint64_t v96 = 0xE300000000000000;
    sub_1DE8E1490();
    swift_bridgeObjectRelease();
    uint64_t v66 = v95;
    unint64_t v67 = v96;
    uint64_t v68 = v97;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v68 = sub_1DE83A960(0, *((void *)v68 + 2) + 1, 1, v68);
    }
    unint64_t v70 = *((void *)v68 + 2);
    unint64_t v69 = *((void *)v68 + 3);
    if (v70 >= v69 >> 1) {
      uint64_t v68 = sub_1DE83A960((char *)(v69 > 1), v70 + 1, 1, v68);
    }
    *((void *)v68 + 2) = v70 + 1;
    unint64_t v71 = &v68[56 * v70];
    *((void *)v71 + 4) = v66;
    *((void *)v71 + 5) = v67;
    *((_OWORD *)v71 + 3) = 0u;
    *((_OWORD *)v71 + 4) = 0u;
    v71[80] = 0;
    uint64_t v97 = v68;
  }
  uint64_t v72 = v99;
  unint64_t v73 = v100;
  __swift_project_boxed_opaque_existential_1(v98, v99);
  if ((*(uint64_t (**)(uint64_t, unint64_t))(v73 + 48))(v72, v73))
  {
    uint64_t v74 = v97;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v74 = sub_1DE83A960(0, *((void *)v74 + 2) + 1, 1, v74);
    }
    unint64_t v76 = *((void *)v74 + 2);
    unint64_t v75 = *((void *)v74 + 3);
    if (v76 >= v75 >> 1) {
      uint64_t v74 = sub_1DE83A960((char *)(v75 > 1), v76 + 1, 1, v74);
    }
    *((void *)v74 + 2) = v76 + 1;
    unint64_t v77 = &v74[56 * v76];
    *((_OWORD *)v77 + 2) = xmmword_1DE8EEE20;
    *((_OWORD *)v77 + 3) = 0u;
    *((_OWORD *)v77 + 4) = 0u;
    v77[80] = 0;
    uint64_t v97 = v74;
  }
  uint64_t v78 = v99;
  unint64_t v79 = v100;
  __swift_project_boxed_opaque_existential_1(v98, v99);
  uint64_t v80 = (*(uint64_t (**)(uint64_t, unint64_t))(v79 + 24))(v78, v79);
  if (v80)
  {
    uint64_t v81 = v80;
    int64_t v82 = *(void *)(v80 + 16);
    if (v82)
    {
      uint64_t v94 = v29;
      sub_1DE84BFF8(0, v82, 0);
      uint64_t v83 = v94;
      uint64_t v93 = v81;
      uint64_t v84 = v81 + 40;
      do
      {
        uint64_t v95 = 724656486;
        unint64_t v96 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_1DE8E1490();
        swift_bridgeObjectRelease();
        uint64_t v85 = v95;
        unint64_t v86 = v96;
        uint64_t v94 = v83;
        unint64_t v88 = *(void *)(v83 + 16);
        unint64_t v87 = *(void *)(v83 + 24);
        if (v88 >= v87 >> 1)
        {
          sub_1DE84BFF8((char *)(v87 > 1), v88 + 1, 1);
          uint64_t v83 = v94;
        }
        v84 += 16;
        *(void *)(v83 + 16) = v88 + 1;
        uint64_t v89 = v83 + 56 * v88;
        *(void *)(v89 + 32) = v85;
        *(void *)(v89 + 40) = v86;
        *(_OWORD *)(v89 + 48) = 0u;
        *(_OWORD *)(v89 + 64) = 0u;
        *(unsigned char *)(v89 + 80) = 1;
        --v82;
      }
      while (v82);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v83 = MEMORY[0x1E4FBC860];
    }
    sub_1DE813D18(v83);
  }
  char v90 = v97;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
  return v90;
}

uint64_t sub_1DE8CC524(void *a1, uint64_t a2, uint64_t a3, long double a4, double a5, double a6, double a7)
{
  uint64_t v10 = a2 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a2 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  double v15 = a5 * a6;
  double v16 = a5 + a7;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (1)
  {
    while (v13)
    {
      unint64_t v23 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v24 = v23 | (v17 << 6);
      if (*(void *)(a3 + 16))
      {
LABEL_4:
        int64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v24);
        uint64_t v20 = *v18;
        uint64_t v19 = v18[1];
        unint64_t v21 = sub_1DE821F78(*(double *)(*(void *)(a2 + 56) + 8 * v24));
        if (v22)
        {
          double v28 = *(double *)(*(void *)(a3 + 56) + 8 * v21);
          swift_bridgeObjectRetain_n();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v41 = sub_1DE821D84(v20, v19);
          uint64_t v29 = a1[2];
          char v43 = v30;
          BOOL v31 = (v30 & 1) == 0;
          uint64_t v32 = v29 + v31;
          if (__OFADD__(v29, v31)) {
            goto LABEL_41;
          }
          if (a1[3] >= v32)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1DE823068();
            }
            unint64_t v35 = v41;
          }
          else
          {
            sub_1DE826324(v32, isUniquelyReferenced_nonNull_native);
            unint64_t v33 = sub_1DE821D84(v20, v19);
            if ((v43 & 1) != (v34 & 1)) {
              goto LABEL_43;
            }
            unint64_t v35 = v33;
          }
          double v36 = 1.0 - pow((v15 + v28) / v16, a4);
          if (v43)
          {
            *(double *)(a1[7] + 8 * v35) = v36;
          }
          else
          {
            a1[(v35 >> 6) + 8] |= 1 << v35;
            uint64_t v37 = (uint64_t *)(a1[6] + 16 * v35);
            *uint64_t v37 = v20;
            v37[1] = v19;
            *(double *)(a1[7] + 8 * v35) = v36;
            uint64_t v38 = a1[2];
            BOOL v25 = __OFADD__(v38, 1);
            uint64_t v39 = v38 + 1;
            if (v25) {
              goto LABEL_42;
            }
            a1[2] = v39;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
    }
    BOOL v25 = __OFADD__(v17++, 1);
    if (v25)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_38;
    }
    unint64_t v26 = *(void *)(v10 + 8 * v17);
    if (!v26) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v17 << 6);
    if (*(void *)(a3 + 16)) {
      goto LABEL_4;
    }
  }
  int64_t v27 = v17 + 1;
  if (v17 + 1 >= v14) {
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v10 + 8 * v27);
  if (v26) {
    goto LABEL_19;
  }
  int64_t v27 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v10 + 8 * v27);
  if (v26) {
    goto LABEL_19;
  }
  int64_t v27 = v17 + 3;
  if (v17 + 3 >= v14) {
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v10 + 8 * v27);
  if (v26) {
    goto LABEL_19;
  }
  int64_t v27 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_38:
    swift_release();
    return (uint64_t)a1;
  }
  unint64_t v26 = *(void *)(v10 + 8 * v27);
  if (v26)
  {
LABEL_19:
    int64_t v17 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v17 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_38;
    }
    unint64_t v26 = *(void *)(v10 + 8 * v17);
    ++v27;
    if (v26) {
      goto LABEL_20;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t sub_1DE8CC83C(uint64_t a1, void (*a2)(void *, uint64_t, uint64_t, long long *), double a3, double a4, double a5)
{
  uint64_t v6 = v5;
  *(double *)int64_t v27 = a3;
  *(double *)&v27[1] = a4;
  *(double *)&v27[2] = a5;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = *(void *)(a1 + 56) + 24 * i;
    uint64_t v24 = *(void *)(v23 + 16);
    long long v25 = *(_OWORD *)v23;
    uint64_t v26 = v24;
    swift_bridgeObjectRetain();
    a2(v27, v21, v22, &v25);
    if (v6)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v28) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    if (!v18) {
      break;
    }
LABEL_17:
    unint64_t v12 = (v18 - 1) & v18;
  }
  int64_t v19 = v14 + 1;
  if (v14 + 1 >= v28) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 2;
  if (v14 + 2 >= v28) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 3;
  if (v14 + 3 >= v28) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 4;
  if (v14 + 4 >= v28) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v14 = v19;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v28) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1DE8CCA44(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v29 = a1;
  uint64_t v14 = a2 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a2 + 56);
  int64_t v27 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = (char *)swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    long long v25 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v26 = v25[1];
    v28[0] = *v25;
    v28[1] = v26;
    swift_bridgeObjectRetain();
    sub_1DE8C6E34(&v29, v28, a3, a4, a5, a6, a7);
    if (v7)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (char *)swift_bridgeObjectRelease();
    }
    uint64_t result = (char *)swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v27) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v14 + 8 * v19);
    if (!v23) {
      break;
    }
LABEL_17:
    unint64_t v17 = (v23 - 1) & v23;
  }
  int64_t v24 = v19 + 1;
  if (v19 + 1 >= v27) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v19 + 2;
  if (v19 + 2 >= v27) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v19 + 3;
  if (v19 + 3 >= v27) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v19 + 4;
  if (v19 + 4 >= v27)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23)
  {
LABEL_16:
    int64_t v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v27) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v14 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CCC4C(void *a1, uint64_t a2, uint64_t a3, long double a4)
{
  uint64_t v44 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v45 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    while (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      if (*(void *)(a3 + 16)) {
        goto LABEL_23;
      }
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v12 >= v45) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v44 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v45) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v44 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v45) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v44 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v45) {
            goto LABEL_39;
          }
          unint64_t v13 = *(void *)(v44 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (*(void *)(a3 + 16))
    {
LABEL_23:
      int64_t v47 = v9;
      uint64_t v15 = *(void *)(a2 + 48) + 56 * v11;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v15 + 24);
      uint64_t v21 = *(void *)(v15 + 32);
      uint64_t v20 = *(void *)(v15 + 40);
      char v22 = *(unsigned char *)(v15 + 48);
      long double v23 = *(double *)(*(void *)(a2 + 56) + 8 * v11);
      sub_1DE813E10(*(void *)v15, v17, v18, v19, v21, v20, v22);
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1DE821D84(v16, v17);
      if (v25)
      {
        long double v26 = *(double *)(*(void *)(a3 + 56) + 8 * v24);
        long double v27 = 1.0;
        if (a4 > 0.0) {
          long double v27 = pow(v23, a4);
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v28 = sub_1DE821D84(v16, v17);
        uint64_t v29 = a1[2];
        char v42 = v30;
        BOOL v31 = (v30 & 1) == 0;
        uint64_t v32 = v29 + v31;
        if (__OFADD__(v29, v31)) {
          goto LABEL_42;
        }
        if (a1[3] >= v32)
        {
          unint64_t v40 = v28;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1DE823068();
          }
        }
        else
        {
          sub_1DE826324(v32, isUniquelyReferenced_nonNull_native);
          unint64_t v40 = sub_1DE821D84(v16, v17);
          if ((v42 & 1) != (v33 & 1)) {
            goto LABEL_44;
          }
        }
        double v34 = pow(v26, v27);
        if (v42)
        {
          *(double *)(a1[7] + 8 * v40) = v34;
        }
        else
        {
          a1[(v40 >> 6) + 8] |= 1 << v40;
          unint64_t v35 = (uint64_t *)(a1[6] + 16 * v40);
          *unint64_t v35 = v16;
          v35[1] = v17;
          *(double *)(a1[7] + 8 * v40) = v34;
          uint64_t v36 = a1[2];
          BOOL v37 = __OFADD__(v36, 1);
          uint64_t v38 = v36 + 1;
          if (v37) {
            goto LABEL_43;
          }
          a1[2] = v38;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DE864B40(v16, v17, v18, v19, v21, v20, v22);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1DE864B40(v16, v17, v18, v19, v21, v20, v22);
      }
      int64_t v9 = v47;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v45)
  {
LABEL_39:
    swift_release();
    return (uint64_t)a1;
  }
  unint64_t v13 = *(void *)(v44 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v45) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v44 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

void *sub_1DE8CD024(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  int64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (!*(void *)(a2 + 16))
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
LABEL_4:
      sub_1DE8CEA74((uint64_t)&v13, qword_1EBEA9DA0);
      goto LABEL_5;
    }
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1DE821D84(v6, v7);
    if (v9)
    {
      sub_1DE8CEAE8(*(void *)(a2 + 56) + 40 * v8, (uint64_t)&v13);
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v14 + 1)) {
      goto LABEL_4;
    }
    sub_1DE8CEAD0(&v13, (uint64_t)v16);
    sub_1DE8CEAD0(v16, (uint64_t)&v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1DE83A828(0, v5[2] + 1, 1, v5);
    }
    unint64_t v11 = v5[2];
    unint64_t v10 = v5[3];
    if (v11 >= v10 >> 1) {
      uint64_t v5 = sub_1DE83A828((void *)(v10 > 1), v11 + 1, 1, v5);
    }
    void v5[2] = v11 + 1;
    sub_1DE8CEAD0(&v13, (uint64_t)&v5[5 * v11 + 4]);
LABEL_5:
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DE8CD1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v8) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_20:
    uint64_t v16 = *(void *)(a1 + 56) + 80 * v12;
    if ((*(unsigned char *)(v16 + 64) & 1) == 0 && (*(unsigned char *)(v16 + 72) & 1) == 0)
    {
      uint64_t v25 = sub_1DE8E1A80();
      uint64_t v26 = v17;
      sub_1DE8E1A80();
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      if (*(void *)(a3 + 16) && (unint64_t v18 = sub_1DE821D84(v25, v26), (v19 & 1) != 0))
      {
        uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 8 * v18);
        swift_bridgeObjectRelease();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DE83ACC8(0, *(void *)(v23 + 16) + 1, 1, (char *)v23);
          uint64_t v23 = result;
        }
        unint64_t v22 = *(void *)(v23 + 16);
        unint64_t v21 = *(void *)(v23 + 24);
        if (v22 >= v21 >> 1)
        {
          uint64_t result = (uint64_t)sub_1DE83ACC8((char *)(v21 > 1), v22 + 1, 1, (char *)v23);
          uint64_t v23 = result;
        }
        *(void *)(v23 + 16) = v22 + 1;
        *(void *)(v23 + 8 * v22 + 32) = v20;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v8) {
    goto LABEL_33;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v8) {
    goto LABEL_33;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v8) {
    goto LABEL_33;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v8)
  {
LABEL_33:
    swift_release();
    return v23;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CD478(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v58 = a2;
  uint64_t v39 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v40 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    unint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(a1 + 56) + 80 * v10;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    char v21 = *(unsigned char *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    char v23 = *(unsigned char *)(v17 + 40);
    uint64_t v24 = *(void *)(v17 + 48);
    char v25 = *(unsigned char *)(v17 + 56);
    int v26 = *(_DWORD *)(v17 + 60);
    char v27 = *(unsigned char *)(v17 + 64);
    int v28 = *(_DWORD *)(v17 + 68);
    char v29 = *(unsigned char *)(v17 + 72);
    char v30 = *(unsigned char *)(v17 + 73);
    char v31 = *(unsigned char *)(v17 + 74);
    char v32 = *(unsigned char *)(v17 + 75);
    char v33 = *(unsigned char *)(v17 + 76);
    LOBYTE(v17) = *(unsigned char *)(v17 + 77);
    uint64_t v41 = v18;
    char v42 = v19;
    uint64_t v43 = v20;
    char v44 = v21;
    uint64_t v45 = v22;
    char v46 = v23;
    uint64_t v47 = v24;
    char v48 = v25;
    int v49 = v26;
    char v50 = v27;
    int v51 = v28;
    char v52 = v29;
    char v53 = v30;
    char v54 = v31;
    char v55 = v32;
    char v56 = v33;
    char v57 = v17;
    swift_bridgeObjectRetain();
    uint64_t v34 = v58(v15, v16, &v41);
    char v36 = v35;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DE83ADC4(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v38 = *(void *)(v8 + 16);
      unint64_t v37 = *(void *)(v8 + 24);
      if (v38 >= v37 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DE83ADC4((char *)(v37 > 1), v38 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v38 + 1;
      *(void *)(v8 + 8 * v38 + 32) = v34;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v40) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v39 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v40) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v39 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v40) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v39 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v40) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v39 + 8 * v7);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v40)
  {
LABEL_28:
    swift_release();
    return v8;
  }
  unint64_t v12 = *(void *)(v39 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v40) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v39 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

char *sub_1DE8CD768(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = (unsigned int *)(swift_bridgeObjectRetain() + 36);
  unint64_t v5 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v6 = a2(*(v4 - 1), *v4);
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v5 = sub_1DE83ACC8(0, *((void *)v5 + 2) + 1, 1, v5);
      }
      unint64_t v10 = *((void *)v5 + 2);
      unint64_t v9 = *((void *)v5 + 3);
      if (v10 >= v9 >> 1) {
        unint64_t v5 = sub_1DE83ACC8((char *)(v9 > 1), v10 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v10 + 1;
      *(void *)&v5[8 * v10 + 32] = v8;
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DE8CD874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, void))(*(void *)(a4 + 8) + 40))(a3, *(void *)(a4 + 8));
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9D98);
  uint64_t v4 = sub_1DE8E1800();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DE8CD92C()
{
  return swift_release();
}

uint64_t sub_1DE8CD934(uint64_t a1, uint64_t a2)
{
  return sub_1DE8C2700(a1, a2, *(void *)(v2 + 16));
}

void sub_1DE8CD950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (*(void *)(a2 + 16))
  {
    long double v11 = *(double *)(a6 + 72);
    double v12 = MEMORY[0x1F4188790](a1, a2);
    v21[2] = a9;
    v21[3] = a10;
    v21[4] = v13;
    _OWORD v21[5] = v14;
    v21[6] = a5;
    *(double *)&v21[7] = v12;
    sub_1DE85FA8C((void (*)(void *, void *))sub_1DE8CEB4C, 0.0, 0.0, (uint64_t)v21, v15);
    pow(v16, v11);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v19 = swift_getAssociatedTypeWitness();
    uint64_t v20 = swift_getAssociatedConformanceWitness();
    ReadonlyAggregateType.personalizationValue.getter(v19, v20);
  }
}

double sub_1DE8CDAF4(uint64_t a1, double a2, long double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8)
{
  double v10 = a8[2];
  double v11 = a8[5];
  double v26 = a8[6];
  double v12 = a8[7];
  double v13 = a8[8];
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1DE8CC83C(v14, (void (*)(void *, uint64_t, uint64_t, long long *))sub_1DE8CEA38, 0.0, 0.0, 0.0);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  swift_bridgeObjectRelease();
  double v21 = pow(v13 + v10 * v20 + (1.0 - v10) * v16, a3);
  if (v21 > 0.0)
  {
    double v22 = v18 / v21;
    if (v12 <= 0.0) {
      return (1.0 - v11) * v22 + v11 * sub_1DE8C832C(a1);
    }
    double v23 = v26;
    if (v26 <= 0.0) {
      return (1.0 - v11) * v22 + v11 * sub_1DE8C832C(a1);
    }
LABEL_7:
    double v11 = v11 * ((v12 + -1.0) * exp2(-a2 / v23) + 1.0);
    return (1.0 - v11) * v22 + v11 * sub_1DE8C832C(a1);
  }
  if (v12 <= 0.0)
  {
    double v22 = 0.0;
    return (1.0 - v11) * v22 + v11 * sub_1DE8C832C(a1);
  }
  double v23 = v26;
  double v22 = 0.0;
  if (v26 > 0.0) {
    goto LABEL_7;
  }
  return (1.0 - v11) * v22 + v11 * sub_1DE8C832C(a1);
}

uint64_t sub_1DE8CDC74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  char v32 = (unint64_t *)result;
  uint64_t v33 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v6 = a3 + 64;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v7;
  uint64_t v35 = v6;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      if (*(void *)(v4 + 16)) {
        goto LABEL_23;
      }
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v14 >= v36) {
      return sub_1DE8CAAC0(v32, a2, v33, a3);
    }
    unint64_t v15 = *(void *)(v35 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v36) {
        return sub_1DE8CAAC0(v32, a2, v33, a3);
      }
      unint64_t v15 = *(void *)(v35 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v36) {
          return sub_1DE8CAAC0(v32, a2, v33, a3);
        }
        unint64_t v15 = *(void *)(v35 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(void *)(v4 + 16))
    {
LABEL_23:
      double v17 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      uint64_t v20 = sub_1DE8E1BD0();
      uint64_t v21 = v4;
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = v20 & ~v22;
      if (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v24 = *(void *)(v21 + 48);
      char v25 = (void *)(v24 + 16 * v23);
      BOOL v26 = *v25 == v19 && v25[1] == v18;
      if (v26 || (sub_1DE8E1AC0() & 1) != 0)
      {
LABEL_36:
        uint64_t result = swift_bridgeObjectRelease();
        *(unint64_t *)((char *)v32 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        BOOL v30 = __OFADD__(v33++, 1);
        uint64_t v4 = v21;
        if (v30)
        {
          __break(1u);
          return sub_1DE8CAAC0(v32, a2, v33, a3);
        }
      }
      else
      {
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          int v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v19 && v28[1] == v18;
          if (v29 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_36;
          }
        }
LABEL_5:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v21;
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v36) {
    return sub_1DE8CAAC0(v32, a2, v33, a3);
  }
  unint64_t v15 = *(void *)(v35 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v36) {
      return sub_1DE8CAAC0(v32, a2, v33, a3);
    }
    unint64_t v15 = *(void *)(v35 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CDF34(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v34 = (unint64_t *)result;
  uint64_t v35 = 0;
  int64_t v5 = 0;
  uint64_t v8 = a3[8];
  uint64_t v6 = a3 + 8;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *((unsigned char *)v6 - 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v7;
  uint64_t v37 = v6;
  int64_t v38 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v40 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      if (*(void *)(v4 + 16)) {
        goto LABEL_23;
      }
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v14 >= v38) {
      return sub_1DE8CAAC0(v34, a2, v35, (uint64_t)a3);
    }
    unint64_t v15 = v37[v14];
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v38) {
        return sub_1DE8CAAC0(v34, a2, v35, (uint64_t)a3);
      }
      unint64_t v15 = v37[v5];
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v38) {
          return sub_1DE8CAAC0(v34, a2, v35, (uint64_t)a3);
        }
        unint64_t v15 = v37[v5];
        if (!v15) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(void *)(v4 + 16))
    {
LABEL_23:
      double v17 = (uint64_t *)(a3[6] + 16 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      int v39 = *(unsigned __int8 *)(a3[7] + (v13 << 6) + 56);
      sub_1DE8E1BA0();
      swift_bridgeObjectRetain();
      sub_1DE8E1480();
      uint64_t v20 = sub_1DE8E1BD0();
      uint64_t v21 = v4;
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = v20 & ~v22;
      if (((*(void *)(v40 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
        goto LABEL_37;
      }
      uint64_t v24 = *(void *)(v21 + 48);
      char v25 = (void *)(v24 + 16 * v23);
      BOOL v26 = *v25 == v19 && v25[1] == v18;
      if (v26 || (sub_1DE8E1AC0() & 1) != 0)
      {
LABEL_5:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v21;
        if (v39)
        {
          *(unint64_t *)((char *)v34 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          if (__OFADD__(v35++, 1))
          {
            __break(1u);
            return sub_1DE8CAAC0(v34, a2, v35, (uint64_t)a3);
          }
        }
      }
      else
      {
        unint64_t v27 = v23 + 1;
        uint64_t v28 = ~v22;
        for (unint64_t i = v27 & ~v22; ((*(void *)(v40 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v28)
        {
          BOOL v30 = (void *)(v24 + 16 * i);
          BOOL v31 = *v30 == v19 && v30[1] == v18;
          if (v31 || (sub_1DE8E1AC0() & 1) != 0) {
            goto LABEL_5;
          }
        }
LABEL_37:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v21;
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v38) {
    return sub_1DE8CAAC0(v34, a2, v35, (uint64_t)a3);
  }
  unint64_t v15 = v37[v16];
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v38) {
      return sub_1DE8CAAC0(v34, a2, v35, (uint64_t)a3);
    }
    unint64_t v15 = v37[v5];
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1DE8CE21C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  v16[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, v12);
    bzero((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v13 = a3((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v10);
    swift_bridgeObjectRetain();
    uint64_t v13 = a3((char *)v14, v9, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1E01D4C70](v14, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v13;
}

uint64_t sub_1DE8CE3E4(double *a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, double a9, double a10, float a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18, double a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t *a29,uint64_t a30,uint64_t a31,uint64_t a32,double a33)
{
  unint64_t v87 = a1;
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v81 = a5;
  int64_t v82 = a6;
  unint64_t v79 = a3;
  unint64_t v80 = a4;
  uint64_t v32 = type metadata accessor for ClassicArticleData();
  MEMORY[0x1F4188790](v32, v33);
  uint64_t v86 = (uint64_t)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89[2] = a19;
  v90[0] = a17;
  LOBYTE(v89[0]) = a18;
  v89[1] = a9;
  uint64_t v35 = *(void *)(a2 + 8);
  uint64_t v36 = *(void *)(a2 + 16);
  if (*(void *)(a25 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_1DE821D84(v35, v36);
    if (v38)
    {
      unint64_t v78 = *(void *)(*(void *)(a25 + 56) + 8 * v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v78 = sub_1DE85CFD8(MEMORY[0x1E4FBC860]);
LABEL_6:
  uint64_t v77 = *(void *)(a27 + 16);
  if (v77)
  {
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_1DE821D84(v35, v36);
    if (v47) {
      a11 = *(float *)(*(void *)(a27 + 56) + 4 * v46);
    }
    swift_bridgeObjectRelease();
    uint64_t v76 = LODWORD(a11);
  }
  else
  {
    uint64_t v76 = 0;
  }
  if (*(void *)(a28 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v48 = sub_1DE821D84(v35, v36);
    if (v49) {
      uint64_t v75 = *(void *)(*(void *)(a28 + 56) + 8 * v48);
    }
    else {
      uint64_t v75 = 0;
    }
    int v74 = v49 ^ 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v75 = 0;
    int v74 = 1;
  }
  uint64_t v50 = *(void *)(a30 + 16);
  uint64_t v85 = a2;
  if (v50)
  {
    int v51 = (uint64_t *)(a2 + *(int *)(v32 + 56));
    uint64_t v52 = *v51;
    uint64_t v53 = v51[1];
    swift_bridgeObjectRetain();
    unint64_t v54 = sub_1DE821D84(v52, v53);
    double v55 = 1.0;
    if (v56) {
      double v55 = *(double *)(*(void *)(a30 + 56) + 8 * v54);
    }
    uint64_t v57 = v35;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v57 = v35;
    double v55 = 1.0;
  }
  uint64_t v58 = a23;
  uint64_t v59 = a24;
  uint64_t v60 = a21;
  uint64_t v61 = a20;
  if (*(void *)(a31 + 16))
  {
    uint64_t v71 = a24;
    uint64_t v72 = a20;
    uint64_t v73 = a21;
    swift_bridgeObjectRetain();
    unint64_t v62 = sub_1DE821D84(v57, v36);
    if (v63)
    {
      uint64_t v64 = *(void *)(*(void *)(a31 + 56) + 8 * v62);
      swift_retain();
    }
    else
    {
      uint64_t v64 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v58 = a23;
    uint64_t v60 = v73;
    uint64_t v61 = v72;
    uint64_t v59 = v71;
  }
  else
  {
    uint64_t v64 = 0;
  }
  BOOL v88 = v77 == 0;
  uint64_t v65 = v85;
  uint64_t v66 = sub_1DE8C3714(v79, v80, v85, a10, v55, v39, v81, v82, v83, v84, v40, v41, v42, v43, v44, v45, v90, v89, v61,
          v60,
          a22,
          v58,
          v59,
          v78,
          a26 & 1,
          v76 | ((unint64_t)(v77 == 0) << 32),
          v75,
          v74 & 1,
          a29,
          v64,
          a32,
          a33);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v67 = v86;
  sub_1DE83603C(v65, v86);
  swift_retain();
  uint64_t v68 = v87;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v89[0] = *v68;
  *uint64_t v68 = -0.0;
  sub_1DE829EDC(v66, v67, isUniquelyReferenced_nonNull_native);
  *uint64_t v68 = v89[0];
  swift_bridgeObjectRelease();
  sub_1DE8360A0(v67);
  return swift_release();
}

uint64_t sub_1DE8CE7C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1DE8CE80C()
{
  unint64_t result = qword_1EBEA9CB8[0];
  if (!qword_1EBEA9CB8[0])
  {
    type metadata accessor for ClassicArticleData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBEA9CB8);
  }
  return result;
}

double sub_1DE8CE864(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  if (a3) {
    return *(double *)(a5 + 56);
  }
  uint64_t v13 = *a7;
  if (*(void *)(a6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1DE821D84(a1, a2);
    if (v16)
    {
      uint64_t v17 = 48;
      if (a4) {
        uint64_t v17 = 24;
      }
      double v8 = *(double *)(*(void *)(a6 + 56) + (v15 << 6) + v17);
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  double v8 = 1.0;
  if (!*(void *)(a8 + 16)) {
    return v8;
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1DE821D84(a1, a2);
  if ((v19 & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  uint64_t v20 = *(void *)(a8 + 56) + 80 * v18;
  uint64_t v21 = *(void *)(v20 + 48);
  char v22 = *(unsigned char *)(v20 + 56);
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    if (*(void *)(v13 + 16))
    {
      unint64_t v23 = sub_1DE821DFC(v21);
      if (v24) {
        return *(double *)(*(void *)(v13 + 56) + 8 * v23);
      }
    }
  }
  return v8;
}

uint64_t _s20UserCohortMembershipVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s20UserCohortMembershipVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *_s20UserCohortMembershipVMa()
{
  return &_s20UserCohortMembershipVN;
}

uint64_t sub_1DE8CE9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t _s17HeadlineEvaluatorVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DE8CE9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DE8C9424(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1DE8CEA14(uint64_t a1, uint64_t a2)
{
  return sub_1DE8C94B0(a1, a2, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 32));
}

uint64_t sub_1DE8CEA38(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  return sub_1DE8C8108(a1, a2, a3, a4, *(void *)(v4 + 16), *(unsigned char *)(v4 + 32), *(unsigned char *)(v4 + 33), *(unsigned char *)(v4 + 34), *(double *)(v4 + 24), *(void *)(v4 + 40));
}

uint64_t sub_1DE8CEA74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DE8CEAD0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1DE8CEAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DE8CEB4C(double *a1, uint64_t a2)
{
  return sub_1DE8C7D88(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(Swift::Double *)(v2 + 56));
}

uint64_t sub_1DE8CEB74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DE8D4F4C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1DE8CEB94()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DE8CEBCC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE8C87C8(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 80), *(void *)(v1 + 88), a1, *(Swift::Double *)(v1 + 128), *(void *)(v1 + 96), *(void **)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t sub_1DE8CEC10@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE8C8DA8(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), a1, *(Swift::Double *)(v1 + 144), *(void *)(v1 + 96), *(uint64_t **)(v1 + 104), *(void *)(v1 + 112), *(void **)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136));
}

uint64_t sub_1DE8CEC5C(uint64_t *a1, uint64_t *a2)
{
  return sub_1DE8C6A0C(a1, a2, *(void **)(v2 + 32), *(Swift::Double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_1DE8CEC84(void *a1, uint64_t *a2)
{
  return sub_1DE8C5EA4(a1, a2, v2[4], v2[2], v2[3]);
}

uint64_t sub_1DE8CECB0()
{
  sub_1DE8E1600();
  swift_getWitnessTable();
  sub_1DE8E14C0();
  return v1;
}

uint64_t sub_1DE8CED58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 24))(a2);
  if (__OFADD__(v5, result & 1)) {
    __break(1u);
  }
  else {
    *a3 = v5 + (result & 1);
  }
  return result;
}

uint64_t sub_1DE8CEDB0()
{
  return swift_bridgeObjectRetain();
}

double sub_1DE8CEDB8()
{
  return *(double *)(v0 + 24);
}

double sub_1DE8CEDC0()
{
  return *(double *)(v0 + 32);
}

double sub_1DE8CEDC8()
{
  return *(double *)(v0 + 40);
}

double sub_1DE8CEDD0()
{
  return *(double *)(v0 + 48);
}

double sub_1DE8CEDD8()
{
  return *(double *)(v0 + 56);
}

double sub_1DE8CEDE0()
{
  return *(double *)(v0 + 64);
}

uint64_t sub_1DE8CEDE8()
{
  return swift_bridgeObjectRetain();
}

double sub_1DE8CEDF0()
{
  return *(double *)(v0 + 80);
}

double sub_1DE8CEDF8()
{
  return *(double *)(v0 + 88);
}

double sub_1DE8CEE00()
{
  return *(double *)(v0 + 96);
}

double sub_1DE8CEE08()
{
  return *(double *)(v0 + 104);
}

double sub_1DE8CEE10()
{
  return *(double *)(v0 + 112);
}

double sub_1DE8CEE18()
{
  return *(double *)(v0 + 120);
}

double sub_1DE8CEE20()
{
  swift_beginAccess();
  return *(double *)(v0 + 128);
}

uint64_t sub_1DE8CEE54(double a1)
{
  uint64_t result = swift_beginAccess();
  *(double *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_1DE8CEE94())()
{
  return j_j__swift_endAccess_1;
}

double sub_1DE8CEEE8()
{
  return *(double *)(v0 + 136);
}

double sub_1DE8CEEF0()
{
  return *(double *)(v0 + 144);
}

double sub_1DE8CEEF8()
{
  return *(double *)(v0 + 152);
}

double sub_1DE8CEF00()
{
  return *(double *)(v0 + 160);
}

uint64_t sub_1DE8CEF08()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8CEF10()
{
  return swift_bridgeObjectRetain();
}

double sub_1DE8CEF18()
{
  return *(double *)(v0 + 184);
}

double sub_1DE8CEF20()
{
  return *(double *)(v0 + 192);
}

double sub_1DE8CEF28()
{
  return *(double *)(v0 + 200);
}

double sub_1DE8CEF30()
{
  return *(double *)(v0 + 208);
}

double sub_1DE8CEF38()
{
  return *(double *)(v0 + 216);
}

double sub_1DE8CEF40()
{
  return *(double *)(v0 + 224);
}

double sub_1DE8CEF48()
{
  return *(double *)(v0 + 232);
}

double sub_1DE8CEF50()
{
  return *(double *)(v0 + 240);
}

double sub_1DE8CEF58()
{
  return *(double *)(v0 + 248);
}

double sub_1DE8CEF60()
{
  return *(double *)(v0 + 256);
}

double sub_1DE8CEF68()
{
  return *(double *)(v0 + 264);
}

double sub_1DE8CEF70()
{
  return *(double *)(v0 + 272);
}

double sub_1DE8CEF78()
{
  return *(double *)(v0 + 280);
}

double sub_1DE8CEF80()
{
  return *(double *)(v0 + 288);
}

double sub_1DE8CEF88()
{
  return *(double *)(v0 + 296);
}

double sub_1DE8CEF90()
{
  swift_beginAccess();
  return *(double *)(v0 + 304);
}

uint64_t sub_1DE8CEFC4(double a1)
{
  uint64_t result = swift_beginAccess();
  *(double *)(v1 + 304) = a1;
  return result;
}

uint64_t (*sub_1DE8CF004())()
{
  return j__swift_endAccess_1;
}

uint64_t sub_1DE8CF05C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8CF064()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8CF06C()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1DE8CF074()
{
  return *(unsigned int *)(v0 + 336) | ((unint64_t)*(unsigned __int8 *)(v0 + 340) << 32);
}

double sub_1DE8CF098()
{
  return *(double *)(v0 + 344);
}

uint64_t sub_1DE8CF0A0()
{
  return *(void *)(v0 + 352);
}

double sub_1DE8CF0B0()
{
  return *(double *)(v0 + 368);
}

double sub_1DE8CF0B8()
{
  return *(double *)(v0 + 376);
}

double sub_1DE8CF0C0()
{
  return *(double *)(v0 + 384);
}

double sub_1DE8CF0C8()
{
  return *(double *)(v0 + 392);
}

double sub_1DE8CF0D0()
{
  return *(double *)(v0 + 400);
}

double sub_1DE8CF0D8()
{
  return *(double *)(v0 + 408);
}

double sub_1DE8CF0E0()
{
  return *(double *)(v0 + 416);
}

double sub_1DE8CF0E8()
{
  return *(double *)(v0 + 424);
}

double sub_1DE8CF0F0()
{
  return *(double *)(v0 + 432);
}

uint64_t sub_1DE8CF0F8()
{
  return *(void *)(v0 + 440);
}

uint64_t sub_1DE8CF108()
{
  return *(void *)(v0 + 456);
}

uint64_t sub_1DE8CF118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, long long a17, long long a18, long long a19, long long a20,uint64_t a21,long long a22,long long a23,long long a24,long long a25,long long a26,long long a27,long long a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,long long a34,long long a35,long long a36,long long a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,char a42)
{
  *(void *)(v42 + 16) = a1;
  *(double *)(v42 + 24) = a9;
  *(double *)(v42 + 32) = a10;
  *(double *)(v42 + 40) = a11;
  *(double *)(v42 + 48) = a12;
  *(double *)(v42 + 56) = a13;
  *(double *)(v42 + 64) = a14;
  *(void *)(v42 + 72) = a2;
  *(double *)(v42 + 80) = a15;
  *(double *)(v42 + 88) = a16;
  *(_OWORD *)(v42 + 96) = a17;
  *(_OWORD *)(v42 + 112) = a18;
  *(_OWORD *)(v42 + 128) = a19;
  *(_OWORD *)(v42 + 144) = a20;
  *(void *)(v42 + 160) = a21;
  *(void *)(v42 + 168) = a3;
  *(void *)(v42 + 176) = a4;
  *(_OWORD *)(v42 + 184) = a22;
  *(_OWORD *)(v42 + 200) = a23;
  *(_OWORD *)(v42 + 216) = a24;
  *(_OWORD *)(v42 + 232) = a25;
  *(_OWORD *)(v42 + 248) = a26;
  *(_OWORD *)(v42 + 264) = a27;
  *(_OWORD *)(v42 + 280) = a28;
  *(void *)(v42 + 296) = a29;
  *(void *)(v42 + 304) = a30;
  *(void *)(v42 + 312) = a5;
  *(void *)(v42 + 320) = a6;
  *(void *)(v42 + 328) = a7;
  *(_DWORD *)(v42 + 336) = a8;
  *(unsigned char *)(v42 + 340) = BYTE4(a8) & 1;
  *(void *)(v42 + 344) = a31;
  *(void *)(v42 + 352) = a32;
  *(unsigned char *)(v42 + 360) = a33 & 1;
  *(_OWORD *)(v42 + 368) = a34;
  *(_OWORD *)(v42 + 384) = a35;
  *(_OWORD *)(v42 + 400) = a36;
  *(_OWORD *)(v42 + 416) = a37;
  *(void *)(v42 + 432) = a38;
  *(void *)(v42 + 440) = a39;
  *(unsigned char *)(v42 + 448) = a40 & 1;
  *(void *)(v42 + 456) = a41;
  *(unsigned char *)(v42 + 464) = a42 & 1;
  return v42;
}

uint64_t sub_1DE8CF224(char a1)
{
  uint64_t result = 0x43656C6369747261;
  switch(a1)
  {
    case 1:
      return 0x6C754D6F69647561;
    case 2:
      return 0xD000000000000012;
    case 3:
    case 4:
    case 8:
    case 23:
    case 33:
    case 49:
      return 0xD000000000000014;
    case 5:
      uint64_t v3 = 0x746E65696C63;
      goto LABEL_26;
    case 6:
      return 0xD000000000000015;
    case 7:
      return 0xD000000000000011;
    case 9:
      return 0x69737265766E6F63;
    case 10:
      return 0xD000000000000018;
    case 11:
      return 0xD000000000000020;
    case 12:
      return 0xD000000000000013;
    case 13:
      return 0xD000000000000012;
    case 14:
      return 0xD000000000000013;
    case 15:
      return 0xD000000000000016;
    case 16:
      return 0xD000000000000012;
    case 17:
      return 0xD000000000000011;
    case 18:
      return 0xD000000000000016;
    case 19:
      return 0xD000000000000012;
    case 20:
      return 0xD00000000000001ALL;
    case 21:
      return 0xD000000000000011;
    case 22:
      return 0xD000000000000015;
    case 24:
      unsigned int v4 = 1684104562;
      goto LABEL_24;
    case 25:
      return 0x64656E657473696CLL;
    case 26:
      unsigned int v4 = 1852138867;
LABEL_24:
      uint64_t result = v4 | 0x616E655000000000;
      break;
    case 27:
      uint64_t v3 = 0x726576726573;
LABEL_26:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6353000000000000;
      break;
    case 28:
      uint64_t result = 0x6576726553776172;
      break;
    case 29:
      uint64_t result = 0xD000000000000016;
      break;
    case 30:
      uint64_t result = 0xD000000000000011;
      break;
    case 31:
      uint64_t result = 0xD000000000000010;
      break;
    case 32:
      uint64_t result = 0xD000000000000016;
      break;
    case 34:
      uint64_t result = 0xD000000000000010;
      break;
    case 35:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 36:
      uint64_t result = 0xD000000000000010;
      break;
    case 37:
      uint64_t result = 0xD000000000000015;
      break;
    case 38:
      uint64_t result = 0x6867696557676174;
      break;
    case 39:
      uint64_t result = 0xD000000000000012;
      break;
    case 40:
      uint64_t result = 0x6E69646465626D65;
      break;
    case 41:
      uint64_t result = 0xD000000000000011;
      break;
    case 42:
      uint64_t result = 0x726F635369626174;
      break;
    case 43:
      uint64_t result = 0xD000000000000015;
      break;
    case 44:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 45:
      uint64_t result = 0xD000000000000020;
      break;
    case 46:
      uint64_t result = 0xD000000000000016;
      break;
    case 47:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 48:
      uint64_t result = 0xD000000000000020;
      break;
    case 50:
      uint64_t result = 0x696C7069746C756DLL;
      break;
    case 51:
      uint64_t result = 0x72656E65706D6164;
      break;
    case 52:
      uint64_t result = 0x6154776F64616873;
      break;
    case 53:
      uint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE8CF874(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8CF888()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8CF8D0()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8CF8FC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8CF940()
{
  return sub_1DE8CF224(*v0);
}

uint64_t sub_1DE8CF948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8D1A24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8CF970()
{
  return 0;
}

void sub_1DE8CF97C(unsigned char *a1@<X8>)
{
  *a1 = 54;
}

uint64_t sub_1DE8CF988(uint64_t a1)
{
  unint64_t v2 = sub_1DE8D0550();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8CF9C4(uint64_t a1)
{
  unint64_t v2 = sub_1DE8D0550();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8CFA00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DE8CFA50()
{
  sub_1DE8CFA00();
  return swift_deallocClassInstance();
}

uint64_t sub_1DE8CFA84(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D528);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8D0550();
  sub_1DE8E1C10();
  uint64_t v15 = *(void *)(v3 + 16);
  LOBYTE(v14) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA30);
  sub_1DE8D15B0(&qword_1EAC0BA28, (void (*)(void))sub_1DE834F74);
  sub_1DE8E1A40();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1DE8E1A20();
    LOBYTE(v15) = 2;
    sub_1DE8E1A20();
    LOBYTE(v15) = 3;
    sub_1DE8E1A20();
    LOBYTE(v15) = 4;
    sub_1DE8E1A20();
    LOBYTE(v15) = 5;
    sub_1DE8E1A20();
    LOBYTE(v15) = 6;
    sub_1DE8E1A20();
    uint64_t v15 = *(void *)(v3 + 72);
    LOBYTE(v14) = 7;
    sub_1DE8E1A40();
    LOBYTE(v15) = 8;
    sub_1DE8E1A20();
    LOBYTE(v15) = 9;
    sub_1DE8E1A20();
    LOBYTE(v15) = 10;
    sub_1DE8E1A20();
    LOBYTE(v15) = 11;
    sub_1DE8E1A20();
    LOBYTE(v15) = 12;
    sub_1DE8E1A20();
    LOBYTE(v15) = 13;
    sub_1DE8E1A20();
    swift_beginAccess();
    LOBYTE(v14) = 14;
    sub_1DE8E1A20();
    LOBYTE(v14) = 15;
    sub_1DE8E1A20();
    LOBYTE(v14) = 16;
    sub_1DE8E1A20();
    LOBYTE(v14) = 17;
    sub_1DE8E1A20();
    LOBYTE(v14) = 18;
    sub_1DE8E1A20();
    uint64_t v14 = *(void *)(v3 + 168);
    LOBYTE(v13) = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7EF8);
    sub_1DE8D162C(&qword_1EAC0C040);
    sub_1DE8E1A40();
    uint64_t v14 = *(void *)(v3 + 176);
    LOBYTE(v13) = 20;
    sub_1DE8E1A40();
    LOBYTE(v14) = 21;
    sub_1DE8E1A20();
    LOBYTE(v14) = 22;
    sub_1DE8E1A20();
    LOBYTE(v14) = 23;
    sub_1DE8E1A20();
    LOBYTE(v14) = 24;
    sub_1DE8E1A20();
    LOBYTE(v14) = 25;
    sub_1DE8E1A20();
    LOBYTE(v14) = 26;
    sub_1DE8E1A20();
    LOBYTE(v14) = 27;
    sub_1DE8E1A20();
    LOBYTE(v14) = 28;
    sub_1DE8E1A20();
    LOBYTE(v14) = 29;
    sub_1DE8E1A20();
    LOBYTE(v14) = 30;
    sub_1DE8E1A20();
    LOBYTE(v14) = 31;
    sub_1DE8E1A20();
    LOBYTE(v14) = 32;
    sub_1DE8E1A20();
    LOBYTE(v14) = 33;
    sub_1DE8E1A20();
    LOBYTE(v14) = 34;
    sub_1DE8E1A20();
    LOBYTE(v14) = 35;
    sub_1DE8E1A20();
    swift_beginAccess();
    LOBYTE(v13) = 36;
    sub_1DE8E1A20();
    uint64_t v13 = *(void *)(v3 + 312);
    BYTE4(v12) = 37;
    sub_1DE8E1A40();
    uint64_t v13 = *(void *)(v3 + 320);
    BYTE4(v12) = 38;
    sub_1DE8E1A40();
    uint64_t v13 = *(void *)(v3 + 328);
    BYTE4(v12) = 39;
    sub_1DE8E1A40();
    char v10 = *(unsigned char *)(v3 + 340);
    LOBYTE(v13) = 40;
    BYTE4(v12) = v10;
    sub_1DE8E19B0();
    LOBYTE(v13) = 41;
    sub_1DE8E1A20();
    LOBYTE(v13) = 42;
    sub_1DE8E19A0();
    LOBYTE(v13) = 43;
    sub_1DE8E1A20();
    LOBYTE(v13) = 44;
    sub_1DE8E1A20();
    LOBYTE(v13) = 45;
    sub_1DE8E1A20();
    LOBYTE(v13) = 46;
    sub_1DE8E1A20();
    LOBYTE(v13) = 47;
    sub_1DE8E1A20();
    LOBYTE(v13) = 48;
    sub_1DE8E1A20();
    LOBYTE(v13) = 49;
    sub_1DE8E1A20();
    LOBYTE(v13) = 50;
    sub_1DE8E1A20();
    LOBYTE(v13) = 51;
    sub_1DE8E1A20();
    LOBYTE(v13) = 52;
    sub_1DE8E19A0();
    LOBYTE(v13) = 53;
    sub_1DE8E19A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_1DE8D0550()
{
  unint64_t result = qword_1EAC0D530;
  if (!qword_1EAC0D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D530);
  }
  return result;
}

uint64_t sub_1DE8D05A4(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DE8D05F4(a1);
  return v2;
}

uint64_t *sub_1DE8D05F4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v60 = *v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D538);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  unint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8D0550();
  sub_1DE8E1BF0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA30);
    char v61 = 0;
    sub_1DE8D15B0(&qword_1EAC0BA78, (void (*)(void))sub_1DE835F94);
    sub_1DE8E1930();
    v1[2] = v62;
    LOBYTE(v62) = 1;
    sub_1DE8E1910();
    v1[3] = v11;
    LOBYTE(v62) = 2;
    sub_1DE8E1910();
    v1[4] = v12;
    LOBYTE(v62) = 3;
    sub_1DE8E1910();
    v1[5] = v13;
    LOBYTE(v62) = 4;
    sub_1DE8E1910();
    v1[6] = v14;
    LOBYTE(v62) = 5;
    sub_1DE8E1910();
    v1[7] = v15;
    LOBYTE(v62) = 6;
    sub_1DE8E1910();
    v1[8] = v16;
    char v61 = 7;
    sub_1DE8E1930();
    v1[9] = v62;
    LOBYTE(v62) = 8;
    sub_1DE8E1910();
    v1[10] = v17;
    LOBYTE(v62) = 9;
    sub_1DE8E1910();
    v1[11] = v18;
    LOBYTE(v62) = 10;
    sub_1DE8E1910();
    v1[12] = v19;
    LOBYTE(v62) = 11;
    sub_1DE8E1910();
    v1[13] = v20;
    LOBYTE(v62) = 12;
    sub_1DE8E1910();
    v1[14] = v21;
    LOBYTE(v62) = 13;
    sub_1DE8E1910();
    v1[15] = v22;
    LOBYTE(v62) = 14;
    sub_1DE8E1910();
    v1[16] = v23;
    LOBYTE(v62) = 15;
    sub_1DE8E1910();
    v1[17] = v24;
    LOBYTE(v62) = 16;
    sub_1DE8E1910();
    v1[18] = v25;
    LOBYTE(v62) = 17;
    sub_1DE8E1910();
    v1[19] = v26;
    LOBYTE(v62) = 18;
    sub_1DE8E1910();
    v1[20] = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA7EF8);
    char v61 = 19;
    sub_1DE8D162C(&qword_1EAC0C058);
    sub_1DE8E1930();
    v1[21] = v62;
    char v61 = 20;
    sub_1DE8E1930();
    v1[22] = v62;
    LOBYTE(v62) = 21;
    sub_1DE8E1910();
    v1[23] = v28;
    LOBYTE(v62) = 22;
    sub_1DE8E1910();
    v1[24] = v29;
    LOBYTE(v62) = 23;
    sub_1DE8E1910();
    v1[25] = v30;
    LOBYTE(v62) = 24;
    sub_1DE8E1910();
    v1[26] = v31;
    LOBYTE(v62) = 25;
    sub_1DE8E1910();
    v1[27] = v32;
    LOBYTE(v62) = 26;
    sub_1DE8E1910();
    v1[28] = v33;
    LOBYTE(v62) = 27;
    sub_1DE8E1910();
    v1[29] = v34;
    LOBYTE(v62) = 28;
    sub_1DE8E1910();
    v1[30] = v35;
    LOBYTE(v62) = 29;
    sub_1DE8E1910();
    v1[31] = v36;
    LOBYTE(v62) = 30;
    sub_1DE8E1910();
    v1[32] = v37;
    LOBYTE(v62) = 31;
    sub_1DE8E1910();
    v1[33] = v38;
    LOBYTE(v62) = 32;
    sub_1DE8E1910();
    v1[34] = v39;
    LOBYTE(v62) = 33;
    sub_1DE8E1910();
    v1[35] = v40;
    LOBYTE(v62) = 34;
    sub_1DE8E1910();
    v1[36] = v41;
    LOBYTE(v62) = 35;
    sub_1DE8E1910();
    v1[37] = v42;
    LOBYTE(v62) = 36;
    sub_1DE8E1910();
    v1[38] = v43;
    char v61 = 37;
    sub_1DE8E1930();
    v1[39] = v62;
    char v61 = 38;
    sub_1DE8E1930();
    v1[40] = v62;
    char v61 = 39;
    sub_1DE8E1930();
    v1[41] = v62;
    LOBYTE(v62) = 40;
    uint64_t v44 = sub_1DE8E18A0();
    *((_DWORD *)v1 + 84) = v44;
    *((unsigned char *)v1 + 340) = BYTE4(v44) & 1;
    LOBYTE(v62) = 41;
    sub_1DE8E1910();
    v1[43] = v45;
    LOBYTE(v62) = 42;
    v1[44] = sub_1DE8E1890();
    *((unsigned char *)v1 + 360) = v46 & 1;
    LOBYTE(v62) = 43;
    sub_1DE8E1910();
    v1[46] = v47;
    LOBYTE(v62) = 44;
    sub_1DE8E1910();
    v1[47] = v48;
    LOBYTE(v62) = 45;
    sub_1DE8E1910();
    v1[48] = v49;
    LOBYTE(v62) = 46;
    sub_1DE8E1910();
    v1[49] = v50;
    LOBYTE(v62) = 47;
    sub_1DE8E1910();
    v1[50] = v51;
    LOBYTE(v62) = 48;
    sub_1DE8E1910();
    v1[51] = v52;
    LOBYTE(v62) = 49;
    sub_1DE8E1910();
    v1[52] = v53;
    LOBYTE(v62) = 50;
    sub_1DE8E1910();
    v1[53] = v54;
    LOBYTE(v62) = 51;
    sub_1DE8E1910();
    v1[54] = v55;
    LOBYTE(v62) = 52;
    v1[55] = sub_1DE8E1890();
    *((unsigned char *)v1 + 448) = v56 & 1;
    LOBYTE(v62) = 53;
    uint64_t v57 = sub_1DE8E1890();
    char v59 = v58;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v3[57] = v57;
    *((unsigned char *)v3 + 464) = v59 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1DE8D15B0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BA30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE8D162C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBEA7EF8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1DE8D1694@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1DE8D05F4(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1DE8D16EC(void *a1)
{
  return sub_1DE8CFA84(a1);
}

uint64_t _s20HeadlineScoreProfileCMa()
{
  return self;
}

uint64_t sub_1DE8D1734(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &_s20HeadlineScoreProfileCMn);
}

uint64_t sub_1DE8D174C()
{
  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t _s20HeadlineScoreProfileC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCB) {
    goto LABEL_17;
  }
  if (a2 + 53 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 53) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 53;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x36;
  int v8 = v6 - 54;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20HeadlineScoreProfileC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 53 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 53) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCA)
  {
    unsigned int v6 = ((a2 - 203) >> 8) + 1;
    *uint64_t result = a2 + 53;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8D18D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 53;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8D18F8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8D1904(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *_s20HeadlineScoreProfileC10CodingKeysOMa()
{
  return &_s20HeadlineScoreProfileC10CodingKeysON;
}

unint64_t sub_1DE8D1920()
{
  unint64_t result = qword_1EAC0D540;
  if (!qword_1EAC0D540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D540);
  }
  return result;
}

unint64_t sub_1DE8D1978()
{
  unint64_t result = qword_1EAC0D548;
  if (!qword_1EAC0D548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D548);
  }
  return result;
}

unint64_t sub_1DE8D19D0()
{
  unint64_t result = qword_1EAC0D550;
  if (!qword_1EAC0D550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D550);
  }
  return result;
}

uint64_t sub_1DE8D1A24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x43656C6369747261 && a2 == 0xEE007374726F686FLL;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C754D6F69647561 && a2 == 0xEF7265696C706974 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F6060 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4BB0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4BD0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6353746E65696C63 && a2 == 0xEB0000000065726FLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F4BF0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F6090 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F60B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69737265766E6F63 && a2 == 0xEF65726F63536E6FLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F60E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F47C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F4C10 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F4C30 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F45A0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F6100 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F6120 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F4600 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F6140 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F6160 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE8F6180 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F12E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F61A0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F61C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x64656E657473696CLL && a2 == 0xEF79746C616E6550 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x616E65506E656573 && a2 == 0xEB0000000079746CLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6353726576726573 && a2 == 0xEB0000000065726FLL || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6576726553776172 && a2 == 0xEE0065726F635372 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F6220 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F47F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F6240 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F6260 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F6280 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F62A0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F62C0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE8F62E0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F6300 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x6867696557676174 && a2 == 0xEE00444979427374 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE8F6330 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEE0065726F635367 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE8F6360 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F6380 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE8F4270 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F4210 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F42B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DE8F4840 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DE8F4810 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F4900 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEA00000000007265 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0x72656E65706D6164 && a2 == 0xE800000000000000 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0x6154776F64616873 && a2 == 0xEF65726F63536962 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F63D0)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 53;
    }
    else {
      return 54;
    }
  }
}

uint64_t ClassicEventData.articleData.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ClassicEventData.groupBackingTagID.getter(uint64_t a1)
{
  uint64_t v1 = sub_1DE8D3BD8(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicEventData.init(articleData:groupType:groupBackingTagID:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t result = type metadata accessor for ClassicEventData();
  *(unsigned char *)(a6 + *(int *)(result + 36)) = v9;
  uint64_t v11 = (void *)(a6 + *(int *)(result + 40));
  *uint64_t v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t sub_1DE8D2F54()
{
  unint64_t v0 = sub_1DE8E1840();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DE8D2FA4(char a1)
{
  if (!a1) {
    return 0x44656C6369747261;
  }
  if (a1 == 1) {
    return 0x70795470756F7267;
  }
  return 0xD000000000000011;
}

uint64_t sub_1DE8D300C(char a1)
{
  if (!a1) {
    return 0x44656C6369747261;
  }
  if (a1 == 1) {
    return 0x70795470756F7267;
  }
  return 0xD000000000000011;
}

uint64_t sub_1DE8D3074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DE8D30E8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1DE8D3154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DE8D31C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DE8D3234@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DE8D2F54();
  *a1 = result;
  return result;
}

uint64_t sub_1DE8D326C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DE8D2FA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DE8D329C()
{
  return sub_1DE8D300C(*v0);
}

uint64_t sub_1DE8D32A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1DE8D2FA0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1DE8D32D8()
{
  return 0;
}

uint64_t sub_1DE8D32E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DE8D4708();
  *a1 = result;
  return result;
}

uint64_t sub_1DE8D3310(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DE8D3364(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t ClassicEventData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v7;
  type metadata accessor for ClassicEventData.CodingKeys();
  swift_getWitnessTable();
  uint64_t v26 = sub_1DE8E1960();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26, v9);
  uint64_t v11 = (char *)&v22 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = v27;
  sub_1DE8E1BF0();
  if (!v12)
  {
    uint64_t v13 = v24;
    char v31 = 0;
    sub_1DE8E1930();
    char v29 = 1;
    sub_1DE8D3C18();
    sub_1DE8E1930();
    LODWORD(v27) = v30;
    char v28 = 2;
    uint64_t v15 = sub_1DE8E1870();
    uint64_t v16 = v11;
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v26);
    uint64_t v19 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23, v6, a2);
    uint64_t v20 = type metadata accessor for ClassicEventData();
    *(unsigned char *)(v19 + *(int *)(v20 + 36)) = v27;
    uint64_t v21 = (uint64_t *)(v19 + *(int *)(v20 + 40));
    *uint64_t v21 = v15;
    v21[1] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ClassicEventData.encode(to:)(void *a1, uint64_t a2)
{
  v11[0] = a2;
  void v11[2] = *(void *)(a2 + 16);
  type metadata accessor for ClassicEventData.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1DE8E1A60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = v11[1];
  sub_1DE8E1C10();
  char v15 = 0;
  uint64_t v9 = v11[3];
  sub_1DE8E1A40();
  if (!v9)
  {
    char v14 = *(unsigned char *)(v8 + *(int *)(v11[0] + 36));
    char v13 = 1;
    sub_1DE8D3C6C();
    sub_1DE8E1A40();
    char v12 = 2;
    sub_1DE8E1980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1DE8D38A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ClassicEventData.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1DE8D38C4(void *a1, uint64_t a2)
{
  return ClassicEventData.encode(to:)(a1, a2);
}

uint64_t ClassicEventData.isAudio.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 80))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.isEvergreen.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 88))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.featured.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 96))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.isFeatureCandidate.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 104))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.adCategories.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 24))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.articleID.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 32))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.articleLength.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 40))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.hasVideo.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 48))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.isANF.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 56))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.isPaid.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 64))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.isBundlePaid.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 72))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.publisherID.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 112))(*(void *)(a1 + 16));
}

uint64_t ClassicEventData.topicIDs.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 120))(*(void *)(a1 + 16));
}

void ClassicEventData.viewAction.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ClassicEventData.group.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 36));
  return result;
}

uint64_t sub_1DE8D3A4C(uint64_t a1)
{
  return ClassicEventData.articleLength.getter(a1);
}

void sub_1DE8D3A94(unsigned char *a1@<X8>)
{
}

void sub_1DE8D3AAC(unsigned char *a1@<X8>)
{
}

uint64_t sub_1DE8D3AC4(uint64_t a1)
{
  uint64_t v1 = sub_1DE8D3BD8(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicEventData.debugDescription.getter(uint64_t a1)
{
  BYTE8(v4) = 0;
  sub_1DE8E1730();
  sub_1DE8E1490();
  sub_1DE8E1AA0();
  sub_1DE8E1490();
  *(void *)&long long v4 = *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
  sub_1DE8E17B0();
  return *(void *)((char *)&v4 + 1);
}

uint64_t sub_1DE8D3BD8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 40));
}

uint64_t type metadata accessor for ClassicEventData()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ClassicEventData.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1DE8D3C18()
{
  unint64_t result = qword_1EAC0D558;
  if (!qword_1EAC0D558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D558);
  }
  return result;
}

unint64_t sub_1DE8D3C6C()
{
  unint64_t result = qword_1EAC0D560[0];
  if (!qword_1EAC0D560[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAC0D560);
  }
  return result;
}

uint64_t sub_1DE8D3CC0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1DE8D3CD0(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of ClassicEventDataType.articleData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ClassicEventDataType.groupType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1DE8D3D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1DE8D3D60()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1DE8D3E04(void *a1, void *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) != 0 && (v6 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v9 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    unint64_t v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    *(void *)(v10 + 16) = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DE8D3F04(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8D3F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DE8D3FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DE8D4094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1DE8D4114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DE8D41A4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 24;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DE8D42F0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_1DE8D4304(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 24;
  if ((v9 & 0xFFFFFFF8) == 0xFFFFFFE8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if ((v9 & 0xFFFFFFF8) == 0xFFFFFFE8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if ((v9 & 0xFFFFFFF8) != 0xFFFFFFE8)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, (v9 & 0xFFFFFFFFFFFFFFF8) + 24);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DE8D44ECLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          uint64_t v18 = (void *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v18 = 0;
            *(void *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 16) = 0;
            *(_DWORD *)uint64_t v18 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 16) = a2;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1DE8D4514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1DE8D451C(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1DE8D45AC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8D4678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8D46A0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8D46AC(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_1DE8D46B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8D46D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8D46EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8D4708()
{
  return 3;
}

uint64_t sub_1DE8D4718(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1DE84C018(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      v15[0] = *(v9 - 1);
      v15[1] = v10;
      swift_bridgeObjectRetain();
      a1(&v16, v15);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v11 = v16;
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DE84C018((void *)(v12 > 1), v13 + 1, 1);
        uint64_t v6 = v17;
      }
      v9 += 2;
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1DE8D4844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DE8E1490();
  *(void *)a3 = 2831206;
  *(void *)(a3 + 8) = 0xE300000000000000;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8D48C0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DE8D48F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1DE8E1490();
  sub_1DE8E1490();
  sub_1DE8E1490();
  *(void *)a5 = 2831462;
  *(void *)(a5 + 8) = 0xE300000000000000;
  *(void *)(a5 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  *(void *)(a5 + 32) = a3;
  *(void *)(a5 + 40) = a4;
  *(unsigned char *)(a5 + 48) = 3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1DE8D49A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8D49B8()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8D49E4()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE8D4A2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8D4A40()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8D4A88()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8D4AB4()
{
  return sub_1DE8E1BD0();
}

double sub_1DE8D4AF8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 12390;
  *(_OWORD *)a1 = xmmword_1DE8EF570;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4B14@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 12646;
  *(_OWORD *)a1 = xmmword_1DE8EEE00;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4B30@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 12902;
  *(_OWORD *)a1 = xmmword_1DE8EEE10;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4B4C@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 13926;
  *(_OWORD *)a1 = xmmword_1DE8EF580;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4B68@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 14182;
  *(_OWORD *)a1 = xmmword_1DE8EEE20;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4B84@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0x732B306166;
  *(_OWORD *)a1 = xmmword_1DE8EEDD0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4BA0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0x6D2B306166;
  *(_OWORD *)a1 = xmmword_1DE8EEDE0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4BBC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0x6C2B306166;
  *(_OWORD *)a1 = xmmword_1DE8EEDF0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

double sub_1DE8D4BD8@<D0>(uint64_t a1@<X8>)
{
  sub_1DE8E1490();
  *(void *)a1 = 724656486;
  *(void *)(a1 + 8) = 0xE400000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 1;
  return result;
}

double sub_1DE8D4C30@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)&aFa0S[8 * *a1];
  *(void *)(a2 + 8) = 0xE500000000000000;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

double sub_1DE8D4C58@<D0>(uint64_t a1@<X8>)
{
  sub_1DE8E1490();
  *(void *)a1 = 2831718;
  *(void *)(a1 + 8) = 0xE300000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

unsigned __int8 *sub_1DE8D4CAC@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  if (v3 == 25 || v3 == 5)
  {
    sub_1DE8E1490();
    double result = (unsigned __int8 *)swift_bridgeObjectRelease();
    *(void *)a2 = 2831974;
    *(void *)(a2 + 8) = 0xE300000000000000;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    char v4 = 5;
  }
  else
  {
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    char v4 = -1;
  }
  *(unsigned char *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1DE8D4D84()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8D4DDC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8D4E38()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8D4E94()
{
  swift_bridgeObjectRetain();
  sub_1DE8E1480();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8D4EEC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8D4F4C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E58);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DE8E31B0;
  sub_1DE8E1490();
  *(void *)(v6 + 32) = 2831206;
  *(void *)(v6 + 40) = 0xE300000000000000;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = 0;
  *(void *)(v6 + 72) = 0;
  *(unsigned char *)(v6 + 80) = 4;
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 112);
  swift_bridgeObjectRetain();
  uint64_t v10 = v9(v7, v8);
  uint64_t v12 = v11;
  sub_1DE8E1490();
  sub_1DE8E1490();
  sub_1DE8E1490();
  *(void *)(v6 + 88) = 2831462;
  *(void *)(v6 + 96) = 0xE300000000000000;
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 112) = v12;
  *(void *)(v6 + 120) = v5;
  *(void *)(v6 + 128) = v4;
  *(unsigned char *)(v6 + 136) = 3;
  *a3 = v6;
  return swift_bridgeObjectRetain();
}

char *sub_1DE8D5094(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = 2831206;
  unint64_t v102 = (char *)a4;
  uint64_t v103 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v101);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  LODWORD(v11) = *a2;
  double v12 = *(double *)(a3 + 8);
  double v13 = *(double *)(a3 + 16);
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v100 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v15 = (uint64_t)v102;
  uint64_t v16 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  uint64_t v17 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 112))(v15, v16);
  uint64_t v19 = v18;
  uint64_t v98 = 2831206;
  unint64_t v99 = 0xE300000000000000;
  sub_1DE8E1490();
  uint64_t v20 = 2831206;
  unint64_t v21 = 0xE300000000000000;
  uint64_t v22 = (uint64_t)sub_1DE83A960(0, 1, 1, v14);
  unint64_t v24 = *(void *)(v22 + 16);
  unint64_t v23 = *(void *)(v22 + 24);
  uint64_t v25 = (ValueMetadata *)(v24 + 1);
  if (v24 >= v23 >> 1) {
    goto LABEL_97;
  }
  while (1)
  {
    *(void *)(v22 + 16) = v25;
    uint64_t v26 = v22 + 56 * v24;
    *(void *)(v26 + 32) = v20;
    *(void *)(v26 + 40) = v21;
    *(void *)(v26 + 48) = v17;
    *(void *)(v26 + 56) = v19;
    *(void *)(v26 + 64) = 0;
    *(void *)(v26 + 72) = 0;
    *(unsigned char *)(v26 + 80) = 4;
    unint64_t v100 = (char *)v22;
    if (v11 == 25 || v11 == 5)
    {
      uint64_t v98 = v9 + 768;
      unint64_t v99 = 0xE300000000000000;
      sub_1DE8E1490();
      swift_bridgeObjectRelease();
      uint64_t v27 = v98;
      unint64_t v28 = v99;
      unint64_t v30 = *(void *)(v22 + 16);
      unint64_t v29 = *(void *)(v22 + 24);
      if (v30 >= v29 >> 1) {
        uint64_t v22 = (uint64_t)sub_1DE83A960((char *)(v29 > 1), v30 + 1, 1, (char *)v22);
      }
      *(void *)(v22 + 16) = v30 + 1;
      uint64_t v31 = v22 + 56 * v30;
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = v28;
      *(_OWORD *)(v31 + 48) = 0u;
      *(_OWORD *)(v31 + 64) = 0u;
      *(unsigned char *)(v31 + 80) = 5;
      unint64_t v100 = (char *)v22;
    }
    uint64_t v32 = (uint64_t)v102;
    uint64_t v33 = v103;
    __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 120))(v32, v33);
    MEMORY[0x1F4188790](v34, v35);
    v96[2] = v101;
    uint64_t v22 = sub_1DE8D4718((void (*)(uint64_t *__return_ptr, void *))sub_1DE8D60A8, (uint64_t)v96, v34);
    swift_bridgeObjectRelease();
    unint64_t v21 = *(void *)(v22 + 16);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    if (!v21) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v24 = 0;
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v25 = &_s7FeatureON;
    while (1)
    {
      unint64_t v23 = v22 + 8 * v24;
      uint64_t v19 = *(void *)(v23 + 32);
      int64_t v11 = *(void *)(v19 + 16);
      uint64_t v20 = *((void *)v17 + 2);
      uint64_t v9 = v20 + v11;
      if (__OFADD__(v20, v11)) {
        break;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v9 <= *((void *)v17 + 3) >> 1)
      {
        unint64_t v23 = *(void *)(v19 + 16);
        if (v23) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v20 <= v9) {
          int64_t v38 = v20 + v11;
        }
        else {
          int64_t v38 = v20;
        }
        uint64_t v17 = sub_1DE83A960(isUniquelyReferenced_nonNull_native, v38, 1, v17);
        unint64_t v23 = *(void *)(v19 + 16);
        if (v23)
        {
LABEL_20:
          unint64_t v23 = *((void *)v17 + 2);
          if ((uint64_t)((*((void *)v17 + 3) >> 1) - v23) < v11) {
            goto LABEL_95;
          }
          swift_arrayInitWithCopy();
          if (v11)
          {
            uint64_t v39 = *((void *)v17 + 2);
            BOOL v40 = __OFADD__(v39, v11);
            unint64_t v23 = v39 + v11;
            if (v40) {
              goto LABEL_96;
            }
            *((void *)v17 + 2) = v23;
          }
          goto LABEL_10;
        }
      }
      if (v11) {
        goto LABEL_94;
      }
LABEL_10:
      swift_bridgeObjectRelease();
      if (v21 == ++v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = 2831206;
        uint64_t v36 = MEMORY[0x1E4FBC860];
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    uint64_t v22 = (uint64_t)sub_1DE83A960((char *)(v23 > 1), (int64_t)v25, 1, (char *)v22);
  }
  uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1DE813D18((uint64_t)v17);
  uint64_t v41 = v102;
  uint64_t v42 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  uint64_t v43 = (*(uint64_t (**)(char *, uint64_t))(v42 + 40))(v41, v42);
  if (v44) {
    goto LABEL_59;
  }
  uint64_t v45 = *(void *)&v13 & 0x7FF0000000000000;
  if (v43 < 1)
  {
    if (v45 != 0x7FF0000000000000) {
      goto LABEL_37;
    }
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v45 == 0x7FF0000000000000)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  if (v43 <= (uint64_t)v13)
  {
    uint64_t v41 = v100;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_33;
    }
    goto LABEL_111;
  }
LABEL_37:
  if (v13 <= -9.22337204e18) {
    goto LABEL_99;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v50 = *(void *)&v12 & 0x7FF0000000000000;
  if (v43 <= (uint64_t)v13)
  {
    if (v50 != 0x7FF0000000000000) {
      goto LABEL_50;
    }
    goto LABEL_104;
  }
  if (v50 == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_109;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  if (v12 < 9.22337204e18)
  {
    if (v43 <= (uint64_t)v12)
    {
      uint64_t v41 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v41 = sub_1DE83A960(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v52 = *((void *)v41 + 2);
      unint64_t v51 = *((void *)v41 + 3);
      if (v52 >= v51 >> 1) {
        uint64_t v41 = sub_1DE83A960((char *)(v51 > 1), v52 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v52 + 1;
      uint64_t v48 = &v41[56 * v52];
      long long v49 = xmmword_1DE8EEDE0;
      goto LABEL_58;
    }
LABEL_50:
    if (v12 > -9.22337204e18)
    {
      if (v12 < 9.22337204e18)
      {
        if (v43 > (uint64_t)v12)
        {
          uint64_t v41 = v100;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v41 = sub_1DE83A960(0, *((void *)v41 + 2) + 1, 1, v41);
          }
          unint64_t v54 = *((void *)v41 + 2);
          unint64_t v53 = *((void *)v41 + 3);
          if (v54 >= v53 >> 1) {
            uint64_t v41 = sub_1DE83A960((char *)(v53 > 1), v54 + 1, 1, v41);
          }
          *((void *)v41 + 2) = v54 + 1;
          uint64_t v48 = &v41[56 * v54];
          long long v49 = xmmword_1DE8EEDF0;
          goto LABEL_58;
        }
        goto LABEL_59;
      }
LABEL_106:
      __break(1u);
LABEL_107:
      uint64_t v41 = sub_1DE83A960(0, *((void *)v41 + 2) + 1, 1, v41);
LABEL_62:
      unint64_t v61 = *((void *)v41 + 2);
      unint64_t v60 = *((void *)v41 + 3);
      if (v61 >= v60 >> 1) {
        uint64_t v41 = sub_1DE83A960((char *)(v60 > 1), v61 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v61 + 1;
      uint64_t v62 = &v41[56 * v61];
      long long v63 = xmmword_1DE8EEE10;
      goto LABEL_70;
    }
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
LABEL_110:
  __break(1u);
LABEL_111:
  uint64_t v41 = sub_1DE83A960(0, *((void *)v41 + 2) + 1, 1, v41);
LABEL_33:
  unint64_t v47 = *((void *)v41 + 2);
  unint64_t v46 = *((void *)v41 + 3);
  if (v47 >= v46 >> 1) {
    uint64_t v41 = sub_1DE83A960((char *)(v46 > 1), v47 + 1, 1, v41);
  }
  *((void *)v41 + 2) = v47 + 1;
  uint64_t v48 = &v41[56 * v47];
  long long v49 = xmmword_1DE8EEDD0;
LABEL_58:
  *((_OWORD *)v48 + 2) = v49;
  *((_OWORD *)v48 + 3) = 0u;
  *((_OWORD *)v48 + 4) = 0u;
  v48[80] = 0;
  unint64_t v100 = v41;
LABEL_59:
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  char v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 56))(v55, v56);
  if (v57 != 2)
  {
    char v58 = v57;
    uint64_t v41 = v100;
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    if ((v58 & 1) == 0)
    {
      if ((v59 & 1) == 0) {
        goto LABEL_107;
      }
      goto LABEL_62;
    }
    if ((v59 & 1) == 0) {
      uint64_t v41 = sub_1DE83A960(0, *((void *)v41 + 2) + 1, 1, v41);
    }
    unint64_t v65 = *((void *)v41 + 2);
    unint64_t v64 = *((void *)v41 + 3);
    if (v65 >= v64 >> 1) {
      uint64_t v41 = sub_1DE83A960((char *)(v64 > 1), v65 + 1, 1, v41);
    }
    *((void *)v41 + 2) = v65 + 1;
    uint64_t v62 = &v41[56 * v65];
    long long v63 = xmmword_1DE8EEE00;
LABEL_70:
    *((_OWORD *)v62 + 2) = v63;
    *((_OWORD *)v62 + 3) = 0u;
    *((_OWORD *)v62 + 4) = 0u;
    v62[80] = 0;
    unint64_t v100 = v41;
  }
  uint64_t v66 = (uint64_t)v102;
  uint64_t v67 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v67 + 64))(v66, v67))
  {
    uint64_t v68 = (uint64_t)v102;
    uint64_t v69 = v103;
    __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
    (*(void (**)(uint64_t, uint64_t))(v69 + 112))(v68, v69);
    uint64_t v98 = v9 + 512;
    unint64_t v99 = 0xE300000000000000;
    sub_1DE8E1490();
    swift_bridgeObjectRelease();
    uint64_t v70 = v98;
    unint64_t v71 = v99;
    uint64_t v72 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v72 = sub_1DE83A960(0, *((void *)v72 + 2) + 1, 1, v72);
    }
    unint64_t v74 = *((void *)v72 + 2);
    unint64_t v73 = *((void *)v72 + 3);
    if (v74 >= v73 >> 1) {
      uint64_t v72 = sub_1DE83A960((char *)(v73 > 1), v74 + 1, 1, v72);
    }
    *((void *)v72 + 2) = v74 + 1;
    uint64_t v75 = &v72[56 * v74];
    *((void *)v75 + 4) = v70;
    *((void *)v75 + 5) = v71;
    *((_OWORD *)v75 + 3) = 0u;
    *((_OWORD *)v75 + 4) = 0u;
    v75[80] = 0;
    unint64_t v100 = v72;
  }
  uint64_t v76 = (uint64_t)v102;
  uint64_t v77 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v77 + 48))(v76, v77))
  {
    unint64_t v78 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v78 = sub_1DE83A960(0, *((void *)v78 + 2) + 1, 1, v78);
    }
    unint64_t v80 = *((void *)v78 + 2);
    unint64_t v79 = *((void *)v78 + 3);
    if (v80 >= v79 >> 1) {
      unint64_t v78 = sub_1DE83A960((char *)(v79 > 1), v80 + 1, 1, v78);
    }
    *((void *)v78 + 2) = v80 + 1;
    uint64_t v81 = &v78[56 * v80];
    *((_OWORD *)v81 + 2) = xmmword_1DE8EEE20;
    *((_OWORD *)v81 + 3) = 0u;
    *((_OWORD *)v81 + 4) = 0u;
    v81[80] = 0;
    unint64_t v100 = v78;
  }
  uint64_t v82 = (uint64_t)v102;
  uint64_t v83 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 24))(v82, v83);
  if (v84)
  {
    uint64_t v85 = v84;
    int64_t v86 = *(void *)(v84 + 16);
    if (v86)
    {
      uint64_t v97 = v36;
      sub_1DE84BFF8(0, v86, 0);
      uint64_t v87 = v97;
      v96[4] = v85;
      uint64_t v88 = v85 + 40;
      do
      {
        uint64_t v98 = 724656486;
        unint64_t v99 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_1DE8E1490();
        swift_bridgeObjectRelease();
        uint64_t v89 = v98;
        unint64_t v90 = v99;
        uint64_t v97 = v87;
        unint64_t v92 = *(void *)(v87 + 16);
        unint64_t v91 = *(void *)(v87 + 24);
        if (v92 >= v91 >> 1)
        {
          sub_1DE84BFF8((char *)(v91 > 1), v92 + 1, 1);
          uint64_t v87 = v97;
        }
        v88 += 16;
        *(void *)(v87 + 16) = v92 + 1;
        uint64_t v93 = v87 + 56 * v92;
        *(void *)(v93 + 32) = v89;
        *(void *)(v93 + 40) = v90;
        *(_OWORD *)(v93 + 48) = 0u;
        *(_OWORD *)(v93 + 64) = 0u;
        *(unsigned char *)(v93 + 80) = 1;
        --v86;
      }
      while (v86);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v87 = MEMORY[0x1E4FBC860];
    }
    sub_1DE813D18(v87);
  }
  uint64_t v94 = v100;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  return v94;
}

uint64_t sub_1DE8D5BB0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DE8E1AC0();
  }
}

unint64_t sub_1DE8D5BE4()
{
  unint64_t result = qword_1EAC0D668;
  if (!qword_1EAC0D668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D668);
  }
  return result;
}

unint64_t sub_1DE8D5C3C()
{
  unint64_t result = qword_1EBEAA1E0;
  if (!qword_1EBEAA1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEAA1E0);
  }
  return result;
}

uint64_t _s17ArticleLengthTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17ArticleLengthTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8D5DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8D5E14(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8D5E20(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s17ArticleLengthTypeOMa()
{
  return &_s17ArticleLengthTypeON;
}

uint64_t _s7FeatureOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s7FeatureOwxx(uint64_t a1)
{
  return sub_1DE864B40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s7FeatureOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1DE813E10(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s7FeatureOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1DE813E10(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1DE864B40(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s7FeatureOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1DE864B40(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s7FeatureOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s7FeatureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DE8D6084(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1DE8D6090(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *_s7FeatureOMa()
{
  return &_s7FeatureON;
}

uint64_t sub_1DE8D60A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DE8D4F4C(a1, *(void **)(v2 + 16), a2);
}

uint64_t Classic.AllowListTag.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double Classic.AllowListTag.score.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t Classic.AllowListTag.init(identifier:score:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  return result;
}

uint64_t sub_1DE8D610C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8D6114()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1DE8D611C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1DE85D11C(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = v2;
  a1[2] = result;
  return result;
}

uint64_t sub_1DE8D6154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v26 = *(void *)(v25 + 16);
    if (!v26) {
      goto LABEL_33;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(a2 + 48);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v9 = *(v5 - 2);
    uint64_t v8 = *(v5 - 1);
    uint64_t v10 = *v5;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_1DE821D84(v9, v8);
    uint64_t v14 = v6[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v6[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v12 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1DE824530();
        if ((v17 & 1) == 0) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1DE8287FC(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_1DE821D84(v9, v8);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_38;
      }
      unint64_t v13 = v18;
      if ((v17 & 1) == 0)
      {
LABEL_12:
        v6[(v13 >> 6) + 8] |= 1 << v13;
        uint64_t v20 = (uint64_t *)(v6[6] + 16 * v13);
        *uint64_t v20 = v9;
        v20[1] = v8;
        unint64_t v21 = (uint64_t *)(v6[7] + 24 * v13);
        *unint64_t v21 = v9;
        v21[1] = v8;
        v21[2] = v10;
        uint64_t v22 = v6[2];
        BOOL v23 = __OFADD__(v22, 1);
        uint64_t v24 = v22 + 1;
        if (v23) {
          goto LABEL_36;
        }
        v6[2] = v24;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    uint64_t v7 = (uint64_t *)(v6[7] + 24 * v13);
    swift_bridgeObjectRelease();
    *uint64_t v7 = v9;
    v7[1] = v8;
    uint64_t v7[2] = v10;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 += 3;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = a1;
      uint64_t v26 = *(void *)(a1 + 16);
      if (!v26)
      {
LABEL_33:
        uint64_t result = swift_bridgeObjectRelease();
        *a3 = a1;
        a3[1] = a2;
        a3[2] = (uint64_t)v6;
        return result;
      }
LABEL_19:
      uint64_t v27 = (uint64_t *)(v25 + 48);
      while (2)
      {
        uint64_t v30 = *(v27 - 2);
        uint64_t v29 = *(v27 - 1);
        uint64_t v31 = *v27;
        swift_bridgeObjectRetain_n();
        char v32 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v34 = sub_1DE821D84(v30, v29);
        uint64_t v35 = v6[2];
        BOOL v36 = (v33 & 1) == 0;
        uint64_t v37 = v35 + v36;
        if (__OFADD__(v35, v36)) {
          goto LABEL_35;
        }
        char v38 = v33;
        if (v6[3] >= v37)
        {
          if (v32)
          {
            if ((v33 & 1) == 0) {
              goto LABEL_29;
            }
          }
          else
          {
            sub_1DE824530();
            if ((v38 & 1) == 0) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          sub_1DE8287FC(v37, v32);
          unint64_t v39 = sub_1DE821D84(v30, v29);
          if ((v38 & 1) != (v40 & 1)) {
            goto LABEL_38;
          }
          unint64_t v34 = v39;
          if ((v38 & 1) == 0)
          {
LABEL_29:
            v6[(v34 >> 6) + 8] |= 1 << v34;
            uint64_t v41 = (uint64_t *)(v6[6] + 16 * v34);
            *uint64_t v41 = v30;
            v41[1] = v29;
            uint64_t v42 = (uint64_t *)(v6[7] + 24 * v34);
            *uint64_t v42 = v30;
            v42[1] = v29;
            uint64_t v42[2] = v31;
            uint64_t v43 = v6[2];
            BOOL v23 = __OFADD__(v43, 1);
            uint64_t v44 = v43 + 1;
            if (v23) {
              goto LABEL_37;
            }
            v6[2] = v44;
            swift_bridgeObjectRetain();
            goto LABEL_21;
          }
        }
        unint64_t v28 = (uint64_t *)(v6[7] + 24 * v34);
        swift_bridgeObjectRelease();
        *unint64_t v28 = v30;
        v28[1] = v29;
        uint64_t v28[2] = v31;
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 += 3;
        if (!--v26) {
          goto LABEL_33;
        }
        continue;
      }
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t sub_1DE8D64C0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)(v2 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1DE821D84(a1, a2);
    char v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1DE8D6524(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DE821D84(a1, a2);
  if (v7) {
    uint64_t v8 = *(void *)(*(void *)(v3 + 56) + 24 * v6 + 16);
  }
  else {
    uint64_t v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t Classic.AllowListTag.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1DE8D668C()
{
  sub_1DE8E1730();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Default Tags: ");
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1E01D4090](v0, &type metadata for Classic.AllowListTag);
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE8E1490();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x1E01D4090](v1, &type metadata for Classic.AllowListTag);
  sub_1DE8E1490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t _s12AllowListTagVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s12AllowListTagVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s12AllowListTagVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *_s12AllowListTagVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t _s12AllowListTagVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12AllowListTagVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Classic.AllowListTag()
{
  return &type metadata for Classic.AllowListTag;
}

uint64_t _s9AllowListVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s9AllowListVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s9AllowListVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AllowListVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AllowListVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9AllowListVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s9AllowListVMa()
{
  return &_s9AllowListVN;
}

BOOL static TagGroupingReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TagGroupingReason.hash(into:)()
{
  return sub_1DE8E1BB0();
}

uint64_t TagGroupingReason.hashValue.getter()
{
  return sub_1DE8E1BD0();
}

BOOL sub_1DE8D6B88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8D6B9C()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8D6BE4()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8D6C10()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE8D6C58()
{
  unint64_t result = qword_1EAC0D670;
  if (!qword_1EAC0D670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D670);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TagGroupingReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TagGroupingReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8D6E08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8D6E30(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8D6E3C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TagGroupingReason()
{
  return &type metadata for TagGroupingReason;
}

double sub_1DE8D6E54()
{
  return *(double *)v0;
}

double sub_1DE8D6E5C()
{
  return *(double *)(v0 + 8);
}

double sub_1DE8D6E64()
{
  return *(double *)(v0 + 16);
}

double sub_1DE8D6E6C()
{
  return *(double *)(v0 + 24);
}

double sub_1DE8D6E74()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1DE8D6E7C()
{
  return *(void *)(v0 + 40);
}

double sub_1DE8D6E84()
{
  return *(double *)(v0 + 48);
}

double sub_1DE8D6E8C()
{
  return *(double *)(v0 + 56);
}

double sub_1DE8D6E94()
{
  return *(double *)(v0 + 64);
}

double sub_1DE8D6E9C()
{
  return *(double *)(v0 + 72);
}

uint64_t sub_1DE8D6EA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, uint64_t a11)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(void *)(a2 + 40) = result;
  *(double *)(a2 + 48) = a8;
  *(double *)(a2 + 56) = a9;
  *(double *)(a2 + 64) = a10;
  *(void *)(a2 + 72) = a11;
  return result;
}

unint64_t sub_1DE8D6EC8(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1DE8D6FE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE8D6FFC()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8D7044()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8D7070()
{
  return sub_1DE8E1BD0();
}

unint64_t sub_1DE8D70B4()
{
  return sub_1DE8D6EC8(*v0);
}

uint64_t sub_1DE8D70BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE8D7C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8D70E4()
{
  return 0;
}

void sub_1DE8D70F0(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DE8D70FC(uint64_t a1)
{
  unint64_t v2 = sub_1DE8D7860();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE8D7138(uint64_t a1)
{
  unint64_t v2 = sub_1DE8D7860();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DE8D7174(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D678);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8D7860();
  sub_1DE8E1C10();
  char v20 = 0;
  sub_1DE8E1A20();
  if (!v2)
  {
    char v19 = 1;
    sub_1DE8E1A20();
    char v18 = 2;
    sub_1DE8E1A20();
    char v17 = 3;
    sub_1DE8E1A20();
    char v16 = 4;
    sub_1DE8E1A20();
    char v15 = 5;
    sub_1DE8E1A30();
    char v14 = 6;
    sub_1DE8E1A20();
    char v13 = 7;
    sub_1DE8E1A20();
    char v12 = 8;
    sub_1DE8E1A20();
    char v11 = 9;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DE8D7454@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0D688);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8D7860();
  sub_1DE8E1BF0();
  if (!v2)
  {
    char v40 = 0;
    sub_1DE8E1910();
    uint64_t v11 = v10;
    char v39 = 1;
    sub_1DE8E1910();
    uint64_t v13 = v12;
    char v38 = 2;
    sub_1DE8E1910();
    uint64_t v15 = v14;
    char v37 = 3;
    sub_1DE8E1910();
    uint64_t v17 = v16;
    char v36 = 4;
    sub_1DE8E1910();
    uint64_t v19 = v18;
    char v35 = 5;
    uint64_t v20 = sub_1DE8E1920();
    char v34 = 6;
    sub_1DE8E1910();
    uint64_t v22 = v21;
    char v33 = 7;
    sub_1DE8E1910();
    uint64_t v24 = v23;
    char v32 = 8;
    sub_1DE8E1910();
    uint64_t v27 = v26;
    char v31 = 9;
    sub_1DE8E1910();
    uint64_t v30 = v28;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v15;
    a2[3] = v17;
    a2[4] = v19;
    a2[5] = v20;
    a2[6] = v22;
    a2[7] = v24;
    uint64_t v29 = v30;
    a2[8] = v27;
    a2[9] = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DE8D776C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DE8D7454(a1, a2);
}

uint64_t sub_1DE8D7784(void *a1)
{
  return sub_1DE8D7174(a1);
}

__n128 sub_1DE8D77A0@<Q0>(uint64_t a1@<X8>)
{
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = xmmword_1DE8EF7F0;
  *(void *)(a1 + 32) = 0x408F400000000000;
  *(void *)(a1 + 40) = 10;
  *(_OWORD *)(a1 + 48) = xmmword_1DE8EF800;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

BOOL sub_1DE8D77D0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  v4.f64[0] = *(float64_t *)(a1 + 32);
  v5.f64[0] = *(float64_t *)(a2 + 32);
  v4.f64[1] = *(float64_t *)(a1 + 48);
  v5.f64[1] = *(float64_t *)(a2 + 48);
  if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v4, v5), (int32x4_t)vceqq_f64(
                                                              *(float64x2_t *)(a1 + 56),
                                                              *(float64x2_t *)(a2 + 56))))),
                                7uLL))) & 1) != 0
    && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    return *(double *)(a1 + 72) == *(double *)(a2 + 72);
  }
  return result;
}

unint64_t sub_1DE8D7860()
{
  unint64_t result = qword_1EAC0D680;
  if (!qword_1EAC0D680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D680);
  }
  return result;
}

uint64_t _s23TagScoringConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s23TagScoringConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s23TagScoringConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

ValueMetadata *_s23TagScoringConfigurationVMa()
{
  return &_s23TagScoringConfigurationVN;
}

uint64_t _s23TagScoringConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23TagScoringConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8D7AD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8D7AF8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8D7B04(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *_s23TagScoringConfigurationV10CodingKeysOMa()
{
  return &_s23TagScoringConfigurationV10CodingKeysON;
}

unint64_t sub_1DE8D7B20()
{
  unint64_t result = qword_1EAC0D690;
  if (!qword_1EAC0D690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D690);
  }
  return result;
}

unint64_t sub_1DE8D7B78()
{
  unint64_t result = qword_1EAC0D698;
  if (!qword_1EAC0D698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAC0D698);
  }
  return result;
}

unint64_t sub_1DE8D7BD0()
{
  unint64_t result = qword_1EAC0D6A0[0];
  if (!qword_1EAC0D6A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAC0D6A0);
  }
  return result;
}

uint64_t sub_1DE8D7C24(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001DE8F6410 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE8F6430 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE8F6450 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEE00746867696557 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F6470 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE8F6490 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DE8F64B0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DE8F64D0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE8F64F0 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE8F6510)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1DE8D7FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5, long long *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *(void *)(a4 + 40);
  uint64_t v11 = *(void *)(a4 + 48);
  double v12 = *a5;
  long long v58 = *a6;
  long long v60 = *(_OWORD *)(a4 + 24);
  uint64_t v13 = *((void *)a6 + 2);
  uint64_t v14 = *((void *)a6 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DE8E25E0;
  sub_1DE8E1490();
  *(void *)(inited + 32) = 2831206;
  *(void *)(inited + 40) = 0xE300000000000000;
  uint64_t v51 = sub_1DE82DA80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  long long v65 = v60;
  uint64_t v66 = v10;
  uint64_t v67 = v11;
  long long v62 = v58;
  uint64_t v63 = v13;
  uint64_t v64 = v14;
  uint64_t v54 = a7 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a7 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(a7 + 64);
  int64_t v55 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v56 = a7;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  uint64_t v20 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v18)
    {
      uint64_t v57 = (v18 - 1) & v18;
      int64_t v59 = v19;
      unint64_t v22 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      int64_t v23 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_40;
      }
      if (v23 >= v55)
      {
LABEL_37:
        swift_release();
        sub_1DE8D8490(v12, 1.0, a1, v51, (uint64_t *)&v65, (uint64_t *)&v62, (uint64_t)v20, a8, a9);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      unint64_t v24 = *(void *)(v54 + 8 * v23);
      int64_t v25 = v19 + 1;
      if (!v24)
      {
        int64_t v25 = v19 + 2;
        if (v19 + 2 >= v55) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v19 + 3;
          if (v19 + 3 >= v55) {
            goto LABEL_37;
          }
          unint64_t v24 = *(void *)(v54 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v19 + 4;
            if (v19 + 4 >= v55) {
              goto LABEL_37;
            }
            unint64_t v24 = *(void *)(v54 + 8 * v25);
            if (!v24)
            {
              int64_t v25 = v19 + 5;
              if (v19 + 5 >= v55) {
                goto LABEL_37;
              }
              unint64_t v24 = *(void *)(v54 + 8 * v25);
              if (!v24)
              {
                uint64_t v26 = v19 + 6;
                if (v19 + 6 >= v55) {
                  goto LABEL_37;
                }
                unint64_t v24 = *(void *)(v54 + 8 * v26);
                if (!v24)
                {
                  while (1)
                  {
                    int64_t v25 = v26 + 1;
                    if (__OFADD__(v26, 1)) {
                      goto LABEL_41;
                    }
                    if (v25 >= v55) {
                      goto LABEL_37;
                    }
                    unint64_t v24 = *(void *)(v54 + 8 * v25);
                    ++v26;
                    if (v24) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v25 = v19 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      uint64_t v57 = (v24 - 1) & v24;
      int64_t v59 = v25;
      unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    unint64_t v27 = *(void *)(v56 + 56) + (v22 << 6);
    char v61 = *(unsigned char *)v27;
    uint64_t v28 = *(void *)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
    uint64_t v31 = *(void *)(v27 + 24);
    uint64_t v30 = *(void *)(v27 + 32);
    char v32 = *(unsigned char *)(v27 + 40);
    uint64_t v33 = *(void *)(v27 + 48);
    char v34 = *(unsigned char *)(v27 + 56);
    swift_bridgeObjectRetain();
    sub_1DE8E1490();
    char v35 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = sub_1DE821D84(2831206, 0xE300000000000000);
    uint64_t v39 = v35[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      break;
    }
    char v42 = v37;
    if (v35[3] >= v41)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v20 = v35;
        if (v37) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1DE8246FC();
        uint64_t v20 = v35;
        if (v42) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1DE828B24(v41, isUniquelyReferenced_nonNull_native);
      unint64_t v43 = sub_1DE821D84(2831206, 0xE300000000000000);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_42;
      }
      unint64_t v38 = v43;
      uint64_t v20 = v35;
      if (v42)
      {
LABEL_4:
        unint64_t v21 = v20[7] + (v38 << 6);
        *(unsigned char *)unint64_t v21 = v61;
        *(void *)(v21 + 8) = v28;
        *(void *)(v21 + 16) = v29;
        *(void *)(v21 + 24) = v31;
        *(void *)(v21 + 32) = v30;
        *(unsigned char *)(v21 + 40) = v32;
        *(void *)(v21 + 48) = v33;
        *(unsigned char *)(v21 + 56) = v34;
        goto LABEL_5;
      }
    }
    v20[(v38 >> 6) + 8] |= 1 << v38;
    uint64_t v45 = (void *)(v20[6] + 16 * v38);
    *uint64_t v45 = 2831206;
    v45[1] = 0xE300000000000000;
    unint64_t v46 = v20[7] + (v38 << 6);
    *(unsigned char *)unint64_t v46 = v61;
    *(void *)(v46 + 8) = v28;
    *(void *)(v46 + 16) = v29;
    *(void *)(v46 + 24) = v31;
    *(void *)(v46 + 32) = v30;
    *(unsigned char *)(v46 + 40) = v32;
    *(void *)(v46 + 48) = v33;
    *(unsigned char *)(v46 + 56) = v34;
    uint64_t v47 = v20[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_39;
    }
    v20[2] = v49;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v18 = v57;
    int64_t v19 = v59;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

uint64_t sub_1DE8D8490(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v44 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v17);
  int64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = *a5;
  uint64_t v21 = a5[1];
  uint64_t v22 = a5[2];
  uint64_t v42 = a5[3];
  uint64_t v43 = v22;
  uint64_t v23 = *a6;
  uint64_t v24 = a6[1];
  uint64_t v25 = a6[2];
  uint64_t v26 = a6[3];
  if (qword_1EBEA7DC8 != -1) {
    swift_once();
  }
  unint64_t v27 = (void *)qword_1EBEA7DC0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1DE8E25E0;
  id v29 = v27;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  uint64_t v31 = sub_1DE8E1630();
  uint64_t v41 = a4;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  *(void *)(v28 + 56) = v30;
  *(void *)(v28 + 64) = sub_1DE819640();
  *(void *)(v28 + 32) = v32;
  *(void *)(v28 + 40) = v34;
  sub_1DE8E16C0();
  sub_1DE8E13A0();

  uint64_t v35 = swift_bridgeObjectRelease();
  *(void *)&long long v46 = v20;
  *((void *)&v46 + 1) = v21;
  MEMORY[0x1F4188790](v35, v36);
  *(&v40 - 8) = a8;
  *(&v40 - 7) = a9;
  *((double *)&v40 - 6) = a1;
  *((double *)&v40 - 5) = a2;
  *(&v40 - 4) = v23;
  *(&v40 - 3) = v24;
  *(&v40 - 2) = v25;
  *(&v40 - 1) = v26;
  ClassicAggregateContextType.updateBaseline(with:updateBlock:)((uint64_t (**)())&v46, (uint64_t)sub_1DE8DA634, (uint64_t)(&v40 - 10), a8, a9);
  *(void *)&long long v46 = v20;
  *((void *)&v46 + 1) = v21;
  uint64_t v37 = ClassicAggregateContextType.lookupBaseline(with:)(&v46, a8, a9, (uint64_t)v19);
  *(void *)&long long v46 = v43;
  *((void *)&v46 + 1) = v42;
  MEMORY[0x1F4188790](v37, v38);
  *(&v40 - 10) = a8;
  *(&v40 - 9) = a9;
  *(&v40 - 8) = v44;
  *(&v40 - 7) = (uint64_t)v19;
  *((double *)&v40 - 6) = a1;
  *((double *)&v40 - 5) = a2;
  *(&v40 - 4) = v23;
  *(&v40 - 3) = v24;
  *(&v40 - 2) = v25;
  *(&v40 - 1) = v26;
  ClassicAggregateContextType.update(with:using:updateBlock:)(v41, &v46, (uint64_t)sub_1DE8DA648, (uint64_t)(&v40 - 12), a8, a9);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
}

uint64_t sub_1DE8D8798(uint64_t a1, void *a2, void *a3, double *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v76 = a3[4];
  uint64_t v77 = a3[3];
  uint64_t v74 = a3[6];
  uint64_t v75 = a3[5];
  uint64_t v87 = a3[8];
  double v12 = a4[1];
  double v78 = *a4;
  double v86 = a4[2];
  uint64_t v72 = a5[1];
  uint64_t v73 = *a5;
  uint64_t v70 = a5[3];
  uint64_t v71 = a5[2];
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  uint64_t v15 = __swift_project_boxed_opaque_existential_2(a2, v13);
  uint64_t v98 = v13;
  uint64_t v99 = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v97);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v15, v13);
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[5];
  __swift_project_boxed_opaque_existential_2(a2, v17);
  (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v18 + 8))(&v96, v17, v18);
  sub_1DE859F40(1.0, 60.0);
  sub_1DE859F5C(0.0, 0.0);
  sub_1DE85A150(1.0);
  sub_1DE85A334(5000.0);
  sub_1DE85A504(2000.0);
  sub_1DE85A6D4(1.0);
  *(void *)&long long v89 = 0x3FF0000000000000;
  *((void *)&v89 + 1) = 0x40B3880000000000;
  uint64_t v90 = 0x409F400000000000;
  long long v91 = xmmword_1DE8E7890;
  uint64_t v92 = 0;
  uint64_t v93 = 0;
  uint64_t v94 = 0x3FF0000000000000;
  uint64_t v95 = 5;
  int64_t v19 = sub_1DE8D5094((uint64_t)boxed_opaque_existential_1, &v96, (uint64_t)&v89, v13, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
  uint64_t v80 = a7;
  uint64_t v81 = a8;
  uint64_t v79 = a1;
  uint64_t v20 = ClassicAggregateContextType.validate(features:publisherTopicMinimumEventCount:)((uint64_t)v19, v87, a7, a8);
  swift_bridgeObjectRelease();
  int64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    *(void *)&long long v89 = MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v21, 0);
    uint64_t v22 = v89;
    uint64_t v23 = (uint64_t *)(v20 + 40);
    double v24 = v12;
    do
    {
      uint64_t v26 = *(v23 - 1);
      uint64_t v25 = *v23;
      *(void *)&long long v89 = v22;
      unint64_t v28 = *(void *)(v22 + 16);
      unint64_t v27 = *(void *)(v22 + 24);
      uint64_t v29 = v22;
      swift_bridgeObjectRetain();
      uint64_t v22 = v29;
      if (v28 >= v27 >> 1)
      {
        sub_1DE84BBE0((char *)(v27 > 1), v28 + 1, 1);
        uint64_t v22 = v89;
      }
      v23 += 7;
      *(void *)(v22 + 16) = v28 + 1;
      unint64_t v30 = v22 + 16 * v28;
      *(void *)(v30 + 32) = v26;
      *(void *)(v30 + 40) = v25;
      --v21;
    }
    while (v21);
    uint64_t v69 = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v69 = MEMORY[0x1E4FBC860];
    double v24 = v12;
  }
  uint64_t v31 = a2[3];
  uint64_t v32 = a2[5];
  __swift_project_boxed_opaque_existential_2(a2, v31);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v89, v31, v32);
  switch((char)v89)
  {
    case 5:
      goto LABEL_48;
    case 22:
      break;
    default:
      double v24 = 1.0;
      break;
  }
LABEL_10:
  uint64_t v82 = a6 + 64;
  uint64_t v33 = 1 << *(unsigned char *)(a6 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & *(void *)(a6 + 64);
  int64_t v83 = (unint64_t)(v33 + 63) >> 6;
  swift_bridgeObjectRetain();
  double v36 = 0.0;
  uint64_t v37 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v35)
    {
      uint64_t v85 = (v35 - 1) & v35;
      double v86 = v36;
      unint64_t v39 = __clz(__rbit64(v35)) | (*(void *)&v36 << 6);
      goto LABEL_35;
    }
    int64_t v40 = *(void *)&v36 + 1;
    if (__OFADD__(*(void *)&v36, 1)) {
      goto LABEL_50;
    }
    if (v40 >= v83) {
      break;
    }
    unint64_t v41 = *(void *)(v82 + 8 * v40);
    int64_t v42 = *(void *)&v36 + 1;
    if (!v41)
    {
      int64_t v42 = *(void *)&v36 + 2;
      if (*(void *)&v36 + 2 >= v83) {
        break;
      }
      unint64_t v41 = *(void *)(v82 + 8 * v42);
      if (!v41)
      {
        int64_t v42 = *(void *)&v36 + 3;
        if (*(void *)&v36 + 3 >= v83) {
          break;
        }
        unint64_t v41 = *(void *)(v82 + 8 * v42);
        if (!v41)
        {
          int64_t v42 = *(void *)&v36 + 4;
          if (*(void *)&v36 + 4 >= v83) {
            break;
          }
          unint64_t v41 = *(void *)(v82 + 8 * v42);
          if (!v41)
          {
            int64_t v42 = *(void *)&v36 + 5;
            if (*(void *)&v36 + 5 >= v83) {
              break;
            }
            unint64_t v41 = *(void *)(v82 + 8 * v42);
            if (!v41)
            {
              uint64_t v43 = *(void *)&v36 + 6;
              if (*(void *)&v36 + 6 >= v83) {
                break;
              }
              unint64_t v41 = *(void *)(v82 + 8 * v43);
              if (!v41)
              {
                while (1)
                {
                  int64_t v42 = v43 + 1;
                  if (__OFADD__(v43, 1)) {
                    break;
                  }
                  if (v42 >= v83) {
                    goto LABEL_46;
                  }
                  unint64_t v41 = *(void *)(v82 + 8 * v42);
                  ++v43;
                  if (v41) {
                    goto LABEL_34;
                  }
                }
LABEL_51:
                __break(1u);
LABEL_52:
                sub_1DE8E1B40();
                __break(1u);
                JUMPOUT(0x1DE8D8ED4);
              }
              int64_t v42 = *(void *)&v36 + 6;
            }
          }
        }
      }
    }
LABEL_34:
    uint64_t v85 = (v41 - 1) & v41;
    double v86 = *(double *)&v42;
    unint64_t v39 = __clz(__rbit64(v41)) + (v42 << 6);
LABEL_35:
    unint64_t v44 = *(void *)(a6 + 56) + (v39 << 6);
    char v45 = *(unsigned char *)v44;
    uint64_t v46 = *(void *)(v44 + 8);
    uint64_t v47 = *(void *)(v44 + 16);
    uint64_t v49 = *(void *)(v44 + 24);
    uint64_t v48 = *(void *)(v44 + 32);
    char v50 = *(unsigned char *)(v44 + 40);
    uint64_t v51 = *(void *)(v44 + 48);
    char v88 = *(unsigned char *)(v44 + 56);
    *(void *)&long long v89 = 2831206;
    *((void *)&v89 + 1) = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1DE8E1490();
    long long v52 = v89;
    unint64_t v53 = v37;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v89 = v53;
    unint64_t v56 = sub_1DE821D84(v52, *((uint64_t *)&v52 + 1));
    uint64_t v57 = v53[2];
    BOOL v58 = (v55 & 1) == 0;
    uint64_t v59 = v57 + v58;
    if (__OFADD__(v57, v58))
    {
      __break(1u);
LABEL_48:
      double v24 = v86;
      goto LABEL_10;
    }
    char v60 = v55;
    if (v53[3] >= v59)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v37 = (void *)v89;
        if (v55) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_1DE8246FC();
        uint64_t v37 = (void *)v89;
        if (v60) {
          goto LABEL_13;
        }
      }
    }
    else
    {
      sub_1DE828B24(v59, isUniquelyReferenced_nonNull_native);
      unint64_t v61 = sub_1DE821D84(v52, *((uint64_t *)&v52 + 1));
      if ((v60 & 1) != (v62 & 1)) {
        goto LABEL_52;
      }
      unint64_t v56 = v61;
      uint64_t v37 = (void *)v89;
      if (v60)
      {
LABEL_13:
        unint64_t v38 = v37[7] + (v56 << 6);
        *(unsigned char *)unint64_t v38 = v45;
        *(void *)(v38 + 8) = v46;
        *(void *)(v38 + 16) = v47;
        *(void *)(v38 + 24) = v49;
        *(void *)(v38 + 32) = v48;
        *(unsigned char *)(v38 + 40) = v50;
        *(void *)(v38 + 48) = v51;
        *(unsigned char *)(v38 + 56) = v88;
        goto LABEL_14;
      }
    }
    v37[(v56 >> 6) + 8] |= 1 << v56;
    *(_OWORD *)(v37[6] + 16 * v56) = v52;
    unint64_t v63 = v37[7] + (v56 << 6);
    *(unsigned char *)unint64_t v63 = v45;
    *(void *)(v63 + 8) = v46;
    *(void *)(v63 + 16) = v47;
    *(void *)(v63 + 24) = v49;
    *(void *)(v63 + 32) = v48;
    *(unsigned char *)(v63 + 40) = v50;
    *(void *)(v63 + 48) = v51;
    *(unsigned char *)(v63 + 56) = v88;
    uint64_t v64 = v37[2];
    BOOL v65 = __OFADD__(v64, 1);
    uint64_t v66 = v64 + 1;
    if (v65)
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v37[2] = v66;
    swift_bridgeObjectRetain();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v35 = v85;
    double v36 = v86;
  }
LABEL_46:
  swift_release();
  uint64_t v67 = sub_1DE82DA80(v69);
  swift_bridgeObjectRelease();
  *(void *)&long long v89 = v77;
  *((void *)&v89 + 1) = v76;
  uint64_t v90 = v75;
  *(void *)&long long v91 = v74;
  v97[0] = v73;
  v97[1] = v72;
  v97[2] = v71;
  uint64_t v98 = v70;
  sub_1DE8D8490(v78, v24, v79, v67, (uint64_t *)&v89, v97, (uint64_t)v37, v80, v81);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8D9000(uint64_t a1, uint64_t a2, void *a3, double *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void (*v21)(uint64_t *__return_ptr, uint64_t, uint64_t);
  long long v22;
  long long v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  char *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  double v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  long long v62;
  void *v63;
  char isUniquelyReferenced_nonNull_native;
  char v65;
  unint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  uint64_t v100;
  uint64_t v101[4];
  long long v102;
  uint64_t v103;
  long long v104;
  long long v105;
  uint64_t v106;
  uint64_t v107;

  uint64_t v94 = a7;
  uint64_t v97 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v17);
  int64_t v19 = (char *)&v79 - v18;
  char v88 = a3[3];
  uint64_t v87 = a3[4];
  double v86 = a3[5];
  uint64_t v85 = a3[6];
  uint64_t v20 = a3[8];
  uint64_t v99 = *a4;
  uint64_t v98 = *((void *)a4 + 2);
  uint64_t v84 = *a5;
  int64_t v83 = a5[1];
  uint64_t v82 = a5[2];
  uint64_t v81 = a5[3];
  (*(void (**)(uint64_t, uint64_t))(a10 + 40))(a8, a10);
  int64_t v21 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 48);
  unint64_t v100 = a2;
  v21(v101, a8, a10);
  unint64_t v102 = xmmword_1DE8E7890;
  sub_1DE859F40(1.0, 60.0);
  uint64_t v22 = v102;
  unint64_t v102 = 0uLL;
  sub_1DE859F5C(0.0, 0.0);
  uint64_t v23 = v102;
  *(void *)&unint64_t v102 = 0x3FF0000000000000;
  sub_1DE85A150(1.0);
  double v24 = v102;
  *(void *)&unint64_t v102 = 0x40B3880000000000;
  sub_1DE85A334(5000.0);
  uint64_t v25 = v102;
  *(void *)&unint64_t v102 = 0x409F400000000000;
  sub_1DE85A504(2000.0);
  uint64_t v26 = v102;
  *(void *)&unint64_t v102 = 0x3FF0000000000000;
  sub_1DE85A6D4(1.0);
  unint64_t v27 = v102;
  *(void *)&unint64_t v102 = v24;
  *((void *)&v102 + 1) = v25;
  uint64_t v103 = v26;
  uint64_t v104 = v22;
  uint64_t v105 = v23;
  char v106 = v27;
  double v107 = 5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  long long v89 = v19;
  uint64_t v92 = AssociatedTypeWitness;
  uint64_t v29 = sub_1DE8D5094((uint64_t)v19, (unsigned __int8 *)v101, (uint64_t)&v102, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v93 = a9;
  long long v91 = a1;
  unint64_t v30 = ClassicAggregateContextType.validate(features:publisherTopicMinimumEventCount:)((uint64_t)v29, v20, v94, a9);
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    unsigned __int8 v96 = a8;
    *(void *)&unint64_t v102 = MEMORY[0x1E4FBC860];
    sub_1DE84BBE0(0, v31, 0);
    uint64_t v32 = v102;
    uint64_t v33 = (uint64_t *)(v30 + 40);
    uint64_t v34 = v99;
    do
    {
      double v36 = *(v33 - 1);
      unint64_t v35 = *v33;
      *(void *)&unint64_t v102 = v32;
      unint64_t v38 = *(void *)(v32 + 16);
      uint64_t v37 = *(void *)(v32 + 24);
      swift_bridgeObjectRetain();
      if (v38 >= v37 >> 1)
      {
        sub_1DE84BBE0((char *)(v37 > 1), v38 + 1, 1);
        uint64_t v32 = v102;
      }
      v33 += 7;
      *(void *)(v32 + 16) = v38 + 1;
      unint64_t v39 = v32 + 16 * v38;
      *(void *)(v39 + 32) = v36;
      *(void *)(v39 + 40) = v35;
      --v31;
    }
    while (v31);
    uint64_t v80 = v32;
    swift_bridgeObjectRelease();
    a8 = v96;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v80 = MEMORY[0x1E4FBC860];
    uint64_t v34 = v99;
  }
  sub_1DE8D98C8(v100, v94, a8, v93, a10);
  unint64_t v41 = v40;
  int64_t v42 = *(void *)(v97 + 64);
  uint64_t v95 = v97 + 64;
  uint64_t v43 = 1 << *(unsigned char *)(v97 + 32);
  unint64_t v44 = -1;
  if (v43 < 64) {
    unint64_t v44 = ~(-1 << v43);
  }
  char v45 = v44 & v42;
  unsigned __int8 v96 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v46 = 0.0;
  uint64_t v47 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v45)
    {
      uint64_t v98 = (v45 - 1) & v45;
      uint64_t v99 = v46;
      uint64_t v49 = __clz(__rbit64(v45)) | (*(void *)&v46 << 6);
    }
    else
    {
      char v50 = *(void *)&v46 + 1;
      if (__OFADD__(*(void *)&v46, 1)) {
        goto LABEL_47;
      }
      if (v50 >= v96)
      {
LABEL_44:
        swift_release();
        uint64_t v77 = sub_1DE82DA80(v80);
        swift_bridgeObjectRelease();
        *(void *)&unint64_t v102 = v88;
        *((void *)&v102 + 1) = v87;
        uint64_t v103 = v86;
        *(void *)&uint64_t v104 = v85;
        v101[0] = v84;
        v101[1] = v83;
        v101[2] = v82;
        uint64_t v101[3] = v81;
        sub_1DE8D8490(v34, v41, v91, v77, (uint64_t *)&v102, v101, (uint64_t)v47, v94, v93);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v89, v92);
      }
      uint64_t v51 = *(void *)(v95 + 8 * v50);
      long long v52 = *(void *)&v46 + 1;
      if (!v51)
      {
        long long v52 = *(void *)&v46 + 2;
        if (*(void *)&v46 + 2 >= v96) {
          goto LABEL_44;
        }
        uint64_t v51 = *(void *)(v95 + 8 * v52);
        if (!v51)
        {
          long long v52 = *(void *)&v46 + 3;
          if (*(void *)&v46 + 3 >= v96) {
            goto LABEL_44;
          }
          uint64_t v51 = *(void *)(v95 + 8 * v52);
          if (!v51)
          {
            long long v52 = *(void *)&v46 + 4;
            if (*(void *)&v46 + 4 >= v96) {
              goto LABEL_44;
            }
            uint64_t v51 = *(void *)(v95 + 8 * v52);
            if (!v51)
            {
              long long v52 = *(void *)&v46 + 5;
              if (*(void *)&v46 + 5 >= v96) {
                goto LABEL_44;
              }
              uint64_t v51 = *(void *)(v95 + 8 * v52);
              if (!v51)
              {
                unint64_t v53 = *(void *)&v46 + 6;
                if (*(void *)&v46 + 6 >= v96) {
                  goto LABEL_44;
                }
                uint64_t v51 = *(void *)(v95 + 8 * v53);
                if (!v51)
                {
                  while (1)
                  {
                    long long v52 = v53 + 1;
                    if (__OFADD__(v53, 1)) {
                      goto LABEL_48;
                    }
                    if (v52 >= v96) {
                      goto LABEL_44;
                    }
                    uint64_t v51 = *(void *)(v95 + 8 * v52);
                    ++v53;
                    if (v51) {
                      goto LABEL_32;
                    }
                  }
                }
                long long v52 = *(void *)&v46 + 6;
              }
            }
          }
        }
      }
LABEL_32:
      uint64_t v98 = (v51 - 1) & v51;
      uint64_t v99 = *(double *)&v52;
      uint64_t v49 = __clz(__rbit64(v51)) + (v52 << 6);
    }
    uint64_t v54 = *(void *)(v97 + 56) + (v49 << 6);
    char v55 = *(unsigned char *)v54;
    unint64_t v56 = *(void *)(v54 + 8);
    uint64_t v57 = *(void *)(v54 + 16);
    BOOL v58 = *(void *)(v54 + 24);
    uint64_t v59 = *(void *)(v54 + 32);
    char v60 = *(unsigned char *)(v54 + 40);
    unint64_t v61 = *(void *)(v54 + 48);
    LODWORD(v100) = *(unsigned __int8 *)(v54 + 56);
    *(void *)&unint64_t v102 = 2831206;
    *((void *)&v102 + 1) = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1DE8E1490();
    char v62 = v102;
    unint64_t v63 = v47;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&unint64_t v102 = v63;
    uint64_t v66 = sub_1DE821D84(v62, *((uint64_t *)&v62 + 1));
    uint64_t v67 = v63[2];
    uint64_t v68 = (v65 & 1) == 0;
    uint64_t v69 = v67 + v68;
    if (__OFADD__(v67, v68)) {
      break;
    }
    uint64_t v70 = v65;
    if (v63[3] >= v69)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v47 = (void *)v102;
        if (v65) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1DE8246FC();
        uint64_t v47 = (void *)v102;
        if (v70) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1DE828B24(v69, isUniquelyReferenced_nonNull_native);
      uint64_t v71 = sub_1DE821D84(v62, *((uint64_t *)&v62 + 1));
      if ((v70 & 1) != (v72 & 1)) {
        goto LABEL_49;
      }
      uint64_t v66 = v71;
      uint64_t v47 = (void *)v102;
      if (v70)
      {
LABEL_11:
        uint64_t v48 = v47[7] + (v66 << 6);
        *(unsigned char *)uint64_t v48 = v55;
        *(void *)(v48 + 8) = v56;
        *(void *)(v48 + 16) = v57;
        *(void *)(v48 + 24) = v58;
        *(void *)(v48 + 32) = v59;
        *(unsigned char *)(v48 + 40) = v60;
        *(void *)(v48 + 48) = v61;
        *(unsigned char *)(v48 + 56) = v100;
        goto LABEL_12;
      }
    }
    v47[(v66 >> 6) + 8] |= 1 << v66;
    *(_OWORD *)(v47[6] + 16 * v66) = v62;
    uint64_t v73 = v47[7] + (v66 << 6);
    *(unsigned char *)uint64_t v73 = v55;
    *(void *)(v73 + 8) = v56;
    *(void *)(v73 + 16) = v57;
    *(void *)(v73 + 24) = v58;
    *(void *)(v73 + 32) = v59;
    *(unsigned char *)(v73 + 40) = v60;
    *(void *)(v73 + 48) = v61;
    *(unsigned char *)(v73 + 56) = v100;
    uint64_t v74 = v47[2];
    uint64_t v75 = __OFADD__(v74, 1);
    uint64_t v76 = v74 + 1;
    if (v75) {
      goto LABEL_46;
    }
    v47[2] = v76;
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v99;
    char v45 = v98;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_1DE8E1B40();
  __break(1u);
  return result;
}

void *sub_1DE8D98C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 48))(&v6, a3, a5);
}

uint64_t sub_1DE8D9958(uint64_t a1, uint64_t a2, uint64_t a3, long double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1DE8E16E0();
  uint64_t v18 = *(void *)(v17 - 8);
  double v20 = MEMORY[0x1F4188790](v17, v19);
  uint64_t v22 = (char *)v24 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(void *)(AssociatedTypeWitness - 8) + 56))((char *)v24 - v21, 1, 1, AssociatedTypeWitness, v20);
  v24[0] = a8;
  v24[1] = a9;
  sub_1DE8D9AD4(a1, (uint64_t)v22, v24, 0, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v17);
}

void (*sub_1DE8D9AD4(uint64_t a1, uint64_t a2, double *a3, int a4, uint64_t a5, uint64_t a6, long double a7, double a8))(uint64_t *, void)
{
  int v71 = a4;
  uint64_t v66 = a2;
  uint64_t v14 = sub_1DE8E1350();
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v67 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = sub_1DE8E16E0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70, v19);
  uint64_t v68 = (char *)&v64 - v20;
  uint64_t v72 = AssociatedTypeWitness;
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v21, v22);
  BOOL v65 = (char *)&v64 - v23;
  uint64_t v74 = v17;
  uint64_t v75 = a5;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24, v26);
  unint64_t v28 = (char *)&v64 - v27;
  double v29 = *a3;
  double v30 = a3[1];
  if (qword_1EBEA7DC8 != -1) {
    swift_once();
  }
  id v31 = (id)qword_1EBEA7DC0;
  sub_1DE8E1690();
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBEA9E70);
  uint64_t v32 = swift_allocObject();
  long long v78 = xmmword_1DE8E25E0;
  *(_OWORD *)(v32 + 16) = xmmword_1DE8E25E0;
  uint64_t v81 = 0;
  unint64_t v82 = 0xE000000000000000;
  uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v79(v28, a1, v24);
  sub_1DE8E1AA0();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v25 + 8);
  v77(v28, v24);
  uint64_t v33 = v81;
  unint64_t v34 = v82;
  *(void *)(v32 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v76 = sub_1DE819640();
  *(void *)(v32 + 64) = v76;
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v34;
  sub_1DE8E13A0();

  swift_bridgeObjectRelease();
  double v35 = v29 * a8;
  double v36 = v30 * a8;
  if (v35 <= 0.0 && v36 <= 0.0) {
    goto LABEL_24;
  }
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v38 = *(void *)(AssociatedConformanceWitness + 8);
  double v39 = (*(double (**)(uint64_t, uint64_t))(v38 + 16))(v24, v38);
  if (a7 != 1.0 && v35 != 1.0) {
    double v35 = (1.0 - pow(a7, v35)) / (1.0 - a7);
  }
  double v40 = pow(a7, v36);
  double v41 = v39 * v40;
  int64_t v42 = *(void (**)(uint64_t, uint64_t))(v38 + 24);
  uint64_t v64 = a1;
  v42(v24, v38);
  if (a7 == 1.0)
  {
    uint64_t v44 = v72;
    uint64_t v45 = v73;
    uint64_t v46 = v70;
    uint64_t v47 = v69;
    uint64_t v48 = v68;
  }
  else
  {
    uint64_t v44 = v72;
    uint64_t v45 = v73;
    uint64_t v46 = v70;
    uint64_t v47 = v69;
    uint64_t v48 = v68;
    if (v36 != 1.0) {
      double v36 = (1.0 - v40) / (1.0 - a7);
    }
  }
  double v49 = v35 + v41;
  double v50 = v40 * v43 + v36;
  if (v71)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v48, v66, v46);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v48, 1, v44) == 1)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v65, v48, v44);
      double v51 = 0.0;
      if (v50 > 0.0 && v49 / v50 > 0.0)
      {
        if (v49 / v50 <= 1.0) {
          double v51 = v49 / v50;
        }
        else {
          double v51 = 1.0;
        }
      }
      uint64_t v52 = swift_getAssociatedConformanceWitness();
      unint64_t v53 = v65;
      ReadonlyAggregateType.personalizationValue.getter(v44, v52);
      double v55 = v54;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v53, v44);
      if (v55 < v51) {
        double v49 = v50 * v55;
      }
    }
  }
  a1 = v64;
  (*(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 16))(v24, AssociatedConformanceWitness, v49);
  (*(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 32))(v24, AssociatedConformanceWitness, v50);
  uint64_t result = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(&v81, v24, AssociatedConformanceWitness);
  if (*v57 != -1)
  {
    ++*v57;
    result(&v81, 0);
    BOOL v58 = v67;
    sub_1DE8E1340();
    (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v58, v24, AssociatedConformanceWitness);
LABEL_24:
    id v59 = (id)qword_1EBEA7DC0;
    sub_1DE8E1690();
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v78;
    uint64_t v81 = 0;
    unint64_t v82 = 0xE000000000000000;
    v79(v28, a1, v24);
    sub_1DE8E1AA0();
    v77(v28, v24);
    uint64_t v61 = v81;
    unint64_t v62 = v82;
    unint64_t v63 = v76;
    *(void *)(v60 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v60 + 64) = v63;
    *(void *)(v60 + 32) = v61;
    *(void *)(v60 + 40) = v62;
    sub_1DE8E13A0();

    return (void (*)(uint64_t *, void))swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DE8DA26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long double a6, double a7, double a8, double a9)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_1DE8E16E0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v21);
  uint64_t v23 = (char *)v26 - v22;
  LOBYTE(a2) = sub_1DE8DA444(a2, a1);
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v23, a3, AssociatedTypeWitness);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, AssociatedTypeWitness);
  v26[0] = a8;
  v26[1] = a9;
  sub_1DE8D9AD4(a1, (uint64_t)v23, v26, a2 & 1, a4, a5, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
}

uint64_t sub_1DE8DA444(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  double v7 = MEMORY[0x1F4188790](AssociatedTypeWitness, v6);
  uint64_t v9 = (char *)&v18 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v18 - v8, a2, AssociatedTypeWitness, v7);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(AssociatedTypeWitness);
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);
  if (*(void *)(a1 + 16) && (unint64_t v14 = sub_1DE821D84(v11, v13), (v15 & 1) != 0)) {
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(a1 + 56) + (v14 << 6));
  }
  else {
    uint64_t v16 = 0;
  }
  swift_bridgeObjectRelease();
  return v16;
}

void *__swift_project_boxed_opaque_existential_2(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1DE8DA614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t _s14ArticleTrainerVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DE8DA634(uint64_t a1)
{
  return sub_1DE8D9958(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(long double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t sub_1DE8DA648(uint64_t a1)
{
  return sub_1DE8DA26C(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), *(long double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t sub_1DE8DA660(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a5;
  uint64_t v33 = a8;
  uint64_t v10 = v9;
  double v41 = a1;
  uint64_t v42 = a2;
  uint64_t v31 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1, a2);
  double v43 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v39 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v13);
  char v15 = (char *)&v29 - v14;
  MEMORY[0x1F4188790](v16, v17);
  double v36 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(v19 - 8);
  uint64_t v35 = v19;
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v29 - v21;
  uint64_t v37 = v8;
  uint64_t v23 = sub_1DE8E1660();
  if (!v23) {
    return sub_1DE8E15B0();
  }
  uint64_t v24 = v23;
  double v30 = v15;
  uint64_t v46 = sub_1DE8E13C0();
  uint64_t v38 = sub_1DE8E17A0();
  sub_1DE8E1770();
  uint64_t v44 = v22;
  uint64_t result = sub_1DE8E1650();
  if (v24 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = (void (**)(char *))(v39 + 2);
    ++v39;
    double v40 = v26;
    uint64_t v27 = v30;
    while (1)
    {
      unint64_t v28 = (void (*)(char *, void))sub_1DE8E1680();
      (*v40)(v27);
      v28(v45, 0);
      v41(v27, v43);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v39)(v27, AssociatedTypeWitness);
      sub_1DE8E1780();
      sub_1DE8E1670();
      if (!--v24)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v44, v35);
        return v46;
      }
    }
    (*v39)(v27, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v44, v35);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v43, v32);
  }
  return result;
}

uint64_t Classic.TagMappings.sourceTags.getter()
{
  return sub_1DE8E1610();
}

uint64_t Classic.TagMappings.count.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for Classic.TagMapping();
  return MEMORY[0x1E01D4100](v1, v2);
}

uint64_t Classic.TagMappings.mappings(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 16);
  long long v9 = *(_OWORD *)(a2 + 24);
  long long v10 = *(_OWORD *)(a2 + 40);
  long long v11 = *(_OWORD *)(a2 + 56);
  uint64_t v12 = v5;
  type metadata accessor for Classic.TagMapping();
  uint64_t v6 = sub_1DE8E1600();
  MEMORY[0x1E01D3F40](&v8, a1, v4, v9, v6, v5);
  uint64_t result = v8;
  if (!v8) {
    return sub_1DE8E15B0();
  }
  return result;
}

uint64_t Classic.TagMapping.description.getter()
{
  return 0;
}

BOOL sub_1DE8DACE4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1DE8DACF4()
{
  return sub_1DE8E1BB0();
}

uint64_t sub_1DE8DAD1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6154656372756F73 && a2 == 0xE900000000000067;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEE006761546E6F69 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE8DAE9C(char a1)
{
  if (!a1) {
    return 0x6154656372756F73;
  }
  if (a1 == 1) {
    return 0x74616E6974736564;
  }
  return 0x65726F6373;
}

uint64_t sub_1DE8DAF00(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_1DE8DCD78(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_1DE8DACE4);
}

uint64_t sub_1DE8DAF1C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1DE8DCE18(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1DE8DACF4);
}

uint64_t sub_1DE8DAF34(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1DE8DCE70(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void, void, void))sub_1DE8DACF4);
}

uint64_t sub_1DE8DAF4C(void *a1, uint64_t a2)
{
  return sub_1DE8DCEF0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1DE8DAE9C);
}

uint64_t sub_1DE8DAF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1DE8DCF48(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_1DE8DAD1C, a4);
}

uint64_t sub_1DE8DAF7C()
{
  return 0;
}

uint64_t sub_1DE8DAF88@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1DE8DCFBC(a1, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1DE8DEB8C, a2);
}

uint64_t sub_1DE8DAFA0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DE8DAFF4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t Classic.TagMapping.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = v14;
  uint64_t v3 = *(void *)(a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 24);
  long long v16 = v12;
  long long v13 = *(_OWORD *)(a2 + 40);
  long long v17 = v13;
  uint64_t v18 = v3;
  long long v11 = *(_OWORD *)(a2 + 64);
  long long v19 = v11;
  _s10TagMappingV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v4 = sub_1DE8E1A60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8E1C10();
  LOBYTE(v15) = 0;
  uint64_t v9 = v20;
  sub_1DE8E1A40();
  if (!v9)
  {
    LOBYTE(v15) = 1;
    sub_1DE8E1A40();
    LOBYTE(v15) = 2;
    sub_1DE8E1A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t Classic.TagMapping.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v60 = a6;
  uint64_t v59 = a5;
  unint64_t v62 = (void *)a1;
  uint64_t v50 = a9;
  uint64_t v51 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  double v54 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v17, v16);
  double v55 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v19;
  uint64_t v64 = v20;
  uint64_t v65 = v21;
  uint64_t v66 = v22;
  uint64_t v67 = v23;
  uint64_t v68 = v24;
  uint64_t v69 = v25;
  uint64_t v70 = a10;
  _s10TagMappingV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v58 = sub_1DE8E1960();
  uint64_t v53 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58, v26);
  unint64_t v28 = (char *)&v48 - v27;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v65 = a4;
  uint64_t v66 = v59;
  uint64_t v67 = v60;
  uint64_t v68 = a7;
  uint64_t v59 = a7;
  uint64_t v69 = a8;
  uint64_t v70 = a10;
  uint64_t v29 = v62;
  uint64_t v30 = type metadata accessor for Classic.TagMapping();
  uint64_t v49 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (char *)&v48 - v32;
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  uint64_t v60 = v28;
  uint64_t v34 = v61;
  sub_1DE8E1BF0();
  if (v34) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  }
  uint64_t v61 = v33;
  uint64_t v35 = v53;
  double v36 = v54;
  uint64_t v37 = v55;
  uint64_t v38 = v56;
  LOBYTE(v63) = 0;
  double v39 = v60;
  sub_1DE8E1930();
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v61, v37, a2);
  LOBYTE(v63) = 1;
  sub_1DE8E1930();
  uint64_t v40 = v30;
  uint64_t v41 = *(int *)(v30 + 84);
  uint64_t v42 = v61;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v61[v41], v36, v38);
  LOBYTE(v63) = 2;
  sub_1DE8E1910();
  uint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v58);
  *(void *)&v42[*(int *)(v40 + 88)] = v44;
  uint64_t v45 = v40;
  uint64_t v46 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v50, v42, v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v42, v45);
}

uint64_t sub_1DE8DB74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v10 = type metadata accessor for Classic.TagMapping();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v10 + 84), a2, a4);
  *(double *)(a5 + *(int *)(v10 + 88)) = a6;
  return result;
}

uint64_t sub_1DE8DB850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Classic.TagMapping.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(char **)(a2 + 48), *(void *)(a2 + 56), *(void *)(a2 + 64), a3, *(void *)(a2 + 72));
}

uint64_t sub_1DE8DB888(void *a1, uint64_t a2)
{
  return Classic.TagMapping.encode(to:)(a1, a2);
}

uint64_t Classic.TagMappings.init(scoredMappings:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  type metadata accessor for Classic.TagMapping();
  sub_1DE8E1600();
  sub_1DE8E13B0();
  swift_getTupleTypeMetadata2();
  sub_1DE8E1600();
  sub_1DE8E1410();
  sub_1DE8E1410();
  swift_getWitnessTable();
  sub_1DE8E14B0();
  swift_bridgeObjectRetain();
  sub_1DE8E13B0();
  sub_1DE8E1410();
  sub_1DE8E14B0();
  swift_bridgeObjectRelease();
  sub_1DE8E1400();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1DE8E14D0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DE8E1610();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v2;
  a2[1] = a1;
  a2[2] = a1;
  return result;
}

uint64_t sub_1DE8DBBC4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v71 = a8;
  uint64_t v77 = a1;
  long long v78 = a2;
  uint64_t v73 = a12;
  unint64_t v76 = *(void (***)(char *, uint64_t, uint64_t))(a5 - 8);
  uint64_t v70 = a11;
  uint64_t v72 = a10;
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v75 = (char *)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = v18;
  uint64_t v82 = v19;
  uint64_t v83 = v20;
  uint64_t v84 = v21;
  uint64_t v22 = v20;
  uint64_t v69 = v20;
  uint64_t v85 = v23;
  uint64_t v86 = v24;
  uint64_t v80 = v23;
  uint64_t v87 = v26;
  uint64_t v88 = v25;
  uint64_t v66 = type metadata accessor for Classic.TagMapping();
  MEMORY[0x1F4188790](v66, v27);
  uint64_t v79 = (uint64_t)v65 - v28;
  uint64_t v29 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (void (**)(char *, uint64_t, uint64_t))((char *)v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v36 = MEMORY[0x1F4188790](v34, v35);
  uint64_t v74 = (uint64_t)v65 - v37;
  uint64_t v67 = v29;
  uint64_t v38 = *(void (**)(double))(v29 + 16);
  v38(v36);
  double v39 = (void *)swift_allocObject();
  uint64_t v40 = a4;
  uint64_t v68 = a4;
  v39[2] = a4;
  v39[3] = a5;
  v39[4] = v22;
  uint64_t v42 = v71;
  uint64_t v41 = v72;
  v39[5] = v71;
  v39[6] = a9;
  uint64_t v43 = v70;
  v39[7] = v41;
  v39[8] = v43;
  uint64_t v44 = v73;
  v39[9] = v73;
  v65[1] = v29 + 16;
  v65[0] = v38;
  ((void (*)(void, uint64_t, uint64_t))v38)(v33, a3, v40);
  uint64_t v45 = v75;
  v76[2](v75, v77, a5);
  uint64_t v46 = v43;
  unint64_t v76 = v33;
  uint64_t v47 = (uint64_t)v45;
  uint64_t v48 = v68;
  uint64_t v49 = a5;
  uint64_t v50 = a5;
  uint64_t v51 = v69;
  uint64_t v52 = v42;
  uint64_t v53 = v80;
  sub_1DE8DB74C((uint64_t)v33, v47, v68, v49, v79, a6);
  double v54 = (void *)swift_allocObject();
  v54[2] = v48;
  v54[3] = v50;
  v54[4] = v51;
  v54[5] = v52;
  v54[6] = v53;
  v54[7] = v41;
  v54[8] = v46;
  v54[9] = v44;
  double v55 = v78;
  v54[10] = sub_1DE8DECD4;
  v54[11] = v39;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v81 = *v55;
  uint64_t v56 = v81;
  *double v55 = 0x8000000000000000;
  uint64_t v57 = v74;
  sub_1DE8DD8D0(v74, v48, v53);
  if (__OFADD__(*(void *)(v56 + 16), (v58 & 1) == 0))
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  char v59 = v58;
  uint64_t v77 = sub_1DE8E1600();
  sub_1DE8E17E0();
  char v60 = sub_1DE8E17C0();
  uint64_t v61 = v81;
  if (v60)
  {
    sub_1DE8DD8D0(v57, v48, v80);
    if ((v59 & 1) != (v62 & 1)) {
      goto LABEL_9;
    }
  }
  *double v55 = v61;
  swift_bridgeObjectRelease();
  if (v59)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v81 = ((uint64_t (*)(uint64_t))v54[10])(v63);
    ((void (*)(void, uint64_t, uint64_t))v65[0])(v76, v57, v48);
    sub_1DE8E17D0();
  }
  swift_bridgeObjectRelease();
  sub_1DE8E15F0();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v57, v48);
  swift_release();
  return swift_release();
}

uint64_t sub_1DE8DC090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v35 = a8;
  uint64_t v34 = a7;
  uint64_t v32 = a6;
  uint64_t v31 = a5;
  uint64_t v33 = a1;
  uint64_t v37 = a12;
  uint64_t v36 = a11;
  uint64_t v30 = a10;
  swift_getTupleTypeMetadata2();
  sub_1DE8E1600();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2 - 8, v16);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v19 = *(void *)(a3 - 8);
  double v22 = MEMORY[0x1F4188790](v20, v21);
  uint64_t v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(int *)(v25 + 56);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v18, a2, a3, v22);
  uint64_t v27 = *(void *)(a2 + v26);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v18, a3);
  uint64_t v59 = v27;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v51 = v31;
  uint64_t v52 = v32;
  uint64_t v53 = v34;
  uint64_t v54 = v35;
  uint64_t v55 = a9;
  uint64_t v56 = v30;
  uint64_t v57 = v33;
  char v58 = v24;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = v31;
  uint64_t v41 = v32;
  uint64_t v42 = v34;
  uint64_t v43 = v35;
  uint64_t v44 = a9;
  uint64_t v45 = v30;
  uint64_t v46 = v36;
  uint64_t v47 = &v48;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1DE8E14E0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v24, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8DC350(void (*a1)(double), uint64_t *a2, char *a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v84 = a8;
  uint64_t v80 = a3;
  uint64_t v81 = a2;
  uint64_t v75 = a1;
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v77 = a12;
  uint64_t v78 = v16;
  uint64_t v76 = a11;
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v79 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = v18;
  uint64_t v86 = v19;
  uint64_t v20 = v19;
  uint64_t v87 = v21;
  uint64_t v88 = v22;
  uint64_t v73 = v21;
  uint64_t v89 = v23;
  uint64_t v90 = v24;
  uint64_t v74 = v23;
  uint64_t v25 = v24;
  uint64_t v91 = v26;
  uint64_t v92 = v27;
  uint64_t v71 = type metadata accessor for Classic.TagMapping();
  MEMORY[0x1F4188790](v71, v28);
  uint64_t v83 = (uint64_t)&v70 - v29;
  uint64_t v30 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v37 = MEMORY[0x1F4188790](v35, v36);
  uint64_t v82 = (uint64_t)&v70 - v38;
  uint64_t v72 = v30;
  uint64_t v39 = *(void (**)(double))(v30 + 16);
  v39(v37);
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = a4;
  v40[2] = a4;
  long long v40[3] = v20;
  uint64_t v42 = v20;
  uint64_t v43 = v84;
  v40[4] = a7;
  v40[5] = v43;
  v40[6] = a9;
  v40[7] = v25;
  uint64_t v44 = v25;
  uint64_t v46 = v76;
  uint64_t v45 = v77;
  v40[8] = v76;
  v40[9] = v45;
  uint64_t v47 = v79;
  uint64_t v48 = v41;
  (*(void (**)(char *, char *))(v78 + 16))(v79, v80);
  uint64_t v49 = v75;
  uint64_t v78 = v30 + 16;
  uint64_t v75 = v39;
  ((void (*)(char *, void (*)(double), uint64_t))v39)(v34, v49, v42);
  uint64_t v50 = v46;
  uint64_t v51 = (uint64_t)v47;
  uint64_t v52 = v42;
  uint64_t v80 = v34;
  uint64_t v53 = (uint64_t)v34;
  uint64_t v54 = v42;
  uint64_t v55 = v73;
  uint64_t v56 = v84;
  uint64_t v57 = v74;
  sub_1DE8DB74C(v51, v53, v48, v54, v83, a5);
  char v58 = (void *)swift_allocObject();
  void v58[2] = v48;
  v58[3] = v52;
  v58[4] = v55;
  v58[5] = v56;
  v58[6] = v57;
  v58[7] = v44;
  v58[8] = v50;
  v58[9] = v45;
  uint64_t v59 = v81;
  v58[10] = sub_1DE8DEBD4;
  v58[11] = v40;
  uint64_t v84 = v40;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v85 = *v59;
  uint64_t v60 = v85;
  *uint64_t v59 = 0x8000000000000000;
  uint64_t v61 = v45;
  sub_1DE8DD8D0(v82, v52, v45);
  if (__OFADD__(*(void *)(v60 + 16), (v62 & 1) == 0))
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1DE8E1B40();
    __break(1u);
    return result;
  }
  char v63 = v62;
  sub_1DE8E1600();
  sub_1DE8E17E0();
  char v64 = sub_1DE8E17C0();
  uint64_t v65 = v85;
  uint64_t v66 = v82;
  if (v64)
  {
    sub_1DE8DD8D0(v82, v52, v61);
    if ((v63 & 1) != (v67 & 1)) {
      goto LABEL_9;
    }
  }
  *uint64_t v59 = v65;
  swift_bridgeObjectRelease();
  if (v63)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v85 = ((uint64_t (*)(uint64_t))v58[10])(v68);
    ((void (*)(char *, uint64_t, uint64_t))v75)(v80, v66, v52);
    sub_1DE8E17D0();
  }
  swift_bridgeObjectRelease();
  sub_1DE8E15F0();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v66, v52);
  swift_release();
  return swift_release();
}

uint64_t Classic.TagMappings.mappings(for:)(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)(v2 + 8);
  long long v5 = a2[2];
  v10[0] = a2[1];
  long long v6 = a2[4];
  long long v9 = a2[3];
  v10[1] = v5;
  void v10[2] = v9;
  v10[3] = v6;
  type metadata accessor for Classic.TagMapping();
  uint64_t v7 = sub_1DE8E1600();
  MEMORY[0x1E01D3F40](v10, a1, v4, *(void *)&v10[0], v7, v9);
  uint64_t result = *(void *)&v10[0];
  if (!*(void *)&v10[0]) {
    return sub_1DE8E15B0();
  }
  return result;
}

uint64_t Classic.TagMappings.description.getter(void *a1)
{
  uint64_t v29 = *(void *)(v1 + 8);
  uint64_t v2 = a1[3];
  uint64_t v13 = a1[2];
  uint64_t v14 = v2;
  uint64_t v3 = a1[5];
  uint64_t v15 = a1[4];
  uint64_t v16 = v3;
  uint64_t v4 = a1[7];
  uint64_t v17 = a1[6];
  uint64_t v18 = v4;
  uint64_t v5 = a1[9];
  uint64_t v19 = a1[8];
  uint64_t v20 = v5;
  swift_bridgeObjectRetain();
  uint64_t v21 = v13;
  uint64_t v22 = v2;
  uint64_t v23 = v15;
  uint64_t v24 = v3;
  uint64_t v25 = v17;
  uint64_t v26 = v4;
  uint64_t v27 = v19;
  uint64_t v28 = v5;
  type metadata accessor for Classic.TagMapping();
  sub_1DE8E1600();
  uint64_t v6 = sub_1DE8E1410();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1DE8DA660((void (*)(char *, char *))sub_1DE8DDBC4, (uint64_t)&v12, v6, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
  swift_bridgeObjectRelease();
  uint64_t v21 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAC0BA00);
  sub_1DE8DDBFC();
  uint64_t v10 = sub_1DE8E1440();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DE8DC9F4@<X0>(void *a1@<X8>)
{
  sub_1DE8E1AA0();
  sub_1DE8E1490();
  type metadata accessor for Classic.TagMapping();
  sub_1DE8E1600();
  swift_getTupleTypeMetadata2();
  swift_getWitnessTable();
  uint64_t result = sub_1DE8E1AB0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1DE8DCB18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697070614D776172 && a2 == 0xEB0000000073676ELL;
  if (v2 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D656372756F73 && a2 == 0xEE0073676E697070 || (sub_1DE8E1AC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE8F6590)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE8E1AC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE8DCCA8()
{
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8DCCF0(char a1)
{
  if (!a1) {
    return 0x697070614D776172;
  }
  if (a1 == 1) {
    return 0x614D656372756F73;
  }
  return 0xD000000000000013;
}

uint64_t sub_1DE8DCD60(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_1DE8DCD78(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void))sub_1DE8DED28);
}

uint64_t sub_1DE8DCD78(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void, void, void))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]) & 1;
}

uint64_t sub_1DE8DCDC8()
{
  return sub_1DE8DCCA8();
}

uint64_t sub_1DE8DCE00(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1DE8DCE18(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1DE8DED38);
}

uint64_t sub_1DE8DCE18(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);
}

uint64_t sub_1DE8DCE58(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1DE8DCE70(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void, void, void))sub_1DE8DED38);
}

uint64_t sub_1DE8DCE70(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void, void, void, void, void, void))
{
  sub_1DE8E1BA0();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);
  return sub_1DE8E1BD0();
}

uint64_t sub_1DE8DCED8(void *a1, uint64_t a2)
{
  return sub_1DE8DCEF0(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1DE8DCCF0);
}

uint64_t sub_1DE8DCEF0(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

uint64_t sub_1DE8DCF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1DE8DCF48(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_1DE8DCB18, a4);
}

uint64_t sub_1DE8DCF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]);
  *a5 = result;
  return result;
}

uint64_t sub_1DE8DCF98()
{
  return 0;
}

uint64_t sub_1DE8DCFA4@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1DE8DCFBC(a1, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1DE8DED34, a2);
}

uint64_t sub_1DE8DCFBC@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  *a3 = result;
  return result;
}

uint64_t sub_1DE8DD000(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DE8DD054(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t Classic.TagMappings.encode(to:)(void *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v27 = a2[2];
  uint64_t v20 = v4;
  uint64_t v5 = a2[5];
  uint64_t v22 = a2[4];
  uint64_t v28 = v5;
  uint64_t v6 = a2[7];
  uint64_t v26 = a2[6];
  uint64_t v21 = v6;
  uint64_t v7 = a2[9];
  uint64_t v24 = a2[8];
  uint64_t v25 = v7;
  uint64_t v35 = v27;
  uint64_t v36 = v4;
  uint64_t v37 = v22;
  uint64_t v38 = v5;
  uint64_t v39 = v26;
  uint64_t v40 = v6;
  uint64_t v41 = v24;
  uint64_t v42 = v7;
  _s11TagMappingsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v8 = sub_1DE8E1A60();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  long long v11 = (char *)&v16 - v10;
  uint64_t v12 = *v2;
  uint64_t v18 = v2[1];
  uint64_t v17 = v2[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE8E1C10();
  uint64_t v43 = v12;
  char v34 = 0;
  uint64_t v35 = v27;
  uint64_t v36 = v20;
  uint64_t v37 = v22;
  uint64_t v38 = v28;
  uint64_t v39 = v26;
  uint64_t v40 = v21;
  uint64_t v41 = v24;
  uint64_t v42 = v25;
  type metadata accessor for Classic.TagMapping();
  sub_1DE8E1600();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = v23;
  sub_1DE8E1A40();
  if (!v14)
  {
    uint64_t v35 = v18;
    LOBYTE(v43) = 1;
    sub_1DE8E1410();
    uint64_t v31 = v28;
    uint64_t v32 = v13;
    swift_getWitnessTable();
    sub_1DE8E1A40();
    uint64_t v35 = v17;
    LOBYTE(v43) = 2;
    sub_1DE8E1410();
    uint64_t v29 = v24;
    uint64_t v30 = v13;
    swift_getWitnessTable();
    sub_1DE8E1A40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v8);
}

uint64_t Classic.TagMappings.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v29 = a9;
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v48 = a7;
  uint64_t v30 = a7;
  uint64_t v49 = a8;
  uint64_t v50 = a10;
  uint64_t v32 = a10;
  _s11TagMappingsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v31 = sub_1DE8E1960();
  uint64_t v14 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31, v15);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v37 = a1;
  uint64_t v17 = (void *)a1;
  uint64_t v19 = (char *)&v28 - v18;
  __swift_project_boxed_opaque_existential_1(v17, v16);
  sub_1DE8E1BF0();
  if (v10) {
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  uint64_t v20 = v14;
  uint64_t v43 = v34;
  uint64_t v44 = v33;
  uint64_t v45 = v36;
  uint64_t v46 = a5;
  uint64_t v21 = v30;
  uint64_t v47 = v35;
  uint64_t v48 = v30;
  uint64_t v49 = a8;
  uint64_t v50 = v32;
  type metadata accessor for Classic.TagMapping();
  sub_1DE8E1600();
  LOBYTE(v43) = 0;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = swift_getWitnessTable();
  sub_1DE8E1930();
  uint64_t v23 = v51;
  sub_1DE8E1410();
  LOBYTE(v51) = 1;
  uint64_t v40 = v36;
  uint64_t v41 = v22;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1DE8E1930();
  uint64_t v24 = v43;
  sub_1DE8E1410();
  LOBYTE(v51) = 2;
  uint64_t v38 = v21;
  uint64_t v39 = v22;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1DE8E1930();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v31);
  uint64_t v25 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v29;
  *uint64_t v29 = v23;
  v26[1] = v24;
  double v26[2] = v25;
  __swift_destroy_boxed_opaque_existential_1(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE8DD87C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return Classic.TagMappings.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9]);
}

uint64_t sub_1DE8DD8B4(void *a1, void *a2)
{
  return Classic.TagMappings.encode(to:)(a1, a2);
}

unint64_t sub_1DE8DD8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE8E1430();
  return sub_1DE8DD92C(a1, v6, a2, a3);
}

unint64_t sub_1DE8DD92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a1;
  void v22[2] = a4;
  v7.n128_f64[0] = MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v4;
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v11 & ~v10;
  v22[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v10;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v15 = v16;
    uint64_t v17 = *(void *)(v14 + 56);
    uint64_t v18 = (void (**)(char *, uint64_t))(v14 - 8);
    do
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v23 + 48) + v17 * v12, a3, v7);
      char v20 = sub_1DE8E1450();
      (*v18)(v9, a3);
      if (v20) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      uint64_t v14 = v19;
    }
    while (((*(void *)(v22[0] + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

uint64_t type metadata accessor for Classic.TagMapping()
{
  return swift_getGenericMetadata();
}

uint64_t _s10TagMappingV10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DE8DDAE4(uint64_t a1, uint64_t a2)
{
  return sub_1DE8DDB64(a1, a2, (uint64_t)sub_1DE8DEBE8, (uint64_t)sub_1DE8DEC48);
}

uint64_t sub_1DE8DDB24(uint64_t a1, uint64_t a2)
{
  return sub_1DE8DDB64(a1, a2, (uint64_t)sub_1DE8DEB94, (uint64_t)sub_1DE8DEBAC);
}

uint64_t sub_1DE8DDB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DE8DC090(a1, a2, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], v4[8], v4[9], a3, a4);
}

uint64_t sub_1DE8DDBA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DE8DDBC4@<X0>(void *a1@<X8>)
{
  return sub_1DE8DC9F4(a1);
}

unint64_t sub_1DE8DDBFC()
{
  unint64_t result = qword_1EAC0D728[0];
  if (!qword_1EAC0D728[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAC0BA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAC0D728);
  }
  return result;
}

uint64_t _s11TagMappingsV10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DE8DDC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 80);
}

uint64_t sub_1DE8DDC78()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DE8DDD54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    *(void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1DE8DDEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_1DE8DDF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  *(void *)((*(void *)(v9 + 48) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 48) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DE8DE060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  *(void *)((*(void *)(v9 + 40) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 40) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DE8DE130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(void *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DE8DE200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(void *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DE8DE2D0(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  if (v10 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(v5 - 8) + 64) + (v11 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v13 = a2 - v10;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DE8DE480);
      case 4:
        int v17 = *(int *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_21:
        unsigned int v18 = v17 - 1;
        if (v14)
        {
          unsigned int v18 = 0;
          int v19 = *a1;
        }
        else
        {
          int v19 = 0;
        }
        return v10 + (v19 | v18) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 >= v8) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
}

void sub_1DE8DE494(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_17:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_41;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 >= v10)
            {
              uint64_t v24 = *(void (**)(void))(v6 + 56);
              v24();
            }
            else
            {
              unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
              uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
              v23(v22);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v12;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v20 = v19;
  }
  else {
    int v20 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v21 = ~v12 + a2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1DE8DE6F4);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t sub_1DE8DE71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 80);
}

uint64_t sub_1DE8DE728()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1DE8DE770(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DE8DE7C0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DE8DE838(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DE8DE888(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DE8DE8D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Classic.TagMappings()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DE8DE928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_1DE8DE93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_1DE8DE948(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1DE8DE9DC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE8DEAA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE8DEAD0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE8DEADC(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_1DE8DEAE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8DEB00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8DEB1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8DEB38()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8DEB54()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8DEB70()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DE8DEB8C()
{
  return 3;
}

uint64_t sub_1DE8DEB94(uint64_t a1)
{
  return sub_1DE8DEC00(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void))sub_1DE8DC350);
}

uint64_t sub_1DE8DEBAC(uint64_t a1)
{
  return sub_1DE8DEC60(a1);
}

uint64_t sub_1DE8DEBC4()
{
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1DE8DEBD8()
{
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1DE8DEBE8(uint64_t a1)
{
  return sub_1DE8DEC00(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void))sub_1DE8DBBC4);
}

uint64_t sub_1DE8DEC00(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[10], v2[11], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
}

uint64_t sub_1DE8DEC48(uint64_t a1)
{
  return sub_1DE8DEC60(a1);
}

uint64_t sub_1DE8DEC60(uint64_t a1)
{
  int v3 = *(uint64_t (**)(uint64_t, double))(v1 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, *(double *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
}

uint64_t sub_1DE8DECC4()
{
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1DE8DECD8()
{
  return sub_1DE8E13C0();
}

uint64_t sub_1DE8DED14()
{
  return MEMORY[0x1F4186498](v0, 96, 7);
}

BOOL sub_1DE8DED28(char a1, char a2)
{
  return sub_1DE8DACE4(a1, a2);
}

uint64_t sub_1DE8DED38()
{
  return sub_1DE8DACF4();
}

uint64_t (*sub_1DE8DED48(uint64_t a1, uint64_t a2))()
{
  swift_getFunctionTypeMetadata3();
  sub_1DE8E1A90();
  swift_allocObject();
  sub_1DE8E1590();
  uint64_t v98 = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v6 = sub_1DE8E1390();
  uint64_t v8 = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = (uint64_t (*)())swift_allocObject();
  *((void *)v9 + 2) = a1;
  *((void *)v9 + 3) = a2;
  *((void *)v9 + 4) = v6;
  *((void *)v9 + 5) = v8;
  double *v98 = sub_1DE8E09CC;
  v98[1] = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v11 = sub_1DE8E1390();
  uint64_t v13 = v12;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  size_t v14 = (uint64_t (*)())swift_allocObject();
  *((void *)v14 + 2) = a1;
  *((void *)v14 + 3) = a2;
  *((void *)v14 + 4) = v11;
  *((void *)v14 + 5) = v13;
  v98[2] = sub_1DE8E0C78;
  uint64_t v98[3] = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v16 = sub_1DE8E1390();
  uint64_t v18 = v17;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  int v19 = (uint64_t (*)())swift_allocObject();
  *((void *)v19 + 2) = a1;
  *((void *)v19 + 3) = a2;
  *((void *)v19 + 4) = v16;
  *((void *)v19 + 5) = v18;
  v98[4] = sub_1DE8E0C7C;
  v98[5] = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v21 = sub_1DE8E1390();
  uint64_t v23 = v22;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = (uint64_t (*)())swift_allocObject();
  *((void *)v24 + 2) = a1;
  *((void *)v24 + 3) = a2;
  *((void *)v24 + 4) = v21;
  *((void *)v24 + 5) = v23;
  v98[6] = sub_1DE8E0C80;
  v98[7] = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v26 = sub_1DE8E1390();
  uint64_t v28 = v27;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v29 = (uint64_t (*)())swift_allocObject();
  *((void *)v29 + 2) = a1;
  *((void *)v29 + 3) = a2;
  *((void *)v29 + 4) = v26;
  *((void *)v29 + 5) = v28;
  v98[8] = sub_1DE8E0C84;
  v98[9] = v29;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a1;
  *(void *)(v30 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v31 = sub_1DE8E1390();
  uint64_t v33 = v32;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = (uint64_t (*)())swift_allocObject();
  *((void *)v34 + 2) = a1;
  *((void *)v34 + 3) = a2;
  *((void *)v34 + 4) = v31;
  *((void *)v34 + 5) = v33;
  v98[10] = sub_1DE8E0C88;
  v98[11] = v34;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a1;
  *(void *)(v35 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v36 = sub_1DE8E1390();
  uint64_t v38 = v37;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v39 = (uint64_t (*)())swift_allocObject();
  *((void *)v39 + 2) = a1;
  *((void *)v39 + 3) = a2;
  *((void *)v39 + 4) = v36;
  *((void *)v39 + 5) = v38;
  v98[12] = sub_1DE8E0C8C;
  v98[13] = v39;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a1;
  *(void *)(v40 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v41 = sub_1DE8E1390();
  uint64_t v43 = v42;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v44 = (uint64_t (*)())swift_allocObject();
  *((void *)v44 + 2) = a1;
  *((void *)v44 + 3) = a2;
  *((void *)v44 + 4) = v41;
  *((void *)v44 + 5) = v43;
  v98[14] = sub_1DE8E0C90;
  v98[15] = v44;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = a1;
  *(void *)(v45 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v46 = sub_1DE8E1390();
  uint64_t v48 = v47;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v49 = (uint64_t (*)())swift_allocObject();
  *((void *)v49 + 2) = a1;
  *((void *)v49 + 3) = a2;
  *((void *)v49 + 4) = v46;
  *((void *)v49 + 5) = v48;
  v98[16] = sub_1DE8E0C94;
  v98[17] = v49;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = a1;
  *(void *)(v50 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v51 = sub_1DE8E1390();
  uint64_t v53 = v52;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v54 = (uint64_t (*)())swift_allocObject();
  *((void *)v54 + 2) = a1;
  *((void *)v54 + 3) = a2;
  *((void *)v54 + 4) = v51;
  *((void *)v54 + 5) = v53;
  v98[18] = sub_1DE8E0C98;
  v98[19] = v54;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = a1;
  *(void *)(v55 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v56 = sub_1DE8E1390();
  uint64_t v58 = v57;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v59 = (uint64_t (*)())swift_allocObject();
  *((void *)v59 + 2) = a1;
  *((void *)v59 + 3) = a2;
  *((void *)v59 + 4) = v56;
  *((void *)v59 + 5) = v58;
  v98[20] = sub_1DE8E0C9C;
  v98[21] = v59;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = a1;
  *(void *)(v60 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v61 = sub_1DE8E1390();
  uint64_t v63 = v62;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  char v64 = (uint64_t (*)())swift_allocObject();
  *((void *)v64 + 2) = a1;
  *((void *)v64 + 3) = a2;
  *((void *)v64 + 4) = v61;
  *((void *)v64 + 5) = v63;
  v98[22] = sub_1DE8E0CA0;
  v98[23] = v64;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = a1;
  *(void *)(v65 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v66 = sub_1DE8E1390();
  uint64_t v68 = v67;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v69 = (uint64_t (*)())swift_allocObject();
  *((void *)v69 + 2) = a1;
  *((void *)v69 + 3) = a2;
  *((void *)v69 + 4) = v66;
  *((void *)v69 + 5) = v68;
  v98[24] = sub_1DE8E0CA4;
  v98[25] = v69;
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = a1;
  *(void *)(v70 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v71 = sub_1DE8E1390();
  uint64_t v73 = v72;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v74 = (uint64_t (*)())swift_allocObject();
  *((void *)v74 + 2) = a1;
  *((void *)v74 + 3) = a2;
  *((void *)v74 + 4) = v71;
  *((void *)v74 + 5) = v73;
  v98[26] = sub_1DE8E0CA8;
  v98[27] = v74;
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = a1;
  *(void *)(v75 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v76 = sub_1DE8E1390();
  uint64_t v78 = v77;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v79 = (uint64_t (*)())swift_allocObject();
  *((void *)v79 + 2) = a1;
  *((void *)v79 + 3) = a2;
  *((void *)v79 + 4) = v76;
  *((void *)v79 + 5) = v78;
  v98[28] = sub_1DE8E0CAC;
  v98[29] = v79;
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = a1;
  *(void *)(v80 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v81 = sub_1DE8E1390();
  uint64_t v83 = v82;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v84 = (uint64_t (*)())swift_allocObject();
  *((void *)v84 + 2) = a1;
  *((void *)v84 + 3) = a2;
  *((void *)v84 + 4) = v81;
  *((void *)v84 + 5) = v83;
  v98[30] = sub_1DE8E0CB0;
  v98[31] = v84;
  sub_1DE8E1600();
  uint64_t v85 = sub_1DE8E1370();
  uint64_t v87 = v86;
  swift_bridgeObjectRelease();
  uint64_t v88 = (void *)swift_allocObject();
  v88[2] = a1;
  v88[3] = a2;
  v88[4] = v85;
  _OWORD v88[5] = v87;
  uint64_t v89 = qword_1EBEA7DC8;
  swift_retain();
  if (v89 != -1) {
    swift_once();
  }
  id v90 = (id)qword_1EBEA7DC0;
  uint64_t v91 = sub_1DE8E1380();
  uint64_t v93 = v92;

  uint64_t v94 = (void *)swift_allocObject();
  _OWORD v94[2] = a1;
  v94[3] = a2;
  v94[4] = v91;
  v94[5] = v93;
  MEMORY[0x1F4188790](v94, v95);
  sub_1DE8E1360();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v96 = swift_allocObject();
  *(void *)(v96 + 16) = a1;
  *(void *)(v96 + 24) = a2;
  *(_OWORD *)(v96 + 32) = v99;
  return sub_1DE8E0C50;
}

double sub_1DE8E0070@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 9)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E00CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 10)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E0128@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 11)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E0184@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 16)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E01E0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 17)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E023C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 12)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E0298@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 14)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_1DE8E02F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DE832C10(a1, (uint64_t)v6);
  if (v7 == 2)
  {
    uint64_t v4 = v6[0];
    uint64_t v5 = v6[1];
  }
  else
  {
    uint64_t result = sub_1DE832C48((uint64_t)v6);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DE8E034C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DE832C10(a1, (uint64_t)v6);
  if (v7 == 3)
  {
    uint64_t v4 = v6[0];
    uint64_t v5 = v6[1];
  }
  else
  {
    uint64_t result = sub_1DE832C48((uint64_t)v6);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DE8E03A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DE832C10(a1, (uint64_t)v6);
  if (v7 == 4)
  {
    uint64_t v4 = v6[0];
    uint64_t v5 = v6[1];
  }
  else
  {
    uint64_t result = sub_1DE832C48((uint64_t)v6);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DE8E03FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DE832C10(a1, (uint64_t)v6);
  if (v7 == 5)
  {
    uint64_t v4 = v6[0];
    uint64_t v5 = v6[1];
  }
  else
  {
    uint64_t result = sub_1DE832C48((uint64_t)v6);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DE8E0454@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DE832C10(a1, (uint64_t)v6);
  if (v7 == 7)
  {
    uint64_t v4 = v6[0];
    uint64_t v5 = v6[1];
  }
  else
  {
    uint64_t result = sub_1DE832C48((uint64_t)v6);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DE8E04AC(uint64_t a1, uint64_t *a2, uint64_t a3, long long *a4, long long *a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v12 = *((void *)a4 + 2);
  uint64_t v13 = *a6;
  long long v14 = *(_OWORD *)(a3 + 16);
  v22[0] = *(_OWORD *)a3;
  v22[1] = v14;
  long long v15 = *(_OWORD *)(a3 + 48);
  void v22[2] = *(_OWORD *)(a3 + 32);
  void v22[3] = v15;
  uint64_t v23 = v11;
  long long v16 = *a4;
  uint64_t v21 = v12;
  long long v17 = a5[1];
  v19[0] = *a5;
  v19[1] = v17;
  long long v20 = v16;
  return sub_1DE8D7FF4(a1, v9, v10, (uint64_t)v22, (double *)&v20, v19, v13, a7, a8);
}

uint64_t sub_1DE8E0524@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DE832C10(a1, (uint64_t)v6);
  if (v7 == 8)
  {
    uint64_t v4 = v6[0];
    uint64_t v5 = v6[1];
  }
  else
  {
    uint64_t result = sub_1DE832C48((uint64_t)v6);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

double sub_1DE8E057C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 19)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1DE8E05D8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 20)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_1DE8E0634(uint64_t a1, void *a2, uint64_t a3, long long *a4, _OWORD *a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v9 = *((void *)a4 + 2);
  uint64_t v10 = *a6;
  long long v11 = *(_OWORD *)(a3 + 16);
  v19[0] = *(_OWORD *)a3;
  v19[1] = v11;
  long long v12 = *(_OWORD *)(a3 + 48);
  long long v19[2] = *(_OWORD *)(a3 + 32);
  v19[3] = v12;
  uint64_t v20 = v8;
  long long v13 = *a4;
  uint64_t v18 = v9;
  long long v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  long long v17 = v13;
  return sub_1DE8D8798(a1, a2, v19, (double *)&v17, (uint64_t *)v16, v10, a7, a8);
}

double sub_1DE8E0694@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE832C10(a1, (uint64_t)v4);
  if (v5 == 21)
  {
    sub_1DE833D4C(v4, a2);
  }
  else
  {
    sub_1DE832C48((uint64_t)v4);
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t (*sub_1DE8E06F0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t (*)(), void *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (**a5)()@<X8>))()
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  long long v12 = (void *)swift_allocObject();
  void v12[2] = a3;
  v12[3] = a4;
  v12[4] = v11;
  v12[5] = v10;
  swift_retain();
  uint64_t v13 = a2(sub_1DE8E0D0C, v12);
  uint64_t v15 = v14;
  double result = (uint64_t (*)())swift_release();
  if (!v5)
  {
    double result = (uint64_t (*)())swift_allocObject();
    *((void *)result + 2) = a3;
    *((void *)result + 3) = a4;
    *((void *)result + 4) = v13;
    *((void *)result + 5) = v15;
    *a5 = sub_1DE8E0CB8;
    a5[1] = result;
  }
  return result;
}

uint64_t (*sub_1DE8E07E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>))()
{
  double result = sub_1DE8DED48(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1DE8E0808(uint64_t a1, uint64_t a2, void *__src)
{
  memcpy(v7, __src, sizeof(v7));
  return (*v3)(a1, a2, v7);
}

uint64_t sub_1DE8E0864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

void *sub_1DE8E086C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1DE8E089C()
{
  return swift_release();
}

void *sub_1DE8E08A4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DE8E08E0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1DE8E0914(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DE8E095C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s7TrainerVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DE8E09B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E09CC()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1DE8E09F4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0A04(uint64_t a1, void *a2, uint64_t a3, long long *a4, _OWORD *a5, uint64_t *a6)
{
  return sub_1DE8E0634(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_1DE8E0A2C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0A48()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0A64()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0A80()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0A9C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0AB8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0AD4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DE8E0B0C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0B28()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0B44()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0B60()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0B70(uint64_t a1, uint64_t *a2, uint64_t a3, long long *a4, long long *a5, uint64_t *a6)
{
  return sub_1DE8E04AC(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_1DE8E0B98()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0BB4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0BD0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0BEC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DE8E0C08()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t (*sub_1DE8E0C30@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  return sub_1DE8E06F0(a1, *(uint64_t (**)(uint64_t (*)(), void *))(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DE8E0C50()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

long double sub_1DE8E0D4C(double a1, double a2, long double a3, double a4)
{
  long double v7 = 0.0;
  if (a3 != 0.0)
  {
    long double v7 = 555.0;
    double v9 = (1.0 - pow(a3, 555.0)) / (1.0 - a3);
    if (v9 >= a2) {
      double v9 = a2;
    }
    double v10 = 1.0 - (1.0 - a3) * v9;
    if (v10 != 0.0)
    {
      double v11 = log(v10);
      long double v7 = v11 / log(a3);
    }
  }
  return pow(a3, v7) * a1 + a4;
}

double sub_1DE8E0DFC(double a1, double a2, double a3, double a4)
{
  double v4 = a4;
  if (a2 > 0.0 && a3 > 0.0) {
    return ((a2 + -1.0) * exp2(-a1 / a3) + 1.0) * a4;
  }
  return v4;
}

double sub_1DE8E0E54(double a1, double a2, long double a3, long double a4, double a5)
{
  double v5 = a2;
  if (a5 <= a1)
  {
    if (a1 != 0.0) {
      return pow(a5 / a1, a3) * a2;
    }
  }
  else if (a1 != 1.0)
  {
    return 1.0 - (1.0 - a2) * pow((1.0 - a5) / (1.0 - a1), a4);
  }
  return v5;
}

double sub_1DE8E0EC8(double a1, double a2, double a3)
{
  if (a3 <= 0.0 || a1 <= 0.0) {
    return 1.0;
  }
  else {
    return exp2(-a3 / a1 * a2);
  }
}

long double sub_1DE8E0EF0(long double a1, long double a2, long double a3, double a4)
{
  double v7 = a1;
  if (a3 != 1.0 && a1 != 1.0) {
    double v7 = (1.0 - pow(a3, a1)) / (1.0 - a3);
  }
  return v7 + pow(a3, a2) * a4;
}

void sub_1DE8E0F68(long double a1, long double a2, double a3)
{
  if (a1 != 0.0)
  {
    double v5 = (1.0 - pow(a1, a2)) / (1.0 - a1);
    if (v5 >= a3) {
      double v5 = a3;
    }
    double v6 = 1.0 - (1.0 - a1) * v5;
    if (v6 != 0.0)
    {
      log(v6);
      log(a1);
    }
  }
}

long double sub_1DE8E0FF0(char a1, double a2, double a3, long double a4, double a5, long double a6, double a7, long double a8, long double a9, double a10)
{
  double v43 = sub_1DE8E11C0(a1, a3, a4, a8, a5, a6, a9);
  double v44 = a7;
  long double v25 = sub_1DE8E11C0(a1, a2, a4, a8, a10, a6, a9) * a7;
  BOOL v26 = a6 == 1.0 || v25 == 1.0;
  double v27 = 1.0 - a6;
  if (!v26) {
    long double v25 = (1.0 - pow(a6, v25)) / (1.0 - a6);
  }
  double v28 = pow(a6, a9);
  double v29 = 1.0;
  double v30 = 0.0;
  long double v31 = 0.0;
  if (a6 == 0.0)
  {
LABEL_17:
    if (a6 == v29) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  double v32 = 1.0 - v28;
  double v33 = v32 / v27;
  if (v32 / v27 >= a10) {
    double v34 = a10;
  }
  else {
    double v34 = v32 / v27;
  }
  double v35 = 1.0 - v27 * v34;
  double v30 = a9;
  if (v35 != 0.0)
  {
    double v36 = log(v35);
    long double v37 = log(a6);
    double v29 = 1.0;
    double v30 = v36 / v37;
  }
  if (v33 >= a5) {
    double v38 = a5;
  }
  else {
    double v38 = v33;
  }
  double v39 = 1.0 - v27 * v38;
  if (v39 == 0.0)
  {
    long double v31 = a9;
    goto LABEL_17;
  }
  double v42 = log(v39);
  long double v31 = v42 / log(a6);
  if (a6 == 1.0) {
    goto LABEL_20;
  }
LABEL_18:
  if (v30 != 1.0) {
    double v30 = (1.0 - pow(a6, v30)) / v27;
  }
LABEL_20:
  long double v40 = v25 + pow(a6, v43 * v44) * 0.0;
  return v30 + pow(a6, v31) * v40;
}

long double sub_1DE8E11C0(char a1, double a2, long double a3, long double a4, double a5, long double a6, long double a7)
{
  double v11 = 0.0;
  if (a3 == 0.0) {
    goto LABEL_5;
  }
  double v15 = (1.0 - pow(a3, a4)) / (1.0 - a3);
  if (v15 >= a2) {
    double v15 = a2;
  }
  double v16 = 1.0 - (1.0 - a3) * v15;
  double v11 = a4;
  if (v16 == 0.0)
  {
LABEL_5:
    if ((a1 & 1) == 0) {
      return v11;
    }
  }
  else
  {
    double v20 = log(v16);
    double v11 = v20 / log(a3);
    if ((a1 & 1) == 0) {
      return v11;
    }
  }
  if (a6 == 0.0)
  {
    if (v11 < 0.0) {
      return 0.0;
    }
  }
  else
  {
    double v17 = (1.0 - pow(a6, a7)) / (1.0 - a6);
    if (v17 >= a5) {
      double v17 = a5;
    }
    double v18 = 1.0 - (1.0 - a6) * v17;
    if (v18 != 0.0)
    {
      double v19 = log(v18);
      a7 = v19 / log(a6);
    }
    if (v11 - a7 < 0.0) {
      return 0.0;
    }
    else {
      return v11 - a7;
    }
  }
  return v11;
}

uint64_t sub_1DE8E12F0()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1DE8E1300()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1DE8E1310()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1DE8E1330()
{
  return MEMORY[0x1F40E5320]();
}

uint64_t sub_1DE8E1340()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1DE8E1350()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1DE8E1360()
{
  return MEMORY[0x1F4176DF8]();
}

uint64_t sub_1DE8E1370()
{
  return MEMORY[0x1F4176E00]();
}

uint64_t sub_1DE8E1380()
{
  return MEMORY[0x1F4176E08]();
}

uint64_t sub_1DE8E1390()
{
  return MEMORY[0x1F4176E10]();
}

uint64_t sub_1DE8E13A0()
{
  return MEMORY[0x1F41884F0]();
}

uint64_t sub_1DE8E13B0()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_1DE8E13C0()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_1DE8E13D0()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1DE8E13E0()
{
  return MEMORY[0x1F4183370]();
}

uint64_t sub_1DE8E13F0()
{
  return MEMORY[0x1F4183398]();
}

uint64_t sub_1DE8E1400()
{
  return MEMORY[0x1F4183408]();
}

uint64_t sub_1DE8E1410()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1DE8E1420()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1DE8E1430()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1DE8E1440()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1DE8E1450()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1DE8E1460()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1DE8E1470()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1DE8E1480()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1DE8E1490()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1DE8E14A0()
{
  return MEMORY[0x1F4183BE0]();
}

uint64_t sub_1DE8E14B0()
{
  return MEMORY[0x1F4183C60]();
}

uint64_t sub_1DE8E14C0()
{
  return MEMORY[0x1F4183C68]();
}

uint64_t sub_1DE8E14D0()
{
  return MEMORY[0x1F4183C78]();
}

uint64_t sub_1DE8E14E0()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t sub_1DE8E14F0()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1DE8E1500()
{
  return MEMORY[0x1F4183DA0]();
}

uint64_t sub_1DE8E1540()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1DE8E1550()
{
  return MEMORY[0x1F4183E18]();
}

uint64_t sub_1DE8E1560()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1DE8E1570()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1DE8E1580()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1DE8E1590()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_1DE8E15A0()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1DE8E15B0()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1DE8E15C0()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1DE8E15D0()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1DE8E15E0()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1DE8E15F0()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1DE8E1600()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1DE8E1610()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_1DE8E1620()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1DE8E1630()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_1DE8E1640()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1DE8E1650()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1DE8E1660()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1DE8E1670()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1DE8E1680()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1DE8E1690()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1DE8E16A0()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1DE8E16B0()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1DE8E16C0()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1DE8E16D0()
{
  return MEMORY[0x1F4188758]();
}

uint64_t sub_1DE8E16E0()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1DE8E16F0()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1DE8E1700()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1DE8E1710()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1DE8E1720()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1DE8E1730()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1DE8E1740()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1DE8E1750()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_1DE8E1760()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1DE8E1770()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1DE8E1780()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1DE8E1790()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1DE8E17A0()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1DE8E17B0()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1DE8E17C0()
{
  return MEMORY[0x1F41851A0]();
}

uint64_t sub_1DE8E17D0()
{
  return MEMORY[0x1F41851C8]();
}

uint64_t sub_1DE8E17E0()
{
  return MEMORY[0x1F41851E0]();
}

uint64_t sub_1DE8E17F0()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1DE8E1800()
{
  return MEMORY[0x1F41852B8]();
}

uint64_t sub_1DE8E1810()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1DE8E1820()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1DE8E1830()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1DE8E1840()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1DE8E1850()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1DE8E1860()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1DE8E1870()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1DE8E1880()
{
  return MEMORY[0x1F4185500]();
}

uint64_t sub_1DE8E1890()
{
  return MEMORY[0x1F4185508]();
}

uint64_t sub_1DE8E18A0()
{
  return MEMORY[0x1F4185510]();
}

uint64_t sub_1DE8E18B0()
{
  return MEMORY[0x1F4185518]();
}

uint64_t sub_1DE8E18C0()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1DE8E18D0()
{
  return MEMORY[0x1F4185538]();
}

uint64_t sub_1DE8E18E0()
{
  return MEMORY[0x1F4185540]();
}

uint64_t sub_1DE8E18F0()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1DE8E1900()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_1DE8E1910()
{
  return MEMORY[0x1F4185578]();
}

uint64_t sub_1DE8E1920()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_1DE8E1930()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1DE8E1940()
{
  return MEMORY[0x1F41855D8]();
}

uint64_t sub_1DE8E1950()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1DE8E1960()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_1DE8E1970()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1DE8E1980()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1DE8E1990()
{
  return MEMORY[0x1F4185630]();
}

uint64_t sub_1DE8E19A0()
{
  return MEMORY[0x1F4185638]();
}

uint64_t sub_1DE8E19B0()
{
  return MEMORY[0x1F4185640]();
}

uint64_t sub_1DE8E19C0()
{
  return MEMORY[0x1F4185648]();
}

uint64_t sub_1DE8E19D0()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1DE8E19E0()
{
  return MEMORY[0x1F4185660]();
}

uint64_t sub_1DE8E19F0()
{
  return MEMORY[0x1F4185668]();
}

uint64_t sub_1DE8E1A00()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1DE8E1A10()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1DE8E1A20()
{
  return MEMORY[0x1F41856A0]();
}

uint64_t sub_1DE8E1A30()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1DE8E1A40()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1DE8E1A50()
{
  return MEMORY[0x1F4185700]();
}

uint64_t sub_1DE8E1A60()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_1DE8E1A70()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1DE8E1A80()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1DE8E1A90()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_1DE8E1AA0()
{
  return MEMORY[0x1F41859E8]();
}

uint64_t sub_1DE8E1AB0()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t sub_1DE8E1AC0()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1DE8E1AD0()
{
  return MEMORY[0x1F4185A58]();
}

uint64_t sub_1DE8E1AE0()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_1DE8E1AF0()
{
  return MEMORY[0x1F4185AF0]();
}

uint64_t sub_1DE8E1B00()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1DE8E1B20()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_1DE8E1B30()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1DE8E1B40()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1DE8E1B50()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1DE8E1B60()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1DE8E1B70()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1DE8E1B80()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1DE8E1B90()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1DE8E1BA0()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1DE8E1BB0()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1DE8E1BC0()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1DE8E1BD0()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1DE8E1BE0()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1DE8E1BF0()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1DE8E1C00()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1DE8E1C10()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1DE8E1C40()
{
  return MEMORY[0x1F4186318]();
}

void bzero(void *a1, size_t a2)
{
}

long double exp(long double __x)
{
  MEMORY[0x1F40CBFE0](__x);
  return result;
}

long double exp2(long double __x)
{
  MEMORY[0x1F40CBFE8](__x);
  return result;
}

void free(void *a1)
{
}

long double log(long double __x)
{
  MEMORY[0x1F40CC878](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x1F40CD818](__x, __y);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getFunctionTypeMetadata3()
{
  return MEMORY[0x1F41865D8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1F41867B0]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}